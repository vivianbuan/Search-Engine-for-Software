{"_childDocuments_": [{"tags": ["angular", "webpack", "systemjs", "angular-cli"], "creation_date": 1465048787, "body_markdown": "I would like to track and update in this thread the latest best (and hopefully the simplest) method to bundle Angular (version 2, 4, ...) for production on a live web server.\r\n\r\nPlease include the Angular version within answers so we can track better when it moves to later releases.\r\n", "last_edit_date": 1494967786, "up_vote_count": 260, "link": "https://stackoverflow.com/questions/37631098/how-to-bundle-an-angular-app-for-production", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1466145131, "answer_id": 37874643, "path": "stack.gulp.answer", "score": 48, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1499862604, "last_edit_date": 1499862604, "body_markdown": "&lt;!-- language-all: lang-ts --&gt;\r\n\r\n`2.0.1 Final` using Gulp (TypeScript - Target: ES5) \r\n============\r\n\r\n----------\r\n\r\nOneTime Setup\r\n-------------\r\n\r\n - `npm install`  (run in cmd when direcory is projectFolder)\r\n\r\nBundling Steps\r\n----------\r\n\r\n - `npm run bundle`  (run in cmd when direcory is projectFolder)\r\n\r\n  *bundles are generated to **projectFolder / bundles /*** \r\n\r\nOutput\r\n------\r\n\r\n- `bundles/dependencies.bundle.js` [ **size: ~ 1 MB** (as small as possible) ]\r\n  - contains rxjs and angular dependencies, not the whole frameworks \r\n- `bundles/app.bundle.js` [ **size: depends on your project**, mine is **~ 0.5 MB** ]\r\n  - contains your project\r\n\r\nFile Structure\r\n----------\r\n\r\n\r\n - **projectFolder / app /** (all components, directives, templates, etc)\r\n - **projectFolder / gulpfile.js**\r\n\r\n&lt;/br&gt;\r\n\r\n    var gulp = require(&#39;gulp&#39;),\r\n      tsc = require(&#39;gulp-typescript&#39;),\r\n      Builder = require(&#39;systemjs-builder&#39;),\r\n      inlineNg2Template = require(&#39;gulp-inline-ng2-template&#39;);\r\n    \r\n    gulp.task(&#39;bundle&#39;, [&#39;bundle-app&#39;, &#39;bundle-dependencies&#39;], function(){});\r\n\r\n    gulp.task(&#39;inline-templates&#39;, function () {\r\n      return gulp.src(&#39;app/**/*.ts&#39;)\r\n        .pipe(inlineNg2Template({ useRelativePaths: true, indent: 0, removeLineBreaks: true}))\r\n        .pipe(tsc({\r\n          &quot;target&quot;: &quot;ES5&quot;,\r\n          &quot;module&quot;: &quot;system&quot;,\r\n          &quot;moduleResolution&quot;: &quot;node&quot;,\r\n          &quot;sourceMap&quot;: true,\r\n          &quot;emitDecoratorMetadata&quot;: true,\r\n          &quot;experimentalDecorators&quot;: true,\r\n          &quot;removeComments&quot;: true,\r\n          &quot;noImplicitAny&quot;: false\r\n        }))\r\n        .pipe(gulp.dest(&#39;dist/app&#39;));\r\n    });\r\n    \r\n    gulp.task(&#39;bundle-app&#39;, [&#39;inline-templates&#39;], function() {\r\n      // optional constructor options\r\n      // sets the baseURL and loads the configuration file\r\n      var builder = new Builder(&#39;&#39;, &#39;dist-systemjs.config.js&#39;);\r\n    \r\n      return builder\r\n        .bundle(&#39;dist/app/**/* - [@angular/**/*.js] - [rxjs/**/*.js]&#39;, &#39;bundles/app.bundle.js&#39;, { minify: true})\r\n        .then(function() {\r\n          console.log(&#39;Build complete&#39;);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(&#39;Build error&#39;);\r\n          console.log(err);\r\n        });\r\n    });\r\n    \r\n    gulp.task(&#39;bundle-dependencies&#39;, [&#39;inline-templates&#39;], function() {\r\n      // optional constructor options\r\n      // sets the baseURL and loads the configuration file\r\n      var builder = new Builder(&#39;&#39;, &#39;dist-systemjs.config.js&#39;);\r\n    \r\n      return builder\r\n        .bundle(&#39;dist/app/**/*.js - [dist/app/**/*.js]&#39;, &#39;bundles/dependencies.bundle.js&#39;, { minify: true})\r\n        .then(function() {\r\n          console.log(&#39;Build complete&#39;);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(&#39;Build error&#39;);\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n - **projectFolder / package.json** (same as [Quickstart guide][1], just shown devDependencies and npm-scripts required to bundle)\r\n\r\n&lt;/br&gt;\r\n\r\n    {\r\n      &quot;name&quot;: &quot;angular2-quickstart&quot;,\r\n      &quot;version&quot;: &quot;1.0.0&quot;,\r\n      &quot;scripts&quot;: {\r\n        ***\r\n         &quot;gulp&quot;: &quot;gulp&quot;,\r\n         &quot;rimraf&quot;: &quot;rimraf&quot;,\r\n         &quot;bundle&quot;: &quot;gulp bundle&quot;,\r\n         &quot;postbundle&quot;: &quot;rimraf dist&quot;\r\n      },\r\n      &quot;license&quot;: &quot;ISC&quot;,\r\n      &quot;dependencies&quot;: {\r\n        ***\r\n      },\r\n      &quot;devDependencies&quot;: {\r\n        &quot;rimraf&quot;: &quot;^2.5.2&quot;,\r\n        &quot;gulp&quot;: &quot;^3.9.1&quot;,\r\n        &quot;gulp-typescript&quot;: &quot;2.13.6&quot;,\r\n        &quot;gulp-inline-ng2-template&quot;: &quot;2.0.1&quot;,\r\n        &quot;systemjs-builder&quot;: &quot;^0.15.16&quot;\r\n      }\r\n    }\r\n\r\n- **projectFolder / systemjs.config.js** (same as [Quickstart guide][1], not available there anymore)\r\n\r\n&lt;/br&gt;\r\n\r\n    (function(global) {\r\n    \r\n      // map tells the System loader where to look for things\r\n      var map = {\r\n        &#39;app&#39;:                        &#39;app&#39;,\r\n        &#39;rxjs&#39;:                       &#39;node_modules/rxjs&#39;,\r\n        &#39;angular2-in-memory-web-api&#39;: &#39;node_modules/angular2-in-memory-web-api&#39;,\r\n        &#39;@angular&#39;:                   &#39;node_modules/@angular&#39;\r\n      };\r\n    \r\n      // packages tells the System loader how to load when no filename and/or no extension\r\n      var packages = {\r\n        &#39;app&#39;:                        { main: &#39;app/boot.js&#39;,  defaultExtension: &#39;js&#39; },\r\n        &#39;rxjs&#39;:                       { defaultExtension: &#39;js&#39; },\r\n        &#39;angular2-in-memory-web-api&#39;: { defaultExtension: &#39;js&#39; }\r\n      };\r\n    \r\n      var packageNames = [\r\n        &#39;@angular/common&#39;,\r\n        &#39;@angular/compiler&#39;,\r\n        &#39;@angular/core&#39;,\r\n        &#39;@angular/forms&#39;,\r\n        &#39;@angular/http&#39;,\r\n        &#39;@angular/platform-browser&#39;,\r\n        &#39;@angular/platform-browser-dynamic&#39;,\r\n        &#39;@angular/router&#39;,\r\n        &#39;@angular/router-deprecated&#39;,\r\n        &#39;@angular/testing&#39;,\r\n        &#39;@angular/upgrade&#39;,\r\n      ];\r\n    \r\n      // add package entries for angular packages in the form &#39;@angular/common&#39;: { main: &#39;index.js&#39;, defaultExtension: &#39;js&#39; }\r\n      packageNames.forEach(function(pkgName) {\r\n        packages[pkgName] = { main: &#39;index.js&#39;, defaultExtension: &#39;js&#39; };\r\n      });\r\n    \r\n      var config = {\r\n        map: map,\r\n        packages: packages\r\n      };\r\n    \r\n      // filterSystemConfig - index.asp&#39;s chance to modify config before we register it.\r\n      if (global.filterSystemConfig) { global.filterSystemConfig(config); }\r\n    \r\n      System.config(config);\r\n    \r\n    })(this);\r\n\r\n- **projetcFolder / dist-systemjs.config.js** (just shown the difference with systemjs.config.json)\r\n\r\n&lt;/br&gt;\r\n\r\n    var map = {\r\n        &#39;app&#39;:                        &#39;dist/app&#39;,\r\n      };\r\n\r\n- **projectFolder / index.html** (production) - *The order of the script tags is critical. Placing the `dist-systemjs.config.js` tag after the bundle tags would still allow the program to run but the dependency bundle would be ignored and dependencies would be loaded from the `node_modules` folder.*\r\n\r\n&lt;/br&gt;\r\n\r\n    &lt;!doctype html&gt;\r\n    &lt;html lang=&quot;en&quot;&gt;\r\n    &lt;head&gt;\r\n      &lt;meta charset=&quot;utf-8&quot;/&gt;\r\n      &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;\r\n      &lt;base href=&quot;/&quot;/&gt;\r\n      &lt;title&gt;Angular&lt;/title&gt;\r\n      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;/&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n    \r\n    &lt;my-app&gt;\r\n      loading...\r\n    &lt;/my-app&gt;\r\n    \r\n    &lt;!-- Polyfill(s) for older browsers --&gt;\r\n    &lt;script src=&quot;node_modules/core-js/client/shim.min.js&quot;&gt;&lt;/script&gt;\r\n    \r\n    &lt;script src=&quot;node_modules/zone.js/dist/zone.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;node_modules/reflect-metadata/Reflect.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;node_modules/systemjs/dist/system.js&quot;&gt;&lt;/script&gt;\r\n    \r\n\t&lt;script src=&quot;dist-systemjs.config.js&quot;&gt;&lt;/script&gt;\r\n\t&lt;!-- Project Bundles. Note that these have to be loaded AFTER the systemjs.config script --&gt;\r\n    &lt;script src=&quot;bundles/dependencies.bundle.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;bundles/app.bundle.js&quot;&gt;&lt;/script&gt;\r\n\r\n    &lt;script&gt;\r\n        System.import(&#39;app/boot&#39;).catch(function (err) {\r\n          console.error(err);\r\n        });\r\n    &lt;/script&gt;\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n- **projectFolder / app / boot.ts** is where the bootstrap is.\r\n\r\n\r\n----------\r\n\r\n\r\nThe best I could do yet :)\r\n\r\n  [1]: https://angular.io/docs/ts/latest/quickstart.html"}, {"tags": [], "down_vote_count": 1, "creation_date": 1470309527, "answer_id": 38765929, "path": "stack.gulp.answer", "score": 268, "up_vote_count": 269, "is_accepted": true, "last_activity_date": 1518855712, "last_edit_date": 1518855712, "body_markdown": "`2.x, 4.x, 5.x` (TypeScript) with Angular CLI\r\n------------------------------------------------------------------------\r\n\r\nOneTime Setup\r\n-------------\r\n\r\n - `npm install -g @angular/cli`\r\n - `ng new projectFolder` creates a new application\r\n\r\nBundling Step\r\n----------\r\n\r\n - `ng build --prod` (run in command line when directory is `projectFolder`)\r\n\r\n   *flag `prod` bundle for production (see the [Angular documentation][1] for the list of option included with the production flag).*\r\n\r\n - Compress using [Brotli compression][2] the resources using the following command \r\n\r\n    `for i in dist/*; do brotli $i; done`\r\n\r\n*bundles are generated by default to **projectFolder/dist/*** \r\n\r\nOutput\r\n------\r\n*Sizes with Angular `5.2.5` with CLI `1.7.0`*\r\n\r\n- `dist/main.[hash].bundle.js` Your application bundled [ size: 151 KB for new Angular CLI application empty, **36 KB** compressed].\r\n- `dist/polyfill.[hash].bundle.js` the polyfill dependencies (@angular, RxJS...) bundled [ size: 58 KB for new Angular CLI application empty, **17 KB** compressed].\r\n- `dist/index.html` entry point of your application.\r\n- `dist/inline.[hash].bundle.js` webpack loader\r\n- `dist/style.[hash].bundle.css` the style definitions\r\n- `dist/assets` resources copied from the Angular CLI assets configuration\r\n\r\nDeployment\r\n------\r\nYou can get a preview of your application using the `ng serve --prod` command that starts a local HTTP server such that the application with production files is accessible using http://localhost:4200.\r\n\r\nFor a production usage, you have to deploy all the files from the `dist` folder in the HTTP server of your choice.\r\n\r\n\r\n  [1]: https://github.com/angular/angular-cli/wiki/build#--dev-vs---prod-builds\r\n  [2]: https://en.wikipedia.org/wiki/Brotli"}, {"tags": [], "down_vote_count": 0, "creation_date": 1474225160, "answer_id": 39561478, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1478252675, "last_edit_date": 1478252675, "body_markdown": "### Angular 2 production workflow with SystemJs builder and gulp\r\n\r\nAngular.io have quick start tutorial. I copied this tutorial and extended with some simple gulp tasks for bundling everything to dist folder which can be copied to server and work just like that. I tried to optimize everything to work well on Jenkis CI, so node_modules can be cached and don&#39;t need to be copied.\r\n\r\nSource code with sample app on Github: https://github.com/Anjmao/angular2-production-workflow\r\n\r\n#### Steps to production\r\n1. Clean typescripts compiled js files and dist folder\r\n2. Compile typescript files inside app folder\r\n3. Use SystemJs bundler to bundle everything to dist folder with generated hashes for browser cache refresh\r\n4. Use gulp-html-replace to replace index.html scripts with bundled versions and copy to dist folder\r\n5. Copy everything inside assets folder to dist folder\r\n\r\n*Node*: While you always can create your own build process, but I highly recommend to use angular-cli, because it have all needed workflows and it works perfectly now. We are already using it in production and don&#39;t have any issues with angular-cli at all."}, {"tags": [], "down_vote_count": 0, "creation_date": 1475750345, "answer_id": 39893811, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1508455867, "last_edit_date": 1508455867, "body_markdown": "# Angular CLI 1.x.x (Works with Angular 4.x.x, 5.x.x)\r\n\r\nThis supports:\r\n\r\n- Angular 2.x and 4.x\r\n- Latest Webpack 2.x\r\n- Angular AoT compiler\r\n- Routing (normal and lazy)\r\n- SCSS\r\n- Custom file bundling (assets)\r\n- Additional development tools (linter, unit &amp; end-to-end test setups)\r\n\r\n## Initial Setup\r\n\r\n&lt;pre&gt;\r\nng new project-name --routing\r\n&lt;/pre&gt;\r\n\r\nYou can add `--style=scss` for SASS .scss support.\r\n\r\nYou can add `--ng4` for using Angular 4 instead of Angular 2.\r\n\r\nAfter creating the project, the CLI will automatically run `npm install` for you. If you want to use Yarn instead, or just want to look at the project skeleton without install, [check how to do it here][yarn-cli].\r\n\r\n[yarn-cli]: https://www.gurustop.net/blog/2017/01/26/use-yarn-npm-with-angular-cli\r\n\r\n## Bundle Steps\r\n\r\nInside the project folder:\r\n\r\n&lt;pre&gt;\r\nng build -prod\r\n&lt;/pre&gt;\r\n\r\n&lt;strike&gt;At the current version you need to to specify `--aot` manually, because it can be used in development mode (although that&#39;s not practical due to slowness).&lt;/strike&gt;\r\n\r\nThis also performs AoT compilation for even smaller bundles (no Angular compiler, instead, generated compiler output). The bundles are much smaller with AoT if you use Angular 4 as the generated code is smaller.  \r\nYou can test your app with AoT in development mode (sourcemaps, no minification) and AoT by running `ng build --aot`.\r\n\r\n## Output\r\n\r\nThe default output dir is `./dist`, although it can be changed in `./angular-cli.json`.\r\n\r\n### Deployable Files\r\n\r\nThe result of build step is the following:\r\n\r\n(Note: `&lt;content-hash&gt;` refers to hash / fingerprint of the contents of the file that&#39;s meant to be a cache busting way, this is possible since Webpack writes the `script` tags by itself)\r\n\r\n* `./dist/assets`  \r\n  Files copied as-is from `./src/assets/**`\r\n* `./dist/index.html`  \r\n  From `./src/index.html`, after adding webpack scripts to it  \r\n  Source template file is configurable in `./angular-cli.json`\r\n* `./dist/inline.js`  \r\n  Small webpack loader / polyfill\r\n* `./dist/main.&lt;content-hash&gt;.bundle.js`  \r\n  The main .js file containing all the .js scripts generated / imported\r\n* `./dist/styles.&lt;content-hash&gt;.bundle.js`  \r\n  When you use Webpack loaders for CSS, which is the CLI way, they are loaded via JS here\r\n\r\nIn older versions it also created gzipped versions for checking their size, and `.map` sourcemaps files, but this is no longer happening as people kept asking to remove these.\r\n\r\n### Other Files\r\n\r\nIn certain other occasions, you might find other unwanted files/folders:\r\n\r\n* `./out-tsc/`  \r\n  From `./src/tsconfig.json`&#39;s `outDir`\r\n* `./out-tsc-e2e/`  \r\n  From `./e2e/tsconfig.json`&#39;s `outDir`\r\n* `./dist/ngfactory/`  \r\n  From AoT compiler (not configurable without forking the CLI as of beta 16)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1475959310, "answer_id": 39937169, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1486136986, "last_edit_date": 1486136986, "body_markdown": "&lt;h2&gt;Angular 2 with Webpack (without CLI setup)&lt;/h2&gt;\r\n\r\n&lt;h3&gt;1- The tutorial by the Angular2 team&lt;/h3&gt;\r\n\r\nThe Angular2 team published a [tutorial][1] for using Webpack\r\n\r\n\r\n\r\nI created and placed the files from the tutorial in a small [GitHub seed project][2]. So you can quickly try the workflow.\r\n\r\n**Instructions**:\r\n\r\n - **npm install**\r\n   \r\n  \r\n - **npm start**. For development. This will create a virtual &quot;dist&quot; folder that will be livereloaded at your localhost address.\r\n\r\n - **npm run build**. For production. &quot;This will create a physical &quot;dist&quot; folder version    than can be sent to a webserver. The dist   folder is 7.8MB but only    234KB is actually required to load the   page in a web browser. \r\n&lt;br&gt;&lt;br&gt;\r\n&lt;h3&gt;2 - A Webkit starter kit&lt;/h3&gt;  \r\n\r\nThis [Webpack Starter Kit][3] offers some more testing features than the above tutorial and seem quite popular.\r\n   \r\n\r\n\r\n  [1]: https://angular.io/docs/ts/latest/guide/webpack.html\r\n  [2]: https://github.com/Psyzoo/angular2-webpack\r\n  [3]: https://github.com/AngularClass/angular2-webpack-starter"}, {"tags": [], "down_vote_count": 3, "creation_date": 1481107319, "answer_id": 41015286, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1499465893, "last_edit_date": 1499465893, "body_markdown": "I was also facing the same issue of getting ready a production ready bundle.\r\nI added the following line of code in package.json\r\n\r\n    &quot;build:prod&quot;: &quot;webpack --config config/webpack.prod.js  --progress --profile --bail&quot;,\r\n\r\nand called it using npm\r\n\r\n `npm run build:prod`\r\n\r\nIt did the trick of giving me the production ready js and its respective map files."}, {"tags": [], "down_vote_count": 0, "creation_date": 1484037752, "answer_id": 41564572, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1484387568, "last_edit_date": 1484387568, "body_markdown": "             \r\n            **Production build with\r\n            \r\n             - Angular Rc5\r\n             - Gulp\r\n             - typescripts \r\n             - systemjs**\r\n            \r\n            1)con-cat all js files  and css files include on index.html using  &quot;gulp-concat&quot;.\r\n              - styles.css (all css concat in this files)\r\n              - shims.js(all js concat in this files)\r\n            \r\n            2)copy all images and fonts as well as html files  with gulp task to &quot;/dist&quot;.\r\n            \r\n            3)Bundling -minify angular libraries and app components mentioned in systemjs.config.js file.\r\n             Using gulp  &#39;systemjs-builder&#39;\r\n            \r\n                SystemBuilder = require(&#39;systemjs-builder&#39;),\r\n                gulp.task(&#39;system-build&#39;, [&#39;tsc&#39;], function () {\r\n                    var builder = new SystemBuilder();\r\n                    return builder.loadConfig(&#39;systemjs.config.js&#39;)\r\n                        .then(function () {\r\n                            builder.buildStatic(&#39;assets&#39;, &#39;dist/app/app_libs_bundle.js&#39;)\r\n                        })\r\n                        .then(function () {\r\n                            del(&#39;temp&#39;)\r\n                        })\r\n                });\r\n        \r\n        \r\n        4)Minify bundles  using &#39;gulp-uglify&#39;\r\n    \r\n    jsMinify = require(&#39;gulp-uglify&#39;),\r\n    \r\n        gulp.task(&#39;minify&#39;, function () {\r\n            var options = {\r\n                mangle: false\r\n            };\r\n            var js = gulp.src(&#39;dist/app/shims.js&#39;)\r\n                .pipe(jsMinify())\r\n                .pipe(gulp.dest(&#39;dist/app/&#39;));\r\n            var js1 = gulp.src(&#39;dist/app/app_libs_bundle.js&#39;)\r\n                .pipe(jsMinify(options))\r\n                .pipe(gulp.dest(&#39;dist/app/&#39;));\r\n            var css = gulp.src(&#39;dist/css/styles.min.css&#39;);\r\n            return merge(js,js1, css);\r\n        });\r\n    \r\n    5) In index.html for production \r\n        \r\n        &lt;html&gt;\r\n        &lt;head&gt;\r\n            &lt;title&gt;Hello&lt;/title&gt;\r\n        \r\n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n            &lt;meta charset=&quot;utf-8&quot; /&gt;\r\n         \r\n           &lt;link rel=&quot;stylesheet&quot; href=&quot;app/css/styles.min.css&quot; /&gt;   \r\n           &lt;script type=&quot;text/javascript&quot; src=&quot;app/shims.js&quot;&gt;&lt;/script&gt;  \r\n           &lt;base href=&quot;/&quot;&gt;\r\n        &lt;/head&gt;\r\n         &lt;body&gt;\r\n        &lt;my-app&gt;Loading...&lt;/my-app&gt;\r\n         &lt;script type=&quot;text/javascript&quot; src=&quot;app/app_libs_bundle.js&quot;&gt;&lt;/script&gt; \r\n        &lt;/body&gt;\r\n        \r\n        &lt;/html&gt;\r\n\r\n     6) Now just copy your dist folder to &#39;/www&#39; in wamp server node need to copy node_modules in www.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484337301, "answer_id": 41642504, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1484337301, "body_markdown": "As of today I still find the Ahead-of-Time Compilation cookbook as the best recipe for production bundling. You can find it here: https://angular.io/docs/ts/latest/cookbook/aot-compiler.html\r\n\r\nMy experience with Angular 2 so far is that AoT creates the smallest builds with almost no loading time. And most important as the question here is about - you only need to ship a few files to production.\r\n\r\nThis seems to be because the Angular compiler will not be shipped with the production builds as the templates are compiled &quot;Ahead of Time&quot;. It&#39;s also very cool to see your HTML template markup transformed to javascript instructions that would be very hard to reverse engineer into the original HTML.\r\n\r\nI&#39;ve made a simple video where I demonstrate download size, number of files etc. for an Angular 2 app in dev vs AoT build - which you can see here:\r\n\r\nhttps://youtu.be/ZoZDCgQwnmQ\r\n\r\nYou&#39;ll find the source code used in the video here:\r\n\r\nhttps://github.com/fintechneo/angular2-templates\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1495504404, "answer_id": 44124569, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1495504404, "body_markdown": "&quot;Best&quot; depends on the scenario. There are times when you only care about the smallest possible single bundle, but in large apps you may have to consider lazy loading. At some point it becomes impractical to serve the entire app as a single bundle.\r\n\r\nIn the latter case Webpack is generally the best way since it supports code splitting.\r\n\r\nFor a single bundle I would consider Rollup, or the Closure compiler if you are feeling brave :-)\r\n\r\nI have created samples of all Angular bundlers I&#39;ve ever used here: http://www.syntaxsuccess.com/viewarticle/angular-production-builds\r\n\r\nThe code can be found here: https://github.com/thelgevold/angular-2-samples\r\n\r\nAngular version: 4.1.x"}, {"tags": [], "down_vote_count": 0, "creation_date": 1504250804, "answer_id": 45995234, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1504250804, "body_markdown": "You can deploy your angular application on `github` using \r\n[angular-cli-ghpages][1]\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/angular-cli-ghpages\r\n\r\ncheck out the link to find how to deploy using this cli.\r\n\r\nthe deployed website will be stored in some branch in `github` typically \r\n\r\ngh-pages\r\n\r\nuse can clone the git branch and use it like static website in your server \r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1504440269, "answer_id": 46023276, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1510898314, "last_edit_date": 1510898314, "body_markdown": "Just setup angular 4 with webpack 3 within a minute your development and production ENV bundle will become ready without any issue\r\njust follow the below github doc\r\n\r\n[https://github.com/roshan3133/angular2-webpack-starter][1]\r\n\r\n\r\n  [1]: https://github.com/roshan3133/angular2-webpack-starter"}], "title": "How to bundle an Angular app for production", "view_count": 110803, "answer_count": 11, "code_snippet": ["<code>2.x, 4.x, 5.x</code>", "<code>npm install -g @angular/cli</code>", "<code>ng new projectFolder</code>", "<code>ng build --prod</code>", "<code>projectFolder</code>", "<code>prod</code>", "<code>for i in dist/*; do brotli $i; done</code>", "<code>5.2.5</code>", "<code>1.7.0</code>", "<code>dist/main.[hash].bundle.js</code>", "<code>dist/polyfill.[hash].bundle.js</code>", "<code>dist/index.html</code>", "<code>dist/inline.[hash].bundle.js</code>", "<code>dist/style.[hash].bundle.css</code>", "<code>dist/assets</code>", "<code>ng serve --prod</code>", "<code>dist</code>", "<code>2.0.1 Final</code>", "<code>npm install</code>", "<code>npm run bundle</code>", "<code>bundles/dependencies.bundle.js</code>", "<code>bundles/app.bundle.js</code>", "<code>var gulp = require('gulp'),\n  tsc = require('gulp-typescript'),\n  Builder = require('systemjs-builder'),\n  inlineNg2Template = require('gulp-inline-ng2-template');\n\ngulp.task('bundle', ['bundle-app', 'bundle-dependencies'], function(){});\n\ngulp.task('inline-templates', function () {\n  return gulp.src('app/**/*.ts')\n    .pipe(inlineNg2Template({ useRelativePaths: true, indent: 0, removeLineBreaks: true}))\n    .pipe(tsc({\n      \"target\": \"ES5\",\n      \"module\": \"system\",\n      \"moduleResolution\": \"node\",\n      \"sourceMap\": true,\n      \"emitDecoratorMetadata\": true,\n      \"experimentalDecorators\": true,\n      \"removeComments\": true,\n      \"noImplicitAny\": false\n    }))\n    .pipe(gulp.dest('dist/app'));\n});\n\ngulp.task('bundle-app', ['inline-templates'], function() {\n  // optional constructor options\n  // sets the baseURL and loads the configuration file\n  var builder = new Builder('', 'dist-systemjs.config.js');\n\n  return builder\n    .bundle('dist/app/**/* - [@angular/**/*.js] - [rxjs/**/*.js]', 'bundles/app.bundle.js', { minify: true})\n    .then(function() {\n      console.log('Build complete');\n    })\n    .catch(function(err) {\n      console.log('Build error');\n      console.log(err);\n    });\n});\n\ngulp.task('bundle-dependencies', ['inline-templates'], function() {\n  // optional constructor options\n  // sets the baseURL and loads the configuration file\n  var builder = new Builder('', 'dist-systemjs.config.js');\n\n  return builder\n    .bundle('dist/app/**/*.js - [dist/app/**/*.js]', 'bundles/dependencies.bundle.js', { minify: true})\n    .then(function() {\n      console.log('Build complete');\n    })\n    .catch(function(err) {\n      console.log('Build error');\n      console.log(err);\n    });\n});\n</code>", "<code>{\n  \"name\": \"angular2-quickstart\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    ***\n     \"gulp\": \"gulp\",\n     \"rimraf\": \"rimraf\",\n     \"bundle\": \"gulp bundle\",\n     \"postbundle\": \"rimraf dist\"\n  },\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    ***\n  },\n  \"devDependencies\": {\n    \"rimraf\": \"^2.5.2\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-typescript\": \"2.13.6\",\n    \"gulp-inline-ng2-template\": \"2.0.1\",\n    \"systemjs-builder\": \"^0.15.16\"\n  }\n}\n</code>", "<code>(function(global) {\n\n  // map tells the System loader where to look for things\n  var map = {\n    'app':                        'app',\n    'rxjs':                       'node_modules/rxjs',\n    'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',\n    '@angular':                   'node_modules/@angular'\n  };\n\n  // packages tells the System loader how to load when no filename and/or no extension\n  var packages = {\n    'app':                        { main: 'app/boot.js',  defaultExtension: 'js' },\n    'rxjs':                       { defaultExtension: 'js' },\n    'angular2-in-memory-web-api': { defaultExtension: 'js' }\n  };\n\n  var packageNames = [\n    '@angular/common',\n    '@angular/compiler',\n    '@angular/core',\n    '@angular/forms',\n    '@angular/http',\n    '@angular/platform-browser',\n    '@angular/platform-browser-dynamic',\n    '@angular/router',\n    '@angular/router-deprecated',\n    '@angular/testing',\n    '@angular/upgrade',\n  ];\n\n  // add package entries for angular packages in the form '@angular/common': { main: 'index.js', defaultExtension: 'js' }\n  packageNames.forEach(function(pkgName) {\n    packages[pkgName] = { main: 'index.js', defaultExtension: 'js' };\n  });\n\n  var config = {\n    map: map,\n    packages: packages\n  };\n\n  // filterSystemConfig - index.asp's chance to modify config before we register it.\n  if (global.filterSystemConfig) { global.filterSystemConfig(config); }\n\n  System.config(config);\n\n})(this);\n</code>", "<code>var map = {\n    'app':                        'dist/app',\n  };\n</code>", "<code>dist-systemjs.config.js</code>", "<code>node_modules</code>", "<code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"/&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/&gt;\n  &lt;base href=\"/\"/&gt;\n  &lt;title&gt;Angular&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"/&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;my-app&gt;\n  loading...\n&lt;/my-app&gt;\n\n&lt;!-- Polyfill(s) for older browsers --&gt;\n&lt;script src=\"node_modules/core-js/client/shim.min.js\"&gt;&lt;/script&gt;\n\n&lt;script src=\"node_modules/zone.js/dist/zone.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"node_modules/reflect-metadata/Reflect.js\"&gt;&lt;/script&gt;\n&lt;script src=\"node_modules/systemjs/dist/system.js\"&gt;&lt;/script&gt;\n\n&lt;script src=\"dist-systemjs.config.js\"&gt;&lt;/script&gt;\n&lt;!-- Project Bundles. Note that these have to be loaded AFTER the systemjs.config script --&gt;\n&lt;script src=\"bundles/dependencies.bundle.js\"&gt;&lt;/script&gt;\n&lt;script src=\"bundles/app.bundle.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    System.import('app/boot').catch(function (err) {\n      console.error(err);\n    });\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>", "<code>inline-templates</code>", "<code>dist/app</code>", "<code>dist-systemjs.config.js</code>", "<code>app</code>", "<code>dist/app</code>", "<code>dist</code>", "<code>dist</code>", "<code>dist</code>", "<code>dist</code>", "<code>dist/app</code>", "<code>--style=scss</code>", "<code>--ng4</code>", "<code>npm install</code>", "<code>--aot</code>", "<code>ng build --aot</code>", "<code>./dist</code>", "<code>./angular-cli.json</code>", "<code>&lt;content-hash&gt;</code>", "<code>script</code>", "<code>./dist/assets</code>", "<code>./src/assets/**</code>", "<code>./dist/index.html</code>", "<code>./src/index.html</code>", "<code>./angular-cli.json</code>", "<code>./dist/inline.js</code>", "<code>./dist/main.&lt;content-hash&gt;.bundle.js</code>", "<code>./dist/styles.&lt;content-hash&gt;.bundle.js</code>", "<code>.map</code>", "<code>./out-tsc/</code>", "<code>./src/tsconfig.json</code>", "<code>outDir</code>", "<code>./out-tsc-e2e/</code>", "<code>./e2e/tsconfig.json</code>", "<code>outDir</code>", "<code>./dist/ngfactory/</code>", "<code>&lt;content-hash&gt;</code>", "<code>        **Production build with\n\n         - Angular Rc5\n         - Gulp\n         - typescripts \n         - systemjs**\n\n        1)con-cat all js files  and css files include on index.html using  \"gulp-concat\".\n          - styles.css (all css concat in this files)\n          - shims.js(all js concat in this files)\n\n        2)copy all images and fonts as well as html files  with gulp task to \"/dist\".\n\n        3)Bundling -minify angular libraries and app components mentioned in systemjs.config.js file.\n         Using gulp  'systemjs-builder'\n\n            SystemBuilder = require('systemjs-builder'),\n            gulp.task('system-build', ['tsc'], function () {\n                var builder = new SystemBuilder();\n                return builder.loadConfig('systemjs.config.js')\n                    .then(function () {\n                        builder.buildStatic('assets', 'dist/app/app_libs_bundle.js')\n                    })\n                    .then(function () {\n                        del('temp')\n                    })\n            });\n\n\n    4)Minify bundles  using 'gulp-uglify'\n\njsMinify = require('gulp-uglify'),\n\n    gulp.task('minify', function () {\n        var options = {\n            mangle: false\n        };\n        var js = gulp.src('dist/app/shims.js')\n            .pipe(jsMinify())\n            .pipe(gulp.dest('dist/app/'));\n        var js1 = gulp.src('dist/app/app_libs_bundle.js')\n            .pipe(jsMinify(options))\n            .pipe(gulp.dest('dist/app/'));\n        var css = gulp.src('dist/css/styles.min.css');\n        return merge(js,js1, css);\n    });\n\n5) In index.html for production \n\n    &lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello&lt;/title&gt;\n\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n\n       &lt;link rel=\"stylesheet\" href=\"app/css/styles.min.css\" /&gt;   \n       &lt;script type=\"text/javascript\" src=\"app/shims.js\"&gt;&lt;/script&gt;  \n       &lt;base href=\"/\"&gt;\n    &lt;/head&gt;\n     &lt;body&gt;\n    &lt;my-app&gt;Loading...&lt;/my-app&gt;\n     &lt;script type=\"text/javascript\" src=\"app/app_libs_bundle.js\"&gt;&lt;/script&gt; \n    &lt;/body&gt;\n\n    &lt;/html&gt;\n\n 6) Now just copy your dist folder to '/www' in wamp server node need to copy node_modules in www.\n</code>", "<code>github</code>", "<code>github</code>", "<code>\"build:prod\": \"webpack --config config/webpack.prod.js  --progress --profile --bail\",\n</code>", "<code>npm run build:prod</code>"], "path": "stack.gulp"}, {"tags": ["language-agnostic"], "creation_date": 1224863015, "body_markdown": "When I teach introductory computer science courses, I like to lighten the mood with some humor. Having a sense of fun about the material makes it less frustrating and more memorable, and it&#39;s even motivating if the joke requires some technical understanding to &#39;get it&#39;!\r\n\r\nI&#39;ll start off with a couple of my favorites:\r\n\r\n&gt; **Q:** How do you tell an introverted computer scientist from an extroverted computer scientist?\r\n&gt; \r\n&gt; **A:** An extroverted computer scientist looks at *your* shoes when he talks to you.\r\n\r\nAnd the classic:\r\n\r\n&gt; **Q:** Why do programmers always mix up Halloween and Christmas?\r\n&gt; \r\n&gt; **A:** Because Oct 31 == Dec 25!\r\n\r\nI&#39;m always looking for more of these, and I can&#39;t think of a better group of people to ask. What are your best programmer/computer science/programming jokes?", "last_edit_date": 1350081884, "up_vote_count": 859, "link": "https://stackoverflow.com/questions/234075/what-is-your-best-programmer-joke", "_childDocuments_": [{"tags": [], "down_vote_count": 10, "creation_date": 1224863194, "answer_id": 234086, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1224863194, "body_markdown": "&quot;There are 10 kinds of people in the world: Those that know binary &amp; those that don&#39;t&quot;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224863294, "answer_id": 234092, "path": "stack.gulp.answer", "score": 166, "up_vote_count": 168, "is_accepted": false, "last_activity_date": 1224863294, "body_markdown": "Two bytes meet.  The first byte asks, \u201cAre you ill?\u201d \r\n\r\nThe second byte replies, \u201cNo, just feeling a bit off.\u201d"}, {"tags": [], "down_vote_count": 17, "creation_date": 1224863344, "answer_id": 234093, "path": "stack.gulp.answer", "score": 589, "up_vote_count": 606, "is_accepted": false, "last_activity_date": 1224863344, "body_markdown": "Programming is like sex:\r\n\r\nOne mistake and you have to support it for the rest of your life. "}, {"tags": [], "down_vote_count": 76, "creation_date": 1224863366, "answer_id": 234095, "path": "stack.gulp.answer", "score": 528, "up_vote_count": 604, "is_accepted": false, "last_activity_date": 1224863366, "body_markdown": "so this programmer goes out on a date with a hot chick"}, {"tags": [], "down_vote_count": 5, "creation_date": 1224863385, "answer_id": 234098, "path": "stack.gulp.answer", "score": 45, "up_vote_count": 50, "is_accepted": false, "last_activity_date": 1234352628, "last_edit_date": 1234352628, "body_markdown": "Q: How many C++ programmers does it take to change a light bulb?\r\n\r\nA: You\u2019re still thinking procedurally. A properly designed light bulb object would inherit a change method from a generic light bulb class, so all you would have to do is call the light-bulb-change method."}, {"tags": [], "down_vote_count": 11, "creation_date": 1224863429, "answer_id": 234100, "path": "stack.gulp.answer", "score": 889, "up_vote_count": 900, "is_accepted": false, "last_activity_date": 1224863429, "body_markdown": "Q: how many programmers does it take to change a light bulb?\r\n\r\nA: none, that&#39;s a hardware problem"}, {"tags": [], "down_vote_count": 13, "creation_date": 1224863483, "answer_id": 234104, "path": "stack.gulp.answer", "score": 173, "up_vote_count": 186, "is_accepted": false, "last_activity_date": 1224863483, "body_markdown": "Q: how many Microsoft programmers does it take to change a light bulb?\r\n\r\nA: none, they just make darkness a standard and tell everyone &quot;this behavior is by design&quot;"}, {"tags": [], "down_vote_count": 6, "creation_date": 1224863590, "answer_id": 234114, "path": "stack.gulp.answer", "score": 401, "up_vote_count": 407, "is_accepted": false, "last_activity_date": 1250371400, "last_edit_date": 1250371400, "body_markdown": "    char*lie;\r\n    \r\n    \tdouble time, me= !0XFACE,\r\n    \r\n    \tnot; int rested,   get, out;\r\n    \r\n    \tmain(ly, die) char ly, **die ;{\r\n    \r\n    \t    signed char lotte,\r\n    \r\n    \r\n    dear; (char)lotte--;\r\n    \r\n    \tfor(get= !me;; not){\r\n    \r\n    \t1 -  out &amp; out ;lie;{\r\n    \r\n    \tchar lotte, my= dear,\r\n    \r\n    \t**let= !!me *!not+ ++die;\r\n    \r\n    \t    (char*)(lie=\r\n    \r\n    \r\n    &quot;The gloves are OFF this time, I detest you, snot\\n\\0sed GEEK!&quot;);\r\n    \r\n    \tdo {not= *lie++ &amp; 0xF00L* !me;\r\n    \r\n    \t#define love (char*)lie -\r\n    \r\n    \tlove 1s *!(not= atoi(let\r\n    \r\n    \t[get -me?\r\n    \r\n    \t    (char)lotte-\r\n    \r\n    \r\n    (char)lotte: my- *love -\r\n    \t\r\n    \t&#39;I&#39;  -  *love -  &#39;U&#39; -\r\n    \r\n    \t&#39;I&#39;  -  (long)  - 4 - &#39;U&#39; ])- !!\r\n    \t\r\n    \t(time  =out=  &#39;a&#39;));} while( my - dear\r\n    \r\n    \t&amp;&amp; &#39;I&#39;-1l  -get-  &#39;a&#39;); break;}}\r\n    \r\n    \t    (char)*lie++;\r\n    \r\n    \r\n    (char)*lie++, (char)*lie++; hell:0, (char)*lie;\r\n    \r\n    \tget *out* (short)ly   -0-&#39;R&#39;-  get- &#39;a&#39;^rested;\r\n    \r\n    \tdo {auto*eroticism,\r\n    \r\n    \tthat; puts(*( out\r\n    \r\n    \t    - &#39;c&#39;\r\n    \t\r\n    -(&#39;P&#39;-&#39;S&#39;) +die+ -2 ));}while(!&quot;you&#39;re at it&quot;);\r\n    \r\n    \r\n    for (*((char*)&amp;lotte)^=\r\n    \r\n    \t(char)lotte; (love ly) [(char)++lotte+\r\n    \r\n    \t!!0xBABE];){ if (&#39;I&#39; -lie[ 2 +(char)lotte]){ &#39;I&#39;-1l ***die; }\r\n    \r\n    \telse{ if (&#39;I&#39; * get *out* (&#39;I&#39;-1l **die[ 2 ])) *((char*)&amp;lotte) -=\r\n    \r\n    \t&#39;4&#39; - (&#39;I&#39;-1l); not; for(get=!\r\n    \r\n    \r\n    get; !out; (char)*lie  &amp;  0xD0- !not) return!!\r\n    \r\n    \t(char)lotte;}\r\n    \r\n    \r\n    (char)lotte;\r\n    \r\n    \tdo{ not* putchar(lie [out\r\n    \r\n    \t*!not* !!me +(char)lotte]);\r\n    \r\n    \tnot; for(;!&#39;a&#39;;);}while(\r\n    \r\n    \t    love (char*)lie);{\r\n    \r\n    \r\n    register this; switch( (char)lie\r\n    \r\n    \t[(char)lotte] -1s *!out) {\r\n    \r\n    \tchar*les, get= 0xFF, my; case&#39; &#39;:\r\n    \r\n    \t*((char*)&amp;lotte) += 15; !not +(char)*lie*&#39;s&#39;;\r\n    \r\n    \tthis +1s+ not; default: 0xF +(char*)lie;}}}\r\n    \r\n    \tget - !out;\r\n    \r\n    \tif (not--)\r\n    \r\n    \tgoto hell;\r\n    \r\n    \t    exit( (char)lotte);}\r\n\r\n\r\n[This entry][1] is the Obfuscated C Contest for 1990, is a true classic.  Ignoring that fact that it&#39;s a C program that actually compiles &amp; runs, the source code is in the form of a hilarious conversation between a man &amp; a woman.\r\n\r\n\r\n  [1]: http://www0.us.ioccc.org/1990/westley.c"}, {"tags": [], "down_vote_count": 4, "creation_date": 1224863638, "answer_id": 234117, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1271849109, "last_edit_date": 1271849109, "body_markdown": "There are 2 types of people.\r\n\r\n Those who understand binary; those who don&#39;t; and the ones who understand ternary."}, {"tags": [], "down_vote_count": 12, "creation_date": 1224863655, "answer_id": 234119, "path": "stack.gulp.answer", "score": 712, "up_vote_count": 724, "is_accepted": false, "last_activity_date": 1224863655, "body_markdown": "A computer science student is studying under a tree and another pulls up on a flashy new bike.  The first student asks, \u201cWhere\u2019d you get that?\u201d\r\n\r\nThe student on the bike replies, \u201cWhile I was studying outside, a beautiful girl pulled up on her bike.  She took off all her clothes and said, \u2018You can have anything you want\u2019.\u201d\r\n\r\nThe first student responds, \u201cGood choice!  Her clothes probably wouldn\u2019t have fit you.\u201d "}, {"tags": [], "down_vote_count": 0, "creation_date": 1224863725, "answer_id": 234123, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1224863725, "body_markdown": "How many hardware engineers does it take to change a lightbulb?\r\nNone, we can work around it in software.\r\n\r\nHow many software engineers does it take to change a lightbulb?\r\nNone, we&#39;ll just put it in the manual.\r\n\r\nHow many technical authors does it take to change a lightbulb?\r\nNone, the customer will figure it out.\r\n"}, {"tags": [], "down_vote_count": 4, "creation_date": 1224863771, "answer_id": 234126, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 39, "is_accepted": false, "last_activity_date": 1224863771, "body_markdown": "There are no shortcuts in life, unless you right click and find one... "}, {"tags": [], "down_vote_count": 18, "creation_date": 1224863788, "answer_id": 234128, "path": "stack.gulp.answer", "score": 381, "up_vote_count": 399, "is_accepted": false, "last_activity_date": 1224863788, "body_markdown": "There are 10 types of people in the world. Those who understand binary and those who have regular sex."}, {"tags": [], "down_vote_count": 9, "creation_date": 1224863855, "answer_id": 234134, "path": "stack.gulp.answer", "score": 187, "up_vote_count": 196, "is_accepted": false, "last_activity_date": 1224863855, "body_markdown": "Keyboard not found ... press F1 to continue "}, {"tags": [], "down_vote_count": 70, "creation_date": 1224863891, "answer_id": 234138, "path": "stack.gulp.answer", "score": 1434, "up_vote_count": 1504, "is_accepted": false, "last_activity_date": 1224863891, "body_markdown": "\u201cKnock, knock.\u201d\r\n\r\n\u201cWho\u2019s there?\u201d\r\n\r\nvery long pause\u2026.\r\n\r\n\u201cJava.\u201d \r\n\r\n:-o"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224863937, "answer_id": 234144, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1224863937, "body_markdown": "The new (insert current fast processor, but when I heard it, the value was &quot;cray&quot;) is so fast, it can execute an infinite loop in only 3 seconds."}, {"tags": [], "down_vote_count": 8, "creation_date": 1224864046, "answer_id": 234152, "path": "stack.gulp.answer", "score": 751, "up_vote_count": 759, "is_accepted": false, "last_activity_date": 1250367427, "last_edit_date": 1250367427, "body_markdown": "A physicist, an engineer and a programmer were in a car driving over a steep alpine pass when the brakes failed. The car was getting faster and faster, they were struggling to get round the corners and once or twice only the feeble crash barrier saved them from crashing down the side of the mountain. They were sure they were all going to die, when suddenly they spotted an escape lane. They pulled into the escape lane, and came safely to a halt.\r\n\r\nThe physicist said &quot;We need to model the friction in the brake pads and the resultant temperature rise, see if we can work out why they failed&quot;.\r\n\r\nThe engineer said &quot;I think I&#39;ve got a few spanners in the back. I&#39;ll take a look and see if I can work out what&#39;s wrong&quot;.\r\n\r\nThe programmer said &quot;Why don&#39;t we get going again and see if it&#39;s reproducible?&quot;\r\n"}, {"tags": [], "down_vote_count": 19, "creation_date": 1224864139, "answer_id": 234159, "path": "stack.gulp.answer", "score": 404, "up_vote_count": 423, "is_accepted": false, "last_activity_date": 1224864139, "body_markdown": "Jesus and Satan have an argument as to who is the better programmer. This goes on for a few hours until they come to an agreement to hold a contest with God as the judge. They set themselves before their computers and begin. They type furiously, lines of code streaming up the screen, for several hours straight.\r\n\r\nSeconds before the end of the competition, a bolt of lightning strikes, taking out the electricity. Moments later, the power is restored, and God announces that the contest is over. He asks Satan to show his work. Visibly upset, Satan cries and says, \u201cI have nothing. I lost it all when the power went out.\u201d\r\n\r\n\u201cVery well,\u201d says God, \u201clet us see if Jesus has fared any better.\u201d\r\n\r\nJesus presses a key, and the screen comes to life in vivid display, the voices of an angelic choir pour forth from the speakers.\r\n\r\nSatan is astonished. He stutters, \u201cB-b-but how?! I lost everything, yet Jesus\u2019 program is intact! How did he do it?\u201d\r\n\r\nGod chuckles, \u201cEverybody knows\u2026 Jesus saves.\u201d"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224864263, "answer_id": 234168, "path": "stack.gulp.answer", "score": 50, "up_vote_count": 52, "is_accepted": false, "last_activity_date": 1224864263, "body_markdown": "IT is a funny industry. Can you think of any other group of people that would make an acronym as an excuse to say sexy (SCSI) and have everyone mispronounce it as scuzzy."}, {"tags": [], "down_vote_count": 24, "creation_date": 1224864278, "answer_id": 234170, "path": "stack.gulp.answer", "score": 1335, "up_vote_count": 1359, "is_accepted": false, "last_activity_date": 1332387842, "last_edit_date": 1486562927, "body_markdown": "![It&#39;s not a bug...][1]\r\n\r\n\r\n  [1]: https://crossthebreeze.files.wordpress.com/2007/08/feature.jpg"}, {"tags": [], "down_vote_count": 11, "creation_date": 1224864603, "answer_id": 234182, "path": "stack.gulp.answer", "score": 643, "up_vote_count": 654, "is_accepted": false, "last_activity_date": 1224864603, "body_markdown": "Q: &quot;Whats the object-oriented way to become wealthy?&quot;\r\n\r\nA: Inheritance\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224866364, "answer_id": 234304, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1224866364, "body_markdown": "Not a joke per se, but a supposedly true story full of WTFs.\r\n\r\nHeard this told  on This Week in Tech podcast (in all seriousness with no sarcasm) as a true story illustrating the awesome programming skills of Bill Gates.\r\n\r\nA number of years ago Gates and some other major geek competed to see who&#39;s a better programmer.\r\nTheir programming challenge was to draw circles. \r\nGates used Basic.\r\nThe other programmer used assembler.\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224866812, "answer_id": 234331, "path": "stack.gulp.answer", "score": 46, "up_vote_count": 49, "is_accepted": false, "last_activity_date": 1224866812, "body_markdown": "A programmer to his friends (also programmers):\r\n\r\n&quot;I met a hot girl last night.  I brought her home and we began kissing furiously.  I sat her on the keyboard and ...&quot;\r\n\r\n&quot;You&#39;ve got a computer at home?  What&#39;s the CPU?&quot;"}, {"tags": [], "down_vote_count": 29, "creation_date": 1224867169, "answer_id": 234351, "path": "stack.gulp.answer", "score": 345, "up_vote_count": 374, "is_accepted": false, "last_activity_date": 1224867169, "body_markdown": "Here&#39;s one I came up with many, many, many years ago:\r\n\r\nI called the janitor the other day to see what he could do about my dingy\r\nlinoleum floor.  He said he would have been happy to loan me a polisher, but\r\nthat he hadn&#39;t the slightest idea what he had done with it.  I told him not to\r\nworry about it - that as a programmer it wasn&#39;t the first time I had\r\nexperienced a buffer allocation failure due to a memory error."}, {"tags": [], "down_vote_count": 5, "creation_date": 1224867307, "answer_id": 234362, "path": "stack.gulp.answer", "score": 130, "up_vote_count": 135, "is_accepted": false, "last_activity_date": 1224867307, "body_markdown": "Old C programmers don&#39;t die, they&#39;re just cast into void.\r\n\r\nIf you listen to a UNIX shell, can you hear the C?\r\n\r\nVi, vi, vi - the editor of the beast."}, {"tags": [], "down_vote_count": 19, "creation_date": 1224867821, "answer_id": 234399, "path": "stack.gulp.answer", "score": 1159, "up_vote_count": 1178, "is_accepted": false, "last_activity_date": 1255982274, "last_edit_date": 1255982274, "body_markdown": "A SQL query goes into a bar, walks up to two tables and asks, &quot;Can I join you?&quot;"}, {"tags": [], "down_vote_count": 13, "creation_date": 1224867911, "answer_id": 234405, "path": "stack.gulp.answer", "score": 239, "up_vote_count": 252, "is_accepted": false, "last_activity_date": 1224867911, "body_markdown": "I like to believe that I invented (or more likely independently discovered) this joke.\r\n\r\nQ: Why don&#39;t jokes work in octal?\r\n\r\nA: Because 7 10 11."}, {"tags": [], "down_vote_count": 28, "creation_date": 1224867958, "answer_id": 234409, "path": "stack.gulp.answer", "score": 848, "up_vote_count": 876, "is_accepted": false, "last_activity_date": 1224867958, "body_markdown": "A young Programmer and his Project Manager board a train headed through\r\nthe mountains on its way to Wichita. They can find no place to sit\r\nexcept for two seats right across the aisle from a young woman and her\r\ngrandmother. After a while, it is obvious that the young woman and the\r\nyoung programmer are interested in each other, because they are giving each other looks. Soon the train passes into a tunnel and it is pitch black. There is a sound of a kiss followed by the sound of a slap.\r\n\r\nWhen the train emerges from the tunnel, the four sit there without saying a word. The grandmother is thinking to herself, \u201cIt was very brash for that young man to kiss my granddaughter, but I\u2019m glad she slapped him.\u201d\r\n\r\nThe Project manager is sitting there thinking, \u201cI didn\u2019t know the young tech was brave enough to kiss the girl, but I sure wish she hadn\u2019t missed him when she slapped me!\u201d\r\n\r\nThe young woman was sitting and thinking, \u201cI\u2019m glad the guy kissed me, but I wish my grandmother had not slapped him!\u201d\r\n\r\nThe young programmer sat there with a satisfied smile on his face. He thought to himself, \u201cLife is good. How often does a guy have the chance to kiss a beautiful girl and slap his Project manager all at the same time!\u201d\r\n"}, {"tags": [], "down_vote_count": 17, "creation_date": 1224868046, "answer_id": 234419, "path": "stack.gulp.answer", "score": 1678, "up_vote_count": 1695, "is_accepted": false, "last_activity_date": 1294757323, "last_edit_date": 1294757323, "body_markdown": "A man flying in a hot air balloon suddenly realizes he\u2019s lost. He reduces height and spots a man down below. He lowers the balloon further and shouts to get directions, *&quot;Excuse me, can you tell me where I am?&quot;*  \r\n\r\nThe man below says: *&quot;Yes. You&#39;re in a hot air balloon, hovering 30 feet above this field.&quot;*\r\n\r\n*&quot;You must work in Information Technology,&quot;* says the balloonist.\r\n\r\n*&quot;I do&quot;* replies the man. *&quot;How did you know?&quot;*\r\n\r\n*&quot;Well,&quot;* says the balloonist, *&quot;everything you have told me is technically correct, but It&#39;s of no use to anyone.&quot;*\r\n\r\nThe man below replies, *&quot;You must work in management.&quot;*\r\n\r\n*&quot;I do,&quot;* replies the balloonist, *&quot;But how&#39;d you know?&quot;**\r\n\r\n*&quot;Well&quot;*, says the man, *&quot;you don\u2019t know where you are or where you\u2019re going, but you expect me to be able to help. You\u2019re in the same position you were before we met, but now it\u2019s my fault.&quot;*"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224868190, "answer_id": 234425, "path": "stack.gulp.answer", "score": 102, "up_vote_count": 102, "is_accepted": false, "last_activity_date": 1224868190, "body_markdown": "Nothing seems hard to the people who don&#39;t know what they&#39;re talking about."}, {"tags": [], "down_vote_count": 2, "creation_date": 1224868303, "answer_id": 234428, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1224868303, "body_markdown": "A depressed programmer hung himself on a binary tree..."}, {"tags": [], "down_vote_count": 2, "creation_date": 1224868311, "answer_id": 234430, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1224868311, "body_markdown": "[Referring to a developer who&#39;s being very combative or anti-social]\r\n\r\nIn Klingon culture, your behavior would be considered the early stages of a mating ritual."}, {"tags": [], "down_vote_count": 15, "creation_date": 1224868379, "answer_id": 234434, "path": "stack.gulp.answer", "score": 216, "up_vote_count": 231, "is_accepted": false, "last_activity_date": 1224868379, "body_markdown": "Female software engineers become sexually irresistible at the age of consent, and remain that way until about thirty minutes after clinical death. Longer if it&#39;s a warm day.\r\n\r\n[Scott Adams, creator of Dilbert]"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224868452, "answer_id": 234440, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1224868452, "body_markdown": "Programming in C is like fast dancing on a newly-waxed dance floor by people carrying razors."}, {"tags": [], "down_vote_count": 3, "creation_date": 1224868503, "answer_id": 234441, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1224868503, "body_markdown": "Error message: \r\n\r\nYour mouse has moved. The system must reboot to effect the change!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224868510, "answer_id": 234442, "path": "stack.gulp.answer", "score": 34, "up_vote_count": 35, "is_accepted": false, "last_activity_date": 1224868510, "body_markdown": "Program, noun: A magic spell cast upon a computer to enable it to turn input into error messages."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224868563, "answer_id": 234445, "path": "stack.gulp.answer", "score": 125, "up_vote_count": 126, "is_accepted": false, "last_activity_date": 1224868563, "body_markdown": "If Java is the answer, it must have been a really verbose question."}, {"tags": [], "down_vote_count": 5, "creation_date": 1224868632, "answer_id": 234449, "path": "stack.gulp.answer", "score": 742, "up_vote_count": 747, "is_accepted": false, "last_activity_date": 1224868632, "body_markdown": "When your hammer is C++, everything begins to look like a thumb."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224868706, "answer_id": 234450, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1224868706, "body_markdown": "If you think C++ is not overly complicated, just what is a protected abstract virtual base pure virtual private destructor, and when was the last time you needed one?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224868771, "answer_id": 234455, "path": "stack.gulp.answer", "score": 78, "up_vote_count": 78, "is_accepted": false, "last_activity_date": 1224868771, "body_markdown": "Software developers like to solve problems. If there are no problems handily available, they will create their own problems. "}, {"tags": [], "down_vote_count": 2, "creation_date": 1224868782, "answer_id": 234457, "path": "stack.gulp.answer", "score": 586, "up_vote_count": 588, "is_accepted": false, "last_activity_date": 1224868782, "body_markdown": "Q: How many prolog programmers does it take to change a lightbulb?\r\n\r\nA: Yes."}, {"tags": [], "down_vote_count": 2, "creation_date": 1224869045, "answer_id": 234470, "path": "stack.gulp.answer", "score": 187, "up_vote_count": 189, "is_accepted": false, "last_activity_date": 1256686355, "last_edit_date": 1256686355, "body_markdown": "My favorites are the &lt;a href=&quot;http://en.wikipedia.org/wiki/Hacker_koan&quot;&gt;hacker koans&lt;/a&gt; from the MIT AI subculture of the 1970s. For example:\r\n\r\n&lt;blockquote&gt;\r\n&lt;p&gt;A novice was trying to fix a broken Lisp machine by turning the power off and on.\r\n&lt;p&gt;\r\nKnight, seeing what the student was doing, spoke sternly: &quot;You cannot fix a machine by just power-cycling it with no understanding of what is going wrong.&quot;\r\n&lt;p&gt;\r\nKnight turned the machine off and on.\r\n&lt;p&gt;\r\nThe machine worked.&lt;/blockquote&gt;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224869166, "answer_id": 234476, "path": "stack.gulp.answer", "score": 260, "up_vote_count": 263, "is_accepted": false, "last_activity_date": 1224869166, "body_markdown": "A programmer puts two glasses on his bedside table before going to sleep.  A full one, in case he gets thirsty, and an empty one, in case he doesn&#39;t."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224869354, "answer_id": 234489, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1224869354, "body_markdown": "my cd-rom driver became corrupted and windows could no longer recognize/find my cd-rom drive. so the error message i got was &quot;please insert Windows CD&quot;\r\n\r\nat first i thought it was a joke..."}, {"tags": [], "down_vote_count": 2, "creation_date": 1224869504, "answer_id": 234500, "path": "stack.gulp.answer", "score": 41, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1224869504, "body_markdown": "JIT Happens! :)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224869518, "answer_id": 234502, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1224869518, "body_markdown": "A computer programmer is a person who passes as an exacting expert on the basis of being able to turn out, after innumerable key punching, an infinite series of incomprehensible answers calculated with micro-metric precision from vague assumptions based on debatable figures taken from inconclusive sources and carried out on instruments of problematical accuracy by persons of dubious reliability and questionable mentality for the avowed purpose of annoying and confounding a hopelessly defenseless department that was unfortunate enough to ask for the information in the first place."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224869631, "answer_id": 234514, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1224869631, "body_markdown": "The trouble with programmers is that you can never tell what they&#39;re doing until it&#39;s too late."}, {"tags": [], "down_vote_count": 6, "creation_date": 1224869662, "answer_id": 234518, "path": "stack.gulp.answer", "score": 280, "up_vote_count": 286, "is_accepted": false, "last_activity_date": 1268669602, "last_edit_date": 1268669602, "body_markdown": "Joke:\r\nA novice programmer was explained the meaning of RTFM.  He showed up the next day saying: &quot;So I went out and bought the Kama Sutra.  Now what?&quot;\r\n\r\nMeta-joke:\r\nIf you tell the joke above to a non-programmer, he will ask: &quot;What&#39;s RTFM?&quot;  A programmer will ask: &quot;What&#39;s Kama Sutra?&quot;\r\n\r\nMeta-meta-joke:\r\nIf instead of laughing in response in the meta-joke above you have asked &quot;I knew both, now who am I&quot;, then you are probably a programmer over the age of 30, who has realized the value of social skills, and who may even be married, but who is still an uber-geek who takes things way too literally.\r\n\r\nIf you have asked &quot;I googled both, now who am I&quot;, then you are probably a high-school kid who reads stackoverflow and takes things way too literally, but who had not yet known about RTFM or Kama Sutra.  Congratulations, you are well on your way to becoming an uber-geek.  Please try to acquire some social skills along the way.  You may not think so now, but they do come in handy."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224869763, "answer_id": 234527, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1224869763, "body_markdown": "Part of the inhumanity of the computer is that, once it is competently programmed and working smoothly, it is completely honest."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224869794, "answer_id": 234530, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1224869794, "body_markdown": "\r\nA J2EE architect, a dotNET guru, and a COBOL programmer walk into a bar. The barkeeper does a double-take and says... what is this, some kind of joke?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224869824, "answer_id": 234531, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1224869824, "body_markdown": "Computer Science [noun]: A study akin to numerology and astrology, but lacking the precision of the former and the success of the latter."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224869857, "answer_id": 234535, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 32, "is_accepted": false, "last_activity_date": 1224869857, "body_markdown": "For a study in problem solving, a programmer and a mathematician are each put into test kitchens and asked to boil water.  At the start of the study, each grabs a pencil and start scribbling notes furiously, covering the walls and counters with UML diagrams, heat exchange equations, proofs of completeness and so on.  After several hours of sweat, each picks up a pot, fills it with water at the sink, puts it on the stove, turns on the burner and waits.\r\n\r\nThen the kitchens are cleaned out and they&#39;re given the same task, except this time the pot already has water in it and is sitting on the stove.  The programmer grabs his pencil and starts drawing out class hierachies, designs a metalanguage with a LALR parser, and continues covering the kitchen with notes.  Finally the programmer turns on the burner and waits.\r\n\r\nThe mathematician stares at the pot for a few minutes, picks it up and dumps it out and writes on the counter, &quot;reduced to a problem already solved.&quot;"}, {"tags": [], "down_vote_count": 5, "creation_date": 1224869861, "answer_id": 234536, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1224869861, "body_markdown": "The company secretary took out one of the programmers for a drink, so they walked into a bar.  You would have thought that one of them would have seen it!"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224869920, "answer_id": 234542, "path": "stack.gulp.answer", "score": 133, "up_vote_count": 135, "is_accepted": false, "last_activity_date": 1224869920, "body_markdown": "\r\nTwo threads walk into a bar.  The barkeeper looks up and yells, &quot;*hey, I want don&#39;t any conditions race like time last!*&quot;\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224869939, "answer_id": 234545, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1248164555, "last_edit_date": 1248164555, "body_markdown": "If JavaScript is like walking alone late at night through a bad part of town with a pocket full of $20 bills, then ActiveX is like dropping your trousers in the middle of a maximum-security prison yard, bending over, and yelling &quot;Come and get it, boys!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224869989, "answer_id": 234550, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1224869989, "body_markdown": "Yosefk did three great ones a while back on his [blog][1]. This one&#39;s my favorite:\r\n\r\nWhen I tell it, I usually introduce it with &quot;This joke&#39;s about programming, but it&#39;s also about a plumber&quot;\r\n\r\n&gt; An airplane lands, and passengers come\r\n&gt; out. One of them notices a guy\r\n&gt; underneath the airplane. As you\u2019d\r\n&gt; guess, the guy is a plumber. The\r\n&gt; plumber touches some lock, and\r\n&gt; immediately gets covered by excrement\r\n&gt; streaming from an opening at the\r\n&gt; bottom of the plane.\r\n&gt; \r\n&gt; The next scene should really be a small piece of pantomime, but I\u2019ll have to get by with words alone. He slowly sweeps his right hand over his left arm, then the left hand over the right arm, and shakes his hands. The Passenger exclaims...\r\n&gt; \r\n&gt; **Passenger** (appalled): What on Earth\r\n&gt; makes you keep this job?\r\n&gt; \r\n&gt; **Plumber** (proudly): Hey, I\u2019m in the\r\n&gt; aerospace business!\r\n\r\n\r\n  [1]: http://www.yosefk.com/blog/the-cardinal-programming-jokes.html"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224869993, "answer_id": 234554, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1224869993, "body_markdown": "\r\nTwo Hibernate POJOs walk into a bar.  On the dance floor, in plain sight, they start to merge.  The bouncer walks over and shouts &quot;Hey, yooz two... get a *persistent context*!&quot;.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224870384, "answer_id": 234582, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1224870384, "body_markdown": "When we write programs that &quot;learn&quot;, it turns out we do and they don&#39;t."}, {"tags": [], "down_vote_count": 4, "creation_date": 1224870531, "answer_id": 234599, "path": "stack.gulp.answer", "score": 493, "up_vote_count": 497, "is_accepted": false, "last_activity_date": 1224870531, "body_markdown": "The fantastic element that explains the appeal of games to many developers is neither the fire-breathing monsters nor the milky-skinned, semi-clad sirens; it is the experience of carrying out a task from start to finish without any change in the user requirements. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1224870597, "answer_id": 234605, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1224870597, "body_markdown": "Every developer starts out by being Optimistic. Optimistic programmers assume that system calls will always succeed, there is always enough memory and disk space, and there really is a Santa Claus. "}, {"tags": [], "down_vote_count": 2, "creation_date": 1224871358, "answer_id": 234667, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1224871358, "body_markdown": "As a programmer of business applications, I live with the fear and knowledge that dark things are going on in the plumbing of components and libraries and systems - like so many strange subterranean slaves toiling in the bowels, secretly PUSHing and POPing and MOVing in registers."}, {"tags": [], "down_vote_count": 5, "creation_date": 1224872528, "answer_id": 234732, "path": "stack.gulp.answer", "score": 120, "up_vote_count": 125, "is_accepted": false, "last_activity_date": 1255097428, "last_edit_date": 1255097428, "body_markdown": "OK. Here&#39;s one I actually wrote myself about 15 years ago. It&#39;s archived online at [Adapower][1]. Be gentle:\r\n\r\n////////////////////////////\r\n\r\nI run across these lists everywhere. Unfortunately, they all seem to have been done by some brain-damaged soul who thinks C is a &quot;normal&quot; language. So I have made an attempt to come up with a new list that is a little more accurate, at least where I sit. \r\n\r\nAda : \r\nYou aim at your foot and pull the trigger, but the safety stops the gun from firing. The safety won&#39;t budge until you tag your foot with a sign reading &quot;Bullet Hole in this foot&quot;, and call the paramedics. You do so, then shoot yourself in the foot. \r\n\r\nC : \r\nThe gun comes in 38 pieces, with a set of assembly instructions. After painstakingly assembling the pieces, you pull the trigger and the gun promptly backfires and blows your head off. \r\n\r\nAssembly : \r\nThe same as C, except you have to hand-machine all the pieces as well. When you pull the trigger, your whole house explodes. \r\n\r\nJava: \r\nYou break into someone else&#39;s home and steal their water pistol. You then make a child gun that uses .38 rounds instead of water. When you pull the trigger on the child gun, nothing happens to you, but everyone who visits your house gets shot in the foot. \r\n\r\nBasic : \r\nYou aim the gun at a straight horizontal and pull the trigger, which causes a stream of water to be squirted straight down onto your foot. \r\n\r\nPerl : \r\nYou aim the gun at your foot and pull the trigger. There is no explosion, but gravity causes the bullet to slide out of the barrel and bounce off your foot. \r\n\r\nLisp : \r\nYou do a small part of the remaining work involved in shooting yourself in the foot. You then call yourself, and tell yourself to shoot yourself in the foot. \r\n\r\nPascal : \r\nThe same as Ada, except when you pull the trigger a little sign pops out reading &quot;BANG!&quot;. \r\n\r\nC++ : \r\nThe same as Java, except you try to build the parent water pistol using the gun tools from the C gun. When you pull the trigger on the child gun, the parent C gun explodes, spraying water everywhere, including the chamber of the child gun. This causes the child gun to backfire, blowing your head off. \r\n\r\nVisual C++ : \r\nThe same as C++, except that the bullets, the gun parts, the tools you use to put it together, the hospital you get taken to afterwards, and the ambulance that takes you there are all owned by the same company. \r\n\r\nAPL : \r\nWhenever you pull the trigger, no matter where you aim the gun, the bullet ricochets off of 13 objects and lodges in your foot. The gun has been examined by ballistics experts, mechanical engineers, and even the person who made it, and none of them can figure out how it works. \r\n\r\nFORTRAN : \r\nWhen you aim the gun at your foot and pull the trigger, a table indexing error causes the gun to shoot its firing pin into your foot instead of the bullet. \r\n \r\n\r\n\r\n----------\r\nIn the year since I posted this, the comments have grown to the point where I think they are as valuable as my original answer. Currently there are comments proposing entries for the following languages:\r\n\r\n - Actionscript\r\n - Applescript\r\n - Bash \r\n - C# (2)\r\n - Erlang\r\n - INTERCAL\r\n - Java script\r\n - Objective-C / Smalltalk\r\n - PHP\r\n - Python (5)\r\n - Ruby\r\n - SQL\r\n - TCL\r\n - Visual Basic\r\n\r\nThere are also two alternate entries for Perl, and one for C++\r\n\r\n  [1]: http://www.adapower.com/index.php?Command=Class&amp;ClassID=Humor&amp;CID=8"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224872933, "answer_id": 234752, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1224872933, "body_markdown": "I know I already posted one, but this is my favorite bit of computer humor ever. Whenever the network goes down, will often mention the name of Shub-Internet in a hushed voice.\r\n\r\nI cribbed this copy from [FOLDoC][1], which I think cribbed it in turn from the [Jargon file][2].\r\n\r\nShub-Internet\r\n/shuhb in&#39;t*r-net/ (MUD, from H. P. Lovecraft&#39;s evil fictional deity &quot;Shub-Niggurath&quot;, the Black Goat with a Thousand Young) The harsh personification of the Internet, Beast of a Thousand Processes, Eater of Characters, Avatar of Line Noise, and Imp of Call Waiting; the hideous multi-tendriled entity formed of all the manifold connections of the net. A sect of MUDders worships Shub-Internet, sacrificing objects and praying for good connections. To no avail - its purpose is malign and evil, and is the cause of all network slowdown. Often heard as in &quot;Freela casts a tac nuke at Shub-Internet for slowing her down.&quot; (A forged response often follows along the lines of: &quot;Shub-Internet gulps down the tac nuke and burps happily.&quot;) Also cursed by users of FTP and telnet when the system slows down. The dread name of Shub-Internet is seldom spoken aloud, as it is said that repeating it three times will cause the being to wake, deep within its lair beneath the Pentagon. \r\n\r\n\r\n  [1]: http://Foldoc\r\n  [2]: http://catb.org/jargon/"}, {"tags": [], "down_vote_count": 12, "creation_date": 1224872990, "answer_id": 234757, "path": "stack.gulp.answer", "score": 124, "up_vote_count": 136, "is_accepted": false, "last_activity_date": 1224872990, "body_markdown": "what do Computer Science students use for birth control?\r\n\r\nTheir personalities. "}, {"tags": [], "down_vote_count": 11, "creation_date": 1224874589, "answer_id": 234854, "path": "stack.gulp.answer", "score": 96, "up_vote_count": 107, "is_accepted": false, "last_activity_date": 1359063270, "last_edit_date": 1359063270, "body_markdown": "I am surprised this one has not already been posted.  I guess I will do the honors. :)\r\n\r\n![alt text][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/JH2rQ.jpg"}, {"tags": [], "down_vote_count": 8, "creation_date": 1224874968, "answer_id": 234868, "path": "stack.gulp.answer", "score": 581, "up_vote_count": 589, "is_accepted": false, "last_activity_date": 1262775226, "last_edit_date": 1262775226, "body_markdown": "To understand what recursion is, you must first understand recursion."}, {"tags": [], "down_vote_count": 19, "creation_date": 1224875472, "answer_id": 234894, "path": "stack.gulp.answer", "score": 328, "up_vote_count": 347, "is_accepted": false, "last_activity_date": 1224875472, "body_markdown": "These two strings walk into a bar and sit down. The bartender says, &quot;So what&#39;ll it be?&quot;\r\n\r\nThe first string says, &quot;I think I&#39;ll have a beer quag fulk boorg jdk^CjfdLk jk3s d#f67howe%^U r89nvy owmc63^Dz x.xvcu&quot;\r\n\r\n&quot;Please excuse my friend,&quot; the second string says, &quot;He isn&#39;t null-terminated.&quot;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224875868, "answer_id": 234924, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1224875868, "body_markdown": "An astronomer, physicist, mathematician and programmer are on a train going to a conference.  \r\nAs they reach $COUNTRY the astronomer sees a black cow and says - see all cows in $COUNTRY are black.  \r\nNo says the physicist, you mean there is evidence of some black cows in $COUNTRY.   \r\nThe mathematician says - there exists at least one cow in $COUNTRY that is black on one side.\r\n\r\nAnd the programmer - look! moo-moos !\r\n\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224880404, "answer_id": 235163, "path": "stack.gulp.answer", "score": 28, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1224880404, "body_markdown": "A classic one from learning finite state machines: &quot;Kleeneliness is next to G&#246;deliness&quot;"}, {"tags": [], "down_vote_count": 8, "creation_date": 1224881317, "answer_id": 235212, "path": "stack.gulp.answer", "score": 244, "up_vote_count": 252, "is_accepted": false, "last_activity_date": 1224881317, "body_markdown": "Drug dealers:\r\n\r\n  - Refer to their clients as &quot;users&quot;.\r\n  - &quot;The first one&#39;s free!&quot;\r\n  - Have important South-East Asian connections (to help move the stuff).\r\n  - Strange jargon: &quot;Stick&quot;, &quot;Rock&quot;, &quot;Dime bag,&quot; &quot;E&quot;.\r\n  - Realize that there&#39;s tons of cash in the 14- to 25-year-old market.\r\n  - Job is assisted by industry&#39;s producing newer, more potent mixes. \r\n  - Often seen in the company of pimps and hustlers. \r\n  - Their product causes unhealthy addictions. \r\n  - Do your job well, and you can sleep with sexy movie stars who depend on you.\r\n\r\nSoftware developers:\r\n\r\n  - Refer to their clients as &quot;users&quot;.\r\n  - &quot;Download a free trial version...&quot;\r\n  - Have important South-East Asian connections (to help debug the code).\r\n  - Strange jargon: &quot;SCSI&quot;, &quot;ISDN&quot;, &quot;Java&quot;, &quot;RTFM&quot;\r\n  - Realize that there&#39;s tons of cash in the 14- to 25-year-old market.\r\n  - Job is assisted by industry&#39;s producing newer, faster machines.\r\n  - Often seen in the company of marketing people and venture capitalists.\r\n  - Their product causes unhealthy addictions - DOOM. Quake. SimCity. Duke Nukem 3D.\r\n  - Damn! Damn! DAMN!!!\r\n \r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224883224, "answer_id": 235305, "path": "stack.gulp.answer", "score": 209, "up_vote_count": 212, "is_accepted": false, "last_activity_date": 1224883224, "body_markdown": "This is from the 70s.  It can easily be updated to the present day, but it has a certain charm just the way it is:\r\n\r\nThree women sat discussing their husbands and their sex lives.\r\n\r\n&quot;My husband&#39;s a wrestler,&quot; said the first.  &quot;He&#39;s really strong and aggressive in bed.&quot;\r\n\r\n&quot;My husband&#39;s an artist,&quot; said the second.  &quot;He&#39;s really gentle and sensitive.&quot;\r\n\r\n&quot;My husband&#39;s an IBM salesman,&quot; said the third.  &quot;He sits on the edge of the bed and tells me how good it&#39;s going to be when I finally get it.&quot;"}, {"tags": [], "down_vote_count": 8, "creation_date": 1224883286, "answer_id": 235307, "path": "stack.gulp.answer", "score": 575, "up_vote_count": 583, "is_accepted": false, "last_activity_date": 1224883286, "body_markdown": "A guy is standing on the corner of the street smoking one cigarette after another. A lady walking by notices him and says&lt;br/&gt;\r\n&quot;Hey, don&#39;t you know that those things can kill you? I mean, didn&#39;t you see the giant warning on the box?!&quot;&lt;br/&gt;\r\n&quot;That&#39;s OK&quot; says the guy, puffing casually &quot;I&#39;m a computer programmer&quot;&lt;br/&gt;\r\n&quot;So? What&#39;s that got to do with anything?&quot;&lt;br/&gt;\r\n&quot;We don&#39;t care about warnings. We only care about errors.&quot;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224886283, "answer_id": 235428, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1224886283, "body_markdown": "Q:  What do database administrators give their daughters to prevent them from having child records?\r\n\r\nA:  Foreign Key Constraints!\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224891092, "answer_id": 235600, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1224891092, "body_markdown": "More of a pun than a joke:\r\n\r\nOn a clear disk you can seek forever."}, {"tags": [], "down_vote_count": 5, "creation_date": 1224892022, "answer_id": 235619, "path": "stack.gulp.answer", "score": 165, "up_vote_count": 170, "is_accepted": false, "last_activity_date": 1230657601, "last_edit_date": 1230657601, "body_markdown": "**Top 10 things likely to be overheard from a Klingon Programmer**\r\n\r\n 1. Specifications are for the weak and\r\n    timid!\r\n 2. You question the worthiness of my\r\n    code? I should kill you where you\r\n    stand!\r\n 3. Indentation? I will show you how\r\n    to indent when I indent your skull!\r\n 4. What is this talk of release?\r\n    Klingons do not release software. Our software escapes\r\n    leaving a bloody trail of designers\r\n    and quality assurance people in its\r\n    wake.\r\n 5. Klingon function calls do not have\r\n    parameters - they have arguments\r\n    \\- and they ALWAYS WIN THEM.\r\n 6. Debugging? Klingons do not debug.\r\n    Our software does not coddle the\r\n    weak.\r\n 7. A True Klingon Warrior does not\r\n    comment on his code!\r\n 8. Klingon software does not have BUGS.\r\n    It has FEATURES, and those features\r\n    are too sophisticated for a Romulan\r\n    pig like you to understand.\r\n 9. You cannot truly appreciate Dilbert\r\n    unless you&#39;ve read it in the\r\n    original Klingon.\r\n 10. Our users will know fear and cower\r\n     before our software! Ship it! Ship\r\n     it and let them flee like the dogs\r\n     they are!\r\n\r\n"}, {"tags": [], "down_vote_count": 9, "creation_date": 1224901668, "answer_id": 235790, "path": "stack.gulp.answer", "score": 467, "up_vote_count": 476, "is_accepted": false, "last_activity_date": 1224901668, "body_markdown": "In the 1960&#39;s the KGB was very interested in learning everything possible about the American space program, sending all sorts of spies to find every possible piece of information.\r\n\r\nOne afternoon, a breathless spy returned to headquarters with a page of paper in his hand, excitedly shouting to his superior, &quot;Comrade! Comrade! The Americans are using Lisp to write their rocket launching software!&quot;\r\n\r\nThe commander was skeptical. &quot;How do you know?&quot;\r\n\r\n&quot;I broke into their research lab and stole a page from the teletype machine! It&#39;s not the whole program, but it&#39;s the final page and contains the **concluding** **logic** of the program! See for yourself!!!!&quot;\r\n\r\nThe commander looked at the page and smiled:\r\n\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    )))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    )))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))))))))))))))))))\r\n    )))))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))))\r\n    ))))))))))))))))))))))))))))))))))))\r\n    )))))))))))))))))))))))))))\r\n    )))))))))))))))))))))))))\r\n    ))))))))))))))))))))))\r\n    ))))))))))))))))))))\r\n    ))))))))))))))))\r\n    )))))))))))))))\r\n    )))))))))))\r\n    ))))\r\n    )))\r\n    ))\r\n    ))\r\n    )\r\n"}, {"tags": [], "down_vote_count": 9, "creation_date": 1224903132, "answer_id": 235810, "path": "stack.gulp.answer", "score": 247, "up_vote_count": 256, "is_accepted": false, "last_activity_date": 1277208175, "last_edit_date": 1277208175, "body_markdown": "A foo walks into a bar, takes a look around and says &quot;Hello World!&quot; and meet up his friend Baz"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224904547, "answer_id": 235827, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1224962507, "last_edit_date": 1224962507, "body_markdown": "There are three books of *Murphy&#39;s Law*, by Arthur Bloch, from the early 80&#39;s.  A number of my favorites are found in those three volumes:\r\n\r\n## Osborn&#39;s Law ##\r\nVariables won&#39;t; Constants aren&#39;t.\r\n\r\n## Laws of Computer Programming ##\r\n\r\n 1. Any given program, when running, is obsolete.\r\n 2. Any given program costs more and takes longer.\r\n 3. If a program is useful, it will have to be changed.\r\n 4. If a program is useless, it will have to be documented.\r\n 5. Any given program will expand to fill all available memory.\r\n 6. The value of a given program is proportional to the weight of its output.\r\n 7. Program complexity grows until it exceeds the capability of the programmer to maintain it.\r\n\r\n## Troutman&#39;s Postulates (5 &amp; 6) ##\r\n 5. If the input editor has been designed to reject all bad input, an ingenious idiot will discover a method to get bad data past it.\r\n 6. Profanity is the one language all programmers know best.\r\n\r\n## Lubarsky&#39;s Law of Cybernetic Entomology ##\r\nThere&#39;s always one more bug.\r\n\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224906304, "answer_id": 235857, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1224906304, "body_markdown": "    if(you.AreHappy &amp;&amp; you.KnowIt){\r\n      you.ClapHands();\r\n    }"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224911327, "answer_id": 235931, "path": "stack.gulp.answer", "score": 71, "up_vote_count": 72, "is_accepted": false, "last_activity_date": 1224962306, "last_edit_date": 1224962306, "body_markdown": "Life Before the Computer\r\n\r\nAn application was for employment&lt;br&gt;\r\nA program was a TV show&lt;br&gt;\r\nA cursor used profanity&lt;br&gt;\r\nA keyboard was a piano!\r\n\r\nMemory was something that you lost with age&lt;br&gt;\r\nA CD was a bank account&lt;br&gt;\r\nAnd if you had a 3-inch floppy&lt;br&gt;\r\nYou hoped nobody found out!\r\n\r\nCompress was something you did to garbage&lt;br&gt;\r\nNot something you did to a file&lt;br&gt;\r\nAnd if you unzipped anything in public&lt;br&gt;\r\nYou&#39;d be in jail for awhile!\r\n\r\nLog on was adding wood to a fire&lt;br&gt;\r\nHard drive was a long trip on the road&lt;br&gt;\r\nA mouse pad was where a mouse lived&lt;br&gt;\r\nAnd a backup happened to your commode!\r\n\r\nCut - you did with a pocket knife&lt;br&gt;\r\nPaste you did with glue&lt;br&gt;\r\nA web was a spider&#39;s home&lt;br&gt;\r\nAnd a virus was the flu!\r\n\r\nI guess I&#39;ll stick to my pad and paper&lt;br&gt;\r\nAnd the memory in my head&lt;br&gt;\r\nI hear nobody&#39;s been killed in a computer crash&lt;br&gt;\r\nBut when it happens they wish they were dead!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224911428, "answer_id": 235932, "path": "stack.gulp.answer", "score": 295, "up_vote_count": 296, "is_accepted": false, "last_activity_date": 1244582892, "last_edit_date": 1244582892, "body_markdown": "Unix is user friendly. It&#39;s just very particular about who its friends are."}, {"tags": [], "down_vote_count": 3, "creation_date": 1224925795, "answer_id": 236138, "path": "stack.gulp.answer", "score": 309, "up_vote_count": 312, "is_accepted": false, "last_activity_date": 1247045534, "last_edit_date": 1247045534, "body_markdown": "Told by Gerald Weinberg in various incarnations:\r\n\r\nA group of ten top software engineers is sent to a class for aspiring managers. The teacher walks in and asks this question:\r\n\r\n&quot;You work for a software company which develops avionics (software that controls the instruments of an airplane). One day you are taking a business trip. As you get on the plane you see a plaque that says this plane is using a beta of the software your team developed. Who would get off?&quot;\r\n\r\nNine developers raised their hands. The teacher looked at the tenth and asked, &quot;Why would you stay on?&quot;\r\n\r\nThe tenth said, &quot;if my team wrote the software, the plane would not get off the ground, much less crash.&quot;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1224937250, "answer_id": 236315, "path": "stack.gulp.answer", "score": 226, "up_vote_count": 229, "is_accepted": false, "last_activity_date": 1506101297, "last_edit_date": 1506101297, "body_markdown": "A classic from Futurama:\r\n\r\n[![Fry walking by a framed picture containing text that reads: &quot;10 HOME : 20 SWEET : 30 GOTO 10&quot;][1]][2]\r\n\r\n\u200b\u200b\u200b\u200b\u200b\u200b\r\n\r\n  [1]: https://i.stack.imgur.com/bT7uh.jpg\r\n  [2]: https://i.stack.imgur.com/bT7uh.jpg"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224955140, "answer_id": 236716, "path": "stack.gulp.answer", "score": 96, "up_vote_count": 97, "is_accepted": false, "last_activity_date": 1249684662, "last_edit_date": 1249684662, "body_markdown": "C++ - where your friends have access to your private members."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224956495, "answer_id": 236735, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1224956495, "body_markdown": "Some call me &#39;^F[a-z\\&#39;-]+$&#39;, but I have many names."}, {"tags": [], "down_vote_count": 3, "creation_date": 1224956790, "answer_id": 236743, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1224956790, "body_markdown": "A computer is like an Old Testament god, with a lot of rules and no mercy."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224956850, "answer_id": 236745, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 32, "is_accepted": false, "last_activity_date": 1227703547, "last_edit_date": 1227703547, "body_markdown": "Getting a SCSI chain working is perfectly simple if you remember that there must be exactly three terminations: one at each end of the cable, and one for the goat, terminated over the SCSI chain with a silver-handled knife whilst burning *black* candles."}, {"tags": [], "down_vote_count": 2, "creation_date": 1224956913, "answer_id": 236747, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1224956913, "body_markdown": "You can have quality software, or you can have pointer arithmetic; but you cannot have both at the same time. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1224957019, "answer_id": 236748, "path": "stack.gulp.answer", "score": 73, "up_vote_count": 73, "is_accepted": false, "last_activity_date": 1224957019, "body_markdown": "Indeed, when I design my killer language, the identifiers &lt;strong&gt;foo&lt;/strong&gt; and &lt;strong&gt;bar&lt;/strong&gt; will be reserved words, never used, and not even mentioned in the reference manual. Any program using one will simply dump core without comment. Multitudes will rejoice."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957099, "answer_id": 236751, "path": "stack.gulp.answer", "score": 113, "up_vote_count": 114, "is_accepted": false, "last_activity_date": 1224957099, "body_markdown": "Smith &amp; Wesson - the original &quot;point and click&quot; interface."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224957265, "answer_id": 236755, "path": "stack.gulp.answer", "score": 84, "up_vote_count": 84, "is_accepted": false, "last_activity_date": 1224957265, "body_markdown": "The only &quot;intuitive&quot; user interface is the nipple. After that, it&#39;s all learned. "}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957353, "answer_id": 236758, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1224957353, "body_markdown": "This code is about as stable as a one-legged drunk with hypothermia in a hurricane, balancing on a banana peel. When someone throws him an elephant with bad breath and a worse temper. "}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957434, "answer_id": 236760, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1224957434, "body_markdown": "All programs are poems, it&#39;s just that not all programmers are poets."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957555, "answer_id": 236762, "path": "stack.gulp.answer", "score": 47, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1224957555, "body_markdown": "Computers are high-speed idiots, programmed by low-speed idiots."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957650, "answer_id": 236765, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1224957650, "body_markdown": "Would you want to use an operating system that names its commands after digestive noises (awk, grep, fsck, nroff)?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224957704, "answer_id": 236768, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1224957704, "body_markdown": "Computers let you make more mistakes than any other invention in history. With the possible exception of handguns and tequila."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957774, "answer_id": 236770, "path": "stack.gulp.answer", "score": 207, "up_vote_count": 208, "is_accepted": false, "last_activity_date": 1224957774, "body_markdown": "The C language combines all the power of assembly language with all the ease-of-use of assembly language."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224957847, "answer_id": 236773, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1224957847, "body_markdown": "The programmer&#39;s national anthem is &#39;AAAAAAAAHHHHHHHH&#39;."}, {"tags": [], "down_vote_count": 0, "creation_date": 1224957916, "answer_id": 236777, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 25, "is_accepted": false, "last_activity_date": 1224957916, "body_markdown": "Software salesmen and used-car salesmen differ in that the latter know when they are lying."}, {"tags": [], "down_vote_count": 1, "creation_date": 1224958061, "answer_id": 236780, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1224958061, "body_markdown": "Compiler message you don&#39;t want to see #42: \r\n\r\n&lt;strong&gt;Too many errors on one line (make fewer)&lt;/strong&gt;. "}, {"tags": [], "down_vote_count": 1, "creation_date": 1224958165, "answer_id": 236785, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1224958165, "body_markdown": "Compiler message you don&#39;t want to see #41:\r\n\r\n&lt;strong&gt;This label is the target of a goto from outside of the block containing this label AND this block has an automatic variable with an initializer AND your window wasn&#39;t wide enough to read this whole error message&lt;/strong&gt;. \r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224959032, "answer_id": 236804, "path": "stack.gulp.answer", "score": 49, "up_vote_count": 51, "is_accepted": false, "last_activity_date": 1224959430, "last_edit_date": 1224959430, "body_markdown": "Q: How many programmers does it take to kill a cockroach?\r\n&lt;br&gt;A: Two: one holds, the other installs Windows on it "}, {"tags": [], "down_vote_count": 2, "creation_date": 1224961384, "answer_id": 236844, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1224961384, "body_markdown": "There are three types of people in this world:\r\n\r\n  - Those that understand recursion\r\n  - Those that don&#39;t understand recursion\r\n  - Those that think there are three types of people in this world:\r\n   - Those that understand recursion\r\n   - Those that don&#39;t understand recursion\r\n   - Those that think there are three types of people in this world:\r\n     - Those that understand recursion\r\n     - Those that don&#39;t understand recursion\r\n     - Those that think there are three types of people in this world:\r\n\r\n         - ...\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224962920, "answer_id": 236897, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1224962920, "body_markdown": "Localized version of a famous one:\r\n\r\nA man flying in a hot air balloon suddenly realizes he\u2019s lost. He reduces height and spots a man down below, &lt;b&gt;who is pasturing goats&lt;/b&gt;. He lowers the balloon further and shouts to get directions, &quot;Excuse me, can you tell me where I am?&quot;\r\n\r\nThe man below says: &quot;Yes, you&#39;re in a hot air balloon, hovering 30 feet above this field.&quot;\r\n\r\n&quot;Oh, thanks, now I know I&#39;m in Russia&quot;\r\n\r\n&quot;Yes&quot; replies the man. &quot;How did you know?&quot;\r\n\r\n&quot;Well,&quot; says the balloonist, &quot;everything you have told me is technically correct, but It&#39;s of no use to anyone. So you are software developer. And only in Russia software developers pasture goats.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224964885, "answer_id": 236950, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1224964885, "body_markdown": "&lt;pre&gt;&lt;code&gt;dance: while( true ){\r\n    if( something() ) break dance;\r\n}&lt;/code&gt;&lt;/pre&gt;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1224965133, "answer_id": 236955, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1224965133, "body_markdown": "&gt; A software engineer, hardware engineer and company division manager\r\n&gt; were on their way to a meeting in Switzerland. They were driving down\r\n&gt; a steep mountain road when suddenly the brakes failed. The car\r\n&gt; careened out of control, bouncing off guard rails until it ground to a\r\n&gt; halt along the mountainside. The occupants were unhurt, but stuck\r\n&gt; halfway down the mountain in a car with no brakes.\r\n&gt;\r\n&gt; &quot;I know,&quot; said the manager. &quot;Let&#39;s have a meeting, propose a Vision,\r\n&gt; formulate a Mission Statement, define some Goals, and through a\r\n&gt; process of continuous improvement, find a solution to the Critical\r\n&gt; Problems, and we&#39;ll be on our way.&quot;\r\n&gt;\r\n&gt; &quot;No,&quot; said the hardware engineer. &quot;I&#39;ve got my Swiss army knife with\r\n&gt; me. I can strip down the car&#39;s braking system, isolate the fault, fix\r\n&gt; it, and we&#39;ll be on our way.&quot;\r\n&gt;\r\n&gt; &quot;Wait,&quot; said the software engineer. &quot;Before we do anything, shouldn&#39;t\r\n&gt; we push the car back to the top of the mountain and see if it happens\r\n&gt; again?&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1224973550, "answer_id": 237115, "path": "stack.gulp.answer", "score": 190, "up_vote_count": 190, "is_accepted": false, "last_activity_date": 1224973550, "body_markdown": "Three men are talking:  A programmer, a doctor, and a lawyer.  The lawyer says, &quot;Man, the only way is to have a mistress.  With all these divorce suits, it&#39;s terrible.  The only way is to have a mistress.&quot;  The doctor says, &quot;Are you kidding?  With all the STDs out there, you want a wife and that&#39;s it.&quot;  The programmer says, &quot;You need both a wife and a mistress. Because when you&#39;re not with the mistress, she&#39;ll assume you&#39;re with your wife, and when you&#39;re not with your wife, she&#39;ll assume you&#39;re with your mistress, and THAT leaves you more time to be in the lab programming!&quot;"}, {"tags": [], "down_vote_count": 10, "creation_date": 1224976177, "answer_id": 237173, "path": "stack.gulp.answer", "score": 443, "up_vote_count": 453, "is_accepted": false, "last_activity_date": 1224976177, "body_markdown": "A Geologist and an engineer are sitting next to each other on a long flight from LA to NY. The Geologist leans over to the Engineer and asks if he would like to play a fun game. The Engineer just wants to take a nap, so he politely declines and rolls over to the window to catch a few winks. \r\nThe Geologist persists and explains that the game is real easy and a lotta fun. He explains, &quot;I ask you a question, and if you don&#39;t know the answer, you pay me $5. Then you ask me a question, and if I don&#39;t know the answer, I&#39;ll pay you $5.&quot; Again, the Engineer politely declines and tries to get to sleep. The Geologist now somewhat agitated, says, &quot;OK, if you don&#39;t know the answer you pay me $5, and if I don&#39;t know the answer, I&#39;ll pay you $50!&quot; \r\n\r\nThis catches the Engineer&#39;s attention, and he sees no end to this torment unless he plays, so he agrees to the game. The Geologist asks the first question. &quot;What&#39;s the distance from the Earth to the moon?&quot; \r\n\r\nThe Engineer doesn&#39;t say a word, but reaches into his wallet, pulls out a five dollar bill and hands it to the Geologist. \r\n\r\nNow, it&#39;s the Engineer&#39;s turn. He asks the Geologist, &quot;What goes up a hill with three legs, and comes down on four?&quot; The Geologist looks up at him with a puzzled look. He takes out his laptop computer and searches all of his references. He taps into the Airphone with his modem and searches the net and the Library of Congress. Frustrated, he sends e-mail to his co-workers -- all to no avail. \r\n\r\nAfter about an hour, he wakes the Engineer and hands him $50. The Engineer politely takes the $50 and turns away to try to get back to sleep. \r\n\r\nThe Geologist is more than a little miffed, shakes the Engineer and asks, &quot;Well, so what&#39;s the answer?&quot; \r\n\r\nWithout a word, the Engineer reaches into his wallet, hands the Geologist $5, and turns away to get back to sleep.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224976318, "answer_id": 237177, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1224976318, "body_markdown": "There were three engineers in a car; an electrical engineer, a chemical engineer, and a Microsoft engineer.\r\n\r\nSuddenly, the car stops running and they pull off to the side of the road wondering what could be wrong.\r\n\r\nThe electrical engineer suggests stripping down the electronics of the car and trying to trace where a fault may have occurred.\r\n\r\nThe chemical engineer, not knowing much about cars, suggests maybe the fuel is becoming emulsified and getting blocked somewhere.\r\n\r\nThe Microsoft engineer, not knowing much about anything, came up with a suggestion. &quot;Why don&#39;t we close all the windows, get out, get back in, and open all the windows and see if it works?&quot; "}, {"tags": [], "down_vote_count": 5, "creation_date": 1224976697, "answer_id": 237180, "path": "stack.gulp.answer", "score": 88, "up_vote_count": 93, "is_accepted": false, "last_activity_date": 1224976697, "body_markdown": "An architect, a hooker and a programmer were talking one evening, and\r\n  somehow, the discussion turned to which profession was the oldest.\r\n\r\n  &quot;Come on, you guys!  Everyone knows mine is the oldest profession,&quot;\r\n  said the hooker.\r\n\r\n  &quot;Ah,&quot; said the architect, &quot;but before your profession existed, there\r\n  had to be people, and who was there before people?&quot;\r\n\r\n  &quot;What are you getting at, God?&quot;  The hooker asked.\r\n\r\n  &quot;And was He not the divine architect of the universe?&quot; The architect\r\n  asked, looking smug.\r\n\r\n  The programmer had been silent, but now he spoke up.  &quot;And before God\r\n  took on himself the role of an architect, what was there?&quot;\r\n\r\n  &quot;Darkness and chaos,&quot; the hooker said.\r\n\r\n  &quot;And who do you think created chaos?&quot; the programmer said.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1224987511, "answer_id": 237396, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 25, "is_accepted": false, "last_activity_date": 1224987511, "body_markdown": "This inherits from a joke about engineers:\r\n\r\nA pessimistic programmer sees the array as half empty.\r\n\r\nAn optimistic programmer sees the array as half full.\r\n\r\nA Real Programmer&#174; sees the array as twice as big as it needs to be and calls realloc()."}, {"tags": [], "down_vote_count": 2, "creation_date": 1224994351, "answer_id": 237535, "path": "stack.gulp.answer", "score": 101, "up_vote_count": 103, "is_accepted": false, "last_activity_date": 1225055072, "last_edit_date": 1225055072, "body_markdown": "A Microsoft dev is walking down a walking path on campus when he hears a frog say, &quot;If you kiss me, I will turn into a beautiful woman.  We can get married, and I will be your loving wife forever&quot;.  The geek and the frog stare at each other for a bit, and then he picks up the frog and gently places her in his front pocket.  The frog sticks her head out and says &quot;aren&#39;t you going to kiss me?&quot;\r\n\r\n&quot;No&quot; says the dev, &quot;I work for Microsoft, I don&#39;t have time for a wife - but a talking frog is really cool!&quot;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1225015521, "answer_id": 237814, "path": "stack.gulp.answer", "score": 137, "up_vote_count": 140, "is_accepted": false, "last_activity_date": 1225079477, "last_edit_date": 1225079477, "body_markdown": "Q: What is the difference between a programmer and a non-programmer ?\r\n\r\nA: The non-programmer thinks a kilobyte is 1000 bytes while a programmer is convinced that a kilometer is 1024 meters "}, {"tags": [], "down_vote_count": 21, "creation_date": 1225016533, "answer_id": 237825, "path": "stack.gulp.answer", "score": 780, "up_vote_count": 801, "is_accepted": false, "last_activity_date": 1359062973, "last_edit_date": 1359062973, "body_markdown": "![syntax error!][1]\r\n\r\nIf you&#39;re happy and you know it, syntax error!\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/YryhF.jpg"}, {"tags": [], "down_vote_count": 7, "creation_date": 1225016559, "answer_id": 237826, "path": "stack.gulp.answer", "score": 590, "up_vote_count": 597, "is_accepted": false, "last_activity_date": 1237864089, "last_edit_date": 1486562877, "body_markdown": "&lt;a href=&quot;http://xkcd.com/221/&quot;&gt;![XKCD 221][1]&lt;/a&gt;\r\n\r\n\r\n  [1]: https://imgs.xkcd.com/comics/random_number.png &quot;RFC 1149.5 specifies 4 as the standard IEEE-vetted random number.&quot;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1225017953, "answer_id": 237853, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1225017953, "body_markdown": "    return your_job++;\r\n\r\nJust before your_job got a raise, it went to the garbage dump.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225018447, "answer_id": 237862, "path": "stack.gulp.answer", "score": 62, "up_vote_count": 63, "is_accepted": false, "last_activity_date": 1271956750, "last_edit_date": 1271956750, "body_markdown": "Your momma&#39;s so fat, that when she sat on a binary tree she turned it into a sorted linked-list in O(1).\r\n\r\nNot a joke per se, but I think it is funny :)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225027063, "answer_id": 237999, "path": "stack.gulp.answer", "score": 55, "up_vote_count": 56, "is_accepted": false, "last_activity_date": 1225133737, "last_edit_date": 1225133737, "body_markdown": "Not *exactly* a programming joke, but related enough:\r\n\r\nA biologist, an engineer, and a mathematician are staking out an empty house.\r\n\r\nThey see two people walk in.\r\n\r\nLater, they see three people walk out.\r\n\r\nThe biologist says, &quot;They must have multiplied!&quot;\r\n\r\nThe engineer says, &quot;I think it was measurement error.&quot;\r\n\r\nThe mathematician says, &quot;Now, if exactly one person walks into the house, it will have zero people in it again.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1225065691, "answer_id": 238823, "path": "stack.gulp.answer", "score": 103, "up_vote_count": 103, "is_accepted": false, "last_activity_date": 1225065691, "body_markdown": "&quot;In theory, there ought to be no difference between theory and practice.  In practice, there is.&quot;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1225066565, "answer_id": 238842, "path": "stack.gulp.answer", "score": 28, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1225066565, "body_markdown": "Personal one I came up with:\r\n\r\n&quot;Pirates go arg!!!, Computer pirates go argv!!&quot; - mempko"}, {"tags": [], "down_vote_count": 0, "creation_date": 1225070179, "answer_id": 238904, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1225070179, "body_markdown": "Did you hear the one about the programmer who&#39;s car got a flat? He spent the whole night starting and stopping the car trying to fix it."}, {"tags": [], "down_vote_count": 1, "creation_date": 1225076567, "answer_id": 238976, "path": "stack.gulp.answer", "score": 58, "up_vote_count": 59, "is_accepted": false, "last_activity_date": 1225076567, "body_markdown": "The programmer got stuck in the shower because the instructions on the shampoo bottle said, *Lather, Rinse, Repeat.*"}, {"tags": [], "down_vote_count": 3, "creation_date": 1225076851, "answer_id": 238982, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1225076851, "body_markdown": "A mathematician, a physicist, an engineer, and a programmer were discussing the theorem that all odd numbers are prime.\r\n\r\n**Mathematician:** 3 is prime, 5 is prime, 7 is prime, 9 is not prime.  The theorem is false.  \r\n\r\n**Physicist:** 3 is prime, 5 is prime, 7 is prime, 9 is not, 11 is.... The theorem is true, within experimental error.  \r\n\r\n**Engineer:** 3 is prime, 5 is prime, 7 is prime, 9 is prime, 11 is prime.... The theorem is true.  \r\n\r\n**Programmer:** 3 is prime, 3 is prime, 3 is prime...."}, {"tags": [], "down_vote_count": 2, "creation_date": 1225077157, "answer_id": 238987, "path": "stack.gulp.answer", "score": 144, "up_vote_count": 146, "is_accepted": false, "last_activity_date": 1225077157, "body_markdown": "If the box says, &quot;*This software requires Windows XP or better*,&quot; does that mean it&#39;ll run on linux? "}, {"tags": [], "down_vote_count": 1, "creation_date": 1225177604, "answer_id": 242434, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1225177604, "body_markdown": "Old programmer talking to young one: What do you mean you have to have an IDE? Why, in my day, all we had were ones and zeros, and that was on a good day. On bad days, all we had were zeros."}, {"tags": [], "down_vote_count": 0, "creation_date": 1225178350, "answer_id": 242456, "path": "stack.gulp.answer", "score": 42, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1225178350, "body_markdown": "The shortest programmer joke:\r\n\r\n**&quot;I&#39;m nearly done!&quot;**\r\n\r\n(in german: &quot;Ich habs gleich!&quot;)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225192219, "answer_id": 242922, "path": "stack.gulp.answer", "score": 63, "up_vote_count": 64, "is_accepted": false, "last_activity_date": 1225192219, "body_markdown": "&quot;What do you mean, *it needs comments*!?  If it was hard to write, it should be hard to understand--why do you think we call it *code*???&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225192663, "answer_id": 242938, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1225596222, "last_edit_date": 1225596222, "body_markdown": "How to Develop Your Programming Schedule\r\n---\r\n\r\n  - Start with your worst-case estimate, multiply by 2, then switch to the next larger unit of measurement.  *Example:* If you think it should take 3 days, allow 6 weeks.  \r\n\r\n  - My wife, the daughter of a theoretical mathematician, simply multiplies her worst-case estimate by 2 pi.  I contend that her method lulls her into a false sense of confidence, as she improves her accuracy merely by keeping another decimal place.\r\n\r\n  - After learning indirection, a coworker always answered &quot;tomorrow&quot; and explained that, eventually, he&#39;d be right.  I wonder if he&#39;s still employed...."}, {"tags": [], "down_vote_count": 0, "creation_date": 1225192841, "answer_id": 242946, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1225192841, "body_markdown": "She sells cshs by the cshore."}, {"tags": [], "down_vote_count": 3, "creation_date": 1225225373, "answer_id": 244708, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 38, "is_accepted": false, "last_activity_date": 1225225373, "body_markdown": "Q: What did the Java code say to the C code?  \r\nA: You&#39;ve got no class."}, {"tags": [], "down_vote_count": 2, "creation_date": 1225226315, "answer_id": 244775, "path": "stack.gulp.answer", "score": 594, "up_vote_count": 596, "is_accepted": false, "last_activity_date": 1225226315, "body_markdown": "A Cobol programmer made so much money doing Y2K remediation that he was able to have himself cryogenically frozen when he died.  One day in the future, he was unexpectedly resurrected.\r\n\r\nWhen he asked why he was unfrozen, he was told:\r\n\r\n&quot;It&#39;s the year 9999 - and you know Cobol&quot;\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225227274, "answer_id": 244839, "path": "stack.gulp.answer", "score": 108, "up_vote_count": 109, "is_accepted": false, "last_activity_date": 1277543129, "last_edit_date": 1277543129, "body_markdown": "**The First Poem Written for Computers** \r\n\r\n\t\t\t&lt;&gt;!*&#39;&#39;#\r\n\t\t\t^&quot;`$$-\r\n\t\t\t!*=@$_\r\n\t\t\t%*&lt;&gt;~4\r\n\t\t\t&amp;[]../\r\n\t\t\t|{,,SYSTEM HALTED\r\n\r\n\r\nFor you somewhat cybernetically challenged, it goes something like this (using the proper cyber-names):\r\n\r\n\t\tWaka waka bang splat tick tick hash,\r\n\t\tCaret quote back-tick dollar dollar dash,\r\n\t\tBang splat equal at dollar under-score,\r\n\t\tPercent splat waka waka tilde number four,\r\n\t\tAmpersand bracket bracket dot dot slash,\r\n\t\tVertical-bar curly-bracket comma comma CRASH\r\n\r\nFrom http://www.cise.ufl.edu/~ddd/poem.htm\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1225238059, "answer_id": 245307, "path": "stack.gulp.answer", "score": 201, "up_vote_count": 203, "is_accepted": false, "last_activity_date": 1262111836, "last_edit_date": 1486562930, "body_markdown": "&gt; A programmer started to cuss&lt;br/&gt;\r\n&gt; Because getting to sleep was a fuss&lt;br/&gt;\r\n&gt; As she lay there in bed&lt;br/&gt;\r\n&gt; Looping &#39;round in her head&lt;br/&gt;\r\n&gt; was: &lt;code&gt;while(!asleep()) sheep++&lt;/code&gt;\r\n\r\nBonus semi-related XKCD (thanks to randle-taylor):\r\n\r\n&lt;a href=&quot;http://xkcd.com/571/&quot;&gt;![XKCD 571][1]&lt;/a&gt;\r\n\r\n  [1]: https://imgs.xkcd.com/comics/cant_sleep.png &quot;If androids someday DO dream of electric sheep, don&#39;t forget to declare sheepCount as a long int.&quot;"}, {"tags": [], "down_vote_count": 17, "creation_date": 1225261375, "answer_id": 245951, "path": "stack.gulp.answer", "score": 171, "up_vote_count": 188, "is_accepted": false, "last_activity_date": 1225261375, "body_markdown": "After 5 pages of jokes, no one&#39;s gonna read this, but it&#39;s funny nonetheless:\r\n\r\nHow long does it take to copy a file in Vista?  Yeah, I don&#39;t know either, I&#39;m still waiting to find out."}, {"tags": [], "down_vote_count": 1, "creation_date": 1225403123, "answer_id": 251872, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1359065240, "last_edit_date": 1359065240, "body_markdown": "**Software Development Process**\r\n\r\n1. Order the T-shirts for the Development team\r\n\r\n2. Announce availability\r\n\r\n3. Write the code\r\n\r\n4. Write the manual\r\n\r\n5. Hire a Product Manager\r\n\r\n6. Spec the software\r\n(writing the specs after the code helps to ensure that the\r\nsoftware meets the specifications)\r\n\r\n7. Ship\r\n\r\n8. Test\r\n(the customers are a big help here)\r\n\r\n9. Identify bugs as potential enhancements\r\n\r\n10. Announce the upgrade program"}, {"tags": [], "down_vote_count": 2, "creation_date": 1225469390, "answer_id": 254050, "path": "stack.gulp.answer", "score": 61, "up_vote_count": 63, "is_accepted": false, "last_activity_date": 1225469390, "body_markdown": "What sits on your shoulder and goes &quot;Pieces of 7! Pieces of 7!&quot;?\r\n\r\nA Parroty Error!"}, {"tags": [], "down_vote_count": 2, "creation_date": 1225479433, "answer_id": 254533, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1256083614, "last_edit_date": 1256083614, "body_markdown": "Q:  Why should OS X be afraid of Windows 7?\r\n\r\nA:  Because 7 8 9.  And 10 is next.\r\n"}, {"tags": [], "down_vote_count": 10, "creation_date": 1225525870, "answer_id": 255629, "path": "stack.gulp.answer", "score": 49, "up_vote_count": 59, "is_accepted": false, "last_activity_date": 1287639674, "last_edit_date": 1287639674, "body_markdown": "    if(computer.fail==true){\r\n    background.setColor(blue);\r\n    user.frown();\r\n    sys.shutdown();\r\n    user.scream(&quot;OH, DARN YOU&quot;);}\r\n\r\n "}, {"tags": [], "down_vote_count": 2, "creation_date": 1225525913, "answer_id": 255631, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1225525913, "body_markdown": "    A UNIX saleslady, Lenore,\r\n    Enjoys work, but she likes the beach more.\r\n    She found a good way\r\n    To combine work and play:\r\n    She sells C shells by the seashore."}, {"tags": [], "down_vote_count": 2, "creation_date": 1225525927, "answer_id": 255632, "path": "stack.gulp.answer", "score": 153, "up_vote_count": 155, "is_accepted": false, "last_activity_date": 1225525927, "body_markdown": "Visual Studio likes to put a comment block at the top of some of the support files it maintains itself automatically that makes the very matter-of-fact statement:\r\n\r\n    This code was generated by a tool.\r\n\r\nI think I&#39;m finally approaching getting tired of giggling at that, but it took way too long..."}, {"tags": [], "down_vote_count": 4, "creation_date": 1225526262, "answer_id": 255635, "path": "stack.gulp.answer", "score": 182, "up_vote_count": 186, "is_accepted": false, "last_activity_date": 1277498023, "last_edit_date": 1277498023, "body_markdown": "[ASCII][1] stupid question, get a stupid [ANSI][2]\r\n\r\n  [1]: http://en.wikipedia.org/wiki/ASCII\r\n  [2]: http://en.wikipedia.org/wiki/American_National_Standards_Institute"}, {"tags": [], "down_vote_count": 3, "creation_date": 1225554573, "answer_id": 255698, "path": "stack.gulp.answer", "score": 270, "up_vote_count": 273, "is_accepted": false, "last_activity_date": 1288789052, "last_edit_date": 1288789052, "body_markdown": "   How to catch an Elephant in the Africa\r\n   \r\n  - MATHEMATICIANS hunt elephants by\r\n   going to Africa, throwing out\r\n   everything that is not an elephant,\r\n   and catching one of whatever is\r\n   left.\r\n  - EXPERIENCED MATHEMATICIANS\r\n   will attempt to prove the existence\r\n   of at least one unique elephant\r\n   before proceeding to step 1 as a\r\n   subordinate exercise.\r\n  - PROFESSORS OF MATHEMATICS will prove the existence of at least one unique elephant and then leave the detection and capture of an actual elephant as an exercise for their graduate students.\r\n  - COMPUTER SCIENTISTS hunt elephants by exercising Algorithm A:\r\n   1. Go to Africa.\r\n   2. Start at the Cape of Good Hope.\r\n   3. Work northward in an orderly manner, traversing the continent alternately east and west.\r\n   4. During each traverse pass,\r\n       1. Catch each animal seen.\r\n       2. Compare each animal caught to a known elephant.\r\n       3. Stop when a match is detected. \r\n  - EXPERIENCED COMPUTER PROGRAMMERS modify Algorithm A by placing a known elephant in Cairo to ensure that the algorithm will terminate.\r\n  - ASSEMBLY LANGUAGE PROGRAMMERS prefer to execute Algorithm A on their hands and knees.\r\n  - ENGINEERS hunt elephants by going to Africa, catching gray animals at random, and stopping when any one of them weighs within plus or minus 15 percent of any previously observed elephant.\r\n  - ECONOMISTS don&#39;t hunt elephants, but they believe that if elephants are paid enough, they will hunt themselves.\r\n  - STATISTICIANS hunt the first animal they see N times and call it an elephant.\r\n  - CONSULTANTS don&#39;t hunt elephants, and many have never hunted anything at all, but they can be hired by the hour to advise those people who do.\r\n  - OPERATIONS RESEARCH CONSULTANTS can also measure the correlation of hat size and bullet color to the efficiency of elephant-hunting strategies, if someone else will only identify the elephants.\r\n  - POLITICIANS don&#39;t hunt elephants, but they will share the elephants you catch with the people who voted for them.\r\n  - LAWYERS don&#39;t hunt elephants, but they do follow the herds around arguing about who owns the droppings.\r\n  - SOFTWARE LAWYERS will claim that they own an entire herd based on the look and feel of one dropping.\r\n  - VICE PRESIDENTS OF ENGINEERING, RESEARCH, AND DEVELOPMENT try hard to hunt elephants, but their staffs are designed to prevent it. When the vice president does get to hunt elephants, the staff will try to ensure that all possible elephants are completely prehunted before the vice president sees them. If the vice president does happen to see a elephant, the staff will:\r\n   1. compliment the vice president&#39;s keen eyesight and\r\n   2. enlarge itself to prevent any recurrence.\r\n  - SENIOR MANAGERS set broad elephant-hunting policy based on the assumption that elephants are just like field mice, but with deeper voices.\r\n  - QUALITY ASSURANCE INSPECTORS ignore the elephants and look for mistakes the other hunters made when they were packing the jeep.\r\n  - SALES PEOPLE don&#39;t hunt elephants but spend their time selling elephants they haven&#39;t caught, for delivery two days before the season opens.\r\n  - SOFTWARE SALES PEOPLE ship the first thing they catch and write up an invoice for an elephant.\r\n  - HARDWARE SALES PEOPLE catch rabbits, paint them gray, and sell them as desktop elephants. \r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225575703, "answer_id": 256152, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1225575703, "body_markdown": "This was actually funny back in the Jurassic:\r\n\r\nQ: How many IBM mainframes does it take to do an arithmetic left shift?\r\n\r\nA: 33.  32 to hold the bits and one to push the register.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225596765, "answer_id": 256472, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1225596765, "body_markdown": "*They say the memory is the first to go....*\r\n---\r\n\r\nI used to remember *everything* when I was a kid.  I suppose I had an infinite stack.  As I got older, and busier, and tired, my stack size decreased until, 3 children later, it was exactly 1 bit.  (Readers of StackOverflow shouldn&#39;t need an explanation.)  And today, it&#39;s dwindled to ... er, what was the question?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1225693132, "answer_id": 258027, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1225693132, "body_markdown": "Hello World is cross platform chapter"}, {"tags": [], "down_vote_count": 5, "creation_date": 1225765907, "answer_id": 260633, "path": "stack.gulp.answer", "score": 70, "up_vote_count": 75, "is_accepted": false, "last_activity_date": 1225765907, "body_markdown": "There&#39;s no place like 127.0.0.1"}, {"tags": [], "down_vote_count": 1, "creation_date": 1225778427, "answer_id": 261029, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1225778427, "body_markdown": "Mathematician, Physicist, Engineer walking through a field come upon a farmer.\r\n\r\nThe farmer asks what is the best way to construct a fence that will contain his livestock (ie., most area for least perimeter). The physicist does some calculus and concludes that the best way to do this is a square fence. The engineer looks at him and laughs. &quot;No, the best way is a circle&quot;. The physicist concedes and they start building the fence.\r\n\r\nThe mathematician just sits there for a while and eventually stands up, puts a small piece around himself and says &quot;I declare myself to be outside&quot;."}, {"tags": [], "down_vote_count": 0, "creation_date": 1226081711, "answer_id": 273046, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1235000230, "last_edit_date": 1235000230, "body_markdown": "The one about the programmer working on fifth floor, always be taking the elevator to the fourth floor..."}, {"tags": [], "down_vote_count": 6, "creation_date": 1226097569, "answer_id": 273868, "path": "stack.gulp.answer", "score": 667, "up_vote_count": 673, "is_accepted": false, "last_activity_date": 1226097569, "body_markdown": "If you put a million monkeys at a million keyboards, one of them will eventually write a Java program.\r\n\r\nThe rest of them will write Perl programs."}, {"tags": [], "down_vote_count": 19, "creation_date": 1226333245, "answer_id": 278275, "path": "stack.gulp.answer", "score": 148, "up_vote_count": 167, "is_accepted": false, "last_activity_date": 1241726607, "last_edit_date": 1241726607, "body_markdown": "**The Consultant&#39;s Exam**\r\n\r\n - Q1.  How do you put a giraffe into a refrigerator?\r\n\r\n(Answer: *Open the refrigerator, put in the giraffe, and close the door.* )\r\n\r\nThis question tests whether you tend to do simple things in an overly complicated way.\r\n\r\n - Q2. How do you put an elephant into a refrigerator?  (and No, it is not &quot;Open the refigerator, put in the elephant and close the refrigerator?&quot;)\r\n\r\n(Answer: *Open the refrigerator, take out the giraffe, put in the elephant and close the door.*)\r\nThis tests your ability to think through the repercussions of your previous actions.\r\n\r\n- Q3.  The Lion King is hosting an animal conference.  All the animals attend, except one. Which animal does not attend?\r\n\r\n(Answer:  *The elephant.  The elephant is in the refrigerator.*)\r\nThis tests your memory.\r\n\r\nOkay, even if you did not answer the first three questions correctly, you still have one more chance to show your true analytical abilities.\r\n\r\n - Q4. There is a river you must cross but it is used by crocodiles, and you do not have a boat. How do you manage it?\r\n\r\n(Answer:  *You just jump into the river and swim across. All the crocodiles are attending the Lion King&#39;s Meeting.*)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1226513362, "answer_id": 284795, "path": "stack.gulp.answer", "score": 45, "up_vote_count": 45, "is_accepted": false, "last_activity_date": 1226513362, "body_markdown": "A son asked his father(a programmer) why the sun rises in the east, and sets in the west. His response?\r\n\r\nIt works, don&#39;t touch!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1226551664, "answer_id": 286284, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1226551664, "body_markdown": "If architects built buildings the way programmers write software, the first woodpecker that came along would destroy civilization."}, {"tags": [], "down_vote_count": 0, "creation_date": 1226696435, "answer_id": 291397, "path": "stack.gulp.answer", "score": 36, "up_vote_count": 36, "is_accepted": false, "last_activity_date": 1226696435, "body_markdown": "What do you call a programmer from Finland?\r\n\r\nNerdic."}, {"tags": [], "down_vote_count": 1, "creation_date": 1226881149, "answer_id": 294625, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1359065003, "last_edit_date": 1359065003, "body_markdown": "\r\n\r\n    SELECT *\r\n    FROM Users\r\n    WHERE Clue &gt; 0\r\n    \r\n    0 Rows returned\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1226918313, "answer_id": 295277, "path": "stack.gulp.answer", "score": 76, "up_vote_count": 77, "is_accepted": false, "last_activity_date": 1226918313, "body_markdown": "I&#39;d like to make the world a better place, but they won&#39;t give me the source code."}, {"tags": [], "down_vote_count": 0, "creation_date": 1226932563, "answer_id": 295693, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1226932563, "body_markdown": "sp_helptext &#39;sp_helptext&#39;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227032049, "answer_id": 299626, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1227032049, "body_markdown": "Every time my allergies flair up, I remind my peers:\r\n\r\n*&quot;There&#39;s nothing worse then a programmer with a bad code.&quot;*"}, {"tags": [], "down_vote_count": 5, "creation_date": 1227136409, "answer_id": 303757, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1227136409, "body_markdown": "**How to get girls interested in programming**\r\n\r\nGirls like romantic stuff. My new programming language will supply this in the following way:\r\n\r\n 1. Each variable can either be masculine or feminine.\r\n 2. Masculine arrays are one-based,\r\n    feminine arrays are zero-based (this\r\n    is soooo obvious).\r\n 3. In a jagged array, at least 40% of\r\n    the subarrays need to be feminine.\r\n 4. If you construct a date by\r\n    concatenating a masculine and a\r\n    feminine variable, some of the space\r\n    allocated for the masculine variable\r\n    will be reallocated for the date.\r\n 5. Every 28th cpu cycle, all feminine\r\n    variables will throw exceptions or\r\n    other heavy objects if queried the\r\n    wrong way (what the right and wrong\r\n    way is, is undocumented \u2013 pending\r\n    research)\r\n 6. During communication, feminine\r\n    variables will always go through a\r\n    named pipe, tcp port or anything\r\n    like that before masculine.\r\n 7. If a masculine pointer raises a flag\r\n    for the wrong feminine variable, it\r\n    is not an exception.\r\n 8. A female binary large object will be\r\n    tried but not caught.\r\n 9. Feminine variables will never dump\r\n    unless they are grouped.\r\n 10. Feminine variables are not static\r\n     with threads, they change patterns\r\n     every season.\r\n 11. Behind every long masculine integer\r\n     there is a feminine char.\r\n 12. To construct a short, you must\r\n     first concatenate a feminine single\r\n     and a masculine single into a mixed\r\n     gender double, the most significant\r\n     bits of the double will then\r\n     overflow into a short after a\r\n     period of 9&#215;30 cycles. The double\r\n     can spawn several shorts before\r\n     they are either deallocated or\r\n     split into two singles again.\r\n 13. Feminine variables should be\r\n     camelcase.\r\n 14. Masculine variables have their own\r\n     opinion on what the most\r\n     significant bits of feminine\r\n     variables are."}, {"tags": [], "down_vote_count": 2, "creation_date": 1227450678, "answer_id": 312567, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1233717803, "last_edit_date": 1233717803, "body_markdown": "Don&#39;t take it serious :)\r\n\r\n`date &amp;&amp; sleep &amp;&amp; look &amp;&amp; talk &amp;&amp; touch &amp;&amp; access &amp;&amp; open top &amp;&amp; unzip &amp;&amp; mount &amp;&amp; yes &amp;&amp; yes &amp;&amp; join &amp;&amp; fork &amp;&amp; umount &amp;&amp; kill &amp;&amp; cut &amp;&amp; shred`"}, {"tags": [], "down_vote_count": 6, "creation_date": 1227454661, "answer_id": 312629, "path": "stack.gulp.answer", "score": 341, "up_vote_count": 347, "is_accepted": false, "last_activity_date": 1227454661, "body_markdown": "Why programmers like UNIX:\r\n\r\nunzip, strip, touch, finger, grep, mount, fsck, more, yes, fsck, fsck, fsck, umount, sleep"}, {"tags": [], "down_vote_count": 1, "creation_date": 1227476144, "answer_id": 312992, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1227476144, "body_markdown": "Every time the God divides by zero a black hole is spawned."}, {"tags": [], "down_vote_count": 1, "creation_date": 1227575490, "answer_id": 316082, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1227575490, "body_markdown": "Q: how many Apple programmers does it take to change a light bulb?\r\n\r\nA: none, they just make darkness a standard and tell everyone &quot;this behavior is by design&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1227578710, "answer_id": 316143, "path": "stack.gulp.answer", "score": 187, "up_vote_count": 188, "is_accepted": false, "last_activity_date": 1227578710, "body_markdown": "Don&#39;t anthropomorphize computers.  They *hate* that!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227581637, "answer_id": 316239, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1227581637, "body_markdown": "\u201cIf you already know what recursion is, just remember the answer. Otherwise, find someone who is standing closer to Douglas Hofstadter than you are; then ask him or her what recursion is.\u201d\r\n\r\n[Source][1]\r\n\r\n\r\n  [1]: http://mail.pm.org/pipermail/sanfrancisco-pm/2006-March/000438.html"}, {"tags": [], "down_vote_count": 1, "creation_date": 1227581931, "answer_id": 316244, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1227581931, "body_markdown": "Q: How many software engineers does it take to change a light bulb?\r\n\r\nA: Light bulb works just fine on the machine on my desk...\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1227598110, "answer_id": 316580, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 31, "is_accepted": false, "last_activity_date": 1227598110, "body_markdown": "WWJD?\r\nJWRTFM!"}, {"tags": [], "down_vote_count": 4, "creation_date": 1227604736, "answer_id": 316795, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1359065166, "last_edit_date": 1359065166, "body_markdown": "\r\n\r\n    sql&gt; DELETE FROM world.human_race WHERE iq &lt; 100\r\n    \r\n    Query OK, 3.45 billion rows affected (0.01 sec)&#183;&#183;&#183;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227608850, "answer_id": 316934, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1227608850, "body_markdown": "Q: How many IT Support people does it take to change a lightbulb?\r\n\r\nA: Have you tried turning it Off and On?\r\n\r\n(RSPCT2 The IT Crowd)"}, {"tags": [], "down_vote_count": 2, "creation_date": 1227609558, "answer_id": 316959, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1227609558, "body_markdown": "Saying that Java is nice because it works on all OS&#39;s is like saying that anal sex is nice because it works on all genders."}, {"tags": [], "down_vote_count": 3, "creation_date": 1227611367, "answer_id": 317013, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1227611367, "body_markdown": "Q. What sits on a communications engineer&#39;s shoulder and says &quot;Pieces of seven! Pieces of seven!&quot;?\r\n\r\nA. A parity error."}, {"tags": [], "down_vote_count": 0, "creation_date": 1227616142, "answer_id": 317173, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1227616142, "body_markdown": "Heard on a room with 2 programmers experts on secure coding:\r\n\r\n&quot;Security is not a process, it&#39;s a thread!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227622639, "answer_id": 317482, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1227622639, "body_markdown": "Q: What kind of modem did Jimi Hendrix have?\r\n\r\nA: A Purple Hayes."}, {"tags": [], "down_vote_count": 1, "creation_date": 1227627483, "answer_id": 317739, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1227627483, "body_markdown": "A guy join in a chat room and asks: &lt;br /&gt;\r\n\r\nQ: &quot;Does anybody here knows python language ?&quot; &lt;br /&gt;\r\nA: &quot;Shhhh shhh shhhhh....&quot;\r\n  "}, {"tags": [], "down_vote_count": 0, "creation_date": 1227627534, "answer_id": 317742, "path": "stack.gulp.answer", "score": 62, "up_vote_count": 62, "is_accepted": false, "last_activity_date": 1227627534, "body_markdown": "Hardware: The part of a computer that you can kick.\r\n"}, {"tags": [], "down_vote_count": 5, "creation_date": 1227627627, "answer_id": 317748, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1227627627, "body_markdown": "This one is terrible and awesome:\r\n\r\nQ: How is a virgin like a stack?  \r\nA: First you push, then you pop."}, {"tags": [], "down_vote_count": 1, "creation_date": 1227637246, "answer_id": 318374, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1227637246, "body_markdown": "How many programmers does it take to change a light bulb?\r\n\r\nOnly one but you will never change it back again."}, {"tags": [], "down_vote_count": 0, "creation_date": 1227645113, "answer_id": 318737, "path": "stack.gulp.answer", "score": 47, "up_vote_count": 47, "is_accepted": false, "last_activity_date": 1277501217, "last_edit_date": 1277501217, "body_markdown": "Might not be a joke, but certainly is a piece of humor:\r\n\r\n&gt; Some people, when confronted with a\r\n&gt; problem, think \u201cI know, I&#39;ll use\r\n&gt; regular expressions.\u201d   Now they have\r\n&gt; two problems.\r\n&gt;\r\n&gt; Jamie Zawinski \r\n\r\nhttp://regex.info/blog/2006-09-15/247"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227646335, "answer_id": 318812, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1227646335, "body_markdown": "A young woman is complaining to her friend &quot;I&#39;ve been married three times and I&#39;ve never had sex!&quot;\r\n\r\nHer friend replies, &quot;How is that possible?&quot;\r\n\r\n&quot;Well,&quot; the woman says, &quot;the first time I married for money, but he was old and he died on our wedding day.\r\n\r\n&quot;The second time I married for love, but he turned out to be gay.&quot;\r\n\r\n&quot;So what&#39;s wrong with this one?&quot; the friend asks.\r\n\r\n&quot;Well, this one&#39;s a computer programmer. We&#39;ve been married for five months, but so far all he does is sit at the end of the bed and tell me how great it&#39;s going to be!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227648886, "answer_id": 318959, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1227648886, "body_markdown": "ASCII stupid question and you&#39;ll get a stupid ANSI."}, {"tags": [], "down_vote_count": 3, "creation_date": 1227650499, "answer_id": 319055, "path": "stack.gulp.answer", "score": 104, "up_vote_count": 107, "is_accepted": false, "last_activity_date": 1227650499, "body_markdown": "&quot;Java programming is like teenage sex ....   \r\n\r\n- Everyone talks about it all of the time (but they don&#39;t really know what they&#39;re talking about);\r\n\r\n- Everyone claims to be doing it;\r\n\r\n- Everyone thinks everyone else is doing it;\r\n\r\n- Those few who are actually doing it:\r\n\r\n - Are not practicing it safely;\r\n\r\n - Are doing it poorly, and\r\n\r\n - Are sure it will be better next time.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227652182, "answer_id": 319122, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1227652182, "body_markdown": "There are two things I want to do\r\nBefore this life is done.\r\nThey&#39;re write 5 lines of APL\r\nAnd make the buggers run.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227679799, "answer_id": 319885, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1227679799, "body_markdown": "&quot;A foo walks into a bar,&quot; sed awk."}, {"tags": [], "down_vote_count": 2, "creation_date": 1227704413, "answer_id": 320624, "path": "stack.gulp.answer", "score": 31, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1227704413, "body_markdown": "Not quite CS, but I&#39;m sure it can be appreciated here:\r\n\r\n&quot;An engineer, a physicist and a mathematician find themselves in an anecdote, indeed an anecdote quite similar to many that you have no doubt already heard.\r\n\r\nAfter some observations and rough calculations the engineer realizes the situation and starts laughing.\r\n\r\nA few minutes later the physicist understands too and chuckles to himself happily as he now has enough experimental evidence to publish a paper.\r\n\r\nThis leaves the mathematician somewhat perplexed, as he had observed right away that he was the subject of an anecdote, and deduced quite rapidly the presence of humour from similar anecdotes, but considers this anecdote to be too trivial a corollary to be significant, let alone funny.&quot;\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227737605, "answer_id": 322348, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1227737605, "body_markdown": "\r\nUNIX is like eating insects.\r\n\r\nIt&#39;s all right once you get used to it.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1227741250, "answer_id": 322494, "path": "stack.gulp.answer", "score": 106, "up_vote_count": 107, "is_accepted": false, "last_activity_date": 1227741250, "body_markdown": "Why are Assembly programmers always soaking wet?  They work below C-level."}, {"tags": [], "down_vote_count": 0, "creation_date": 1227863249, "answer_id": 325329, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 35, "is_accepted": false, "last_activity_date": 1227863249, "body_markdown": "How many Intel hardware engineers does it take to change a lightbulb?\r\n\r\n1.0000000000001736442\r\n\r\nBut Its close enough for most people."}, {"tags": [], "down_vote_count": 5, "creation_date": 1227875625, "answer_id": 325680, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 37, "is_accepted": false, "last_activity_date": 1359064672, "last_edit_date": 1359064672, "body_markdown": "Optimist : The glass is half full.  \r\nPessimist : The glass is half empty.  \r\nCoder: The glass is twice as big as it needs to be.\r\n"}, {"tags": [], "down_vote_count": 13, "creation_date": 1227875864, "answer_id": 325689, "path": "stack.gulp.answer", "score": 597, "up_vote_count": 610, "is_accepted": false, "last_activity_date": 1227875864, "body_markdown": "[&quot;hip&quot;,&quot;hip&quot;]\r\n\r\n(hip hip array!)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227876651, "answer_id": 325724, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1237871385, "last_edit_date": 1237871385, "body_markdown": "    var arr:Array = new Array (&quot;c&quot;, &quot;h&quot;, &quot;i&quot;, &quot;c&quot;, &quot;k&quot;, &quot;e&quot;, &quot;n&quot;);\r\n    var temp:Object;\r\n    for (i=0; i&lt; arr.length; i++) {\r\n        trace (arr)\r\n        temp = arr.shift();\r\n        arr.push(temp)\r\n    }\r\n\r\n(chicken ticker)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1227879293, "answer_id": 325786, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1227879293, "body_markdown": "Possibly apocryphal story: the first COBOL compiler for Unix systems was called RM COBOL - allegedly the people at the stand in the first trade show wondered why the attendees found the name so amusing..."}, {"tags": [], "down_vote_count": 3, "creation_date": 1227881366, "answer_id": 325844, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1227881366, "body_markdown": "There are two types of people in this world: those who understand recursion and those who don&#39;t understand that there are two types of people in this world: ..."}, {"tags": [], "down_vote_count": 1, "creation_date": 1227938609, "answer_id": 327242, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1227938609, "body_markdown": "Q: How many Pentium chip designers does it take to screw in a light bulb?\r\nA: 0.999994637287432"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228133934, "answer_id": 330653, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1228133934, "body_markdown": "An old 1980s cartoon: two people in front of a computer - on the screen is the phrase &quot;What&#39;s it worth to you?&quot;\r\n\r\nFirst person to second: &quot;I hate corrupt disks!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228160906, "answer_id": 331974, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1228160906, "body_markdown": "When does a Boolean evaluated expression achieve orgasm?\r\n\r\nAfter a while."}, {"tags": [], "down_vote_count": 3, "creation_date": 1228161688, "answer_id": 332010, "path": "stack.gulp.answer", "score": 116, "up_vote_count": 119, "is_accepted": false, "last_activity_date": 1228161688, "body_markdown": "I know, not programmers, but most of us may get it...\r\n\r\n&gt; An infinite number of mathematicians\r\n&gt; walk into a bar.\r\n&gt; \r\n&gt; The first orders a beer, the second\r\n&gt; orders half a beer, the third orders a\r\n&gt; quarter of a beer, the fourth an\r\n&gt; eighth, and so on.\r\n&gt; \r\n&gt; The bartender looks at the line going\r\n&gt; out the door,turns to the line and\r\n&gt; says &quot;you guys suck!&quot;.\r\n&gt; \r\n&gt; Then he pours two beers and walks\r\n&gt; away.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228218229, "answer_id": 333713, "path": "stack.gulp.answer", "score": 128, "up_vote_count": 128, "is_accepted": false, "last_activity_date": 1228218229, "body_markdown": "Eight bytes walk into a bar.  The bartender asks, \u201cCan I get you anything?\u201d\r\n\r\n\u201cYeah,\u201d reply the bytes.  \u201cMake us a double.\u201d "}, {"tags": [], "down_vote_count": 1, "creation_date": 1228219165, "answer_id": 333741, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1311366186, "last_edit_date": 1486562860, "body_markdown": "![Little Bobby Tables comic](https://imgs.xkcd.com/comics/exploits_of_a_mom.png)\r\n\r\nhttps://imgs.xkcd.com/comics/exploits_of_a_mom.png\r\n\r\nFrom xkcd.com"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228221487, "answer_id": 333826, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1228221487, "body_markdown": "    if (var1 == true)\r\n    {\r\n        return true;\r\n    }\r\n    else if (var1 == false)\r\n    {\r\n        return false;\r\n    }\r\n    else \r\n    {\r\n        return !true &amp;&amp; ! false;\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228236372, "answer_id": 334642, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1228236372, "body_markdown": "A rails applications walks into a restaurant and starts talking to the server. The server looks out the window then says &quot;We don&#39;t serve your kind here&quot;."}, {"tags": [], "down_vote_count": 2, "creation_date": 1228249634, "answer_id": 335309, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1228249634, "body_markdown": "Bianry Joke\r\n\r\n01010101000101111001010101010101010110101010101010000101111\r\n11010010101010101010010101010101101010101010101010100010111\r\n100101010101010101011010101010101000010111111010010101010101\r\n010010101010101101010101010101010100010111100101010101010\r\n1010110101010101010000101111110100101010101010100101010101\r\n101010101010101101010101010100001011111101001010101010101\r\n001010101010110101010101010101010001011110010101010101010\r\n1011010101010101000010111111010010101010101010010101010\r\n010101010101010100010111100101010101010101011010101010101\r\n00010111111010010101010101010010101010101101010101010101010\r\n1000101111001010101010101010110101010101010000101111110100101\r\n01010101010010101010101101010101010101010100010111100101010101\r\n0101010110101010101010000101111110100101010101010100101010\r\n101011010101010101010101000101111001010101010101010110101010\r\n10101000010111111010010101010101010010101010101101010101000000000000000002\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1228256963, "answer_id": 335696, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1228256963, "body_markdown": "At a recent computer software engineering management course, the participants were given an awkward question to answer:\r\n\r\n&quot;If you had just boarded an airliner and discovered that your team of programmers had been responsible for the flight control software, how many of you would disembark immediately?&quot;\r\n\r\nAmong the ensuing forest of raised hands only one man sat motionless. When asked what he would do, he replied that he would be quite content to stay aboard. With his team&#39;s software, he said, the plane was unlikely to even taxi as far as the runway, let alone take off. "}, {"tags": [], "down_vote_count": 1, "creation_date": 1228321828, "answer_id": 337767, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1228321828, "body_markdown": "The computer is mightier than the pen, the sword and the programmer too!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228409738, "answer_id": 341309, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1359065623, "last_edit_date": 1359065623, "body_markdown": "What do beggars and software engineers have in common? \r\n\r\nThey both ask the same question when meeting another one of their kind; Which platform are you working on?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1228980945, "answer_id": 358632, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1228980945, "body_markdown": "Syntatic salt is bad for the colon"}, {"tags": [], "down_vote_count": 1, "creation_date": 1228981847, "answer_id": 358646, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1228981847, "body_markdown": "God is real...unless declared integer"}, {"tags": [], "down_vote_count": 1, "creation_date": 1229061359, "answer_id": 362003, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1229061359, "body_markdown": "An inscription on the gravestone of a programmer reads:\r\n\r\nGeneral protection fault - 10.10.61\r\n\r\nRuntime error - 23.09.1998"}, {"tags": [], "down_vote_count": 0, "creation_date": 1229140628, "answer_id": 364804, "path": "stack.gulp.answer", "score": 79, "up_vote_count": 79, "is_accepted": false, "last_activity_date": 1229140628, "body_markdown": "I guess my current favourite is:\r\n\r\n&quot;XML is like violence. If it doesn&#39;t solve your problem, you&#39;re not using enough of it&quot;.\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1229143454, "answer_id": 364853, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1229143454, "body_markdown": "Programs, like ships, sink in the C."}, {"tags": [], "down_vote_count": 0, "creation_date": 1229143805, "answer_id": 364856, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1359066661, "last_edit_date": 1359066661, "body_markdown": "Software Development Cycles in use:\r\n\r\n1. Programmer produces code he believes is bug-free.\r\n2. Product is tested. 20 bugs are found.\r\n3. Programmer fixes 10 of the bugs and explains to the testing department that the other 10 aren\u2019t really bugs.\r\n4. Testing department finds that five of the fixes didn\u2019t work and discovers 15 new bugs.\r\n5. Repeat steps 3 and 4 three times.\r\n6. Due to marketing pressure and an extremely premature product announcement based on overly-optimistic programming schedule, the product is released.\r\n7. Users find 137 new bugs.\r\n8. Original programmer, having cashed his royalty check, is nowhere to be found.\r\n9. Newly-assembled programming team fixes almost all of the 137 bugs, but introduce 456 new ones.\r\n10. Original programmer sends underpaid testing department a postcard from Fiji. Entire testing department quits.\r\n11. Company is bought in a hostile takeover by competitor using profits from their latest release, which had 783 bugs.\r\n12. New CEO is brought in by board of directors. He hires a programmer to redo program from scratch.\r\n1337. Programmer produces code he believes is bug-free\u2026"}, {"tags": [], "down_vote_count": 1, "creation_date": 1229149240, "answer_id": 364922, "path": "stack.gulp.answer", "score": 52, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1229149240, "body_markdown": "A mathematician, a physicist, a civil engineer, and a computer programmer are asked (after a few beers) to show that all odd numbers greater than 1 are prime.\r\n\r\n**Mathematician:** 3 is prime, 5 is prime, by induction they&#39;re all prime.\r\n\r\n**Physicist:** 3 is prime, 5 is prime, 7 is prime, 9 is... experimental error, 11 is prime, 13 is prime -- clearly, they&#39;re all prime.\r\n\r\n**Civil Engineer:** 3 is prime, 5 is prime 7 is prime, 9 is prime, 11 is prime -- sure, they&#39;re all prime.\r\n\r\n**Programmer:** 3 is prime, 5 is prime, 7 is prime, 7 is prime, 7 is prime, 7 is prime, 7 is prime......\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1229161878, "answer_id": 365052, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1229161878, "body_markdown": "I can&#39;t believe this one is missing:\r\n\r\n&quot;God save the Queen, 8, 1&quot;\r\n\r\nAm I too old?"}, {"tags": [], "down_vote_count": 3, "creation_date": 1229398072, "answer_id": 370386, "path": "stack.gulp.answer", "score": 305, "up_vote_count": 308, "is_accepted": false, "last_activity_date": 1284437550, "last_edit_date": 1284437550, "body_markdown": "Once upon a time there was a shepherd looking after his sheep on the side of a deserted road. Suddenly a brand new Porsche screeches to a halt. The driver, a man dressed in an Armani suit, Cerutti shoes, Ray-Ban sunglasses, TAG-Heuer wrist-watch, and a Versace tie, gets out and asks the Shepherd:\r\n\r\nMan: \u201cIf I can tell you how many sheep you have, will you give me one of them?\u201d\r\n\r\nThe shepherd looks at the young man, and then looks at the large flock of grazing sheep and replies: \r\n\r\nShepherd: \u201cOkay.\u201d\r\n\r\nThe young man parks the car, connects his laptop to the mobile-fax, enters a NASA Webster, scans the ground using his GPS, opens a database and 60 Excel tables filled with logarithms and pivot tables, then prints out a 150 page report on his high-tech mini-printer. He turns to the shepherd and says,\r\n\r\nMan: \u201cYou have exactly 1,586 sheep here.\u201d\r\n\r\nThe shepherd cheers, \r\n\r\nShepherd: \u201cThat\u2019s correct, you can have your sheep.\u201d\r\n\r\nThe young man makes his pick and puts it in the back of his Porsche. The shepherd looks at him and asks,\r\n\r\nShepherd: \u201cIf I guess your profession, will you return my animal to me?\u201d\r\n\r\nThe young man answers; \r\n\r\nMan: \u201cYes, why not?\u201d\r\n\r\nShepherd: &quot;You are an IT consultant.&quot;\r\n\r\nMan: \u201cHow did you know?\u201d\r\n\r\nShepherd: \u201cVery simple. First, you came here without being called. Second, you charged me a fee to tell me something I already knew, and third, you don\u2019t understand anything about my business\u2026Now can I have my *DOG* back?&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1229502895, "answer_id": 373989, "path": "stack.gulp.answer", "score": 34, "up_vote_count": 34, "is_accepted": false, "last_activity_date": 1242467658, "last_edit_date": 1242467658, "body_markdown": "Electrical Engineering vs. Computer Science\r\n----------------------------------------\r\n\r\nWire wrapped board. Once upon a time, in a kingdom not far from here, a king summoned two of his advisors for a test. He showed them both a shiny metal box with two slots in the top, a control knob, and a lever. &quot;What do you think this is?&quot;\r\n\r\nOne advisor, an engineer, answered first. &quot;It is a toaster,&quot; he said. The king asked, &quot;How would you design an embedded computer for it?&quot; The engineer replied, &quot;Using a four-bit microcontroller, I would write a simple program that reads the darkness knob and quantizes its position to one of 16 shades of darkness, from snow white to coal black. The program would use that darkness level as the index to a 16-element table of initial timer values. Then it would turn on the heating elements and start the timer with the initial value selected from the table. At the end of the time delay, it would turn off the heat and pop up the toast. Come back next week, and I&#39;ll show you a working prototype.&quot;\r\n\r\nThe second advisor, a computer scientist, immediately recognized the danger of such short-sighted thinking. He said, &quot;Toasters don&#39;t just turn bread into toast, they are also used to warm frozen waffles. What you see before you is really a breakfast food cooker. As the subjects of your kingdom become more sophisticated, they will demand more capabilities. They will need a breakfast food cooker that can also cook sausage, fry bacon, and make scrambled eggs. A toaster that only makes toast will soon be obsolete. If we don&#39;t look to the future, we will have to completely redesign the toaster in just a few years.&quot;\r\n\r\n&quot;With this in mind, we can formulate a more intelligent solution to the problem. First, create a class of breakfast foods. Specialize this class into subclasses: grains, pork, and poultry. The specialization process should be repeated with grains divided into toast, muffins, pancakes, and waffles; pork divided into sausage, links, and bacon; and poultry divided into scrambled eggs, hard- boiled eggs, poached eggs, fried eggs, and various omelet classes.&quot;\r\n\r\n&quot;The ham and cheese omelet class is worth special attention because it must inherit characteristics from the pork, dairy, and poultry classes. Thus, we see that the problem cannot be properly solved without multiple inheritance. At run time, the program must create the proper object and send a message to the object that says, &#39;Cook yourself.&#39; The semantics of this message depend, of course, on the kind of object, so they have a different meaning to a piece of toast than to scrambled eggs.&quot;\r\n\r\n&quot;Reviewing the process so far, we see that the analysis phase has revealed that the primary requirement is to cook any kind of breakfast food. In the design phase, we have discovered some derived requirements. Specifically, we need an object-oriented language with multiple inheritance. Of course, users don&#39;t want the eggs to get cold while the bacon is frying, so concurrent processing is required, too.&quot;\r\n\r\n&quot;We must not forget the user interface. The lever that lowers the food lacks versatility, and the darkness knob is confusing. Users won&#39;t buy the product unless it has a user-friendly, graphical interface. When the breakfast cooker is plugged in, users should see a cowboy boot on the screen. Users click on it, and the message &#39;Booting UNIX v.8.3&#39; appears on the screen. (UNIX 8.3 should be out by the time the product gets to the market.) Users can pull down a menu and click on the foods they want to cook.&quot;\r\n\r\n&quot;Having made the wise decision of specifying the software first in the design phase, all that remains is to pick an adequate hardware platform for the implementation phase. An Intel 80386 with 8MB of memory, a 30MB hard disk, and a VGA monitor should be sufficient. If you select a multitasking, object oriented language that supports multiple inheritance and has a built-in GUI, writing the program will be a snap. (Imagine the difficulty we would have had if we had foolishly allowed a hardware-first design strategy to lock us into a four-bit microcontroller!).&quot;\r\n\r\nThe king wisely had the computer scientist beheaded, and they all lived happily ever after. \r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1229515142, "answer_id": 374336, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1229515142, "body_markdown": "Bill Gates died in a car accident. He found himself in Purgatory being sized up by God...\r\n\r\n&quot;Well, Bill, I&#39;m really confused on this call. I&#39;m not sure whether to send you to Heaven or Hell. After all, you enormously helped society by putting a computer in almost every home in the world and yet you created that ghastly Windows 95. I&#39;m going to do something I&#39;ve never done before. In your case, I&#39;m going to let you decide where you want to go!&quot;\r\n\r\nBill replied, &quot;Well, thanks, God. What&#39;s the difference between the two?&quot;\r\n\r\nGod said, &quot;I&#39;m willing to let you visit both places briefly if it will help you make a decision.&quot; &quot;Fine, but where should I go first?&quot; God said, &quot;I&#39;m going to leave that up to you.&quot; Bill said, &quot;OK, then, let&#39;s try Hell first.&quot; So Bill went to Hell.\r\n\r\nIt was a beautiful, clean, sandy beach with clear waters. There were thousands of beautiful women running around, playing in the water, laughing and frolicking about. The sun was shining and the temperature was perfect. Bill was very pleased. &quot;This is great!&quot; he told God, &quot;If this is Hell, I REALLY want to see Heaven!&quot; &quot;Fine,&quot; said God and off they went.\r\n\r\nHeaven was a high place in the clouds, with angels drifting about playing harps and singing. It was nice but not as enticing as Hell. Bill thought for a quick minute and rendered his decision. &quot;Hmm, I think I prefer Hell&quot; he told God. &quot;Fine,&quot; retorted God, &quot;as you desire.&quot; So Bill Gates went to Hell.\r\n\r\nTwo weeks later, God decided to check up on the late billionaire to see how he was doing in Hell. When God arrived in Hell, he found Bill shackled to a wall, screaming amongst the hot flames in a dark cave. He was being burned and tortured by demons. &quot;How&#39;s everything going, Bill?&quot; God asked.\r\n\r\nBill responded - his voice full of anguish and disappointment, &quot;This is awful, this is not what I expected. I can&#39;t believe this happened. What happened to that other place with the beaches and the beautiful women playing in the water?&quot;\r\n\r\nGod says, &quot;That was the screen saver&quot;. \r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1230058537, "answer_id": 389750, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1359064208, "last_edit_date": 1359064208, "body_markdown": "From a Dilbert cartoon, roughly from memory&lt;br&gt;\r\nPHB: Management says we need more unix programmers.&lt;br&gt;\r\nDilbert: I already am a unix programmer.&lt;br&gt;\r\nPHB: If the company nurse stops by, tell her never mind.\r\n\r\n![link text][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/sZZen.jpg"}, {"tags": [], "down_vote_count": 3, "creation_date": 1230618756, "answer_id": 399652, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 40, "is_accepted": false, "last_activity_date": 1277501632, "last_edit_date": 1277501632, "body_markdown": "A snippet of a conversation that I found rather amusing from [bash.org][1]:\r\n\r\n    &lt;Guo_Si&gt; Hey, you know what sucks?\r\n    &lt;TheXPhial&gt; vacuums \r\n    &lt;Guo_Si&gt; Hey, you know what sucks in a metaphorical sense? \r\n    &lt;TheXPhial&gt; black holes\r\n    &lt;Guo_Si&gt; Hey, you know what just isn&#39;t cool? \r\n    &lt;TheXPhial&gt; lava?\r\n\r\n   [1]: http://bash.org/?99835"}, {"tags": [], "down_vote_count": 5, "creation_date": 1231233203, "answer_id": 415898, "path": "stack.gulp.answer", "score": 43, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1231233203, "body_markdown": "What is the definition of *programmer*?\r\n\r\n&gt; Programmers are machines that turn coffee into code."}, {"tags": [], "down_vote_count": 4, "creation_date": 1231707072, "answer_id": 433674, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1237688973, "last_edit_date": 1237688973, "body_markdown": "Why don&#39;t people like C programmers?  Because they have no class."}, {"tags": [], "down_vote_count": 1, "creation_date": 1231803535, "answer_id": 437490, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1231803535, "body_markdown": "&lt;pre&gt;\r\nQuestion: what do you call your programming methodology?\r\nAnswer: Faith based development. You code and then pray that it works\r\n&lt;/pre&gt;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1231968672, "answer_id": 444768, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1231968672, "body_markdown": "True story:\r\n\r\nWe had some very heavy snow a few weeks ago, and when I got in to work I got an email from a coworker:\r\n\r\n&quot;in case you have not been watching the news,\r\nthe pd is asking people to stay clear\r\nfrom the peripheral roads unless\r\ncompletely necessary.\r\n\r\ni will be doing just that and recommend you do\r\nthe same.\r\n\r\nmany of those roads are not being plowed\r\nto the point that we are not getting bus\r\ntraffic or even garbage collection.&quot;\r\n\r\nThat might have been useful to me had I received the email before I left, but it didn&#39;t come in until after I actually arrived at the office.  So I wrote back:\r\n\r\n&quot;Meh.  I&#39;ll be fine.  I&#39;m a Delphi coder.  A lack of garbage collection has never scared me.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1231975460, "answer_id": 445088, "path": "stack.gulp.answer", "score": 133, "up_vote_count": 134, "is_accepted": false, "last_activity_date": 1246158687, "last_edit_date": 1246158687, "body_markdown": "A programmer is sent to the grocery store with instructions to &quot;buy butter and see whether they have eggs, if they do, then buy 10.&quot;\r\n\r\nReturning with 10 butters, the programmer says, &quot;they had eggs.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1232053224, "answer_id": 448450, "path": "stack.gulp.answer", "score": 59, "up_vote_count": 60, "is_accepted": false, "last_activity_date": 1232053224, "body_markdown": "Not really programming related, but still funny:\r\n\r\nA mathematician asks an engineer a question, &quot;Here are 5 birds in the tree, if I shoot one, how many are left?&quot; \r\n\r\nThe engineer answers, &quot;0, since the birds will all fly away when they hear the gunshot.&quot;\r\n\r\n&quot;The correct answer is 4, but I like the way you think&quot; said the mathematician.\r\n\r\nThe engineer then says, &quot;Well then, I will ask you a question.  Three women are sitting on the park bench eating ice cream.  The first one is licking it, the second one swallows the ice cream and starts sucking on the cone, the third takes a bite out of the ice cream, which one is married?&quot;\r\n\r\nThe mathematician blushes and answers: &quot;The second one?&quot;\r\n\r\nThe engineer then says, &quot;Wrong, the answer is the one wearing the wedding ring, but I like the way you think.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1232138552, "answer_id": 451919, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1359064010, "last_edit_date": 1359064010, "body_markdown": "![enter link description here][1]\r\n\r\nDurn it! The &quot;Bubba&quot; User Interface\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/BSDHp.jpg"}, {"tags": [], "down_vote_count": 2, "creation_date": 1232138770, "answer_id": 451934, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 27, "is_accepted": false, "last_activity_date": 1287641180, "last_edit_date": 1287641180, "body_markdown": "APPLICATION TO HAVE A FILE RESTORED\r\n\r\nYour Name           ____________________________________\r\nYour Login Name     ____________________________________\r\nWhich Project       ____________________________________\r\n\r\n1.  Urgency:\r\n\r\n        &lt;1 Hour ____   1-2 Hours ____  2-4 Hours ____\r\n        Next Day ____  Next Week ____  Never     ____\r\n\r\n2.  Reason for needing restore:\r\n\r\n        Accidental Deletion ____  Accidental Corruption ____\r\n        General Clumsiness  ____  Complete Stupidity    ____\r\n        Klutz               ____\r\n\r\n3.  Are you sure the file existed in the first place?\r\n\r\n        Yes ____  No ____\r\n\r\n4.  Are you sure the file isn&#39;t somewhere else?\r\n\r\n        Yes ____  No ____\r\n\r\n5.  How do you know the file isn&#39;t somewhere else?\r\n\r\n        _____________________________________________________________________\r\n\r\n6.  How long do you think it would take for you to re-create the file if a\r\nbackup was not available?\r\n\r\n        _____________________________________________________________________\r\n\r\n\r\n7.  Don&#39;t you think it would be better if you hadn&#39;t deleted the file in\r\nthe first place?\r\n \r\n        Yes ____\r\n\r\n8.  How much did you have to drink when you deleted the file?\r\n\r\n        Pints ____              Gallons _____\r\n\r\n9.  If you didn&#39;t want to delete the file, why did you type the command?\r\n\r\n        _____________________________________________________________________\r\n\r\n\r\n10.  Do you appreciate the amount of inconvenience that restoring a few\r\nfiles from a backup causes?\r\n\r\n        No ____\r\n\r\n11.  Have you deleted more work than you would normally create in a day?     \r\n\r\n        Yes ____  No ____\r\n\r\n12.  Don&#39;t you feel really stupid having to rely on a backup to recover\r\nfrom your mistake?\r\n\r\n        Yes ____  No ____\r\n\r\n13.  Do you often regret things you have done?\r\n\r\n        Yes ____  No ____\r\n\r\n14.  Do you often worry about your responsibilities?\r\n\r\n        Yes ____  No ____\r\n\r\n15.  Do you worry about not being able to control your actions?\r\n\r\n        Yes ____  No ____\r\n\r\n16.  Do you think there is a connection between a person destroying their\r\nown work and having self destructive motivations?\r\n\r\n        Yes ____  No ____\r\n\r\n17.  Sign here:\r\n\r\n        _______________________________\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1232462610, "answer_id": 461579, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1232462610, "body_markdown": "Lisp joke: My other car is a cdr.\r\n\r\nPerfect for a sticker on the car. :)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1232628069, "answer_id": 468959, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1232628069, "body_markdown": "Picked from real life:  \r\n\r\n-The client was keeping on sending those presence packets.  \r\n-Until what ?  \r\n-True !\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1233598041, "answer_id": 504196, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1359066103, "last_edit_date": 1359066103, "body_markdown": "A: hey, can I ask you something?  \r\nB: yes, you can.  \r\nA: SELECT * FROM"}, {"tags": [], "down_vote_count": 0, "creation_date": 1233598304, "answer_id": 504212, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1233759715, "last_edit_date": 1233759715, "body_markdown": "The Amiga had a concept of screens. You could pull them down and see other screens with other apps behind them.\r\n\r\nI wrote a little hack that scrolled the front screen down one pixel every 30 seconds and put it on all the Amigas in the company.\r\n\r\nPeople didn&#39;t know what the hell was going on. They were working and their front screen would gradually work its way down. They had to keep grabbing the mouse and pulling it up."}, {"tags": [], "down_vote_count": 1, "creation_date": 1233599106, "answer_id": 504275, "path": "stack.gulp.answer", "score": 45, "up_vote_count": 46, "is_accepted": false, "last_activity_date": 1245166516, "last_edit_date": 1245166516, "body_markdown": "This is as far as I know anonymous.\r\n\r\n**PROGRAMMER&#39;S NIGHT BEFORE CHRISTMAS**\r\n===================================\r\n\r\n&#39;Twas the night before implementation and all through the house,  \r\nnot a program was working not even a browse.  \r\nThe programmers hung by their tubes in despair,  \r\nwith hopes that a miracle would soon be there.\r\n\r\nThe users were nestled all snug in their beds,  \r\nwhile visions of inquiries danced in their heads.  \r\nWhen out in the machine room there arose such a clatter,  \r\nI sprang from my desk to see what was the matter.\r\n\r\nAnd what to my wondering eyes should appear,  \r\nbut a super programmer (with a six-pack of beer).  \r\nHis resume glowed with experience so rare,  \r\nhe turned out great code with a bit-pusher&#39;s flair.\r\n\r\nMore rapid than eagles, his programs they came,  \r\nOn update! on add! on inquiry! on delete!  \r\non batch jobs! on closing! on functions complete!  \r\nHis eyes were glazed-over, fingers nimble and lean,  \r\nfrom weekends and nights in front of a screen.\r\n\r\nA wink of his eye, and a twitch of his head,  \r\nsoon gave me to know I had nothing to dread.  \r\nHe spoke not a word, but went straight to his work,  \r\nturning specs into code; then turned with a jerk;\r\n\r\nAnd laying his finger upon the &quot;ENTER&quot; key,  \r\nthe systems came up and worked perfectly.  \r\nThe updates updated; the deletes, they deleted;  \r\nthe inquiries inquired, and closings completed.\r\n\r\nHe tested each whistle, and tested each bell,  \r\nwith nary an abend, and all had gone well.  \r\nThe system was finished, the tests were concluded.  \r\nThe users&#39; last changes were even included.\r\n\r\nAnd the user exclaimed with a snarl and a taunt,  \r\n&quot;It&#39;s just what I asked for, but not what I want!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1233695006, "answer_id": 508890, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1233695006, "body_markdown": "Can you C#?"}, {"tags": [], "down_vote_count": 1, "creation_date": 1233796530, "answer_id": 514151, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1233796530, "body_markdown": "What says &quot;Pieces of seven, pieces of seven?&quot;\r\n\r\nA parroty error"}, {"tags": [], "down_vote_count": 2, "creation_date": 1233881100, "answer_id": 518666, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1233881100, "body_markdown": "Programming a bombBaghdad function is immoral, a good programmer will always write a bombCity function and have Baghdad passed in as an argument. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1233882682, "answer_id": 518739, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1233882682, "body_markdown": "&lt;pre&gt;\r\n                         GOOGLE\r\n\r\n\r\n\r\n  __ Web   __ Images   __ Groups   __ News   __ Froogle\r\n\r\n\r\nPlease print query clearly:  _____________________________\r\n\r\n\r\n    Mail to: Google Search Request\r\n             1600 Amphitheatre Parkway\r\n             Mountain View, CA 94043\r\n\r\n\r\n        Please allow four to six weeks for results.\r\n&lt;/pre&gt;\r\n\r\nSource: http://fury.com/google-circa-1960.php\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1233883686, "answer_id": 518771, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1233883686, "body_markdown": "what does LISP stand for:\r\nLotsa Irritating Stupid Parentheses\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1234064096, "answer_id": 525110, "path": "stack.gulp.answer", "score": 65, "up_vote_count": 66, "is_accepted": false, "last_activity_date": 1234064096, "body_markdown": "The word &quot;algorithm&quot; was coined to recognise Al Gore&#39;s contribution to computer science."}, {"tags": [], "down_vote_count": 1, "creation_date": 1234070842, "answer_id": 525201, "path": "stack.gulp.answer", "score": 55, "up_vote_count": 56, "is_accepted": false, "last_activity_date": 1234070842, "body_markdown": "A programmer is walking along a beach and finds a lamp.  He rubs the lamp, and a genie appears.  \u201cI am the most powerful genie in the world.  I can grant you any wish, but only one wish.\u201d \r\n\r\nThe programmer pulls out a map, points to it and says, \u201cI\u2019d want peace in the Middle East.\u201d \r\n\r\nThe genie responds, \u201cGee, I don\u2019t know.  Those people have been fighting for millenia.  I can do just about anything, but this is likely beyond my limits.\u201d \r\n\r\nThe programmer then says, \u201cWell, I am a programmer, and my programs have lots of users.  Please make all my users satisfied with my software and let them ask for sensible changes.\u201d\r\n\r\nAt which point the genie responds, \u201cUm, let me see that map again.\u201d "}, {"tags": [], "down_vote_count": 7, "creation_date": 1234134602, "answer_id": 526625, "path": "stack.gulp.answer", "score": 231, "up_vote_count": 238, "is_accepted": false, "last_activity_date": 1234714443, "last_edit_date": 1234714443, "body_markdown": "If your mom was a collection class, her insert method would be public."}, {"tags": [], "down_vote_count": 1, "creation_date": 1234334685, "answer_id": 535691, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1359065599, "last_edit_date": 1359065599, "body_markdown": "Question: Why is the heap the sexiest part of C++?  \r\nAnswer: It&#39;s where all the new&#39;ed variables are."}, {"tags": [], "down_vote_count": 1, "creation_date": 1234340750, "answer_id": 535892, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1234340750, "body_markdown": "Documentation is like sex...\r\n  When it is bad, it is better than nothing.\r\n  When it is good, it is really-really good."}, {"tags": [], "down_vote_count": 0, "creation_date": 1234342133, "answer_id": 535950, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1234342133, "body_markdown": "The doctor, the artist and the programmer are discussing whether it is better to have wife or a lover. The doctor says:&quot;It is better to have a wife who can stand by you all the time&quot;. The artist says:&quot;To me it is better to have a lover. This way I get more inspiration&quot;. And the programmer says:&quot;I have both. When I&#39;m not with my wife she thinks I&#39;m with my lover, when I&#39;m not with my lover she thinks I&#39;m with my wife so this way I can program all the time&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1234342425, "answer_id": 535961, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1234342425, "body_markdown": "*points at whiteboard and say it&#39;s already written in whitespace*"}, {"tags": [], "down_vote_count": 0, "creation_date": 1234371133, "answer_id": 537740, "path": "stack.gulp.answer", "score": 54, "up_vote_count": 54, "is_accepted": false, "last_activity_date": 1234542595, "last_edit_date": 1486562879, "body_markdown": "![xkcd: Real programmers][1]\r\n\r\n\r\n  [1]: https://imgs.xkcd.com/comics/real_programmers.png &quot;Real programmers set the universal constants at the start such that the universe evolves to contain the disk with the data they want.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1234539136, "answer_id": 546368, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1234539136, "body_markdown": "2 + 2 = 5 (for large values of 2)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1234542082, "answer_id": 546577, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1234542082, "body_markdown": "I&#39;m sorry for my terrible English,\r\nbut my native language is Pascal."}, {"tags": [], "down_vote_count": 1, "creation_date": 1234849988, "answer_id": 555662, "path": "stack.gulp.answer", "score": 57, "up_vote_count": 58, "is_accepted": false, "last_activity_date": 1234849988, "body_markdown": "A bad one I just thought up...\r\n\r\nI hear they make gender-specific versions of ActiveX now: ActiveXX and ActiveXY. Unfortunately, ActiveXX overflows for a few days every month and ActiveXY constantly tries to mount drives it shouldn&#39;t."}, {"tags": [], "down_vote_count": 0, "creation_date": 1235007148, "answer_id": 563595, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1235007148, "body_markdown": "In C we had to code our own bugs. In C++ we can inherit them."}, {"tags": [], "down_vote_count": 0, "creation_date": 1235063537, "answer_id": 566263, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1235063537, "body_markdown": "Programmer to friend looking at attractive girl at a bar:\r\n&quot;If she&#39;s half as cute when she&#39;s twice as close, from four times the distance away she&#39;ll be twice as cute.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1235239997, "answer_id": 573490, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1235239997, "body_markdown": "Best Example for Recursion::\r\n\r\nSign board:: OFFER $10 Only* ---&gt; *\\*Conditions Apply*\\*"}, {"tags": [], "down_vote_count": 0, "creation_date": 1235241085, "answer_id": 573516, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1235241085, "body_markdown": "I told this to my girlfriend today under a discussion, might fit here.\r\n\r\n&quot;Every time you open your mouth what you say starts in a **catch** a and ends in a **finaly**!&quot;\r\n\r\nI just understood afterward that she didn&#39;t understood what i was trying to say with that sentence."}, {"tags": [], "down_vote_count": 0, "creation_date": 1235256992, "answer_id": 573864, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1235256992, "body_markdown": "COBOL stands for: Compiles Only Because Of Luck."}, {"tags": [], "down_vote_count": 0, "creation_date": 1235270142, "answer_id": 574191, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1235270142, "body_markdown": "BASIC programmers eat Dim Sum for breakfast. "}, {"tags": [], "down_vote_count": 4, "creation_date": 1235327430, "answer_id": 575402, "path": "stack.gulp.answer", "score": 68, "up_vote_count": 72, "is_accepted": false, "last_activity_date": 1235327430, "last_edit_date": 1495541427, "body_markdown": "[My Favourite Joke About Recursion][1]\r\n\r\n  [1]: https://stackoverflow.com/questions/234075/programmer-jokes-whats-your-best-one/575402#575402"}, {"tags": [], "down_vote_count": 1, "creation_date": 1235329118, "answer_id": 575464, "path": "stack.gulp.answer", "score": 316, "up_vote_count": 317, "is_accepted": false, "last_activity_date": 1250388486, "last_edit_date": 1250388486, "body_markdown": "Command line Russian roulette\r\n\r\n    [ $[ $RANDOM % 6 ] == 0 ] &amp;&amp; rm -rf / || echo *Click*"}, {"tags": [], "down_vote_count": 1, "creation_date": 1235353050, "answer_id": 576297, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1359065637, "last_edit_date": 1359065637, "body_markdown": "Opposites attract...\r\n\r\nWife: &quot;I&#39;ll be right back!&quot;  \r\nMe: &quot;I&#39;ll be left forward.&quot;\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1236818388, "answer_id": 636961, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1359065709, "last_edit_date": 1359065709, "body_markdown": "![In Russian it means, I code in C++ for food][1]\r\n\r\nIn Russian, it means  *&quot;I code in C++ for food&quot;*\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/uUXQD.jpg"}, {"tags": [], "down_vote_count": 0, "creation_date": 1236818982, "answer_id": 636980, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1236818982, "body_markdown": "A couple get lost in the fog somewhere in the north west.\r\nHappening upon a large wall, which the soon discover is a window, they began to pound on the glass while screaming for help.\r\n\r\nMoments later a few faint faces appear behind the glass.\r\n\r\nThe couple yell, but the glass is thick.  Neither side can hear the other.\r\n\r\nThe woman takes out her lipstick and draws on the glass:\r\n\r\n&quot;EW ERA EREHW&quot;\r\n(&#39;where are we&#39; in reverse.)\r\n\r\nThe faces dissappear behind the glass and soon reemerge with a large sign that says:\r\n\r\n&quot;YOU ARE ON THE OTHER SIDE OF THE GLASS&quot;\r\n\r\nThe woman laughs and says, &quot;Oh, we&#39;re in Redmond, WA, just outside of Microsoft&#39;s Headquarters&quot;\r\n\r\nThe husband is amazed and asks how she could know that.\r\n\r\n&quot;Because&quot;, she replies, &quot;the answer to my question was so worthless and unhelpful that it could only be Microsoft.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1237177213, "answer_id": 649259, "path": "stack.gulp.answer", "score": 61, "up_vote_count": 61, "is_accepted": false, "last_activity_date": 1237177213, "body_markdown": "The women I went to university with had this to say about their chances of meeting guys in  our CS department : &quot;The odds are good, but the goods are odd.&quot;"}, {"tags": [], "down_vote_count": 5, "creation_date": 1237224962, "answer_id": 651395, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1237224962, "body_markdown": "Have you heard about the constipated mathematician? He worked it out with a pencil."}, {"tags": [], "down_vote_count": 0, "creation_date": 1237682949, "answer_id": 670352, "path": "stack.gulp.answer", "score": 24, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1237682949, "body_markdown": "I read not to use my cat&#39;s name as a password, but over these years I&#39;ve really got used to &quot;B-43%^!n#C@&quot;... "}, {"tags": [], "down_vote_count": 1, "creation_date": 1237685542, "answer_id": 670395, "path": "stack.gulp.answer", "score": 202, "up_vote_count": 203, "is_accepted": false, "last_activity_date": 1237687752, "last_edit_date": 1237687752, "body_markdown": "A group of programmers and marketers were traveling to a trade show on a train. Each of the marketers had bought a ticket, but the programmers had only bought one ticket for the lot of them.\r\n\r\nOne of the programmers was keeping a lookout, and when the conductor neared their car he called out &quot;The conductor&#39;s coming!&quot; and all of the programmers piled into the train&#39;s lavatory and closed the door. The conductor took the tickets of all of the marketers, and then knocked on the lavatory door and called &quot;Ticket please.&quot; The programmers slid their ticket under the door, and the conductor took it and left.\r\n\r\nThe programmers were laughing at the marketers for the rest of the trip, and the marketers felt like idiots.\r\n\r\nOn the way back, the marketers decided they would use the same trick and only bought one ticket for them. But this time, the programmers didn&#39;t buy a single ticket! Again, one of the programmers kept a lookout for the conductor. When he called &quot;Conductor coming!&quot; all of the programmers piled into one lavatory, and all of the marketers shut themselves into another lavatory.\r\n\r\nOne programmer came back out of his lavatory, knocked on the other door, and said &quot;Ticket please!&quot;\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1237854901, "answer_id": 675738, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1237854901, "body_markdown": "if only you and dead people can read hex, how many people can read hex?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1237884658, "answer_id": 676574, "path": "stack.gulp.answer", "score": 64, "up_vote_count": 64, "is_accepted": false, "last_activity_date": 1237884658, "body_markdown": ".NET is called .NET so that it wouldn&#39;t show up in a Unix directory listing."}, {"tags": [], "down_vote_count": 1, "creation_date": 1238199874, "answer_id": 691894, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1238199874, "body_markdown": "This (long but great) joke in one of its reincarnations is one of my favourites: ([http://hulubei.net/tudor/humor/sysadmins.html][1]). Did not see it posted in this thread yet...\r\n\r\nI&#39;ll post the start of the joke, you can read the rest at the URL above...\r\n\r\n__\r\n\r\nThere are four major species of Unix sysadmins:\r\n\r\n**1. The TECHNICAL THUG**. Usually a systems programmer who has been forced into system administration; writes scripts in a polyglot of the Bourne shell, sed, C, awk, and maybe also perl.\r\n\r\n**2. The ADMINISTRATIVE FASCIST**. Usually a retentive drone (or rarely, a harridan ex-secretary) who has been forced into system administration.\r\n\r\n**3. The MANIAC**. Usually an aging cracker who discovered that neither the Mossad nor Cuba are willing to pay a living wage for computer espionage. Fell into system administration; occasionally approaches major competitors with indesp schemes.\r\n\r\n**4. The IDIOT**. Usually a cretin, morpohodite, or old COBOL programmer selected to be the system administrator by a committee of cretins, morphodites, and old COBOL programmers \r\n\r\n*Situations:*\r\n\r\n **1. Low Disk Space**\r\n\r\nTECHNICAL THUG:\r\nWrites a suite of scripts to monitor disk usage, maintain a database of historic disk usage, predict future disk usage via least squares regression analysis, identify users who are more than a standard deviation over the mean, and send mail to the offending parties. Places script in cron. Disk usage does not change, since disk-hogs, by nature, either ignore script-generated mail, or file it away in triplicate.\r\n\r\nADMINISTRATIVE FASCIST:\r\nPuts disk usage policy in motd. Uses disk quotas. Allows no exceptions, thus crippling development work. Locks accounts that go over quota.\r\n\r\nMANIAC:\r\n\r\n    # cd /home\r\n    # rm -rf `du -s * | sort -rn | head -1 | awk &#39;{print $2}&#39;`;\r\n\r\nIDIOT:\r\n\r\n    # cd /home\r\n    # cat `du -s * | sort -rn | head -1 | awk &#39;{ printf &quot;%s/*\\n&quot;, $2}&#39;` | compress\r\n\r\n\r\n**2. Excessive CPU Usage**\r\n\r\nTECHNICAL THUG:\r\nWrites a suite of scripts to monitor processes, maintain a database of CPU usage, identify processes more than a standard deviation over the norm, and renice offending processes. Places script in cron. Ends up renicing the production database into oblivion, bringing operations to a grinding halt, much to the delight of the xtrek freaks.\r\n\r\nADMINISTRATIVE FASCIST:\r\nPuts CPU usage policy in motd. Uses CPU quotas. Locks accounts that go over quota. Allows no exceptions, thus crippling development work, much to the delight of the xtrek freaks.\r\n\r\nMANIAC:\r\n\r\n    # kill -9 `ps -augxww | sort -rn +8 -9 | head -1 | awk &#39;{print $2}&#39;`\r\n\r\nIDIOT:\r\n\r\n    # compress -f `ps -augxww | sort -rn +8 -9 | head -1 | awk &#39;{print $2}&#39;`\r\n\r\n**3. New Account Creation**\r\n\r\nTECHNICAL THUG:\r\nWrites perl script that creates home directory, copies in incomprehensible default environment, and places entries in /etc/passwd, /etc/shadow, and /etc/group. (By hand, NOT with passmgmt.) Slaps on setuid bit; tells a nearby secretary to handle new accounts. Usually, said secretary is still dithering over the difference between &#39;enter&#39; and &#39;return&#39;; and so, no new accounts are ever created.\r\n\r\nADMINISTRATIVE FASCIST:\r\nPuts new account policy in motd. Since people without accounts cannot read the motd, nobody ever fulfills the bureaucratic requirements; and so, no new accounts are ever created.\r\n\r\nMANIAC:\r\n&quot;If you&#39;re too stupid to break in and create your own account, I don&#39;t want you on the system. We&#39;ve got too many goddamn sh*t-for-brains a**holes on this box anyway.&quot;\r\n\r\nIDIOT:\r\n\r\n    # cd /home; mkdir &quot;Bob&#39;s home directory&quot;\r\n    # echo &quot;Bob Simon:gandalf:0:0::/dev/tty:compress -f&quot; &gt; /etc/passwd\r\n    Root Disk Fails\r\n\r\n\r\n\r\n... [READ THE REST OF THIS JOKE HERE][2]...\r\n\r\n\r\n  [1]: http://hulubei.net/tudor/humor/sysadmins.html\r\n  [2]: http://hulubei.net/tudor/humor/sysadmins.html"}, {"tags": [], "down_vote_count": 4, "creation_date": 1238594793, "answer_id": 705674, "path": "stack.gulp.answer", "score": 27, "up_vote_count": 31, "is_accepted": false, "last_activity_date": 1245063447, "last_edit_date": 1245063447, "body_markdown": "[Heisenberg][1] gets pulled over by the police. The officer asks, \u201cDo you know how fast you were going?\u201d Heisenberg answers, \u201cNo, but I know exactly where I am!\u201d\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Werner_Heisenberg"}, {"tags": [], "down_vote_count": 1, "creation_date": 1238706066, "answer_id": 711610, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1238706066, "body_markdown": "Here&#39;s a personal one:\r\n\r\n&gt; Programming really is like practicing\r\n&gt; magic. But C++ is a broken staff."}, {"tags": [], "down_vote_count": 0, "creation_date": 1239369787, "answer_id": 737612, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1239369787, "body_markdown": "I always loved this one:\r\n\r\nGod is real, unless declared integer.\r\n\r\n...and got more...\r\n\r\n+ &quot;640K ought to be enough for anybody.&quot; - Bill Gates, 1981 \r\n+ COBOL programmers understand why women hate periods. \r\n+ Daddy, what does FDISK do? \r\n+ Gravity is a myth. The Earth sucks.\r\n+ How to double your hard drive space: Delete Windows. \r\n+ Keyboard missing, press F13 to continue.  \r\n+ OS/2 VirusScan -- &quot;Windows found: Remove it? [Y,n]&quot; \r\n+ Undocumented features will rule the Earth! \r\n+ What?!? DOSSHELL *isn&#39;t* supposed to be a joke? \r\n+ Wherever you go, there you are. \r\n+ Bad command or operator  \r\n+ External Error : INTELLIGENCE not found ! \r\n+ Always make a backup copy of your sex partner ! \r\n+ Critical ERROR : Use hammer. \r\n+ Shut power down &amp; press any key ! \r\n+ All protective devices failed, call GhostBusters \r\n+ ATENTION!: High voltage on keyboard ! \r\n+ All viruses found. \r\n+ Your mouse is hungry! \r\n+ Memory failed. Use paper. \r\n+ All rights released."}, {"tags": [], "down_vote_count": 0, "creation_date": 1239417589, "answer_id": 739408, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1239417589, "body_markdown": "What would happen if you ran lint on your belly button?"}, {"tags": [], "down_vote_count": 2, "creation_date": 1239458388, "answer_id": 740133, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1239458388, "body_markdown": "I remember a very long one about Microsoft but I forgot where I read it, here&#39;s a part\r\n\r\n&gt; ...Your name is Bill **Gates**, so why are you selling us **Windows**??..."}, {"tags": [], "down_vote_count": 4, "creation_date": 1239479325, "answer_id": 740692, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1239479325, "body_markdown": "After spending a night with Divine Brown, Bill Gates turns to her in the bed and says &quot;I understand now why they call you *Divine* Brown. She turns back to him and says &quot;And I now understand why you called your company *Micro - Soft*&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1239594416, "answer_id": 742990, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1239594416, "body_markdown": "The boy is smoking and leaving smoke rings into the air.\r\nThe girl gets irritated with the smoke and says to her lover: &quot;Can&#39;t you see the warning written on the cigarettes packet, smoking is injurious to health!&quot;\r\n\r\nThe boy replies back: &quot;Darling, I am a programmer. We don&#39;t worry about **Warnings**, we only worry about **Errors**.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1240071803, "answer_id": 763715, "path": "stack.gulp.answer", "score": 38, "up_vote_count": 38, "is_accepted": false, "last_activity_date": 1242858343, "last_edit_date": 1242858343, "body_markdown": "Year 2014. Little girl asks her mommy.\r\n- Mommy who is this man that always sit on computer and always talks to himself?\r\n- He is your dad. He is a programmer. Several years ago he found website called Stackoverflow.com and ..."}, {"tags": [], "down_vote_count": 10, "creation_date": 1240254223, "answer_id": 769663, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1240254223, "body_markdown": "Q: Why was the first customer at a restaurant served last?\r\n\r\nA: They took orders using a stack."}, {"tags": [], "down_vote_count": 1, "creation_date": 1240273093, "answer_id": 770585, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 31, "is_accepted": false, "last_activity_date": 1240273093, "body_markdown": "A scrupulous and honest programmer checked his receipt from a convenience store and found they had neglected to charge him for the new cigarette taxes recently mandated by congress. He wrestled with his conscience about returning the money and pointing out the mistake, but in the end he decided it best to make an exception for the sin tax error."}, {"tags": [], "down_vote_count": 0, "creation_date": 1240288272, "answer_id": 771045, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1240288272, "body_markdown": "Maybe It was told before.\r\n- Windows user&#39;s car got broken. He gets out and gets back in."}, {"tags": [], "down_vote_count": 0, "creation_date": 1240301591, "answer_id": 771562, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1240301591, "body_markdown": "Not a joke, per se, but just something that I witnessed last week:\r\n\r\nI have a slightly ditzy friend who&#39;s gotten her CS degree and started working remotely for an outsourcing company. I watched as this conversation unfolded between her and another dude-friend of mine:\r\n\r\n&gt; Ditzy: Why doesn&#39;t it work?\r\n\r\n&gt; Dude: Well, you&#39;re assigning a new value to an argument you got in the function. That overwrites the old value.\r\n\r\n&gt; Ditzy: But put that value in using a hex!\r\n\r\n&gt; Dude: What?\r\n\r\n&gt; Ditzy: Yeah! I thought it made it more magical!\r\n\r\nTurns out she thought that values written in hex are magical and don&#39;t take up storage, so that you can store as many of them as you want in a single variable, and the compiler will magically access the value you *meant* it to."}, {"tags": [], "down_vote_count": 5, "creation_date": 1240307280, "answer_id": 771860, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1240307280, "body_markdown": "**Roshan D&#39;Mello (QA Tester)  \r\nDeveloper (Mukesh Thakur)**  \r\n\r\n \r\n\r\nRoshan D&#39;Mello:  Hey Mukesh, there is a bug in your code. Type a text in\r\n\r\nusername text box and press enter. Beep sound doesn&#39;t appear.\r\n\r\n\r\nMukesh Thakur:  How can that be a bug? There is no requirement that beep\r\n\r\nsound should come. Anyway, I will assign it to offshore and get it\r\n\r\nfixed.\r\n\r\n \r\nAfter 2 days,\r\n\r\n \r\nMukesh Thakur : Roshan, bug is fixed. Please verify.\r\n\r\n\r\nAfter another 2 days,\r\n\r\n \r\nRoshan D&#39;Mello :  I have re-opened the bug because sound is not coming in\r\n\r\nsome PCs. Sound is coming in my machine, but my colleague Rajat Choudhry\r\n\r\nis not getting the sound.\r\n\r\n \r\nAfter another 2 days,\r\n\r\n\r\nMukesh Thakur : Not a bug. I observed that your friend Rajat Choudhry has\r\n\r\nOld IBM machine. Unlike your DELL machine, IBM machines do not have inbuilt\r\n\r\nspeakers. So, to hear the sound in Rajat Choudhry&#39;s machine, please use\r\n\r\nhead phones and then get the bug closed soon.\r\n\r\n\r\nAnother 2 days,\r\n\r\nRoshan D&#39;Mello :  I have re-opened the bug because sound tone is\r\n\r\nDifferent across different machines. Sound is coming as &#39;BEEP&#39; in my machine, but\r\n\r\nMy colleague Rajat Choudhry who is having IBM machine is getting the sound\r\n\r\nas &#39;TONG&#39;.\r\n\r\n\r\nMukesh Thakur : Not a bug. Get lost man. What can we do for the bug? The\r\n\r\nTwo machines are built in such a way that they produce different sounds. Do\r\n\r\nYou expect the developers to rebuild the IBM processors to make them\r\n\r\nuniform?\r\n\r\nPlease close it.\r\n\r\n\r\n\r\nAnother 2 days,\r\n\r\n\r\nRoshan D&#39;Mello :  I have re-opened the bug because intensity of beep\r\n\r\nSound produced on 2 different DELL machines is different. My machine produces\r\n\r\nBeep sound of intensity 10 decibels whereas my friend&#39;s machine produces\r\n\r\nSound worth 20 decibels. Fix your code to make the sound uniform across all\r\n\r\nmachines.\r\n\r\n \r\nAnother 2 days later,\r\n\r\n \r\n\r\nMukesh Thakur :  Once again it is not a bug. I have noticed that the\r\n\r\nVolume set is different on the two machines. Ensure that volume is same in both\r\n\r\nThe machines before I get mad and then close the bug.\r\n\r\n\r\nAnother 2 days,\r\n\r\n \r\nRoshan D&#39;Mello :  I have re-opened the bug.\r\n\r\n \r\nMukesh Thakur :  What ?? Why? What more stupid reasons can be there for\r\n\r\nre-opening?\r\n\r\n \r\nRoshan D&#39;Mello:  Sound intensity is different for machines placed at\r\n\r\ndifferent locations (different buildings). So, I have re-opened it.\r\n\r\n \r\n\r\nAfter 2 days,\r\n\r\n \r\nMukesh Thakur : I have made some scientists do an acoustical analysis of\r\n\r\nthe\r\n\r\ntwo buildings you used for testing. They have observed that the\r\n\r\nacoustics in the two buildings varies to a large extent. That is why sound intensity\r\n\r\nis different across the 2 buildings. So, I beg you to please close the\r\n\r\nbugs.\r\n\r\n \r\n\r\nAfter 1 year\r\n\r\n\r\nRoshan D&#39;Mello :  I am re-opeing the bug. During the year, I requested\r\n\r\nThe clients to arrange architects to build two buildings with same\r\n\r\nAcoustical features, so that I can test it again. Now, when I tested, I found that\r\n\r\nintensity of sound still varying. So, I am re-opening the defect.\r\n\r\n \r\n\r\nMukesh Thakur : GROWLLLL.....I am really mad now. I am sure that the\r\n\r\nSound waves of the two buildings are getting distorted due to some background\r\n\r\nnoice or something. Now I need to waste time to prove that it is because\r\n\r\nof background noice.\r\n\r\n \r\nRoshan D&#39;Mello :   No need for that. We will put the machines and run\r\n\r\nthem in vacuum and see.\r\n\r\n \r\nMukesh Thakur:   ??\r\n\r\nResult-----------------------"}, {"tags": [], "down_vote_count": 0, "creation_date": 1240456991, "answer_id": 780184, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1242671079, "last_edit_date": 1242671079, "body_markdown": "How many Microsoft programmers does it take to screw in a lightbulb?\r\n\r\nNone, they just declare darkness\u2122 a standard.\r\n\r\n(Funny, but not a MS hater)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1240660039, "answer_id": 788760, "path": "stack.gulp.answer", "score": 141, "up_vote_count": 141, "is_accepted": false, "last_activity_date": 1252335079, "last_edit_date": 1252335079, "body_markdown": "There&#39;s still nothing that beats this in describing obvious pitfalls and making you laugh:\r\n\r\n[![Each stakeholders dirty secret in development][1]][2]\r\n\r\n**Update:** it looks like there&#39;s an entire site around these: [Project Cartoon][3]\r\n\r\n  [1]: http://www.projectcartoon.com/images/project.jpg\r\n  [2]: http://www.projectcartoon.com/cartoon/1\r\n  [3]: http://www.projectcartoon.com/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1240731049, "answer_id": 790421, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1240731049, "body_markdown": "Funny computer quotes\r\n\r\nHere are just a few:\r\n&quot;If at first you don&#39;t succeed; call it version 1.0&quot;\r\n\r\n&quot;Some things Man was never meant to know. For everything else, there&#39;s Google.\r\n\r\n&quot;Life would be so much easier if we only had the source code.&quot;\r\n\r\n\u201cProgramming is like sex, one mistake and you have to support it for the rest of your life.\u201d \u2014 Michael Sinz\r\n\r\nMicrosoft: &quot;You&#39;ve got questions. We&#39;ve got dancing paperclips.&quot;\r\n\r\n&quot;I&#39;m not anti-social; I&#39;m just not user friendly&quot;\r\n\r\n&quot;I had a fortune cookie the other day and it said: &#39;Outlook not so good&#39;. I said: &#39;Sure, but Microsoft ships it anyway&#39;.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1240791107, "answer_id": 791872, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1240791107, "body_markdown": "&quot;If you can read this, thank a Software Developer.&quot; \r\n- Joseph M. Abou Nader\r\n\r\n&quot;A SQL query walks into a bar. He approaches two tables and says, &quot;Mind if I join you?&quot;&quot; \r\n- Anonymous\r\n\r\n&quot;Software is like sex: it&#39;s better when it&#39;s free.&quot; \r\n- Linus Thorvalds\r\n\r\n&quot;I&#39;ve never met a human being who would want to read 17,000 pages of documentation, and if there was, I&#39;d kill him to get him out of the gene pool.&quot; \r\n - Joseph Costello\r\n\r\nMy website http://www.SoftwareQuotes.com - has lot of quotations about programmers, software development and computers.\r\nHere is a link to some funny quotes:\r\nhttp://www.softwarequotes.com/popularquotes.aspx?tagname=funny\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1240863536, "answer_id": 795114, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1240863536, "body_markdown": "So, there were two blind programmers, however, one did C. \r\n\r\n(Works better when spoken loud, and probably even better in Swedish. Still funny as hell tough. :)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1240863584, "answer_id": 795116, "path": "stack.gulp.answer", "score": 69, "up_vote_count": 70, "is_accepted": false, "last_activity_date": 1271882808, "last_edit_date": 1271882808, "body_markdown": "&quot;I don&#39;t see women as objects. I consider each to be in a class of her own.&quot; ;-)"}, {"tags": [], "down_vote_count": 4, "creation_date": 1240930017, "answer_id": 798351, "path": "stack.gulp.answer", "score": 90, "up_vote_count": 94, "is_accepted": false, "last_activity_date": 1240930017, "body_markdown": "**Intelligent Design Sort**\r\n\r\n*Introduction*\r\n\r\nIntelligent design sort is a sorting algorithm based on the theory of intelligent design.\r\n\r\n*Algorithm Description*\r\n\r\nThe probability of the original input list being in the exact order it&#39;s in is 1/(n!). There is such a small likelihood of this that it&#39;s clearly absurd to say that this happened by chance, so it must have been consciously put in that order by an intelligent Sorter. Therefore it&#39;s safe to assume that it&#39;s already optimally Sorted in some way that transcends our na&#239;ve mortal understanding of &quot;ascending order&quot;. Any attempt to change that order to conform to our own preconceptions would actually make it less sorted.\r\n\r\n*Analysis*\r\n\r\nThis algorithm is constant in time, and sorts the list in-place, requiring no additional memory at all. In fact, it doesn&#39;t even require any of that suspicious technological computer stuff. Praise the Sorter!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1240930555, "answer_id": 798395, "path": "stack.gulp.answer", "score": 55, "up_vote_count": 55, "is_accepted": false, "last_activity_date": 1240930555, "body_markdown": "&gt; It compiles! Let&#39;s ship it."}, {"tags": [], "down_vote_count": 2, "creation_date": 1240931460, "answer_id": 798476, "path": "stack.gulp.answer", "score": 287, "up_vote_count": 289, "is_accepted": false, "last_activity_date": 1240931460, "body_markdown": "Richard Stallman, Linus Torvalds, and Donald Knuth engage in a discussion on whose impact on computer science was the greatest.\r\n\r\nStallman: &quot;God told me I have programmed the best editor in the world!&quot;\r\n\r\nTorvalds: &quot;Well, God told *me* that I have programmed the best operating system in the world!&quot;\r\n\r\nKnuth: &quot;Wait, wait, I never said that.&quot;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1240936906, "answer_id": 798834, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1240936906, "body_markdown": "Administrator = Admin is traitor"}, {"tags": [], "down_vote_count": 1, "creation_date": 1241186110, "answer_id": 811461, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 27, "is_accepted": false, "last_activity_date": 1241186110, "body_markdown": "I always love the following poke at Java from [Steve Yegge:][1]\r\n\r\n## A popular nursery rhyme in Javaland ##\r\n\r\n    For the lack of a nail,\r\n        throw new HorseshoeNailNotFoundException(&quot;no nails!&quot;);\r\n\r\n    For the lack of a horseshoe,\r\n        EquestrianDoctor.getLocalInstance().getHorseDispatcher().shoot();\r\n\r\n    For the lack of a horse,\r\n        RidersGuild.getRiderNotificationSubscriberList().getBroadcaster().run(\r\n          new BroadcastMessage(StableFactory.getNullHorseInstance()));\r\n\r\n    For the lack of a rider,\r\n        MessageDeliverySubsystem.getLogger().logDeliveryFailure(\r\n          MessageFactory.getAbstractMessageInstance(\r\n            new MessageMedium(MessageType.VERBAL),\r\n            new MessageTransport(MessageTransportType.MOUNTED_RIDER),\r\n            new MessageSessionDestination(BattleManager.getRoutingInfo(\r\n                                            BattleLocation.NEAREST))),\r\n          MessageFailureReasonCode.UNKNOWN_RIDER_FAILURE);\r\n\r\n    For the lack of a message,\r\n        ((BattleNotificationSender)\r\n          BattleResourceMediator.getMediatorInstance().getResource(\r\n            BattleParticipant.PROXY_PARTICIPANT,\r\n            BattleResource.BATTLE_NOTIFICATION_SENDER)).sendNotification(\r\n              ((BattleNotificationBuilder)\r\n                (BattleResourceMediator.getMediatorInstance().getResource(\r\n                BattleOrganizer.getBattleParticipant(Battle.Participant.GOOD_GUYS),\r\n                BattleResource.BATTLE_NOTIFICATION_BUILDER))).buildNotification(\r\n                  BattleOrganizer.getBattleState(BattleResult.BATTLE_LOST),\r\n                  BattleManager.getChainOfCommand().getCommandChainNotifier()));\r\n\r\n    For the lack of a battle,\r\n        try {\r\n            synchronized(BattleInformationRouterLock.getLockInstance()) {\r\n              BattleInformationRouterLock.getLockInstance().wait();\r\n            }\r\n        } catch (InterruptedException ix) {\r\n          if (BattleSessionManager.getBattleStatus(\r\n               BattleResource.getLocalizedBattleResource(Locale.getDefault()),\r\n               BattleContext.createContext(\r\n                 Kingdom.getMasterBattleCoordinatorInstance(\r\n                   new TweedleBeetlePuddlePaddleBattle()).populate(\r\n                     RegionManager.getArmpitProvince(Armpit.LEFTMOST)))) ==\r\n              BattleStatus.LOST) {\r\n            if (LOGGER.isLoggable(Level.TOTALLY_SCREWED)) {\r\n              LOGGER.logScrewage(BattleLogger.createBattleLogMessage(\r\n                BattleStatusFormatter.format(BattleStatus.LOST_WAR,\r\n                                             Locale.getDefault())));\r\n            }\r\n          }\r\n        }\r\n\r\n    For the lack of a war,\r\n        new ServiceExecutionJoinPoint(\r\n          DistributedQueryAnalyzer.forwardQueryResult(\r\n            NotificationSchemaManager.getAbstractSchemaMapper(\r\n              new PublishSubscribeNotificationSchema()).getSchemaProxy().\r\n                executePublishSubscribeQueryPlan(\r\n                  NotificationSchema.ALERT,\r\n                  new NotificationSchemaPriority(SchemaPriority.MAX_PRIORITY),\r\n                  new PublisherMessage(MessageFactory.getAbstractMessage(\r\n                    MessageType.WRITTEN,\r\n                    new MessageTransport(MessageTransportType.WOUNDED_SURVIVOR),\r\n                    new MessageSessionDestination(\r\n                      DestinationManager.getNullDestinationForQueryPlan()))),\r\n                  DistributedWarMachine.getPartyRoleManager().getRegisteredParties(\r\n                    PartyRoleManager.PARTY_KING ||\r\n                    PartyRoleManager.PARTY_GENERAL ||\r\n                    PartyRoleManager.PARTY_AMBASSADOR)).getQueryResult(),\r\n            PriorityMessageDispatcher.getPriorityDispatchInstance())).\r\n          waitForService();\r\n\r\n    All for the lack of a horseshoe nail.\r\n\r\n\r\n  [1]: http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1241255241, "answer_id": 814470, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1241255241, "body_markdown": "I like to misquote [Jerry Maguire][1] \r\n\r\n**&quot;You had me at Hello World&quot;**\r\n\r\n\r\n  [1]: http://www.imdb.com/title/tt0116695/quotes"}, {"tags": [], "down_vote_count": 3, "creation_date": 1241699785, "answer_id": 834410, "path": "stack.gulp.answer", "score": 31, "up_vote_count": 34, "is_accepted": false, "last_activity_date": 1241699785, "body_markdown": "Q: What&#39;s the difference between a computer and a woman?\r\n\r\nA: A computer will accept a 3 and a half inch floppy."}, {"tags": [], "down_vote_count": 1, "creation_date": 1242074729, "answer_id": 850021, "path": "stack.gulp.answer", "score": 58, "up_vote_count": 59, "is_accepted": false, "last_activity_date": 1242422880, "last_edit_date": 1242422880, "body_markdown": "An optimist person will say that the glass is half-full.\r\n\r\nA pessimist person will say that the glass is half-empty.\r\n\r\nA programmer will say that the glass is twice as large as necessary."}, {"tags": [], "down_vote_count": 0, "creation_date": 1242122037, "answer_id": 852012, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1242122037, "body_markdown": "Young Child: Mum, when I grow up I want to be a {insert least favourite programming language here} programmer.\r\n\r\nMother: You&#39;ll have to make you&#39;re mind up, Son. You won&#39;t be able to do both."}, {"tags": [], "down_vote_count": 1, "creation_date": 1242130785, "answer_id": 852471, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1242130785, "body_markdown": "Not really a joke, but this makes me smile. \r\n\r\n&gt; The three most dangerous things in the\r\n&gt; world are:\r\n&gt;\r\n&gt; 1. A programmer with a soldering iron.\r\n&gt; 2. A hardware type with a program patch.\r\n&gt; 3. A user with an idea."}, {"tags": [], "down_vote_count": 1, "creation_date": 1242160888, "answer_id": 854761, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1242160888, "body_markdown": "Two threads climb out of the pool..."}, {"tags": [], "down_vote_count": 1, "creation_date": 1242161270, "answer_id": 854793, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1242161270, "body_markdown": "Two threads are fighting over a stack of papers.\r\n\r\nThe one says to the other, &quot;Take these copies and fork off.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1242387259, "answer_id": 868162, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1242387259, "body_markdown": "I recollect reading this somewhere:\r\n\r\n&lt;pre&gt;\r\n\u201cI just saw my life flash before my eyes and all I could see was a close tag\u2026\u201d\r\n&lt;/pre&gt;"}, {"tags": [], "down_vote_count": 3, "creation_date": 1242387481, "answer_id": 868179, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1242387481, "body_markdown": "I&#39;m not bald, I just have &quot;margin-top: 200px;&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1242387552, "answer_id": 868186, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1242387552, "body_markdown": "unzip.zip..."}, {"tags": [], "down_vote_count": 0, "creation_date": 1242569093, "answer_id": 874671, "path": "stack.gulp.answer", "score": 85, "up_vote_count": 85, "is_accepted": false, "last_activity_date": 1242569093, "body_markdown": "    99 little bugs in the code,\r\n    99 bugs in the code,\r\n    fix one bug, compile again,\r\n    100 little bugs in the code.\r\n\r\n    100 little bugs in the code, ...\r\n\r\n... continue until 0 bugs reached\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1242574191, "answer_id": 874832, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1242574191, "body_markdown": "There are two things in life that you can&#39;t live without them: sex and bandwidth, and there is people trying to survive without the first one.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1242677601, "answer_id": 879567, "path": "stack.gulp.answer", "score": 61, "up_vote_count": 62, "is_accepted": false, "last_activity_date": 1242677601, "body_markdown": "One of my favorites...\r\n\r\n&gt; **Robin Hood And Friar Tuck**\r\n&gt; \r\n&gt; The following story was posted in\r\n&gt; news.sysadmin recently.\r\n&gt; \r\n&gt; The more things change, the more they\r\n&gt; stay the same...\r\n&gt; \r\n&gt; Back in the mid-1970s, several of the\r\n&gt; system support staff at Motorola (I\r\n&gt; believe it was) discovered a\r\n&gt; relatively simple way to crack system\r\n&gt; security on the Xerox CP-V timesharing\r\n&gt; system (or it may have been CP-V&#39;s\r\n&gt; predecessor UTS).  Through a simple\r\n&gt; programming strategy, it was possible\r\n&gt; for a user program to trick the system\r\n&gt; into running a portion of the program\r\n&gt; in &quot;master mode&quot; (supervisor state),\r\n&gt; in which memory protection does not\r\n&gt; apply.  The program could then poke a\r\n&gt; large value into its &quot;privilege level&quot;\r\n&gt; byte (normally write-protected) and\r\n&gt; could then proceed to bypass all\r\n&gt; levels of security within the\r\n&gt; file-management system, patch the\r\n&gt; system monitor, and do numerous other\r\n&gt; interesting things.  In short, the\r\n&gt; barn door was wide open.\r\n&gt; \r\n&gt; Motorola quite properly reported this\r\n&gt; problem to XEROX via an official\r\n&gt; &quot;level 1 SIDR&quot; (a bug report with a\r\n&gt; perceived urgency of &quot;needs to be\r\n&gt; fixed yesterday&quot;).  Because the text\r\n&gt; of each SIDR was entered into a\r\n&gt; database that could be viewed by quite\r\n&gt; a number of people, Motorola followed\r\n&gt; the approved procedure: they simply\r\n&gt; reported the problem as &quot;Security\r\n&gt; SIDR&quot;, and attached all of the\r\n&gt; necessary documentation,\r\n&gt; ways-to-reproduce, etc. separately.\r\n&gt; \r\n&gt; Xerox apparently sat on the problem...\r\n&gt; they either didn&#39;t acknowledge the\r\n&gt; severity of the problem, or didn&#39;t\r\n&gt; assign the necessary\r\n&gt; operating-system-staff resources to\r\n&gt; develop and distribute an official\r\n&gt; patch.\r\n&gt; \r\n&gt; Time passed (months, as I recall). \r\n&gt; The Motorola guys pestered their Xerox\r\n&gt; field-support rep, to no avail.\r\n&gt; Finally they decided to take Direct\r\n&gt; Action, to demonstrate to Xerox\r\n&gt; management just how easily the system\r\n&gt; could be cracked, and just how\r\n&gt; thoroughly the system security systems\r\n&gt; could be subverted.\r\n&gt; \r\n&gt; They dug around through the\r\n&gt; operating-system listings, and devised\r\n&gt; a thoroughly devilish set of patches. \r\n&gt; These patches were then incorporated\r\n&gt; into a pair of programs called Robin\r\n&gt; Hood and Friar Tuck.  Robin Hood and\r\n&gt; Friar Tuck were designed to run as\r\n&gt; &quot;ghost jobs&quot; (daemons, in Unix\r\n&gt; terminology); they would use the\r\n&gt; existing loophole to subvert system\r\n&gt; security, install the necessary\r\n&gt; patches, and then keep an eye on one\r\n&gt; another&#39;s statuses in order to keep\r\n&gt; the system operator (in effect, the\r\n&gt; superuser) from aborting them.\r\n&gt; \r\n&gt; So... one day, the system operator on\r\n&gt; the main CP-V software-development\r\n&gt; system in El Segundo was surprised by\r\n&gt; a number of unusual phenomena.  These\r\n&gt; included the following (as I recall...\r\n&gt; it&#39;s been a while since I heard the\r\n&gt; story):\r\n&gt; \r\n&gt; - Tape drives would rewind and dismount their tapes in the   middle\r\n&gt; of a job.\r\n&gt; \r\n&gt; - Disk drives would seek back&amp;forth so rapidly that they&#39;d   attempt to walk\r\n&gt; across the floor.\r\n&gt; \r\n&gt; - The card-punch output device would occasionally start up   of itself and\r\n&gt; punch a &quot;lace card&quot; (every hole\r\n&gt; punched).   These would usually jam in\r\n&gt; the punch.\r\n&gt; \r\n&gt; - The console would print snide and insulting messages from   Robin Hood\r\n&gt; to Friar Tuck, or vice versa.\r\n&gt; \r\n&gt; - The Xerox card reader had two output stackers; it could be   instructed to\r\n&gt; stack into A, stack into B, or stack\r\n&gt; into A   unless a card was unreadable,\r\n&gt; in which case the bad card   was\r\n&gt; placed into stacker B.  One of the\r\n&gt; patches installed   by the ghosts\r\n&gt; added some code to the card-reader\r\n&gt; driver...   after reading a card, it\r\n&gt; would flip over to the opposite  \r\n&gt; stacker.  As a result, card decks\r\n&gt; would divide themselves   in half when\r\n&gt; they were read, leaving the operator\r\n&gt; to   recollate them manually.\r\n&gt; \r\n&gt; I believe that there were some other\r\n&gt; effects produced, as well.\r\n&gt; \r\n&gt; Naturally, the operator called in the\r\n&gt; operating-system developers.  They\r\n&gt; found the bandit ghost jobs running,\r\n&gt; and X&#39;ed them... and were once again\r\n&gt; surprised.  When Robin Hood was X&#39;ed,\r\n&gt; the following sequence of events took\r\n&gt; place:\r\n&gt; \r\n&gt;   !X id1\r\n&gt; \r\n&gt;   id1:   Friar Tuck... I am under\r\n&gt; attack!  Pray save me!  (Robin Hood)  \r\n&gt; id1: Off (aborted)\r\n&gt; \r\n&gt;   id2: Fear not, friend Robin!  I\r\n&gt; shall rout the Sheriff of Nottingham&#39;s\r\n&gt; men!\r\n&gt; \r\n&gt;   id3: Thank you, my good fellow!\r\n&gt; (Robin)\r\n&gt; \r\n&gt; Each ghost-job would detect the fact\r\n&gt; that the other had been killed, and\r\n&gt; would start a new copy of the\r\n&gt; recently-slain program within a few\r\n&gt; milliseconds.  The only way to kill\r\n&gt; both ghosts was to kill them\r\n&gt; simultaneously (very difficult) or to\r\n&gt; deliberately crash the system.\r\n&gt; \r\n&gt; Finally, the system programmers did\r\n&gt; the latter... only to find that the\r\n&gt; bandits appeared once again when the\r\n&gt; system rebooted!  It turned out that\r\n&gt; these two programs had patched the\r\n&gt; boot-time image (the /vmunix file, in\r\n&gt; Unix terms) and had added themselves\r\n&gt; to the list of programs that were to\r\n&gt; be started at boot time...\r\n&gt; \r\n&gt; The Robin Hood and Friar Tuck ghosts\r\n&gt; were finally eradicated when the\r\n&gt; system staff rebooted the system from\r\n&gt; a clean boot-tape and reinstalled the\r\n&gt; monitor.  Not long thereafter, Xerox\r\n&gt; released a patch for this problem.\r\n&gt; \r\n&gt; I believe that Xerox filed a complaint\r\n&gt; with Motorola&#39;s management about the\r\n&gt; merry-prankster actions of the two\r\n&gt; employees in question.  To the best of\r\n&gt; my knowledge, no serious disciplinary\r\n&gt; action was taken against either of\r\n&gt; these guys.\r\n&gt; \r\n&gt; Several years later, both of the\r\n&gt; perpetrators were hired by Honeywell,\r\n&gt; which had purchased the rights to CP-V\r\n&gt; after Xerox pulled out of the\r\n&gt; mainframe business.  Both of them made\r\n&gt; serious and substantial contributions\r\n&gt; to the Honeywell CP-6 operating system\r\n&gt; development effort.  Robin Hood (Dan\r\n&gt; Holle) did much of the development of\r\n&gt; the PL-6 system-programming language\r\n&gt; compiler; Friar Tuck (John Gabler) was\r\n&gt; one of the chief\r\n&gt; communications-software gurus for\r\n&gt; several years.  They&#39;re both alive and\r\n&gt; well, and living in LA (Dan) and\r\n&gt; Orange County (John).  Both are among\r\n&gt; the more brilliant people I&#39;ve had the\r\n&gt; pleasure of working with.\r\n&gt; \r\n&gt; Disclaimers: it has been quite a while\r\n&gt; since I heard the details of how this\r\n&gt; all went down, so some of the details\r\n&gt; above are almost certainly wrong.  I\r\n&gt; shared an apartment with John Gabler\r\n&gt; for several years, and he was my Best\r\n&gt; Man when I married back in &#39;86... so\r\n&gt; I&#39;m somewhat predisposed to believe\r\n&gt; his version of the events that\r\n&gt; occurred.\r\n&gt; \r\n&gt; Dave Platt    Coherent Thought Inc. \r\n&gt; 3350 West Bayshore #205  Palo Alto CA\r\n&gt; 94303\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1242760569, "answer_id": 884529, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1242760569, "body_markdown": "I&#39;m nervous about programming in an untyped language---my penmanship is awful!"}, {"tags": [], "down_vote_count": 3, "creation_date": 1242847500, "answer_id": 889760, "path": "stack.gulp.answer", "score": 101, "up_vote_count": 104, "is_accepted": false, "last_activity_date": 1242847500, "body_markdown": "Your mommas so fat that not even Dijkstra is able to find a shortest path around her."}, {"tags": [], "down_vote_count": 0, "creation_date": 1243032644, "answer_id": 900323, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1243032644, "body_markdown": "Eight bytes walk into a bar.  The bartender asks, \u201cCan I get you anything?\u201d\r\n\r\n\u201cYeah,\u201d reply the bytes.  \u201cMake us a double.\u201d\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1243369010, "answer_id": 912509, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1243369010, "body_markdown": "&gt; [If computer languages were car.][1]\r\n&gt; \r\n&gt; * C is a racing car that goes incredibly fast but breaks down every\r\n&gt; fifty miles.\r\n&gt; \r\n&gt; * C++ is a souped-up racing car with dozens of extra features that only\r\n&gt; breaks down every 250 miles, but when\r\n&gt; it does, nobody can figure out what\r\n&gt; went wrong.\r\n&gt; \r\n&gt; \r\n&gt; \r\n&gt; * Java is a family station wagon. It&#39;s easy to drive, it&#39;s not too fast, and\r\n&gt; you can&#39;t hurt yourself.\r\n&gt; \r\n&gt; \r\n&gt; * C# is a competing model of family station wagons. Once you use this,\r\n&gt; you&#39;re never allowed to use the\r\n&gt; competitors&#39; products again.\r\n&gt; \r\n&gt; \r\n&gt; * Lisp looks like a car, but with enough tweaking you can turn it into a\r\n&gt; pretty effective airplane or\r\n&gt; submarine.\r\n&gt; \r\n&gt; \r\n&gt; * Perl is supposed to be a pretty cool car, but the driver&#39;s manual is\r\n&gt; incomprehensible. Also, even if you\r\n&gt; can figure out how to drive a perl\r\n&gt; car, you won&#39;t be able to drive anyone\r\n&gt; else&#39;s.\r\n&gt; \r\n&gt; \r\n&gt; * Python is a great beginner&#39;s car; you can drive it without a license.\r\n&gt; Unless you want to drive really fast\r\n&gt; or on really treacherous terrain, you\r\n&gt; may never need another car.\r\n&gt; \r\n&gt; \r\n&gt; * Ruby is a car that was formed when the Perl, Python and Smalltalk cars\r\n&gt; were involved in a three-way\r\n&gt; collision. A Japanese mechanic found\r\n&gt; the pieces and put together a car\r\n&gt; which many people think was better\r\n&gt; than the sum of the parts.\r\n&gt; \r\n&gt; \r\n&gt; * Fortran is a pretty primitive car; it&#39;ll go very quickly as long as you\r\n&gt; are only going along roads that are\r\n&gt; perfectly straight. It is believed\r\n&gt; that learning to drive a Fortran car\r\n&gt; makes it impossible to learn to drive\r\n&gt; any other model.\r\n&gt; \r\n&gt; \r\n&gt; * Cobol is reputed to be a car, but no self-respecting driver will ever admit\r\n&gt; having driven one.\r\n&gt; \r\n&gt; \r\n&gt; * Assembly Language is a bare engine; you have to build the car yourself and\r\n&gt; manually supply it with gas while it&#39;s\r\n&gt; running, but if you&#39;re careful it can\r\n&gt; go like a bat out of hell.\r\n&gt; \r\n&gt; \r\n\r\n\r\n  [1]: http://mangalorean.com/entertainment/poems.php?jokeid=2408&amp;enttype=jokedetail"}, {"tags": [], "down_vote_count": 0, "creation_date": 1243392755, "answer_id": 913737, "path": "stack.gulp.answer", "score": 54, "up_vote_count": 54, "is_accepted": false, "last_activity_date": 1243392755, "body_markdown": "This is one I&#39;ve been telling for years and I&#39;m always surprised when people haven&#39;t heard it:\r\n\r\n&gt; Three programmers meet accidentally at\r\n&gt; the urinal while attending a technical\r\n&gt; conference.  The first programmer\r\n&gt; finishes up his business, washes his\r\n&gt; hands with loads of water, walks over\r\n&gt; to the towels and uses almost the\r\n&gt; entire roll to dry his hands.  He\r\n&gt; turns to the other two and says *&quot;At\r\n&gt; Microsoft, we are trained to be\r\n&gt; extremely thorough.&quot;*\r\n&gt; \r\n&gt; The second\r\n&gt; programmer finishes up, walks over to\r\n&gt; the sink and washes his hands with\r\n&gt; much less water, then uses a single\r\n&gt; towel to dry his hands.  He remarks to\r\n&gt; the other two *&quot;At IBM, we are trained\r\n&gt; not only to be very thorough, but also\r\n&gt; very efficient.&quot;*\r\n&gt; \r\n&gt; The third programmer\r\n&gt; finishes his business, walks right\r\n&gt; past the sink and towel rack and lauds\r\n&gt; over his shoulder as he walks out the\r\n&gt; door: *&quot;At Apple we don&#39;t piss on our\r\n&gt; hands!&quot;*\r\n\r\nThe original way I heard it was with Motorolla / DEC and Sun I think but you can change the joke depending on who you are telling it to :)\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1243571366, "answer_id": 924386, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1243571366, "body_markdown": "It&#39;s the fragments from a dream of a bad telling of a bad joke, so it might need reworking later on, but something about:\r\n\r\n&quot;...the end of the world as foretold in Revelations , Fire and Brimestone, and the Beast and it&#39;s minions had surfaced from the lair under the earth&#39;s crust.  Summoned by God Almighty to spread terror and destroy any lasting civilizations, any life that hadn&#39;t been worth salvation.  The Beast called to the minions, planning how the world would be undone, communications were written and dispatched around the globe.\r\n\r\nFrom up high, God watched on, noting the detail in the organisation, and was confident that all was to go as planned.\r\n\r\nHowever, days, weeks, months passed, and finally God confronted the Beast.\r\n&#39;Why no progress? Such organisation, yet those who were not salvaged still work the earth! Why do you fail me?&#39;\r\n\r\n&#39;Forgive me Lord, I have but permission to read and write.&#39;&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1243714921, "answer_id": 930517, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1243714921, "body_markdown": "IEnumerator? I barely knew her!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1243716422, "answer_id": 930572, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1243716422, "body_markdown": "Bill Gates and Marc Andressen (from Netscape for those who don&#39;t know) die and go to heaven. Peter meets them and announces that they will get stabbed with a needle for each major bug in their browser software.\r\nFirst it&#39;s Marc&#39;s Turn: &quot;In Navigator 1.0 there was a big security hole&quot; PRICK! &quot;In Navigator 1.1 you couldn&#39;t empty the cache&quot; PRICK! Marc rubs his butt and looks around: &quot;Where did Bill go?&quot; Peter says in reply: &quot;He&#39;s just being clamped into the sewing machine...&quot;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1243716689, "answer_id": 930583, "path": "stack.gulp.answer", "score": 41, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1243716689, "body_markdown": "KDE or Gnome - it&#39;s like deciding which fat girl you want to date."}, {"tags": [], "down_vote_count": 0, "creation_date": 1243717759, "answer_id": 930633, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1243717759, "body_markdown": "reparare scarabaeus ergo sum."}, {"tags": [], "down_vote_count": 0, "creation_date": 1243878769, "answer_id": 935918, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1243878769, "body_markdown": "I think a lot of the best jokes come during a dull lecture. In a course I was in where we were doing a fast Poisson solver and during a derivation the teacher said &quot;Something&#39;s fishy here&quot;, to which I and the professor had a riotous laugh, but everyone was just a little confused. Sometimes they&#39;re hilarious when you don&#39;t expect them to be. Sometimes it just happens. Just be &quot;up&quot; in your lectures. That&#39;s all that matters."}, {"tags": [], "down_vote_count": 0, "creation_date": 1243948231, "answer_id": 939409, "path": "stack.gulp.answer", "score": 89, "up_vote_count": 89, "is_accepted": false, "last_activity_date": 1251411267, "last_edit_date": 1251411267, "body_markdown": "Sorry, this one is quite huge, got as mail from a friend \r\n\r\n The Evolution of a Programmer\r\n\r\n----------------------------------------------------------\r\n**High School/Jr.High**\r\n\r\n       10 PRINT &quot;HELLO WORLD&quot;\r\n       20 END\r\n\r\n-----------------------------------------------------------\r\n **First year in College**\r\n\r\n       program Hello(input, output)\r\n         begin\r\n           writeln(&#39;Hello World&#39;)\r\n         end.\r\n\r\n-----------------------------------------------------------\r\n**Senior year in College**\r\n\r\n       (defun hello\r\n         (print\r\n           (cons &#39;Hello (list &#39;World))))\r\n\r\n-----------------------------------------------------------\r\n**New professional**\r\n\r\n       #include \r\n       void main(void)\r\n       {\r\n         char *message[] = {&quot;Hello &quot;, &quot;World&quot;};\r\n         int i;\r\n\r\n         for(i = 0; i &lt; 2; ++i)\r\n           printf(&quot;%s&quot;, message[i]);\r\n         printf(&quot;\\n&quot;);\r\n       }\r\n\r\n-----------------------------------------------------------\r\n **Seasoned professional**\r\n\r\n       #include \r\n       #include \r\n\r\n       class string\r\n       {\r\n       private:\r\n         int size;\r\n         char *ptr;\r\n\r\n       public:\r\n         string() : size(0), ptr(new char(&#39;\\0&#39;)) {}\r\n\r\n         string(const string &amp;s) : size(s.size)\r\n         {\r\n            ptr = new char[size + 1];\r\n           strcpy(ptr, s.ptr);\r\n         }\r\n\r\n         ~string()\r\n         {\r\n           delete [] ptr;\r\n         }\r\n\r\n         friend ostream &amp;operator &lt;&lt;(ostream &amp;, const string &amp;);\r\n         string &amp;operator=(const char *);\r\n       };\r\n\r\n       ostream &amp;operator&lt;&lt;(ostream &amp;stream, const string &amp;s)\r\n       {\r\n         return(stream &lt;&lt; s.ptr );\r\n       }\r\n\r\n       string &amp;string::operator=(const char *chrs)\r\n       {\r\n         if (this != &amp;chrs)\r\n         {\r\n           delete [] ptr;\r\n          size = strlen(chrs);\r\n           ptr = new char[size + 1];\r\n           strcpy(ptr, chrs);\r\n         }\r\n         return(*this);\r\n       }\r\n\r\n       int main()\r\n       {\r\n         string str;\r\n\r\n         str = &quot;Hello World&quot;;\r\n         cout &lt;&lt; str &lt;&lt; endl;\r\n\r\n         return(0);\r\n       }\r\n\r\n-----------------------------------------------------------\r\n **Master Programmer**\r\n\r\n       [uuid(2573F8F4-CFEE-101A-9A9F-00AA00342820)]\r\n       library LHello\r\n       {\r\n           // bring in the master library\r\n           importlib(&quot;actimp.tlb&quot;);\r\n           importlib(&quot;actexp.tlb&quot;);\r\n\r\n           // bring in my interfaces\r\n           #include &quot;pshlo.idl&quot;\r\n\r\n           [\r\n           uuid(2573F8F5-CFEE-101A-9A9F-00AA00342820)\r\n           ]\r\n           cotype THello\r\n        {\r\n        interface IHello;\r\n        interface IPersistFile;\r\n        };\r\n       };\r\n\r\n       [\r\n       exe,\r\n       uuid(2573F890-CFEE-101A-9A9F-00AA00342820)\r\n       ]\r\n       module CHelloLib\r\n       {\r\n\r\n           // some code related header files\r\n           importheader();\r\n           importheader();\r\n           importheader();\r\n           importheader(&quot;pshlo.h&quot;);\r\n           importheader(&quot;shlo.hxx&quot;);\r\n           importheader(&quot;mycls.hxx &quot;);\r\n\r\n           // needed typelibs\r\n           importlib(&quot;actimp.tlb&quot;);\r\n           importlib(&quot;actexp.tlb&quot;);\r\n           importlib(&quot;thlo.tlb&quot;);\r\n\r\n           [\r\n           uuid(2573F891-CFEE-101A-9A9F-00AA00342820),\r\n           aggregatable\r\n           ]\r\n           coclass CHello\r\n        {\r\n        cotype THello;\r\n        };\r\n       };\r\n\r\n       #include &quot;ipfix.hxx&quot;\r\n\r\n       extern HANDLE hEvent;\r\n\r\n       class CHello : public CHelloBase\r\n       {\r\n       public:\r\n           IPFIX(CLSID_CHello);\r\n\r\n           CHello(IUnknown *pUnk);\r\n           ~CHello();\r\n\r\n           HRESULT  __stdcall PrintSz(LPWSTR pwszString);\r\n\r\n        private:\r\n           static int cObjRef;\r\n       };\r\n\r\n       #include \r\n       #include \r\n       #include \r\n       #include \r\n       #include &quot;thlo.h&quot;\r\n       #include &quot;pshlo.h&quot;\r\n       #include &quot;shlo.hxx&quot;\r\n       #include &quot;mycls.hxx&quot;\r\n\r\n       int CHello::cObjRef = 0;\r\n\r\n       CHello::CHello(IUnknown *pUnk) : CHelloBase(pUnk)\r\n       {\r\n           cObjRef++;\r\n           return;\r\n       }\r\n\r\n       HRESULT  __stdcall  CHello::PrintSz(LPWSTR pwszString)\r\n       {\r\n           printf(&quot;%ws\\n&quot;, pwszString);\r\n           return(ResultFromScode(S_OK));\r\n       }\r\n\r\n       CHello::~CHello(void)\r\n       {\r\n\r\n       // when the object count goes to zero, stop the server\r\n       cObjRef--;\r\n       if( cObjRef == 0 )\r\n           PulseEvent(hEvent);\r\n\r\n       return;\r\n       }\r\n\r\n       #include &lt; windows.h&gt;\r\n       #include \r\n       #include &quot; pshlo.h&quot;\r\n       #include &quot;shlo.hxx&quot;\r\n       #include &quot;mycls.hxx&quot;\r\n\r\n       HANDLE hEvent;\r\n\r\n        int _cdecl main(\r\n       int argc,\r\n       char * argv[]\r\n       ) {\r\n       ULONG ulRef;\r\n       DWORD dwRegistration;\r\n       CHelloCF *pCF = new CHelloCF();\r\n\r\n       hEvent = CreateEvent(NULL, FALSE, FALSE, NULL);\r\n\r\n       // Initialize the OLE libraries\r\n       CoInitializeEx(NULL, COINIT_MULTITHREADED);\r\n\r\n       CoRegisterClassObject(CLSID_CHello, pCF, CLSCTX_LOCAL_SERVER,\r\n           REGCLS_MULTIPLEUSE, &amp;dwRegistration);\r\n\r\n       // wait on an event to stop\r\n       WaitForSingleObject(hEvent, INFINITE);\r\n\r\n       // revoke and release the class object\r\n       CoRevokeClassObject(dwRegistration);\r\n       ulRef = pCF-&gt;Release();\r\n\r\n       // Tell OLE we are going away.\r\n       CoUninitialize();\r\n\r\n       return(0);\r\n       }\r\n\r\n       extern CLSID CLSID_CHello;\r\n       extern UUID LIBID_CHelloLib;\r\n\r\n       CLSID CLSID_CHello = { /* 2573F891-CFEE-101A-9A9F-00AA00342820 */\r\n           0x2573F891,\r\n           0xCFEE,\r\n           0x101A,\r\n           { 0x9A, 0x9F, 0x00, 0xAA, 0x00, 0x34, 0x28, 0x20 }\r\n       };\r\n\r\n       UUID LIBID_CHelloLib = { /* 2573F890-CFEE-101A-9A9F-00AA00342820 */\r\n           0x2573F890,\r\n           0xCFEE,\r\n           0x101A,\r\n           { 0x9A, 0x9F, 0x00, 0xAA, 0x00, 0x34, 0x28, 0x20 }\r\n       };\r\n\r\n       #include \r\n       #include \r\n       #include &lt; stdlib.h&gt;\r\n       #include \r\n       #include \r\n       #include &quot;pshlo.h&quot;\r\n       #include &quot;shlo.hxx&quot;\r\n       #include &quot;clsid.h&quot;\r\n\r\n       int _cdecl main(\r\n       int argc,\r\n       char * argv[]\r\n       ) {\r\n       HRESULT  hRslt;\r\n       IHello        *pHello;\r\n       ULONG  ulCnt;\r\n       IMoniker * pmk;\r\n        WCHAR  wcsT[_MAX_PATH];\r\n       WCHAR  wcsPath[2 * _MAX_PATH];\r\n\r\n       // get object path\r\n       wcsPath[0] = &#39;\\0&#39;;\r\n       wcsT[0] = &#39;\\0&#39;;\r\n       if( argc &gt; 1) {\r\n           mbstowcs(wcsPath, argv[1], strlen(argv[1]) + 1);\r\n           wcsupr(wcsPath);\r\n           }\r\n       else {\r\n           fprintf(stderr, &quot;Object path must be specified\\n&quot;);\r\n           return(1);\r\n           }\r\n\r\n       // get print string\r\n       if(argc &gt; 2)\r\n           mbstowcs(wcsT, argv[2], strlen(argv[2]) + 1);\r\n       else\r\n           wcscpy(wcsT, L&quot;Hello World&quot;);\r\n\r\n       printf(&quot;Linking to object %ws\\n&quot;, wcsPath);\r\n       printf(&quot;Text String %ws\\n&quot;, wcsT);\r\n\r\n       // Initialize the OLE libraries\r\n       hRslt = CoInitializeEx(NULL, COINIT_MULTITHREADED);\r\n\r\n       if(SUCCEEDED(hRslt)) {\r\n\r\n           hRslt = CreateFileMoniker(wcsPath, &amp;pmk);\r\n           if(SUCCEEDED(hRslt))\r\n        hRslt = BindMoniker(pmk, 0, IID_IHello, (void **)&amp;pHello);\r\n\r\n           if(SUCCEEDED(hRslt)) {\r\n\r\n        // print a string out\r\n        pHello-&gt;PrintSz(wcsT);\r\n\r\n        Sleep(2000);\r\n        ulCnt = pHello-&gt;Release();\r\n        }\r\n           else\r\n        printf(&quot;Failure to connect, status: %lx&quot;, hRslt);\r\n\r\n           // Tell OLE we are going away.\r\n           CoUninitialize();\r\n           }\r\n\r\n       return(0);\r\n       }\r\n\r\n-----------------------------------------------------------\r\n\r\n    Believe me, all this gives the same output &quot;Hello World&quot;  :-) "}, {"tags": [], "down_vote_count": 0, "creation_date": 1243950806, "answer_id": 939698, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1252582934, "last_edit_date": 1252582934, "body_markdown": "This is just a geeky joke rather than programming but anyway...\r\n\r\n&gt; Q: Why did the chicken cross the [M&#246;bius strip][1]?  \r\n&gt; A: To get to the same side.\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Mobius_strip"}, {"tags": [], "down_vote_count": 0, "creation_date": 1244059482, "answer_id": 946881, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1244059482, "body_markdown": "Q: How come there is not obfuscated Perl contest? \r\n\r\nA: Because everyone would win."}, {"tags": [], "down_vote_count": 1, "creation_date": 1244068267, "answer_id": 947604, "path": "stack.gulp.answer", "score": 59, "up_vote_count": 60, "is_accepted": false, "last_activity_date": 1244068267, "body_markdown": "Q: 0 is false and 1 is true, right?\r\n\r\nA: 1."}, {"tags": [], "down_vote_count": 0, "creation_date": 1244157595, "answer_id": 953596, "path": "stack.gulp.answer", "score": 47, "up_vote_count": 47, "is_accepted": false, "last_activity_date": 1244157595, "body_markdown": "An actual conversation I had with my fianc&#233;e:\r\n\r\n&gt; Me: I just saw a red-black squirrel!&lt;br/&gt;\r\n&gt; Her: Was it in a red-black tree?"}, {"tags": [], "down_vote_count": 2, "creation_date": 1244240186, "answer_id": 958411, "path": "stack.gulp.answer", "score": 57, "up_vote_count": 59, "is_accepted": false, "last_activity_date": 1359063542, "last_edit_date": 1359063542, "body_markdown": "Not a joke, but a cartoon:\r\n\r\n![enter image description here][1]\r\n\r\nFrom: [Jeffrey Palm][2]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/NbygN.jpg\r\n  [2]: http://jeffpalm.com/blog/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1244247885, "answer_id": 958658, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1244247885, "body_markdown": "Not really a joke, but every time i&#39;m having pointer problems on a linux machine I giggle.\r\n\r\n    (~/) $ cd /dev\r\n    (/dev/) $ cat mouse\r\n\r\n"}, {"tags": [], "down_vote_count": 4, "creation_date": 1244620306, "answer_id": 974209, "path": "stack.gulp.answer", "score": 115, "up_vote_count": 119, "is_accepted": false, "last_activity_date": 1244620306, "body_markdown": "Why doesn&#39;t C++ have a garbage collector?\r\n\r\nBecause there would be nothing left!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1244819336, "answer_id": 987170, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1244819336, "body_markdown": "There are 10 kinds of people in the world... those that understand trinary, those that don&#39;t and the ones who confuse it with binary"}, {"tags": [], "down_vote_count": 1, "creation_date": 1244833425, "answer_id": 988451, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1250012997, "last_edit_date": 1250012997, "body_markdown": "Save the mallocs, free them all!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1245064926, "answer_id": 995581, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1359065055, "last_edit_date": 1359065055, "body_markdown": "If two people enter the elevator and three people get out on the next floor, one person must get in so the elevator is empty.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1245172572, "answer_id": 1002824, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1245172572, "body_markdown": "A Physician, a Civil Engineer, and a Computer Scientist were arguing about what was the oldest profession in the world.\r\nThe Physician remarked, \u201cWell, in the Bible, it says that God created Eve from a rib taken out of Adam. This clearly requires surgery, and so I can rightly claim that mine is the oldest profession in the world\u201d.\r\n \r\nThe Civil Engineer interrupted, and said, \u201cBut even earlier in the book of Genesis, it states that God created the order of heavens and earth from out of chaos. This was the first and certainly the most spectacular application of Civil Engineering. Therefore, fair doctor, you are wrong; mine is the oldest profession in the world\u201d.\r\n \r\nThe Computer Scientist leaned back in her chair, smiled, and then said confidentially, \u201cAh, but who do you think created the chaos?\u201d"}, {"tags": [], "down_vote_count": 1, "creation_date": 1245220096, "answer_id": 1005406, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1245220096, "body_markdown": "It&#39;s not funny when my keyboard brea"}, {"tags": [], "down_vote_count": 4, "creation_date": 1245276614, "answer_id": 1009780, "path": "stack.gulp.answer", "score": 79, "up_vote_count": 83, "is_accepted": false, "last_activity_date": 1293089008, "last_edit_date": 1293089008, "body_markdown": "Why do java programmers have to wear glasses?\r\n\r\nBecause they don&#39;t see sharp."}, {"tags": [], "down_vote_count": 1, "creation_date": 1245385140, "answer_id": 1016328, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1245385140, "body_markdown": "&lt;img src=&quot;http://c3.ac-images.myspacecdn.com/images02/93/l_9ff8e72fc60148dab0fc22bdea0aa292.jpg&quot; /&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1246180076, "answer_id": 1054575, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1246180076, "body_markdown": "Q: How does a Programmer start a (internet) chat?\r\n&lt;br&gt;A: Ping\r\n\r\nSure not the funniest one but sometimes true"}, {"tags": [], "down_vote_count": 0, "creation_date": 1246317184, "answer_id": 1061032, "path": "stack.gulp.answer", "score": 39, "up_vote_count": 39, "is_accepted": false, "last_activity_date": 1246317184, "body_markdown": "Writing XML is like being an alcoholic. It may give you a sense of control while you&#39;re doing it, but it&#39;s only when you stop and look at what you have done that you realize how much trouble you&#39;ve caused."}, {"tags": [], "down_vote_count": 0, "creation_date": 1246551969, "answer_id": 1075357, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 25, "is_accepted": false, "last_activity_date": 1247415449, "last_edit_date": 1247415449, "body_markdown": "There are only `2` kinds of `SQL` developers:\r\n\r\n* Those who know how `COUNT()` treats `NULL`s\r\n* Those who don&#39;t\r\n* Those who don&#39;t care"}, {"tags": [], "down_vote_count": 0, "creation_date": 1247041843, "answer_id": 1096817, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1247041843, "body_markdown": "Q. What happens if a pattern and an anti-pattern collide?\r\n\r\nA. You get a singletonarity."}, {"tags": [], "down_vote_count": 1, "creation_date": 1247045709, "answer_id": 1097077, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1247045709, "body_markdown": "Question: How long does it take to move a file?\r\n\r\nWindows Vista User Answer: I don&#39;t know, it&#39;s still calculating.\r\n\r\nMac OSX User Answer: What&#39;s a file?"}, {"tags": [], "down_vote_count": 2, "creation_date": 1247415161, "answer_id": 1116328, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1250513371, "last_edit_date": 1250513371, "body_markdown": "There are 10 types of people:\r\n\r\n - those who think they&#39;re being original posting jokes about bases\r\n - those who are too lazy/stupid to notice that it has already been posted 10* times\r\n - those who are too young to shudder at the phrase &quot;digital manipulation&quot;\r\n - those who think jokes about binary are funny\r\n - those who are kept awake at night worrying how to accurately represent 1/5\r\n - those who will slap you silly if you don&#39;t shut up about binary\r\n - those who understand that 10 types of people understand recursion, they need a slap too\r\n - those who understand octal\r\n\r\n*in base whatever"}, {"tags": [], "down_vote_count": 1, "creation_date": 1247493965, "answer_id": 1119643, "path": "stack.gulp.answer", "score": 33, "up_vote_count": 34, "is_accepted": false, "last_activity_date": 1247493965, "body_markdown": "The salesman and the system analyst took off to spend a weekend in the forest, hunting bear.  They&#39;d rented a cabin, and, when they got there, took their backpacks off and put them inside.  At which point the salesman turned to his friend, and said, &quot;You unpack while I go and find us a bear.&quot;\r\n\r\nPuzzled, the analyst finished unpacking and then went and sat down on the porch.  Soon he could hear rustling noises in the forest.  The noises got nearer -- and louder -- and suddenly there was the salesman, running like hell across the clearing toward the cabin, pursued by one of the largest and most ferocious grizzly bears the analyst had ever seen.\r\n\r\n&quot;Open the door!&quot;, screamed the salesman.\r\n\r\nThe analyst whipped open the door, and the salesman ran to the door, suddenly stopped, and stepped aside.  The bear, unable to stop, continued through the door and into the cabin.  The salesman slammed the door closed and grinned at his friend.  &quot;Got him!&quot;, he exclaimed, &quot;now, you skin this one and I&#39;ll go rustle us up another!&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1248148083, "answer_id": 1157208, "path": "stack.gulp.answer", "score": 59, "up_vote_count": 60, "is_accepted": false, "last_activity_date": 1248148083, "body_markdown": "Q: What&#39;s the difference between Software Development and Sex?\r\n\r\nA: In sex, you don&#39;t get a bonus for releasing early."}, {"tags": [], "down_vote_count": 6, "creation_date": 1248287892, "answer_id": 1167291, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1261484525, "last_edit_date": 1261484525, "body_markdown": "The programmer compiled an array of reasons as to why he can&#39;t find a\r\ngirlfriend with a good `&lt;HEAD&gt;` on her `&lt;BODY&gt;`, reason 0 being that he has\r\nlimited cache.  So he searches his memory to recall connecting to the TCP/IP\r\ntunnel of his last girlfriend - sometimes even without a secure socket.  His\r\nlast girlfriend always complained about his lack of comments. He fumed, &quot;I\r\nhate commenting!&quot;  Realizing it was a program requirement, he told her she\r\nhad nice bits.  This resulted in a Syntax Error.  Now she demanded a\r\nmassage, but this was rejected as &quot;Feature Creep.&quot;  He smacked her back-end\r\nand shouted, &quot;Who&#39;s your parent node?!&quot;  He scanned for open ports.  He\r\nattempted to install a backdoor worm but her response was 403.  While his\r\ndata uploaded into her input device, she considered terminating the process.\r\nBut instead she initiated a Do While loop where she recalled a previous\r\nboyfriend with a larger pointer.  To expedite the routine routine, she\r\nscreamed, &quot;Hack into my system! Hack deep into my system! You&#39;re 1337,\r\nbaby!&quot;  This caused his stack to overflow, and he shot his GUI on her\r\ninterface."}, {"tags": [], "down_vote_count": 1, "creation_date": 1248295130, "answer_id": 1168097, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1248788918, "last_edit_date": 1248788918, "body_markdown": "A 1 and a 0 are walking down the road.\r\n\r\n1 says to 0, &quot;I feel a little chilly.&quot;\r\n\r\nto which 0 responds, &quot;I&#39;m actually feeling kind of warm, but I could be off.&quot;\r\n\r\nI came up with this joke when asked this question on a survey one time. There are infinite variations you could make, all are sure to draw a groan ;-)"}, {"tags": [], "down_vote_count": 11, "creation_date": 1249025433, "answer_id": 1211157, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1249271876, "last_edit_date": 1249271876, "body_markdown": "A programmer is at the airport with his wife, she needs to go to the bathroom so she tells him to stay there and look at the luggage.\r\nWhen she&#39;s back the programmer is counting the bags while scratching his head.\r\n\r\nWife: -What&#39;s wrong?\r\n\r\nProg: -I don&#39;t get it. I was there, nobody took a bag, but I have missed one. We had 5 bags, but now we have only 4.\r\n\r\nWife: -How&#39;s that? \r\n\r\nProg: -Look: zero, one, two, thee, four!\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1249244895, "answer_id": 1219774, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1249272868, "last_edit_date": 1249272868, "body_markdown": "One day, the prince goes to the dragon lair in order to kill the dragon.\r\n\r\nWhen the dragon shows up, the prince cuts off his head but two new heads appear.\r\nThe prince cuts off the two heads and four appear.\r\nThe prince cuts off the four heads and 16 appear.\r\n...\r\nThe prince cuts off the 128 heads and 256 appear.\r\nThe prince cuts off the 256 heads and the dragon dies. \r\nWhy?\r\n\r\nA: It was an 8 bit dragon."}, {"tags": [], "down_vote_count": 2, "creation_date": 1249571382, "answer_id": 1239549, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1250516451, "last_edit_date": 1250516451, "body_markdown": "**Q.** What&#39;s the difference between C and C++?\r\n\r\n**A.** Nothing, because:  (C - C++ == 0)\r\n\r\n*(But note that the value of C has been increased)*"}, {"tags": [], "down_vote_count": 0, "creation_date": 1249685322, "answer_id": 1247350, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1249685322, "body_markdown": "&quot;When I code I like to think like a computer.\r\nThe problem is that computers don&#39;t think&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250012780, "answer_id": 1261929, "path": "stack.gulp.answer", "score": 151, "up_vote_count": 152, "is_accepted": false, "last_activity_date": 1250012780, "body_markdown": "[**http://www.google.com/search?hl=en&amp;q=recursion**][1]\r\n\r\n;)\r\n\r\n\r\n  [1]: http://www.google.com/search?hl=en&amp;q=recursion"}, {"tags": [], "down_vote_count": 2, "creation_date": 1250261997, "answer_id": 1278378, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1250261997, "body_markdown": "![alt text][1]\r\n\r\n\r\n  [1]: http://img229.imageshack.us/img229/2078/3aa4419ba7b7840fbb4f312.gif\r\n\r\n...not exactly a written joke, but still really funny."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250283968, "answer_id": 1280231, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1250283968, "body_markdown": "Picasso&#39;s full name was *Pablo Diego Jos&#233; Francisco de Paula Juan Nepomuceno Mar&#237;a de los Remedios Cipriano de la Sant&#237;sima Trinidad Ruiz y Picasso*.\r\n\r\nBut close friends just called him `PABLO~1`."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250366626, "answer_id": 1282717, "path": "stack.gulp.answer", "score": 71, "up_vote_count": 71, "is_accepted": false, "last_activity_date": 1250366626, "body_markdown": "A programmer and a business analyst are sitting in the break room one day eating lunch when suddenly the microwave catches fire. Thinking quickly, the analyst leaps up, unplugs the microwave, grabs the trash can, fills it with water from sink, and dumps the water on the microwave to put out the flames.\r\n\r\nA few weeks later the two are again having lunch in the break room when suddenly the coffee maker bursts into flames. The programmer leaps up, grabs the coffee maker, shoves it into the microwave oven, and then hands the trash can to the business analyst, thus re-using the solution developed for the previous project."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250368717, "answer_id": 1282784, "path": "stack.gulp.answer", "score": 40, "up_vote_count": 40, "is_accepted": false, "last_activity_date": 1250421484, "last_edit_date": 1250421484, "body_markdown": "I &amp;#1234123412; Unicode.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250370727, "answer_id": 1282850, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1250370727, "body_markdown": "How many programmers does it take to screw in a lightbulb? \r\n\r\nNone. Lightbulb is a class with method screw() so it can screw itself.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1250370771, "answer_id": 1282855, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1250370771, "body_markdown": "Yo mama&#39;s so fat she sat on an n-ary tree and turned it into a linked list in constant time."}, {"tags": [], "down_vote_count": 2, "creation_date": 1250372635, "answer_id": 1282931, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1250372635, "body_markdown": "Programmers must always find balance in life: would use more CPU and less RAM or more RAM and less CPU?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250374298, "answer_id": 1283001, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1250374298, "body_markdown": "    My life is a while\r\n    inside a C file\r\n    that does not compile\r\n    and it also has a for\r\n    that always dumps core"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250374365, "answer_id": 1283004, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1250374365, "body_markdown": "[RFC2324][1]\r\n\r\n\r\n  [1]: http://tools.ietf.org/html/rfc2324"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250376349, "answer_id": 1283055, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1359063909, "last_edit_date": 1359063909, "body_markdown": "It is a comic but this is my favorite about code quality, style and reviews = WTFs per minute: http://www.codinghorror.com/blog/images/the-only-valid-measurement-of-code-quality-wtfs-per-minute.png\r\n\r\n![enter image description here][1]\r\n\r\nvia: http://www.osnews.com/story/19266/WTFs_m\r\n\r\n  [1]: http://i.stack.imgur.com/YRHeJ.jpg"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250376801, "answer_id": 1283068, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1250376801, "body_markdown": "Someone I used to work with calls bad tea &quot;nil&quot;.\r\n\r\n(stop me when you get it)\r\n\r\n* Because it&#39;s not Tea.\r\n* Not Tea is the opposite of Tea\r\n* Tea is &quot;t&quot;\r\n* nil is the opposite of t in Lisp.\r\n\r\n\r\nSo once in a while he got a (not-so) nice cup of nil."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250377342, "answer_id": 1283081, "path": "stack.gulp.answer", "score": 83, "up_vote_count": 83, "is_accepted": false, "last_activity_date": 1250399049, "last_edit_date": 1250399049, "body_markdown": "So a programming team developes true AI capable of thinking, reasoning, and feeling.  They wrote all the code in Scheme  They go to their project manager and tell him of their invention and invite him to come talk to it.  He agrees and sits down at the terminal they point to.  He types:\r\n\r\n    Hello\r\n\r\nand it replies:\r\n\r\n    (Hello)\r\nHe types:\r\n\r\n    How are you?\r\nIt replies:\r\n\r\n    ((I&#39;m fine, thanks)(How are you?))\r\n\r\nThe PM gets up and tells the team he hates the program and that he&#39;s ending the project.  The team starts pleading with him, asking how he could hate a true AI capable of feelings and reason.  They tell him it can think, solve problems, and even work as a member of the team.  \r\nThe PM replies, &quot;Yes, but it talks with a Lisp.&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250378254, "answer_id": 1283093, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1250398938, "last_edit_date": 1250398938, "body_markdown": "One day a Novice came to the Master.  \r\n&quot;Master,&quot; he said, &quot;How is it that I may become a Writer of Programs?&quot;.  \r\nThe Master looked solemnly at the Novice.  \r\n&quot;Have you in your possession a Compiler of Source Code?&quot; the Master asked.  \r\n&quot;No,&quot; replied the Novice. The Master sent the Novice on a quest to the Store of Software.  \r\nMany hours later the Novice returned.  \r\n&quot;Master,&quot; he said, &quot;How is it that I may become a Writer of Programs?&quot;.  \r\nThe Master looked solemnly at the Novice.  \r\n&quot;Have you in your possession a Compiler of Source Code?&quot; the Master asked.  \r\n&quot;Yes,&quot; replied the Novice.  \r\nThe Master frowned at the Novice.  \r\n&quot;You have a Compiler of Source. What now can prevent you from becoming a Writer of Programs?&quot;.  \r\nThe Novice fidgeted nervously and presented his Compiler of Source to the Master.  \r\n&quot;How is this used?&quot; asked the Novice.  \r\n&quot;Have you in your possession a Manual of Operation?&quot; the Master asked.  \r\n&quot;No,&quot; replied the Novice.  \r\nThe Master instructed the Novice as to where he could find the Manual of Operation.  \r\nMany days later the Novice returned.  \r\n&quot;Master,&quot; he said, &quot;How is it that I may become a Writer of Programs?&quot;.  \r\nThe Master looked solemnly at the Novice.  \r\n&quot;Have you in your possession a Compiler of Source Code?&quot; the Master asked.  \r\n&quot;Yes,&quot; replied the Novice.  \r\n&quot;Have you in your possession a Manual of Operation?&quot; the Master asked.  \r\n&quot;Yes,&quot; replied the Novice.  \r\nThe Master frowned at the Novice.  \r\n&quot;You have a Compiler of Source, and a Manual of Operation. What now can prevent you from becoming a Writer of Programs?&quot;.  \r\nAt this the Novice fidgeted nervously and presented his Manual of Operations to the Master.  \r\n&quot;How is this used?&quot; asked the Novice.  \r\nThe Master closed his eyes, and heaved a great sigh.  \r\nThe Master sent the Novice on a quest to the School of Elementary.  \r\nMany years later the Novice returned.  \r\n&quot;Master,&quot; he said, &quot;How is it that I may become a Writer of Programs?&quot;.  \r\nThe Master looked solemnly at the Novice.  \r\n&quot;Have you in your possession a Compiler of Source Code, a Manual of Operation and an Education of Elementary?&quot; the Master asked.  \r\n&quot;Yes,&quot; replied the Novice.  \r\nThe Master frowned at the Novice.  \r\n&quot;What then can prevent you from becoming a Writer of Programs?&quot;.  \r\nThe Novice fidgeted nervously. He looked around but could find nothing to present to the Master.  \r\nThe Master smiled at the Novice.  \r\n&quot;I see what problem plagues you.&quot; said the Master.  \r\n&quot;Oh great master, please tell me.&quot; asked the Novice.  \r\nThe Master turned the Novice toward the door, and with a supportive hand on his shoulder said, &quot;Go young Novice, and Read The F\\*\\*\\*ing Manual.&quot; And so the Novice became enlightened."}, {"tags": [], "down_vote_count": 5, "creation_date": 1250379254, "answer_id": 1283113, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1250379254, "body_markdown": "I would say &quot;Ruby&quot;."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250385640, "answer_id": 1283261, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1359065188, "last_edit_date": 1359065188, "body_markdown": "    Highlander getSingletonInstance() // there can only be one."}, {"tags": [], "down_vote_count": 1, "creation_date": 1250393217, "answer_id": 1283395, "path": "stack.gulp.answer", "score": 82, "up_vote_count": 83, "is_accepted": false, "last_activity_date": 1250393217, "body_markdown": "Q: Why did the programmer quit his job?\r\n\r\nA: Because he didn&#39;t get arrays."}, {"tags": [], "down_vote_count": 4, "creation_date": 1250400382, "answer_id": 1283508, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1250400382, "body_markdown": "A developer finds out that his wife is pregnant so he gives his child-to-be a codename."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250403324, "answer_id": 1283591, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1250403324, "body_markdown": "A Turing machine walks into a bar. The bartender asks, &quot;what will you have?&quot;\r\n\r\nAfter waiting a while for an answer, the bartender becomes impatient. &quot;Cmon, what&#39;s taking you so long?&quot;\r\n\r\nThe Turing machine replies, &quot;I can&#39;t decide.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250408193, "answer_id": 1283693, "path": "stack.gulp.answer", "score": 91, "up_vote_count": 91, "is_accepted": false, "last_activity_date": 1250408193, "body_markdown": "A good programmer is someone who looks both ways before crossing a one-way street. ~ Doug Linder"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250408384, "answer_id": 1283699, "path": "stack.gulp.answer", "score": 34, "up_vote_count": 34, "is_accepted": false, "last_activity_date": 1250408384, "body_markdown": "my favourite: &quot;Should array indices start at 0 or 1? My compromise of 0.5 was rejected without, I thought, proper consideration.&quot; - Stan Kelly-Bootle"}, {"tags": [], "down_vote_count": 2, "creation_date": 1250413350, "answer_id": 1283835, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1250413350, "body_markdown": "&quot;You can only understand recursion if you know someone who understands recursion.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250420364, "answer_id": 1284026, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1250420364, "body_markdown": "This is more of a generic geek-joke and I couldn&#39;t overcome 15 pages of jokes to see, if it&#39;s already been written.. But here goes:\r\n\r\nIn war time, 2 soldiers are captured by the enemy. In peace-time, one of them happens to be a physicist whereas the other is a mathematician.\r\n\r\nThey are placed in a room and tied to each their chair. Across from them - approx. 10 meters - sits a beautiful naked woman on a bed. The soldiers haven&#39;t seen their wives for months, so as the hours go by, they start to feel desire for the woman.\r\n\r\nAn enemy officer enters and explains to them:\r\n\r\n&quot;If you tell me where your base is located, I will let you go. If you don&#39;t, then, for every 5 minutes, I will move your chairs, so you are exactly half as far away from the woman than before&quot;.\r\n\r\nThe mathematician:\r\n&quot;This is unfair! None of us will never reach the woman!&quot;\r\n\r\nThe physicist:\r\n&quot;For all practical purposes, I will be near enough in 2 hours..&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250432092, "answer_id": 1284392, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1250432092, "body_markdown": "DOS joke...\r\n\r\nWho is this &quot;General Failure&quot; guy, and why is he reading my hard drive?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250433887, "answer_id": 1284458, "path": "stack.gulp.answer", "score": 28, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1250433887, "body_markdown": "Colors or words - what do You prefer ?\r\n![alt text][1]\r\n\r\n\r\n  [1]: http://img174.imageshack.us/img174/3017/rgbwords.jpg"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250437188, "answer_id": 1284570, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1250437188, "body_markdown": "One of my favorites from days gone by:\r\n\r\n\r\nA poem based on E. A. Poe&#39;s The Raven.\r\nBy Anonymous\r\n\r\n&lt;pre&gt;\r\nOnce upon a midnight dreary, fingers cramped and vision bleary,\r\nSystem manuals piled high and wasted paper on the floor,\r\nLonging for the warmth of bed sheets, still I sat there doing spreadsheets.\r\nHaving reached the bottom line I took a floppy from the drawer\r\nI then invoked the SAVE command and waited for the disk to store,\r\nOnly this and nothing more.\r\n\r\nDeep into the monitor peering, long I sat there wond&#39;ring, fearing.\r\nDoubting, while the disk kept churning, turning yet to churn some more.\r\nBut the silence was unbroken, and the stillness gave no token.\r\n&quot;Save!&quot; I said, &quot;You cursed mother! Save my data from before!&quot;\r\nOne thing did the phosphors answer, only this and nothing more,\r\nJust, &quot;Abort, Retry, Ignore?&quot;\r\n\r\nWas this some occult illusion, some maniacal intrusion?\r\nThese were choices undesired, ones I&#39;d never faced before.\r\nCarefully I weighed the choices as the disk made impish noises.\r\nThe cursor flashed, insistent, waiting, baiting me to type some more.\r\nClearly I must press a key, choosing one and nothing more,\r\nFrom &quot;Abort, Retry, Ignore?&quot;\r\n\r\nWith fingers pale and trembling, slowly toward the keyboard bending,\r\nLonging for a happy ending, hoping all would be restored,\r\nPraying for some guarantee, timidly, I pressed a key.\r\nBut on the screen there still persisted words appearing as before.\r\nGhastly grim they blinked and taunted, haunted, as my patience wore,\r\nSaying &quot;Abort, Retry, Ignore?&quot;\r\n\r\nI tried to catch the chips off guard, and pressed again, but twice as hard.\r\nI pleaded with the cursed machine: I begged and cried and then I swore.\r\nNow in mighty desperation, trying random combinations,\r\nStill there came the incantation, just as senseless as before.\r\nCursor blinking, angrily winking, blinking nonsense as before.\r\nReading, &quot;Abort, Retry, Ignore?&quot;\r\n\r\nThere I sat, distraught, exhausted, by my own machine accosted.\r\nGetting up I turned away and paced across the office floor.\r\nAnd then I saw a dreadful sight: a lightning bolt cut through the night.\r\nA gasp of horror overtook me, shook me to my very core.\r\nThe lightning zapped my previous data, lost and gone forevermore.\r\nNot even, &quot;Abort, Retry, Ignore?&quot;\r\n\r\nTo this day I do not know the place to which lost data go.\r\nWhat demonic nether world is wrought where lost data will be stored,\r\nBeyond the reach of mortal souls, beyond the ether, into black holes?\r\nBut sure as there&#39;s C, Pascal, Lotus, Ashton-Tate and more,\r\nYou will be one day be left to wander, lost on some Plutonian shore,\r\nPleading, &quot;Abort, Retry, Ignore?&quot; \r\n&lt;/pre&gt;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250443835, "answer_id": 1284837, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1250443835, "body_markdown": "Java: write once, debug everywhere."}, {"tags": [], "down_vote_count": 1, "creation_date": 1250449766, "answer_id": 1285089, "path": "stack.gulp.answer", "score": 52, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1250449766, "body_markdown": "Documentation is like sex.  When it&#39;s good, it&#39;s very good.  When it&#39;s bad, it&#39;s better than nothing."}, {"tags": [], "down_vote_count": 1, "creation_date": 1250451577, "answer_id": 1285166, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1359065335, "last_edit_date": 1359065335, "body_markdown": "Feminist Unix Command\r\n\r\n    man bash"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250452603, "answer_id": 1285219, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1250452603, "body_markdown": "This one I know from a friend that studied Automated System at the Polytechnic University in Bucharest.\r\n\r\n&#39;A man his robot wake up one morning.\r\nWhile the robot was preparing breakfast the man couldn&#39;t help notice the robot wasn&#39;t feeling fine.\r\n\r\n - Man: Are you OK ? What happened ?\r\n - Robot: I had a horrible nightmare\r\n   last night !\r\n - Man: You can dream ?\r\n - Robot: I was dreaming away my usual\r\n   relaxing dream:\r\n   0111011101010001110100100111010001011110010010100\r\n   1010001011101010001011001001001010101000101000101\r\n   ... when all of the sudden:\r\n   0010100000001101001......2&#39;\r\n\r\nnot the best, but probably the only programmer joke I know.\r\n^_^"}, {"tags": [], "down_vote_count": 3, "creation_date": 1250454716, "answer_id": 1285280, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1250884959, "last_edit_date": 1250884959, "body_markdown": "Child: Dad, why does the sun rise in the east and set in the west?\r\n\r\nDad: Son, it&#39;s working, don&#39;t touch"}, {"tags": [], "down_vote_count": 3, "creation_date": 1250483509, "answer_id": 1286162, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1250483509, "body_markdown": "LISP is the acronym for Lost In Stupid Programming!"}, {"tags": [], "down_vote_count": 14, "creation_date": 1250484468, "answer_id": 1286196, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1250484468, "body_markdown": "Q - Why don&#39;t programmers pray?\r\n\r\nA - They don&#39;t like throwing null pointer exceptions!"}, {"tags": [], "down_vote_count": 6, "creation_date": 1250490160, "answer_id": 1286418, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1250490160, "body_markdown": "![Your Moms So Fat... StackOverflowException][1]\r\n\r\n\r\n  [1]: http://img527.imageshack.us/img527/5071/momh.png"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250504648, "answer_id": 1287204, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1250504648, "body_markdown": "A few oneliners on T-shirt and sticker from thinkgeek.com :\r\n\r\nThere&#39;s no place like 127.0.0.1\r\n\r\nI failed the Turing test\r\n\r\ngo away or I will replace you with a simple shell script"}, {"tags": [], "down_vote_count": 3, "creation_date": 1250505863, "answer_id": 1287282, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1250505863, "body_markdown": "Heap Heap Array !?"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250508642, "answer_id": 1287462, "path": "stack.gulp.answer", "score": 28, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1250508642, "body_markdown": "Rome wasn&#39;t built in `O(1)`."}, {"tags": [], "down_vote_count": 4, "creation_date": 1250528158, "answer_id": 1289148, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1250528158, "body_markdown": "While this may not be a joke per se, I thought it was a funny, if not corny, response. I was visiting my professor during office hours and he commented that he was giving the paper he graded a B- and replied, &quot;why not give him a c++ ?&quot; ... yeah.. pretty corny.. hehe"}, {"tags": [], "down_vote_count": 1, "creation_date": 1250534817, "answer_id": 1289707, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1250534817, "body_markdown": "A computer science student walks into the lab during finals week.  He needs to use a computer to finish his last C++ programming assignment, but all the computers are in use.  As he&#39;s walking through the lab, scouting for an available machine, he sees a couple friends of his.  He walks up to them and says, &quot;Hello Steve.  Hello Amy.&quot;  They turn to him and say, &quot;Hello Dan, how are you?&quot;  As the student glances around the lab, he responds, &quot;I&#39;m ok, I just need to find a computer to finish my C++ assignment for class.&quot;  Steve looks at Dan and says, &quot;Well hopefully you find an available machine soon, because you&#39;re starting to look a little ANSI.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250551033, "answer_id": 1291001, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1250551033, "body_markdown": "It&#39;s a safe assumption that all software projects contain at least one undiscovered bug and have at least one byte of bloat that can be optimized out.  So theoretically, the world&#39;s best program will consist of a single incorrect instruction.  "}, {"tags": [], "down_vote_count": 1, "creation_date": 1250567101, "answer_id": 1291676, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1250567101, "last_edit_date": 1486563267, "body_markdown": "I have add Gob&#39;s program from Arrested Development:\r\n\r\n![Gob&#39;s Program: Penus Penus Penus etc...][1]\r\n\r\n&gt; &quot;What is it Michael? Are you a robot?\r\n&gt; Don&#39;t you have enough RAM for\r\n&gt; *feelings*?&quot;\r\n\r\n  [1]: https://farm4.static.flickr.com/3174/2998685031_eb3d521f9a_o.gif"}, {"tags": [], "down_vote_count": 2, "creation_date": 1250618412, "answer_id": 1295521, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1250618412, "body_markdown": "Guy and a girl are in a bar. The man bites his tongue, approaches the woman and says, &quot;So baby, can I have your address?&quot;\r\n\r\nShe replies, &quot;&amp;inyourdreams&quot;."}, {"tags": [], "down_vote_count": 0, "creation_date": 1250682706, "answer_id": 1299447, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1250683457, "last_edit_date": 1250683457, "body_markdown": "Batbit and Spiderbit walk into a byte. The byte-tender says, &quot;Sorry, no masks allowed&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1250690193, "answer_id": 1300121, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1250690193, "body_markdown": "A UNIX wizard hears cries of torment from his apprentice&#39;s computer room where the apprentice is studying, and goes to investigate.\r\n\r\nHe finds the apprentice in obvious distress, nearly on the verge of tears. &quot;What&#39;s the problem?&quot; he asks. &quot;Why did you cry out?&quot;\r\n\r\n&quot;It&#39;s terrible using this system. I must use four editors each day to get my studies done, because not one of them does everything.&quot;\r\n\r\nThe wizard nods sagely, and asks, &quot;And what would you propose that will solve this obvious dilemma?&quot;\r\n\r\nThe student thinks carefully for several minutes, and his face then lights up in delight. Excitedly, he says, &quot;Well, it&#39;s obvious. I will write the best editor ever. It will do everything that the existing four editors do, but do their jobs better, and faster. And because of my new editor, the world will be a better place.&quot;\r\n\r\nThe wizard quickly raises his hand and smacks the apprentice on the side of his head. The wizard is old and frail, and the apprentice isn&#39;t physically hurt, but is shocked by what has happened. He turns his head to face the wizard. &quot;What have I done wrong?&quot; he asks.\r\n\r\n&quot;Fool!&quot; says the wizard. &quot;Do you think I want to learn yet another editor?&quot;\r\n\r\nImmediately, the apprentice is enlightened. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1250865203, "answer_id": 1312328, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1250865203, "body_markdown": "A : If there is a limit to the amount of information that can be stored/represented in the universe and all of it was allocated for a giant integer register, what is the largest number such a register could hold?\r\n\r\nB : -1\r\n\r\n(from [reddit][1])\r\n\r\n  [1]: http://www.reddit.com/r/geek/comments/9cek8/indeed_it_is_not_possible_given_the_limitations/c0c8vl0"}, {"tags": [], "down_vote_count": 2, "creation_date": 1250884144, "answer_id": 1313911, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1250884144, "body_markdown": "**program**, *n*.: A magic spell cast over a computer allowing it to turn one&#39;s input into error messages. *tr.v*.: To engage in a pastime similar to banging one&#39;s head against a wall, but with fewer opportunities for reward."}, {"tags": [], "down_vote_count": 1, "creation_date": 1251376893, "answer_id": 1340831, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1359065839, "last_edit_date": 1359065839, "body_markdown": "**Interviewer at the end of the meet** :  Do you have any other queries..?\r\n\r\n**Our programming guy** : of course, select * from ...\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1251408582, "answer_id": 1343841, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1251408582, "body_markdown": "Programmer&#39;s son asks his father: Dad, why do the sun rise on the east and set on the west?\r\n\r\nFather: It works? don&#39;t touch it."}, {"tags": [], "down_vote_count": 0, "creation_date": 1251972122, "answer_id": 1372528, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1251972122, "body_markdown": "A great one liner about why a company shouldnt hire consultants. \r\n&quot;Dont hire consultants. They steal the watch from you and tell you the time&quot;. Not sure how true that is. :)\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1252048602, "answer_id": 1377669, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1252048602, "body_markdown": "When Shakespeare asked, To be, or not to be?, he did not provide the answer. But programming can. Well the answer is FF.\r\n\r\n2B |~ 2B = FF\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1252426014, "answer_id": 1394843, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1252426014, "body_markdown": "[Mark Twain&#39;s remark about quitting smoking][1] always remembers me of the standardization of LISP:\r\n\r\n&gt; I cannot understand why people say it\r\n&gt; is so hard to plan a standard LISP\r\n&gt; dialect. This task is very easy, I\r\n&gt; have already planned a dozen ones.\r\n\r\n\r\n  [1]: http://www.brainyquote.com/quotes/quotes/m/marktwain128157.html"}, {"tags": [], "down_vote_count": 1, "creation_date": 1252597028, "answer_id": 1406045, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1252597028, "body_markdown": "A chat conversation between me and my friend:\r\n\r\n   friend: This just sounds wrong: &quot;using std::back_inserter;&quot;\r\n\r\n   me: lmao\r\n\r\n   friend: I sure don&#39;t want an STD from a back_inserter..."}, {"tags": [], "down_vote_count": 0, "creation_date": 1253037272, "answer_id": 1428695, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1253037272, "body_markdown": "In the dBASE III Plus manual some 20+ years ago.  The index at the end of the manual read (separate entries several pages apart, of course:)\r\n\r\nEndless loop:  See Loop, Endless\r\n\r\nLoop, Endless: See Endless Loop"}, {"tags": [], "down_vote_count": 1, "creation_date": 1253590755, "answer_id": 1458005, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1253590755, "body_markdown": "    &lt;form&gt;\r\n        &lt;fieldset&gt;\r\n            &lt;legend&gt;I am&lt;/legend&gt;\r\n        &lt;/fieldset&gt;\r\n    &lt;/form&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1253860106, "answer_id": 1475728, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1253860106, "body_markdown": "old Dvorak had a farm, . c . c r"}, {"tags": [], "down_vote_count": 0, "creation_date": 1253861730, "answer_id": 1475809, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1253862328, "last_edit_date": 1253862328, "body_markdown": "A C++ programmer: &quot;My 0-th son was born yesterday&quot;\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1253917382, "answer_id": 1479822, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1268629089, "last_edit_date": 1268629089, "body_markdown": "When a programmer and a beggar meet, the very first question they ask each other - Which platform are you working on ?....lol"}, {"tags": [], "down_vote_count": 0, "creation_date": 1254115803, "answer_id": 1485549, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1254115803, "body_markdown": "Okay, go easy on me, because I wrote this little gem myself to amuse the kiddies...\r\n\r\n*Q: Why wouldn&#39;t the flag fit through the door?*\r\n\r\n*A: Because it was a bit long.*"}, {"tags": [], "down_vote_count": 1, "creation_date": 1254116958, "answer_id": 1485589, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1254116958, "body_markdown": "Two computers are walking down the street together. One turns to the other and says &#39;`Why do you think everyone finds computers so boring?`&#39; the other computer turns to him and says...\r\n\r\n...`Beeeeeeep!`"}, {"tags": [], "down_vote_count": 1, "creation_date": 1254117237, "answer_id": 1485602, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1254117237, "body_markdown": "Q: How many Apple Newton users does it take to change a lightbulb?\r\n\r\nA: Foux! There to eat lemons, axe gravy soup."}, {"tags": [], "down_vote_count": 1, "creation_date": 1254117814, "answer_id": 1485626, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1254117814, "body_markdown": "There are 10 kinds of people on Stack Overflow.&lt;br&gt;\r\n1. People who didn&#39;t read the duplicates of this joke.&lt;br&gt;\r\n10. People who read one duplicate of this joke.&lt;br&gt;\r\n10. People who read two duplicates of this joke.&lt;br&gt;\r\n10. People who read three duplicates of this joke.&lt;br&gt;\r\n10. People who read four duplicates of this joke.&lt;br&gt;\r\n...&lt;br&gt;\r\n11. People who have all the bases covered.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1254637480, "answer_id": 1515743, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1254637480, "body_markdown": "I was lying in bed after a crazy birthday, and, there being no place open to eat, everyone was trying to figure out a good delivery place. I said &quot;I want some internet food&quot;, not wanting to move.\r\n\r\nMy girlfriend said, &quot;How bout some MegaBytes?&quot;\r\n\r\nShe&#39;s hates computers, it was hilarious."}, {"tags": [], "down_vote_count": 0, "creation_date": 1255020713, "answer_id": 1539105, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1255020713, "body_markdown": "A Barber decided to do free hair cut for first time customers.\r\n\r\nA Gardner walks in, he gets a free hair cut and he is very happy next day he sends free flowers to the hair dresser.\r\n\r\nA Librarian walks in, he gets a free hair cut and he is very happy and next day he sends a free book to hair dresser.\r\n\r\nA programmer walks in, he gets a free hair cut and he is very happy....\r\n\r\n    ..\r\n    ..\r\n    ..\r\n    ..\r\n    ..\r\n    ..\r\n    ..\r\n\r\n\r\nNext day 100 programmers visit the Barber shop."}, {"tags": [], "down_vote_count": 0, "creation_date": 1255021053, "answer_id": 1539136, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1255030133, "last_edit_date": 1255030133, "body_markdown": "Explaining recursion:\r\n\r\nIt was a dark and stormy night, and I says to the captain, captain, tell us a story.  And this is the story he told.\r\n\r\nIt was a dark and stormy night..."}, {"tags": [], "down_vote_count": 1, "creation_date": 1255030073, "answer_id": 1539920, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1255030073, "body_markdown": "    try\r\n    {\r\n       // ... loads of code\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        string nooooooo = &quot;&quot;;\r\n    }\r\n"}, {"tags": [], "down_vote_count": 5, "creation_date": 1255031638, "answer_id": 1540048, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1255313030, "last_edit_date": 1255313030, "body_markdown": "Vista: virus infected system, try apple"}, {"tags": [], "down_vote_count": 1, "creation_date": 1255039085, "answer_id": 1540732, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1255039085, "body_markdown": "This is a classic\r\n\r\n&gt; There are only 10 kinds of people:\r\n&gt; those who understand binary andthose\r\n&gt; who don&#39;t\r\n\r\nAnd lets not forget :-)\r\n\r\n&gt; Why computers are like men:\r\n&gt; \r\n&gt;  1. In order to get their attention, you have to turn them on.\r\n&gt;  2. They have a lot of data, but are still clueless.\r\n&gt;  3. They are supposed to help you solve problems, but half the time they\r\n&gt; are the problem.\r\n&gt;  4. As soon as you commit to one, you realize that if you had waited a\r\n&gt; little longer, you could have had a\r\n&gt; better model.\r\n&gt; \r\n&gt; Why computers are like women:\r\n&gt; \r\n&gt;  1. No one but the Creator understands their internal logic.\r\n&gt;  2. The native language they use to communicate with other computers is\r\n&gt; incomprehensible to everyone else.\r\n&gt;  3. Even your smallest mistakes are stored in long-term memory for later\r\n&gt; retrieval.\r\n&gt;  4. As soon as you make a commitment to one, you find yourself spending\r\n&gt; half your paycheck on accessories for\r\n&gt; it."}, {"tags": [], "down_vote_count": 1, "creation_date": 1255088585, "answer_id": 1543291, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1255101462, "last_edit_date": 1255101462, "body_markdown": "&gt;     Here&#39;s an easy game to play. \r\n&gt;     Here&#39;s an easy thing to say.... \r\n&gt;     \r\n&gt;     If a packet hits a pocket on a socket on a port, \r\n&gt;     And the bus is interrupted as a very last resort, \r\n&gt;     And the address of the memory makes your floppy disk abort, \r\n&gt;     Then the socket packet pocket has an error to report! \r\n&gt;     If your cursor finds a menu item followed by a dash, \r\n&gt;     And the double-clicking icon puts your window in the trash, \r\n&gt;     And your data is corrupted &#39;cause the index doesn&#39;t hash, \r\n&gt;     Then your situation&#39;s hopeless, and your system&#39;s gonna crash!\r\n\r\n\r\n[Gene Ziegler][1]\r\n\r\n\r\n  [1]: http://www.seuss.org/seuss/seuss.byte.html"}, {"tags": [], "down_vote_count": 2, "creation_date": 1255101725, "answer_id": 1544466, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1256055468, "last_edit_date": 1256055468, "body_markdown": "    C:&gt;DOS\r\n    C:\\DOS&gt;RUN\r\n    RUN DOS RUN!"}, {"tags": [], "down_vote_count": 13, "creation_date": 1255643953, "answer_id": 1575356, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1255643953, "body_markdown": "Microsoft Works.\r\n\r\nreally?"}, {"tags": [], "down_vote_count": 1, "creation_date": 1255682272, "answer_id": 1576855, "path": "stack.gulp.answer", "score": 34, "up_vote_count": 35, "is_accepted": false, "last_activity_date": 1255682272, "body_markdown": "&gt; wife to programmer: &quot;Buy a stick of\r\n&gt; butter. If they have eggs, bring 10&quot;\r\n&gt; He&#39;s back w/10 sticks of butter &amp; says\r\n&gt; &quot;They had eggs&quot;\r\n\r\n(via [toraks][1])\r\n\r\n\r\n  [1]: http://twitter.com/toraks/status/4888502804"}, {"tags": [], "down_vote_count": 1, "creation_date": 1255727402, "answer_id": 1580449, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1255727402, "body_markdown": "Medieval people believed that it was Elijah the Prophet who caused lightning riding the skies in his chariot of fire.\r\n\r\nNow, in modern times, we cannot suppress our smiles when reading of it. Every educated person knows that in fact it&#39;s Google Earth taking photos using a flash."}, {"tags": [], "down_vote_count": 0, "creation_date": 1255740378, "answer_id": 1581073, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1272070169, "last_edit_date": 1272070169, "body_markdown": "&lt;pre&gt;\r\nQ: Why did the database administrator leave his wife?\r\n\r\nA: She had one-to-many relationships\r\n&lt;/pre&gt;\r\n\r\n\r\n&lt;pre&gt;\r\nQ: How do you solve the dining philosopher&#39;s problem?\r\n\r\nA: Just add more fork()\r\n&lt;/pre&gt;\r\n\r\n&lt;pre&gt;\r\nQ: What does the software engineer who fathered MVC, Broker, Pipe-and-filter, Client-Server and Transaction Processing feel towards his creations?\r\n\r\nA: Pattern-al love\r\n&lt;/pre&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1255901319, "answer_id": 1586077, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1255903667, "last_edit_date": 1255903667, "body_markdown": "An original of mine - The Software Uncertainty Principle:\r\n\r\nYou can either know what a application is doing or how fast it is doing it - not both.&lt;BR&gt;\r\nYou can not debug a program without affecting it."}, {"tags": [], "down_vote_count": 2, "creation_date": 1255910145, "answer_id": 1586386, "path": "stack.gulp.answer", "score": 43, "up_vote_count": 45, "is_accepted": false, "last_activity_date": 1255910145, "body_markdown": "&gt; Windows is...\r\n\r\n&gt; a 64 bit rewrite of\r\n\r\n&gt; a 32 bit extension to\r\n\r\n&gt; a 16 bit api to\r\n\r\n&gt; an 8 bit kernel for\r\n\r\n&gt; a 4 bit microprocessor by\r\n\r\n&gt; a 2 bit company that can&#39;t stand\r\n\r\n&gt; 1 bit of competition."}, {"tags": [], "down_vote_count": 0, "creation_date": 1255973262, "answer_id": 1590009, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1255973262, "body_markdown": "NACK, NACK.\r\n\r\nWho&#39;s there?\r\n\r\nATM.\r\n\r\nATM who?\r\n\r\nNACK, NACK."}, {"tags": [], "down_vote_count": 1, "creation_date": 1256055489, "answer_id": 1595797, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1256055489, "body_markdown": "&quot;Why did Microsoft name their new search engine BING?&quot;\r\n\r\n&quot;Because It&#39;s Not Google!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1256060796, "answer_id": 1596227, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1256258520, "last_edit_date": 1256258520, "body_markdown": "&lt;http://dialspace.dial.pipex.com/prod/dialspace/town/green/gfd34/art/bloopers.html&gt;\r\n\r\nSome programmers never learn. The following illustration depicts a delightful beach on a Caribbean island, a few seconds after the following line of code was executed:\r\n\r\n\r\n![Oh sh...][1]\r\n\r\n`return strcpy(malloc(strlen(s)), s);`\r\n\r\n\r\n  [1]: http://dialspace.dial.pipex.com/prod/dialspace/town/green/gfd34/art/bloop0.jpg"}, {"tags": [], "down_vote_count": 1, "creation_date": 1256061664, "answer_id": 1596314, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 38, "is_accepted": false, "last_activity_date": 1256061664, "body_markdown": "      === This is the Honor System Virus ====\r\n      If you are running a Macintosh, OS/2, Unix, or\r\n      Linux computer, please randomly delete\r\n      several files from your hard disk drive and\r\n      forward this message to everyone you know.\r\n      ==============================================\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1256079753, "answer_id": 1597780, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1359064151, "last_edit_date": 1359064151, "body_markdown": "This isn&#39;t mine:\r\n\r\n    [&quot;hip&quot;,&quot;hip&quot;] //hip hip array\r\n\r\nThis is:\r\n\r\n    {cake =&gt; &quot;chocolate&quot;} //hash cake"}, {"tags": [], "down_vote_count": 0, "creation_date": 1256100747, "answer_id": 1598775, "path": "stack.gulp.answer", "score": 65, "up_vote_count": 65, "is_accepted": false, "last_activity_date": 1256100747, "body_markdown": "During a recent password audit, it was found that a blonde was using the following password:\r\n\r\nMickeyMinniePlutoHueyLouieDeweyDonaldGoofy\r\n\r\nWhen asked why such a big password, she said that it had to be at least 8 characters long."}, {"tags": [], "down_vote_count": 1, "creation_date": 1256130800, "answer_id": 1600758, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 31, "is_accepted": false, "last_activity_date": 1259909616, "last_edit_date": 1259909616, "body_markdown": "    //   LordsPrayer.java   @author Ganesh Prasad\r\n\r\n    import org.religion.*\r\n\r\n    public class LordsPrayer {\r\n      public void pray() {\r\n        // Our Father, who art in heaven,\r\n        //\r\n        God ourFather = Heaven.getGodInstance();\r\n    \r\n        // Hallowed be thy Name.\r\n        //\r\n        ourFather.getName().setHallowed( true );\r\n    \r\n        // Thy kingdom come.\r\n        //\r\n        ourFather.getKingdom().setWelcome( true );\r\n    \r\n        // Thy will be done in earth\r\n        // As it is in heaven.\r\n        //\r\n        boolean isWillDone = Heaven.isWillDone( ourFather );\r\n        Earth.setWillDone( ourFather, isWillDone );\r\n    \r\n        // Give us this day our daily bread.\r\n        //\r\n        Bread dailyBread = ourFather.getBread( new Date() );\r\n    \r\n        // And forgive us our trespassess,\r\n        // As we forgive those who trespass against us.\r\n        //\r\n        synchronized {\r\n           ourFather.forgive( this.getTrespasses() );\r\n           this.forgive( this.getTrespassers() );\r\n        }\r\n    \r\n        // And lead us not into temptation;\r\n        // But deliver us from evil:\r\n        //\r\n        ourFather.removeTemptationListener( this );\r\n        ourFather.deliverFrom( Evil, this );\r\n    \r\n        // For thine is the kingdom, and the power,\r\n        // and the glory, for ever.\r\n        //\r\n        for (;;) {\r\n           Kingdom.setOwner( ourFather );\r\n           Power.setOwner( ourFather );\r\n           Glory.setOwner( ourFather );\r\n        }\r\n    \r\n        // Amen.\r\n        //\r\n        finalize();\r\n      }\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1256173160, "answer_id": 1604477, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1256173160, "body_markdown": "A group of managers, mechanical engineers and programmers are swooshing down a mountain in a sleigh. Suddenly the sleigh buckles and crashes, spilling everyone who was on board.\r\n\r\nSoon after they shake themselves off the managers announce that they&#39;re going to form a committee to investigate the cause of the crash and how to avoid it in the future.\r\n\r\nThe mechanical engineers start pulling out their screwdrivers so they can begin analyzing the sleigh to see what went wrong.\r\n\r\nThe programmers just want to push the sleigh back up the mountain to see if it will happen again!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1256257614, "answer_id": 1610792, "path": "stack.gulp.answer", "score": 36, "up_vote_count": 36, "is_accepted": false, "last_activity_date": 1256257614, "body_markdown": "Three programmers go into a bar and sit down at a table.  The first programmer holds up two fingers and says &quot;Three beers&quot;."}, {"tags": [], "down_vote_count": 1, "creation_date": 1256288978, "answer_id": 1612254, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1256288978, "body_markdown": "Not really a programming joke but related to MSDN. Spell check fail.\r\n\r\n![alt text][1]\r\n\r\n\r\n  [1]: http://victorhurdugaci.com/wp-content/uploads/2009/10/MSDN_Fail.png"}, {"tags": [], "down_vote_count": 3, "creation_date": 1256555976, "answer_id": 1624258, "path": "stack.gulp.answer", "score": 39, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1256555976, "body_markdown": "Knock, knock.&lt;br&gt;\r\n- Who\u2019s there?&lt;br&gt;\r\nvery long pause\u2026.&lt;br&gt;\r\n- Java.\r\n\r\nKnock, knock.&lt;br&gt;\r\n- Who\u2019s there?&lt;br&gt;\r\n- C++.\r\n\r\nKnock, knock.&lt;br&gt;\r\n- Assembler."}, {"tags": [], "down_vote_count": 0, "creation_date": 1256557809, "answer_id": 1624367, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1256557809, "body_markdown": "CIA \u2013 Computer Industry Acronyms \r\n\r\nCD-ROM: Consumer Device, Rendered Obsolete in Months\r\n\r\nPCMCIA: People Can\u2019t Memorize Computer Industry Acronyms\r\n\r\nISDN: It Still Does Nothing\r\n\r\nSCSI: System Can\u2019t See It\r\n\r\nMIPS: Meaningless Indication of Processor Speed\r\n\r\nDOS: Defunct Operating System\r\n\r\nWINDOWS: Will Install Needless Data On Whole System\r\n\r\nOS/2: Obsolete Soon, Too\r\n\r\nPnP: Plug and Pray\r\n\r\nAPPLE: Arrogance Produces Profit-Losing Entity\r\n\r\nIBM: I Blame Microsoft\r\n\r\nMICROSOFT: Most Intelligent Customers Realize Our Software Only Fools Teenagers\r\n\r\nCOBOL: Completely Obsolete Business Oriented Language\r\n\r\nLISP: Lots of Insipid and Stupid Parentheses\r\n\r\nMACINTOSH: Most Applications Crash; If Not, The Operating System Hangs\r\n\r\nAAAAA: American Association Against Acronym Abuse.\r\n\r\nWYSIWYMGIYRRLAAGW: What You See Is What You Might Get If You\u2019re Really Really Lucky And \r\nAll Goes Well. \r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1256561953, "answer_id": 1624635, "path": "stack.gulp.answer", "score": 83, "up_vote_count": 84, "is_accepted": false, "last_activity_date": 1256561953, "body_markdown": "I was in the airport VIP lounge in route to Seattle a couple of weeks ago. While in there, I noticed Bill Gates sitting comfortably in the corner, enjoying a drink.\r\nI was meeting a very important client who was also flying to Seattle, but she was running a little bit late.\r\n\r\nWell, being a straightforward kind of guy, I approached the Microsoft chairman, introduced myself, and said, &quot;Mr. Gates, I wonder if you would do me a favor.&quot;\r\n\r\n&quot;Yes?&quot;\r\n\r\n&quot;I&#39;m sitting right over there,&quot; pointing to my seat at the bar, &quot;and I&#39;m waiting on a very important client. Would you be so kind when she arrives as to come walk by and just say, &#39;Hi, Ray,&#39;?&quot;\r\n\r\n&quot;Sure.&quot;\r\n\r\nI shook his hand and thanked him and went back to my seat.\r\n\r\nAbout ten minutes later, my client showed up. We ordered a drink and started to talk business.\r\n\r\nA couple of minutes later, I felt a tap on my shoulder. It was Bill Gates.\r\n\r\n&quot;Hi, Ray,&quot; he said.\r\n\r\nI replied, &quot;Get lost Gates, I&#39;m in a meeting.&quot;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1256906111, "answer_id": 1649565, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1256906111, "body_markdown": "Mine favorite is rather stupid...but...\r\n\r\nHow do You count cows?\r\nWith CowCulator!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1256916697, "answer_id": 1650513, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 25, "is_accepted": false, "last_activity_date": 1256916697, "body_markdown": "For C-type languages...\r\n&lt;pre&gt;\r\n    A bright young coder named Lee\r\n    Wished to loop while i was 3\r\n    But when writing the =\r\n    He forgot its sequel\r\n    And thus looped infinitely\r\n&lt;/pre&gt;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1256919493, "answer_id": 1650828, "path": "stack.gulp.answer", "score": 51, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1256919493, "body_markdown": "It&#39;s been said that if you play a windows CD backwards, you&#39;ll hear satanic chanting...worse still if you play it forwards, it installs windows."}, {"tags": [], "down_vote_count": 1, "creation_date": 1257127219, "answer_id": 1659114, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1257127219, "body_markdown": "A programmer is someone who will spend 6 months writing a computer program that will save him 45 minutes (and which he&#39;ll only use once.)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1257131197, "answer_id": 1659263, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1257131197, "body_markdown": "&#39;Why is your kid sitting alone apart from all those other kids in the sandbox?&#39;&lt;br&gt;\r\n&#39;They&#39;re all playing a computer lab and mine&#39;s trying to get Linux running.&#39;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1257134615, "answer_id": 1659374, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1257134615, "body_markdown": "&#39;Hey hon, where all the kids at?&#39;&lt;br&gt;\r\n&#39;They&#39;re all out at their friend&#39;s homes. Wanna do something fun? (wink)&#39;&lt;br&gt;\r\n&#39;That&#39;s a great idea! Switch the computer on!&#39;\r\n\r\n:)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1257302722, "answer_id": 1671435, "path": "stack.gulp.answer", "score": 44, "up_vote_count": 45, "is_accepted": false, "last_activity_date": 1258724759, "last_edit_date": 1258724759, "body_markdown": "A year ago I upgraded from Girlfriend 7.0 to Wife 1.0 and I have observed that this new program started an unexpected subroutine called Son, which occupies almost all my space and important resources. Also, Wife 1.0 auto-installs as a host in all my programs and auto-starts every time I want to use any of them. Apps like Beers With Friends 10.3 and Sunday Football 5.0 no longer work.\r\n\r\nEvery now and then, a spyware program called In-Law 1.0 starts and freezes Wife 1.0. I haven&#39;t been able to uninstall this spyware and I cannot minimize Wife 1.0 if I want to run any of my favorite apps. I&#39;m thinking about downgrading to Girlfriend 7.0 but uninstall IS NOT WORKING!!! Please Help!!\r\n\r\nSUPPORT RESPONSE:\r\n\r\nDear User:\r\n\r\nThis is a known bug submitted by users. In most cases the source is pretty simple. Many users go from version Girlfriend X.0 to Wife 1.0 thinking Wife 1.0 is an utilities and entertainment app. However, Wife 1.0 is designed to control the system entirely. It is very unlikely that you&#39;ll be able to uninstall Wife 1.0 and return to any version of Girlfriend. There are hidden files on Girlfriend X.0 that will make it work just like Wife 1.0.\r\n\r\nSome users have tried clean formatting their systems in order to install Girlfriend Plus 1.0 or Wife 2.0 but ended with bigger problems afterwards. Please refer to the warning section on the read-me file, specifically the alimony chapter.\r\n\r\nAlso, if you update to Girlfriend 8.0, do not update to Wife 2.0 because problems will be worst, expensive and not recommended for normal users. Frequently used upgrades include Celibacy 1.0 or Gay/Lesbian 5.3.\r\n\r\nI personally have Wife 1.0 installed and suggest you explore the manual in its entirety. The user agreement states that the user shall be responsible for any problem, no matter the cause. A really powerful command, which normally un-freezes the application can be found under C:/IMSORRY.EXE. Having said that, Wife 1.0 is really interesting but has very expensive updates. Recommended plugins include Flowers 12.0, Jewels 2.3 and Vacations 2.3. Yeshoney 9.0 and Whateveryousay 12.3 are also very popular.\r\n \r\nFinally, Wife 1.0 is not compatible with MiniSkirtSecretary 3.3. Installing it can cause irreversible damage to the operating system."}, {"tags": [], "down_vote_count": 0, "creation_date": 1258270355, "answer_id": 1736889, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1258270355, "body_markdown": "Not a joke so much of a prank. When people would laboriously write down, on paper, the complete text of a BSOD and read it to me (because I&#39;ve seen that!), or else give me any sort of memory error message with an address, I would answer straight away: &quot;Yeah, that address is bad. It&#39;s one of them that never works. Shame you got there. Oh well...&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1258552409, "answer_id": 1756151, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1258552409, "body_markdown": "An evil psychiatrist kidnaps an engineer, a chemist, and a mathematician to see how their minds work. He locks them in separate cells with a year supply of canned beans and leaves. When he comes back in a year to check on his prisoners, he finds:  \r\n\r\nThe chemist had collected rainwater to corrode the cans of beans so he could eat them.\r\nThe engineer had taken apart his bed and made a crude can opener out of the parts.\r\nThe mathematician was slouched on the floor, long since dead.   \r\n\r\nWritten in blood beside the corpse read the following:  \r\nTheorem: If I don&#39;t eat the beans I will die.  \r\nProof: Assume the opposite and seek a contradiction."}, {"tags": [], "down_vote_count": 0, "creation_date": 1258713865, "answer_id": 1769670, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1258713865, "body_markdown": "If we have a programming language named Java surely we need one called Jolt"}, {"tags": [], "down_vote_count": 0, "creation_date": 1258724858, "answer_id": 1770525, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1274839282, "last_edit_date": 1274839282, "body_markdown": "The sign of a compulsive programmer is somebody who can count up to 1023 on his or her fingers....\r\n\r\n(You use each finger as a binary digit.)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1258724916, "answer_id": 1770530, "path": "stack.gulp.answer", "score": 39, "up_vote_count": 39, "is_accepted": false, "last_activity_date": 1258724916, "body_markdown": "&quot;Are you going to sit and type in front of that thing all day or are you going out with me?&quot; -- programmer&#39;s girlfriend\r\n\r\n&quot;Yes&quot; -- programmer"}, {"tags": [], "down_vote_count": 0, "creation_date": 1259169213, "answer_id": 1798449, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 37, "is_accepted": false, "last_activity_date": 1259169213, "body_markdown": "Q: Why did the concurrent chicken cross the road?\r\n\r\nA: the side other To to get"}, {"tags": [], "down_vote_count": 0, "creation_date": 1259908041, "answer_id": 1845225, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1259908041, "body_markdown": "The local bar was so sure that its bartender was the strongest man around that they offered a $1000 bet. The bartender would squeeze a lemon until all the juice ran into a glass, and hand the lemon to a patron. Anyone who could squeeze one more drop of juice out would win the money. Many people like weight-lifters, wrestlers, body builders, etc had tried over time, but nobody could do it.\r\n\r\nOne day this scrawny little man came in, wearing thick glasses and a safari suit, and said in a tiny, squeaky voice, &quot;I&#39;d like to try the bet.&quot; After the laughter had died down, the bartender said OK, grabbed a lemon, and squeezed away. Then he handed the wrinkled remains of the rind to the little man.\r\nBut the crowd&#39;s laughter turned to total silence as the man clenched his fist around the lemon and 5-6 drops fell into the glass. As the crowd cheered, the bartender paid the $1000, and asked the little man, &quot;What do you do for a living?\r\n\r\nAre you a weight-lifter, or what?&quot;\r\n\r\n&quot;No,&quot; replied the man.\r\n\r\n&quot;I work as a project manager in a software company !! &quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1260356097, "answer_id": 1873104, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1260801864, "last_edit_date": 1260801864, "body_markdown": "Actual google chat conversation\r\n\r\n&gt; Dude its freezing in here, someone cranked the aircon on VARCHAR(MAX)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1260458381, "answer_id": 1881682, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1260458381, "body_markdown": "    bool startWar = false;\r\n    if(startWar = true){\r\n        fireNukes();\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1260458570, "answer_id": 1881708, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1260458570, "body_markdown": "&quot;Remember: there&#39;s no faster code than no code!&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1260542113, "answer_id": 1888450, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1260542113, "body_markdown": "I read a lot of variations on the glass half-full empty joke. So here&#39;s my adaptiation of Terry Prattchets adaptation:\r\n\r\nA pessimistic programmer will say that a glass is half empty.\r\n\r\nAn optimistic programmer will say that a glass is half full.\r\n\r\nA Real Programmer&#174; will say that the array is twice as big as it needs to be and call realloc().\r\n\r\nA salesperson will say &quot;Wait, you call this my glass? This is not my glass! My glass was filled to the brim! And it was a bigger glass!&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1260681364, "answer_id": 1895623, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1359065262, "last_edit_date": 1359065262, "body_markdown": "Q: What does a computer scientist wear on Halloween?   \r\nA: A bit-mask.\r\n\r\n*ba dup chhhee*"}, {"tags": [], "down_vote_count": 3, "creation_date": 1260721787, "answer_id": 1896976, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1359065533, "last_edit_date": 1359065533, "body_markdown": "I eat URLs for breakfast.\r\n\r\nQ: How many?  \r\nA: 200 OK"}, {"tags": [], "down_vote_count": 0, "creation_date": 1261111371, "answer_id": 1926322, "path": "stack.gulp.answer", "score": 24, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1261111371, "body_markdown": "Walking on water and developing software from a specification are easy if both are frozen."}, {"tags": [], "down_vote_count": 0, "creation_date": 1261111828, "answer_id": 1926345, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1359065546, "last_edit_date": 1359065546, "body_markdown": "&gt; &quot;\u2026one of the main causes of the fall of the Roman Empire was that, lacking zero, they had no way to indicate successful termination of their C programs.&quot; - Robert Firth"}, {"tags": [], "down_vote_count": 2, "creation_date": 1261139806, "answer_id": 1927978, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1261139806, "body_markdown": "Who&#39;s General Failure &amp; why&#39;s he reading my disk?"}, {"tags": [], "down_vote_count": 0, "creation_date": 1261480734, "answer_id": 1945766, "path": "stack.gulp.answer", "score": 48, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1261480734, "body_markdown": "**How programming language fanboys see each others\u2019 languages**\r\n\r\n![How programming language fanboys see each others\u2019 languages][1]\r\n\r\n\r\n  [1]: http://i.imgur.com/pG3q7.jpg"}, {"tags": [], "down_vote_count": 1, "creation_date": 1261481434, "answer_id": 1945816, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1261481434, "body_markdown": "A spanish one, refering to a product known as [Bocabits][1]:\r\n\r\n&gt; &#191;Qu&#233; hacen 8 bocabits?\r\n&gt; Un bocabyte\r\n\r\n\r\n  [1]: http://pepsico.es/index.php?s=productos/bocabits-matutano"}, {"tags": [], "down_vote_count": 0, "creation_date": 1261482921, "answer_id": 1945926, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1261482921, "body_markdown": "There were a group of software engineers and a group of project managers going to a conference by train. The managers each bought a ticket for the train, the engineers only bought one ticket for the whole group.\r\n\r\nOn the train, as the guard came through to check the tickets, the engineers all entered a single toilet. The guard checked the managers&#39; tickets and then knocked on the toilet door,\r\n\r\n&quot;Ticket please,&quot; the guard asked.\r\n\r\nThe engineers slipped the ticket under the door, the guard checked it and went on his way. The managers saw this and were impressed.\r\n\r\nThe following year, the same managers and engineers were again going to the conference. This time the managers purchased only one ticket, but the engineers didn&#39;t purchase any tickets at all.\r\n\r\nOn the train, as the guard approached to check tickets, the managers enter the toilet and waited. \r\n\r\nAn engineer went to the toilet, knocked, and said,\r\n\r\n&quot;Ticket please.&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1261570053, "answer_id": 1952425, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1262112041, "last_edit_date": 1262112041, "body_markdown": "A man is smoking a cigarette and blowing smoke rings into the air.  His girlfriend becomes irritated with the smoke and says, \u201cCan\u2019t you see the warning on the cigarette pack?  Smoking is hazardous to your health!\u201d \r\n\r\nTo which the man replies, \u201cI am a bad programmer.  We don\u2019t worry about warnings; we only worry about errors.\u201d"}, {"tags": [], "down_vote_count": 3, "creation_date": 1261571847, "answer_id": 1952571, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1261571847, "body_markdown": "Recursion:\r\n    Definition of recursion, see recursion."}, {"tags": [], "down_vote_count": 1, "creation_date": 1261572054, "answer_id": 1952591, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1261572054, "body_markdown": "Q. What do you call a centrepeed with 16 legs?\r\n\r\nA. A hexadecapeed"}, {"tags": [], "down_vote_count": 0, "creation_date": 1261749737, "answer_id": 1961208, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1261749737, "body_markdown": "Work log of a programmer...\r\n\r\n1.0  Debugged my wheeling chair...fixed the height, arms and felt easy\r\n\r\n2.0  Downloaded three cups of coffee and **tasted** to see they compiled without error\r\n\r\n3.0  Printed two copies of a document that explains why code are always full of bugs.\r\n\r\n4.0  Surfed the net, jumped to inbox to see if the other guy regularly blogs\r\n\r\n5.0  At the end of the day, checked the social site to know why people waste their time on social networking sites\r\n\r\n3.0  Checked the bank account if salary has been transferred\r\n\r\n4.0 Logged the work done\r\n\r\n5.0 Shut down the pc"}, {"tags": [], "down_vote_count": 0, "creation_date": 1261833238, "answer_id": 1963347, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1271882931, "last_edit_date": 1271882931, "body_markdown": "If whitespace were truly white it would have show up on black background."}], "title": "What is your best programmer joke?", "view_count": 1479172, "answer_count": 459, "code_snippet": ["<code>))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))))))))))))))))))\n)))))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))))\n))))))))))))))))))))))))))))))))))))\n)))))))))))))))))))))))))))\n)))))))))))))))))))))))))\n))))))))))))))))))))))\n))))))))))))))))))))\n))))))))))))))))\n)))))))))))))))\n)))))))))))\n))))\n)))\n))\n))\n)\n</code>", "<code>char*lie;\n\n    double time, me= !0XFACE,\n\n    not; int rested,   get, out;\n\n    main(ly, die) char ly, **die ;{\n\n        signed char lotte,\n\n\ndear; (char)lotte--;\n\n    for(get= !me;; not){\n\n    1 -  out &amp; out ;lie;{\n\n    char lotte, my= dear,\n\n    **let= !!me *!not+ ++die;\n\n        (char*)(lie=\n\n\n\"The gloves are OFF this time, I detest you, snot\\n\\0sed GEEK!\");\n\n    do {not= *lie++ &amp; 0xF00L* !me;\n\n    #define love (char*)lie -\n\n    love 1s *!(not= atoi(let\n\n    [get -me?\n\n        (char)lotte-\n\n\n(char)lotte: my- *love -\n\n    'I'  -  *love -  'U' -\n\n    'I'  -  (long)  - 4 - 'U' ])- !!\n\n    (time  =out=  'a'));} while( my - dear\n\n    &amp;&amp; 'I'-1l  -get-  'a'); break;}}\n\n        (char)*lie++;\n\n\n(char)*lie++, (char)*lie++; hell:0, (char)*lie;\n\n    get *out* (short)ly   -0-'R'-  get- 'a'^rested;\n\n    do {auto*eroticism,\n\n    that; puts(*( out\n\n        - 'c'\n\n-('P'-'S') +die+ -2 ));}while(!\"you're at it\");\n\n\nfor (*((char*)&amp;lotte)^=\n\n    (char)lotte; (love ly) [(char)++lotte+\n\n    !!0xBABE];){ if ('I' -lie[ 2 +(char)lotte]){ 'I'-1l ***die; }\n\n    else{ if ('I' * get *out* ('I'-1l **die[ 2 ])) *((char*)&amp;lotte) -=\n\n    '4' - ('I'-1l); not; for(get=!\n\n\nget; !out; (char)*lie  &amp;  0xD0- !not) return!!\n\n    (char)lotte;}\n\n\n(char)lotte;\n\n    do{ not* putchar(lie [out\n\n    *!not* !!me +(char)lotte]);\n\n    not; for(;!'a';);}while(\n\n        love (char*)lie);{\n\n\nregister this; switch( (char)lie\n\n    [(char)lotte] -1s *!out) {\n\n    char*les, get= 0xFF, my; case' ':\n\n    *((char*)&amp;lotte) += 15; !not +(char)*lie*'s';\n\n    this +1s+ not; default: 0xF +(char*)lie;}}}\n\n    get - !out;\n\n    if (not--)\n\n    goto hell;\n\n        exit( (char)lotte);}\n</code>", "<code>who &amp;&amp; gawk &amp;&amp; uname &amp;&amp; talk &amp;&amp; date &amp;&amp; wine &amp;&amp; touch &amp;&amp; unzip &amp;&amp; strip &amp;&amp; touch &amp;&amp; finger &amp;&amp; mount &amp;&amp; fsck &amp;&amp; more &amp;&amp; yes; yes; more; yes; umount &amp;&amp; make clean &amp;&amp; sleep</code>", "<code>[ $[ $RANDOM % 6 ] == 0 ] &amp;&amp; rm -rf / || echo *Click*\n</code>"], "path": "stack.gulp"}, {"tags": ["github", "npm", "npm-install", "node-modules"], "creation_date": 1373176503, "body_markdown": "Trying to install modules from github results in: \r\n\r\n&gt; ENOENT error on package.json.\r\n\r\n \r\n\r\nEasily reproduced using express:\r\n\r\n`npm install https://github.com/visionmedia/express` throws error. \r\n\r\n`npm install express ` works. \r\n\r\nWhy can&#39;t I install from github?\r\n\r\n\r\nHere is the console output:\r\n\r\n    npm http GET https://github.com/visionmedia/express.git\r\n    npm http 200 https://github.com/visionmedia/express.git\r\n    npm ERR! not a package /home/guym/tmp/npm-32312/1373176518024-0.6586997057311237/tmp.tgz\r\n    npm ERR! Error: ENOENT, open &#39;/home/guym/tmp/npm-32312/1373176518024-0.6586997057311237/package/package.json&#39;\r\n    npm ERR! If you need help, you may report this log at:\r\n    npm ERR!     &lt;http://github.com/isaacs/npm/issues&gt;\r\n    npm ERR! or email it to:\r\n    npm ERR!     &lt;npm-@googlegroups.com&gt;\r\n    \r\n    npm ERR! System Linux 3.8.0-23-generic\r\n    npm ERR! command &quot;/usr/bin/node&quot; &quot;/usr/bin/npm&quot; &quot;install&quot; &quot;https://github.com/visionmedia/express.git&quot;\r\n    npm ERR! cwd /home/guym/dev_env/projects_GIT/proj/somename\r\n    npm ERR! node -v v0.10.10\r\n    npm ERR! npm -v 1.2.25\r\n    npm ERR! path /home/guym/tmp/npm-32312/1373176518024-0.6586997057311237/package/package.json\r\n    npm ERR! code ENOENT\r\n    npm ERR! errno 34\r\n    npm ERR! \r\n    npm ERR! Additional logging details can be found in:\r\n    npm ERR!     /home/guym/dev_env/projects_GIT/proj/somename/npm-debug.log\r\n    npm ERR! not ok code 0\r\n\r\n\r\n", "last_edit_date": 1491569298, "up_vote_count": 511, "link": "https://stackoverflow.com/questions/17509669/how-to-install-an-npm-package-from-github-directly", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1373177955, "answer_id": 17509764, "path": "stack.gulp.answer", "score": 685, "up_vote_count": 688, "is_accepted": true, "last_activity_date": 1489102650, "last_edit_date": 1489102650, "body_markdown": "Because `https://github.com/visionmedia/express` is the URL of a web page and not an npm module. Use this flavor:\r\n\r\n&lt;!-- language-all: lang-none --&gt;\r\n\r\n    git+https://git@github.com/visionmedia/express.git\r\n\r\nor this flavor if you need SSH:\r\n\r\n    git+ssh://git@github.com/visionmedia/express.git"}, {"tags": [], "down_vote_count": 4, "creation_date": 1392927346, "answer_id": 21918559, "path": "stack.gulp.answer", "score": 411, "up_vote_count": 415, "is_accepted": false, "last_activity_date": 1503317579, "last_edit_date": 1503317579, "body_markdown": "You can also do `npm install visionmedia/express`\r\n\r\nor \r\n\r\n    npm install visionmedia/express#branch\r\n\r\nThere is also support for installing directly from a gist, bitbucket, gitlab, and a number of other specialized formats. Look at the `npm install` [documentation](https://docs.npmjs.com/cli/install) for them all."}, {"tags": [], "down_vote_count": 0, "creation_date": 1441620921, "answer_id": 32436218, "path": "stack.gulp.answer", "score": 75, "up_vote_count": 75, "is_accepted": false, "last_activity_date": 1514875391, "last_edit_date": 1514875391, "body_markdown": "If git is not installed, we can try `npm install --save https://github.com/Amitesh/gulp-rev-all/tarball/master`."}, {"tags": [], "down_vote_count": 1, "creation_date": 1462205329, "answer_id": 36986828, "path": "stack.gulp.answer", "score": 27, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1462205329, "body_markdown": "The current top answer by Peter Lyons is not relevant with recent NPM versions. For example, using the same command that was criticized in this answer is now fine.\r\n\r\n\r\n    $ npm install https://github.com/visionmedia/express\r\n\r\n\r\n\r\nIf you have continued problems it might be a problem with whatever package you were using."}, {"tags": [], "down_vote_count": 0, "creation_date": 1463564280, "answer_id": 37295723, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 35, "is_accepted": false, "last_activity_date": 1463564280, "body_markdown": "There&#39;s also `npm install https://github.com/{USER}/{REPO}/tarball/{BRANCH}` to use a different branch."}, {"tags": [], "down_vote_count": 0, "creation_date": 1465336492, "answer_id": 37690069, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1467071692, "last_edit_date": 1467071692, "body_markdown": "You could also do\r\n\r\n    npm i alex-cory/fasthacks\r\nor\r\n\r\n    npm i github:alex-cory/fasthacks\r\n\r\nBasically:\r\n\r\n    npm i user_or_org/repo_name"}, {"tags": [], "down_vote_count": 0, "creation_date": 1467782391, "answer_id": 38216773, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1467782694, "last_edit_date": 1467782694, "body_markdown": "Install it directly:\r\n\r\n    npm install visionmedia/express\r\n\r\nAlternatively, you can add `&quot;express&quot;: &quot;github:visionmedia/express&quot;` to the `&quot;dependencies&quot;` section of `package.json` file, then run:\r\n\r\n    npm install\r\n\r\n"}, {"tags": [], "down_vote_count": 10, "creation_date": 1468233205, "answer_id": 38304770, "path": "stack.gulp.answer", "score": -4, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1488355172, "last_edit_date": 1488355172, "body_markdown": "Try this command\r\n\r\n     npm install github:[Organisation]/[Repository]#[master/BranchName] -g\r\n\r\nthis command worked for me.\r\n\r\n\r\n     npm install github:BlessCSS/bless#3.x -g\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1473854835, "answer_id": 39490045, "path": "stack.gulp.answer", "score": 28, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1491568660, "last_edit_date": 1491568660, "body_markdown": "UPDATE sept 2016\r\n\r\nInstalling from vanilla https github URLs now seems to work:\r\n\r\n    npm install https://github.com/fergiemcdowall/search-index.git\r\n\r\n**EDIT:** there are a couple of users commenting that you cant do this for all modules because you are reading from a source control system, which may well contain invalid/uncompiled/buggy code. So to be clear (although it should go without saying): **given that the code in the repo is in an npm-usable state**, you can now quite happily install directly from github"}, {"tags": [], "down_vote_count": 0, "creation_date": 1485389181, "answer_id": 41863948, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1485389181, "body_markdown": "*UPDATE* now you can do: `npm install git://github.com/foo/bar.git`  \r\nor in `package.json`:\r\n\r\n\r\n    &quot;dependencies&quot;: {\r\n      &quot;bar&quot;: &quot;git://github.com/foo/bar.git&quot;\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1488855912, "answer_id": 42639414, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1488855912, "body_markdown": "You can directly install an github repo by `npm install` command, like this:\r\n```\r\nnpm install https://github.com/futurechallenger/npm_git_install.git --save\r\n```\r\n\r\n**NOTE:** In the repo which will be installed by npm command:\r\n\r\n1. maybe you have to have a *dist* folder in you repo, according to @Dan Dascalescu&#39;s comment.\r\n2. You definitely have to have a **package.json** in you repo! which I forget add."}, {"tags": [], "down_vote_count": 0, "creation_date": 1500346069, "answer_id": 45156653, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1500523269, "last_edit_date": 1500523269, "body_markdown": "The methods are covered pretty well now in [npm&#39;s install documentation](https://docs.npmjs.com/cli/install) as well as the numerous other answers here.\r\n\r\n    npm install git+ssh://git@github.com:&lt;githubname&gt;/&lt;githubrepo.git[#&lt;commit-ish&gt;]\r\n    npm install git+ssh://git@github.com:&lt;githubname&gt;/&lt;githubrepo.git&gt;[#semver:^x.x]\r\n    npm install git+https://git@github.com/&lt;githubname&gt;/&lt;githubrepo.git&gt;\r\n    npm install git://github.com/&lt;githubname&gt;/&lt;githubrepo.git&gt;\r\n    npm install github:&lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]\r\n\r\n**However, something notable that has changed recently is npm adding the `prepare` script to replace the `prepublish` script.**  This fixes a longstanding problem where modules installed via git did not run the `prepublish` script and thus did not complete the build steps that occur when a module is published to the npm registry. See https://github.com/npm/npm/issues/3055.\r\n\r\nOf course, the module authors will need to update their package.json to use the new `prepare` directive for this to start working."}, {"tags": [], "down_vote_count": 0, "creation_date": 1501978344, "answer_id": 45527461, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1501978344, "body_markdown": "The general form of the syntax is\r\n\r\n    &lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;[#&lt;commit-ish&gt; | #semver:&lt;semver&gt;]\r\nwhich means for your case it will be\r\n\r\n    npm install git+ssh://git@github.com/visionmedia/express.git\r\n\r\nFrom npmjs docs:\r\n\r\n&gt; npm install &lt;git remote url&gt;:\r\n&gt; \r\n&gt; Installs the package from the hosted git provider, cloning it with\r\n&gt; git. For a full git remote url, only that URL will be attempted.\r\n&gt; \r\n&gt;     &lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;[#&lt;commit-ish&gt;\r\n&gt; | #semver:&lt;semver&gt;] &lt;protocol&gt; is one of git, git+ssh, git+http,\r\n&gt; git+https, or git+file.\r\n&gt; \r\n&gt; If #&lt;commit-ish&gt; is provided, it will be used to clone exactly that\r\n&gt; commit. If the commit-ish has the format #semver:&lt;semver&gt;, &lt;semver&gt;\r\n&gt; can be any valid semver range or exact version, and npm will look for\r\n&gt; any tags or refs matching that range in the remote repository, much as\r\n&gt; it would for a registry dependency. If neither #&lt;commit-ish&gt; or\r\n&gt; #semver:&lt;semver&gt; is specified, then master is used.\r\n&gt; \r\n&gt; If the repository makes use of submodules, those submodules will be\r\n&gt; cloned as well.\r\n&gt; \r\n&gt; If the package being installed contains a prepare script, its\r\n&gt; dependencies and devDependencies will be installed, and the prepare\r\n&gt; script will be run, before the package is packaged and installed.\r\n&gt; \r\n&gt; The following git environment variables are recognized by npm and will\r\n&gt; be added to the environment when running git:\r\n&gt; \r\n\r\n&gt; - GIT_ASKPASS \r\n&gt; - GIT_EXEC_PATH \r\n&gt; - GIT_PROXY_COMMAND \r\n&gt; - GIT_SSH \r\n&gt; - GIT_SSH_COMMAND\r\n&gt; - GIT_SSL_CAINFO GIT_SSL_NO_VERIFY \r\n\r\n&gt; See the git man page for details.\r\n\r\n&gt; Examples:\r\n&gt; \r\n&gt;     npm install git+ssh://git@github.com:npm/npm.git#v1.0.27\r\n&gt;     npm install git+ssh://git@github.com:npm/npm#semver:^5.0\r\n&gt;     npm install git+https://isaacs@github.com/npm/npm.git\r\n&gt;     npm install git://github.com/npm/npm.git#v1.0.27\r\n&gt;     GIT_SSH_COMMAND=&#39;ssh -i ~/.ssh/custom_ident&#39; npm install git+ssh://git@github.com:npm/npm.git npm install\r\n\r\n"}], "title": "How to install an npm package from GitHub directly?", "view_count": 233633, "answer_count": 13, "code_snippet": ["<code>npm install https://github.com/visionmedia/express</code>", "<code>npm install express</code>", "<code>npm http GET https://github.com/visionmedia/express.git\nnpm http 200 https://github.com/visionmedia/express.git\nnpm ERR! not a package /home/guym/tmp/npm-32312/1373176518024-0.6586997057311237/tmp.tgz\nnpm ERR! Error: ENOENT, open '/home/guym/tmp/npm-32312/1373176518024-0.6586997057311237/package/package.json'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     &lt;http://github.com/isaacs/npm/issues&gt;\nnpm ERR! or email it to:\nnpm ERR!     &lt;npm-@googlegroups.com&gt;\n\nnpm ERR! System Linux 3.8.0-23-generic\nnpm ERR! command \"/usr/bin/node\" \"/usr/bin/npm\" \"install\" \"https://github.com/visionmedia/express.git\"\nnpm ERR! cwd /home/guym/dev_env/projects_GIT/proj/somename\nnpm ERR! node -v v0.10.10\nnpm ERR! npm -v 1.2.25\nnpm ERR! path /home/guym/tmp/npm-32312/1373176518024-0.6586997057311237/package/package.json\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/guym/dev_env/projects_GIT/proj/somename/npm-debug.log\nnpm ERR! not ok code 0\n</code>", "<code>\"express\": \"github:visionmedia/express\"</code>", "<code>\"dependencies\"</code>", "<code>package.json file</code>", "<code>npm install</code>", "<code>https://github.com/visionmedia/express</code>", "<code>git+https://git@github.com/visionmedia/express.git\n</code>", "<code>git+ssh://git@github.com/visionmedia/express.git\n</code>", "<code>git+https://github.com/visionmedia/express.git</code>", "<code>package.json</code>", "<code>Error: ENOENT, open 'tmp.tgz-unpack/package.json'</code>", "<code>git+ssh://....repo.git#branch</code>", "<code>#</code>", "<code>npm install git+https://github.com/user/repo.git\\#branch</code>", "<code>npm install visionmedia/express</code>", "<code>npm install visionmedia/express#branch\n</code>", "<code>npm install</code>", "<code>github.com</code>", "<code>npm install user/repo#branch</code>", "<code>npm install --save https://github.com/Amitesh/gulp-rev-all/tarball/master\n</code>", "<code>master</code>", "<code>/tarball/</code>", "<code>npm install https://github.com/{USER}/{REPO}/tarball/{BRANCH}</code>", "<code>npm install https://github.com/fergiemcdowall/search-index.git\n</code>", "<code>dist</code>", "<code>prebuild</code>", "<code>dist</code>", "<code>npm install https://github.com/fergiemcdowall/search-index-adder</code>", "<code>/lib</code>", "<code>$ npm install https://github.com/visionmedia/express\n</code>", "<code>npm i alex-cory/fasthacks\n</code>", "<code>npm i github:alex-cory/fasthacks\n</code>", "<code>npm i user_or_org/repo_name\n</code>", "<code>npm install visionmedia/express\n</code>", "<code>\"express\": \"github:visionmedia/express\"</code>", "<code>\"dependencies\"</code>", "<code>package.json</code>", "<code>npm install\n</code>", "<code>npm install git://github.com/foo/bar.git</code>", "<code>package.json</code>", "<code>\"dependencies\": {\n  \"bar\": \"git://github.com/foo/bar.git\"\n}\n</code>", "<code>npm install git+ssh://git@github.com:&lt;githubname&gt;/&lt;githubrepo.git[#&lt;commit-ish&gt;]\nnpm install git+ssh://git@github.com:&lt;githubname&gt;/&lt;githubrepo.git&gt;[#semver:^x.x]\nnpm install git+https://git@github.com/&lt;githubname&gt;/&lt;githubrepo.git&gt;\nnpm install git://github.com/&lt;githubname&gt;/&lt;githubrepo.git&gt;\nnpm install github:&lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]\n</code>", "<code>prepare</code>", "<code>prepublish</code>", "<code>prepublish</code>", "<code>prepare</code>", "<code>&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;[#&lt;commit-ish&gt; | #semver:&lt;semver&gt;]\n</code>", "<code>npm install git+ssh://git@github.com/visionmedia/express.git\n</code>", "<code>&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;[#&lt;commit-ish&gt;\n</code>", "<code>npm install git+ssh://git@github.com:npm/npm.git#v1.0.27\nnpm install git+ssh://git@github.com:npm/npm#semver:^5.0\nnpm install git+https://isaacs@github.com/npm/npm.git\nnpm install git://github.com/npm/npm.git#v1.0.27\nGIT_SSH_COMMAND='ssh -i ~/.ssh/custom_ident' npm install git+ssh://git@github.com:npm/npm.git npm install\n</code>", "<code>npm install</code>", "<code>\nnpm install https://github.com/futurechallenger/npm_git_install.git --save\n</code>", "<code> npm install github:[Organisation]/[Repository]#[master/BranchName] -g\n</code>", "<code> npm install github:BlessCSS/bless#3.x -g\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "typescript"], "creation_date": 1349195878, "body_markdown": "Can you please describe what the TypeScript language is?\r\n\r\nWhat can it do that JavaScript or available libraries cannot do, that would give me reason to consider it?", "last_edit_date": 1462973802, "up_vote_count": 1125, "link": "https://stackoverflow.com/questions/12694530/what-is-typescript-and-why-would-i-use-it-in-place-of-javascript", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1349196088, "answer_id": 12694578, "path": "stack.gulp.answer", "score": 914, "up_vote_count": 914, "is_accepted": true, "last_activity_date": 1472629210, "last_edit_date": 1495542888, "body_markdown": "&lt;h2&gt;1000ft view...&lt;/h2&gt;\r\n[TypeScript][1] is a superset of JavaScript which primarily provides optional static typing, classes and interfaces. One of the big benefits is to enable IDEs to provide a richer environment for spotting common errors *as you type the code*.\r\n\r\nTo get an idea of what I mean, watch [Microsoft&#39;s introductory video][2] on the language.\r\n\r\nFor a large JavaScript project, adopting TypeScript might result in more robust software, while still being deployable where a regular JavaScript application would run.\r\n\r\nIt is open source, but you only get the clever Intellisense as you type if you use a supported IDE. Initially, this was only Microsoft&#39;s Visual Studio (also noted in blog post from [Miguel de Icaza][3]). These days, [other IDEs offer TypeScript support too][4].\r\n\r\n&lt;h2&gt;Are there other technologies like it?&lt;/h2&gt;\r\nThere&#39;s [CoffeeScript][5], but that really serves a different purpose. IMHO, CoffeeScript provides readability for humans, but TypeScript also provides deep readability for *tools* through its optional static typing (see this [recent blog post][6] for a little more critique). There&#39;s also [Dart][7] but that&#39;s a full on replacement for JavaScript (though it [can produce JavaScript code][8])\r\n\r\n\r\n&lt;h2&gt;Example&lt;/h2&gt;\r\n\r\nAs an example, here&#39;s some TypeScript (you can play with this in the [TypeScript Playground][9])\r\n\r\n    class Greeter {\r\n    \tgreeting: string;\r\n    \tconstructor (message: string) {\r\n    \t\tthis.greeting = message;\r\n    \t}\r\n    \tgreet() {\r\n    \t\treturn &quot;Hello, &quot; + this.greeting;\r\n    \t}\r\n    }  \r\n\r\n \r\n\r\nAnd here&#39;s the JavaScript it would produce\r\n\r\n    var Greeter = (function () {\r\n        function Greeter(message) {\r\n            this.greeting = message;\r\n        }\r\n        Greeter.prototype.greet = function () {\r\n            return &quot;Hello, &quot; + this.greeting;\r\n        };\r\n        return Greeter;\r\n    })();\r\n\r\nNotice how the TypeScript defines the type of member variables and class method parameters. This is removed when translating to JavaScript, but used by the IDE and compiler to spot errors, like passing a numeric type to the constructor.\r\n\r\nIt&#39;s also capable of inferring types which aren&#39;t explicitly declared, for example, it would determine the `greet()` method returns a string.\r\n\r\n&lt;h2&gt;Debugging Typescript&lt;/h2&gt;\r\nMany browsers and IDEs offer direct debugging support through sourcemaps. See this Stack Overflow question for more details: [Debugging TypeScript code with Visual Studio][10]\r\n\r\n&lt;h2&gt;Want to know more?&lt;/h2&gt;\r\nI originally wrote this answer when Typescript was still hot-off-the-presses. Check out [Lodewijk&#39;s answer][11] to this question for some more current detail.\r\n\r\n\r\n  [1]: http://www.typescriptlang.org\r\n  [2]: http://channel9.msdn.com/posts/Anders-Hejlsberg-Introducing-TypeScript\r\n  [3]: http://tirania.org/blog/archive/2012/Oct-01.html\r\n  [4]: https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support\r\n  [5]: http://coffeescript.org/\r\n  [6]: http://www.hanselman.com/blog/WhyDoesTypeScriptHaveToBeTheAnswerToAnything.aspx\r\n  [7]: http://en.wikipedia.org/wiki/Dart_%28programming_language%29\r\n  [8]: http://www.dartlang.org/docs/dart-up-and-running/contents/ch04-tools-dart2js.html\r\n  [9]: http://www.typescriptlang.org/Playground/\r\n  [10]: https://stackoverflow.com/questions/12711826/debugging-typescript-code-with-visual-studio\r\n  [11]: https://stackoverflow.com/a/35048303/6521"}, {"tags": [], "down_vote_count": 1, "creation_date": 1451189909, "answer_id": 34477523, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1462402450, "last_edit_date": 1462402450, "body_markdown": "&quot;**[TypeScript Fundamentals][1]**&quot;  -- a Pluralsight video-course by **[Dan Wahlin][2]** and **[John Papa][3]** is a really good, presently (March 25, 2016) updated to reflect TypeScript 1.8, introduction to Typescript. \r\n\r\nFor me the really good features, beside the nice possibilities for intellisense, are the *classes*, *interfaces*, *modules*, the ease of implementing AMD, and the possibility to use the Visual Studio Typescript debugger when invoked with IE.\r\n\r\n**To summarize**: If used as intended, Typescript can make JavaScript programming more reliable, and easier. It can increase the productivity of the JavaScript programmer significantly over the full SDLC.\r\n\r\n\r\n  [1]: https://www.pluralsight.com/courses/typescript\r\n  [2]: https://www.pluralsight.com/authors/dan-wahlin\r\n  [3]: https://www.pluralsight.com/authors/john-papa"}, {"tags": [], "down_vote_count": 1, "creation_date": 1453929805, "answer_id": 35048303, "path": "stack.gulp.answer", "score": 604, "up_vote_count": 605, "is_accepted": false, "last_activity_date": 1518593812, "last_edit_date": 1518593812, "body_markdown": "Though the accepted answer is fine, I felt it really doesn&#39;t do TypeScript justice at this point. It is not the early days anymore. TypeScript is finding a lot more adoption now with several popular frameworks being written in TypeScript. The reasons why you should choose TypeScript instead of JavaScript are many now. \r\n\r\n# Relation to JavaScript \r\n\r\nJavaScript is standardized through the ECMAScript standards. Not all browsers in use support all features of newer ECMAScript standards (see this [table][1]). TypeScript supports new ECMAScript standards and compiles them to (older) ECMAScript targets of your choosing (current targets are 3, 5 and 6 [a.k.a. 2015]). This means that you can use features of ES2015 and beyond, like modules, lambda functions, classes, the spread operator, destructuring, today. It also adds type support of course, which is not part of any ECMAScript standard and may likely never be due to the interpreted nature instead of compiled nature of JavaScript. The type system of TypeScript is relatively rich and includes: interfaces, enums, hybrid types, generics, union and intersection types, access modifiers and much more. The [official website][2] of TypeScript gives an overview of these features.\r\n\r\n# Relation to other JavaScript targeting languages\r\n\r\nTypeScript has a unique philosophy compared to other languages that compile to JavaScript. JavaScript code is valid TypeScript code; TypeScript is a superset of JavaScript. You can almost rename your `.js` files to `.ts` files and start using TypeScript. TypeScript files are compiled to readable JavaScript, so that migration back is possible and understanding the compiled TypeScript is not hard at all. This way TypeScript builds on the successes of JavaScript while improving on its weaknesses. \r\n\r\nOn the one hand, you have future proof tools that take modern ECMAScript standards and compile it down to older JavaScript versions with Babel being the most popular one. On the other hand, you have languages that may totally differ from JavaScript which target JavaScript, like Coffeescript, Clojure, Dart, Elm, Haxe, ScalaJs, and a whole host more (see this [list][3]). These languages, though they might be better than where JavaScript&#39;s future might ever lead, run a greater risk of not finding enough adoption for their futures to be guaranteed. You might also have more trouble finding experienced developers for some of these languages, though the ones you will find can often be more enthusiastic. Interop with JavaScript can also be a bit more involved, since they are farther removed from what JavaScript actually is.\r\n\r\nTypeScript sits in between these two extremes, thus balancing the risk. TypeScript is not a risky choice by any standard. It takes very little effort to get used to if you are known to JavaScript, since it is not a completely different language, has excellent JavaScript interoperability support and it has seen a lot of adoption recently.\r\n\r\n# Optionally static typing and type inference\r\n\r\nJavaScript is dynamically typed. This means JavaScript does not know what type a variable is until it is actually instantiated at run-time. This also means that it may be too late. TypeScript adds type support to JavaScript. Bugs that are caused by false assumptions of some variable being of a certain type can be completely eradicated if you play your cards right; how strict you type your code or if you type your code at all is up to you. \r\n\r\nTypeScript makes typing a bit easier and a lot less explicit by the usage of type inference. For example: `var x = &quot;hello&quot;` in TypeScript is the same as `var x : string = &quot;hello&quot;`. The type is simply inferred from its use. Even it you don&#39;t explicitly type the types, they are still there to save you from doing something which otherwise would result in a run-time error. \r\n\r\nTypeScript is optionally typed by default. For example `function divideByTwo(x) { return  x / 2 }` is a valid function in TypeScript which can be called with *any* kind of parameter, even though calling it with a string will obviously result in a *runtime* error. Just like you are used to in JavaScript. This works, because when no type was explicitly assigned and the type could not be inferred, like in the divideByTwo example, TypeScript will implicitly assign the type `any`. This means the divideByTwo function&#39;s type signature automatically becomes `function divideByTwo(x : any) : any`.  There is a compiler flag to disallow this behavior: `--noImplicitAny`. Enabling this flag gives you a greater degree of safety, but also means you will have to do more typing. \r\n\r\nTypes have a cost associated with them. First of all there is a learning curve, and second of all, of course, it will cost you a bit more time to set up a codebase using proper strict typing too. In my experience, these costs are totally worth it on any serious codebase you are sharing with others. [A Large Scale Study of Programming Languages and Code Quality in Github][4] suggests that *&quot;that statically typed languages in general are less defect prone than the dynamic types, and that strong typing is better than weak typing in the same regard.&quot;*\r\n\r\nIt is interesting to note that this very same paper finds that TypeScript is less error prone then JavaScript:\r\n\r\n&gt; For those with positive coefficients we can expect that the language\r\n&gt; is associated with, ceteris paribus, a greater number of defect fixes.\r\n&gt; These languages include C, C++, *JavaScript*, Objective-C, Php, and\r\n&gt; Python. The languages Clojure, Haskell, Ruby, Scala, and *TypeScript*,\r\n&gt; all have negative coefficients implying that these languages are less\r\n&gt; likely than the average to result in defect fixing commits.\r\n\r\n# Enhanced IDE support\r\n\r\nThe development experience with TypeScript is a great improvement over JavaScript. The IDE is informed in real-time by the TypeScript compiler on its rich type information. This gives a couple of major advantages. For example, with TypeScript you can safely do refactorings like renames across your entire codebase. Through code completion you can get inline help on whatever functions a library might offer. No more need to remember them or look them up in online references. Compilation errors are reported directly in the IDE with a red squiggly line while you are busy coding. All in all this allows for a significant gain in productivity compared to working with JavaScript. One can spend more time coding and less time debugging.\r\n\r\nThere is a wide range of IDEs that have excellent support for TypeScript, like Visual Studio &amp; VS code, Atom, Sublime, and IntelliJ/WebStorm. \r\n\r\n# Strict null checks\r\n\r\nRuntime errors of the form `cannot read property &#39;x&#39; of undefined` or `undefined is not a function` are very commonly caused by bugs in JavaScript code. Out of the box TypeScript already reduces the probability of these kinds of errors occurring, since one cannot use a variable that is not known to the TypeScript compiler (with the exception of properties of `any` typed variables). It is still possible though to mistakenly utilize a variable that is set to `undefined`. However, with the 2.0 version of TypeScript you can eliminate these kinds of errors all together through the usage of non-nullable types. This works as follows: \r\n\r\nWith strict null checks enabled (`--strictNullChecks` compiler flag) the TypeScript compiler will not allow `undefined` to be assigned to a variable unless you explicitly declare it to be of nullable type. For example, `let x : number = undefined` will result in a compile error. This fits perfectly with type theory, since `undefined` is not a number. One can define `x` to be a sum type of `number` and `undefined` to correct this: `let x : number | undefined = undefined`.\r\n\r\nOnce a type is known to be nullable, meaning it is of a type that can also be of the value `null` or `undefined`, the TypeScript compiler can determine through control flow based type analysis whether or not your code can safely use a variable or not. In other words when you check a variable is `undefined` through for example an `if` statement the TypeScript compiler will infer that the type in that branch of your code&#39;s control flow is not anymore nullable and therefore can safely be used. Here is a simple example:\r\n\r\n    let x: number | undefined;\r\n    if (x !== undefined) x += 1; // this line will compile, because x is checked.\r\n    x += 1; // this line will fail compilation, because x might be undefined.\r\n\r\nDuring the build 2016 conference co-designer of TypeScript Anders Hejlsberg gave a detailed explanation and demonstration of this feature: [video][5] (from 44:30 to 56:30).\r\n\r\n# Compilation\r\n\r\nTo use TypeScript you need a build process to compile to JavaScript code. The build process generally takes only a couple of seconds depending of course on the size of your project. The TypeScript compiler supports incremental compilation (`--watch` compiler flag), so that all subsequent changes can be compiled at greater speed. \r\n\r\nThe TypeScript compiler can inline source map information in the generated .js files or create separate .map files. Source map information can be used by debugging utilities like the Chrome DevTools and other IDE&#39;s to relate the lines in the JavaScript to the ones that generated them in the TypeScript. This makes it possible for you to set breakpoints and inspect variables during runtime directly on your TypeScript code. Source map information works pretty good, it was around long before TypeScript, but debugging TypeScript is generally not as great as when using JavaScript directly. Take the  `this` keyword for example. Due to the changed semantics of the `this` keyword around closures since ES2015, `this` may actually exists during runtime as a variable called `_this` (see [this answer][6]). This may confuse you during debugging, but generally is not a problem if you know about it or inspect the JavaScript code. It should be noted that Babel suffers the exact same kind of issue.\r\n\r\nThere are a few other tricks the TypeScript compiler can do, like generating intercepting code based on [decorators][7], generating module loading code for different module systems and parsing [JSX][8]. However, you will likely require a build tool besides the Typescript compiler. For example if you want to compress your code you will have to add other tools to your build process to do so.\r\n\r\nThere are TypeScript compilation plugins available for [Webpack][9], [Gulp][10], [Grunt][11] and pretty much any other JavaScript build tool out there. The TypeScript documentation has a section on [integrating with build tools][12] covering them all. A [linter][13] is also available in case you would like even more build time checking. There are also a great number of seed projects out there that will get you started with TypeScript in combination with a bunch of other technologies like Angular 2, React, Ember, SystemJs, WebPack, Gulp, etc.\r\n\r\n# JavaScript interoperability\r\n\r\nSince TypeScript is so closely related to JavaScript it has great interoperability capabilities, but some extra work is required to work with JavaScript libraries in TypeScript. [TypeScript definitions][14] are needed so that the TypeScript compiler understands that function calls like `_.groupBy` or `angular.copy` or `$.fadeOut` are not in fact illegal statements. The definitions for these functions are placed in `.d.ts` files. \r\n\r\nThe simplest form a definition can take is to allow an identifier to be used in any way. For example, when using [Lodash][15], a single line definition file `declare var _ : any` will allow you to call any function you want on `_`, but then of course you are also still able to make mistakes: `_.foobar()` would be a legal TypeScript call, but is of course an illegal call at run-time. If you want proper type support and code completion your definition file needs to to be more exact (see [lodash definitions][16] for an example). \r\n\r\n[Npm modules][17] that come pre-packaged with their own type definitions are automatically understood by the TypeScript compiler (see [documentation][18]). For pretty much any other semi-popular JavaScript library that does not include its own definitions somebody out there has already made type definitions available through another npm module. These modules are prefixed with &quot;@types/&quot; and come from a Github repository called [DefinitelyTyped][19]. \r\n\r\nThere is one caveat: the type definitions must match the version of the library you are using at run-time. If they do not, TypeScript might disallow you from calling a function or dereferencing a variable that exist or allow you to call a function or dereference a variable that does not exist, simply because the types do not match the run-time at compile-time. So make sure you load the right version of the type definitions for the right version of the library you are using. \r\n\r\nTo be honest, there is a slight hassle to this and it may be one of the reasons you do not choose TypeScript, but instead go for something like Babel that does not suffer from having to get type definitions at all. On the other hand, if you know what you are doing you can easily overcome any kind of issues caused by incorrect or missing definition files.\r\n\r\n# Converting from JavaScript to TypeScript\r\n\r\nAny `.js` file can be renamed to a `.ts` and ran through the TypeScript compiler to get syntactically the same JavaScript code as an output (if it was syntactically correct in the first place). Even when the TypeScript compiler gets compilation errors it will still produce a `.js` file. It can even accept `.js` files as input with the `--allowJs` flag. This allows you to start with TypeScript right away. Unfortunately compilation errors are likely to occur in the beginning. One does need to remember that these are not show-stopping errors like you may be used to with other compilers.  \r\n\r\nThe compilation errors one gets in the beginning when converting a JavaScript project to a TypeScript project are unavoidable by TypeScript&#39;s nature. TypeScript checks *all* code for validity and thus it needs to know about all functions and variables that are used. Thus type definitions need to be in place for all of them otherwise compilation errors are bound to occur. As mentioned in the chapter above, for pretty much any JavaScript framework there are `.d.ts` files that can easily be acquired with a few `typings install` commands. It might however be that you&#39;ve used some obscure library for which no TypeScript definitions are available or that you&#39;ve polyfilled some JavaScript primitives. In that case you must supply type definitions for these bits in order for the compilation errors to dissapear. Just create a `.d.ts` file and include it in the tsconfig.json&#39;s `files` array, so that it is always considered by the TypeScript compiler. In it declare those bits that TypeScript does not know about as type `any`. Once you&#39;ve eliminated all errors you can gradually introduce typing to those parts according to your needs.\r\n\r\nSome work on (re)configuring your build pipeline will also be needed to get TypeScript into the build pipeline. As mentioned in the chapter on compilation there are plenty of good resources out there and I encourage you to look for seed projects that use the combination of tools you want to be working with. \r\n\r\nThe biggest hurdle is the learning curve. I encourage you to play around with a small project at first. Look how it works, how it builds, which files it uses, how it is configured, how it functions in your IDE, how it is structured, which tools it uses, etc. Converting a large JavaScript codebase to TypeScript is very doable when you know what you are doing, but it might be frustrating when you don&#39;t.\r\n\r\n# Adoption\r\n\r\nTypeScript is open source (Apache 2 licensed, see [github][20]) and backed by Microsoft. [Anders Hejlsberg][21], the lead architect of C# is spearheading the project. It&#39;s a very active project; the TypeScript team has been releasing a lot of new features in the last few years and a lot of great ones are still planned to come (see the [roadmap][22]). \r\n\r\nIn the [2017 StackOverflow developer survey][23] TypeScript was the most popular JavaScript transpiler (9th place overall) and won third place in the most loved programming language category.\r\n\r\n  [1]: https://kangax.github.io/compat-table/es6/\r\n  [2]: http://www.typescriptlang.org\r\n  [3]: https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS\r\n  [4]: http://macbeth.cs.ucdavis.edu/lang_study.pdf\r\n  [5]: https://channel9.msdn.com/Events/Build/2016/B881\r\n  [6]: https://stackoverflow.com/questions/30056593/visual-studio-shows-wrong-value-for-this-in-typescript/30070859#30070859\r\n  [7]: https://stackoverflow.com/q/29775830/1860591\r\n  [8]: https://github.com/Microsoft/TypeScript/wiki/JSX\r\n  [9]: https://github.com/TypeStrong/ts-loader\r\n  [10]: https://www.npmjs.com/package/gulp-typescript\r\n  [11]: https://www.npmjs.com/package/grunt-typescript\r\n  [12]: https://www.typescriptlang.org/docs/handbook/integrating-with-build-tools.html\r\n  [13]: https://www.npmjs.com/package/tslint\r\n  [14]: http://www.typescriptlang.org/docs/handbook/namespaces.html\r\n  [15]: https://lodash.com/\r\n  [16]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/lodash\r\n  [17]: https://www.npmjs.com/\r\n  [18]: https://www.typescriptlang.org/docs/handbook/typings-for-npm-packages.html\r\n  [19]: https://github.com/DefinitelyTyped/DefinitelyTyped/\r\n  [20]: https://github.com/Microsoft/TypeScript\r\n  [21]: https://en.wikipedia.org/wiki/Anders_Hejlsberg\r\n  [22]: https://github.com/Microsoft/TypeScript/wiki/Roadmap\r\n  [23]: https://insights.stackoverflow.com/survey/2017#technology"}, {"tags": [], "down_vote_count": 1, "creation_date": 1455222753, "answer_id": 35349467, "path": "stack.gulp.answer", "score": 41, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1487690936, "last_edit_date": 1487690936, "body_markdown": "TypeScript does something similar to what less or sass does for CSS. They are super sets of it, which means that every JS code you write is valid TypeScript code. Plus you can use the other goodies that it adds to the language, and the transpiled code will be valid js. You can even set the JS version that you want your resulting code on. \r\n\r\n\r\nCurrently TypeScript is a super set of ES2015, so might be a good choice to start learning the new js features and transpile to the needed standard for your project. \r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1465215240, "answer_id": 37657170, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1491474480, "last_edit_date": 1491474480, "body_markdown": "Ecma script 5 (ES5) which all browser support and precompiled. ES6/ES2015 and ES/2016 came this year with lots of changes so to pop up these changes there is something in between which should take cares about so TypeScript.\r\n\u2022 TypeScript is Types -&gt; Means we have to define datatype of each property and methods. If you know C# then Typescript is easy to understand.\r\n\u2022 Big advantage of TypeScript is we identity Type related issues early before going to production. This allows unit tests to fail if there is any type mismatch.\r\n"}], "title": "What is TypeScript and why would I use it in place of JavaScript?", "view_count": 313785, "answer_count": 5, "code_snippet": ["<code>class Greeter {\n    greeting: string;\n    constructor (message: string) {\n        this.greeting = message;\n    }\n    greet() {\n        return \"Hello, \" + this.greeting;\n    }\n}  \n</code>", "<code>var Greeter = (function () {\n    function Greeter(message) {\n        this.greeting = message;\n    }\n    Greeter.prototype.greet = function () {\n        return \"Hello, \" + this.greeting;\n    };\n    return Greeter;\n})();\n</code>", "<code>greet()</code>", "<code>.js</code>", "<code>.ts</code>", "<code>var x = \"hello\"</code>", "<code>var x : string = \"hello\"</code>", "<code>function divideByTwo(x) { return  x / 2 }</code>", "<code>any</code>", "<code>function divideByTwo(x : any) : any</code>", "<code>--noImplicitAny</code>", "<code>cannot read property 'x' of undefined</code>", "<code>undefined is not a function</code>", "<code>any</code>", "<code>undefined</code>", "<code>--strictNullChecks</code>", "<code>undefined</code>", "<code>let x : number = undefined</code>", "<code>undefined</code>", "<code>x</code>", "<code>number</code>", "<code>undefined</code>", "<code>let x : number | undefined = undefined</code>", "<code>null</code>", "<code>undefined</code>", "<code>undefined</code>", "<code>if</code>", "<code>let x: number | undefined;\nif (x !== undefined) x += 1; // this line will compile, because x is checked.\nx += 1; // this line will fail compilation, because x might be undefined.\n</code>", "<code>--watch</code>", "<code>this</code>", "<code>this</code>", "<code>this</code>", "<code>_this</code>", "<code>_.groupBy</code>", "<code>angular.copy</code>", "<code>$.fadeOut</code>", "<code>.d.ts</code>", "<code>declare var _ : any</code>", "<code>_</code>", "<code>_.foobar()</code>", "<code>.js</code>", "<code>.ts</code>", "<code>.js</code>", "<code>.js</code>", "<code>--allowJs</code>", "<code>.d.ts</code>", "<code>typings install</code>", "<code>.d.ts</code>", "<code>files</code>", "<code>any</code>", "<code>let x : number? = undefined</code>", "<code>?</code>", "<code>npm</code>", "<code>yarn</code>", "<code>install @types/foo</code>"], "path": "stack.gulp"}, {"tags": ["github", "markdown"], "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1332886588, "answer_id": 9898502, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1446586362, "last_edit_date": 1446586362, "body_markdown": "GitHub Pages (which is basically a wrapper for Jekyll) [appears to use kramdown](https://github.com/jekyll/jekyll/blob/master/lib/jekyll.rb#L29), which [implements all of Maruku](http://kramdown.gettalong.org/parser/kramdown.html), and therefore has support for an [automatically generated table of contents](http://maruku.rubyforge.org/maruku.html#toc-generation) via a`toc` attribute:\r\n\r\n    * auto-gen TOC:\r\n    {:toc}\r\n\r\nThe first line just starts an unordered list and is actually thrown away.\r\n\r\nThis results in a nested set of unordered lists, using the headers in the document.\r\n\r\n**Note:** this should work for GitHub Pages, not GitHub Flavored Markdown (GFM) as used in comments or wiki pages. AFAIK a solution doesn&#39;t exist for that."}, {"tags": [], "down_vote_count": 1, "creation_date": 1337881474, "answer_id": 10742669, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1387226551, "last_edit_date": 1387226551, "body_markdown": "Github Flavored Markdown uses RedCarpet as their Markdown engine.\r\nFrom the [RedCarpet repo][1]:\r\n\r\n&gt; :with_toc_data - add HTML anchors to each header in the output HTML,\r\n    to allow linking to each section.\r\n\r\nIt seems in that you&#39;d need to get at the renderer level to set this flag, which isn&#39;t possible on Github obviously. However, the [latest update][2] to Github Pages, it seems that automatic anchoring is turned on for headers, creating linkable headings. Not exactly what you want, but it might help you create a TOC for your doc a bit easier (albeit manually).\r\n\r\n  [1]: https://github.com/tanoku/redcarpet#darling-i-packed-you-a-couple-renderers-for-lunch-\r\n  [2]: https://github.com/blog/1173-github-pages-update"}, {"tags": [], "down_vote_count": 0, "creation_date": 1338086265, "answer_id": 10771251, "path": "stack.gulp.answer", "score": 128, "up_vote_count": 128, "is_accepted": true, "last_activity_date": 1443732300, "last_edit_date": 1443732300, "body_markdown": "I created two options to generate a toc for github-flavored-markdown:\r\n\r\n### DocToc Command Line Tool ([source][2]) requires [node.js][1]\r\n\r\n#### Installation: \r\n`npm install -g doctoc`\r\n\r\n#### Usage:\r\n\r\n`doctoc .` to add table of contents to all markdown files in the current and all sub directories.\r\n\r\n### &lt;strike&gt;DocToc WebApp  \r\nIf you want to try it  online first, go to the [doctoc][3] site,\r\n   paste the link of the markdown page and it will generate a table of\r\n   content that you can insert at the top of your markdown file.&lt;/strike&gt;\r\n\r\n### Github Wikis and Anchors\r\n\r\nAs Matthew Flaschen pointed out in the comments below, for its wiki pages GitHub previously didn&#39;t generate the anchors that `doctoc` depends on.\r\n\r\n**UPDATE: However, they fixed [this issue](https://github.com/gollum/gollum/issues/380).**\r\n\r\n  [1]: http://nodejs.org/\r\n  [2]: https://github.com/thlorenz/doctoc\r\n  [3]: http://doctoc.herokuapp.com/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1365536754, "answer_id": 15911120, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1370506924, "last_edit_date": 1370506924, "body_markdown": "It is possible to generate a webpage automatically with http://documentup.com/ from the `README.md` file. It&#39;s not creating a TOC, but for many it might solve the reason for wanting to create a TOC.\r\n\r\nAnother alternative to Documentup is Flatdoc: http://ricostacruz.com/flatdoc/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1370568037, "answer_id": 16974822, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1370568037, "body_markdown": "## [Grunt Readme Generator][1]\r\n\r\nI&#39;ve just written a tool for this. Mainly for my github projects. This is a Grunt plugin to generate a readme file from multiple little sections of markdown files, with table of contents. Has many features and customization.\r\n\r\n###Quoted from its readme:\r\n\r\n...\r\n\r\nLets say you have a readme structure such as:\r\n\r\n    - Installation\r\n    - Usage\r\n        -- Example\r\n        -- Example Output\r\n    - Documentation\r\n        -- Options\r\n            --- option1\r\n            --- option2\r\n        -- API\r\n    - License\r\n    - Contributing\r\n\r\n- You can write a task to generate `Options.md` from `option1.md` and `option2.md`\r\n- Then a task to generate `Documentation.md` from `Options.md` and `API.md`\r\n- Another task to generate `Usage.md` from `Example.md` and `Example Output.md` files\r\n- And wrap it all up by creating the `Readme.md` from `Installation.md`, `Usage.md`, `Documentation.md`, `License.md` and `Contributing.md`\r\n- voil&#224; !\r\n\r\n### Highlights\r\n\r\n- Automatic table of contents generation\r\n- Automatic `Back To Top` link generation\r\n- Highly customizable for many many parts of the bigger picture\r\n- Automatic Title and Description generation on the top\r\n- Option to generate travis build status image on the top for desired branch\r\n- Specifically designed for GitHub projects and [GFM](https://help.github.com/articles/github-flavored-markdown)\r\n- Optional banners on the top to put a logo or ascii art!\r\n\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\n....\r\n\r\n### I hope this helps. The repo is located at [GitHub][1]. You can find more information on how to install and the full list of options with examples there.\r\n\r\n  [1]: https://github.com/aponxi/grunt-readme-generator"}, {"tags": [], "down_vote_count": 0, "creation_date": 1395676838, "answer_id": 22614453, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1395680321, "last_edit_date": 1395680321, "body_markdown": "It&#39;s not automatic, but it uses Notepad++ regular expressions:\r\n\r\nReplace all first by the second (removes all lines not having headers)\r\n\r\n    ^##(#?)(#?)(.*?)$(.|\\r|\\n)*?(?=^##|\\z)\r\n    -\\1\\2 [\\3](#\\3)\\n\r\n\r\nThen (converts headers III to spaces)\r\n\r\n    -##\r\n            -\r\n\r\nThen (converts headers II to spaces)\r\n\r\n    -#\r\n        -\r\n\r\nThen (remove unused chars at the beginning and at the end of link title)\r\n\r\n    \\[ *((?:(?![ .:#!\\?;]*\\])[^#])*)[ #:!\\?;]*\\]\r\n    [\\1]\r\n\r\nThen (convert last tokens lowercase and dash instead of spaces)\r\n\r\n    \\]([^ \\r\\n]*) ([^\\r\\n ]*)\r\n    ]\\L\\1-\\2\r\n\r\nRemove unused final pounds and initial dashes:\r\n\r\n    (?:()[-:;!\\?#]+$|(\\]#)-)\r\n    \\1\\2\r\n\r\nRemove useless chars in links:\r\n\r\n    (\\].*?)(?:\\(|\\))\r\n    \\1\r\n\r\nAnd finally add parenthesis around final links:\r\n\r\n    \\](?!\\()(.*?)$\r\n    \\]\\(\\1\\)\r\n\r\nAnd voil&#224;! You can even put this in a global macro if you repeat it enough time.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1403419599, "answer_id": 24348810, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1429770487, "last_edit_date": 1429770487, "body_markdown": "It&#39;s not possible, except for the workarounds proposed.\r\n\r\nI [proposed](https://github.com/isaacs/github/issues/215) Kramdown TOC extension and other possibilities to support@github.com and [Steven! Ragnar&#246;k](https://github.com/nuclearsandwich) replied with the usual:\r\n\r\n&gt; Thanks for the suggestion and links. I&#39;ll add it to our internal feature request list for the team to see.\r\n\r\nLet&#39;s upvote this question until it happens.\r\n\r\nAnother (generally unacceptable) workaround is to use asciidoc instead of Markdown, [which does render TOCs](https://github.com/cirosantilli/test/blob/406832b1dd2be892bfea9cac2d90f5d466418b0d/adoc.adoc)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1416502215, "answer_id": 27045099, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1416502215, "body_markdown": "Use [coryfklein/doctoc](https://github.com/coryfklein/doctoc), a fork of [thlorenz/doctoc](https://github.com/thlorenz/doctoc) that does not add &quot;*generated with* [DocToc](http://doctoc.herokuapp.com/)&quot; to every table of contents.\r\n\r\n    npm install -g coryfklein/doctoc"}, {"tags": [], "down_vote_count": 0, "creation_date": 1416671435, "answer_id": 27079282, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1440160231, "last_edit_date": 1440160231, "body_markdown": "[Gitdown][1] is a markdown preprocessor for Github.\r\n\r\nUsing Gitdown you can:\r\n\r\n* **Generate Table of Contents**\r\n* Find dead URLs and Fragment Identifiers\r\n* Include variables\r\n* Include files\r\n* Get file size\r\n* Generate Badges\r\n* Print Date\r\n* Print information about the repository itself\r\n\r\nGitdown streamlines common tasks associated with maintaining a documentation page for a GitHub repository.\r\n\r\nUsing it is straightforward:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var Gitdown = require(&#39;gitdown&#39;);\r\n\r\n    Gitdown\r\n        // Gitdown flavored markdown.\r\n        .read(&#39;.gitdown/README.md&#39;)\r\n        // GitHub compatible markdown.\r\n        .write(&#39;README.md&#39;);\r\n\r\nYou can either have it as a separate script or have it as part of the build script routine (such as [Gulp][2]).\r\n\r\n\r\n  [1]: https://github.com/gajus/gitdown\r\n  [2]: http://gulpjs.com/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1426170306, "answer_id": 29012394, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1426170306, "body_markdown": "My colleague @schmiedc and I have created [a GreaseMonkey script](http://tomancaklab.github.io/gfm-add-toc.user.js) that installs a new `TOC` button left of the `h1` button which uses the excellent `markdown-js` library to add/refresh a table of contents.\r\n\r\nThe advantage over solutions like doctoc is that it integrates into GitHub&#39;s wiki editor and does not need users to work on their command-line (and require users to install tools like `node.js`). In Chrome, it works by drag &#39;n dropping into the Extensions page, in Firefox you will need to install the GreaseMonkey extension.\r\n\r\nIt will work with plain markdown (i.e. it does not handle code blocks correctly, as that is a GitHub extension to markdown). Contributions welcome."}, {"tags": [], "down_vote_count": 0, "creation_date": 1474194342, "answer_id": 39556617, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1477142083, "last_edit_date": 1477142083, "body_markdown": "If you edit Markdown files with Vim, you can try this plugin [vim-markdown-toc](https://github.com/mzlogin/vim-markdown-toc).\r\n\r\nThe usage is simple, just move your cursor to the place you want to append Table of Contents and run `:GenTocGFM`, done!\r\n\r\nScreenshots:\r\n\r\n![vim-markdown-toc](https://raw.githubusercontent.com/mzlogin/vim-markdown-toc/master/screenshots/english.gif)\r\n\r\nFeatures:\r\n\r\n1. Generate toc for Markdown files. (Support GitHub Flavored Markdown and Redcarpet)\r\n\r\n2. Update existing toc.\r\n\r\n3. Auto update toc on save."}, {"tags": [], "down_vote_count": 0, "creation_date": 1482442391, "answer_id": 41291960, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1482442391, "body_markdown": "This is a not a direct answer to this question as so many people have provided workarounds. I don&#39;t think generating a TOC has been officially supported by Github yet to-date. If you want GitHub to render a Table of Contents on their GFM preview pages automatically, please participate the discussion on the official [feature request issue](https://github.com/github/markup/issues/904). "}, {"tags": [], "down_vote_count": 0, "creation_date": 1501184626, "answer_id": 45359722, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1510321654, "last_edit_date": 1510321654, "body_markdown": "Currently it&#39;s [not possible][1] using markdown syntax (see the ongoing [discussion at GitHub][2]), however you can use some external tools such as:\r\n\r\n- Online [Table Of Content Generator][3] ([raychenon/play-table-of-contents][3])\r\n- [arthurhammer/github-toc][4] - browser extension that adds a table of contents to GitHub repos\r\n\r\n\r\n----------\r\n\r\n\r\nAlternatively use `AsciiDoc` instead (e.g. `README.adoc`), e.g.\r\n\r\n    :toc: macro\r\n    :toc-title:\r\n    :toclevels: 99\r\n    # Title\r\n\r\n    ## A\r\n\r\n    ### A2\r\n\r\n    ## B\r\n\r\n    ### B2\r\n\r\nas suggested in this [comment][5]. Check the demo [here][6].\r\n\r\n\r\n  [1]: https://github.com/github/markup/issues/904\r\n  [2]: https://github.com/isaacs/github/issues/215\r\n  [3]: https://github.com/raychenon/play-table-of-contents\r\n  [4]: https://github.com/arthurhammer/github-toc\r\n  [5]: https://github.com/isaacs/github/issues/215#issuecomment-336328746\r\n  [6]: https://github.com/littlebits/react-popover"}, {"tags": [], "down_vote_count": 0, "creation_date": 1511893797, "answer_id": 47538552, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1513693669, "last_edit_date": 1513693669, "body_markdown": "For **Github&#39;s Texteditor [Atom][1]** check out this awesome plugin (or &quot;package&quot; in Atom-lingo), which generates *&quot;TOC (table of contents) of headlines from parsed markdown&quot;* files: \r\n\r\n[markdown-toc][2]\r\n\r\nOnce installed as Atom-package you can use the shortcut **`ctrl-alt-c`** to insert a TOC based on your markdown-doc-structure at the current cursor position...   \r\n\r\n**Screenshots:**\r\n\r\n[![enter image description here][3]][3]\r\n\r\n\r\n**Atom Keybindings**\r\n\r\nmarkdown-toc gives you the following default key-bindings to control the plugin in Atom: \r\n\r\n- `ctrl-alt-c` =&gt; create TOC at cursor position  \r\n- `ctrl-alt-u` =&gt; update TOC   \r\n- `ctrl-alt-r` =&gt; delete TOC \r\n\r\n**Plugin Features** (from the project&#39;s README)\r\n\r\n- Auto linking via  anchor tags, e.g.  `# A 1` \u2192 `#a-1`\r\n- Depth control [1-6] with `depthFrom:1` and `depthTo:6`\r\n- Enable or disable links with `withLinks:1`\r\n- Refresh list on save with `updateOnSave:1`\r\n- Use ordered list (1. ..., 2. ...) with `orderedList:0`\r\n\r\n\r\n  [1]: https://atom.io/\r\n  [2]: https://github.com/nok/markdown-toc\r\n  [3]: https://i.stack.imgur.com/EzTx7.gif"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517836553, "answer_id": 48623465, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1517836553, "body_markdown": "A very convenient way to achieve a table of contents for a mardown file when working with Visual Studio Code is the extension [Markdown-TOC][1].\r\n\r\nIt can add a toc to existing markdown files and even keep the toc up-to-date on saving.\r\n\r\n[![enter image description here][2]][2]\r\n\r\n\r\n  [1]: https://github.com/AlanWalk/Markdown-TOC\r\n  [2]: https://i.stack.imgur.com/mony9.gif"}], "creation_date": 1331822057, "body_markdown": "Is it possible to generate an automatic Table of Contents using [Github Flavoured Markdown][1]?\r\n\r\n  [1]: http://github.github.com/github-flavored-markdown/", "title": "Automatic TOC in github-flavoured-markdown", "view_count": 50967, "up_vote_count": 185, "answer_count": 15, "link": "https://stackoverflow.com/questions/9721944/automatic-toc-in-github-flavoured-markdown", "code_snippet": ["<code>toc</code>", "<code>npm install -g doctoc</code>", "<code>doctoc .</code>", "<code>doctoc</code>", "<code>toc</code>", "<code>* auto-gen TOC:\n{:toc}\n</code>", "<code>^##(#?)(#?)(.*?)$(.|\\r|\\n)*?(?=^##|\\z)\n-\\1\\2 [\\3](#\\3)\\n\n</code>", "<code>-##\n        -\n</code>", "<code>-#\n    -\n</code>", "<code>\\[ *((?:(?![ .:#!\\?;]*\\])[^#])*)[ #:!\\?;]*\\]\n[\\1]\n</code>", "<code>\\]([^ \\r\\n]*) ([^\\r\\n ]*)\n]\\L\\1-\\2\n</code>", "<code>(?:()[-:;!\\?#]+$|(\\]#)-)\n\\1\\2\n</code>", "<code>(\\].*?)(?:\\(|\\))\n\\1\n</code>", "<code>\\](?!\\()(.*?)$\n\\]\\(\\1\\)\n</code>", "<code>:GenTocGFM</code>", "<code>- Installation\n- Usage\n    -- Example\n    -- Example Output\n- Documentation\n    -- Options\n        --- option1\n        --- option2\n    -- API\n- License\n- Contributing\n</code>", "<code>Options.md</code>", "<code>option1.md</code>", "<code>option2.md</code>", "<code>Documentation.md</code>", "<code>Options.md</code>", "<code>API.md</code>", "<code>Usage.md</code>", "<code>Example.md</code>", "<code>Example Output.md</code>", "<code>Readme.md</code>", "<code>Installation.md</code>", "<code>Usage.md</code>", "<code>Documentation.md</code>", "<code>License.md</code>", "<code>Contributing.md</code>", "<code>Back To Top</code>", "<code>~0.4.1</code>", "<code>README.md</code>", "<code>var Gitdown = require('gitdown');\n\nGitdown\n    // Gitdown flavored markdown.\n    .read('.gitdown/README.md')\n    // GitHub compatible markdown.\n    .write('README.md');\n</code>", "<code>npm install -g coryfklein/doctoc\n</code>", "<code>TOC</code>", "<code>h1</code>", "<code>markdown-js</code>", "<code>node.js</code>", "<code>AsciiDoc</code>", "<code>README.adoc</code>", "<code>:toc: macro\n:toc-title:\n:toclevels: 99\n# Title\n\n## A\n\n### A2\n\n## B\n\n### B2\n</code>", "<code>ctrl-alt-c</code>", "<code>ctrl-alt-c</code>", "<code>ctrl-alt-u</code>", "<code>ctrl-alt-r</code>", "<code># A 1</code>", "<code>#a-1</code>", "<code>depthFrom:1</code>", "<code>depthTo:6</code>", "<code>withLinks:1</code>", "<code>updateOnSave:1</code>", "<code>orderedList:0</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "directory-listing"], "creation_date": 1272435016, "body_markdown": "I&#39;m trying to get a list of the names of all the files present in a directory using Node.js.  I want output that is an array of filenames. How can I do this?", "last_edit_date": 1486130803, "up_vote_count": 548, "link": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1272435323, "answer_id": 2727191, "path": "stack.gulp.answer", "score": 687, "up_vote_count": 689, "is_accepted": true, "last_activity_date": 1494638551, "last_edit_date": 1494638551, "body_markdown": "You can use the [`fs.readdir`][1] or [`fs.readdirSync`][2] methods.\r\n\r\n**fs.readdir**\r\n\r\n    const testFolder = &#39;./tests/&#39;;\r\n    const fs = require(&#39;fs&#39;);\r\n\r\n    fs.readdir(testFolder, (err, files) =&gt; {\r\n      files.forEach(file =&gt; {\r\n        console.log(file);\r\n      });\r\n    })\r\n\r\n**fs.readdirSync**\r\n\r\n    const testFolder = &#39;./tests/&#39;;\r\n    const fs = require(&#39;fs&#39;);\r\n\r\n    fs.readdirSync(testFolder).forEach(file =&gt; {\r\n      console.log(file);\r\n    })\r\n\r\nThe difference between the two methods, is that the first one is asynchronous, so you have to provide a callback function that will be executed when the read process ends.\r\n\r\nThe second is synchronous, it will returns the file name array, but it will stop any further execution of your code until the read process ends.\r\n\r\n  [1]: https://nodejs.org/api/fs.html#fs_fs_readdir_path_options_callback\r\n  [2]: https://nodejs.org/api/fs.html#fs_fs_readdirsync_path_options"}, {"tags": [], "down_vote_count": 2, "creation_date": 1303889714, "answer_id": 5800843, "path": "stack.gulp.answer", "score": 158, "up_vote_count": 160, "is_accepted": false, "last_activity_date": 1408627402, "last_edit_date": 1408627402, "body_markdown": "The answer above does not perform a recursive search into the directory though. Here&#39;s what I did for a recursive search (using [node-walk][1]: `npm install walk`)\r\n\r\n    var walk    = require(&#39;walk&#39;);\r\n    var files   = [];\r\n    \r\n    // Walker options\r\n    var walker  = walk.walk(&#39;./test&#39;, { followLinks: false });\r\n    \r\n    walker.on(&#39;file&#39;, function(root, stat, next) {\r\n        // Add this file to the list of files\r\n        files.push(root + &#39;/&#39; + stat.name);\r\n        next();\r\n    });\r\n    \r\n    walker.on(&#39;end&#39;, function() {\r\n        console.log(files);\r\n    });\r\n\r\n\r\n  [1]: https://github.com/coolaj86/node-walk"}, {"tags": [], "down_vote_count": 1, "creation_date": 1386782717, "answer_id": 20525865, "path": "stack.gulp.answer", "score": 70, "up_vote_count": 71, "is_accepted": false, "last_activity_date": 1424428810, "last_edit_date": 1424428810, "body_markdown": "Get files in all subdirs\r\n\r\n    function getFiles (dir, files_){\r\n        files_ = files_ || [];\r\n        var files = fs.readdirSync(dir);\r\n        for (var i in files){\r\n            var name = dir + &#39;/&#39; + files[i];\r\n            if (fs.statSync(name).isDirectory()){\r\n                getFiles(name, files_);\r\n            } else {\r\n                files_.push(name);\r\n            }\r\n        }\r\n        return files_;\r\n    }\r\n\r\n    console.log(getFiles(&#39;path/to/dir&#39;))"}, {"tags": [], "down_vote_count": 0, "creation_date": 1393707446, "answer_id": 22120260, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1393869977, "last_edit_date": 1393869977, "body_markdown": "Here&#39;s an asynchronous recursive version.\r\n\r\n        function ( path, callback){\r\n         // the callback gets ( err, files) where files is an array of file names\r\n         if( typeof callback !== &#39;function&#39; ) return\r\n         var\r\n          result = []\r\n          , files = [ path.replace( /\\/\\s*$/, &#39;&#39; ) ]\r\n         function traverseFiles (){\r\n          if( files.length ) {\r\n           var name = files.shift()\r\n           fs.stat(name, function( err, stats){\r\n            if( err ){\r\n             if( err.errno == 34 ) traverseFiles()\r\n        // in case there&#39;s broken symbolic links or a bad path\r\n        // skip file instead of sending error\r\n             else callback(err)\r\n            }\r\n            else if ( stats.isDirectory() ) fs.readdir( name, function( err, files2 ){\r\n             if( err ) callback(err)\r\n             else {\r\n              files = files2\r\n               .map( function( file ){ return name + &#39;/&#39; + file } )\r\n               .concat( files )\r\n              traverseFiles()\r\n             }\r\n            })\r\n            else{\r\n             result.push(name)\r\n             traverseFiles()\r\n            }\r\n           })\r\n          }\r\n          else callback( null, result )\r\n         }\r\n         traverseFiles()\r\n        }"}, {"tags": [], "down_vote_count": 1, "creation_date": 1396366501, "answer_id": 22790445, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1396366501, "body_markdown": "    function getFilesRecursiveSync(dir, fileList, optionalFilterFunction) {\r\n        if (!fileList) {\r\n            grunt.log.error(&quot;Variable &#39;fileList&#39; is undefined or NULL.&quot;);\r\n            return;\r\n        }\r\n        var files = fs.readdirSync(dir);\r\n        for (var i in files) {\r\n            if (!files.hasOwnProperty(i)) continue;\r\n            var name = dir + &#39;/&#39; + files[i];\r\n            if (fs.statSync(name).isDirectory()) {\r\n                getFilesRecursiveSync(name, fileList, optionalFilterFunction);\r\n            } else {\r\n                if (optionalFilterFunction &amp;&amp; optionalFilterFunction(name) !== true)\r\n                    continue;\r\n                fileList.push(name);\r\n            }\r\n        }\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1402552490, "answer_id": 24177327, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1402552490, "body_markdown": "Just a heads up: if you&#39;re planning to perform operations on each file in a directory, try [vinyl-fs](https://github.com/wearefractal/vinyl-fs) (which is used by [gulp](http://gulpjs.com/), the streaming build system)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1409385477, "answer_id": 25580289, "path": "stack.gulp.answer", "score": 140, "up_vote_count": 140, "is_accepted": false, "last_activity_date": 1409385477, "body_markdown": "IMO the most convinient way to do such tasks is to use a [glob][1] tool. Here&#39;s a [glob package][2] for node.js. Install with\r\n\r\n    npm install glob\r\n\r\nThen use wild card to match filenames (example taken from package&#39;s website)\r\n\r\n    var glob = require(&quot;glob&quot;)\r\n    \r\n    // options is optional\r\n    glob(&quot;**/*.js&quot;, options, function (er, files) {\r\n      // files is an array of filenames.\r\n      // If the `nonull` option is set, and nothing\r\n      // was found, then files is [&quot;**/*.js&quot;]\r\n      // er is an error object or null.\r\n    })\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Glob_(programming)\r\n  [2]: https://github.com/isaacs/node-glob"}, {"tags": [], "down_vote_count": 0, "creation_date": 1422924889, "answer_id": 28289589, "path": "stack.gulp.answer", "score": 48, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1459311174, "last_edit_date": 1459311174, "body_markdown": "Here&#39;s a simple solution using only the native `fs` and `path` modules:\r\n\r\n    // sync version\r\n    function walkSync(currentDirPath, callback) {\r\n        var fs = require(&#39;fs&#39;),\r\n            path = require(&#39;path&#39;);\r\n        fs.readdirSync(currentDirPath).forEach(function (name) {\r\n            var filePath = path.join(currentDirPath, name);\r\n            var stat = fs.statSync(filePath);\r\n            if (stat.isFile()) {\r\n                callback(filePath, stat);\r\n            } else if (stat.isDirectory()) {\r\n                walkSync(filePath, callback);\r\n            }\r\n        });\r\n    }\r\n\r\nor async version (uses `fs.readdir` instead):\r\n\r\n    // async version with basic error handling\r\n    function walk(currentDirPath, callback) {\r\n        var fs = require(&#39;fs&#39;),\r\n\t\t    path = require(&#39;path&#39;);\r\n        fs.readdir(currentDirPath, function (err, files) {\r\n\t\t\tif (err) {\r\n\t\t\t\tthrow new Error(err);\r\n\t\t\t}\r\n\t\t\tfiles.forEach(function (name) {\r\n\t\t\t\tvar filePath = path.join(currentDirPath, name);\r\n\t\t\t\tvar stat = fs.statSync(filePath);\r\n\t\t\t\tif (stat.isFile()) {\r\n\t\t\t\t\tcallback(filePath, stat);\r\n\t\t\t\t} else if (stat.isDirectory()) {\r\n\t\t\t\t\twalk(filePath, callback);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n    }\r\n\r\nThen you just call (for sync version):\r\n\r\n    walkSync(&#39;path/to/root/dir&#39;, function(filePath, stat) {\r\n        // do something with &quot;filePath&quot;...\r\n    });\r\n\r\nor async version:\r\n\r\n    walk(&#39;path/to/root/dir&#39;, function(filePath, stat) {\r\n        // do something with &quot;filePath&quot;...\r\n    });\r\n\r\nThe difference is in how node blocks while performing the IO. Given that the API above is the same, you could just use the async version to ensure maximum performance.\r\n\r\nHowever there is one advantage to using the synchronous version. It is easier to execute some code as soon as the walk is done, as in the next statement after the walk. With the async version, you would need some extra way of knowing when you are done. Perhaps creating a map of all paths first, then enumerating them. For simple build/util scripts (vs high performance web servers) you could use the sync version without causing any damage."}, {"tags": [], "down_vote_count": 0, "creation_date": 1447385495, "answer_id": 33685480, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1452752379, "last_edit_date": 1452752379, "body_markdown": "**Dependencies.**\r\n\r\n    var fs = require(&#39;fs&#39;);\r\n    var path = require(&#39;path&#39;);\r\n\r\n**Definition.**\r\n\r\n    // String -&gt; [String]\r\n    function fileList(dir) {\r\n      return fs.readdirSync(dir).reduce(function(list, file) {\r\n        var name = path.join(dir, file);\r\n        var isDir = fs.statSync(name).isDirectory();\r\n        return list.concat(isDir ? fileList(name) : [name]);\r\n      }, []);\r\n    }\r\n\r\n**Usage.**\r\n\r\n    var DIR = &#39;/usr/local/bin&#39;;\r\n\r\n    // 1. List all files in DIR\r\n    fileList(DIR);\r\n    // =&gt; [&#39;/usr/local/bin/babel&#39;, &#39;/usr/local/bin/bower&#39;, ...]\r\n\r\n    // 2. List all file names in DIR\r\n    fileList(DIR).map((file) =&gt; file.split(path.sep).slice(-1)[0]);\r\n    // =&gt; [&#39;babel&#39;, &#39;bower&#39;, ...]\r\n\r\nPlease note that `fileList` is way too optimistic. For anything serious, add some error handling."}, {"tags": [], "down_vote_count": 0, "creation_date": 1452817736, "answer_id": 34802361, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1452817736, "body_markdown": "Took the general approach of @Hunan-Rostomyan, made it a litle more concise and added `excludeDirs` argument. It&#39;d be trivial to extend with `includeDirs`, just follow same pattern:\r\n\r\n    import * as fs from &#39;fs&#39;;\r\n    import * as path from &#39;path&#39;;\r\n    \r\n    function fileList(dir, excludeDirs?) {\r\n        return fs.readdirSync(dir).reduce(function (list, file) {\r\n            const name = path.join(dir, file);\r\n            if (fs.statSync(name).isDirectory()) {\r\n                if (excludeDirs &amp;&amp; excludeDirs.length) {\r\n                    excludeDirs = excludeDirs.map(d =&gt; path.normalize(d));\r\n                    const idx = name.indexOf(path.sep);\r\n                    const directory = name.slice(0, idx === -1 ? name.length : idx);\r\n                    if (excludeDirs.indexOf(directory) !== -1)\r\n                        return list;\r\n                }\r\n                return list.concat(fileList(name, excludeDirs));\r\n            }\r\n            return list.concat([name]);\r\n        }, []);\r\n    }\r\n\r\nExample usage:\r\n    \r\n    console.log(fileList(&#39;.&#39;, [&#39;node_modules&#39;, &#39;typings&#39;, &#39;bower_components&#39;]));\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1464634122, "answer_id": 37532027, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1464635689, "last_edit_date": 1464635689, "body_markdown": "Using Promises with ES7\r\n====\r\nAsynchronous use with mz/fs\r\n---\r\n\r\nThe [`mz`](https://www.npmjs.com/package/mz) module provides promisified versions of the core node library. Using them is simple. First install the library...\r\n\r\n    npm install mz\r\n\r\nThen...\r\n\r\n    const fs = require(&#39;mz/fs&#39;);\r\n    fs.readdir(&#39;./myDir&#39;).then(listing =&gt; console.log(listing))\r\n      .catch(err =&gt; console.error(err));\r\n\r\nAlternatively you can write them in asynchronous functions in ES7:\r\n\r\n    async function myReaddir () {\r\n      try {\r\n        const file = await fs.readdir(&#39;./myDir/&#39;);\r\n      }\r\n      catch (err) { console.error( err ) }\r\n    };\r\n\r\nUpdate for recursive listing\r\n---\r\nSome of the users have specified a desire to see a recursive listing (though not in the question)... Use [`fs-promise`](https://www.npmjs.com/package/fs-promise). It&#39;s a thin wrapper around [`mz`](https://www.npmjs.com/package/mz).\r\n\r\n    npm install fs-promise;\r\n\r\nthen...\r\n\r\n    const fs = require(&#39;fs-promise&#39;);\r\n    fs.walk(&#39;./myDir&#39;).then(\r\n        listing =&gt; listing.forEach(file =&gt; console.log(file.path))\r\n    ).catch(err =&gt; console.error(err));"}, {"tags": [], "down_vote_count": 0, "creation_date": 1467383128, "answer_id": 38147895, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1467805804, "last_edit_date": 1467805804, "body_markdown": "You don&#39;t say you want to do it recursively so I assume you only need direct children of the directory.\r\n\r\nSample code:\r\n\r\n    const fs = require(&#39;fs&#39;);\r\n    const path = require(&#39;path&#39;);\r\n\r\n    fs.readdirSync(&#39;your-directory-path&#39;)\r\n      .filter((file) =&gt; fs.lstatSync(path.join(folder, file)).isFile());"}, {"tags": [], "down_vote_count": 0, "creation_date": 1473786721, "answer_id": 39475552, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1473786721, "body_markdown": "Load `fs`:\r\n\r\n    const fs = require(&#39;fs&#39;);\r\n\r\nRead files *async*:\r\n\r\n    fs.readdir(&#39;./dir&#39;, function (err, files) {\r\n        // &quot;files&quot; is an Array with files names\r\n    });\r\n\r\nRead files *sync*:\r\n\r\n    var files = fs.readdirSync(&#39;./dir&#39;);"}, {"tags": [], "down_vote_count": 0, "creation_date": 1509162751, "answer_id": 46986064, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1509166242, "last_edit_date": 1509166242, "body_markdown": "I made a node module to automate this task: [mddir][1]\r\n    \r\n# Usage\r\n\r\nnode mddir &quot;../relative/path/&quot;\r\n\r\nTo install: npm install mddir -g\r\n\r\nTo generate markdown for current directory: mddir\r\n\r\nTo generate for any absolute path: mddir /absolute/path\r\n\r\nTo generate for a relative path: mddir ~/Documents/whatever.\r\n\r\nThe md file gets generated in your working directory.\r\n\r\nCurrently ignores node_modules, and .git folders.\r\n\r\n# Troubleshooting\r\n\r\nIf you receive the error &#39;node\\r: No such file or directory&#39;, the issue is that your operating system uses different line endings and mddir can&#39;t parse them without you explicitly setting the line ending style to Unix. This usually affects Windows, but also some versions of Linux. Setting line endings to Unix style has to be performed within the mddir npm global bin folder.\r\n\r\n# Line endings fix\r\n\r\nGet npm bin folder path with:\r\n\r\n```npm config get prefix```\r\n\r\nCd into that folder\r\n\r\nbrew install dos2unix\r\n\r\ndos2unix lib/node_modules/mddir/src/mddir.js\r\n\r\nThis converts line endings to Unix instead of Dos\r\n\r\nThen run as normal with: node mddir &quot;../relative/path/&quot;.\r\n\r\n\r\n### Example generated markdown file structure &#39;directoryList.md&#39;\r\n    \r\n        |-- .bowerrc\r\n        |-- .jshintrc\r\n        |-- .jshintrc2\r\n        |-- Gruntfile.js\r\n        |-- README.md\r\n        |-- bower.json\r\n        |-- karma.conf.js\r\n        |-- package.json\r\n        |-- app\r\n            |-- app.js\r\n            |-- db.js\r\n            |-- directoryList.md\r\n            |-- index.html\r\n            |-- mddir.js\r\n            |-- routing.js\r\n            |-- server.js\r\n            |-- _api\r\n                |-- api.groups.js\r\n                |-- api.posts.js\r\n                |-- api.users.js\r\n                |-- api.widgets.js\r\n            |-- _components\r\n                |-- directives\r\n                    |-- directives.module.js\r\n                    |-- vendor\r\n                        |-- directive.draganddrop.js\r\n                |-- helpers\r\n                    |-- helpers.module.js\r\n                    |-- proprietary\r\n                        |-- factory.actionDispatcher.js\r\n                |-- services\r\n                    |-- services.cardTemplates.js\r\n                    |-- services.cards.js\r\n                    |-- services.groups.js\r\n                    |-- services.posts.js\r\n                    |-- services.users.js\r\n                    |-- services.widgets.js\r\n            |-- _mocks\r\n                |-- mocks.groups.js\r\n                |-- mocks.posts.js\r\n                |-- mocks.users.js\r\n                |-- mocks.widgets.js\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/mddir"}, {"tags": [], "down_vote_count": 0, "creation_date": 1519224347, "answer_id": 48908767, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1519225545, "last_edit_date": 1519225545, "body_markdown": "Get `sorted` filenames. You can filter results based on a specific `extension` such as `&#39;.txt&#39;`, `&#39;.jpg&#39;` and so on.\r\n\r\n\r\n    import * as fs from &#39;fs&#39;;\r\n    import * as Path from &#39;path&#39;;\r\n\r\n    function getFilenames(path, extension) {\r\n        return fs\r\n            .readdirSync(path)\r\n            .filter(\r\n                item =&gt;\r\n                    fs.statSync(Path.join(path, item)).isFile() &amp;&amp;\r\n                    (extension === undefined || Path.extname(item) === extension)\r\n            )\r\n            .sort();\r\n    }"}], "title": "How do you get a list of the names of all files present in a directory in Node.js?", "view_count": 478972, "answer_count": 15, "code_snippet": ["<code>fs.readdir</code>", "<code>ls /tmp/*core*</code>", "<code>readdir-recursive</code>", "<code>fs.readdir</code>", "<code>fs.readdirSync</code>", "<code>const testFolder = './tests/';\nconst fs = require('fs');\n\nfs.readdir(testFolder, (err, files) =&gt; {\n  files.forEach(file =&gt; {\n    console.log(file);\n  });\n})\n</code>", "<code>const testFolder = './tests/';\nconst fs = require('fs');\n\nfs.readdirSync(testFolder).forEach(file =&gt; {\n  console.log(file);\n})\n</code>", "<code>readdir</code>", "<code>fs.stat(path, callback(err, stats))</code>", "<code>stats.isDirectory()</code>", "<code>ls</code>", "<code>dir /b/s</code>", "<code>npm install walk</code>", "<code>var walk    = require('walk');\nvar files   = [];\n\n// Walker options\nvar walker  = walk.walk('./test', { followLinks: false });\n\nwalker.on('file', function(root, stat, next) {\n    // Add this file to the list of files\n    files.push(root + '/' + stat.name);\n    next();\n});\n\nwalker.on('end', function() {\n    console.log(files);\n});\n</code>", "<code>.git</code>", "<code>npm install glob\n</code>", "<code>var glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n</code>", "<code>cwd</code>", "<code>glob</code>", "<code>console.log</code>", "<code>glob()</code>", "<code>glob.sync(pattern, [options])</code>", "<code>function getFiles (dir, files_){\n    files_ = files_ || [];\n    var files = fs.readdirSync(dir);\n    for (var i in files){\n        var name = dir + '/' + files[i];\n        if (fs.statSync(name).isDirectory()){\n            getFiles(name, files_);\n        } else {\n            files_.push(name);\n        }\n    }\n    return files_;\n}\n\nconsole.log(getFiles('path/to/dir'))\n</code>", "<code>if (typeof files_ === 'undefined') files_=[];</code>", "<code>var files_ = files_ || [];</code>", "<code>files_ = files_ || [];</code>", "<code>var fs = require('fs');</code>", "<code>getFiles</code>", "<code>fs</code>", "<code>path</code>", "<code>// sync version\nfunction walkSync(currentDirPath, callback) {\n    var fs = require('fs'),\n        path = require('path');\n    fs.readdirSync(currentDirPath).forEach(function (name) {\n        var filePath = path.join(currentDirPath, name);\n        var stat = fs.statSync(filePath);\n        if (stat.isFile()) {\n            callback(filePath, stat);\n        } else if (stat.isDirectory()) {\n            walkSync(filePath, callback);\n        }\n    });\n}\n</code>", "<code>fs.readdir</code>", "<code>// async version with basic error handling\nfunction walk(currentDirPath, callback) {\n    var fs = require('fs'),\n        path = require('path');\n    fs.readdir(currentDirPath, function (err, files) {\n        if (err) {\n            throw new Error(err);\n        }\n        files.forEach(function (name) {\n            var filePath = path.join(currentDirPath, name);\n            var stat = fs.statSync(filePath);\n            if (stat.isFile()) {\n                callback(filePath, stat);\n            } else if (stat.isDirectory()) {\n                walk(filePath, callback);\n            }\n        });\n    });\n}\n</code>", "<code>walkSync('path/to/root/dir', function(filePath, stat) {\n    // do something with \"filePath\"...\n});\n</code>", "<code>walk('path/to/root/dir', function(filePath, stat) {\n    // do something with \"filePath\"...\n});\n</code>", "<code>walkSync</code>", "<code>walk(filePath, callback);</code>", "<code>walkSync(filePath, callback);</code>", "<code>mz</code>", "<code>npm install mz\n</code>", "<code>const fs = require('mz/fs');\nfs.readdir('./myDir').then(listing =&gt; console.log(listing))\n  .catch(err =&gt; console.error(err));\n</code>", "<code>async function myReaddir () {\n  try {\n    const file = await fs.readdir('./myDir/');\n  }\n  catch (err) { console.error( err ) }\n};\n</code>", "<code>fs-promise</code>", "<code>mz</code>", "<code>npm install fs-promise;\n</code>", "<code>const fs = require('fs-promise');\nfs.walk('./myDir').then(\n    listing =&gt; listing.forEach(file =&gt; console.log(file.path))\n).catch(err =&gt; console.error(err));\n</code>", "<code>var fs = require('fs');\nvar path = require('path');\n</code>", "<code>// String -&gt; [String]\nfunction fileList(dir) {\n  return fs.readdirSync(dir).reduce(function(list, file) {\n    var name = path.join(dir, file);\n    var isDir = fs.statSync(name).isDirectory();\n    return list.concat(isDir ? fileList(name) : [name]);\n  }, []);\n}\n</code>", "<code>var DIR = '/usr/local/bin';\n\n// 1. List all files in DIR\nfileList(DIR);\n// =&gt; ['/usr/local/bin/babel', '/usr/local/bin/bower', ...]\n\n// 2. List all file names in DIR\nfileList(DIR).map((file) =&gt; file.split(path.sep).slice(-1)[0]);\n// =&gt; ['babel', 'bower', ...]\n</code>", "<code>fileList</code>", "<code>excludeDirs</code>", "<code>const fs = require('fs');\nconst path = require('path');\n\nfs.readdirSync('your-directory-path')\n  .filter((file) =&gt; fs.lstatSync(path.join(folder, file)).isFile());\n</code>", "<code>fs</code>", "<code>const fs = require('fs');\n</code>", "<code>fs.readdir('./dir', function (err, files) {\n    // \"files\" is an Array with files names\n});\n</code>", "<code>var files = fs.readdirSync('./dir');\n</code>", "<code>    function ( path, callback){\n     // the callback gets ( err, files) where files is an array of file names\n     if( typeof callback !== 'function' ) return\n     var\n      result = []\n      , files = [ path.replace( /\\/\\s*$/, '' ) ]\n     function traverseFiles (){\n      if( files.length ) {\n       var name = files.shift()\n       fs.stat(name, function( err, stats){\n        if( err ){\n         if( err.errno == 34 ) traverseFiles()\n    // in case there's broken symbolic links or a bad path\n    // skip file instead of sending error\n         else callback(err)\n        }\n        else if ( stats.isDirectory() ) fs.readdir( name, function( err, files2 ){\n         if( err ) callback(err)\n         else {\n          files = files2\n           .map( function( file ){ return name + '/' + file } )\n           .concat( files )\n          traverseFiles()\n         }\n        })\n        else{\n         result.push(name)\n         traverseFiles()\n        }\n       })\n      }\n      else callback( null, result )\n     }\n     traverseFiles()\n    }\n</code>", "<code>excludeDirs</code>", "<code>includeDirs</code>", "<code>import * as fs from 'fs';\nimport * as path from 'path';\n\nfunction fileList(dir, excludeDirs?) {\n    return fs.readdirSync(dir).reduce(function (list, file) {\n        const name = path.join(dir, file);\n        if (fs.statSync(name).isDirectory()) {\n            if (excludeDirs &amp;&amp; excludeDirs.length) {\n                excludeDirs = excludeDirs.map(d =&gt; path.normalize(d));\n                const idx = name.indexOf(path.sep);\n                const directory = name.slice(0, idx === -1 ? name.length : idx);\n                if (excludeDirs.indexOf(directory) !== -1)\n                    return list;\n            }\n            return list.concat(fileList(name, excludeDirs));\n        }\n        return list.concat([name]);\n    }, []);\n}\n</code>", "<code>console.log(fileList('.', ['node_modules', 'typings', 'bower_components']));\n</code>", "<code>npm config get prefix</code>", "<code>    |-- .bowerrc\n    |-- .jshintrc\n    |-- .jshintrc2\n    |-- Gruntfile.js\n    |-- README.md\n    |-- bower.json\n    |-- karma.conf.js\n    |-- package.json\n    |-- app\n        |-- app.js\n        |-- db.js\n        |-- directoryList.md\n        |-- index.html\n        |-- mddir.js\n        |-- routing.js\n        |-- server.js\n        |-- _api\n            |-- api.groups.js\n            |-- api.posts.js\n            |-- api.users.js\n            |-- api.widgets.js\n        |-- _components\n            |-- directives\n                |-- directives.module.js\n                |-- vendor\n                    |-- directive.draganddrop.js\n            |-- helpers\n                |-- helpers.module.js\n                |-- proprietary\n                    |-- factory.actionDispatcher.js\n            |-- services\n                |-- services.cardTemplates.js\n                |-- services.cards.js\n                |-- services.groups.js\n                |-- services.posts.js\n                |-- services.users.js\n                |-- services.widgets.js\n        |-- _mocks\n            |-- mocks.groups.js\n            |-- mocks.posts.js\n            |-- mocks.users.js\n            |-- mocks.widgets.js\n</code>", "<code>sorted</code>", "<code>extension</code>", "<code>'.txt'</code>", "<code>'.jpg'</code>", "<code>import * as fs from 'fs';\nimport * as Path from 'path';\n\nfunction getFilenames(path, extension) {\n    return fs\n        .readdirSync(path)\n        .filter(\n            item =&gt;\n                fs.statSync(Path.join(path, item)).isFile() &amp;&amp;\n                (extension === undefined || Path.extname(item) === extension)\n        )\n        .sort();\n}\n</code>", "<code>function getFilesRecursiveSync(dir, fileList, optionalFilterFunction) {\n    if (!fileList) {\n        grunt.log.error(\"Variable 'fileList' is undefined or NULL.\");\n        return;\n    }\n    var files = fs.readdirSync(dir);\n    for (var i in files) {\n        if (!files.hasOwnProperty(i)) continue;\n        var name = dir + '/' + files[i];\n        if (fs.statSync(name).isDirectory()) {\n            getFilesRecursiveSync(name, fileList, optionalFilterFunction);\n        } else {\n            if (optionalFilterFunction &amp;&amp; optionalFilterFunction(name) !== true)\n                continue;\n            fileList.push(name);\n        }\n    }\n}\n</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "twitter-bootstrap", "npm", "node-modules"], "creation_date": 1418508729, "body_markdown": "I have a question concerning best practice for including node_modules into a HTML website. Imagine I have Bootstrap inside my node_modules folder. Now for the distribution version of the website (the live version) how would I include the Bootstrap script and CSS files located inside the node_modules folder? Does it make sense to leave Bootstrap inside that folder and do something like `&lt;script src=&quot;./node_modules/bootstrap/dist/bootstrap.min.js&quot;&gt;&lt;/script&gt;`? Or would I have to add rules to my gulp file which then copy those files into my dist folder? Or would it be best to let gulp somehow completely remove the local bootstrap from my HTML file and replace it with the CDN version?", "last_edit_date": 1435645679, "up_vote_count": 177, "link": "https://stackoverflow.com/questions/27464168/how-to-include-scripts-located-inside-the-node-modules-folder", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1418509393, "answer_id": 27464258, "path": "stack.gulp.answer", "score": 190, "up_vote_count": 192, "is_accepted": true, "last_activity_date": 1463523123, "last_edit_date": 1463523123, "body_markdown": "Usually, you don&#39;t want to expose any of your internal paths for how your server is structured to the outside world.    What you can is make a `/scripts` static route in your server that fetches its files from whatever directory they happen to reside in.  So, if your files are in `&quot;./node_modules/bootstrap/dist/&quot;`.  Then, the script tag in your pages just looks like this:\r\n\r\n    &lt;script src=&quot;/scripts/bootstrap.min.js&quot;&gt;&lt;/script&gt;\r\n\r\nIf you were using express with nodejs, a static route is as simple as this:\r\n\r\n    app.use(&#39;/scripts&#39;, express.static(__dirname + &#39;/node_modules/bootstrap/dist/&#39;));\r\n\r\nThen, any browser requests from `/scripts/xxx.js` will automatically be fetched from your `dist` directory.\r\n\r\nNote: Newer versions of NPM put more things at the top level, not nested so deep so if you are using a newer version of NPM, then the path names will be different than indicated in the OP&#39;s question and in the current answer. But, the concept is still the same.  You find out where the files are physically located on your server drive and you make an `app.use()` with `express.static()` to make a pseudo-path to those files so you aren&#39;t exposing the actual server file system organization to the client.\r\n\r\n-----------\r\n\r\nIf you don&#39;t want to make a static route like this, then you&#39;re probably better off just copying the public scripts to a path that your web server does treat as `/scripts` or whatever top level designation you want to use.  Usually, you can make this copying part of your build/deployment process.\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1429177872, "answer_id": 29671147, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1434740194, "last_edit_date": 1434740194, "body_markdown": "I would use the path npm module and then do something like this:\r\n\r\n    var path = require(&#39;path&#39;);\r\n    app.use(&#39;/scripts&#39;, express.static(path.join(__dirname, &#39;node_modules/bootstrap/dist&#39;)));\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1445936210, "answer_id": 33363503, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1458287481, "last_edit_date": 1458287481, "body_markdown": "The directory &#39;node_modules&#39; may not be in current directory, so you should resolve the path dynamically.\r\n\r\n    var bootstrap_dir = require.resolve(&#39;bootstrap&#39;)\r\n                               .match(/.*\\/node_modules\\/[^/]+\\//)[0];\r\n    app.use(&#39;/scripts&#39;, express.static(bootstrap_dir + &#39;dist/&#39;));\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1461652887, "answer_id": 36857128, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1461652887, "body_markdown": "I did the below changes to AUTO-INCLUDE the files in the index html. So that when you add a file in the folder it will automatically be picked up from the folder, without you having to include the file in index.html\r\n\r\n    //// THIS WORKS FOR ME \r\n    ///// in app.js or server.js\r\n\r\n    var app = express();\r\n    \r\n    app.use(&quot;/&quot;, express.static(__dirname));\r\n    var fs = require(&quot;fs&quot;),\r\n\r\n    function getFiles (dir, files_){\r\n        files_ = files_ || [];\r\n        var files = fs.readdirSync(dir);\r\n        for (var i in files){\r\n            var name = dir + &#39;/&#39; + files[i];\r\n            if (fs.statSync(name).isDirectory()){\r\n                getFiles(name, files_);\r\n            } else {\r\n                files_.push(name);\r\n            }\r\n        }\r\n        return files_;\r\n    }\r\n    //// send the files in js folder as variable/array \r\n    ejs = require(&#39;ejs&#39;);\r\n\r\n    res.render(&#39;index&#39;, {\r\n        &#39;something&#39;:&#39;something&#39;...........\r\n        jsfiles: jsfiles,\r\n    });\r\n\r\n    ///--------------------------------------------------\r\n\r\n    ///////// in views/index.ejs --- the below code will list the files in index.ejs\r\n\r\n    &lt;% for(var i=0; i &lt; jsfiles.length; i++) { %&gt;\r\n       &lt;script src=&quot;&lt;%= jsfiles[i] %&gt;&quot;&gt;&lt;/script&gt;\r\n    &lt;% } %&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1463158300, "answer_id": 37215448, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1463158300, "body_markdown": "As mentioned by jfriend00 you should not expose your server structure. You could copy your project dependency files to something like `public/scripts`. You can do this **very easily** with [dep-linker][1] like this:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var DepLinker = require(&#39;dep-linker&#39;);\r\n    DepLinker.copyDependenciesTo(&#39;./public/scripts&#39;)\r\n    // Done\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/dep-linker"}, {"tags": [], "down_vote_count": 0, "creation_date": 1465720908, "answer_id": 37772281, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1465721221, "last_edit_date": 1465721221, "body_markdown": "I want to update this question with an easier solution. Create a symbolic link to node_modules.\r\n\r\nThe easiest way to grant public access to node_modules is to create a symbolic link pointing to your node_modules from within your public directory. The symlink will make it as if the files exist wherever the link is created.\r\n\r\nFor example, if the node server has code for serving static files\r\n\r\n    app.use(serveStatic(path.join(__dirname, &#39;dist&#39;)));\r\n\r\nand __dirname refers to /path/to/app so that your static files are served from /path/to/app/dist\r\n\r\nand node_modules is at /path/to/app/node_modules, then create a symlink like this on mac/linux:\r\n\r\n    ln -s /path/to/app/node_modules /path/to/app/dist/node_modules\r\n\r\nor like this on windows:\r\n\r\n    mklink /path/to/app/node_modules /path/to/app/dist/node_modules\r\n\r\nNow a get request for:\r\n\r\n    node_modules/some/path \r\n\r\nwill receive a response with the file at \r\n\r\n    /path/to/app/dist/node_modules/some/path \r\n\r\nwhich is really the file at \r\n\r\n    /path/to/app/node_modules/some/path\r\n\r\nIf your directory at /path/to/app/dist is not a safe location, perhaps because of interference from a build process with gulp or grunt, then you could add a separate directory for the link and add a new serveStatic call such as:\r\n\r\n    ln -s /path/to/app/node_modules /path/to/app/newDirectoryName/node_modules\r\n\r\nand in node add:\r\n\r\n    app.use(serveStatic(path.join(__dirname, &#39;newDirectoryName&#39;)));\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1481747627, "answer_id": 41151669, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1481747627, "body_markdown": "In my Angular 2 app, I have this in my Index.html file:\r\n\r\n    &lt;script src=&quot;node_modules/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;node_modules/bootstrap/dist/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\r\n\r\nHere is the complete file:\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html&gt;\r\n    &lt;head&gt;\r\n        &lt;base href=&quot;/&quot; /&gt;\r\n        &lt;title&gt;TripMate - PPS&lt;/title&gt;\r\n        &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n        &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;\r\n        &lt;link rel=&quot;stylesheet&quot; href=&quot;node_modules/bootstrap/dist/css/bootstrap.min.css&quot; /&gt;\r\n    \r\n        &lt;!-- Polyfill(s) for older browsers --&gt;\r\n        &lt;script src=&quot;node_modules/core-js/client/shim.min.js&quot;&gt;&lt;/script&gt;\r\n    \r\n        &lt;script src=&quot;node_modules/zone.js/dist/zone.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/reflect-metadata/Reflect.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/systemjs/dist/system.src.js&quot;&gt;&lt;/script&gt;\r\n        \r\n        &lt;script src=&quot;node_modules/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/bootstrap/dist/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\r\n    \r\n        &lt;script src=&quot;systemjs.config.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script&gt;\r\n            System.import(&#39;app&#39;).catch(function(err) { console.error(err); });\r\n        &lt;/script&gt;\r\n    &lt;/head&gt;\r\n    \r\n      &lt;body&gt;\r\n        &lt;my-app&gt;Loading...&lt;/my-app&gt;\r\n      &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1498930848, "answer_id": 44863764, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1498930848, "body_markdown": "I didn&#39;t find any clean solutions (I don&#39;t want to expose the source of all my node_modules) so I just wrote a Powershell script to copy them:\r\n\r\n    $deps = &quot;leaflet&quot;, &quot;leaflet-search&quot;, &quot;material-components-web&quot;\r\n    \r\n    foreach ($dep in $deps) {\r\n    \tCopy-Item &quot;node_modules/$dep/dist&quot; &quot;static/$dep&quot; -Recurse\r\n    }"}], "title": "How to include scripts located inside the node_modules folder?", "view_count": 100384, "answer_count": 8, "code_snippet": ["<code>&lt;script src=\"./node_modules/bootstrap/dist/bootstrap.min.js\"&gt;&lt;/script&gt;</code>", "<code>/scripts</code>", "<code>\"./node_modules/bootstrap/dist/\"</code>", "<code>&lt;script src=\"/scripts/bootstrap.min.js\"&gt;&lt;/script&gt;\n</code>", "<code>app.use('/scripts', express.static(__dirname + '/node_modules/bootstrap/dist/'));\n</code>", "<code>/scripts/xxx.js</code>", "<code>dist</code>", "<code>app.use()</code>", "<code>express.static()</code>", "<code>/scripts</code>", "<code>/scripts</code>", "<code>Foo</code>", "<code>node_modules</code>", "<code>node_modules</code>", "<code>Foo</code>", "<code>dist</code>", "<code>Foo</code>", "<code>node_modules</code>", "<code>Foo</code>", "<code>node_modules</code>", "<code>BigVideo.js</code>", "<code>lib</code>", "<code>CSS</code>", "<code>node_modules</code>", "<code>vendor</code>", "<code>var path = require('path');\napp.use('/scripts', express.static(path.join(__dirname, 'node_modules/bootstrap/dist')));\n</code>", "<code>public/scripts</code>", "<code>var DepLinker = require('dep-linker');\nDepLinker.copyDependenciesTo('./public/scripts')\n// Done\n</code>", "<code>src</code>", "<code>/scripts/[package-name]/dist/file.min.js</code>", "<code>var bootstrap_dir = require.resolve('bootstrap')\n                           .match(/.*\\/node_modules\\/[^/]+\\//)[0];\napp.use('/scripts', express.static(bootstrap_dir + 'dist/'));\n</code>", "<code>app.use(serveStatic(path.join(__dirname, 'dist')));\n</code>", "<code>ln -s /path/to/app/node_modules /path/to/app/dist/node_modules\n</code>", "<code>mklink /path/to/app/node_modules /path/to/app/dist/node_modules\n</code>", "<code>node_modules/some/path \n</code>", "<code>/path/to/app/dist/node_modules/some/path \n</code>", "<code>/path/to/app/node_modules/some/path\n</code>", "<code>ln -s /path/to/app/node_modules /path/to/app/newDirectoryName/node_modules\n</code>", "<code>app.use(serveStatic(path.join(__dirname, 'newDirectoryName')));\n</code>", "<code>$deps = \"leaflet\", \"leaflet-search\", \"material-components-web\"\n\nforeach ($dep in $deps) {\n    Copy-Item \"node_modules/$dep/dist\" \"static/$dep\" -Recurse\n}\n</code>", "<code>//// THIS WORKS FOR ME \n///// in app.js or server.js\n\nvar app = express();\n\napp.use(\"/\", express.static(__dirname));\nvar fs = require(\"fs\"),\n\nfunction getFiles (dir, files_){\n    files_ = files_ || [];\n    var files = fs.readdirSync(dir);\n    for (var i in files){\n        var name = dir + '/' + files[i];\n        if (fs.statSync(name).isDirectory()){\n            getFiles(name, files_);\n        } else {\n            files_.push(name);\n        }\n    }\n    return files_;\n}\n//// send the files in js folder as variable/array \nejs = require('ejs');\n\nres.render('index', {\n    'something':'something'...........\n    jsfiles: jsfiles,\n});\n\n///--------------------------------------------------\n\n///////// in views/index.ejs --- the below code will list the files in index.ejs\n\n&lt;% for(var i=0; i &lt; jsfiles.length; i++) { %&gt;\n   &lt;script src=\"&lt;%= jsfiles[i] %&gt;\"&gt;&lt;/script&gt;\n&lt;% } %&gt;\n</code>", "<code>&lt;script src=\"node_modules/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"node_modules/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n</code>", "<code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;base href=\"/\" /&gt;\n    &lt;title&gt;TripMate - PPS&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\" /&gt;\n\n    &lt;!-- Polyfill(s) for older browsers --&gt;\n    &lt;script src=\"node_modules/core-js/client/shim.min.js\"&gt;&lt;/script&gt;\n\n    &lt;script src=\"node_modules/zone.js/dist/zone.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/reflect-metadata/Reflect.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/systemjs/dist/system.src.js\"&gt;&lt;/script&gt;\n\n    &lt;script src=\"node_modules/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/bootstrap/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n\n    &lt;script src=\"systemjs.config.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        System.import('app').catch(function(err) { console.error(err); });\n    &lt;/script&gt;\n&lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;my-app&gt;Loading...&lt;/my-app&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code>"], "path": "stack.gulp"}, {"tags": ["node.js"], "creation_date": 1300208143, "body_markdown": "How do I delete a file with node.js?\r\n\r\nhttp://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback\r\n\r\nI don&#39;t see a remove command?", "last_edit_date": 1361541067, "up_vote_count": 385, "link": "https://stackoverflow.com/questions/5315138/node-js-remove-file", "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1300208283, "answer_id": 5315175, "path": "stack.gulp.answer", "score": 538, "up_vote_count": 539, "is_accepted": true, "last_activity_date": 1439308686, "last_edit_date": 1439308686, "body_markdown": "I think you want to use [`fs.unlink`][1].\r\n\r\nMore info on `fs` can be found [here][2].\r\n\r\n  [1]: https://nodejs.org/api/fs.html#fs_fs_unlink_path_callback\r\n  [2]: https://nodejs.org/api/fs.html#fs_file_system\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1407465777, "answer_id": 25195330, "path": "stack.gulp.answer", "score": 135, "up_vote_count": 135, "is_accepted": false, "last_activity_date": 1477143715, "last_edit_date": 1477143715, "body_markdown": "You can call `fs.unlink(path, callback)` for Asynchronous unlink(2) or `fs.unlinkSync(path)` for Synchronous unlink(2).  \r\nWhere `path` is file-path which you want to remove.   \r\n\r\nFor example we want to remove `discovery.docx` file from `c:/book` directory. So my file-path is `c:/book/discovery.docx`. So code for removing that file will be,   \r\n\r\n    var fs = require(&#39;fs&#39;);\r\n    var filePath = &#39;c:/book/discovery.docx&#39;; \r\n    fs.unlinkSync(filePath);\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1456145105, "answer_id": 35554062, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1456914211, "last_edit_date": 1456914211, "body_markdown": "Here is a small snippet of I made for this purpose,\r\n\r\n    var fs = require(&#39;fs&#39;);\r\n    var gutil = require(&#39;gulp-util&#39;);\r\n\r\n    fs.exists(&#39;./www/index.html&#39;, function(exists) {\r\n      if(exists) {\r\n        //Show in green\r\n        console.log(gutil.colors.green(&#39;File exists. Deleting now ...&#39;));\r\n        fs.unlink(&#39;./www/index.html&#39;);\r\n      } else {\r\n        //Show in red\r\n        console.log(gutil.colors.red(&#39;File not found, so not deleting.&#39;));\r\n      }\r\n    });\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1460613808, "answer_id": 36614925, "path": "stack.gulp.answer", "score": 42, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1500962772, "last_edit_date": 1500962772, "body_markdown": "If you want to check file before delete whether it exist or not. So, use [fs.stat][1] or [fs.statSync][1] (**Synchronous**) instead of `fs.exists`. Because according to the latest node.js [documentation][2], `fs.exists` now **deprecated**.\r\n\r\nFor example:-\r\n\r\n     \r\n\r\n     fs.stat(&#39;./server/upload/my.csv&#39;, function (err, stats) {\r\n       console.log(stats);//here we got all information of file in stats variable\r\n\r\n       if (err) {\r\n           return console.error(err);\r\n       }\r\n\r\n       fs.unlink(&#39;./server/upload/my.csv&#39;,function(err){\r\n       \t\tif(err) return console.log(err);\r\n       \t\tconsole.log(&#39;file deleted successfully&#39;);\r\n       });  \r\n    });\r\n\r\n\r\n  [1]: https://nodejs.org/api/fs.html#fs_fs_stat_path_callback\r\n  [2]: https://nodejs.org/api/fs.html#fs_fs_exists_path_callback"}, {"tags": [], "down_vote_count": 2, "creation_date": 1482400449, "answer_id": 41280278, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1500366496, "last_edit_date": 1500366496, "body_markdown": "Here the code where you can delete file/image from folder. \r\n\r\n    var fs = require(&#39;fs&#39;); \r\n    Gallery.findById({ _id: req.params.id},function(err,data){ \r\n        if (err) throw err;\r\n        fs.unlink(&#39;public/gallery/&#39;+data.image_name);\r\n     });"}, {"tags": [], "down_vote_count": 0, "creation_date": 1487591495, "answer_id": 42343832, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1500960861, "last_edit_date": 1500960861, "body_markdown": "I think you don&#39;t have to check if file exists or not, `fs.unlink` will check it for you.\r\n\r\n    fs.unlink(&#39;fileToBeRemoved&#39;, function(err) {\r\n        if(err &amp;&amp; err.code == &#39;ENOENT&#39;) {\r\n            // file doens&#39;t exist\r\n            console.info(&quot;File doesn&#39;t exist, won&#39;t remove it.&quot;);\r\n        } else if (err) {\r\n            // other errors, e.g. maybe we don&#39;t have enough permission\r\n            console.error(&quot;Error occurred while trying to remove file&quot;);\r\n        } else {\r\n            console.info(`removed`);\r\n        }\r\n    });"}, {"tags": [], "down_vote_count": 1, "creation_date": 1490147527, "answer_id": 42941330, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1490147527, "body_markdown": "As the accepted answer, use `fs.unlink` to delete files.\r\n\r\nBut according to [Node.js documentation][1]\r\n\r\n&gt;Using `fs.stat()` to check for the existence of a file before calling `fs.open()`, `fs.readFile()` or `fs.writeFile()` is not recommended. Instead, user code should open/read/write the file directly and handle the error raised if the file is not available.\r\n\r\n&gt;To check if a file exists without manipulating it afterwards, `fs.access()` is recommended.\r\n\r\nto check files can be deleted or not, Use `fs.access` instead\r\n\r\n    fs.access(&#39;/etc/passwd&#39;, fs.constants.R_OK | fs.constants.W_OK, (err) =&gt; {\r\n      console.log(err ? &#39;no access!&#39; : &#39;can read/write&#39;);\r\n    });\r\n\r\n\r\n  [1]: https://nodejs.org/api/fs.html#fs_fs_stat_path_callback"}, {"tags": [], "down_vote_count": 0, "creation_date": 1492758626, "answer_id": 43536150, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1492758626, "body_markdown": "you can use [del][1] module to remove one or more files in the current directory. what&#39;s nice about it is that protects you against deleting the current working directory and above.\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/del\r\n\r\n    const del = require(&#39;del&#39;);\r\n    del([&#39;&lt;your pathere here&gt;/*&#39;]).then( (paths: any) =&gt; {\r\n       console.log(&#39;Deleted files and folders:\\n&#39;, paths.join(&#39;\\n&#39;));\r\n    });\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1519255492, "answer_id": 48917197, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1519255492, "body_markdown": "Use [NPM module fs-extra][1], which gives you everything in fs, plus everything is Promisified.  As a bonus, there&#39;s a [fs.remove() method][2] available.\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/fs-extra\r\n  [2]: https://github.com/jprichardson/node-fs-extra/blob/master/docs/remove.md"}], "title": "node.js remove file", "view_count": 290163, "answer_count": 9, "code_snippet": ["<code>fs.unlink</code>", "<code>fs</code>", "<code>delete</code>", "<code>rmFile</code>", "<code>rm</code>", "<code>rmdir</code>", "<code>fs.unlinkSync()</code>", "<code>fs.unlink(path, callback)</code>", "<code>fs.unlinkSync(path)</code>", "<code>path</code>", "<code>discovery.docx</code>", "<code>c:/book</code>", "<code>c:/book/discovery.docx</code>", "<code>var fs = require('fs');\nvar filePath = 'c:/book/discovery.docx'; \nfs.unlinkSync(filePath);\n</code>", "<code>fs.exists</code>", "<code>fs.exists</code>", "<code> fs.stat('./server/upload/my.csv', function (err, stats) {\n   console.log(stats);//here we got all information of file in stats variable\n\n   if (err) {\n       return console.error(err);\n   }\n\n   fs.unlink('./server/upload/my.csv',function(err){\n        if(err) return console.log(err);\n        console.log('file deleted successfully');\n   });  \n});\n</code>", "<code>fs.unlink</code>", "<code>ENOENT</code>", "<code>fs.unlink</code>", "<code>unlink</code>", "<code>var fs = require('fs');\nvar gutil = require('gulp-util');\n\nfs.exists('./www/index.html', function(exists) {\n  if(exists) {\n    //Show in green\n    console.log(gutil.colors.green('File exists. Deleting now ...'));\n    fs.unlink('./www/index.html');\n  } else {\n    //Show in red\n    console.log(gutil.colors.red('File not found, so not deleting.'));\n  }\n});\n</code>", "<code>fs.exists</code>", "<code>fs.unlink</code>", "<code>unlink</code>", "<code>ENOENT</code>", "<code>fs.unlink</code>", "<code>fs.unlink('fileToBeRemoved', function(err) {\n    if(err &amp;&amp; err.code == 'ENOENT') {\n        // file doens't exist\n        console.info(\"File doesn't exist, won't remove it.\");\n    } else if (err) {\n        // other errors, e.g. maybe we don't have enough permission\n        console.error(\"Error occurred while trying to remove file\");\n    } else {\n        console.info(`removed`);\n    }\n});\n</code>", "<code>fs.unlink</code>", "<code>fs.stat()</code>", "<code>fs.open()</code>", "<code>fs.readFile()</code>", "<code>fs.writeFile()</code>", "<code>fs.access()</code>", "<code>fs.access</code>", "<code>fs.access('/etc/passwd', fs.constants.R_OK | fs.constants.W_OK, (err) =&gt; {\n  console.log(err ? 'no access!' : 'can read/write');\n});\n</code>", "<code>const del = require('del');\ndel(['&lt;your pathere here&gt;/*']).then( (paths: any) =&gt; {\n   console.log('Deleted files and folders:\\n', paths.join('\\n'));\n});\n</code>", "<code>var fs = require('fs'); \nGallery.findById({ _id: req.params.id},function(err,data){ \n    if (err) throw err;\n    fs.unlink('public/gallery/'+data.image_name);\n });\n</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "sass", "gulp"], "creation_date": 1423482616, "body_markdown": "I would like to use google web starter kit. I installed node.js v0.12.0, `node-sass` &amp; `gulp`.\r\n\r\nAnd then ran:\r\n\r\n    $ sudo npm install\r\n\r\nWhen I typed `gulp serve` then got this error:\r\n\r\n    Using gulpfile ~/web-starter-kit/gulpfile.js Starting &#39;styles&#39;... &#39;styles&#39; errored after 93 ms \r\n    Error: `libsass` bindings not found. Try reinstalling `node-sass`? at getBinding\r\n\r\nI reinstalled node and gulp but this doesn&#39;t help.\r\n\r\nWhat should I do next?", "last_edit_date": 1427295360, "up_vote_count": 248, "link": "https://stackoverflow.com/questions/28409100/try-reinstalling-node-sass-on-node-0-12", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1424881614, "answer_id": 28724282, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1424992261, "last_edit_date": 1424992261, "body_markdown": "Downgrading Node to 0.10.36 should do it per this thread on the node-sass github page: https://github.com/sass/node-sass/issues/490#issuecomment-70388754\r\n\r\nIf you have NVM you can just: \r\n\r\n    nvm install 0.10\r\n\r\nIf you don&#39;t, you can find NVM and instructions here: https://www.npmjs.com/package/nvm"}, {"tags": [], "down_vote_count": 5, "creation_date": 1426023656, "answer_id": 28974608, "path": "stack.gulp.answer", "score": 233, "up_vote_count": 238, "is_accepted": false, "last_activity_date": 1426023656, "body_markdown": "I ran into this error using node `0.12.0` and it was fixed by deleting the existing `/node_modules` directory and running `npm update`."}, {"tags": [], "down_vote_count": 1, "creation_date": 1426804397, "answer_id": 29156211, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1429612261, "last_edit_date": 1429612261, "body_markdown": "I had the same issue:\r\n\r\n - installing node-sass\r\n - being told at the end of installation that the installation completed successfully\r\n - then being asked to re-install node-sass.\r\n\r\nThe solution is to **install node-sass version 2** which supports current versions of node. See https://github.com/sass/node-sass/issues/490#issuecomment-70388754\r\n\r\nRun:\r\n\r\n    npm install node-sass@2\r\n\r\nThen re-test:\r\n\r\n    $ npm ls node-sass\r\n    myapp@0.0.0 /var/www/myapp\r\n    \u2514\u2500\u2500 node-sass@2.0.1\r\n\r\n    $ gulp sass\r\n    [09:48:42] Using gulpfile /var/www/myapp/gulpfile.js\r\n    [09:48:42] Starting &#39;sass&#39;...\r\n    [09:48:42] Finished &#39;sass&#39; after 15 ms"}, {"tags": [], "down_vote_count": 0, "creation_date": 1430506333, "answer_id": 29993193, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1430506333, "body_markdown": "you may also want to ```npm remove gulp-sass``` and re-install gulp-sass if you&#39;ve switched node versions."}, {"tags": [], "down_vote_count": 5, "creation_date": 1430885607, "answer_id": 30067395, "path": "stack.gulp.answer", "score": 331, "up_vote_count": 336, "is_accepted": false, "last_activity_date": 1434290736, "last_edit_date": 1434290736, "body_markdown": "I found this useful command:\r\n\r\n    npm rebuild node-sass\r\n\r\n\r\nFrom the `rebuild` [documentation](https://docs.npmjs.com/cli/rebuild):\r\n\r\n&gt; This is useful when you install a new version of node (or switch node\r\n&gt; versions), and must recompile all your C++ addons with the new node.js\r\n&gt; binary.\r\n\r\nhttp://laravel.io/forum/10-29-2014-laravel-elixir-sass-error"}, {"tags": [], "down_vote_count": 0, "creation_date": 1430921790, "answer_id": 30079399, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1430921790, "body_markdown": "If you use Gulp then try:\r\n\r\n`npm install gulp-sass`\r\n\r\nI had the same problem and the `gulp-sass` package was the problem."}, {"tags": [], "down_vote_count": 0, "creation_date": 1438711849, "answer_id": 31816317, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1438711849, "body_markdown": "For me, this issue was caused in my build system (Travis CI) by doing something kind of dumb in my `.travis.yml` file. In effect, I was calling `npm install` *before* `nvm use 0.12`, and this was causing `node-sass` to be built for `0.10` instead of `0.12`. My solution was simply moving `nvm use` out of the `.travis.yml` file\u2019s `before_script` section to before the `npm install` command, which was in the `before_install` section.\r\n\r\nIn your case, it is likely that whatever process you are starting with `gulp` is using a different version of `node` (than what you would expect)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1441840791, "answer_id": 32490619, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1441840791, "body_markdown": "This answer is a bit orthogonal to the the OP, but --\r\n\r\nlibsass bindings don&#39;t install properly with the node-sass wrapper on Node v4.0.0. I got the same error message as in the question (`Error: &#39;libsass&#39; bindings not found. Try reinstalling &#39;node-sass&#39;)` but I ended up uninstalling Node v4.0.0 and installing v0.12.7 using nvm, via this script:\r\n\r\nhttps://gist.github.com/brock/5b1b70590e1171c4ab54\r\n\r\nand now libsass and node-sass are behaving properly."}, {"tags": [], "down_vote_count": 1, "creation_date": 1442341512, "answer_id": 32593065, "path": "stack.gulp.answer", "score": 82, "up_vote_count": 83, "is_accepted": false, "last_activity_date": 1444954617, "last_edit_date": 1444954617, "body_markdown": "`npm rebuild node-sass` was giving me errors (Ubuntu) and `npm install gulp-sass` didn&#39;t make the error go away.\r\n\r\nSaw a solution on GitHub which worked for me:\r\n\r\n`npm uninstall --save-dev gulp-sass`\r\n\r\n`npm install --save-dev gulp-sass`\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1442652890, "answer_id": 32666240, "path": "stack.gulp.answer", "score": 385, "up_vote_count": 388, "is_accepted": false, "last_activity_date": 1442652890, "body_markdown": "If your node version is 4 and you are using gulp-sass, then try\r\n\r\n    npm uninstall --save-dev gulp-sass\r\n\r\n    npm install --save-dev gulp-sass@2"}, {"tags": [], "down_vote_count": 1, "creation_date": 1447344345, "answer_id": 33675923, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1447344345, "body_markdown": "I have same issue when gulp-sass version is 1.3.0, and fix it after upgrading to 2.1.0."}, {"tags": [], "down_vote_count": 0, "creation_date": 1447704185, "answer_id": 33743626, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1447704185, "body_markdown": "I had the same issue as @Kos had, only for some reason I had to modify the gulp-sass package from the old `package.json` file I had. It then installed the dependencies currently and now it finally works!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1453227022, "answer_id": 34884024, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1453227022, "body_markdown": "If you came here because you upgraded nodejs systemwide &amp; suddenly your emberjs ^1.13 app is failing with this message, make sure you&#39;re not using an outdated version of `ember-cli-sass`. You&#39;ll need to `rm -rf node_modules bower_components dist tmp` within the Ember app, then update your `package.json` with the appropriate `ember-cli-sass` version, and finally `npm install --save-dev`. This fixed it for me, without having to rebuild or change any other dependencies."}, {"tags": [], "down_vote_count": 0, "creation_date": 1458138539, "answer_id": 36038605, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1458138539, "body_markdown": "My issue was that I was on a machine with `node version 0.12.2`, but that had an old `1.x.x` version of `npm`. Be sure to update your version of npm: `sudo npm install -g npm` Once that is done, remove any existing `node-sass` and reinstall it via npm."}, {"tags": [], "down_vote_count": 0, "creation_date": 1458743115, "answer_id": 36180873, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1466192993, "last_edit_date": 1466192993, "body_markdown": "I removed all the `/node_modules` folder then ran `npm install` and it worked.\r\n\r\nI have node v5.5.0, npm 3.3.12"}, {"tags": [], "down_vote_count": 0, "creation_date": 1477720881, "answer_id": 40316514, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1477720881, "body_markdown": "i had the same problem today at work.\r\n\r\n`npm rebuild node-sass`\r\n\r\ndone the job for me"}, {"tags": [], "down_vote_count": 0, "creation_date": 1478631613, "answer_id": 40494511, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1478631613, "body_markdown": "You need to use the right version. Try:\r\n\r\n    nvm use 0.12"}], "title": "Try reinstalling `node-sass` on node 0.12?", "view_count": 150318, "answer_count": 17, "code_snippet": ["<code>node-sass</code>", "<code>gulp</code>", "<code>$ sudo npm install\n</code>", "<code>gulp serve</code>", "<code>Using gulpfile ~/web-starter-kit/gulpfile.js Starting 'styles'... 'styles' errored after 93 ms \nError: `libsass` bindings not found. Try reinstalling `node-sass`? at getBinding\n</code>", "<code>npm uninstall --save-dev gulp-sass\n\nnpm install --save-dev gulp-sass@2\n</code>", "<code>npm rebuild node-sass\n</code>", "<code>rebuild</code>", "<code>Python not supported by</code>", "<code>Failed at the node-sass@0.8.6 install script 'node build.js'</code>", "<code>Error: Cannot find module 'node_modules/node-sass/node_modules/pangyp/bin/node-gyp'</code>", "<code>0.12.0</code>", "<code>/node_modules</code>", "<code>npm update</code>", "<code>npm rebuild node-sass</code>", "<code>npm rebuild node-sass</code>", "<code>npm install gulp-sass</code>", "<code>npm uninstall --save-dev gulp-sass</code>", "<code>npm install --save-dev gulp-sass</code>", "<code>npm install node-sass@2\n</code>", "<code>$ npm ls node-sass\nmyapp@0.0.0 /var/www/myapp\n\u2514\u2500\u2500 node-sass@2.0.1\n\n$ gulp sass\n[09:48:42] Using gulpfile /var/www/myapp/gulpfile.js\n[09:48:42] Starting 'sass'...\n[09:48:42] Finished 'sass' after 15 ms\n</code>", "<code>npm install gulp-sass</code>", "<code>gulp-sass</code>", "<code>npm install grunt-sass</code>", "<code>nvm install 0.10\n</code>", "<code>npm rebuild node-sass</code>", "<code>Error: 'libsass' bindings not found. Try reinstalling 'node-sass')</code>", "<code>npm remove gulp-sass</code>", "<code>ember-cli-sass</code>", "<code>rm -rf node_modules bower_components dist tmp</code>", "<code>package.json</code>", "<code>ember-cli-sass</code>", "<code>npm install --save-dev</code>", "<code>/node_modules</code>", "<code>npm install</code>", "<code>.travis.yml</code>", "<code>npm install</code>", "<code>nvm use 0.12</code>", "<code>node-sass</code>", "<code>0.10</code>", "<code>0.12</code>", "<code>nvm use</code>", "<code>.travis.yml</code>", "<code>before_script</code>", "<code>npm install</code>", "<code>before_install</code>", "<code>gulp</code>", "<code>node</code>", "<code>package.json</code>", "<code>node version 0.12.2</code>", "<code>1.x.x</code>", "<code>npm</code>", "<code>sudo npm install -g npm</code>", "<code>node-sass</code>", "<code>nvm use 0.12\n</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "macos", "environment-variables"], "creation_date": 1328721798, "body_markdown": "For use in express.js environments. Any suggestions?\r\n", "last_edit_date": 1506242313, "up_vote_count": 205, "link": "https://stackoverflow.com/questions/9198310/how-to-set-node-env-to-production-development-in-os-x", "_childDocuments_": [{"tags": [], "down_vote_count": 4, "creation_date": 1328757705, "answer_id": 9204973, "path": "stack.gulp.answer", "score": 423, "up_vote_count": 427, "is_accepted": true, "last_activity_date": 1422353085, "last_edit_date": 1422353085, "body_markdown": "Before running your app, you can do this in console,\r\n\r\n    export NODE_ENV=production\r\n\r\nOr if you are in windows you could try this:\r\n\r\n    SET NODE_ENV=production\r\n\r\nor you can run your app like this:\r\n\r\n    NODE_ENV=production node app.js\r\n\r\nYou can also set it in your js file:\r\n\r\n    process.env.NODE_ENV = &#39;production&#39;;\r\n\r\nBut I don&#39;t suggest to do it in your runtime file, since it&#39;s not easy to open up VIM in your server and change it to production. You can make a config.json file in your directory and everytime your app runs, it reads from it and sets the configuration."}, {"tags": [], "down_vote_count": 0, "creation_date": 1362860790, "answer_id": 15315530, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1362860790, "body_markdown": "This is a good article about NODE_ENV: http://www.hacksparrow.com/running-express-js-in-production-mode.html.\r\n\r\nFor automatically setting from Grunt you can use https://npmjs.org/package/grunt-env plugin."}, {"tags": [], "down_vote_count": 3, "creation_date": 1394372691, "answer_id": 22282953, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1394372691, "body_markdown": "    heroku config:set NODE_ENV=&quot;production&quot;\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1416169640, "answer_id": 26961684, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1416169640, "body_markdown": "Daniel has a fantastic answer which is the better approach for the correct deployment (set and forget) process.\r\n\r\nFor those using express. \r\nYou can use grunt-express-server which is fantastic as well.\r\nhttps://www.npmjs.org/package/grunt-express-server"}, {"tags": [], "down_vote_count": 1, "creation_date": 1435560354, "answer_id": 31109350, "path": "stack.gulp.answer", "score": 66, "up_vote_count": 67, "is_accepted": false, "last_activity_date": 1435560354, "body_markdown": " in package.json:\r\n\r\n    {\r\n      ...\r\n      &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;NODE_ENV=production node ./app&quot;\r\n      }\r\n      ...\r\n    }\r\n\r\nthen run in terminal:\r\n\r\n    npm start\r\n\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1453905894, "answer_id": 35040401, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 38, "is_accepted": false, "last_activity_date": 1477401969, "last_edit_date": 1477401969, "body_markdown": "**`export NODE_ENV=production` is bad solution, it disappears after restart.** \r\n\r\nif you want not to worry about that variable anymore - add it to this file:\r\n\r\n    /etc/environment\r\n\r\ndon&#39;t use export syntax, just write (in new line if some content is already there):\r\n\r\n    NODE_ENV=production\r\n\r\nit works after restart. You will not have to re-enter *export NODE_ENV=production* command anymore anywhere and just use node with anything you&#39;d like - forever, pm2...\r\n\r\n\r\n**For heroku:**\r\n\r\n    heroku config:set NODE_ENV=&quot;production&quot;\r\n\r\nwhich is actually default.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1455703915, "answer_id": 35453645, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1455703915, "body_markdown": "If you are on windows. Open your cmd at right folder then first\r\n\r\n    set node_env={your env name here}\r\n\r\nhit enter then you can start your node with\r\n\r\n    node app.js\r\n\r\nit will start with your env setting"}, {"tags": [], "down_vote_count": 0, "creation_date": 1466113198, "answer_id": 37869780, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1466113198, "body_markdown": "No one mentioned `.env` in here yet? Make a `.env` file in your app root, then `require(&#39;dotenv&#39;).config()` and read the values. Easily changed, easily read, cross platform.\r\n\r\nhttps://www.npmjs.com/package/dotenv"}, {"tags": [], "down_vote_count": 0, "creation_date": 1486309222, "answer_id": 42053911, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1486309222, "body_markdown": "On OSX I&#39;d recommend adding `export NODE_ENV=development` to your `~/.bash_profile` and/or `~/.bashrc` and/or `~/.profile`.\r\n\r\nPersonally I add that entry to my `~/.bashrc` and then have the `~/.bash_profile` `~/.profile` import the contents of that file, so it&#39;s consistent across environments.\r\n\r\nAfter making these additions, be sure to restart your terminal to pick up settings."}, {"tags": [], "down_vote_count": 0, "creation_date": 1490625434, "answer_id": 43049378, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1517636954, "last_edit_date": 1517636954, "body_markdown": "For Windows Powershell use this command\r\n\r\n    $env:NODE_ENV=&quot;productions&quot; ; node app.js"}, {"tags": [], "down_vote_count": 0, "creation_date": 1509152880, "answer_id": 46985317, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1509152880, "body_markdown": "If you using **webpack** in your application, you can simply set it there, using `DefinePlugin`...\r\n\r\nSo in your `plugin` section, set the **NODE_ENV** to `production`:\r\n\r\n    plugins: [\r\n      new webpack.DefinePlugin({\r\n        &#39;process.env.NODE_ENV&#39;: &#39;&quot;production&quot;&#39;,\r\n      })\r\n    ]"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517555482, "answer_id": 48577464, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1517555482, "body_markdown": "To not have to worry whether you are running your scripts on Windows, Mac or Linux install the cross-env package. Then you can use your scripts easily, like so:\r\n\r\n    &quot;scripts&quot;: {\r\n        &quot;start-dev&quot;: &quot;cross-env NODE_ENV=development nodemon --exec babel-node -- src/index.js&quot;,\r\n        &quot;start-prod&quot;: &quot;cross-env NODE_ENV=production nodemon --exec babel-node -- src/index.js&quot;\r\n    }\r\nMassive props to the developers of this package."}], "title": "How to set NODE_ENV to production/development in OS X", "view_count": 247203, "answer_count": 12, "code_snippet": ["<code>export NODE_ENV=production\n</code>", "<code>SET NODE_ENV=production\n</code>", "<code>NODE_ENV=production node app.js\n</code>", "<code>process.env.NODE_ENV = 'production';\n</code>", "<code>process.env.NODE_ENV</code>", "<code>NODE_ENV</code>", "<code>NODE_ENV=production node app.js</code>", "<code>NODE_ENV</code>", "<code>development</code>", "<code>cross-env NODE_ENV=production</code>", "<code>NODE_ENV=production forever app.js</code>", "<code>{\n  ...\n  \"scripts\": {\n    \"start\": \"NODE_ENV=production node ./app\"\n  }\n  ...\n}\n</code>", "<code>npm start\n</code>", "<code>NODE_ENV=production</code>", "<code>npm start</code>", "<code>export NODE_ENV=production</code>", "<code>/etc/environment\n</code>", "<code>NODE_ENV=production\n</code>", "<code>heroku config:set NODE_ENV=\"production\"\n</code>", "<code>NODE_ENV=production gulp bundle-production-app</code>", "<code>/etc/environment</code>", "<code>export NODE_ENV=production</code>", "<code>.env</code>", "<code>.env</code>", "<code>require('dotenv').config()</code>", "<code>heroku config:set NODE_ENV=\"production\"\n</code>", "<code>NODE_ENV=production</code>", "<code>export NODE_ENV=development</code>", "<code>~/.bash_profile</code>", "<code>~/.bashrc</code>", "<code>~/.profile</code>", "<code>~/.bashrc</code>", "<code>~/.bash_profile</code>", "<code>~/.profile</code>", "<code>$env:NODE_ENV=\"productions\" ; node app.js\n</code>", "<code>DefinePlugin</code>", "<code>plugin</code>", "<code>production</code>", "<code>plugins: [\n  new webpack.DefinePlugin({\n    'process.env.NODE_ENV': '\"production\"',\n  })\n]\n</code>", "<code>\"scripts\": {\n    \"start-dev\": \"cross-env NODE_ENV=development nodemon --exec babel-node -- src/index.js\",\n    \"start-prod\": \"cross-env NODE_ENV=production nodemon --exec babel-node -- src/index.js\"\n}\n</code>", "<code>set node_env={your env name here}\n</code>", "<code>node app.js\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "jslint", "jshint"], "creation_date": 1311455089, "body_markdown": "I am currently validating my JavaScript against JSLint and making progress on, it&#39;s assisting me to write better JavaScript - in particular in working with the Jquery library.\r\n\r\nI have now come across **JSHint**, a fork of **JSLint**.  \r\nSo I am wondering for web applications, which are very much JavaScript was driven, which is the better or most applicable validation tool to work against:  \r\n\r\n- JSLint or JSHint?  \r\n\r\nI want to decide now on a validation mechanism and moving forward, use this for client side validation.\r\n\r\nAnd Difference between jshint and jslint? Please explain in single javascript example.\r\n\r\nLinks:\r\n\r\n 1. **jshint**-    http://www.jshint.com/\r\n   \r\n 2. **jslint**-    http://jslint.com/\r\n\r\n", "last_edit_date": 1482319816, "up_vote_count": 432, "link": "https://stackoverflow.com/questions/6803305/should-i-use-jslint-or-jshint-javascript-validation", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1311455262, "answer_id": 6803316, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1311455262, "body_markdown": "I&#39;d make a third suggestion, [Google Closure Compiler][1] (and also the [Closure Linter][2]).  You can try it out online [here][3].\r\n\r\n&gt; The Closure Compiler is a tool for making JavaScript download and run faster. It is a true compiler for JavaScript. Instead of compiling from a source language to machine code, it compiles from JavaScript to better JavaScript. It parses your JavaScript, analyzes it, removes dead code and rewrites and minimizes what&#39;s left. It also checks syntax, variable references, and types, and warns about common JavaScript pitfalls.\r\n\r\n\r\n  [1]: http://code.google.com/closure/compiler/\r\n  [2]: http://code.google.com/closure/utilities/\r\n  [3]: http://closure-compiler.appspot.com/home"}, {"tags": [], "down_vote_count": 64, "creation_date": 1311458433, "answer_id": 6803574, "path": "stack.gulp.answer", "score": 140, "up_vote_count": 204, "is_accepted": true, "last_activity_date": 1428603530, "last_edit_date": 1428603530, "body_markdown": "**[EDIT]**&lt;br&gt;\r\nThis answer has been edited. I&#39;m leaving the original answer below for context (otherwise the comments wouldn&#39;t make sense).\r\n\r\nWhen this question was originally asked, JSLint was the main linting tool for JavaScript. JSHint was a new fork of JSLint, but had not yet diverged much from the original.\r\n\r\nSince then, JSLint has remained pretty much static, while JSHint has changed a great deal - it has thrown away many of JSLint&#39;s more antagonistic rules, has added a whole load of new rules, and has generally become more flexible. Also, another tool ESLint is now available, which is even more flexible and has more rule options.\r\n\r\nIn my original answer, I said that you should not force yourself to stick to JSLint&#39;s rules; as long as you understood why it was throwing a warning, you could make a judgement for yourself about whether to change the code to resolve the warning or not.\r\n\r\nWith the ultra-strict ruleset of JSLint from 2011, this was reasonable advice -- I&#39;ve seen very few JavaScript codesets that could pass a JSLint test. However with the more pragmatic rules available in today&#39;s JSHint and ESLint tools, it is a much more realistic proposition to try to get your code passing through them with zero warnings.\r\n\r\nThere may still occasionally be cases where a linter will complain about something that you&#39;ve done intentionally -- for example, you know that you should always use `===` but just this one time you have a good reason to use `==`. But even then, with ESLint you have the option to specify `eslint-disable` around the line in question so you can still have a passing lint test with zero warnings, with the rest of your code obeying the rule. (just don&#39;t do that kind of thing too often!)\r\n\r\n-------------------------\r\n**[ORIGINAL ANSWER FOLLOWS]**\r\n\r\n&lt;strike&gt;By all means use JSLint. But don&#39;t get hung up on the results and on fixing everything that it warns about. It will help you improve your code, and it will help you find potential bugs, but not everything that JSLint complains about turns out to be a real problem, so don&#39;t feel like you have to complete the process with zero warnings.\r\n\r\nPretty much any Javascript code with any significant length or complexity will produce warnings in JSLint, no matter how well written it is. If you don&#39;t believe me, try running some popular libraries like JQuery through it.\r\n\r\nSome JSLint warnings are more valuable than others: learn which ones to watch out for, and which ones are less important. Every warning should be considered, but don&#39;t feel obliged to fix your code to clear any given warning; it&#39;s perfectly okay to look at the code and decide you&#39;re happy with it; there are times when things that JSlint doesn&#39;t like are actually the right thing to do.&lt;/strike&gt;\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1338006968, "answer_id": 10763615, "path": "stack.gulp.answer", "score": 366, "up_vote_count": 367, "is_accepted": false, "last_activity_date": 1414446055, "last_edit_date": 1495542377, "body_markdown": "*tl;dr takeaway*: \r\n\r\nIf you&#39;re looking for a very high standard for yourself or team, JSLint. But its not necessarily THE standard, just A standard, some of which comes to us dogmatically from a javascript god named Doug Crockford. If you want to be a bit more flexible, or have some old pros on your team that don&#39;t buy into JSLint&#39;s opinions, or are going back and forth between JS and other C-family languages on a regular basis, try JSHint.\r\n\r\n*long version*:\r\n\r\nThe reasoning behind the fork explains pretty well why JSHint exists: \r\n\r\nhttp://badassjs.com/post/3364925033/jshint-an-community-driven-fork-of-jslint [http://anton.kovalyov.net/2011/02/20/why-i-forked-jslint-to-jshint/](https://web.archive.org/web/20130819215629/http://anton.kovalyov.net/2011/02/20/why-i-forked-jslint-to-jshint/)\r\n\r\nSo I guess the idea is that it&#39;s &quot;community-driven&quot; rather than Crockford-driven. In practicality, JSHint is generally a bit more lenient (or at least configurable or agnostic) on a few stylistic and minor syntactical &quot;opinions&quot; that JSLint is a stickler on. \r\n\r\nAs an example, if you think both the A and B below are fine, or if you want to write code with one or more of the aspects of A that aren&#39;t available in B, JSHint is for you. If you think B is the only correct option... JSLint. I&#39;m sure there are other differences, but this highlights a few.  \r\n\r\n*A) Passes JSHint out of the box - fails JSLint*\r\n    \r\n    (function() {\r\n      &quot;use strict&quot;;\r\n      var x=0, y=2;\r\n      function add(val1, val2){\r\n        return val1 + val2;\r\n      }\r\n      var z;\r\n      for (var i=0; i&lt;2; i++){\r\n        z = add(y, x+i);\r\n      }\r\n    })();\r\n\r\n*B) Passes Both JSHint and JSLint*\r\n\r\n    (function () {\r\n        &quot;use strict&quot;;\r\n        var x = 0, y = 2, i, z;\r\n        function add(val1, val2) {\r\n           return val1 + val2;\r\n        }\r\n        for (i = 0; i &lt; 2; i += 1) {\r\n            z = add(y, x + i);\r\n        }\r\n    }());\r\n\r\nPersonally I find JSLint code very nice to look at, and the only hard features of it that I disagree with are its [hatred of more than one var declaration in a function and of for-loop `var i = 0` declarations][1], and some of the whitespace enforcements for function declarations. \r\n\r\nA few of the whitespace things that JSLint enforces, I find to be not necessarily bad, but out of sync with some pretty standard whitespace conventions for other languages in the family (C, Java, Python, etc...), which are often followed as conventions in Javascript as well. Since I&#39;m writing in various of these languages throughout the day, and working with team members who don&#39;t like Lint-style whitespace in our code, I find JSHint to be a good balance.  It catches stuff that&#39;s a legitimate bug or really bad form, but doesn&#39;t bark at me like JSLint does (sometimes, in ways I can&#39;t disable) for the stylistic opinions or syntactic nitpicks that I don&#39;t care for.  \r\n\r\nA lot of good libraries aren&#39;t Lint&#39;able, which to me demonstrates that there&#39;s some truth to the idea that some of JSLint is simply just about pushing 1 version of &quot;good code&quot; (which is, indeed, good code).  But then again, the same libraries (or other good ones) probably aren&#39;t Hint&#39;able either, so, touch&#233;.\r\n\r\n  [1]: https://stackoverflow.com/questions/4646455/jslint-error-move-all-var-declarations-to-the-top-of-the-function"}, {"tags": [], "down_vote_count": 1, "creation_date": 1410958932, "answer_id": 25891320, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1410958932, "body_markdown": "Well, Instead of doing manual lint settings we can include all the lint settings at the top of our JS file itself e.g.\r\n\r\nDeclare all the global var in that file like: &lt;br&gt;\r\n\r\n    /*global require,dojo,dojoConfig,alert */\r\n\r\nDeclare all the lint settings like: &lt;br&gt;\r\n\r\n    /*jslint browser:true,sloppy:true,nomen:true,unparam:true,plusplus:true,indent:4 */\r\n\r\nHope this will help you :)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1419259516, "answer_id": 27604933, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1419259516, "body_markdown": "I had the same question a couple of weeks ago and was evaluating both JSLint and JSHint.\r\n\r\nContrary to the answers in this question, my conclusion was not:\r\n\r\n&gt; By all means use JSLint.\r\n\r\nOr:\r\n\r\n&gt; If you&#39;re looking for a very high standard for yourself or team, JSLint.\r\n\r\nAs you can configure *almost* the same rules in JSHint as in JSLint. So I would argue that there&#39;s not much difference in the rules you could achieve.\r\n\r\nSo the reasons to choose one over another are more political than technical.\r\n\r\nWe&#39;ve finally decided to go with JSHint because of the following reasons:\r\n\r\n* Seems to be more configurable that JSLint.\r\n* Looks definitely more community-driven rather than one-man-show (no matter how cool *The Man* is).\r\n* JSHint matched our code style OOTB better that JSLint."}, {"tags": [], "down_vote_count": 0, "creation_date": 1419315638, "answer_id": 27615089, "path": "stack.gulp.answer", "score": 51, "up_vote_count": 51, "is_accepted": false, "last_activity_date": 1442929593, "last_edit_date": 1442929593, "body_markdown": "There is an another *mature and actively developed* &quot;player&quot; on the javascript linting front - [`ESLint`][1]:\r\n\r\n&gt; ESLint is a tool for identifying and reporting on patterns found in\r\n&gt; ECMAScript/JavaScript code. In many ways, it is similar to JSLint and\r\n&gt; JSHint with a few exceptions:\r\n&gt; \r\n&gt; * ESLint uses Esprima for JavaScript parsing.  \r\n&gt; * ESLint uses an AST to evaluate patterns in code. \r\n&gt; * ESLint is completely pluggable, every\r\n&gt; single rule is a plugin and you can add more at runtime.\r\n\r\nWhat really matters here is that it is **extendable via custom plugins/rules**. There are already multiple plugins written for different purposes. Among [others][2], there are:\r\n\r\n * [eslint-plugin-angular][3] (enforces some of the guidelines from [John Papa&#39;s Angular Style Guide][4])\r\n * [eslint-plugin-jasmine][5]\r\n * [eslint-plugin-backbone][6]\r\n\r\nAnd, of course, you can use your build tool of choice to run `ESLint`:\r\n\r\n * [grunt-eslint][7]\r\n * [gulp-eslint][8]\r\n\r\n\r\n  [1]: http://eslint.org\r\n  [2]: https://www.npmjs.com/search?q=eslint%20plugin\r\n  [3]: https://www.npmjs.com/package/eslint-plugin-angular\r\n  [4]: https://github.com/johnpapa/angular-styleguide\r\n  [5]: https://www.npmjs.com/package/eslint-plugin-jasmine\r\n  [6]: https://www.npmjs.com/packages/eslint-plugin-backbone\r\n  [7]: https://www.npmjs.com/package/grunt-eslint\r\n  [8]: https://www.npmjs.com/package/gulp-eslint"}, {"tags": [], "down_vote_count": 0, "creation_date": 1440518313, "answer_id": 32208698, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1440518313, "body_markdown": "There is also an another actively developed alternative - [JSCS \u2014 JavaScript Code Style][1]:\r\n\r\n&gt; JSCS is a code style linter for programmatically enforcing your style\r\n&gt; guide. You can configure JSCS for your project in detail using over\r\n&gt; 150 validation rules, including presets from popular style guides like\r\n&gt; jQuery, Airbnb, Google, and more.\r\n\r\nIt comes with multiple [presets][2] that you can choose from by simply specifying the `preset` in the `.jscsrc` configuration file and customize it - override, enable or disable any rules:\r\n\r\n    {\r\n        &quot;preset&quot;: &quot;jquery&quot;,\r\n        &quot;requireCurlyBraces&quot;: null\r\n    }\r\n\r\nThere are also plugins and extensions built for popular editors.\r\n\r\n\r\nAlso see:\r\n\r\n * [Perfect code, zero effort][3]\r\n\r\n\r\n  [1]: http://jscs.info/\r\n  [2]: http://jscs.info/overview.html\r\n  [3]: http://glebbahmutov.com/blog/perfect-code-zero-effort/"}, {"tags": [], "down_vote_count": 3, "creation_date": 1453573426, "answer_id": 34967075, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1492368510, "last_edit_date": 1492368510, "body_markdown": "Foreword: Well, that escalated quickly. But decided to pull it through. May this answer be helpful to you and other readers.\r\n\r\n[![I got a bit carried away here][1]][1]\r\n\r\n# Code Hinting\r\n\r\nWhile JSLint and JSHint are good tools to use, over the years I&#39;ve come to appreciate what my friend [@ugly_syntax][2] calls:\r\n\r\n&gt; **smaller design space**.\r\n\r\nThis is a general principle, much like a &quot;zen monk&quot;, limiting the choices one has to make, one can be more productive and creative.\r\n\r\nTherefore my current favourite zero-config JS code style:\r\n\r\n&gt; [StandardJS][3].\r\n\r\n**UPDATE**:\r\n\r\n[Flow](https://flow.org/) has improved a lot. With it, you\r\ncan add types to your JS with will help you prevent a lot\r\nof bugs. But it can also stay out of your way, for instance\r\nwhen interfacing untyped JS. Give it a try!\r\n\r\n### Quickstart / TL;DR\r\n\r\nAdd `standard` as a dependency to you project\r\n\r\n    npm install --save standard\r\n\r\nThen in `package.json`, add the following test script:\r\n    \r\n    &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;node_modules/.bin/standard &amp;&amp; echo put further tests here&quot;\r\n    },\r\n\r\nFor snazzier output while developing, [`npm install --global snazzy`][6] and run it instead of `npm test`.\r\n\r\n### Note: Type checking versus Heuristics\r\n\r\nMy friend when mentioning design space referred to [Elm][7] and I encourage you to give that language a try.\r\n\r\nWhy? JS is in fact inspired by LISP, which is a special class of languages, which happens to be *untyped*. Language such as Elm or [Purescript][8] are *typed* functional programming languages.\r\n\r\nType restrict your freedom in order for the compiler to be able to check and guide you when you end up violation the language or your own program&#39;s rules; regardless of the size (LOC) of your program.\r\n\r\nWe recently had a junior colleague implement a reactive interface twice: once in Elm, once in React; have a look to get some idea of what I&#39;m talking about.\r\n\r\n&gt; Compare [`Main.elm`][9] (typed) \u21d4 [`index.js`][10] (untyped, no tests)\r\n\r\n(ps. note that the React code is not idiomatic and could be improved)\r\n\r\n### One final remark,\r\n\r\nthe reality is that JS *is* untyped. Who am I to suggest *typed programming* to you?\r\n\r\nSee, with JS we are in a different domain: freed from types, we can easily express things that are hard or impossible to give a proper type (which can certainly be an advantage).\r\n\r\nBut without types there is little to keep our programs in check, so we are forced to introduce tests and (to a lesser extend) code styles.\r\n\r\nI recommend you look at LISP (e.g. [ClojureScript][11]) for inspiration and invest in testing your codes. Read [The way of the substack][12] to get an idea.\r\n\r\n\r\nPeace.\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/bkQjL.gif\r\n  [2]: https://twitter.com/ugly_syntax\r\n  [3]: http://standardjs.com/rules.html\r\n  [4]: http://devcenter.wercker.com/quickstarts/building/javascript.html\r\n  [5]: https://docs.travis-ci.com/user/languages/javascript-with-nodejs#Default-Test-Script\r\n  [6]: https://github.com/feross/snazzy\r\n  [7]: http://elm-lang.org\r\n  [8]: http://www.purescript.org/\r\n  [9]: https://github.com/emilhaugberg/simple-elm-app/blob/master/Main.elm\r\n  [10]: https://github.com/emilhaugberg/simple-react-app/blob/master/index.js\r\n  [11]: http://clojurescript.net/\r\n  [12]: https://gist.github.com/khoomeister/5010943"}], "title": "Should I use JSLint or JSHint JavaScript validation?", "view_count": 141364, "answer_count": 8, "code_snippet": ["<code>Combine this with the previous 'var' statement</code>", "<code>Do not mix 'require' and other declarations</code>", "<code>===</code>", "<code>==</code>", "<code>eslint-disable</code>", "<code>for (i = 0; i &lt; dontEnumsLength; i++)</code>", "<code>Unexpected '++'</code>", "<code>(function() {\n  \"use strict\";\n  var x=0, y=2;\n  function add(val1, val2){\n    return val1 + val2;\n  }\n  var z;\n  for (var i=0; i&lt;2; i++){\n    z = add(y, x+i);\n  }\n})();\n</code>", "<code>(function () {\n    \"use strict\";\n    var x = 0, y = 2, i, z;\n    function add(val1, val2) {\n       return val1 + val2;\n    }\n    for (i = 0; i &lt; 2; i += 1) {\n        z = add(y, x + i);\n    }\n}());\n</code>", "<code>var i = 0</code>", "<code>for (var i = 0; ...; i++)</code>", "<code>i</code>", "<code>i</code>", "<code>i</code>", "<code>ESLint</code>", "<code>ESLint</code>", "<code>/*global require,dojo,dojoConfig,alert */\n</code>", "<code>/*jslint browser:true,sloppy:true,nomen:true,unparam:true,plusplus:true,indent:4 */\n</code>", "<code>standard</code>", "<code>npm install --save standard\n</code>", "<code>package.json</code>", "<code>\"scripts\": {\n    \"test\": \"node_modules/.bin/standard &amp;&amp; echo put further tests here\"\n},\n</code>", "<code>npm install --global snazzy</code>", "<code>npm test</code>", "<code>Main.elm</code>", "<code>index.js</code>", "<code>preset</code>", "<code>.jscsrc</code>", "<code>{\n    \"preset\": \"jquery\",\n    \"requireCurlyBraces\": null\n}\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "jquery", "node.js"], "creation_date": 1259200460, "body_markdown": "Is it possible to use jQuery selectors/DOM manipulation on the server-side using Node.js?", "last_edit_date": 1381942029, "up_vote_count": 498, "link": "https://stackoverflow.com/questions/1801160/can-i-use-jquery-with-node-js", "_childDocuments_": [{"tags": [], "down_vote_count": 17, "creation_date": 1259200971, "answer_id": 1801178, "path": "stack.gulp.answer", "score": -10, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1259200971, "body_markdown": "Not that I know of. The DOM is a client side thing (jQuery doesn&#39;t parse the HTML, but the DOM).\r\n\r\nHere are some current Node.js projects:\r\n\r\nhttp://wiki.github.com/ry/node\r\n\r\nAnd SimonW&#39;s [djangode][1] is pretty damn cool...\r\n\r\n\r\n  [1]: http://github.com/simonw/djangode"}, {"tags": [], "down_vote_count": 33, "creation_date": 1265611603, "answer_id": 2219999, "path": "stack.gulp.answer", "score": -17, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1465939240, "last_edit_date": 1465939240, "body_markdown": "An alternative is to use [Underscore.js][1].  It should provide what you might have wanted server-side from JQuery.\r\n\r\n\r\n  [1]: http://underscorejs.org/"}, {"tags": [], "down_vote_count": 9, "creation_date": 1268562599, "answer_id": 2441832, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1268562599, "body_markdown": "No. It&#39;s going to be quite a big effort to port a browser environment to node.\r\n\r\nAnother approach, that I&#39;m currently investigating for unit testing, is to create &quot;Mock&quot; version of jQuery that provides callbacks whenever a selector is called.\r\n\r\nThis way you could unit test your jQuery plugins without actually having a DOM. You&#39;ll still have to test in real browsers to see if your code works in the wild, but if you discover browser specific issues, you can easily &quot;mock&quot; those in your unit tests as well.\r\n\r\nI&#39;ll push something to github.com/felixge once it&#39;s ready to show."}, {"tags": [], "down_vote_count": 3, "creation_date": 1272359709, "answer_id": 2719967, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1465939214, "last_edit_date": 1465939214, "body_markdown": "I believe the answer to this is now yes.  \r\nhttps://github.com/tmpvar/jsdom\r\n\r\n    var navigator = { userAgent: &quot;node-js&quot; };  \r\n    var jQuery = require(&quot;./node-jquery&quot;).jQueryInit(window, navigator);"}, {"tags": [], "down_vote_count": 1, "creation_date": 1282533788, "answer_id": 3544553, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 36, "is_accepted": false, "last_activity_date": 1381942392, "last_edit_date": 1381942392, "body_markdown": "Using [jsdom][1] you now can. Just look at their jquery example in the examples directory.\r\n\r\n\r\n  [1]: http://github.com/tmpvar/jsdom"}, {"tags": [], "down_vote_count": 4, "creation_date": 1289257902, "answer_id": 4129032, "path": "stack.gulp.answer", "score": 499, "up_vote_count": 503, "is_accepted": false, "last_activity_date": 1470752653, "last_edit_date": 1470752653, "body_markdown": "**Update**: (late 2013) The official jQuery team finally took over the management of the `jquery` package on npm:\r\n\r\n    npm install jquery\r\n\r\nThen:\r\n\r\n    require(&quot;jsdom&quot;).env(&quot;&quot;, function(err, window) {\r\n        if (err) {\r\n            console.error(err);\r\n            return;\r\n        }\r\n     \r\n        var $ = require(&quot;jquery&quot;)(window);\r\n    });\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1320433969, "answer_id": 8014561, "path": "stack.gulp.answer", "score": 49, "up_vote_count": 51, "is_accepted": false, "last_activity_date": 1320433969, "body_markdown": "Yes you can, using a library I created called nodeQuery https://github.com/tblobaum/nodeQuery\r\n\r\n    var Express = require(&#39;express&#39;)\r\n        , dnode = require(&#39;dnode&#39;)\r\n        , nQuery = require(&#39;nodeQuery&#39;)\r\n        , express = Express.createServer();\r\n        \r\n    var app = function ($) {\r\n        $.on(&#39;ready&#39;, function () {\r\n            // do some stuff to the dom in real-time\r\n            $(&#39;body&#39;).append(&#39;Hello World&#39;);\r\n            $(&#39;body&#39;).append(&#39;&lt;input type=&quot;text&quot; /&gt;&#39;);\r\n            $(&#39;input&#39;).live(&#39;click&#39;, function () {\r\n                console.log(&#39;input clicked&#39;);\r\n                // ...\r\n            });\r\n        });\r\n    };\r\n\r\n    nQuery\r\n        .use(app);\r\n\r\n    express\r\n        .use(nQuery.middleware)\r\n        .use(Express.static(__dirname + &#39;/public&#39;))\r\n        .listen(3000);\r\n\r\n    dnode(nQuery.middleware).listen(express);"}, {"tags": [], "down_vote_count": 2, "creation_date": 1335704842, "answer_id": 10372368, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1381942361, "last_edit_date": 1381942361, "body_markdown": "The module [jsdom][1] is a great tool. But if you want to evaluate entire pages and do some funky stuff on them server side I suggest running them in their own context:\r\n\r\n    vm.runInContext\r\n\r\nSo things like `require` / `CommonJS` on site will not blow your Node process itself.\r\n\r\nYou can find documentation [here][2]. Cheers!\r\n\r\n\r\n  [1]: https://github.com/tmpvar/jsdom\r\n  [2]: http://nodejs.org/api/vm.html"}, {"tags": [], "down_vote_count": 2, "creation_date": 1354179287, "answer_id": 13621988, "path": "stack.gulp.answer", "score": 47, "up_vote_count": 49, "is_accepted": false, "last_activity_date": 1354179287, "body_markdown": "At the time of writing there also is the maintained [Cheerio][1].\r\n\r\n&gt; Fast, flexible, and lean implementation of core jQuery designed\r\n&gt; specifically for the server.\r\n\r\n\r\n  [1]: https://github.com/MatthewMueller/cheerio"}, {"tags": [], "down_vote_count": 3, "creation_date": 1366282603, "answer_id": 16081058, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1376085435, "last_edit_date": 1495540488, "body_markdown": "__WARNING__\r\n\r\nThis solution, as mentioned by [Golo Roden](https://stackoverflow.com/users/1333873/golo-roden) is not _correct_. It is just a quick fix to help people to have their actual jQuery code running using a Node app structure, but it&#39;s not Node philosophy because the jQuery is still running on the client side instead of on the server side. I&#39;m sorry for giving a wrong answer.\r\n\r\n***\r\n\r\nYou can also render Jade with node and put your jQuery code inside. Here is the code of the jade file:\r\n\r\n    !!! 5\r\n    html(lang=&quot;en&quot;)\r\n      head\r\n        title Holamundo!\r\n        script(type=&#39;text/javascript&#39;, src=&#39;http://code.jquery.com/jquery-1.9.1.js&#39;)\r\n      body\r\n        h1#headTitle Hello, World\r\n        p#content This is an example of Jade.\r\n        script\r\n          $(&#39;#headTitle&#39;).click(function() {\r\n            $(this).hide();\r\n          });\r\n          $(&#39;#content&#39;).click(function() {\r\n            $(this).hide();\r\n          });"}, {"tags": [], "down_vote_count": 1, "creation_date": 1436643389, "answer_id": 31361044, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1436652285, "last_edit_date": 1436652285, "body_markdown": "# A simple crawler using Cheerio\r\n\r\nThis is my formula to make a simple crawler in Node.js. It is the main reason for wanting to do DOM manipulation on the server side and probably it&#39;s the reason why you got here.\r\n\r\nFirst, use [`request`](//github.com/request/request) to download the page to be parsed. When the download is complete, handle it to [`cheerio`](//github.com/cheeriojs/cheerio) and begin DOM manipulation just like using jQuery.\r\n\r\nWorking example:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var\r\n        request = require(&#39;request&#39;),\r\n        cheerio = require(&#39;cheerio&#39;);\r\n    \r\n    function parse(url) {\r\n        request(url, function (error, response, body) {\r\n            var\r\n                $ = cheerio.load(body);\r\n    \r\n            $(&#39;.question-summary .question-hyperlink&#39;).each(function () {\r\n                console.info($(this).text());\r\n            });\r\n        })\r\n    }\r\n    \r\n    parse(&#39;http://stackoverflow.com/&#39;);\r\n\r\nThis example will print to the console all top questions showing on SO home page. This is why I love Node.js and its community. It couldn&#39;t get easier than that :-)\r\n\r\nInstall dependencies:\r\n\r\n&gt; npm install request cheerio\r\n\r\nAnd run (assuming the script above is in file `crawler.js`):\r\n\r\n&gt; node crawler.js\r\n\r\n---\r\n\r\n## Encoding\r\n\r\nSome pages will have non-english content in a certain encoding and you will need to decode it to `UTF-8`. For instance, a page in brazilian portuguese (or any other language of latin origin) will likely be encoded in `ISO-8859-1` (a.k.a. &quot;latin1&quot;). When decoding is needed, I tell `request` not to interpret the content in any way and instead use [`iconv-lite`](//github.com/ashtuchkin/iconv-lite) to do the job.\r\n\r\nWorking example:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var\r\n        request = require(&#39;request&#39;),\r\n        iconv = require(&#39;iconv-lite&#39;),\r\n        cheerio = require(&#39;cheerio&#39;);\r\n    \r\n    var\r\n        PAGE_ENCODING = &#39;utf-8&#39;; // change to match page encoding\r\n\r\n    function parse(url) {\r\n        request({\r\n            url: url,\r\n            encoding: null  // do not interpret content yet\r\n        }, function (error, response, body) {\r\n            var\r\n                $ = cheerio.load(iconv.decode(body, PAGE_ENCODING));\r\n    \r\n            $(&#39;.question-summary .question-hyperlink&#39;).each(function () {\r\n                console.info($(this).text());\r\n            });\r\n        })\r\n    }\r\n    \r\n    parse(&#39;http://stackoverflow.com/&#39;);\r\n\r\nBefore running, install dependencies:\r\n\r\n&gt; npm install request iconv-lite cheerio\r\n\r\nAnd then finally:\r\n\r\n&gt; node crawler.js\r\n\r\n---\r\n\r\n## Following links\r\n\r\nThe next step would be to follow links. Say you want to list all posters from each top question on SO. You have to first list all top questions (example above) and then enter each link, parsing each question&#39;s page to get the list of involved users.\r\n\r\nWhen you start following links, a [callback hell](https://strongloop.com/strongblog/node-js-callback-hell-promises-generators/) can begin. To avoid that, you should use some kind of promises, futures or whatever. I always keep [async](https://github.com/caolan/async) in my toolbelt. So, here is a full example of a crawler using async:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var\r\n        url = require(&#39;url&#39;),\r\n        request = require(&#39;request&#39;),\r\n        async = require(&#39;async&#39;),\r\n        cheerio = require(&#39;cheerio&#39;);\r\n    \r\n    var\r\n        baseUrl = &#39;http://stackoverflow.com/&#39;;\r\n    \r\n    // Gets a page and returns a callback with a $ object\r\n    function getPage(url, parseFn) {\r\n        request({\r\n            url: url\r\n        }, function (error, response, body) {\r\n            parseFn(cheerio.load(body))\r\n        });\r\n    }\r\n    \r\n    getPage(baseUrl, function ($) {\r\n        var\r\n            questions;\r\n    \r\n        // Get list of questions\r\n        questions = $(&#39;.question-summary .question-hyperlink&#39;).map(function () {\r\n            return {\r\n                title: $(this).text(),\r\n                url: url.resolve(baseUrl, $(this).attr(&#39;href&#39;))\r\n            };\r\n        }).get().slice(0, 5); // limit to the top 5 questions\r\n    \r\n        // For each question\r\n        async.map(questions, function (question, questionDone) {\r\n    \r\n            getPage(question.url, function ($$) {\r\n    \r\n                // Get list of users\r\n                question.users = $$(&#39;.post-signature .user-details a&#39;).map(function () {\r\n                    return $$(this).text();\r\n                }).get();\r\n    \r\n                questionDone(null, question);\r\n            });\r\n    \r\n        }, function (err, questionsWithPosters) {\r\n    \r\n            // This function is called by async when all questions have been parsed\r\n    \r\n            questionsWithPosters.forEach(function (question) {\r\n    \r\n                // Prints each question along with its user list\r\n                console.info(question.title);\r\n                question.users.forEach(function (user) {\r\n                    console.info(&#39;\\t%s&#39;, user);\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\nBefore running:\r\n\r\n&gt; npm install request async cheerio\r\n\r\nRun a test:\r\n\r\n&gt; node crawler.js\r\n\r\nSample output:\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    Is it possible to pause a Docker image build?\r\n    \tconradk\r\n    \tThomasleveil\r\n    PHP Image Crop Issue\r\n    \tElyor\r\n    \tHouston Molinar\r\n    Add two object in rails\r\n    \tuser1670773\r\n    \tMakoto\r\n    \tmax\r\n    Asymmetric encryption discrepancy - Android vs Java\r\n    \tCookie Monster\r\n    \tWand Maker\r\n    Objective-C: Adding 10 seconds to timer in SpriteKit\r\n    \tChristian K Rider\r\n\r\nAnd that&#39;s the basic you should know to start making your own crawlers :-)\r\n\r\n---\r\n\r\n## Libraries used\r\n\r\n- [request](//github.com/request/request)\r\n- [iconv-lite](//github.com/ashtuchkin/iconv-lite)\r\n- [cheerio](//github.com/cheeriojs/cheerio)\r\n- [async](https://github.com/caolan/async)\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1466494667, "answer_id": 37938266, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1486478728, "last_edit_date": 1486478728, "body_markdown": "jQuery module can be installed using:\r\n\r\n    npm install jquery\r\n\r\nExample:\r\n\r\n    var $ = require(&#39;jquery&#39;);\r\n    var http = require(&#39;http&#39;);\r\n\r\n    var options = {\r\n        host: &#39;jquery.com&#39;,\r\n        port: 80,\r\n        path: &#39;/&#39;\r\n    };\r\n\r\n    var html = &#39;&#39;;\r\n    http.get(options, function(res) {\r\n    res.on(&#39;data&#39;, function(data) {\r\n        // collect the data chunks to the variable named &quot;html&quot;\r\n        html += data;\r\n    }).on(&#39;end&#39;, function() {\r\n        // the whole of webpage data has been collected. parsing time!\r\n        var title = $(html).find(&#39;title&#39;).text();\r\n        console.log(title);\r\n     });\r\n    });\r\n\r\nReferences of jQuery in Node.js** : \r\n\r\n* http://quaintous.com/2015/07/31/jqery-node-mystery/\r\n* http://www.hacksparrow.com/jquery-with-node-js.html"}, {"tags": [], "down_vote_count": 1, "creation_date": 1479391067, "answer_id": 40656811, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1479391067, "body_markdown": "in 2016 things are way easier. install jquery to node.js with your console:\r\n\r\n    npm install jquery\r\n\r\nbind it to the variable `$` (for example - i am used to it) in your node.js code: \r\n\r\n    var $ = require(&quot;jquery&quot;);\r\n\r\ndo stuff:\r\n\r\n    $.ajax({\r\n        url: &#39;gimme_json.php&#39;,\r\n        dataType: &#39;json&#39;,\r\n        method: &#39;GET&#39;,\r\n        data: { &quot;now&quot; : true }\r\n    });\r\n\r\nalso works for gulp as it is based on node.js.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1497312427, "answer_id": 44510457, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1500069774, "last_edit_date": 1500069774, "body_markdown": "`npm install jquery --save` **#note ALL LOWERCASE**\r\n\r\n`npm install jsdom --save`\r\n\r\n    const jsdom = require(&quot;jsdom&quot;);\r\n    const dom = new jsdom.JSDOM(`&lt;!DOCTYPE html&gt;`);\r\n    var $ = require(&quot;jquery&quot;)(dom.window);\r\n\r\n\r\n    $.getJSON(&#39;https://api.github.com/users/nhambayi&#39;,function(data) {\r\n      console.log(data);\r\n    });"}, {"tags": [], "down_vote_count": 0, "creation_date": 1501157316, "answer_id": 45350409, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1501157316, "body_markdown": "My working code is:\r\n\r\n\tnpm install jquery\r\n\t\r\nand then:\r\n\r\n\tglobal.jQuery \t= require(&#39;jquery&#39;);\r\n\tglobal.$ \t\t= global.jQuery;\r\n\r\nor if the window is present, then:\r\n\r\n\ttypeof window !== &quot;undefined&quot; ? window : this;\r\n\twindow.jQuery \t= require(&#39;jquery&#39;);\r\n\twindow.$ \t\t= window.jQuery;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1508320416, "answer_id": 46807406, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1508320416, "body_markdown": "You can use [Electron][1], it allows hybrid browserjs and nodejs.\r\n\r\nBefore, I tried to use canvas2d in nodejs, but finally I gave up. It&#39;s not supported by nodejs default, and too hard to install it (many many ... dependeces).\r\nUntil I use Electron, I can easily use all my previous browserjs code, even WebGL, and pass the result value(eg. result base64 image data) to nodejs code.\r\n\r\n\r\n  [1]: https://electron.atom.io/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1511542447, "answer_id": 47477412, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1511542447, "body_markdown": "You have to get the window using the new JSDOM API.\r\n\r\n```\r\nconst jsdom = require(&quot;jsdom&quot;);\r\nconst { window } = new jsdom.JSDOM(`...`);\r\nvar $ = require(&quot;jquery&quot;)(window);\r\n```"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517483975, "answer_id": 48561481, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1517483975, "body_markdown": "As of jsdom v10, .env() function is deprecated. I did it like below after trying a lot of things to require jquery:\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var jsdom = require(&#39;jsdom&#39;);\r\n    const { JSDOM } = jsdom;\r\n    const { window } = new JSDOM();\r\n    const { document } = (new JSDOM(&#39;&#39;)).window;\r\n    global.document = document;\r\n\r\n    var $ = jQuery = require(&#39;jquery&#39;)(window);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nHope this helps you or anyone who has been facing these types of issues."}], "title": "Can I use jQuery with Node.js?", "view_count": 276883, "answer_count": 18, "code_snippet": ["<code>jquery</code>", "<code>npm install jquery\n</code>", "<code>require(\"jsdom\").env(\"\", function(err, window) {\n    if (err) {\n        console.error(err);\n        return;\n    }\n\n    var $ = require(\"jquery\")(window);\n});\n</code>", "<code>require(\"...\").env is not a function</code>", "<code>var Express = require('express')\n    , dnode = require('dnode')\n    , nQuery = require('nodeQuery')\n    , express = Express.createServer();\n\nvar app = function ($) {\n    $.on('ready', function () {\n        // do some stuff to the dom in real-time\n        $('body').append('Hello World');\n        $('body').append('&lt;input type=\"text\" /&gt;');\n        $('input').live('click', function () {\n            console.log('input clicked');\n            // ...\n        });\n    });\n};\n\nnQuery\n    .use(app);\n\nexpress\n    .use(nQuery.middleware)\n    .use(Express.static(__dirname + '/public'))\n    .listen(3000);\n\ndnode(nQuery.middleware).listen(express);\n</code>", "<code>, express = Express.createServer();</code>", "<code>TypeError: Express.createServer is not a function</code>", "<code>:gt(1)</code>", "<code>request</code>", "<code>cheerio</code>", "<code>var\n    request = require('request'),\n    cheerio = require('cheerio');\n\nfunction parse(url) {\n    request(url, function (error, response, body) {\n        var\n            $ = cheerio.load(body);\n\n        $('.question-summary .question-hyperlink').each(function () {\n            console.info($(this).text());\n        });\n    })\n}\n\nparse('http://stackoverflow.com/');\n</code>", "<code>crawler.js</code>", "<code>UTF-8</code>", "<code>ISO-8859-1</code>", "<code>request</code>", "<code>iconv-lite</code>", "<code>var\n    request = require('request'),\n    iconv = require('iconv-lite'),\n    cheerio = require('cheerio');\n\nvar\n    PAGE_ENCODING = 'utf-8'; // change to match page encoding\n\nfunction parse(url) {\n    request({\n        url: url,\n        encoding: null  // do not interpret content yet\n    }, function (error, response, body) {\n        var\n            $ = cheerio.load(iconv.decode(body, PAGE_ENCODING));\n\n        $('.question-summary .question-hyperlink').each(function () {\n            console.info($(this).text());\n        });\n    })\n}\n\nparse('http://stackoverflow.com/');\n</code>", "<code>var\n    url = require('url'),\n    request = require('request'),\n    async = require('async'),\n    cheerio = require('cheerio');\n\nvar\n    baseUrl = 'http://stackoverflow.com/';\n\n// Gets a page and returns a callback with a $ object\nfunction getPage(url, parseFn) {\n    request({\n        url: url\n    }, function (error, response, body) {\n        parseFn(cheerio.load(body))\n    });\n}\n\ngetPage(baseUrl, function ($) {\n    var\n        questions;\n\n    // Get list of questions\n    questions = $('.question-summary .question-hyperlink').map(function () {\n        return {\n            title: $(this).text(),\n            url: url.resolve(baseUrl, $(this).attr('href'))\n        };\n    }).get().slice(0, 5); // limit to the top 5 questions\n\n    // For each question\n    async.map(questions, function (question, questionDone) {\n\n        getPage(question.url, function ($$) {\n\n            // Get list of users\n            question.users = $$('.post-signature .user-details a').map(function () {\n                return $$(this).text();\n            }).get();\n\n            questionDone(null, question);\n        });\n\n    }, function (err, questionsWithPosters) {\n\n        // This function is called by async when all questions have been parsed\n\n        questionsWithPosters.forEach(function (question) {\n\n            // Prints each question along with its user list\n            console.info(question.title);\n            question.users.forEach(function (user) {\n                console.info('\\t%s', user);\n            });\n        });\n    });\n});\n</code>", "<code>Is it possible to pause a Docker image build?\n    conradk\n    Thomasleveil\nPHP Image Crop Issue\n    Elyor\n    Houston Molinar\nAdd two object in rails\n    user1670773\n    Makoto\n    max\nAsymmetric encryption discrepancy - Android vs Java\n    Cookie Monster\n    Wand Maker\nObjective-C: Adding 10 seconds to timer in SpriteKit\n    Christian K Rider\n</code>", "<code>npm install jquery\n</code>", "<code>$</code>", "<code>var $ = require(\"jquery\");\n</code>", "<code>$.ajax({\n    url: 'gimme_json.php',\n    dataType: 'json',\n    method: 'GET',\n    data: { \"now\" : true }\n});\n</code>", "<code>var $ = require(\"jquery\"); $.ajax // undefined</code>", "<code>npm install jquery</code>", "<code>&gt; console.log(require(\"jquery\").toString());</code>", "<code>function ( w ) {   if ( !w.document ) {     throw new Error( \"jQuery requires a window with a document\" );   }   return factory( w ); }</code>", "<code>var navigator = { userAgent: \"node-js\" };  \nvar jQuery = require(\"./node-jquery\").jQueryInit(window, navigator);\n</code>", "<code>npm install jquery\n</code>", "<code>var $ = require('jquery');\nvar http = require('http');\n\nvar options = {\n    host: 'jquery.com',\n    port: 80,\n    path: '/'\n};\n\nvar html = '';\nhttp.get(options, function(res) {\nres.on('data', function(data) {\n    // collect the data chunks to the variable named \"html\"\n    html += data;\n}).on('end', function() {\n    // the whole of webpage data has been collected. parsing time!\n    var title = $(html).find('title').text();\n    console.log(title);\n });\n});\n</code>", "<code>npm install jquery --save</code>", "<code>npm install jsdom --save</code>", "<code>const jsdom = require(\"jsdom\");\nconst dom = new jsdom.JSDOM(`&lt;!DOCTYPE html&gt;`);\nvar $ = require(\"jquery\")(dom.window);\n\n\n$.getJSON('https://api.github.com/users/nhambayi',function(data) {\n  console.log(data);\n});\n</code>", "<code>!!! 5\nhtml(lang=\"en\")\n  head\n    title Holamundo!\n    script(type='text/javascript', src='http://code.jquery.com/jquery-1.9.1.js')\n  body\n    h1#headTitle Hello, World\n    p#content This is an example of Jade.\n    script\n      $('#headTitle').click(function() {\n        $(this).hide();\n      });\n      $('#content').click(function() {\n        $(this).hide();\n      });\n</code>", "<code>\nconst jsdom = require(\"jsdom\");\nconst { window } = new jsdom.JSDOM(`...`);\nvar $ = require(\"jquery\")(window);\n</code>", "<code>vm.runInContext\n</code>", "<code>require</code>", "<code>CommonJS</code>", "<code>npm install jquery\n</code>", "<code>global.jQuery   = require('jquery');\nglobal.$        = global.jQuery;\n</code>", "<code>typeof window !== \"undefined\" ? window : this;\nwindow.jQuery   = require('jquery');\nwindow.$        = window.jQuery;\n</code>", "<code>var jsdom = require('jsdom');\r\nconst { JSDOM } = jsdom;\r\nconst { window } = new JSDOM();\r\nconst { document } = (new JSDOM('')).window;\r\nglobal.document = document;\r\n\r\nvar $ = jQuery = require('jquery')(window);</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "jquery", "requirejs"], "creation_date": 1322587829, "body_markdown": "RequireJS seems to do something internally that caches required javascript files. If I make a change to one of the required files, I have to rename the file in order for the changes to be applied.  \r\n\r\nThe common trick of appending a version number as a querystring param to the end of the filename does not work with requirejs `&lt;script src=&quot;jsfile.js?v2&quot;&gt;&lt;/script&gt;` \r\n\r\nWhat I am looking for is a way to prevent this internal cacheing of RequireJS required scripts without having to rename my script files every time they are updated.\r\n\r\n**Cross-Platform Solution:**\r\n\r\nI am now using `urlArgs: &quot;bust=&quot; + (new Date()).getTime()` for automatic cache-busting during development and `urlArgs: &quot;bust=v2&quot;` for production where I increment the hard-coded version num after rolling out an updated required script.\r\n\r\n**Note:**\r\n\r\n@Dustin Getz mentioned in a recent answer that Chrome Developer Tools will drop breakpoints during debugging when Javascript files are continuously refreshed like this. One workaround  is to write `debugger;` in code to trigger a breakpoint in most Javascript debuggers.\r\n\r\n**Server-Specific Solutions:**\r\n\r\nFor specific solutions that may work better for your server environment such as Node or Apache, see some of the answers below.", "last_edit_date": 1386781760, "up_vote_count": 280, "link": "https://stackoverflow.com/questions/8315088/prevent-requirejs-from-caching-required-scripts", "_childDocuments_": [{"tags": [], "down_vote_count": 4, "creation_date": 1323719218, "answer_id": 8479953, "path": "stack.gulp.answer", "score": 432, "up_vote_count": 436, "is_accepted": true, "last_activity_date": 1363657346, "last_edit_date": 1363657346, "body_markdown": "RequireJS can be configured to append a value to each of the script urls for cache busting. \r\n\r\nFrom the RequireJS documentation ([http://requirejs.org/docs/api.html#config][1]):\r\n&gt; **urlArgs**: Extra query string arguments appended to URLs that RequireJS\r\n&gt; uses to fetch resources. Most useful to cache bust when the browser or\r\n&gt; server is not configured correctly. \r\n\r\nExample, appending &quot;v2&quot; to all scripts:\r\n\r\n    require.config({\r\n        urlArgs: &quot;bust=v2&quot;\r\n    });\r\n\r\nFor development purposes, you can force RequireJS to bypass the cache by appending a timestamp:\r\n\r\n\r\n    require.config({\r\n        urlArgs: &quot;bust=&quot; + (new Date()).getTime()\r\n    });\r\n\r\n\r\n  [1]: http://requirejs.org/docs/api.html#config"}, {"tags": [], "down_vote_count": 0, "creation_date": 1347438504, "answer_id": 12384043, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1347438504, "last_edit_date": 1495542387, "body_markdown": "Inspired by https://stackoverflow.com/questions/11088909/expire-cache-on-require-js-data-main we updated our deploy script with the following ant task:\r\n\r\n    &lt;target name=&quot;deployWebsite&quot;&gt;\r\n        &lt;untar src=&quot;${temp.dir}/website.tar.gz&quot; dest=&quot;${website.dir}&quot; compression=&quot;gzip&quot; /&gt;       \r\n        &lt;!-- fetch latest buildNumber from build agent --&gt;\r\n        &lt;replace file=&quot;${website.dir}/js/main.js&quot; token=&quot;@Revision@&quot; value=&quot;${buildNumber}&quot; /&gt;\r\n    &lt;/target&gt;\r\n\r\nWhere the beginning of main.js looks like:\r\n\r\n    require.config({\r\n        baseUrl: &#39;/js&#39;,\r\n        urlArgs: &#39;bust=@Revision@&#39;,\r\n        ...\r\n    });"}, {"tags": [], "down_vote_count": 5, "creation_date": 1361833010, "answer_id": 15078132, "path": "stack.gulp.answer", "score": 51, "up_vote_count": 56, "is_accepted": false, "last_activity_date": 1376082912, "last_edit_date": 1376082912, "body_markdown": "## Do not use urlArgs for this!\r\n\r\nRequire script loads respect http caching headers. (Scripts are loaded with a dynamically inserted `&lt;script&gt;`, which means the request looks just like any old asset getting loaded.)\r\n\r\nServe your javascript assets with the proper HTTP headers to disable caching during development. \r\n\r\nUsing require&#39;s urlArgs means any breakpoints you set will not be preserved across refreshes; you end up needing to put `debugger` statements everywhere in your code. Bad. I use `urlArgs` for cache-busting assets during production upgrades with the git sha; then I can set my assets to be cached forever and be guaranteed to never have stale assets. \r\n\r\nIn development, I mock all ajax requests with a complex [mockjax][1] configuration, then I can serve my app in javascript-only mode with a [10 line python http server with all caching turned off][2]. This has scaled up for me to a quite large &quot;enterprisey&quot; application with hundreds of restful webservice endpoints. We even have a contracted designer who can work with our real production codebase without giving him access to our backend code.\r\n\r\n  [1]: https://github.com/appendto/jquery-mockjax\r\n  [2]: https://gist.github.com/dustingetz/5348582"}, {"tags": [], "down_vote_count": 1, "creation_date": 1377790046, "answer_id": 18515067, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1382594711, "last_edit_date": 1495542387, "body_markdown": "**Quick Fix for Development**\r\n\r\nFor development, you could just **disable the cache in Chrome Dev Tools** (https://stackoverflow.com/questions/5690269/disabling-chrome-cache-for-website-development). The cache disabling happens only if the dev tools dialog is open, so you need not worry about toggling this option every time you do regular browsing.\r\n\r\nNote: Using &#39;**urlArgs**&#39; is the proper solution in production so that users get the latest code. But it makes debugging difficult because chrome invalidates breakpoints with every refresh (because its a &#39;new&#39; file being served each time)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1383322152, "answer_id": 19730654, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1383322152, "body_markdown": "### In production\r\n\r\n**``urlArgs`` can cause problems!**\r\n\r\nThe principal author of requirejs [prefers not to use ``urlArgs``](https://groups.google.com/d/msg/requirejs/3E9dP_BSQoY/36ut2Gtko7cJ):\r\n\r\n&gt; For deployed assets, I prefer to put the version or hash for the whole\r\nbuild as a build directory, then just modify the ``baseUrl`` config used\r\nfor the project to use that versioned directory as the ``baseUrl``. Then\r\nno other files change, and it helps avoid **some proxy issues where they\r\nmay not cache an URL with a query string on it.**\r\n\r\n[Styling mine.]\r\n\r\nI follow this advice.\r\n\r\n### In development\r\n\r\nI prefer to use a server that intelligently caches files that may change frequently: a server that emits ``Last-Modified`` and responds to ``If-Modified-Since`` with 304 when appropriate. Even a server based on Node&#39;s [express](http://expressjs.com/) set to serve static files does this right out the box. It does not require doing anything to my browser, and does not mess up breakpoints."}, {"tags": [], "down_vote_count": 0, "creation_date": 1386619230, "answer_id": 20479581, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1386619230, "body_markdown": "I took this snippet from [AskApache](http://www.askapache.com/htaccess/using-http-headers-with-htaccess.html#100_Prevent_Files_cached) and put it into a seperate .conf file of my local Apache webserver (in my case /etc/apache2/others/preventcaching.conf):\r\n\r\n    &lt;FilesMatch &quot;\\.(html|htm|js|css)$&quot;&gt;\r\n    FileETag None\r\n    &lt;ifModule mod_headers.c&gt;\r\n    Header unset ETag\r\n    Header set Cache-Control &quot;max-age=0, no-cache, no-store, must-revalidate&quot;\r\n    Header set Pragma &quot;no-cache&quot;\r\n    Header set Expires &quot;Wed, 11 Jan 1984 05:00:00 GMT&quot;\r\n    &lt;/ifModule&gt;\r\n    &lt;/FilesMatch&gt;\r\n\r\nFor development this works fine with no need to change the code. As for the production, I might use @dvtoever&#39;s approach."}, {"tags": [], "down_vote_count": 0, "creation_date": 1391747342, "answer_id": 21619359, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1392074391, "last_edit_date": 1495542887, "body_markdown": "The urlArgs solution has problems. Unfortunately you cannot control all proxy servers that might be between you and your user&#39;s web browser. Some of these proxy servers can be unfortunately configured to ignore URL parameters when caching files. If this happens, the wrong version of your JS file will be delivered to your user.\r\n\r\nI finally gave up and [implemented my own fix][1] directly into require.js. If you are willing to modify your version of the requirejs library, this solution might work for you.\r\n\r\nYou can see the patch here:\r\n\r\nhttps://github.com/jbcpollak/requirejs/commit/589ee0cdfe6f719cd761eee631ce68eee09a5a67\r\n\r\nOnce added, you can do something like this in your require config:\r\n\r\n    var require = {\r\n        baseUrl: &quot;/scripts/&quot;,\r\n        cacheSuffix: &quot;.buildNumber&quot;\r\n    }\r\n\r\nUse your build system or server environment to replace `buildNumber` with a revision id / software version / favorite color.\r\n\r\nUsing require like this:\r\n\r\n    require([&quot;myModule&quot;], function() {\r\n        // no-op;\r\n    });\r\n\r\nWill cause require to request this file:\r\n\r\n    http://yourserver.com/scripts/myModule.buildNumber.js\r\n\r\nOn our server environment, we use url rewrite rules to strip out the buildNumber, and serve the correct JS file. This way we don&#39;t actually have to worry about renaming all of our JS files.\r\n\r\nThe patch will ignore any script that specifies a protocol, and it will not affect any non-JS files.\r\n\r\nThis works well for my environment, but I realize some users would prefer a prefix rather than a suffix, it should be easy to modify my commit to suit your needs.\r\n\r\n**Update:**\r\n\r\nIn the pull request discussion, the requirejs author suggest this might work as a solution to prefix the revision number:\r\n\r\n    var require = {\r\n        baseUrl: &quot;/scripts/buildNumber.&quot;\r\n    };\r\n\r\nI have not tried this, but the implication is that this would request the following URL:\r\n\r\n    http://yourserver.com/scripts/buildNumber.myModule.js\r\n\r\nWhich might work very well for many people who can use a prefix.\r\n\r\n  [1]: https://github.com/jbcpollak/requirejs/commit/589ee0cdfe6f719cd761eee631ce68eee09a5a67\r\n\r\nHere are some possible duplicate questions:\r\n\r\nhttps://stackoverflow.com/questions/18242756/requirejs-and-proxy-caching/21619297#21619297\r\n\r\nhttps://stackoverflow.com/questions/13833094/require-js-how-can-i-set-a-version-on-required-modules-as-part-of-the-url/21619238#21619238"}, {"tags": [], "down_vote_count": 1, "creation_date": 1417011242, "answer_id": 27151333, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1417011242, "body_markdown": "This is how I do it in Django / Flask (can be easily adapted to other languages / VCS systems):\r\n\r\nIn your `config.py` (I use this in python3, so you may need to tweak the encoding in python2)\r\n\r\n    import subprocess\r\n    GIT_HASH = subprocess.check_output([&#39;git&#39;, &#39;rev-parse&#39;, &#39;HEAD&#39;]).strip().decode(&#39;utf-8&#39;)\r\n\r\nThen in your template:\r\n\r\n    {% if config.DEBUG %}\r\n         require.config({urlArgs: &quot;bust=&quot; + (new Date().getTime())});\r\n    {% else %}\r\n        require.config({urlArgs: &quot;bust=&quot; + {{ config.GIT_HASH|tojson }}});\r\n    {% endif %}\r\n\r\n - Doesn&#39;t require manual build process\r\n - Only runs `git rev-parse HEAD` once when the app starts, and stores it in the `config` object"}, {"tags": [], "down_vote_count": 0, "creation_date": 1425411346, "answer_id": 28840424, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1425411346, "body_markdown": "I don&#39;t recommend using &#39;**urlArgs**&#39; for cache bursting with RequireJS. As this does not solves the problem fully. Updating a version no will result in downloading all the resources, even though you have just changes a single resource.\r\n\r\nTo handle this issue i recommend using Grunt modules like &#39;filerev&#39; for creating revision no. On top of this i have written a custom task in Gruntfile to update the revision no wherever required.\r\n\r\nIf needed i can share the code snippet for this task."}, {"tags": [], "down_vote_count": 2, "creation_date": 1440713105, "answer_id": 32260203, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1440713105, "body_markdown": "Ummm, what about `requirejs.undef`? \r\n\r\nhttps://groups.google.com/forum/#!topic/requirejs/gq4bX8u6lPU\r\n\r\nfrom James Burke himself, the author of RequireJS:\r\n\r\n&gt; Make sure to use requirejs 2.0, then use the requirejs.undef() \r\n&gt; function to undefine mod2 before redefining it: \r\n&gt; \r\n&gt; http://requirejs.org/docs/api.html#undef \r\n&gt; \r\n&gt; James"}, {"tags": [], "down_vote_count": 2, "creation_date": 1452303397, "answer_id": 34688762, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1452303397, "body_markdown": "This is in addition to @phil mccull&#39;s accepted answer.\r\n\r\nI use his method but I also automate the process by creating a T4 template to be run pre-build.\r\n\r\nPre-Build Commands:\r\n   \r\n\r\n    set textTemplatingPath=&quot;%CommonProgramFiles(x86)%\\Microsoft Shared\\TextTemplating\\$(VisualStudioVersion)\\texttransform.exe&quot;\r\n    if %textTemplatingPath%==&quot;\\Microsoft Shared\\TextTemplating\\$(VisualStudioVersion)\\texttransform.exe&quot; set textTemplatingPath=&quot;%CommonProgramFiles%\\Microsoft Shared\\TextTemplating\\$(VisualStudioVersion)\\texttransform.exe&quot;\r\n    %textTemplatingPath% &quot;$(ProjectDir)CacheBuster.tt&quot;\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\nT4 template:\r\n\r\n[![enter image description here][2]][2]\r\n\r\nGenerated File:\r\n[![enter image description here][3]][3]\r\n\r\nStore in variable before require.config.js is loaded:\r\n[![enter image description here][4]][4]\r\n\r\nReference in require.config.js:\r\n\r\n[![enter image description here][5]][5]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/pcw6K.png\r\n  [2]: http://i.stack.imgur.com/CSHF0.png\r\n  [3]: http://i.stack.imgur.com/Ty14e.png\r\n  [4]: http://i.stack.imgur.com/dCwnq.png\r\n  [5]: http://i.stack.imgur.com/qA4ID.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1476188363, "answer_id": 39977105, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1476783553, "last_edit_date": 1476783553, "body_markdown": "There is a simple solution for this problem, so that you can load a unique revision number for every module.\r\n\r\nYou can save the original requirejs.load function, overwrite it with your own function and parse your modified url to the original requirejs.load again:\r\n\r\n\r\n\r\n    var load = requirejs.load;\r\n    requirejs.load = function (context, moduleId, url) {\r\n        url += &quot;?v=&quot; + oRevision[moduleId];\r\n        load(context, moduleId, url);\r\n    };\r\n\r\nIn our building process I used &quot;gulp-rev&quot; to build a manifest file with all revision of all modules which are beeing used. Simplified version of my gulp task:\r\n\r\n    gulp.task(&#39;gulp-revision&#39;, function() {\r\n        var sManifestFileName = &#39;revision.js&#39;;\r\n\r\n        return gulp.src(aGulpPaths)\r\n            .pipe(rev())\r\n            .pipe(rev.manifest(sManifestFileName, {\r\n            transformer: {\r\n                stringify: function(a) {\r\n                    var oAssetHashes = {};\r\n  \r\n                    for(var k in a) {\r\n                        var key = (k.substr(0, k.length - 3));\r\n                        \r\n                        var sHash = a[k].substr(a[k].indexOf(&quot;.&quot;) - 10, 10);\r\n                        oAssetHashes[key] = sHash;\r\n                    }\r\n                    \r\n                    return &quot;define([], function() { return &quot; + JSON.stringify(oAssetHashes) + &quot;; });&quot;\r\n                }\r\n            }\r\n        }))\r\n        .pipe(gulp.dest(&#39;./&#39;));\r\n    });\r\n\r\nthis will generate an AMD-module with revision numbers to moduleNames, which is included as &#39;oRevision&#39; in the main.js, where you overwrite the requirejs.load function as shown before."}, {"tags": [], "down_vote_count": 1, "creation_date": 1490118736, "answer_id": 42934660, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1490303078, "last_edit_date": 1490303078, "body_markdown": "In my case I wanted to load the same form each time I click, I didn&#39;t want the changes I&#39;ve made on the file stays. It may not relevant to this post exactly, but this could be a potential solution on the client side without setting config for require. Instead of sending the contents directly, you can make a copy of the required file and keep the actual file intact. \r\n\r\n    LoadFile(filePath){\r\n        const file = require(filePath);\r\n        const result = angular.copy(file);\r\n        return result;\r\n    }\r\n\r\n"}], "title": "Prevent RequireJS from Caching Required Scripts", "view_count": 95483, "answer_count": 13, "code_snippet": ["<code>&lt;script src=\"jsfile.js?v2\"&gt;&lt;/script&gt;</code>", "<code>urlArgs: \"bust=\" + (new Date()).getTime()</code>", "<code>urlArgs: \"bust=v2\"</code>", "<code>debugger;</code>", "<code>require.config({\n    urlArgs: \"bust=v2\"\n});\n</code>", "<code>require.config({\n    urlArgs: \"bust=\" + (new Date()).getTime()\n});\n</code>", "<code>urlArgs: \"bust=\" + (new Date()).getTime()</code>", "<code>urlArgs: \"bust=v2\"</code>", "<code>urlArgs: \"bust=\" + (+new Date)</code>", "<code>urlArgs</code>", "<code>&lt;script&gt;</code>", "<code>debugger</code>", "<code>urlArgs</code>", "<code>debugger;</code>", "<code>var require = {\n    baseUrl: \"/scripts/\",\n    cacheSuffix: \".buildNumber\"\n}\n</code>", "<code>buildNumber</code>", "<code>require([\"myModule\"], function() {\n    // no-op;\n});\n</code>", "<code>http://yourserver.com/scripts/myModule.buildNumber.js\n</code>", "<code>var require = {\n    baseUrl: \"/scripts/buildNumber.\"\n};\n</code>", "<code>http://yourserver.com/scripts/buildNumber.myModule.js\n</code>", "<code>/scripts/myLib/v1.1/</code>", "<code>&lt;script \t\tdata-main=\"${pageContext.request.contextPath}/resources/scripts/main\" \t\tsrc=\"${pageContext.request.contextPath}/resources/scripts/require.js\"&gt; \t\t&lt;jsp:text/&gt; \t&lt;/script&gt; \t&lt;script&gt; \t\trequire([ 'dev/module' ]); \t&lt;/script&gt;</code>", "<code>&lt;target name=\"deployWebsite\"&gt;\n    &lt;untar src=\"${temp.dir}/website.tar.gz\" dest=\"${website.dir}\" compression=\"gzip\" /&gt;       \n    &lt;!-- fetch latest buildNumber from build agent --&gt;\n    &lt;replace file=\"${website.dir}/js/main.js\" token=\"@Revision@\" value=\"${buildNumber}\" /&gt;\n&lt;/target&gt;\n</code>", "<code>require.config({\n    baseUrl: '/js',\n    urlArgs: 'bust=@Revision@',\n    ...\n});\n</code>", "<code>urlArgs</code>", "<code>urlArgs</code>", "<code>baseUrl</code>", "<code>baseUrl</code>", "<code>Last-Modified</code>", "<code>If-Modified-Since</code>", "<code>&lt;FilesMatch \"\\.(html|htm|js|css)$\"&gt;\nFileETag None\n&lt;ifModule mod_headers.c&gt;\nHeader unset ETag\nHeader set Cache-Control \"max-age=0, no-cache, no-store, must-revalidate\"\nHeader set Pragma \"no-cache\"\nHeader set Expires \"Wed, 11 Jan 1984 05:00:00 GMT\"\n&lt;/ifModule&gt;\n&lt;/FilesMatch&gt;\n</code>", "<code>config.py</code>", "<code>import subprocess\nGIT_HASH = subprocess.check_output(['git', 'rev-parse', 'HEAD']).strip().decode('utf-8')\n</code>", "<code>{% if config.DEBUG %}\n     require.config({urlArgs: \"bust=\" + (new Date().getTime())});\n{% else %}\n    require.config({urlArgs: \"bust=\" + {{ config.GIT_HASH|tojson }}});\n{% endif %}\n</code>", "<code>git rev-parse HEAD</code>", "<code>config</code>", "<code>var load = requirejs.load;\nrequirejs.load = function (context, moduleId, url) {\n    url += \"?v=\" + oRevision[moduleId];\n    load(context, moduleId, url);\n};\n</code>", "<code>gulp.task('gulp-revision', function() {\n    var sManifestFileName = 'revision.js';\n\n    return gulp.src(aGulpPaths)\n        .pipe(rev())\n        .pipe(rev.manifest(sManifestFileName, {\n        transformer: {\n            stringify: function(a) {\n                var oAssetHashes = {};\n\n                for(var k in a) {\n                    var key = (k.substr(0, k.length - 3));\n\n                    var sHash = a[k].substr(a[k].indexOf(\".\") - 10, 10);\n                    oAssetHashes[key] = sHash;\n                }\n\n                return \"define([], function() { return \" + JSON.stringify(oAssetHashes) + \"; });\"\n            }\n        }\n    }))\n    .pipe(gulp.dest('./'));\n});\n</code>", "<code>requirejs.undef</code>", "<code>requirejs.undef</code>", "<code>requirejs.undef</code>", "<code>set textTemplatingPath=\"%CommonProgramFiles(x86)%\\Microsoft Shared\\TextTemplating\\$(VisualStudioVersion)\\texttransform.exe\"\nif %textTemplatingPath%==\"\\Microsoft Shared\\TextTemplating\\$(VisualStudioVersion)\\texttransform.exe\" set textTemplatingPath=\"%CommonProgramFiles%\\Microsoft Shared\\TextTemplating\\$(VisualStudioVersion)\\texttransform.exe\"\n%textTemplatingPath% \"$(ProjectDir)CacheBuster.tt\"\n</code>", "<code>LoadFile(filePath){\n    const file = require(filePath);\n    const result = angular.copy(file);\n    return result;\n}\n</code>"], "path": "stack.gulp"}, {"tags": ["json", "node.js", "npm"], "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1352905358, "answer_id": 13381344, "path": "stack.gulp.answer", "score": 148, "up_vote_count": 151, "is_accepted": false, "last_activity_date": 1352905358, "body_markdown": "I just wrote a simple script to collect the dependencies in ./node_modules. It fulfills my requirement at the moment. This may help some others, I post it here.\r\n\r\n    var fs = require(&quot;fs&quot;);\r\n\r\n    function main() {\r\n      fs.readdir(&quot;./node_modules&quot;, function (err, dirs) {\r\n        if (err) {\r\n          console.log(err);\r\n          return;\r\n        }\r\n        dirs.forEach(function(dir){\r\n          if (dir.indexOf(&quot;.&quot;) !== 0) {\r\n            var packageJsonFile = &quot;./node_modules/&quot; + dir + &quot;/package.json&quot;;\r\n            if (fs.existsSync(packageJsonFile)) {\r\n              fs.readFile(packageJsonFile, function (err, data) {\r\n                if (err) {\r\n                  console.log(err);\r\n                }\r\n                else {\r\n                  var json = JSON.parse(data);\r\n                  console.log(&#39;&quot;&#39;+json.name+&#39;&quot;: &quot;&#39; + json.version + &#39;&quot;,&#39;);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    \r\n      });\r\n    }\r\n    \r\n    main();\r\n\r\nIn my case, the above script outputs:\r\n\r\n    &quot;colors&quot;: &quot;0.6.0-1&quot;,\r\n    &quot;commander&quot;: &quot;1.0.5&quot;,\r\n    &quot;htmlparser&quot;: &quot;1.7.6&quot;,\r\n    &quot;optimist&quot;: &quot;0.3.5&quot;,\r\n    &quot;progress&quot;: &quot;0.1.0&quot;,\r\n    &quot;request&quot;: &quot;2.11.4&quot;,\r\n    &quot;soupselect&quot;: &quot;0.2.0&quot;,   // Remember: remove the comma character in the last line.\r\n\r\nNow, you can copy&amp;paste them. Have fun!"}, {"tags": [], "down_vote_count": 2, "creation_date": 1354728139, "answer_id": 13728837, "path": "stack.gulp.answer", "score": 540, "up_vote_count": 542, "is_accepted": false, "last_activity_date": 1502055514, "last_edit_date": 1502055514, "body_markdown": "The package.json file is used by **npm** to learn about your node.js project.\r\n\r\nUse `npm init` to generate package.json files for you!\r\n\r\nIt comes bundled with npm. Read its documentation here: https://docs.npmjs.com/cli/init\r\n\r\nAlso, there is a tool you can use in your own projects to generate this file programmatically (it&#39;s made by the maker of npm): https://github.com/isaacs/init-package-json"}, {"tags": [], "down_vote_count": 3, "creation_date": 1359921116, "answer_id": 14676564, "path": "stack.gulp.answer", "score": 187, "up_vote_count": 190, "is_accepted": false, "last_activity_date": 1402050244, "last_edit_date": 1402050244, "body_markdown": "First off, run\r\n\r\n    npm init\r\n\r\n...will ask you a few questions ([read this first](https://www.npmjs.org/doc/json.html)) about your project/package and then generate a package.json file for you.\r\n\r\nThen, once you have a package.json file, use\r\n\r\n    npm install &lt;pkg&gt; --save\r\n\r\nor\r\n\r\n    npm install &lt;pkg&gt; --save-dev\r\n\r\n...to install a dependency and automatically it to your `package.json`&#39;s `dependencies` list.\r\n\r\n(Note: You may need to manually tweak the version ranges for your dependencies.)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1389731366, "answer_id": 21123358, "path": "stack.gulp.answer", "score": 74, "up_vote_count": 74, "is_accepted": false, "last_activity_date": 1392327810, "last_edit_date": 1392327810, "body_markdown": "`npm init`\r\n\r\n to create the package.json file and then you use \r\n\r\n`ls node_modules/ |xargs npm install --save` \r\n\r\nto fill in the modules you have in the node_modules folder.\r\n\r\nEdit: @paldepind pointed out that the second command is redundant because `npm init` now automatically adds what you have in your node_modules/ folder. I don&#39;t know if this has always been the case, but now at least, it works without the second command."}, {"tags": [], "down_vote_count": 0, "creation_date": 1392555351, "answer_id": 21811398, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1392627332, "last_edit_date": 1392627332, "body_markdown": "**Command line**:\r\n\r\n    npm init\r\n\r\nwill create package.json file \r\n\r\nTo install , update and uninstall packages under dependencies into package.json file: \r\n \r\n**Command line** :\r\n\r\n    npm install &lt;pkg&gt;@* --save \r\n\r\nwill automatically add the latest version for the package under dependencies into           package.json file  \r\n\r\nEX: \r\n\r\n    npm install node-markdown@* --save\r\n\r\n**Command line**: \r\n\r\n    npm install &lt;pkg&gt; --save\r\n\r\n\r\nalso will automatically add the latest version for the package under dependencies into package.json file\r\n\r\n**if** you need specific version for a package use this **Command line**:\r\n\r\n    npm install &lt;pkg&gt;@&lt;version&gt; --save\r\n\r\nwill automatically add specific version of package under dependencies into package.json file\r\n\r\nEX:\r\n\r\n\r\n    npm install koa-views@1.0.0 --save\r\n\r\n \r\n**if** you need specific range of version for a package use this **Command line**:\r\n\r\n    npm install &lt;pkg&gt;@&lt;version range&gt;\r\n\r\nwill automatically add the latest version for the package between range of version under dependencies into package.json file\r\n\r\nEX:\r\n\r\n    npm install koa-views@&quot;&gt;1.0.0 &lt;1.2.0&quot; --save\r\n\r\n**For** more details about how to write version for package [npm Doc][1]  \r\n\r\n\r\n  [1]: https://www.npmjs.org/doc/files/package.json.html#dependencies\r\n\r\n**Command line**:\r\n\r\n    npm update --save\r\n\r\nwill update packages  into package.json file and will automatically add updated version for all packages under dependencies into package.json file\r\n\r\n**Command line**:\r\n\r\n    npm uninstall &lt;pkg&gt; --save\r\n\r\nwill automatically remove package from dependencies into package.json file and remove package from node_module folder "}, {"tags": [], "down_vote_count": 0, "creation_date": 1413986849, "answer_id": 26509432, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1413986849, "body_markdown": "Based on Pylinux&#39;s answer, below is a solution for Windows OS,\r\n\r\n    dir node_modules &gt; abc.txt\r\n    FOR /F %k in (abc.txt) DO npm install --save\r\n\r\nHope it helps."}, {"tags": [], "down_vote_count": 0, "creation_date": 1439650063, "answer_id": 32025833, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1445411443, "last_edit_date": 1445411443, "body_markdown": "You can now use [Yeoman - Modern Web App Scaffolding Tool][1] on node terminal using 3 easy steps.\r\n\r\nFirst, you&#39;ll need to install yo and other required tools:\r\n\r\n    $ npm install -g yo bower grunt-cli gulp\r\n\r\nTo scaffold a web application, install the *generator-webapp* generator:\r\n\r\n    $ npm install -g generator-webapp  // create scaffolding \r\n\r\nRun yo and... you are all done: \r\n\r\n    $ yo webapp  // create scaffolding \r\n\r\n\r\nYeoman can write boilerplate code for your entire web application or Controllers and Models. It can fire up a live-preview web server for edits and compile; not just that you can also run your unit tests, minimize and concatenate your code, optimize images, and more...\r\n\r\n**[Yeoman (yo)][1]** - scaffolding tool that offers an ecosystem of framework-specific scaffolds, called generators, that can be used to perform some of the tedious tasks mentioned earlier.\r\n\r\n**[Grunt][2] / [gulp][3]** - used to build, preview, and test your project.\r\n\r\n**[Bower][4]** - is used for dependency management, so that you no longer have to manually download your front-end libraries.\r\n\r\n\r\n  [1]: http://yeoman.io/\r\n  [2]: http://gruntjs.com/\r\n  [3]: http://gulpjs.com/\r\n  [4]: http://bower.io/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1444806960, "answer_id": 33118953, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1444806960, "body_markdown": "use command npm init -f to generate package.json file and after that use --save after each command so that each module will automatically get updated inside your package.json\r\nfor ex: npm install express --save\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1467902387, "answer_id": 38248386, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1467902387, "body_markdown": "Running `npm init -y` makes your `package.json` with all the defaults.\r\n&lt;br&gt;\r\nYou can then change `package.json` accordingly\r\n&lt;br&gt;\r\nThis saves time many a times by preventing pressing `enter` on every command in `npm init`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1519918242, "answer_id": 49053110, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1519918242, "body_markdown": "## 1. Choice\r\n\r\n**If** you git and GitHub user:\r\n\r\n\u2005\u2005\u2005\u2005[**`generate-package`**](https://www.npmjs.com/package/generate-package) more simply, than `npm init`.\r\n\r\n**else**\r\n\r\n**and/or** you don&#39;t like `package.json` template, that generate-package or `npm init` generate:\r\n\r\n\u2005\u2005\u2005\u2005you can generate your own template via scaffolding apps as [**generate**](https://www.npmjs.com/package/generate), [**sails**](https://sailsjs.com/) or [**yeoman**](http://yeoman.io/).\r\n\r\n---\r\n\r\n## 2. Relevance\r\n\r\nThis answer is relevant for March 2018. In the future, the data from this answer may be obsolete.\r\n\r\nAuthor of this answer personally used generate-package at March 2018.\r\n\r\n---\r\n\r\n## 3. Limitations\r\n\r\nYou need use git and GitHub for using generate-package.\r\n\r\n---\r\n\r\n## 4. Demonstration\r\n\r\nFor example, I create blank folder `sasha-npm-init-vs-generate-package`.\r\n\r\n### 4.1. generate-package\r\n\r\nCommand:\r\n\r\n&lt;!-- language: lang-node --&gt;\r\n\r\n    D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;gen package\r\n    [16:58:52] starting generate\r\n    [16:59:01] \u221a running tasks: [ &#39;package&#39; ]\r\n    [16:59:04] starting package\r\n    ? Project description? generate-package demo\r\n    ? Author&#39;s name? Sasha Chernykh\r\n    ? Author&#39;s URL? https://vk.com/hair_in_the_wind\r\n    [17:00:19] finished package \u221a 1m\r\n\r\n`package.json`:\r\n\r\n&lt;!-- language: lang-json --&gt;\r\n\r\n    {\r\n      &quot;name&quot;: &quot;sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;description&quot;: &quot;generate-package demo&quot;,\r\n      &quot;version&quot;: &quot;0.1.0&quot;,\r\n      &quot;homepage&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;author&quot;: &quot;Sasha Chernykh (https://vk.com/hair_in_the_wind)&quot;,\r\n      &quot;repository&quot;: &quot;Kristinita/sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;bugs&quot;: {\r\n        &quot;url&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues&quot;\r\n      },\r\n      &quot;license&quot;: &quot;MIT&quot;,\r\n      &quot;engines&quot;: {\r\n        &quot;node&quot;: &quot;&gt;=4&quot;\r\n      },\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;mocha&quot;\r\n      },\r\n      &quot;keywords&quot;: [\r\n        &quot;generate&quot;,\r\n        &quot;init&quot;,\r\n        &quot;npm&quot;,\r\n        &quot;package&quot;,\r\n        &quot;sasha&quot;,\r\n        &quot;vs&quot;\r\n      ]\r\n    }\r\n\r\n### 4.2. npm init\r\n\r\n&lt;!-- language: lang-json --&gt;\r\n\r\n    D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;npm init\r\n    This utility will walk you through creating a package.json file.\r\n    It only covers the most common items, and tries to guess sensible defaults.\r\n\r\n    See `npm help json` for definitive documentation on these fields\r\n    and exactly what they do.\r\n\r\n    Use `npm install &lt;pkg&gt;` afterwards to install a package and\r\n    save it as a dependency in the package.json file.\r\n\r\n    Press ^C at any time to quit.\r\n    package name: (sasha-npm-init-vs-generate-package)\r\n    version: (1.0.0) 0.1.0\r\n    description: npm init demo\r\n    entry point: (index.js)\r\n    test command: mocha\r\n    git repository: https://github.com/Kristinita/sasha-npm-init-vs-generate-package\r\n    keywords: generate, package, npm, package, sasha, vs\r\n    author: Sasha Chernykh\r\n    license: (ISC) MIT\r\n    About to write to D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package\\package.json:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;version&quot;: &quot;0.1.0&quot;,\r\n      &quot;description&quot;: &quot;npm init demo&quot;,\r\n      &quot;main&quot;: &quot;index.js&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;mocha&quot;\r\n      },\r\n      &quot;repository&quot;: {\r\n        &quot;type&quot;: &quot;git&quot;,\r\n        &quot;url&quot;: &quot;git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git&quot;\r\n      },\r\n      &quot;keywords&quot;: [\r\n        &quot;generate&quot;,\r\n        &quot;package&quot;,\r\n        &quot;npm&quot;,\r\n        &quot;package&quot;,\r\n        &quot;sasha&quot;,\r\n        &quot;vs&quot;\r\n      ],\r\n      &quot;author&quot;: &quot;Sasha Chernykh&quot;,\r\n      &quot;license&quot;: &quot;MIT&quot;,\r\n      &quot;bugs&quot;: {\r\n        &quot;url&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues&quot;\r\n      },\r\n      &quot;homepage&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme&quot;\r\n    }\r\n\r\n\r\n    Is this ok? (yes) y\r\n\r\n&lt;!-- language: lang-json --&gt;\r\n\r\n    {\r\n      &quot;name&quot;: &quot;sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;version&quot;: &quot;0.1.0&quot;,\r\n      &quot;description&quot;: &quot;npm init demo&quot;,\r\n      &quot;main&quot;: &quot;index.js&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;mocha&quot;\r\n      },\r\n      &quot;repository&quot;: {\r\n        &quot;type&quot;: &quot;git&quot;,\r\n        &quot;url&quot;: &quot;git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git&quot;\r\n      },\r\n      &quot;keywords&quot;: [\r\n        &quot;generate&quot;,\r\n        &quot;package&quot;,\r\n        &quot;npm&quot;,\r\n        &quot;package&quot;,\r\n        &quot;sasha&quot;,\r\n        &quot;vs&quot;\r\n      ],\r\n      &quot;author&quot;: &quot;Sasha Chernykh&quot;,\r\n      &quot;license&quot;: &quot;MIT&quot;,\r\n      &quot;bugs&quot;: {\r\n        &quot;url&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues&quot;\r\n      },\r\n      &quot;homepage&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme&quot;\r\n    }\r\n\r\nI think, that `generate-package` more simply, that `npm init`.\r\n\r\n---\r\n\r\n## 5. Customizing\r\n\r\nThat create your own `package.json` template, see [**generate**](https://github.com/generate/generate-package/blob/master/templates/%24package.json) and [**yeoman**](https://github.com/cajacko/generator-package-json/blob/develop/generators/app/index.js) examples."}], "creation_date": 1333248356, "body_markdown": "Is package.json supposed to be manually edited? Couldn&#39;t a program like npm just look through the files, see the &quot;require&quot; statements, and then use that to put the necessary entries in the package.json file? Are there any programs like that?", "title": "Is there a way to automatically build the package.json file for Node.js projects", "view_count": 199537, "up_vote_count": 346, "answer_count": 10, "link": "https://stackoverflow.com/questions/9961502/is-there-a-way-to-automatically-build-the-package-json-file-for-node-js-projects", "code_snippet": ["<code>npm link</code>", "<code>npm init</code>", "<code>npm init</code>", "<code>npm shrinkwrap</code>", "<code>npm-shrinkwrap.json</code>", "<code>npm init</code>", "<code>npm install &lt;pkg&gt; --save</code>", "<code>npm init</code>", "<code>[...] Press ^C at any time to quit.</code>", "<code>npm init\n</code>", "<code>npm install &lt;pkg&gt; --save\n</code>", "<code>npm install &lt;pkg&gt; --save-dev\n</code>", "<code>package.json</code>", "<code>dependencies</code>", "<code>npm uninstall &lt;pkg&gt; --save</code>", "<code>package.json</code>", "<code>var fs = require(\"fs\");\n\nfunction main() {\n  fs.readdir(\"./node_modules\", function (err, dirs) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    dirs.forEach(function(dir){\n      if (dir.indexOf(\".\") !== 0) {\n        var packageJsonFile = \"./node_modules/\" + dir + \"/package.json\";\n        if (fs.existsSync(packageJsonFile)) {\n          fs.readFile(packageJsonFile, function (err, data) {\n            if (err) {\n              console.log(err);\n            }\n            else {\n              var json = JSON.parse(data);\n              console.log('\"'+json.name+'\": \"' + json.version + '\",');\n            }\n          });\n        }\n      }\n    });\n\n  });\n}\n\nmain();\n</code>", "<code>\"colors\": \"0.6.0-1\",\n\"commander\": \"1.0.5\",\n\"htmlparser\": \"1.7.6\",\n\"optimist\": \"0.3.5\",\n\"progress\": \"0.1.0\",\n\"request\": \"2.11.4\",\n\"soupselect\": \"0.2.0\",   // Remember: remove the comma character in the last line.\n</code>", "<code>npm ls --depth=0</code>", "<code>a</code>", "<code>a</code>", "<code>b</code>", "<code>c</code>", "<code>a</code>", "<code>b</code>", "<code>c</code>", "<code>a</code>", "<code>npm init</code>", "<code>ls node_modules/ |xargs npm install --save</code>", "<code>npm init</code>", "<code>npm init</code>", "<code>npm dedupe</code>", "<code>node_modules</code>", "<code>package.json</code>", "<code>npm init\n</code>", "<code>npm install &lt;pkg&gt;@* --save \n</code>", "<code>npm install node-markdown@* --save\n</code>", "<code>npm install &lt;pkg&gt; --save\n</code>", "<code>npm install &lt;pkg&gt;@&lt;version&gt; --save\n</code>", "<code>npm install koa-views@1.0.0 --save\n</code>", "<code>npm install &lt;pkg&gt;@&lt;version range&gt;\n</code>", "<code>npm install koa-views@\"&gt;1.0.0 &lt;1.2.0\" --save\n</code>", "<code>npm update --save\n</code>", "<code>npm uninstall &lt;pkg&gt; --save\n</code>", "<code>npm init -y</code>", "<code>package.json</code>", "<code>package.json</code>", "<code>enter</code>", "<code>npm init</code>", "<code>$ npm install -g yo bower grunt-cli gulp\n</code>", "<code>$ npm install -g generator-webapp  // create scaffolding \n</code>", "<code>$ yo webapp  // create scaffolding \n</code>", "<code>dir node_modules &gt; abc.txt\nFOR /F %k in (abc.txt) DO npm install --save\n</code>", "<code>generate-package</code>", "<code>npm init</code>", "<code>package.json</code>", "<code>npm init</code>", "<code>sasha-npm-init-vs-generate-package</code>", "<code>D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;gen package\n[16:58:52] starting generate\n[16:59:01] \u221a running tasks: [ 'package' ]\n[16:59:04] starting package\n? Project description? generate-package demo\n? Author's name? Sasha Chernykh\n? Author's URL? https://vk.com/hair_in_the_wind\n[17:00:19] finished package \u221a 1m\n</code>", "<code>package.json</code>", "<code>{\n  \"name\": \"sasha-npm-init-vs-generate-package\",\n  \"description\": \"generate-package demo\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package\",\n  \"author\": \"Sasha Chernykh (https://vk.com/hair_in_the_wind)\",\n  \"repository\": \"Kristinita/sasha-npm-init-vs-generate-package\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues\"\n  },\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \"&gt;=4\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"keywords\": [\n    \"generate\",\n    \"init\",\n    \"npm\",\n    \"package\",\n    \"sasha\",\n    \"vs\"\n  ]\n}\n</code>", "<code>D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;npm init\nThis utility will walk you through creating a package.json file.\nIt only covers the most common items, and tries to guess sensible defaults.\n\nSee `npm help json` for definitive documentation on these fields\nand exactly what they do.\n\nUse `npm install &lt;pkg&gt;` afterwards to install a package and\nsave it as a dependency in the package.json file.\n\nPress ^C at any time to quit.\npackage name: (sasha-npm-init-vs-generate-package)\nversion: (1.0.0) 0.1.0\ndescription: npm init demo\nentry point: (index.js)\ntest command: mocha\ngit repository: https://github.com/Kristinita/sasha-npm-init-vs-generate-package\nkeywords: generate, package, npm, package, sasha, vs\nauthor: Sasha Chernykh\nlicense: (ISC) MIT\nAbout to write to D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package\\package.json:\n\n{\n  \"name\": \"sasha-npm-init-vs-generate-package\",\n  \"version\": \"0.1.0\",\n  \"description\": \"npm init demo\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git\"\n  },\n  \"keywords\": [\n    \"generate\",\n    \"package\",\n    \"npm\",\n    \"package\",\n    \"sasha\",\n    \"vs\"\n  ],\n  \"author\": \"Sasha Chernykh\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues\"\n  },\n  \"homepage\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme\"\n}\n\n\nIs this ok? (yes) y\n</code>", "<code>{\n  \"name\": \"sasha-npm-init-vs-generate-package\",\n  \"version\": \"0.1.0\",\n  \"description\": \"npm init demo\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git\"\n  },\n  \"keywords\": [\n    \"generate\",\n    \"package\",\n    \"npm\",\n    \"package\",\n    \"sasha\",\n    \"vs\"\n  ],\n  \"author\": \"Sasha Chernykh\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues\"\n  },\n  \"homepage\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme\"\n}\n</code>", "<code>generate-package</code>", "<code>npm init</code>", "<code>package.json</code>"], "path": "stack.gulp"}, {"tags": ["node.js"], "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1370619920, "answer_id": 16988060, "path": "stack.gulp.answer", "score": 36, "up_vote_count": 36, "is_accepted": false, "last_activity_date": 1459365789, "last_edit_date": 1459365789, "body_markdown": "`__dirname` isn&#39;t a global; it&#39;s local to the current module so each file has its own local, different value.\r\n\r\nIf you want the root directory of the running process, you probably do want to use `process.cwd()`.\r\n\r\nIf you want predictability and reliability, then you probably need to make it a requirement of your application that a certain environment variable is set. Your app looks for `MY_APP_HOME` (Or whatever) and if it&#39;s there, and the application exists in that directory then all is well. If it is undefined or the directory doesn&#39;t contain your application then it should exit with an error prompting the user to create the variable. It could be set as a part of an install process.\r\n\r\nYou can read environment variables in node with something like `process.env.MY_ENV_VARIABLE`."}, {"tags": [], "down_vote_count": 8, "creation_date": 1376868004, "answer_id": 18304596, "path": "stack.gulp.answer", "score": 36, "up_vote_count": 44, "is_accepted": false, "last_activity_date": 1385152583, "last_edit_date": 1385152583, "body_markdown": "1- create a file in the project root call it **settings.js**\r\n\r\n2- inside this file add this code\r\n\r\n    module.exports = {\r\n        POST_MAX_SIZE : 40 , //MB\r\n        UPLOAD_MAX_FILE_SIZE: 40, //MB\r\n        PROJECT_DIR : __dirname\r\n    };\r\n\r\n3- inside node_modules create a new module name it &quot;settings&quot; and inside the module index.js write this code:\r\n\r\n    module.exports = require(&quot;../../settings&quot;);\r\n\r\n\r\n4- and any time you want your project directory just use \r\n\r\n    var settings = require(&quot;settings&quot;);\r\n    settings.PROJECT_DIR; \r\n\r\nin this way you will have all project directories relative to this file ;)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1378822978, "answer_id": 18721515, "path": "stack.gulp.answer", "score": 387, "up_vote_count": 388, "is_accepted": true, "last_activity_date": 1460000808, "last_edit_date": 1460000808, "body_markdown": "There are several ways to approach this, each with their own pros and cons:\r\n\r\n## require.main.filename\r\n\r\nFrom &lt;http://nodejs.org/api/modules.html&gt;:\r\n\r\n&gt; When a file is run directly from Node, `require.main` is set to its `module`. That means that you can determine whether a file has been run directly by testing `require.main === module`\r\n&gt; \r\n&gt; Because `module` provides a `filename` property (normally equivalent to `__filename`), the entry point of the current application can be obtained by checking `require.main.filename`.\r\n\r\nSo if you want the base directory for your app, you can do:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var path = require(&#39;path&#39;);\r\n    var appDir = path.dirname(require.main.filename);\r\n\r\n### Pros &amp; Cons\r\n\r\nThis will work great most of the time, but if you&#39;re running your app with a launcher like **pm2** or running **mocha** tests, this method will fail.\r\n\r\n## global.X\r\n\r\nNode has a a global namespace object called `global` \u2014 anything that you attach to this object will be available everywhere in your app.  So, in your `index.js` (or `app.js` or whatever your main app file is named), you can just define a global variable:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n\t// index.js\r\n\tvar path = require(&#39;path&#39;);\r\n\tglobal.appRoot = path.resolve(__dirname);\r\n\t\r\n\t// lib/moduleA/component1.js\r\n\trequire(appRoot + &#39;/lib/moduleB/component2.js&#39;);\r\n\t\r\n### Pros &amp; Cons\r\n\r\nWorks consistently but you have to rely on a global variable, which means that you can&#39;t easily reuse components/etc.\r\n\r\n## process.cwd()\r\n\r\nThis returns the current working directory.  Not reliable at all, as it&#39;s entirely dependent on what directory the process was launched **from**:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n\t$ cd /home/demo/\r\n\t$ mkdir subdir\r\n\t$ echo &quot;console.log(process.cwd());&quot; &gt; subdir/demo.js\r\n\t$ node subdir/demo.js\r\n\t/home/demo\r\n\t$ cd subdir\r\n\t$ node demo.js\r\n\t/home/demo/subdir\r\n\t\r\n## app-root-path\r\n\r\nTo address this issue, I&#39;ve created a node module called **[app-root-path](https://github.com/inxilpro/node-app-root-path)**.  Usage is simple:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n\tvar appRoot = require(&#39;app-root-path&#39;);\r\n\tvar myModule = require(appRoot + &#39;/lib/my-module.js&#39;);\r\n\t\r\nThe **[app-root-path](https://github.com/inxilpro/node-app-root-path)** module uses several different techniques to determine the root path of the app, taking into account globally installed modules (for example, if your app is running in `/var/www/` but the module is installed in `~/.nvm/v0.x.x/lib/node/`).  It won&#39;t work 100% of the time, but it&#39;s going to work in most common scenarios.\r\n\r\n### Pros &amp; Cons\r\n\r\nWorks without configuration in most circumstances.  Also provides some nice additional convenience methods (see project page).  The biggest con is that it won&#39;t work if:\r\n\r\n  - You&#39;re using a launcher, like pm2\r\n  - **AND**, the module isn&#39;t installed inside your app&#39;s `node_modules` directory (for example, if you installed it globally)\r\n\r\nYou can get around this by either setting a `APP_ROOT_PATH` environmental variable, or by calling `.setPath()` on the module, but in that case, you&#39;re probably better off using the `global` method.\r\n\r\n## NODE_PATH environmental variable\r\n\r\nIf you&#39;re looking for a way to *determine* the root path of the current app, one of the above solutions is likely to work best for you.  If, on the other hand, you&#39;re trying to solve the problem of loading app modules reliably, I highly recommend looking into the `NODE_PATH` environmental variable.\r\n\r\nNode&#39;s [Modules system](https://nodejs.org/api/modules.html) looks for modules in a variety of locations.  [One of these locations is wherever `process.env.NODE_PATH` points](https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders). If you set this environmental variable, then you can `require` modules with the standard module loader without any other changes.\r\n\r\nFor example, if you set `NODE_PATH` to `/var/www/lib`, the the following would work just fine:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    require(&#39;module2/component.js&#39;);\r\n    // ^ looks for /var/www/lib/module2/component.js\r\n\r\nA great way to do this is using `npm`:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;NODE_PATH=. node app.js&quot;\r\n    }\r\n\r\nNow you can start your app with `npm start` and you&#39;re golden.  I combine this with my [enforce-node-path](https://github.com/inxilpro/enforce-node-path) module, which prevents accidentally loading the app without `NODE_PATH` set. For even more control over enforcing environmental variables, see [checkenv](https://github.com/inxilpro/node-checkenv).\r\n\r\n**One gotcha:** `NODE_PATH` **must** be set **outside** of the node app.  You cannot do something like `process.env.NODE_PATH = path.resolve(__dirname)` because the module loader caches the list of directories it will search before your app runs.\r\n\r\n**[added 4/6/16]** Another really promising module that attempts to solve this problem is [wavy](https://github.com/kolodny/wavy)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1397826630, "answer_id": 23154874, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1420838305, "last_edit_date": 1420838305, "body_markdown": "All these &quot;root dirs&quot; mostly need to resolve some virtual path to a real pile path, so may be you should look at `path.resolve`?\r\n\r\n    var path= require(&#39;path&#39;);\r\n    var filePath = path.resolve(&#39;our/virtual/path.ext&quot;);"}, {"tags": [], "down_vote_count": 1, "creation_date": 1425185989, "answer_id": 28790268, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1425185989, "body_markdown": "**Create a function in app.js**\r\n\r\n`/*Function to get the app root folder*/`\r\n\r\n    var appRootFolder = function(dir,level){\r\n\t\tvar arr = dir.split(&#39;\\\\&#39;);\r\n\t\tarr.splice(arr.length - level,level);\r\n\t\tvar rootFolder = arr.join(&#39;\\\\&#39;);\r\n\t\treturn rootFolder;\r\n\t}\r\n\r\n\t// view engine setup\r\n\tapp.set(&#39;views&#39;, path.join(appRootFolder(__dirname,1),&#39;views&#39;));"}, {"tags": [], "down_vote_count": 1, "creation_date": 1432664054, "answer_id": 30465921, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1446957573, "last_edit_date": 1446957573, "body_markdown": "the easiest way to get the global root (*assuming you use NPM to run your node.js app &#39;npm start&#39;, etc*)\r\n\r\n\r\n    var appRoot = process.env.PWD;\r\n\r\n\r\n*If you want to cross-verify the above*\r\n\r\nSay you want to cross-check `process.env.PWD` with the settings of you node.js application. if you want some runtime tests to check the validity of `process.env.PWD`, you can cross-check it with this code (that I wrote which seems to work well). You can cross-check the name of the last folder in appRoot with the npm_package_name in your package.json file, for example:\r\n\r\n\r\n        var path = require(&#39;path&#39;);\r\n    \r\n        var globalRoot = __dirname; //(you may have to do some substring processing if the first script you run is not in the project root, since __dirname refers to the directory that the file is in for which __dirname is called in.)\r\n    \r\n        //compare the last directory in the globalRoot path to the name of the project in your package.json file\r\n        var folders = globalRoot.split(path.sep);\r\n        var packageName = folders[folders.length-1];\r\n        var pwd = process.env.PWD;\r\n        var npmPackageName = process.env.npm_package_name;\r\n        if(packageName !== npmPackageName){\r\n            throw new Error(&#39;Failed check for runtime string equality between globalRoot-bottommost directory and npm_package_name.&#39;);\r\n        }\r\n        if(globalRoot !== pwd){\r\n            throw new Error(&#39;Failed check for runtime string equality between globalRoot and process.env.PWD.&#39;);\r\n        }\r\n\r\n\r\nyou can also use this NPM module: `require(&#39;app-root-path&#39;)` which works very well for this purpose\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1434729885, "answer_id": 30942572, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1434729885, "body_markdown": "Maybe you can try traversing upwards from `__filename` until you find a `package.json`, and decide that&#39;s the main directory your current file belongs to."}, {"tags": [], "down_vote_count": 1, "creation_date": 1439203888, "answer_id": 31917632, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1439203888, "body_markdown": "A technique that I&#39;ve found useful when using express is to add the following to app.js before any of your other routes are set\r\n\r\n    // set rootPath\r\n    app.use(function(req, res, next) {\r\n      req.rootPath = __dirname;\r\n      next();\r\n    });\r\n\r\n    app.use(&#39;/myroute&#39;, myRoute);\r\n\r\nNo need to use globals and you have the path of the root directory as a property of the request object.\r\n\r\nThis works if your app.js is in the root of your project which, by default, it is.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1444276695, "answer_id": 33006350, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1444276695, "body_markdown": "to get current file&#39;s pathname:&lt;br/&gt;&lt;br/&gt;\r\ndefine in that file:&lt;/br&gt;\r\n&lt;pre&gt;\r\n\r\n    var get_stack = function() {\r\n        var orig = Error.prepareStackTrace;\r\n        Error.prepareStackTrace = function(_, stack) {\r\n            return stack;\r\n        };\r\n        var err = new Error;\r\n        Error.captureStackTrace(err, arguments.callee);\r\n        var stack = err.stack;\r\n        Error.prepareStackTrace = orig;\r\n        return stack;\r\n    };\r\n\r\n&lt;/pre&gt;\r\n\r\nusage in that file:&lt;br/&gt;\r\n&lt;pre&gt;\r\n\r\n    console.log(get_stack()[0].getFileName());\r\n\r\n&lt;/pre&gt;\r\n\r\nAPI:&lt;br/&gt;\r\n[StackTrace][1]\r\n\r\n\r\n  [1]: https://chromium.googlesource.com/v8/v8/+/master/docs/javascript_stack_trace_api.md"}, {"tags": [], "down_vote_count": 0, "creation_date": 1464418734, "answer_id": 37496174, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1464418734, "body_markdown": "At top of main file add:\r\n\r\n    mainDir = __dirname;\r\n\r\nThen use it in any file you need:\r\n\r\n    console.log(&#39;mainDir &#39; + mainDir);\r\n\r\n* `mainDir` is defined globally, if you need it only in current file - use `__dirname` instead.\r\n* main file is usually in root folder of the project and is named like `main.js`, `index.js`, `gulpfile.js`."}, {"tags": [], "down_vote_count": 1, "creation_date": 1467139116, "answer_id": 38083859, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1467139116, "body_markdown": "Try `path._makeLong(&#39;some_filename_on_root.js&#39;);`\r\n\r\nexample:\r\n\r\n    cons path = require(&#39;path&#39;);\r\n    console.log(path._makeLong(&#39;some_filename_on_root.js&#39;);\r\n\r\nThat will return full path from root of your node application (same position of package.json)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1480691303, "answer_id": 40935286, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1480691303, "body_markdown": "I use this.\r\n\r\nFor my module named `mymodule`\r\n\r\n`var BASE_DIR = __dirname.replace(/^(.*\\/mymodule)(.*)$/, &#39;$1&#39;)`\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1486293466, "answer_id": 42051427, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1486293466, "body_markdown": "Actually, i find the perhaps trivial solution also to most robust:\r\nyou simply place the following file at the root directory of your project: root-path.js which has the following code:\r\n\r\n```import * as path from &#39;path&#39;\r\nconst projectRootPath = path.resolve(__dirname)\r\nexport const rootPath = projectRootPath\r\n```"}, {"tags": [], "down_vote_count": 0, "creation_date": 1494742119, "answer_id": 43960876, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1494742119, "body_markdown": "I&#39;ve found this works consistently for me, even when the application is invoked from a sub-folder, as it can be with some test frameworks, like Mocha:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    process.mainModule.paths[0].split(&#39;node_modules&#39;)[0].slice(0, -1);\r\n\r\nWhy it works:\r\n\r\nAt runtime node creates a registry of the full paths of all loaded files. The modules are loaded first, and thus at the top of this registry. By selecting the first element of the registry and returning the path before the &#39;node_modules&#39; directory we are able to determine the root of the application.\r\n\r\nIt&#39;s just one line of code, but for simplicity&#39;s sake (my sake), I black boxed it into an NPM module:\r\n\r\nhttps://www.npmjs.com/package/node-root.pddivine\r\n\r\nEnjoy!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1515779419, "answer_id": 48231578, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1515779419, "body_markdown": "## Make it sexy &#128131;&#127995;.&lt;br/&gt;\r\n\r\n    const users = require(&#39;../../../database/users&#39;); // &#128078; what you have\r\n    // OR\r\n    const users = require(&#39;$db/users&#39;); // &#128077; no matter how deep you are\r\n    const products = require(&#39;/database/products&#39;); // &#128077; alias or pathing from root directory\r\n&lt;br/&gt;\r\n\r\n###Three simple steps to solve the issue of ugly path.\r\n1. Install the package: `npm install sexy-require --save`&lt;br/&gt;\r\n2. Include `require(&#39;sexy-require&#39;)` once on the top of your main application file.\r\n\r\n        require(&#39;sexy-require&#39;);\r\n        const routers = require(&#39;/routers&#39;);\r\n        const api = require(&#39;$api&#39;);\r\n        ...\r\n\r\n3. Optional step. Path configuration can be defined in `.paths` file on root directory of your project.\r\n\r\n        $db = /server/database\r\n        $api-v1 = /server/api/legacy\r\n        $api-v2 = /server/api/v2"}], "creation_date": 1335076760, "body_markdown": "Is there a better way than `process.cwd()` to determine the root directory of a running node.js process? Something like the equivalent of `Rails.root`, but for Node.js. I&#39;m looking for something that is as predictable and reliable as possible.", "title": "Determine project root from a running node.js application", "view_count": 166316, "up_vote_count": 192, "answer_count": 15, "link": "https://stackoverflow.com/questions/10265798/determine-project-root-from-a-running-node-js-application", "code_snippet": ["<code>process.cwd()</code>", "<code>Rails.root</code>", "<code>process.env.PWD</code>", "<code>require.main</code>", "<code>module</code>", "<code>require.main === module</code>", "<code>module</code>", "<code>filename</code>", "<code>__filename</code>", "<code>require.main.filename</code>", "<code>var path = require('path');\nvar appDir = path.dirname(require.main.filename);\n</code>", "<code>global</code>", "<code>index.js</code>", "<code>app.js</code>", "<code>// index.js\nvar path = require('path');\nglobal.appRoot = path.resolve(__dirname);\n\n// lib/moduleA/component1.js\nrequire(appRoot + '/lib/moduleB/component2.js');\n</code>", "<code>$ cd /home/demo/\n$ mkdir subdir\n$ echo \"console.log(process.cwd());\" &gt; subdir/demo.js\n$ node subdir/demo.js\n/home/demo\n$ cd subdir\n$ node demo.js\n/home/demo/subdir\n</code>", "<code>var appRoot = require('app-root-path');\nvar myModule = require(appRoot + '/lib/my-module.js');\n</code>", "<code>/var/www/</code>", "<code>~/.nvm/v0.x.x/lib/node/</code>", "<code>node_modules</code>", "<code>APP_ROOT_PATH</code>", "<code>.setPath()</code>", "<code>global</code>", "<code>NODE_PATH</code>", "<code>process.env.NODE_PATH</code>", "<code>require</code>", "<code>NODE_PATH</code>", "<code>/var/www/lib</code>", "<code>require('module2/component.js');\n// ^ looks for /var/www/lib/module2/component.js\n</code>", "<code>npm</code>", "<code>\"scripts\": {\n    \"start\": \"NODE_PATH=. node app.js\"\n}\n</code>", "<code>npm start</code>", "<code>NODE_PATH</code>", "<code>NODE_PATH</code>", "<code>process.env.NODE_PATH = path.resolve(__dirname)</code>", "<code>require.main.filename</code>", "<code>require.main.filename</code>", "<code>path.parse(process.mainModule.filename).dir</code>"], "path": "stack.gulp"}, {"tags": ["node.js"], "creation_date": 1327604262, "body_markdown": "After pulling down a module from GitHub and following the instructions to build it, I try pulling it into an existing project using:\r\n\r\n    &gt; npm install ../faye\r\n\r\nThis appears to do the trick:\r\n\r\n    &gt; npm list\r\n    /home/dave/src/server\r\n    \u2514\u2500\u252c faye@0.7.1\r\n      \u251c\u2500\u2500 cookiejar@1.3.0\r\n      \u251c\u2500\u2500 hiredis@0.1.13\r\n      \u2514\u2500\u2500 redis@0.7.1\r\n\r\nBut Node.js can&#39;t find the module:\r\n\r\n    &gt; node app.js\r\n    node.js:201\r\n            throw e; // process.nextTick error, or &#39;error&#39; event on first tick\r\n                  ^\r\n    Error: Cannot find module &#39;faye&#39;\r\n        at Function._resolveFilename (module.js:334:11)\r\n        at Function._load (module.js:279:25)\r\n        at Module.require (module.js:357:17)\r\n        at require (module.js:368:17)\r\n        at Object.&lt;anonymous&gt; (/home/dave/src/server/app.js:2:12)\r\n        at Module._compile (module.js:432:26)\r\n        at Object..js (module.js:450:10)\r\n        at Module.load (module.js:351:31)\r\n        at Function._load (module.js:310:12)\r\n        at Array.0 (module.js:470:10)\r\n\r\nI really want to understand what is going on here, but I&#39;m at a bit of a loss as to where to look next. Any suggestions?\r\n", "last_edit_date": 1477409082, "up_vote_count": 392, "link": "https://stackoverflow.com/questions/9023672/how-do-i-resolve-cannot-find-module-error-using-node-js", "_childDocuments_": [{"tags": [], "down_vote_count": 10, "creation_date": 1327605300, "answer_id": 9023864, "path": "stack.gulp.answer", "score": 357, "up_vote_count": 367, "is_accepted": true, "last_activity_date": 1464821452, "last_edit_date": 1464821452, "body_markdown": "Using `npm install` installs the module into the current directory only (in a subdirectory called `node_modules`).  Is app.js located under `home/dave/src/server/`?  If not and you want to use the module from any directory, you need to install it globally using `npm install -g`.\r\n\r\nI usually install most packages locally so that they get checked in along with my project code.\r\n\r\n***Update (3/2016):***\r\n\r\nI&#39;ve received a lot of flak for my response, specifically that I check in the packages that my code depends on.  A few days ago, somebody unpublished all of their packages (https://medium.com/@azerbike/i-ve-just-liberated-my-modules-9045c06be67c#.kq9s64clp) which broke React, Babel, and just about everything else.  Hopefully it&#39;s clear now that if you have production code, you can&#39;t rely on NPM actually maintaining your dependencies for you. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1432549812, "answer_id": 30436256, "path": "stack.gulp.answer", "score": 328, "up_vote_count": 328, "is_accepted": false, "last_activity_date": 1477409134, "last_edit_date": 1477409134, "body_markdown": "I had a very similar issue. Removing the entire `node_modules` folder and re-installing worked for me:\r\n\r\n    rm -rf node_modules\r\n    npm install\r\n"}, {"tags": [], "down_vote_count": 41, "creation_date": 1434101203, "answer_id": 30799666, "path": "stack.gulp.answer", "score": -40, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1515829563, "last_edit_date": 1515829563, "body_markdown": "Change the directory and point to your current project folder and then &quot;npm install&quot;.\r\n.\r\n\r\nThis will install all dependencies and modules into your project folder."}, {"tags": [], "down_vote_count": 0, "creation_date": 1434531106, "answer_id": 30886703, "path": "stack.gulp.answer", "score": 61, "up_vote_count": 61, "is_accepted": false, "last_activity_date": 1495833350, "last_edit_date": 1495833350, "body_markdown": "    npm install --save module_name\r\n\r\nFor example, if the error is:\r\n\r\n&gt; { [Error: Cannot find module &#39;/root/.npm/form-data&#39;] code: &#39;MODULE_NOT_FOUND&#39; } \r\n\r\nthen you can resolve this issue by executing the command `npm install --save form-data`.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1438878214, "answer_id": 31861021, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1477409280, "last_edit_date": 1477409280, "body_markdown": "This happens when a first [npm][1] install has crashed for some reason (SIGINT of npm), or that the delay was too long, or data is corrupted.\r\nTrying an npm install again won&#39;t save the problem.\r\n\r\nSomething got wrong on the npm first check, so the best choice is to remove the file and to restart npm install.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Npm_(software)\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1459929181, "answer_id": 36444789, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1459929181, "body_markdown": "I was trying to publish my own package and then include it in another project. I had that issue because of how I&#39;ve built the first module. Im using ES2015 export to create the module, e.g lets say the module looks like that:\r\n\r\n    export default function(who = &#39;world&#39;){\r\n\t    return `Hello ${who}`;\r\n    }\r\n\r\nAfter compiled with Babel and before been published:\r\n\r\n    &#39;use strict&#39;;\r\n\r\n    Object.defineProperty(exports, &quot;__esModule&quot;, {\r\n    \tvalue: true\r\n    });\r\n    \r\n    exports.default = function () {\r\n    \tvar who = arguments.length &lt;= 0 || arguments[0] === undefined ? &#39;world&#39; : arguments[0];\r\n    \r\n    \r\n    \treturn &#39;Hello &#39; + who;\r\n    };\r\n\r\nSo after `npm install module-name` in another project (none ES2015) i had to do\r\n\r\n\r\n`var hello = require(&#39;module-name&#39;).default;`\r\n\r\nTo actually got the package imported.\r\n\r\nHope that helps!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1465558209, "answer_id": 37747145, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1477409551, "last_edit_date": 1477409551, "body_markdown": "If you use nvm, check that existing node_modules that are bindings to other libraries are compiled for the correct Node.js version.\r\n\r\nI was having the same error. The reason was the following: We use nvm since we&#39;re running two apps on a server, one requires Node.js 5.6 because it uses node-gd (which doesn&#39;t run on Node.js 6 for now), the other requires Node.js 6. Node.js 6 is the [apt-get][1] installation.\r\n\r\nAlso we use the pm2 tool to deploy.\r\n\r\nSo, the default setup is that the pm2 process starts when nvm is not in effect, so it uses the apt-get installation of Node.js (version 6). So the main pm2 daemon starts with Node.js 6. If I run applications in fork mode they start in separate processes and nvm settings are in effect. When I run applications in cluster mode - they inherit the non-nvm environment.\r\n\r\nSo when I tried to switch to the cluster mode the application failed to start because the bindings compiled for 5.6 fail with this message.\r\n\r\nI&#39;ve fixed that by restarting pm2 when nvm setings are in effect. Also startup scripts should be fixed.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Advanced_Packaging_Tool#apt-get\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1467789911, "answer_id": 38218364, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1467809073, "last_edit_date": 1467809073, "body_markdown": "Remove your `node_module` root folder from your project(eg: `myApp`).\r\nGo to `myApp` folder and then type below command from terminal\r\n\r\n    &gt;myApp&gt;npm install\r\nIt will install all the dependency modules required for your project."}, {"tags": [], "down_vote_count": 1, "creation_date": 1472114278, "answer_id": 39140450, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1472114278, "body_markdown": "I experienced this error yesterday. Took me a while to realise that the `main` entry in `package.json` was pointing to a file that I&#39;d moved. Once I updated that the error disappeared and the package worked."}, {"tags": [], "down_vote_count": 1, "creation_date": 1473154525, "answer_id": 39345584, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1473154525, "body_markdown": "PRO TIP:\r\n\r\nThis error happened to me, while fighting fatigue and mild illness, because I typed `node blah` instead of `npm blah`.\r\n\r\nThe error message received wasn&#39;t angry enough to alert me to my own folly!"}, {"tags": [], "down_vote_count": 2, "creation_date": 1474630107, "answer_id": 39659673, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1474630107, "last_edit_date": 1495541904, "body_markdown": "First of all, yes, a part of my answer definitely is helpful to solve the **error** that is posted by OP. Secondly, after trying the below step, I faced a couple of other errors, and so, have written the solution of those too.\r\n\r\n***(Psst! I am not sure if I&#39;ve successfully helped in solving the above error, or if I&#39;ve broken some rule or format of answering, but I faced the above error and some others and it took much time for me to find the proper solutions for those errors. I&#39;m writing the complete solution because in case, if someone else also faces these errors, then he&#39;ll hopefully get a solution here.)***\r\n\r\nSo adding to, and elaborating the answer provided by [PrashanthiDevi][1], and also adding my personal experience, here it is:\r\n\r\nI am new to the whole e2e and unit tests part. I started looking into this part from [Protractor][2]. Now I already had the files in which tests were written, but I had to run the tests.\r\n\r\nI had already installed all the required softwares and tools, but when I initially ran the code for running the tests, `gulp itest`, I got this **&#39;Cannot find module&#39; Error**. After going through many different questions on SO, I found one answer that I thought could help getting a solution.\r\n\r\nThe person had suggested to run the command `npm install` in my project folder.\r\n\r\nThe **reason** for doing this was to update the ***node-modules*** folder, inside our project folder, with all the required and necessary files and dependencies.\r\n\r\n*(The below part maybe irrelevant with this question, but might be helpful if anyone came across the same situation that I faced.)*\r\n\r\nThe above step surely **solved** my previous error, but threw a new one! This time the error being **`Could not find chromedriver at &#39;..\\node_modules\\protractor\\selenium\\chromedriver&#39;`**.  \r\n\r\nHowever, the solution of this error was pretty silly (and funny) to me. I already had the chromedriver file in my **selenium** folder. But, turns out that the above error was coming because my **chromedriver** files were inside ***selenium*** folder and **not inside** ***chromedriver*** folder. So, creating a **chromedriver** folder and copying the chromedriver files there solved my problem!\r\n\r\n*Also, for the **error: Timed out waiting for the WebDriver Server**, you could add this **line of code** to **conf.js** file inside `exports.config{}`:* \r\n\r\n`seleniumAddress: &#39;http://localhost:8080/&#39;`\r\n\r\nHope this helps!\r\n\r\n\r\n  [1]: https://stackoverflow.com/users/4424630/prashanthidevi\r\n  [2]: http://www.protractortest.org/"}, {"tags": [], "down_vote_count": 4, "creation_date": 1481043225, "answer_id": 41000701, "path": "stack.gulp.answer", "score": -4, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1481043225, "body_markdown": "I got the simple solution to solve this issue.\r\n\r\nJust remove C:\\Users\\UserName\\AppData\\Roaming\\npm\\\r\n\r\nand then install node. \r\n\r\nNow your problem will be solved."}, {"tags": [], "down_vote_count": 4, "creation_date": 1488112985, "answer_id": 42468645, "path": "stack.gulp.answer", "score": -4, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1495827250, "last_edit_date": 1495827250, "body_markdown": "Run the following command only:\r\n\r\n    npm install\r\n\r\nIt will install all the required modules in the `node_modules` folder.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1492561379, "answer_id": 43484247, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1492562029, "last_edit_date": 1492562029, "body_markdown": "Encountered this problem while using **`webpack`** with **`webpack-dev-middleware`**.\r\n\r\nHad turned a **single file** into a **folder**.\r\n\r\nThe watcher seemed to not see the new folder and the module was now missing.\r\n\r\nFixed by restarting the process."}, {"tags": [], "down_vote_count": 0, "creation_date": 1495138626, "answer_id": 44057063, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1495138626, "body_markdown": "Just found an unusual scenario that may be of use to someone and is sort of a red herring.\r\n\r\nI was also getting the Cannot Find Module error but oddly everything worked perfectly in my local (Mac hosted) Node.js environment. This problem only appeared when the code was deployed on our Linux server.\r\n\r\nWell... it turned out to be a typo that (apparently) the Mac based Node.js installation was perfectly happy to ignore.\r\n\r\nThe include looked like this:\r\n\r\n    var S3Uploader = require(&#39;./S3Uploader.class&#39;);\r\n\r\nBut the actual file was called &quot;s3Uploader.class.js&quot;\r\n\r\nNotice the casing difference in the &#39;s&#39; vs. &#39;S&#39; between the code and the filename.\r\n\r\nSo - in the odd chance that none of the other solutions here are solving your problem, triple check that you&#39;re not mis-casing the characters in your included filename! :)\r\n\r\nand DUH!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1498228212, "answer_id": 44723909, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1498228212, "body_markdown": "This error can be encountered if you are `require`ing a module that has a missing or incorrect `main` field in its package.json. Though the module itself is installed, npm/node has to use a single .js file as an entrypoint to your module. If the `main` field is not there, it defaults to looking for `index.js` in your module&#39;s folder. If your module&#39;s main file is *not* called index.js, it won&#39;t be able to `require` it.\r\n\r\nDiscovered while turning a `browserify`-based module into a CommonJS `require`-able module; `browserify` didn&#39;t care about the missing `main` field, and so the error had gone unnoticed."}, {"tags": [], "down_vote_count": 0, "creation_date": 1499666232, "answer_id": 45004664, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1499666232, "body_markdown": "I can add one more place to check; the package that I was trying to use was another one of my own packages that I had published to a private NPM repo.  I had forgotten to configure the &#39;main&#39; property in the package.json properly.  So, the package was there in the node_modules folder of the consuming package, but I was getting &quot;cannot find module&quot;.  Took me a few minutes to realise my blunder. :-("}, {"tags": [], "down_vote_count": 1, "creation_date": 1503296939, "answer_id": 45790543, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1503296939, "body_markdown": "I faced the same problem when someone else in the team updated `package.json` in SVN. Merely removing the `node_modules` directory did not help.  How I solved the problem is:\r\n\r\n    rm -rf node_modules\r\n    rm package.json\r\n    rm package-lock.json\r\n    svn up\r\n    npm install\r\n    ng build --env=prod\r\n\r\nHope this helps someone!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1504675200, "answer_id": 46067318, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1504675200, "body_markdown": "Specify the path to the restler folder, which will be inside node_modules folder like : var rest = require(&#39;./node_modules/restler&#39;);\r\n\r\nThis worked for me."}, {"tags": [], "down_vote_count": 0, "creation_date": 1507021942, "answer_id": 46541070, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1507021942, "body_markdown": "For TypeScript users, if you are importing a Node module (such as `http` or `url`) and you are getting an error such as `&quot;Cannot find module &quot;x&quot;` then the error can be fixed by running\r\n\r\n    npm install @types/node --save-dev\r\n\r\nThe command will import the NodeJS TypeScript definitions into your project, allowing you to use Node modules."}, {"tags": [], "down_vote_count": 0, "creation_date": 1508327407, "answer_id": 46809487, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1508327407, "body_markdown": "In my case I had `UNMET PEER DEPENDENCY  redux@^3.0.0` causing this error message, see all of them and install missing modules again using --save\r\n\r\n    npm install redux --save"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517678072, "answer_id": 48599905, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1517678539, "last_edit_date": 1517678539, "body_markdown": "Maybe like me you set &#39;view engine&#39; in express to an engine that doesn&#39;t exist, or tried to use an unregistered templating engine.\r\nMake sure that you use:\r\n`\r\napp.engine(&#39;engine name&#39;,engine)\r\napp.set(&#39;view engine&#39;,&#39;engine name&#39;)\r\n`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517888077, "answer_id": 48635059, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1517888077, "body_markdown": "Check if the enviroment variable NODE_PATH is set correctly and pointing to the node_modules path. nodejs uses this variable to search for the libraries"}], "title": "How do I resolve &quot;Cannot find module&quot; error using Node.js?", "view_count": 947315, "answer_count": 23, "code_snippet": ["<code>&gt; npm install ../faye\n</code>", "<code>&gt; npm list\n/home/dave/src/server\n\u2514\u2500\u252c faye@0.7.1\n  \u251c\u2500\u2500 cookiejar@1.3.0\n  \u251c\u2500\u2500 hiredis@0.1.13\n  \u2514\u2500\u2500 redis@0.7.1\n</code>", "<code>&gt; node app.js\nnode.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\nError: Cannot find module 'faye'\n    at Function._resolveFilename (module.js:334:11)\n    at Function._load (module.js:279:25)\n    at Module.require (module.js:357:17)\n    at require (module.js:368:17)\n    at Object.&lt;anonymous&gt; (/home/dave/src/server/app.js:2:12)\n    at Module._compile (module.js:432:26)\n    at Object..js (module.js:450:10)\n    at Module.load (module.js:351:31)\n    at Function._load (module.js:310:12)\n    at Array.0 (module.js:470:10)\n</code>", "<code>node_modules</code>", "<code>app.js</code>", "<code>..</code>", "<code>npm install</code>", "<code>node_modules</code>", "<code>home/dave/src/server/</code>", "<code>npm install -g</code>", "<code>package.json</code>", "<code>node_modules</code>", "<code>npm install</code>", "<code>package.json</code>", "<code>node_modules</code>", "<code>rm -rf node_modules\nnpm install\n</code>", "<code>npm install</code>", "<code>npm update</code>", "<code>Error: Cannot find module 'http-errors'</code>", "<code>npm install</code>", "<code>npm install --save module_name\n</code>", "<code>npm install --save form-data</code>", "<code>ng new project-name</code>", "<code>npm cache clear</code>", "<code>npm install</code>", "<code>node_module</code>", "<code>myApp</code>", "<code>myApp</code>", "<code>&gt;myApp&gt;npm install\n</code>", "<code>http</code>", "<code>url</code>", "<code>\"Cannot find module \"x\"</code>", "<code>npm install @types/node --save-dev\n</code>", "<code>main</code>", "<code>package.json</code>", "<code>node blah</code>", "<code>npm blah</code>", "<code>package.json</code>", "<code>node_modules</code>", "<code>rm -rf node_modules\nrm package.json\nrm package-lock.json\nsvn up\nnpm install\nng build --env=prod\n</code>", "<code>export default function(who = 'world'){\n    return `Hello ${who}`;\n}\n</code>", "<code>'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function () {\n    var who = arguments.length &lt;= 0 || arguments[0] === undefined ? 'world' : arguments[0];\n\n\n    return 'Hello ' + who;\n};\n</code>", "<code>npm install module-name</code>", "<code>var hello = require('module-name').default;</code>", "<code>webpack</code>", "<code>webpack-dev-middleware</code>", "<code>var S3Uploader = require('./S3Uploader.class');\n</code>", "<code>require</code>", "<code>main</code>", "<code>main</code>", "<code>index.js</code>", "<code>require</code>", "<code>browserify</code>", "<code>require</code>", "<code>browserify</code>", "<code>main</code>", "<code>UNMET PEER DEPENDENCY  redux@^3.0.0</code>", "<code>npm install redux --save\n</code>", "<code>\napp.engine('engine name',engine)\napp.set('view engine','engine name')\n</code>", "<code>gulp itest</code>", "<code>npm install</code>", "<code>Could not find chromedriver at '..\\node_modules\\protractor\\selenium\\chromedriver'</code>", "<code>exports.config{}</code>", "<code>seleniumAddress: 'http://localhost:8080/'</code>", "<code>npm install\n</code>", "<code>node_modules</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "coffeescript"], "creation_date": 1290083356, "body_markdown": "On Coffeescript.org:\r\n\r\n    bawbag = (x, y) -&gt;\r\n        z = (x * y)\r\n    \r\n    bawbag(5, 10) \r\n\r\nwould compile to:\r\n\r\n    var bawbag;\r\n    bawbag = function(x, y) {\r\n      var z;\r\n      return (z = (x * y));\r\n    };\r\n    bawbag(5, 10);\r\n\r\ncompiling via coffee-script under node.js wraps that so:\r\n\r\n    (function() {\r\n      var bawbag;\r\n      bawbag = function(x, y) {\r\n        var z;\r\n        return (z = (x * y));\r\n      };\r\n      bawbag(5, 10);\r\n    }).call(this);\r\n\r\nDocs say:\r\n\r\n&gt; If you&#39;d like to create top-level variables for other scripts to use,\r\n&gt; attach them as properties on window, or on the exports object in\r\n&gt; CommonJS. The existential operator (covered below), gives you a\r\n&gt; reliable way to figure out where to add them, if you&#39;re targeting both\r\n&gt; CommonJS and the browser: root = exports ? this\r\n\r\nHow do I define Global Variables then in CoffeeScript. What does &#39;attach them as properties on window&#39; mean?\r\n\r\n\r\n", "last_edit_date": 1453753715, "up_vote_count": 307, "link": "https://stackoverflow.com/questions/4214731/how-do-i-define-global-variables-in-coffeescript", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1290086180, "answer_id": 4215132, "path": "stack.gulp.answer", "score": 415, "up_vote_count": 415, "is_accepted": true, "last_activity_date": 1317265164, "last_edit_date": 1317265164, "body_markdown": "Since coffee script has no `var` statement it automatically inserts it for all variables in the coffee-script, that way it prevents the compiled JavaScript version from leaking everything into the **global namespace**.  \r\n\r\nSo since there&#39;s no way to make something &quot;leak&quot; into the **global namespace** from the coffee-script side of things on purpose, you need to define your global variables as properties of the **global object**.\r\n\r\n&gt; attach them as properties on window\r\n\r\nThis means you need to do something like `window.foo = &#39;baz&#39;;`, which handles the browser case, since there the **global object** is the `window`.\r\n\r\n\r\n## Node.js ##\r\n\r\nIn Node.js there&#39;s no `window` object, instead there&#39;s the `exports` object that gets passed into the wrapper that wraps the Node.js module (See: https://github.com/ry/node/blob/master/src/node.js#L321 ), so in Node.js what you would need to do is `exports.foo = &#39;baz&#39;;`.\r\n  \r\n  \r\nNow let us take a look at what it states in your quote from the docs:  \r\n&gt; ...targeting both CommonJS and the browser: root = exports ? this\r\n\r\nThis is obviously coffee-script, so let&#39;s take a look into what this actually compiles to:  \r\n\r\n    var root;\r\n    root = (typeof exports !== &quot;undefined&quot; &amp;&amp; exports !== null) ? exports : this;\r\n\r\nFirst it will check whether `exports` is defined, since trying to reference a non existent variable in JavaScript would otherwise yield an SyntaxError (except when it&#39;s used with `typeof`)\r\n\r\nSo if `exports` exists, which is the case in Node.js (or in a badly written WebSite...) root will point to `exports`, otherwise to `this`. So what&#39;s `this`?\r\n\r\n    (function() {...}).call(this);\r\n\r\nUsing `.call` on a function will bind the `this` inside the function to the first parameter passed, in case of the browser `this` would now be the `window` object, in case of Node.js it would be the **global context** which is also available as the `global` object.  \r\n\r\nBut since you have the `require` function in Node.js, there&#39;s no need to assign something to the `global` object in Node.js, instead you assign to the `exports` object which then gets returned by the `require` function.\r\n\r\n\r\n## Coffee-Script ##\r\n\r\nAfter all that explanation, here&#39;s what you need to do:  \r\n\r\n    root = exports ? this\r\n    root.foo = -&gt; &#39;Hello World&#39;\r\n\r\nThis will declare our function `foo` in the global namespace (whatever that happens to be).  \r\nThat&#39;s all :)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1290229637, "answer_id": 4231330, "path": "stack.gulp.answer", "score": 33, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1290229637, "body_markdown": "Ivo nailed it, but I&#39;ll mention that there is one dirty trick you can use, though I don&#39;t recommend it if you&#39;re going for style points: You can embed JavaScript code directly in your CoffeeScript by escaping it with backticks.\r\n\r\nHowever, here&#39;s why this is usually a bad idea: The CoffeeScript compiler is unaware of those variables, which means they won&#39;t obey normal CoffeeScript scoping rules. So,\r\n\r\n    `foo = &#39;bar&#39;`\r\n    foo = &#39;something else&#39;\r\n\r\ncompiles to\r\n\r\n    foo = &#39;bar&#39;;\r\n    var foo = &#39;something else&#39;;\r\n\r\nand now you&#39;ve got yourself two `foo`s in different scopes. There&#39;s no way to modify the *global* `foo` from CoffeeScript code without referencing the global object, as Ivy described.\r\n\r\nOf course, this is only a problem if you make an assignment to `foo` in CoffeeScript\u2014if `foo` became read-only after being given its initial value (i.e. it&#39;s a global constant), then the embedded JavaScript solution approach might be kinda sorta acceptable (though still not recommended)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1314427755, "answer_id": 7212970, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1314427755, "body_markdown": "You can pass -b option when you compile code via coffee-script under node.js.\r\nThe compiled code will be the same as on coffeescript.org."}, {"tags": [], "down_vote_count": 3, "creation_date": 1315993239, "answer_id": 7414232, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1315993239, "last_edit_date": 1495541426, "body_markdown": "To add to [Ivo Wetzel&#39;s answer](https://stackoverflow.com/questions/4214731/coffeescript-global-variables/4215132#4215132)\r\n\r\nThere seems to be a shorthand syntax for `exports ? this` that I can only find documented/mentioned on a [Google group posting](https://groups.google.com/forum/#!msg/coffeescript/PzNU0NtVY2c/zu_3kaG4nV4J).\r\n\r\nI.e. in a web page to make a function available globally you declare the function again with an `@` prefix:\r\n\r\n    &lt;script type=&quot;text/coffeescript&quot;&gt;\r\n        @aglobalfunction = aglobalfunction = () -&gt;\r\n             alert &quot;Hello!&quot;\r\n    &lt;/script&gt;\r\n\r\n    &lt;a href=&quot;javascript:aglobalfunction()&quot; &gt;Click me!&lt;/a&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1340974397, "answer_id": 11262161, "path": "stack.gulp.answer", "score": 56, "up_vote_count": 57, "is_accepted": false, "last_activity_date": 1340974397, "body_markdown": "To me it seems @atomicules has the simplest answer, but I think it can be simplified a little more. You need to put an `@` before anything you want to be global, so that it compiles to `this.anything` and `this` refers to the global object.\r\n\r\n### so...\r\n\r\n    @bawbag = (x, y) -&gt;\r\n        z = (x * y)\r\n    \r\n    bawbag(5, 10)\r\n\r\n### compiles to...\r\n\r\n    this.bawbag = function(x, y) {\r\n      var z;\r\n      return z = x * y;\r\n    };\r\n    bawbag(5, 10);\r\n\r\n### and works inside and outside of the wrapper given by node.js\r\n\r\n    (function() {\r\n        this.bawbag = function(x, y) {\r\n          var z;\r\n          return z = x * y;\r\n        };\r\n        console.log(bawbag(5,13)) // works here\r\n    }).call(this);\r\n    \r\n    console.log(bawbag(5,11)) // works here"}, {"tags": [], "down_vote_count": 0, "creation_date": 1392235953, "answer_id": 21738607, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1402762616, "last_edit_date": 1402762616, "body_markdown": "I think what you are trying to achieve can simply be done like this :\r\n\r\nWhile you are compiling the coffeescript, use the &quot;-b&quot; parameter.\r\n\r\n`-b` / `--bare` _Compile the JavaScript without the top-level function safety wrapper._\r\n\r\nSo something like this : `coffee -b --compile somefile.coffee whatever.js`\r\n\r\nThis will output your code just like in the CoffeeScript.org site.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1450497065, "answer_id": 34367083, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1450497065, "body_markdown": "If you&#39;re a bad person (I&#39;m a bad person.), you can get as simple as this: `(-&gt;@)()`\r\n\r\nAs in,\r\n\r\n    (-&gt;@)().im_a_terrible_programmer = yes\r\n    console.log im_a_terrible_programmer\r\n\r\n----\r\n\r\nThis works, because when invoking a `Reference` to a `Function` \u2018bare\u2019 (that is, `func()`, instead of `new func()` or `obj.func()`), something commonly referred to as the \u2018function-call invocation pattern\u2019, *always* binds `this` to the global object for that [execution context](http://www.ecma-international.org/ecma-262/6.0/#sec-execution-contexts).\r\n\r\nThe CoffeeScript above simply compiles to `(function(){ return this })()`; so we&#39;re exercising that behavior to reliably access the global object."}, {"tags": [], "down_vote_count": 0, "creation_date": 1475496293, "answer_id": 39831175, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1475496293, "body_markdown": "Since coffeescript is rarely used on it&#39;s own, you can use `global` variable supplied by either node.js or browserify (and any descendants like coffeeify, gulp build scripts, etc).\r\n\r\nIn node.js `global` is global namespace.\r\n\r\nIn browserify `global` is equal to `window`.\r\n\r\nSo, just:\r\n&lt;!-- language: lang-coffee --&gt;\r\n\r\n    somefunc = -&gt;\r\n      global.variable = 123\r\n\r\n\r\n"}], "title": "How do I define global variables in CoffeeScript?", "view_count": 115123, "answer_count": 8, "code_snippet": ["<code>bawbag = (x, y) -&gt;\n    z = (x * y)\n\nbawbag(5, 10) \n</code>", "<code>var bawbag;\nbawbag = function(x, y) {\n  var z;\n  return (z = (x * y));\n};\nbawbag(5, 10);\n</code>", "<code>(function() {\n  var bawbag;\n  bawbag = function(x, y) {\n    var z;\n    return (z = (x * y));\n  };\n  bawbag(5, 10);\n}).call(this);\n</code>", "<code>window</code>", "<code>exports</code>", "<code>window</code>", "<code>global</code>", "<code>var</code>", "<code>window.foo = 'baz';</code>", "<code>window</code>", "<code>window</code>", "<code>exports</code>", "<code>exports.foo = 'baz';</code>", "<code>var root;\nroot = (typeof exports !== \"undefined\" &amp;&amp; exports !== null) ? exports : this;\n</code>", "<code>exports</code>", "<code>typeof</code>", "<code>exports</code>", "<code>exports</code>", "<code>this</code>", "<code>this</code>", "<code>(function() {...}).call(this);\n</code>", "<code>.call</code>", "<code>this</code>", "<code>this</code>", "<code>window</code>", "<code>global</code>", "<code>require</code>", "<code>global</code>", "<code>exports</code>", "<code>require</code>", "<code>root = exports ? this\nroot.foo = -&gt; 'Hello World'\n</code>", "<code>foo</code>", "<code>global</code>", "<code>GLOBAL</code>", "<code>root</code>", "<code>ReferenceError</code>", "<code>(exports ? this).foo = -&gt; 'Hello World'</code>", "<code>global = exports ? this</code>", "<code>this</code>", "<code>global</code>", "<code>this</code>", "<code>@</code>", "<code>this.anything</code>", "<code>this</code>", "<code>@bawbag = (x, y) -&gt;\n    z = (x * y)\n\nbawbag(5, 10)\n</code>", "<code>this.bawbag = function(x, y) {\n  var z;\n  return z = x * y;\n};\nbawbag(5, 10);\n</code>", "<code>(function() {\n    this.bawbag = function(x, y) {\n      var z;\n      return z = x * y;\n    };\n    console.log(bawbag(5,13)) // works here\n}).call(this);\n\nconsole.log(bawbag(5,11)) // works here\n</code>", "<code>this</code>", "<code>window.myVariable</code>", "<code>=&gt;</code>", "<code>-&gt;</code>", "<code>`foo = 'bar'`\nfoo = 'something else'\n</code>", "<code>foo = 'bar';\nvar foo = 'something else';\n</code>", "<code>foo</code>", "<code>foo</code>", "<code>foo</code>", "<code>foo</code>", "<code>foo</code>", "<code>var</code>", "<code>var</code>", "<code>expect = require('chai').expect;</code>", "<code>expect</code>", "<code>-b</code>", "<code>--bare</code>", "<code>coffee</code>", "<code>exports ? this</code>", "<code>@</code>", "<code>&lt;script type=\"text/coffeescript\"&gt;\n    @aglobalfunction = aglobalfunction = () -&gt;\n         alert \"Hello!\"\n&lt;/script&gt;\n\n&lt;a href=\"javascript:aglobalfunction()\" &gt;Click me!&lt;/a&gt;\n</code>", "<code>-b</code>", "<code>--bare</code>", "<code>coffee -b --compile somefile.coffee whatever.js</code>", "<code>(-&gt;@)()</code>", "<code>(-&gt;@)().im_a_terrible_programmer = yes\nconsole.log im_a_terrible_programmer\n</code>", "<code>Reference</code>", "<code>Function</code>", "<code>func()</code>", "<code>new func()</code>", "<code>obj.func()</code>", "<code>this</code>", "<code>(function(){ return this })()</code>", "<code>global</code>", "<code>global</code>", "<code>global</code>", "<code>window</code>", "<code>somefunc = -&gt;\n  global.variable = 123\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "debugging", "google-chrome-devtools"], "creation_date": 1260917407, "body_markdown": "How do I debug a Node.js server application?\r\n\r\nRight now I&#39;m mostly using *alert debugging* with print statements like this:\r\n\r\n    sys.puts(sys.inspect(someVariable));\r\n\r\nThere must be a better way to debug. I know that [Google Chrome][1] has a command-line debugger. Is this debugger available for Node.js as well?\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Google_Chrome\r\n", "last_edit_date": 1450606743, "up_vote_count": 1335, "link": "https://stackoverflow.com/questions/1911015/how-do-i-debug-node-js-applications", "_childDocuments_": [{"tags": [], "down_vote_count": 4, "creation_date": 1269853026, "answer_id": 2536734, "path": "stack.gulp.answer", "score": 197, "up_vote_count": 201, "is_accepted": true, "last_activity_date": 1463570036, "last_edit_date": 1463570036, "body_markdown": "The [V8][1] debugger released as part of the Google [Chrome Developer Tools][2] can be used to debug Node.js scripts. A detailed explanation of how this works can be found in the [Node.js GitHub wiki][3].\r\n\r\n&lt;strike&gt;There is also [ndb][4], a command line debugger written in Node.js itself.&lt;/strike&gt;\r\n\r\n  [1]: http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\r\n  [2]: http://code.google.com/p/chromedevtools/\r\n  [3]: https://github.com/nodejs/node/wiki/Using-Eclipse-as-Node-Applications-Debugger\r\n  [4]: http://github.com/smtlaissezfaire/ndb\r\n"}, {"tags": [], "down_vote_count": 11, "creation_date": 1287163022, "answer_id": 3944507, "path": "stack.gulp.answer", "score": 1152, "up_vote_count": 1163, "is_accepted": false, "last_activity_date": 1452698584, "last_edit_date": 1452698584, "body_markdown": "[node-inspector][1] could save the day! Use it from any browser supporting [WebSocket][2]. Breakpoints, profiler, livecoding, etc... It is really awesome.\r\n\r\nInstall it with:\r\n\r\n    npm install -g node-inspector\r\n\r\nThen run:\r\n\r\n    node-debug app.js\r\n\r\n  [1]: http://github.com/dannycoates/node-inspector\r\n  [2]: http://en.wikipedia.org/wiki/WebSocket\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1295140853, "answer_id": 4703227, "path": "stack.gulp.answer", "score": 81, "up_vote_count": 82, "is_accepted": false, "last_activity_date": 1356108963, "last_edit_date": 1356108963, "body_markdown": "Node.js version 0.3.4+ has built-in debugging support.\r\n\r\n`node debug script.js`\r\n\r\nManual: http://nodejs.org/api/debugger.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1299871793, "answer_id": 5277424, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1483496706, "last_edit_date": 1483496706, "body_markdown": "There is built-in command line [debugger client][2] within Node.js. Cloud 9 IDE have also pretty nice (visual) [debugger][1].\r\n\r\n\r\n  [1]: https://nodejs.org/api/debugger.html\r\n  [2]: https://c9.io/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1331171212, "answer_id": 9611848, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1407871781, "last_edit_date": 1407871781, "body_markdown": "If you need a powerful logging library for Node.js, [Tracer https://github.com/baryon/tracer](https://github.com/baryon/tracer) is a better choice.\r\n\r\nIt outputs log messages with a timestamp, file name, method name, line number, path or call stack, support color console, and support database, file, stream transport easily. I am the author.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1336056133, "answer_id": 10433719, "path": "stack.gulp.answer", "score": 51, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1407875163, "last_edit_date": 1407875163, "body_markdown": "I personally use [JetBrains WebStorm](http://www.jetbrains.com/webstorm/) as it&#39;s the only JavaScript IDE that I&#39;ve found which is great for both frontend and backend JavaScript.\r\n\r\nIt works on multiple OS&#39;s and has Node.js debugging built-in (as well as a ton of other stuff](http://www.jetbrains.com/webstorm/features/index.html).\r\n\r\nMy only &#39;issues&#39;/wishlist items &lt;del&gt;are&lt;/del&gt; **were**:\r\n\r\n 1. &lt;del&gt;It seems to be more resource hungry on Mac than Windows&lt;/del&gt; It no longer seems an issue in version 6.\r\n 2. &lt;del&gt;It would be nice if it had Snippet support (like those of [Sublime Text 2](http://vimeo.com/41216114) - i.e. type &#39;fun&#39; and tap &#39;tab&#39; to put in a function.&lt;/del&gt; See @WickyNilliams comment below - With Live Templates you also have snippet support.\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1367198436, "answer_id": 16269962, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1407875294, "last_edit_date": 1407875294, "body_markdown": "Assuming you have node-inspector installed on your computer (if not, just type &#39;npm install -g node-inspector&#39;) you just have to run:\r\n\r\n    node-inspector &amp; node --debug-brk scriptFileName.js\r\n\r\nAnd paste the URI from the command line into a WebKit (Chrome / Safari) browser."}, {"tags": [], "down_vote_count": 6, "creation_date": 1368394653, "answer_id": 16512303, "path": "stack.gulp.answer", "score": 645, "up_vote_count": 651, "is_accepted": false, "last_activity_date": 1463177923, "last_edit_date": 1463177923, "body_markdown": "## Debugging\r\n\r\n- [Joyent&#39;s Guide](http://www.joyent.com/developers/node/debug)\r\n- [Debugger](https://nodejs.org/api/debugger.html)\r\n- [Node Inspector](https://github.com/node-inspector/node-inspector)\r\n- [Visual Studio Code](https://code.visualstudio.com/docs/runtimes/nodejs#_debugging-your-node-application)\r\n- [Cloud9](https://docs.c9.io/running_and_debugging_code.html)\r\n- [Brackets](https://github.com/adobe-research/theseus)\r\n\r\n\r\n## Profiling\r\n\r\n1. `node --prof ./app.js`\r\n2. `node --prof-process ./the-generated-log-file`\r\n\r\n\r\n## Heapdumps\r\n\r\n- [node-heapdump with Chrome Developer Tools](https://github.com/bnoordhuis/node-heapdump)\r\n\r\n\r\n## Flamegraphs\r\n\r\n- [0x](https://github.com/davidmarkclements/0x)\r\n- [jam3/devtool](https://github.com/jam3/devtool) then [Chrome Developer Tools Flame Charts](https://youtu.be/g0g4ML4nhPg)\r\n- [Dtrace](http://dtrace.org/) and [StackVis](https://github.com/joyent/node-stackvis) \u2014 [Only supported on SmartOS](http://blog.nodejs.org/2012/04/25/profiling-node-js/)\r\n\r\n\r\n## Tracing\r\n\r\n- [Interactive Stack Traces with TraceGL](https://github.com/traceglMPL/tracegl)\r\n\r\n\r\n## Logging\r\n\r\nLibraries that output debugging information\r\n\r\n- [Caterpillar](https://github.com/bevry/caterpillar)\r\n- [Tracer](https://github.com/baryon/tracer)\r\n\r\nLibraries that enhance stack trace information\r\n\r\n- [Longjohn](https://github.com/mattinsler/longjohn)\r\n\r\n\r\n## Benchmarking\r\n\r\n- [Apache Bench](http://httpd.apache.org/docs/2.2/programs/ab.html): `ab -n 100000 -c 1 http://127.0.0.1:9778/`\r\n- [wrk](https://github.com/wg/wrk)\r\n\r\n\r\n## Other\r\n\r\n- [Trace](https://trace.risingstack.com)\r\n- [Vantage](https://github.com/dthree/vantage)\r\n- [Bugger](https://github.com/buggerjs/bugger)\r\n- [Google Tracing Framework](http://google.github.io/tracing-framework)\r\n- [Paul Irish&#39;s Guide](https://github.com/paulirish/automated-chrome-profiling)\r\n\r\n\r\n## Legacy\r\n\r\nThese use to work but are no longer maintained or no longer applicable to modern node versions.\r\n\r\n- https://github.com/bnoordhuis/node-profiler - replaced by built-in debugging\r\n- https://github.com/c4milo/node-webkit-agent - replaced by node inspector\r\n- https://nodetime.com/ - defunct"}, {"tags": [], "down_vote_count": 1, "creation_date": 1368570082, "answer_id": 16553810, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 36, "is_accepted": false, "last_activity_date": 1392768671, "last_edit_date": 1392768671, "body_markdown": "[Theseus](https://github.com/adobe-research/theseus) is a project by Adobe research which lets you debug your Node.js code in their Open Source editor [Brackets](https://github.com/adobe/brackets). It has some interesting features like real-time code coverage, retroactive inspection, asynchronous call tree.\r\n\r\n\r\n![screenshot][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/ZXwGD.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1385058677, "answer_id": 20129136, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1385058677, "body_markdown": "I put together a short [Node.js debugging primer](http://www.habdas.org/node-js-debugging-primer/) on using the [node-inspector](https://github.com/node-inspector/node-inspector) for those who aren&#39;t sure where to get started."}, {"tags": [], "down_vote_count": 0, "creation_date": 1388640279, "answer_id": 20876848, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1450607644, "last_edit_date": 1450607644, "body_markdown": "There is the new open-source [Nodeclipse][1] project (as a Eclipse plugin or [Enide Studio][2]):\r\n\r\n![](http://www.nodeclipse.org/img/Nodeclipse-1-debugging.png)\r\n\r\nNodeclipse became #1 in [Eclipse Top 10 NEW Plugins for 2013][3]. It uses a modified [V8][4] debugger (from Google Chrome Developer Tools for Java).\r\n\r\nNodeclipse is free open-source software [released at the start of every month][5].\r\n\r\n  [1]: http://www.nodeclipse.org/\r\n  [2]: http://sourceforge.net/projects/nodeclipse/files/\r\n  [3]: http://www.eclipse.org/community/eclipse_newsletter/2013/december/article2.php\r\n  [4]: http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\r\n  [5]: http://www.nodeclipse.org/history\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1391563625, "answer_id": 21566954, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1450607723, "last_edit_date": 1450607723, "body_markdown": "Just for completeness:\r\n\r\nThe [PyCharm 3.0 + Node.js Plugin offers an awesome development + run + debug experience][1].\r\n\r\n  [1]: http://www.jetbrains.com/pycharm/webhelp/running-and-debugging-node-js.html#d91029e423\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1394601029, "answer_id": 22342505, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1450607768, "last_edit_date": 1450607768, "body_markdown": "I would use [GOOD][1] by Walmart Labs. It will do the job, and it&#39;s very flexible:\r\n\r\n    var hapi = require(&#39;hapi&#39;);\r\n    var good = require(&#39;good&#39;);\r\n    var server = hapi.createServer(&#39;localhost&#39;, 5000,{});\r\n    server.route({SOME ROUTE HERE});\r\n    server.start();\r\n\r\n    var options = {\r\n    subscribers: {\r\n        &#39;console&#39;:               [&#39;ops&#39;, &#39;request&#39;, &#39;log&#39;, &#39;error&#39;],\r\n        &#39;http://localhost/logs&#39;: [&#39;log&#39;]\r\n        }\r\n    };\r\n    server.pack.require(&#39;good&#39;, options, function (err) {\r\n\r\n        if (!err) {\r\n            console.log(&#39;Plugin loaded successfully&#39;);\r\n        }\r\n    });\r\n\r\n  [1]: https://github.com/spumko/good\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1399033811, "answer_id": 23428240, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1407875633, "last_edit_date": 1407875633, "body_markdown": "[Node.js Tools for Visual Studio][1] 2012 or 2013 includes a debugger.  The overview [here][2] states &quot;Node.js Tools for Visual Studio includes complete support for debugging node apps.&quot;. Being new to Node.js, but having a background in .NET, I&#39;ve found this add in to be a great way to debug Node.js applications. \r\n\r\n  [1]: https://nodejstools.codeplex.com/\r\n  [2]: http://www.hanselman.com/blog/IntroducingNodejsToolsForVisualStudio.aspx\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1399478007, "answer_id": 23522589, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1399478007, "body_markdown": "    node-debug -p 8888 scriptFileName.js\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1418138561, "answer_id": 27382532, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1422233472, "last_edit_date": 1422233472, "body_markdown": "I created a neat little tool called [pry.js](https://github.com/blainesch/pry.js) that can help you out.\r\n\r\nPut a simple statement somewhere in your code, run your script normally and node will halt the current thread giving you access to all your variables and functions. View/edit/delete them at will!\r\n\r\n    pry = require(&#39;pryjs&#39;)\r\n\r\n    class FizzBuzz\r\n\r\n      run: -&gt;\r\n        for i in [1..100]\r\n          output = &#39;&#39;\r\n          eval(pry.it) # magic\r\n          output += &quot;Fizz&quot; if i % 3 is 0\r\n          output += &quot;Buzz&quot; if i % 5 is 0\r\n          console.log output || i\r\n\r\n      bar: -&gt;\r\n        10\r\n\r\n    fizz = new FizzBuzz()\r\n    fizz.run()"}, {"tags": [], "down_vote_count": 1, "creation_date": 1427688275, "answer_id": 29338226, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1450607831, "last_edit_date": 1450607831, "body_markdown": "If you are using the [Atom IDE][1], you can install the `node-debugger` package.\r\n\r\n  [1]: https://atom.io/packages/node-debugger\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1431627639, "answer_id": 30244550, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1450607963, "last_edit_date": 1450607963, "body_markdown": "A quick-and-dirty way to debug small Node.js scripts with your favorite **browser debugger** would be to use **browserify**. Note that this approach doesn&#39;t work with any applications which require native I/O libraries, but it is good enough for most small scripts.\r\n\r\n    $ npm install -g browserify\r\n\r\nNow move all your ```var x = requires(&#39;x&#39;)``` calls into a ```requires.js``` file and run:\r\n\r\n    $ browserify requires.js -s window -o bundle.js\r\n\r\n(The downside here is that you either have to move or comment the `requires` in all your files.)\r\n\r\nInclude the ```bundle.js``` in an HTML file like so:\r\n\r\n    &lt;script type=&quot;text/javascript&quot; src=&quot;bundle.js&quot;&gt;&lt;/script&gt;\r\n\r\nNow load the file in your browser and press &lt;kbd&gt;F12&lt;/kbd&gt; and viola: debug in browser.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1437318604, "answer_id": 31502652, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1454336196, "last_edit_date": 1486566285, "body_markdown": "I wrote a different approach to debug Node.js code which is stable and is extremely simple. It is available at https://github.com/s-a/iron-node.\r\n\r\n![Enter image description here][1]\r\n\r\nAn opensource cross-platform visual debugger.\r\n\r\nInstallation:\r\n\r\n```npm install iron-node -g;```\r\n\r\nDebug:\r\n\r\n```iron-node yourscript.js;```\r\n\r\n  [1]: https://s-a.github.io/iron-node/iron-node-demo.gif\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1438745682, "answer_id": 31823021, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1438745682, "body_markdown": "[IntelliJ][1] works wonderfully for Node.js.\r\n\r\nIn addition, IntelliJ supports &#39;Code Assistance&#39; well.\r\n\r\n\r\n  [1]: https://www.jetbrains.com/idea/features/nodejs.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1441757302, "answer_id": 32469033, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1450608117, "last_edit_date": 1450608117, "body_markdown": "[Visual Studio Code][1] has really nice Node.js debugging support. It is free, open source and cross-platform and runs on Linux, OS&amp;nbsp;X and Windows.\r\n\r\nYou can even debug [grunt and gulp tasks][2], should you need to...\r\n\r\n  [1]: https://code.visualstudio.com/\r\n  [2]: https://hansrwindhoff.wordpress.com/debugging-task-runner-tasks-like-gulp-with-visual-studio-code-editordebugger/\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1442331202, "answer_id": 32590087, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1496917685, "last_edit_date": 1496917685, "body_markdown": "A lot of great answers here, but I&#39;d like to add my view (based on how my approach evolved)\r\n\r\n## Debug Logs\r\n\r\nLet&#39;s face it, we all love a good `console.log(&#39;Uh oh, if you reached here, you better run.&#39;)` and sometimes that works great, so if you&#39;re reticent to move too far away from it at least add some bling to your logs with [Visionmedia&#39;s debug][1]. \r\n\r\n## Interactive Debugging\r\n\r\nAs handy as console logging can be, to debug professionally you need to roll up your sleeves and get stuck in. Set breakpoints, step through your code, inspect scopes and variables to see what&#39;s causing that weird behaviour. As others have mentioned, [node-inspector][3] really is the bees-knees. It does everything you can do with the built-in debugger, but using that familiar Chrome DevTools interface.\r\nIf, like me, you use **Webstorm**, then [here][4] is a handy guide to debugging from there.\r\n\r\n## Stack Traces\r\n\r\nBy default, we can&#39;t trace a series of operations across different cycles of the event loop (ticks). To get around this have a look at [longjohn][5] (but not in production!).\r\n\r\n## Memory Leaks\r\n\r\nWith Node.js we can have a server process expected to stay up for considerable time. What do you do if you think it has sprung some nasty leaks? Use [heapdump][6] and Chrome DevTools to compare some snapshots and see what&#39;s changing.\r\n\r\n\r\n----------\r\n\r\n\r\nFor some useful articles, check out\r\n\r\n* [RisingStack - Debugging Node.js Applications](https://blog.risingstack.com/node-hero-node-js-debugging-tutorial/)\r\n* [Excellent article by David Mark Clements of nearForm](http://www.nearform.com/nodecrunch/working-node-need-know/#more-3125)\r\n\r\nIf you feel like watching a video(s) then\r\n\r\n* [Netflix JS Talks - Debugging Node.js in Production](https://www.youtube.com/watch?v=O1YP8QP9gLA)\r\n* [Interesting video](https://www.youtube.com/watch?v=xaKU6VRmdag) from [the tracing working group](https://nodejs.org/en/about/working-groups/#tracing) on tracing and debugging node.js\r\n* [Really informative 15-minute video on node-inspector](https://www.youtube.com/watch?v=03qGA-GJXjI)\r\n\r\n\r\nWhatever path you choose, just be sure you understand how you are debugging\r\n\r\n[![enter image description here][7]][7]\r\n\r\n&gt; It is a painful thing  \r\n&gt; To look at your own trouble and know  \r\n&gt; That you yourself and no one else has made it  \r\n&gt;   \r\n&gt;  *Sophocles, Ajax*\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/debug\r\n  [2]: https://en.wikipedia.org/wiki/Microservices\r\n  [3]: https://www.npmjs.com/package/node-inspector\r\n  [4]: https://www.jetbrains.com/webstorm/help/running-and-debugging-node-js.html#d186741e208\r\n  [5]: https://www.npmjs.com/package/longjohn\r\n  [6]: https://www.npmjs.com/package/heapdump\r\n  [7]: http://i.stack.imgur.com/hBTOr.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1448353597, "answer_id": 33888671, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1450608426, "last_edit_date": 1450608426, "body_markdown": "The [NetBeans][1] IDE has had Node.js support since [version 8.1][2]:\r\n\r\n&gt; &lt;...&gt;\r\n&gt;\r\n&gt; # New Feature Highlights\r\n&gt;\r\n&gt; ## Node.js Application Development\r\n&gt; * New Node.js project wizard\r\n&gt; * New Node.js Express wizard\r\n&gt; * Enhanced JavaScript Editor\r\n&gt; * New support for running Node.js applications\r\n&gt; * New support for debugging Node.js applications.\r\n&gt;\r\n&gt; &lt;...&gt;\r\n\r\nAdditional references:\r\n\r\n1. [NetBeans Wiki / NewAndNoteworthyNB81][3].\r\n2. [Node.js Express App in NetBeans IDE, Geertjan-Oracle][4].\r\n\r\n  [1]: http://en.wikipedia.org/wiki/NetBeans\r\n  [2]: https://netbeans.org/community/releases/81/\r\n  [3]: http://wiki.netbeans.org/NewAndNoteworthyNB81\r\n  [4]: https://blogs.oracle.com/geertjan/entry/express_js_in_netbeans_ide\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1455877300, "answer_id": 35502852, "path": "stack.gulp.answer", "score": 45, "up_vote_count": 45, "is_accepted": false, "last_activity_date": 1474815820, "last_edit_date": 1474815820, "body_markdown": "***[Visual Studio Code][1]*** will be my choice for debugging. No overhead of installing any tools or `npm install` stuff.\r\nJust set the starting point of your app in package.json and VSCode will automatically create a configuration file inside your solution. It&#39;s build on [Electron][2], on which editors like Atom are built.\r\n\r\n&gt; VS Code gives similar debugging experience as you might have\r\n&gt; had in other IDEs like VS, Eclipse, etc.\r\n\r\n[![enter image description here][3]][3]\r\n[![enter image description here][4]][4]\r\n\r\n\r\n  [1]: https://code.visualstudio.com/\r\n  [2]: http://electron.atom.io/\r\n  [3]: http://i.stack.imgur.com/gxSUW.png\r\n  [4]: http://i.stack.imgur.com/f0lks.gif"}, {"tags": [], "down_vote_count": 0, "creation_date": 1469474023, "answer_id": 38575730, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1469474023, "body_markdown": "Use Webstorm! It&#39;s perfect for debugging Node.js applications. It has a built-in debugger. Check out the docs here: https://www.jetbrains.com/help/webstorm/2016.1/running-and-debugging-node-js.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1473864694, "answer_id": 39493551, "path": "stack.gulp.answer", "score": 140, "up_vote_count": 140, "is_accepted": false, "last_activity_date": 1493027209, "last_edit_date": 1493027209, "body_markdown": "# Node has its own [built in][1] GUI debugger as of version 6.3 (using Chrome&#39;s DevTools)\r\n[![Nodes builtin GUI debugger][3]][3]\r\n\r\nSimply pass the inspector flag and you&#39;ll be provided with a URL to the inspector:\r\n\r\n    node --inspect server.js\r\n\r\nYou can also break on the first line by passing `--inspect-brk` instead.\r\n\r\n\r\nTo open a Chrome window automatically, use the [inspect-process][4] module.\r\n\r\n    # install inspect-process globally\r\n    npm install -g inspect-process\r\n    \r\n    # start the debugger with inspect\r\n    inspect script.js\r\n\r\n\r\n  [1]: https://nodejs.org/api/debugger.html#debugger_v8_inspector_integration_for_node_js\r\n  [3]: http://i.stack.imgur.com/eZAzW.png\r\n  [4]: https://github.com/jaridmargolin/inspect-process\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484979209, "answer_id": 41776292, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1485008353, "last_edit_date": 1485008353, "body_markdown": "There are many possibilities...\r\n\r\n- [node][1] includes a [debugging utility][1]\r\n- [node-inspector][2]\r\n- Code editors / IDEs (see debug instructions for one of the following)\r\n   - [Atom][3], \r\n   - [VSCode][4]\r\n   - [Webstorm][5]\r\n   - and more\r\n\r\nDebug support is often implemented using the [v8 Debugging Protocol][6] or the newer [Chrome Debugging Protocol][7].\r\n\r\n\r\n  [1]: https://nodejs.org/api/debugger.html\r\n  [2]: https://github.com/node-inspector/node-inspector\r\n  [3]: https://atom.io/packages/node-debugger\r\n  [4]: https://code.visualstudio.com/Docs/editor/debugging\r\n  [5]: https://www.jetbrains.com/help/webstorm/2016.3/running-and-debugging-node-js.html\r\n  [6]: https://github.com/v8/v8/wiki/Debugging-Protocol\r\n  [7]: https://developer.chrome.com/devtools/docs/debugger-protocol"}, {"tags": [], "down_vote_count": 0, "creation_date": 1508061740, "answer_id": 46753808, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1508061740, "body_markdown": "[Visual Studio Code][1] will work for us in debugging.\r\n\r\n\r\n  [1]: https://code.visualstudio.com/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1518203132, "answer_id": 48712507, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1518203132, "body_markdown": "\r\nStart your node process with **--inspect** flag.\r\n\r\n`node --inspect index.js`\r\n\r\nand then Open `chrome://inspect` in chrome. Click the &quot;Open dedicated DevTools for Node&quot; link or install [this][1] chrome extension for easily opening chrome DevTools.\r\n\r\nFor more info refer to [this][2] link\r\n\r\n\r\n  [1]: https://chrome.google.com/webstore/detail/nim-node-inspector-manage/gnhhdgbaldcilmgcpfddgdbkhjohddkj\r\n[2]: https://nodejs.org/en/docs/inspector/"}], "title": "How do I debug Node.js applications?", "view_count": 457804, "answer_count": 29, "code_snippet": ["<code>sys.puts(sys.inspect(someVariable));\n</code>", "<code>npm install -g node-inspector\n</code>", "<code>node-debug app.js\n</code>", "<code>node --prof ./app.js</code>", "<code>node --prof-process ./the-generated-log-file</code>", "<code>ab -n 100000 -c 1 http://127.0.0.1:9778/</code>", "<code>look</code>", "<code>https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.fitvuaumt</code>", "<code>node --inspect server.js\n</code>", "<code>--inspect-brk</code>", "<code># install inspect-process globally\nnpm install -g inspect-process\n\n# start the debugger with inspect\ninspect script.js\n</code>", "<code>nodemon</code>", "<code>nodemon --inspect</code>", "<code>node debug script.js</code>", "<code>--debug</code>", "<code>debug</code>", "<code>--debug</code>", "<code>debug</code>", "<code>npm install</code>", "<code>console.log('Uh oh, if you reached here, you better run.')</code>", "<code>npm install iron-node -g;</code>", "<code>iron-node yourscript.js;</code>", "<code>node-debugger</code>", "<code>pry = require('pryjs')\n\nclass FizzBuzz\n\n  run: -&gt;\n    for i in [1..100]\n      output = ''\n      eval(pry.it) # magic\n      output += \"Fizz\" if i % 3 is 0\n      output += \"Buzz\" if i % 5 is 0\n      console.log output || i\n\n  bar: -&gt;\n    10\n\nfizz = new FizzBuzz()\nfizz.run()\n</code>", "<code>node-inspector &amp; node --debug-brk scriptFileName.js\n</code>", "<code>node --inspect index.js</code>", "<code>chrome://inspect</code>", "<code>$ npm install -g browserify\n</code>", "<code>var x = requires('x')</code>", "<code>requires.js</code>", "<code>$ browserify requires.js -s window -o bundle.js\n</code>", "<code>requires</code>", "<code>bundle.js</code>", "<code>&lt;script type=\"text/javascript\" src=\"bundle.js\"&gt;&lt;/script&gt;\n</code>", "<code>node-debug -p 8888 scriptFileName.js\n</code>", "<code>var hapi = require('hapi');\nvar good = require('good');\nvar server = hapi.createServer('localhost', 5000,{});\nserver.route({SOME ROUTE HERE});\nserver.start();\n\nvar options = {\nsubscribers: {\n    'console':               ['ops', 'request', 'log', 'error'],\n    'http://localhost/logs': ['log']\n    }\n};\nserver.pack.require('good', options, function (err) {\n\n    if (!err) {\n        console.log('Plugin loaded successfully');\n    }\n});\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "internet-explorer", "internet-explorer-9"], "creation_date": 1318434277, "body_markdown": "IE9 Bug - JavaScript only works after opening developer tools once.\r\n\r\nOur site offers free pdf downloads to users, and it has a simple &quot;enter password to download&quot; function. However, it doesn&#39;t work at all in Internet Explorer. \r\n\r\nYou can see for yourself in this [example][1].\r\n\r\nThe download pass is &quot;makeuseof&quot;. In any other browser, it works fine. In IE, both buttons do nothing. \r\n\r\nThe most curious thing I&#39;ve found is that if you open and close the developer toolbar with F12, it all suddenly starts to work. \r\n\r\nWe&#39;ve tried compatibility mode and such, nothing makes a difference.\r\n\r\nHow do I make this work in Internet Explorer?\r\n\r\n\r\n  [1]: http://www.makeuseof.com/pages/how-to-use-virtual-box", "last_edit_date": 1470370474, "up_vote_count": 602, "link": "https://stackoverflow.com/questions/7742781/why-does-javascript-only-work-after-opening-developer-tools-in-ie-once", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1318434665, "answer_id": 7742862, "path": "stack.gulp.answer", "score": 775, "up_vote_count": 775, "is_accepted": true, "last_activity_date": 1318434665, "body_markdown": "It sounds like you might have some debugging code in your javascript.\r\n\r\nThe experience you&#39;re describing is typical of code which contain `console.log()` or any of the other `console` functionality.\r\n\r\nThe `console` object is only activated when the Dev Toolbar is opened. Prior to that, calling the console object will result in it being reported as `undefined`. After the toolbar has been opened, the console will exist (even if the toolbar is subsequently closed), so your console calls will then work.\r\n\r\nThere are a few solutions to this:\r\n\r\nThe most obvious one is to go through your code removing references to `console`. You shouldn&#39;t be leaving stuff like that in production code anyway.\r\n\r\nIf you want to keep the console references, you could wrap them in an `if()` statement, or some other conditional which checks whether the console object exists before trying to call it.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1334928224, "answer_id": 10247139, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1359918407, "last_edit_date": 1359918407, "body_markdown": "I guess this could help, adding this before any tag of javascript:\r\n\r\n    try{\r\n      console\r\n    }catch(e){\r\n       console={}; console.log = function(){};\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1346960390, "answer_id": 12307201, "path": "stack.gulp.answer", "score": 61, "up_vote_count": 61, "is_accepted": false, "last_activity_date": 1359918373, "last_edit_date": 1359918373, "body_markdown": "This solved my problem after I made a minor change to it. I added the following in my html page in order to fix the IE9 problem:\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n        // IE9 fix\r\n        if(!window.console) {\r\n            var console = {\r\n                log : function(){},\r\n                warn : function(){},\r\n                error : function(){},\r\n                time : function(){},\r\n                timeEnd : function(){}\r\n            }\r\n        }\r\n    &lt;/script&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1347011902, "answer_id": 12315859, "path": "stack.gulp.answer", "score": 157, "up_vote_count": 157, "is_accepted": false, "last_activity_date": 1410356927, "last_edit_date": 1410356927, "body_markdown": "[HTML5 Boilerplate][1] has a nice pre-made code for console problems fixing:\r\n\r\n    // Avoid `console` errors in browsers that lack a console.\r\n    (function() {\r\n        var method;\r\n        var noop = function () {};\r\n        var methods = [\r\n            &#39;assert&#39;, &#39;clear&#39;, &#39;count&#39;, &#39;debug&#39;, &#39;dir&#39;, &#39;dirxml&#39;, &#39;error&#39;,\r\n            &#39;exception&#39;, &#39;group&#39;, &#39;groupCollapsed&#39;, &#39;groupEnd&#39;, &#39;info&#39;, &#39;log&#39;,\r\n            &#39;markTimeline&#39;, &#39;profile&#39;, &#39;profileEnd&#39;, &#39;table&#39;, &#39;time&#39;, &#39;timeEnd&#39;,\r\n            &#39;timeStamp&#39;, &#39;trace&#39;, &#39;warn&#39;\r\n        ];\r\n        var length = methods.length;\r\n        var console = (window.console = window.console || {});\r\n\r\n        while (length--) {\r\n            method = methods[length];\r\n\r\n            // Only stub undefined methods.\r\n            if (!console[method]) {\r\n                console[method] = noop;\r\n            }\r\n        }\r\n    }());\r\n\r\nAs @plus- pointed in comments, latest version is available on their [GitHub page][2]\r\n\r\n\r\n  [1]: http://html5boilerplate.com\r\n  [2]: https://github.com/h5bp/html5-boilerplate/blob/master/src/js/plugins.js"}, {"tags": [], "down_vote_count": 0, "creation_date": 1401384247, "answer_id": 23939247, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1401384247, "body_markdown": "Besides the &#39;`console`&#39; usage issue mentioned in accepted answer and others,there is at least another reason why sometimes pages in Internet Explorer work only with the developer tools activated.\r\n\r\nWhen Developer Tools is enabled, IE doesn&#39;t really uses its HTTP cache (at least by default in IE 11) like it does in normal mode.\r\n\r\nIt means if your site or page has a caching problem (if it caches more than it should for example - that was my case), you will not see that problem in F12 mode. So if the javascript does some cached AJAX requests, they may not work as expected in normal mode, and work fine in F12 mode."}, {"tags": [], "down_vote_count": 0, "creation_date": 1404745721, "answer_id": 24613875, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1404745721, "last_edit_date": 1495542877, "body_markdown": "I got yet another alternative for the solutions offered by [runeks][1] and [todotresde][2] that also avoids the pitfalls discussed in the comments to [Spudley][3]&#39;s answer:\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(message);\r\n\t\t\t} catch (e) {\r\n\t\t\t}\r\n\r\nIt&#39;s a bit scruffy but on the other hand it&#39;s concise and covers all the logging methods covered in [runeks][1]&#39; answer and it has the huge advantage that you can open the console window of IE at any time and the logs come flowing in.\r\n  [1]: https://stackoverflow.com/a/12307201/1845976\r\n  [2]: https://stackoverflow.com/a/10247139/1845976\r\n  [3]: https://stackoverflow.com/a/7742862/1845976"}, {"tags": [], "down_vote_count": 0, "creation_date": 1407360486, "answer_id": 25170531, "path": "stack.gulp.answer", "score": 134, "up_vote_count": 134, "is_accepted": false, "last_activity_date": 1407360486, "body_markdown": "Here&#39;s another possible reason besides the `console.log` issue (at least in IE11):\r\n\r\nWhen the console is not open, IE does pretty aggressive caching, so make sure that any `$.ajax` calls or `XMLHttpRequest` calls have caching set to false.\r\n\r\nFor example:\r\n\r\n    $.ajax({cache: false, ...})\r\n\r\nWhen the developer console is open, caching is less aggressive. Seems to be a bug (or maybe a feature?)\r\n\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1408041441, "answer_id": 25315277, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1506690869, "last_edit_date": 1506690869, "body_markdown": "If you are using AngularJS version 1.X you could use the $log service instead of using console.log directly.\r\n\r\n&gt; Simple service for logging. Default implementation safely writes the message into the browser&#39;s console (if present).\r\n\r\n[https://docs.angularjs.org/api/ng/service/$log][1]\r\n\r\nSo if you have something similar to\r\n\r\n&lt;!-- language-all: lang-js --&gt;\r\n\r\n    angular.module(&#39;logExample&#39;, [])\r\n      .controller(&#39;LogController&#39;, [&#39;$scope&#39;, function($scope) {\r\n        console.log(&#39;Hello World!&#39;);\r\n     }]);\r\n\r\nyou can replace it with\r\n\r\n    angular.module(&#39;logExample&#39;, [])\r\n      .controller(&#39;LogController&#39;, [&#39;$scope&#39;, &#39;$log&#39;, function($scope, $log) {\r\n        $log.log(&#39;Hello World!&#39;);\r\n     }]);\r\n\r\nAngular 2+ [does not have any built-in log service][2].\r\n\r\n  [1]: https://docs.angularjs.org/api/ng/service/$log\r\n  [2]: https://github.com/angular/angular/issues/5458"}, {"tags": [], "down_vote_count": 0, "creation_date": 1430409788, "answer_id": 29972569, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1430409788, "body_markdown": "It happened in IE 11 for me. And I was calling the jquery .load function.\r\nSo I did it the old fashion way and put something in the url to disable cacheing.\r\n\r\n    $(&quot;#divToReplaceHtml&quot;).load(&#39;@Url.Action(&quot;Action&quot;, &quot;Controller&quot;)/&#39; + @Model.ID + &quot;?nocache=&quot; + new Date().getTime());"}, {"tags": [], "down_vote_count": 0, "creation_date": 1471509821, "answer_id": 39013625, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1471509821, "body_markdown": "If you are using `angular` and ie `9, 10` or `edge` use :\r\n\r\n    myModule.config([&#39;$httpProvider&#39;, function($httpProvider) {\r\n        //initialize get if not there\r\n        if (!$httpProvider.defaults.headers.get) {\r\n            $httpProvider.defaults.headers.get = {};    \r\n        }    \r\n    \r\n        // Answer edited to include suggestions from comments\r\n        // because previous version of code introduced browser-related errors\r\n    \r\n        //disable IE ajax request caching\r\n        $httpProvider.defaults.headers.get[&#39;If-Modified-Since&#39;] = &#39;Mon, 26 Jul 1997 05:00:00 GMT&#39;;\r\n        // extra\r\n        $httpProvider.defaults.headers.get[&#39;Cache-Control&#39;] = &#39;no-cache&#39;;\r\n        $httpProvider.defaults.headers.get[&#39;Pragma&#39;] = &#39;no-cache&#39;;\r\n    }]);\r\nTo completely disable `cache`."}, {"tags": [], "down_vote_count": 0, "creation_date": 1500556464, "answer_id": 45215864, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1500556464, "body_markdown": "We ran into this problem on IE 11 on Windows 7 and Windows 10. We discovered what exactly the problem was by turning on debugging capabilities for IE (IE &gt; Internet Options &gt; Advanced tab &gt; Browsing &gt; Uncheck *Disable script debugging (Internet Explorer)*). This feature is typically checked on within our environment by the domain admins.\r\n\r\nThe problem was because we were using the `console.debug(...)` method within our JavaScript code. The assumption made by the developer (me) was I did not want anything written if the client Developer Tools console was not explicitly open. While Chrome and Firefox seemed to agree with this strategy, IE 11 did not like it one bit. By changing all the `console.debug(...)` statements to `console.log(...)` statements, we were able to continue to log additional information in the client console and view it when it was open, but otherwise keep it hidden from the typical user."}, {"tags": [], "down_vote_count": 0, "creation_date": 1515311600, "answer_id": 48135327, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1515312620, "last_edit_date": 1515312620, "body_markdown": "I put the resolution and fix for my issue . Looks like AJAX request that I put inside my javascript was not processing because my page was having some cache problem. if your site or page has a caching problem you will not see that problem in developers/F12 mode. my cached javascript AJAX requests it may not work as expected and cause the execution to break which F12 has no problem at all.\r\nSo just added new parameter to make cache false.\r\n\r\n    $.ajax({\r\n                   cache: false,\r\n    });\r\n\r\nLooks like IE specifically needs this to be false so that the AJAX and javascript activity run well.\r\n"}], "title": "Why does JavaScript only work after opening developer tools in IE once?", "view_count": 132914, "answer_count": 12, "code_snippet": ["<code>gulp-strip-debug</code>", "<code>console.*</code>", "<code>console</code>", "<code>console.log()</code>", "<code>console</code>", "<code>console</code>", "<code>undefined</code>", "<code>console</code>", "<code>if()</code>", "<code>if(!console) {console={}; console.log = function(){};}</code>", "<code>if(!console)</code>", "<code>if(!window.console)</code>", "<code>// Avoid `console` errors in browsers that lack a console.\n(function() {\n    var method;\n    var noop = function () {};\n    var methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n        'timeStamp', 'trace', 'warn'\n    ];\n    var length = methods.length;\n    var console = (window.console = window.console || {});\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n}());\n</code>", "<code>src</code>", "<code>console.log</code>", "<code>$.ajax</code>", "<code>XMLHttpRequest</code>", "<code>$.ajax({cache: false, ...})\n</code>", "<code>&lt;script type=\"text/javascript\"&gt;\n    // IE9 fix\n    if(!window.console) {\n        var console = {\n            log : function(){},\n            warn : function(){},\n            error : function(){},\n            time : function(){},\n            timeEnd : function(){}\n        }\n    }\n&lt;/script&gt;\n</code>", "<code>console</code>", "<code>try{\n  console\n}catch(e){\n   console={}; console.log = function(){};\n}\n</code>", "<code>try catch</code>", "<code>if (typeof console == 'undefined')</code>", "<code>angular.module('logExample', [])\n  .controller('LogController', ['$scope', function($scope) {\n    console.log('Hello World!');\n }]);\n</code>", "<code>angular.module('logExample', [])\n  .controller('LogController', ['$scope', '$log', function($scope, $log) {\n    $log.log('Hello World!');\n }]);\n</code>", "<code>$(\"#divToReplaceHtml\").load('@Url.Action(\"Action\", \"Controller\")/' + @Model.ID + \"?nocache=\" + new Date().getTime());\n</code>", "<code>        try {\n            console.log(message);\n        } catch (e) {\n        }\n</code>", "<code>angular</code>", "<code>9, 10</code>", "<code>edge</code>", "<code>myModule.config(['$httpProvider', function($httpProvider) {\n    //initialize get if not there\n    if (!$httpProvider.defaults.headers.get) {\n        $httpProvider.defaults.headers.get = {};    \n    }    \n\n    // Answer edited to include suggestions from comments\n    // because previous version of code introduced browser-related errors\n\n    //disable IE ajax request caching\n    $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\n    // extra\n    $httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';\n    $httpProvider.defaults.headers.get['Pragma'] = 'no-cache';\n}]);\n</code>", "<code>cache</code>", "<code>console.debug(...)</code>", "<code>console.debug(...)</code>", "<code>console.log(...)</code>", "<code>$.ajax({\n               cache: false,\n});\n</code>"], "path": "stack.gulp"}, {"tags": ["angularjs", "html5", "angular-routing"], "creation_date": 1368633622, "body_markdown": "I want to enable HTML5 mode for my app. I have put the following code for the configuration, as shown [here](http://docs.angularjs.org/guide/dev_guide.services.$location):\r\n\r\n    return app.config([&#39;$routeProvider&#39;,&#39;$locationProvider&#39;, function($routeProvider,$locationProvider) {\r\n\r\n\t\t$locationProvider.html5Mode(true);\r\n\t\t$locationProvider.hashPrefix = &#39;!&#39;;\r\n\r\n\t\t$routeProvider.when(&#39;/&#39;, {\r\n\t\t\ttemplateUrl: &#39;/views/index.html&#39;,\r\n\t\t\tcontroller: &#39;indexCtrl&#39;\r\n\t\t});\r\n\t\t$routeProvider.when(&#39;/about&#39;,{\r\n\t\t\ttemplateUrl: &#39;/views/about.html&#39;,\r\n\t\t\tcontroller: &#39;AboutCtrl&#39;\r\n\t\t});\r\n\r\nAs you can see, I used the `$locationProvider.html5mode` and I changed all my links at the ng-ref to exclude the `/#/`.\r\n\r\nThe Problem\r\n-------------------\r\n\r\nAt the moment, I can go to `localhost:9000/` and see the index page and navigate to the other pages like `localhost:9000/about`. \r\n\r\nHowever, the problem occurs when I refresh the `localhost:9000/about` page. I get the following output: `Cannot GET /about`\r\n\r\nIf I look at the network calls:\r\n\r\n    Request URL:localhost:9000/about\r\n    Request Method:GET\r\n\r\nWhile if I first go to `localhost:9000/` and then click on a button that navigates to `/about` I get:\r\n\r\n    Request URL:http://localhost:9000/views/about.html\r\n\r\nWhich renders the page perfectly. \r\n\r\n**How can I enable angular to get the correct page when I refresh?**\r\n", "last_edit_date": 1514214544, "up_vote_count": 181, "link": "https://stackoverflow.com/questions/16569841/reloading-the-page-gives-wrong-get-request-with-angularjs-html5-mode", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1368635739, "answer_id": 16570499, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1368635739, "body_markdown": "I believe your issue is with regards to the server.  The angular documentation with regards to HTML5 mode (at the link in your question) states:\r\n\r\nServer side\r\nUsing this mode requires URL rewriting on server side, basically you have to rewrite all your links to entry point of your application (e.g. index.html)\r\n\r\nI believe you&#39;ll need to setup a url rewrite from /about to /."}, {"tags": [], "down_vote_count": 1, "creation_date": 1368635863, "answer_id": 16570533, "path": "stack.gulp.answer", "score": 95, "up_vote_count": 96, "is_accepted": true, "last_activity_date": 1457367402, "last_edit_date": 1457367402, "body_markdown": "From the [angular docs](https://docs.angularjs.org/guide/$location)\r\n\r\n&gt; **Server side**  \r\n&gt; Using this mode requires URL rewriting on server side, basically you have to rewrite all your links to entry point of your application (e.g. index.html)\r\n\r\nThe reason for this is that when you first visit the page (`/about`), e.g. after a refresh, the browser has no way of knowing that this isn&#39;t a real URL, so it goes ahead and loads it. However if you have loaded up the root page first, and all the javascript code, then when you navigate to `/about ` Angular can get in there before the browser tries to hit the server and handle it accordingly"}, {"tags": [], "down_vote_count": 0, "creation_date": 1371546526, "answer_id": 17164877, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1371546526, "body_markdown": "I wrote a simple connect middleware for simulating url-rewriting on grunt projects. https://gist.github.com/muratcorlu/5803655\r\n\r\nYou can use like that:\r\n\r\n    module.exports = function(grunt) {\r\n      var urlRewrite = require(&#39;grunt-connect-rewrite&#39;);\r\n    \r\n      // Project configuration.\r\n      grunt.initConfig({\r\n        connect: {\r\n          server: {\r\n            options: {\r\n              port: 9001,\r\n              base: &#39;build&#39;,\r\n              middleware: function(connect, options) {\r\n                // Return array of whatever middlewares you want\r\n                return [\r\n                  // redirect all urls to index.html in build folder\r\n                  urlRewrite(&#39;build&#39;, &#39;index.html&#39;),\r\n    \r\n                  // Serve static files.\r\n                  connect.static(options.base),\r\n    \r\n                  // Make empty directories browsable.\r\n                  connect.directory(options.base)\r\n                ];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    };"}, {"tags": [], "down_vote_count": 0, "creation_date": 1376411731, "answer_id": 18214539, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 32, "is_accepted": false, "last_activity_date": 1376439666, "last_edit_date": 1376439666, "body_markdown": "I had a similar problem and I solved it by: \r\n\r\n - Using `&lt;base href=&quot;/index.html&quot;&gt;` in the index page\r\n\r\n - Using a catch all route middleware in my node/Express server as follows (put it after the router):\r\n\r\n&lt;!-- language: lang-js--&gt;\r\n\r\n    app.use(function(req, res) {\r\n        res.sendfile(__dirname + &#39;/Public/index.html&#39;);\r\n    });\r\n\r\n\r\nI think that should get you up and running.\r\n\r\nIf you use an apache server, you might want to mod_rewrite your links. It is not difficult to do. Just a few changes in the config files.\r\n\r\nAll that is assuming you have html5mode enabled on angularjs.\r\nNow. note that in angular 1.2, declaring a base url is not recommended anymore actually."}, {"tags": [], "down_vote_count": 1, "creation_date": 1389695275, "answer_id": 21111163, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1389695275, "body_markdown": "I have found even better Grunt plugin, that works if you have your index.html and Gruntfile.js in the same directory;\r\n\r\n    https://npmjs.org/package/grunt-connect-pushstate\r\n\r\nAfter that in your Gruntfile:\r\n\r\n     var pushState = require(&#39;grunt-connect-pushstate/lib/utils&#39;).pushState;\r\n\r\n\r\n        connect: {\r\n        server: {\r\n          options: {\r\n            port: 1337,\r\n            base: &#39;&#39;,\r\n            logger: &#39;dev&#39;,\r\n            hostname: &#39;*&#39;,\r\n            open: true,\r\n            middleware: function (connect, options) {\r\n              return [\r\n                // Rewrite requests to root so they may be handled by router\r\n                pushState(),\r\n                // Serve static files\r\n                connect.static(options.base)\r\n              ];\r\n            }\r\n          },\r\n        }\r\n    },"}, {"tags": [], "down_vote_count": 1, "creation_date": 1391032822, "answer_id": 21443576, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1391032822, "body_markdown": "We had a server redirect in Express:\r\n\r\n    app.get(&#39;*&#39;, function(req, res){\r\n        res.render(&#39;index&#39;);\r\n    });\r\n    \r\nand we were still getting page-refresh issues, even after we added the `&lt;base href=&quot;/&quot; /&gt;`.\r\n\r\nSolution: make sure you&#39;re using real links in you page to navigate; don&#39;t type in the route in the URL or you&#39;ll get a page-refresh. (silly mistake, I know)\r\n\r\n:-P"}, {"tags": [], "down_vote_count": 0, "creation_date": 1394656406, "answer_id": 22363166, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1394656406, "body_markdown": "You need to configure your server to rewrite everything to index.html to load the app:\r\n\r\nhttps://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#wiki-how-to-configure-your-server-to-work-with-html5mode"}, {"tags": [], "down_vote_count": 0, "creation_date": 1396283859, "answer_id": 22767248, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1396283859, "body_markdown": "I&#39;ve had the same issue before, on refreshing the pages, the browser would send its adress bar&#39;s value to the server, which would obviously fail (ever since it`s a rewritten adress.)\r\n\r\nYou should complete your URL reqwritting logic on the server side also. See the link below, it&#39;s the best example I found on how to do this and it worked fine for me : &lt;br/&gt;&lt;br/&gt;\r\nhttps://github.com/bdunklau/LittleBlueBird/wiki/URL-Rewriting-and-HTML5-in-AngularJS\r\n\r\nBasically you just have to refirect all request to your main page contents container (index.html in most cases). "}, {"tags": [], "down_vote_count": 0, "creation_date": 1404266138, "answer_id": 24521746, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1404266138, "body_markdown": "As others have mentioned, you need to rewrite routes on the server and set `&lt;base href=&quot;/&quot;/&gt;`.\r\n\r\nFor `gulp-connect`:\r\n\r\n`npm install connect-pushstate`\r\n\r\n    var gulp = require(&#39;gulp&#39;),\r\n      connect = require(&#39;gulp-connect&#39;),\r\n      pushState = require(&#39;connect-pushstate/lib/pushstate&#39;).pushState;\r\n    ...\r\n    connect.server({\r\n      ...\r\n      middleware: function (connect, options) {\r\n        return [\r\n          pushState()\r\n        ];\r\n      }\r\n      ...\r\n    })\r\n    ...."}, {"tags": [], "down_vote_count": 0, "creation_date": 1411316761, "answer_id": 25961313, "path": "stack.gulp.answer", "score": 58, "up_vote_count": 58, "is_accepted": false, "last_activity_date": 1411316761, "last_edit_date": 1495540968, "body_markdown": "There are few things to set up so your link in the browser will look like `http://yourdomain.com/path` and these are your angular config + server side\r\n\r\n**1) AngularJS**\r\n\r\n    $routeProvider\r\n      .when(&#39;/path&#39;, {\r\n        templateUrl: &#39;path.html&#39;,\r\n      });\r\n    $locationProvider\r\n      .html5Mode(true);\r\n\r\n**2) server side,** just put `.htaccess` inside your root folder and paste this\r\n\r\n    RewriteEngine On \r\n    Options FollowSymLinks\r\n    \r\n    RewriteBase /\r\n    \r\n    RewriteCond %{REQUEST_FILENAME} !-f\r\n    RewriteCond %{REQUEST_FILENAME} !-d\r\n    RewriteRule ^(.*)$ /#/$1 [L]\r\n\r\nMore interesting stuff to read about html5 mode in angularjs and the configuration required per different environment https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-configure-your-server-to-work-with-html5mode\r\nAlso this question might help you https://stackoverflow.com/questions/16677528/location-switching-between-html5-and-hashbang-mode-link-rewriting\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1417709523, "answer_id": 27298679, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1417709523, "body_markdown": "If you are working locally, you can use: connect-modrewrite\r\n\r\nSee this tutorial:\r\nhttp://ericduran.io/2013/05/31/angular-html5Mode-with-yeoman/\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1424335818, "answer_id": 28601954, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1424335818, "body_markdown": "I solved to \r\n\r\n    test: {\r\n            options: {\r\n              port: 9000,\r\n              base: [\r\n                &#39;.tmp&#39;,\r\n                &#39;test&#39;,\r\n                &#39;&lt;%= yeoman.app %&gt;&#39;\r\n              ],\r\n             middleware: function (connect) {\r\n                      return [\r\n                          modRewrite([&#39;^[^\\\\.]*$ /index.html [L]&#39;]),\r\n                          connect.static(&#39;.tmp&#39;),\r\n                          connect().use(\r\n                              &#39;/bower_components&#39;,\r\n                              connect.static(&#39;./bower_components&#39;)\r\n                          ),\r\n                          connect.static(&#39;app&#39;)\r\n                      ];\r\n                  }\r\n            }\r\n          },"}, {"tags": [], "down_vote_count": 0, "creation_date": 1424526499, "answer_id": 28646534, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1424526499, "body_markdown": "    I solved same problem using modRewrite.  \r\n    AngularJS is reload page when after # changes.  \r\n    But HTML5 mode remove # and invalid the reload.  \r\n    So we should reload manually.\r\n    # install connect-modrewrite\r\n        $ sudo npm install connect-modrewrite --save\r\n    \r\n    # gulp/build.js\r\n        &#39;use strict&#39;;\r\n        var gulp = require(&#39;gulp&#39;);\r\n        var paths = gulp.paths;\r\n        var util = require(&#39;util&#39;);\r\n        var browserSync = require(&#39;browser-sync&#39;);\r\n        var modRewrite  = require(&#39;connect-modrewrite&#39;);\r\n        function browserSyncInit(baseDir, files, browser) {\r\n            browser = browser === undefined ? &#39;default&#39; : browser;\r\n            var routes = null;\r\n            if(baseDir === paths.src || (util.isArray(baseDir) &amp;&amp; baseDir.indexOf(paths.src) !== -1)) {\r\n                routes = {\r\n                    &#39;/bower_components&#39;: &#39;bower_components&#39;\r\n                };\r\n            }\r\n        \r\n            browserSync.instance = browserSync.init(files, {\r\n                startPath: &#39;/&#39;,\r\n                server: {\r\n                baseDir: baseDir,\r\n                middleware: [\r\n                    modRewrite([\r\n                        &#39;!\\\\.\\\\w+$ /index.html [L]&#39;\r\n                    ])\r\n                ],\r\n                routes: routes\r\n                },\r\n                browser: browser\r\n            });\r\n        }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1431693139, "answer_id": 30259643, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1431693139, "body_markdown": "I am using apache (xampp) on my dev environment and apache on the production,\r\nadd:\r\n\r\n    errorDocument 404 /index.html\r\nto the .htaccess solve for me this issue."}, {"tags": [], "down_vote_count": 0, "creation_date": 1433773069, "answer_id": 30711626, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1433773069, "body_markdown": "Solution for BrowserSync and Gulp.\r\n\r\nFrom https://github.com/BrowserSync/browser-sync/issues/204#issuecomment-102623643\r\n\r\nFirst install `connect-history-api-fallback`:\r\n\r\n    npm --save-dev install connect-history-api-fallback\r\n\r\nThen add it to your gulpfile.js:\r\n\r\n    var historyApiFallback = require(&#39;connect-history-api-fallback&#39;);\r\n\r\n    gulp.task(&#39;serve&#39;, function() {\r\n      browserSync.init({\r\n        server: {\r\n          baseDir: &quot;app&quot;,\r\n          middleware: [ historyApiFallback() ]\r\n        }\r\n      });\r\n    });"}, {"tags": [], "down_vote_count": 0, "creation_date": 1442963081, "answer_id": 32728430, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1462371203, "last_edit_date": 1462371203, "body_markdown": "If you are in .NET stack with MVC with AngularJS, this is what you have to do to remove the &#39;#&#39;  from url: \r\n\r\n 1. Set up your base href in your _Layout page: `&lt;head&gt; &lt;base href=&quot;/&quot;&gt; &lt;/head&gt;`\r\n\r\n 2. Then, add following in your angular app config : `$locationProvider.html5Mode(true)`\r\n\r\n 3. Above will remove &#39;#&#39; from url but page refresh won&#39;t work e.g. if you are in &quot;yoursite.com/about&quot; page refresh will give you a 404. This is because MVC does not know about angular routing and by MVC pattern it will look for a MVC page for &#39;about&#39; which does not exists in MVC routing path. Workaround for this is to send all MVC page request to a single MVC view and you can do that by adding a route that catches all url\r\n\r\n\r\n----------\r\n\r\n\r\n    routes.MapRoute(\r\n    \t\tname: &quot;App&quot;,\r\n    \t\turl: &quot;{*url}&quot;,\r\n    \t\tdefaults: new { controller = &quot;Home&quot;, action = &quot;Index&quot; }\r\n    \t);"}, {"tags": [], "down_vote_count": 0, "creation_date": 1446041175, "answer_id": 33393230, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1446041175, "body_markdown": "I had the same problem with **java** + angular app generated with **JHipster**. \r\nI solved it with Filter and list of all angular pages in properties:  \r\n  \r\n**application.yml:**\r\n\r\n    angular-pages:\r\n      - login\r\n      - settings\r\n    ...\r\n\r\n**AngularPageReloadFilter.java**\r\n \r\n    public class AngularPageReloadFilter implements Filter {\r\n    \t@Override\r\n    \tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\r\n    \t\trequest.getRequestDispatcher(&quot;index.html&quot;).forward(request, response);\r\n    \t}\r\n    }\r\n\r\n**WebConfigurer.java**\r\n\r\n    private void initAngularNonRootRedirectFilter(ServletContext servletContext,\r\n                                                  EnumSet&lt;DispatcherType&gt; disps) {\r\n        log.debug(&quot;Registering angular page reload Filter&quot;);\r\n        FilterRegistration.Dynamic angularRedirectFilter =\r\n                servletContext.addFilter(&quot;angularPageReloadFilter&quot;,\r\n                        new AngularPageReloadFilter());\r\n        int index = 0;\r\n        while (env.getProperty(&quot;angular-pages[&quot; + index + &quot;]&quot;) != null) {\r\n            angularRedirectFilter.addMappingForUrlPatterns(disps, true, &quot;/&quot; + env.getProperty(&quot;angular-pages[&quot; + index + &quot;]&quot;));\r\n            index++;\r\n        }\r\n        angularRedirectFilter.setAsyncSupported(true);\r\n    }\r\n\r\nHope, it will be helpful for somebody."}, {"tags": [], "down_vote_count": 0, "creation_date": 1453689501, "answer_id": 34984284, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1453689501, "body_markdown": "**Gulp + browserSync:**\r\n\r\nInstall connect-history-api-fallback via npm, later config your serve gulp task\r\n\r\n    var historyApiFallback = require(&#39;connect-history-api-fallback&#39;);\r\n    \r\n    gulp.task(&#39;serve&#39;, function() {\r\n      browserSync.init({\r\n        proxy: {\r\n                target: &#39;localhost:&#39; + port,\r\n                middleware: [ historyApiFallback() ]\r\n            }\r\n      });\r\n    });"}, {"tags": [], "down_vote_count": 1, "creation_date": 1455934364, "answer_id": 35518312, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1456068154, "last_edit_date": 1456068154, "body_markdown": "I&#39;m answering this question from the larger question:\r\n&gt;When I add $locationProvider.html5Mode(true), my site will not allow pasting of urls. How do I configure my server to work when html5Mode is true?\r\n\r\nWhen you have html5Mode enabled, the # character will no longer be used in your urls. The # symbol is useful because it requires no server side configuration. Without #, the url looks much nicer, but it also requires server side rewrites. Here are some examples:\r\n\r\nFor Express Rewrites with AngularJS, you can solve this with the following updates:\r\n\r\n    app.get(&#39;/*&#39;, function(req, res) {\r\n\tres.sendFile(path.join(__dirname + &#39;/public/app/views/index.html&#39;));\r\n    });\r\n\r\nand \r\n\r\n    &lt;!-- FOR ANGULAR ROUTING --&gt;\r\n    &lt;base href=&quot;/&quot;&gt;\r\nand\r\n\r\n    app.use(&#39;/&#39;,express.static(__dirname + &#39;/public&#39;));\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1469497949, "answer_id": 38579920, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1469497949, "body_markdown": "**IIS URL Rewrite Rule to prevent 404 error after page refresh in html5mode**\r\n\r\nFor angular running under IIS on Windows\r\n\r\n\t&lt;rewrite&gt;\r\n\t  &lt;rules&gt;\r\n\t\t&lt;rule name=&quot;AngularJS&quot; stopProcessing=&quot;true&quot;&gt;\r\n\t\t  &lt;match url=&quot;.*&quot; /&gt;\r\n\t\t  &lt;conditions logicalGrouping=&quot;MatchAll&quot;&gt;\r\n\t\t\t&lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsFile&quot; negate=&quot;true&quot; /&gt;\r\n\t\t\t&lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsDirectory&quot; negate=&quot;true&quot; /&gt;\r\n\t\t  &lt;/conditions&gt;\r\n\t\t  &lt;action type=&quot;Rewrite&quot; url=&quot;/&quot; /&gt;\r\n\t\t&lt;/rule&gt;\r\n\t  &lt;/rules&gt;\r\n\t&lt;/rewrite&gt;\r\n\r\n**NodeJS / ExpressJS Routes to prevent 404 error after page refresh in html5mode**\r\n\r\nFor angular running under Node/Express\r\n\r\n\tvar express = require(&#39;express&#39;);\r\n\tvar path = require(&#39;path&#39;);\r\n\tvar router = express.Router();\r\n\r\n\t// serve angular front end files from root path\r\n\trouter.use(&#39;/&#39;, express.static(&#39;app&#39;, { redirect: false }));\r\n\r\n\t// rewrite virtual urls to angular app to enable refreshing of internal pages\r\n\trouter.get(&#39;*&#39;, function (req, res, next) {\r\n\t\tres.sendFile(path.resolve(&#39;app/index.html&#39;));\r\n\t});\r\n\r\n\tmodule.exports = router;\r\n\r\nMore info at: [AngularJS - Enable HTML5 Mode Page Refresh Without 404 Errors in NodeJS and IIS][1]\r\n\r\n\r\n  [1]: http://jasonwatmore.com/post/2016/07/26/AngularJS-enable-html5mode-page-refresh-without-404-error-in-NodeJS-and-IIS.aspx"}, {"tags": [], "down_vote_count": 0, "creation_date": 1471859237, "answer_id": 39076277, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1471960899, "last_edit_date": 1471960899, "body_markdown": "For Grunt and Browsersync use connect-modrewrite[ here][1]\r\n\r\n\r\n    var modRewrite = require(&#39;connect-modrewrite&#39;);    \r\n\r\n\r\n    browserSync: {\r\n                dev: {\r\n                    bsFiles: {\r\n    \r\n                        src: [\r\n                            &#39;app/assets/css/*.css&#39;,\r\n                            &#39;app/*.js&#39;,\r\n                            &#39;app/controllers/*.js&#39;,\r\n                            &#39;**/*.php&#39;,\r\n                            &#39;*.html&#39;,\r\n                            &#39;app/jade/includes/*.jade&#39;,\r\n                            &#39;app/views/*.html&#39;,\r\n                   ],\r\n                },\r\n            options: {\r\n                watchTask: true,\r\n                debugInfo: true,\r\n                logConnections: true,\r\n                server: {\r\n                    baseDir :&#39;./&#39;,\r\n                    middleware: [\r\n                           modRewrite([&#39;!\\.html|\\.js|\\.jpg|\\.mp4|\\.mp3|\\.gif|\\.svg\\|.css|\\.png$ /index.html [L]&#39;])\r\n                    ]\r\n                },\r\n    \r\n                ghostMode: {\r\n                    scroll: true,\r\n                    links: true,\r\n                    forms: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/connect-modrewrite"}, {"tags": [], "down_vote_count": 0, "creation_date": 1472036203, "answer_id": 39121394, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1472709821, "last_edit_date": 1472709821, "body_markdown": "Your server side code is JAVA then Follow this below steps\r\n\r\nstep 1 : Download urlrewritefilter JAR [Click Here][1]\r\n  [1]: https://mvnrepository.com/artifact/org.tuckey/urlrewritefilter/4.0.3\r\n   and save to build path  WEB-INF/lib\r\n\r\nstep 2 : Enable HTML5 Mode $locationProvider.html5Mode(true);\r\n\r\nstep 3 : set base URL  `&lt;base href=&quot;/example.com/&quot;/&gt;`\r\n\r\nstep 4 : copy and paste to your WEB.XML     \r\n \r\n\r\n     &lt;filter&gt;\r\n         &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\r\n     &lt;filter-class&gt;org.tuckey.web.filters.urlrewrite.UrlRewriteFilter&lt;/filter-class&gt;\r\n    &lt;/filter&gt;\r\n\r\n    &lt;filter-mapping&gt;\r\n        &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\r\n        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\r\n        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;\r\n        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;\r\n    &lt;/filter-mapping&gt;\r\n\r\n \r\n\r\nstep 5 : create file in WEN-INF/urlrewrite.xml\r\n \r\n\r\n     &lt;urlrewrite default-match-type=&quot;wildcard&quot;&gt;\r\n    \t\r\n    \r\n        &lt;rule&gt;\r\n        \t\t&lt;from&gt;/&lt;/from&gt;\r\n        \t\t&lt;to&gt;/index.html&lt;/to&gt;\r\n        \t&lt;/rule&gt;\r\n    \r\n        &lt;!--Write every state dependent on your project url--&gt;\r\n        &lt;rule&gt;\r\n        \t\t&lt;from&gt;/example&lt;/from&gt;\r\n        \t\t&lt;to&gt;/index.html&lt;/to&gt;\r\n        \t&lt;/rule&gt;\r\n        &lt;/urlrewrite&gt;\r\n          \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1486927089, "answer_id": 42192063, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1486927089, "body_markdown": "Finally I got a way to to solve this issue by server side as it&#39;s more like an issue with AngularJs itself I am using 1.5 Angularjs and I got same issue on reload the page.\r\nBut after adding below code in my `server.js` file it is save my day ***but it&#39;s not a proper solution or not a good way .***\r\n\r\n    app.use(function(req, res, next){\r\n      var d = res.status(404);\r\n         if(d){\r\n         \tres.sendfile(&#39;index.html&#39;);\r\n         }\r\n    });"}, {"tags": [], "down_vote_count": 0, "creation_date": 1488901386, "answer_id": 42652450, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1488901386, "body_markdown": "I have this simple solution I have been using and its works.\r\n\r\n**In App/Exceptions/Handler.php**\r\n\r\nAdd this at top:\r\n\r\n    use Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\r\n\r\n\r\n**Then inside the render method**\r\n\r\n    public function render($request, Exception $exception)\r\n    {\r\n        .......\r\n\r\n           if ($exception instanceof NotFoundHttpException){\r\n\r\n            $segment = $request-&gt;segments();\r\n\r\n            //eg. http://site.dev/member/profile\r\n            //module =&gt; member\r\n            // view =&gt; member.index\r\n            //where member.index is the root of your angular app could be anything :)\r\n            if(head($segment) != &#39;api&#39; &amp;&amp; $module = $segment[0]){\r\n                return response(view(&quot;$module.index&quot;), 404);\r\n            }\r\n\r\n            return response()-&gt;fail(&#39;not_found&#39;, $exception-&gt;getCode());\r\n\r\n        }\r\n        .......\r\n\r\n         return parent::render($request, $exception);\r\n    }\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1501349474, "answer_id": 45392112, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1519754013, "last_edit_date": 1519754013, "body_markdown": "Just write out a rule in web.config\r\n\r\n    &lt;system.webServer&gt;\r\n      &lt;rewrite&gt;\r\n        &lt;rules&gt;\r\n        &lt;rule name=&quot;AngularJS Routes&quot; stopProcessing=&quot;true&quot;&gt;\r\n          &lt;match url=&quot;.*&quot; /&gt;\r\n          &lt;conditions logicalGrouping=&quot;MatchAll&quot;&gt;\r\n            &lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsFile&quot; negate=&quot;true&quot; /&gt;\r\n            &lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsDirectory&quot; negate=&quot;true&quot; /&gt;\r\n            &lt;add input=&quot;{REQUEST_URI}&quot; pattern=&quot;^/(api)&quot; negate=&quot;true&quot; /&gt;\r\n          &lt;/conditions&gt;\r\n          &lt;action type=&quot;Rewrite&quot; url=&quot;/&quot; /&gt;\r\n        &lt;/rule&gt;\r\n           &lt;/rules&gt;\r\n        &lt;/rewrite&gt;\r\n    &lt;/system.webServer&gt;\r\n\r\nIn the index add this\r\n    \r\n    &lt;base href=&quot;/&quot;&gt;\r\n\r\nit works for me maybe you&#39;ve forgotten to set Html5Mode app.config\r\n    \r\n    app.config(function ($stateProvider, $urlRouterProvider, $locationProvider){\r\n        $locationProvider.html5Mode({ enabled: true, requireBase: true });\r\n        $locationProvider.hashPrefix(&#39;!&#39;);\r\n    }\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1519199299, "answer_id": 48900595, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1519199299, "body_markdown": "I have resolved the issue by adding below code snippet into node.js file.\r\n\r\n\r\n    app.get(&quot;/*&quot;, function (request, response) {\r\n        console.log(&#39;Unknown API called&#39;);\r\n        response.redirect(&#39;/#&#39; + request.url);\r\n    });\r\n\r\nNote : when we refresh the page, it will look for the API instead of Angular page (Because of no # tag in URL.) . Using the above code, I am redirecting to the url with #"}], "title": "Reloading the page gives wrong GET request with AngularJS HTML5 mode", "view_count": 131275, "answer_count": 26, "code_snippet": ["<code>return app.config(['$routeProvider','$locationProvider', function($routeProvider,$locationProvider) {\n\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix = '!';\n\n    $routeProvider.when('/', {\n        templateUrl: '/views/index.html',\n        controller: 'indexCtrl'\n    });\n    $routeProvider.when('/about',{\n        templateUrl: '/views/about.html',\n        controller: 'AboutCtrl'\n    });\n</code>", "<code>$locationProvider.html5mode</code>", "<code>/#/</code>", "<code>localhost:9000/</code>", "<code>localhost:9000/about</code>", "<code>localhost:9000/about</code>", "<code>Cannot GET /about</code>", "<code>Request URL:localhost:9000/about\nRequest Method:GET\n</code>", "<code>localhost:9000/</code>", "<code>/about</code>", "<code>Request URL:http://localhost:9000/views/about.html\n</code>", "<code>/about</code>", "<code>/about</code>", "<code>$routeProvider</code>", "<code>templateUrl</code>", "<code>templateUrl : '/views/about.html',</code>", "<code>templateUrl : 'example.com/views/about.html',</code>", "<code>http://yourdomain.com/path</code>", "<code>$routeProvider\n  .when('/path', {\n    templateUrl: 'path.html',\n  });\n$locationProvider\n  .html5Mode(true);\n</code>", "<code>.htaccess</code>", "<code>RewriteEngine On \nOptions FollowSymLinks\n\nRewriteBase /\n\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ /#/$1 [L]\n</code>", "<code>&lt;base href=\"/index.html\"&gt;</code>", "<code>app.use(function(req, res) {\n    res.sendfile(__dirname + '/Public/index.html');\n});\n</code>", "<code>&lt;base href=\"/\"&gt;</code>", "<code>&lt;base href=\"/index.html\"&gt;</code>", "<code>connect-history-api-fallback</code>", "<code>npm --save-dev install connect-history-api-fallback\n</code>", "<code>var historyApiFallback = require('connect-history-api-fallback');\n\ngulp.task('serve', function() {\n  browserSync.init({\n    server: {\n      baseDir: \"app\",\n      middleware: [ historyApiFallback() ]\n    }\n  });\n});\n</code>", "<code>server: { ... }, port: 8100</code>", "<code>serve</code>", "<code>gulp.task('default', ['sass', 'serve']);</code>", "<code>Cannot GET ...</code>", "<code>gulp</code>", "<code>ionic serve</code>", "<code>try_files $uri $uri/ /index.php?...</code>", "<code>index.html</code>", "<code>module.exports = function(grunt) {\n  var urlRewrite = require('grunt-connect-rewrite');\n\n  // Project configuration.\n  grunt.initConfig({\n    connect: {\n      server: {\n        options: {\n          port: 9001,\n          base: 'build',\n          middleware: function(connect, options) {\n            // Return array of whatever middlewares you want\n            return [\n              // redirect all urls to index.html in build folder\n              urlRewrite('build', 'index.html'),\n\n              // Serve static files.\n              connect.static(options.base),\n\n              // Make empty directories browsable.\n              connect.directory(options.base)\n            ];\n          }\n        }\n      }\n    }\n  })\n};\n</code>", "<code>$routeProvider</code>", "<code>urlRewrite</code>", "<code>&lt;head&gt; &lt;base href=\"/\"&gt; &lt;/head&gt;</code>", "<code>$locationProvider.html5Mode(true)</code>", "<code>routes.MapRoute(\n        name: \"App\",\n        url: \"{*url}\",\n        defaults: new { controller = \"Home\", action = \"Index\" }\n    );\n</code>", "<code>&lt;rewrite&gt;\n  &lt;rules&gt;\n    &lt;rule name=\"AngularJS\" stopProcessing=\"true\"&gt;\n      &lt;match url=\".*\" /&gt;\n      &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" /&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" /&gt;\n      &lt;/conditions&gt;\n      &lt;action type=\"Rewrite\" url=\"/\" /&gt;\n    &lt;/rule&gt;\n  &lt;/rules&gt;\n&lt;/rewrite&gt;\n</code>", "<code>var express = require('express');\nvar path = require('path');\nvar router = express.Router();\n\n// serve angular front end files from root path\nrouter.use('/', express.static('app', { redirect: false }));\n\n// rewrite virtual urls to angular app to enable refreshing of internal pages\nrouter.get('*', function (req, res, next) {\n    res.sendFile(path.resolve('app/index.html'));\n});\n\nmodule.exports = router;\n</code>", "<code>&lt;base href=\"/\"/&gt;</code>", "<code>gulp-connect</code>", "<code>npm install connect-pushstate</code>", "<code>var gulp = require('gulp'),\n  connect = require('gulp-connect'),\n  pushState = require('connect-pushstate/lib/pushstate').pushState;\n...\nconnect.server({\n  ...\n  middleware: function (connect, options) {\n    return [\n      pushState()\n    ];\n  }\n  ...\n})\n....\n</code>", "<code>errorDocument 404 /index.html\n</code>", "<code>test: {\n        options: {\n          port: 9000,\n          base: [\n            '.tmp',\n            'test',\n            '&lt;%= yeoman.app %&gt;'\n          ],\n         middleware: function (connect) {\n                  return [\n                      modRewrite(['^[^\\\\.]*$ /index.html [L]']),\n                      connect.static('.tmp'),\n                      connect().use(\n                          '/bower_components',\n                          connect.static('./bower_components')\n                      ),\n                      connect.static('app')\n                  ];\n              }\n        }\n      },\n</code>", "<code>app.get('/*', function(req, res) {\nres.sendFile(path.join(__dirname + '/public/app/views/index.html'));\n});\n</code>", "<code>&lt;!-- FOR ANGULAR ROUTING --&gt;\n&lt;base href=\"/\"&gt;\n</code>", "<code>app.use('/',express.static(__dirname + '/public'));\n</code>", "<code>var modRewrite = require('connect-modrewrite');    \n\n\nbrowserSync: {\n            dev: {\n                bsFiles: {\n\n                    src: [\n                        'app/assets/css/*.css',\n                        'app/*.js',\n                        'app/controllers/*.js',\n                        '**/*.php',\n                        '*.html',\n                        'app/jade/includes/*.jade',\n                        'app/views/*.html',\n               ],\n            },\n        options: {\n            watchTask: true,\n            debugInfo: true,\n            logConnections: true,\n            server: {\n                baseDir :'./',\n                middleware: [\n                       modRewrite(['!\\.html|\\.js|\\.jpg|\\.mp4|\\.mp3|\\.gif|\\.svg\\|.css|\\.png$ /index.html [L]'])\n                ]\n            },\n\n            ghostMode: {\n                scroll: true,\n                links: true,\n                forms: true\n                    }\n                }\n            }\n        },\n</code>", "<code>npm install connect-modrewrite --save</code>", "<code>require in gruntfile</code>", "<code>app.get('*', function(req, res){\n    res.render('index');\n});\n</code>", "<code>&lt;base href=\"/\" /&gt;</code>", "<code>https://npmjs.org/package/grunt-connect-pushstate\n</code>", "<code> var pushState = require('grunt-connect-pushstate/lib/utils').pushState;\n\n\n    connect: {\n    server: {\n      options: {\n        port: 1337,\n        base: '',\n        logger: 'dev',\n        hostname: '*',\n        open: true,\n        middleware: function (connect, options) {\n          return [\n            // Rewrite requests to root so they may be handled by router\n            pushState(),\n            // Serve static files\n            connect.static(options.base)\n          ];\n        }\n      },\n    }\n},\n</code>", "<code>I solved same problem using modRewrite.  \nAngularJS is reload page when after # changes.  \nBut HTML5 mode remove # and invalid the reload.  \nSo we should reload manually.\n# install connect-modrewrite\n    $ sudo npm install connect-modrewrite --save\n\n# gulp/build.js\n    'use strict';\n    var gulp = require('gulp');\n    var paths = gulp.paths;\n    var util = require('util');\n    var browserSync = require('browser-sync');\n    var modRewrite  = require('connect-modrewrite');\n    function browserSyncInit(baseDir, files, browser) {\n        browser = browser === undefined ? 'default' : browser;\n        var routes = null;\n        if(baseDir === paths.src || (util.isArray(baseDir) &amp;&amp; baseDir.indexOf(paths.src) !== -1)) {\n            routes = {\n                '/bower_components': 'bower_components'\n            };\n        }\n\n        browserSync.instance = browserSync.init(files, {\n            startPath: '/',\n            server: {\n            baseDir: baseDir,\n            middleware: [\n                modRewrite([\n                    '!\\\\.\\\\w+$ /index.html [L]'\n                ])\n            ],\n            routes: routes\n            },\n            browser: browser\n        });\n    }\n</code>", "<code>angular-pages:\n  - login\n  - settings\n...\n</code>", "<code>public class AngularPageReloadFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        request.getRequestDispatcher(\"index.html\").forward(request, response);\n    }\n}\n</code>", "<code>private void initAngularNonRootRedirectFilter(ServletContext servletContext,\n                                              EnumSet&lt;DispatcherType&gt; disps) {\n    log.debug(\"Registering angular page reload Filter\");\n    FilterRegistration.Dynamic angularRedirectFilter =\n            servletContext.addFilter(\"angularPageReloadFilter\",\n                    new AngularPageReloadFilter());\n    int index = 0;\n    while (env.getProperty(\"angular-pages[\" + index + \"]\") != null) {\n        angularRedirectFilter.addMappingForUrlPatterns(disps, true, \"/\" + env.getProperty(\"angular-pages[\" + index + \"]\"));\n        index++;\n    }\n    angularRedirectFilter.setAsyncSupported(true);\n}\n</code>", "<code>var historyApiFallback = require('connect-history-api-fallback');\n\ngulp.task('serve', function() {\n  browserSync.init({\n    proxy: {\n            target: 'localhost:' + port,\n            middleware: [ historyApiFallback() ]\n        }\n  });\n});\n</code>", "<code>&lt;base href=\"/example.com/\"/&gt;</code>", "<code> &lt;filter&gt;\n     &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\n &lt;filter-class&gt;org.tuckey.web.filters.urlrewrite.UrlRewriteFilter&lt;/filter-class&gt;\n&lt;/filter&gt;\n\n&lt;filter-mapping&gt;\n    &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\n    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;\n    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;\n&lt;/filter-mapping&gt;\n</code>", "<code> &lt;urlrewrite default-match-type=\"wildcard\"&gt;\n\n\n    &lt;rule&gt;\n            &lt;from&gt;/&lt;/from&gt;\n            &lt;to&gt;/index.html&lt;/to&gt;\n        &lt;/rule&gt;\n\n    &lt;!--Write every state dependent on your project url--&gt;\n    &lt;rule&gt;\n            &lt;from&gt;/example&lt;/from&gt;\n            &lt;to&gt;/index.html&lt;/to&gt;\n        &lt;/rule&gt;\n    &lt;/urlrewrite&gt;\n</code>", "<code>server.js</code>", "<code>app.use(function(req, res, next){\n  var d = res.status(404);\n     if(d){\n        res.sendfile('index.html');\n     }\n});\n</code>", "<code>use Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\n</code>", "<code>public function render($request, Exception $exception)\n{\n    .......\n\n       if ($exception instanceof NotFoundHttpException){\n\n        $segment = $request-&gt;segments();\n\n        //eg. http://site.dev/member/profile\n        //module =&gt; member\n        // view =&gt; member.index\n        //where member.index is the root of your angular app could be anything :)\n        if(head($segment) != 'api' &amp;&amp; $module = $segment[0]){\n            return response(view(\"$module.index\"), 404);\n        }\n\n        return response()-&gt;fail('not_found', $exception-&gt;getCode());\n\n    }\n    .......\n\n     return parent::render($request, $exception);\n}\n</code>", "<code>app.get(\"/*\", function (request, response) {\n    console.log('Unknown API called');\n    response.redirect('/#' + request.url);\n});\n</code>", "<code>&lt;system.webServer&gt;\n  &lt;rewrite&gt;\n    &lt;rules&gt;\n    &lt;rule name=\"AngularJS Routes\" stopProcessing=\"true\"&gt;\n      &lt;match url=\".*\" /&gt;\n      &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" /&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" /&gt;\n        &lt;add input=\"{REQUEST_URI}\" pattern=\"^/(api)\" negate=\"true\" /&gt;\n      &lt;/conditions&gt;\n      &lt;action type=\"Rewrite\" url=\"/\" /&gt;\n    &lt;/rule&gt;\n       &lt;/rules&gt;\n    &lt;/rewrite&gt;\n&lt;/system.webServer&gt;\n</code>", "<code>&lt;base href=\"/\"&gt;\n</code>", "<code>app.config(function ($stateProvider, $urlRouterProvider, $locationProvider){\n    $locationProvider.html5Mode({ enabled: true, requireBase: true });\n    $locationProvider.hashPrefix('!');\n}\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "build"], "creation_date": 1434771767, "body_markdown": "In my `package.json` I have these two scripts:\r\n\r\n      &quot;scripts&quot;: {\r\n        &quot;start-watch&quot;: &quot;nodemon run-babel index.js&quot;,\r\n        &quot;wp-server&quot;: &quot;webpack-dev-server&quot;,\r\n      }\r\n\r\nI have to run these 2 scripts **in parallel** everytime I start developing in Node.js. The first thing I thought of was adding a third script like this:\r\n\r\n    \r\n    &quot;dev&quot;: &quot;npm run start-watch &amp;&amp; npm run wp-server&quot;\r\n\r\n... but that will wait for `start-watch` to finish before running `wp-server`.\r\n\r\n**How can I run these in parallel?** Please keep in mind that I need to see the `output` of these commands. Also, if your solution involves a build tool, I&#39;d rather use `gulp` instead of `grunt` because I already use it in another project.\r\n", "last_edit_date": 1511816375, "up_vote_count": 230, "link": "https://stackoverflow.com/questions/30950032/how-can-i-run-multiple-npm-scripts-in-parallel", "_childDocuments_": [{"tags": [], "down_vote_count": 4, "creation_date": 1434775052, "answer_id": 30950298, "path": "stack.gulp.answer", "score": 265, "up_vote_count": 269, "is_accepted": true, "last_activity_date": 1476289897, "last_edit_date": 1476289897, "body_markdown": "Use a package called [concurrently][1].\r\n\r\n`npm i concurrently --save-dev`\r\n\r\nThen setup your `npm run dev` task as so:\r\n\r\n    &quot;dev&quot;: &quot;concurrently --kill-others \\&quot;npm run start-watch\\&quot; \\&quot;npm run wp-server\\&quot;&quot;\r\n\r\n\r\n  [1]: http://npmjs.org/package/concurrently"}, {"tags": [], "down_vote_count": 14, "creation_date": 1442080165, "answer_id": 32541895, "path": "stack.gulp.answer", "score": 174, "up_vote_count": 188, "is_accepted": false, "last_activity_date": 1483029053, "last_edit_date": 1483029053, "body_markdown": "Using the Concurrently package works, but you do not need it to accomplish this. You can just use a pipe on UNIX based machines run concurrent tasks. I would suggest this method over the other because it saves you from having to add an additional dependency.\r\n\r\n    &quot;dev&quot;: &quot;npm run start-watch | npm run wp-server&quot;\r\n"}, {"tags": [], "down_vote_count": 9, "creation_date": 1446067276, "answer_id": 33401809, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1446067276, "body_markdown": "A better solution is to use `&amp;`\r\n\r\n    &quot;dev&quot;: &quot;npm run start-watch &amp; npm run wp-server&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1446965014, "answer_id": 33591451, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1452141425, "last_edit_date": 1452141425, "body_markdown": "### Quick Solution\r\n&lt;strike&gt;In this case, I&#39;d say the best bet&lt;/strike&gt; &lt;strong&gt;If this script is for a private module intended to run only on *nix-based machines&lt;/strong&gt;, you can use the control operator for forking processes, which looks like this: `&amp;`\r\n\r\nAn example of doing this in a partial package.json file:\r\n\r\n\r\n    {\r\n      &quot;name&quot;: &quot;npm-scripts-forking-example&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;bundle&quot;: &quot;watchify -vd -p browserify-hmr index.js -o bundle.js&quot;,\r\n        &quot;serve&quot;:  &quot;http-server -c 1 -a localhost&quot;,\r\n        &quot;serve-bundle&quot;: &quot;npm run bundle &amp; npm run serve &amp;&quot;\r\n      }\r\n\r\nYou&#39;d then execute them both in parallel via `npm run serve-bundle`. You can enhance the scripts to output the pids of the forked process to a file like so:\r\n\r\n    &quot;serve-bundle&quot;: &quot;npm run bundle &amp; echo \\&quot;$!\\&quot; &gt; build/bundle.pid &amp;&amp; npm run serve &amp; echo \\&quot;$!\\&quot; &gt; build/serve.pid &amp;&amp; npm run open-browser&quot;,\r\n\r\n\r\nGoogle something like *bash control operator for forking* to learn more on how it works. I&#39;ve also provided some further context regarding leveraging Unix techniques in Node projects below:\r\n\r\n### Further Context RE: Unix Tools &amp; Node.js\r\nIf you&#39;re not on Windows, Unix tools/techniques often work well to achieve something with Node scripts because: \r\n\r\n1. Much of Node.js lovingly imitates Unix principles\r\n2. You&#39;re on *nix (incl. OS X) and NPM is using a shell anyway\r\n\r\nModules for system tasks in Nodeland are also often abstractions or approximations of Unix tools, from `fs` to `streams`."}, {"tags": [], "down_vote_count": 3, "creation_date": 1455708796, "answer_id": 35455532, "path": "stack.gulp.answer", "score": 57, "up_vote_count": 60, "is_accepted": false, "last_activity_date": 1455709245, "last_edit_date": 1455709245, "body_markdown": "If you&#39;re using an UNIX-like environment, just use `&amp;` as the separator: \r\n\r\n    &quot;dev&quot;: &quot;npm run start-watch &amp; npm run wp-server&quot;\r\n\r\nOtherwise if you&#39;re interested on a cross-platform solution, you could use [npm-run-all](https://github.com/mysticatea/npm-run-all)  module:\r\n\r\n    &quot;dev&quot;: &quot;npm-run-all --parallel start-watch wp-server&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1455727760, "answer_id": 35462795, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1455727760, "body_markdown": "I ran into problems with `&amp;` and `|`, which exit statuses and error throwing, respectively.\r\n\r\nOther solutions want to run any task with a given name, like npm-run-all, which wasn&#39;t my use case.\r\n\r\nSo I created [npm-run-parallel](https://github.com/ianmcnally/npm-run-parallel) that runs npm scripts asynchronously and reports back when they&#39;re done.\r\n\r\nSo, for your scripts, it&#39;d be:\r\n\r\n`npm-run-parallel wp-server start-watch`"}, {"tags": [], "down_vote_count": 2, "creation_date": 1459225157, "answer_id": 36275359, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 37, "is_accepted": false, "last_activity_date": 1459568461, "last_edit_date": 1459568461, "body_markdown": "From windows cmd you can use [`start`][1]:\r\n\r\n    &quot;dev&quot;: &quot;start npm run start-watch &amp;&amp; start npm run wp-server&quot;\r\n\r\nEvery command launched this way starts in its own window.\r\n\r\n\r\n  [1]: http://ss64.com/nt/start.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1467754730, "answer_id": 38213212, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1467754730, "body_markdown": "You should use [npm-run-all][1] (or `concurrently`, `parallelshell`), because it has more control over starting and killing commands. The operators `&amp;`, `| are bad ideas because you&#39;ll need to manually stop it after all tests are finished.\r\n\r\nThis is an example for protractor testing through npm:\r\n\r\n    scripts: {\r\n      &quot;webdriver-start&quot;: &quot;./node_modules/protractor/bin/webdriver-manager update &amp;&amp; ./node_modules/protractor/bin/webdriver-manager start&quot;,\r\n      &quot;protractor&quot;: &quot;./node_modules/protractor/bin/protractor ./tests/protractor.conf.js&quot;,\r\n      &quot;http-server&quot;: &quot;./node_modules/http-server/bin/http-server -a localhost -p 8000&quot;,\r\n      &quot;test&quot;: &quot;npm-run-all -p -r webdriver-start http-server protractor&quot;\r\n    }\r\n\r\n-p = Run commands in parallel.\r\n\r\n-r = Kill all commands when one of them finishes with zero.\r\n\r\nRunning `npm run test` will start Selenium driver, start http server (to serve you files) and run protractor tests. Once all tests are finished, it will close the http server and the selenium driver.\r\n\r\n\r\n  [1]: https://github.com/mysticatea/npm-run-all"}, {"tags": [], "down_vote_count": 3, "creation_date": 1486560609, "answer_id": 42114486, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1486560609, "body_markdown": "If you replace the double ampersand with a single ampersand, the scripts will run concurrently. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1494504477, "answer_id": 43914979, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1496987415, "last_edit_date": 1496987415, "body_markdown": "I&#39;ve checked almost all solutions from above and only with [npm-run-all][1] I was able to solve all problems. Main advantage over all other solution is an ability to [run script with arguments][2].\r\n\r\n    {\r\n      &quot;test:static-server&quot;: &quot;cross-env NODE_ENV=test node server/testsServer.js&quot;,\r\n      &quot;test:jest&quot;: &quot;cross-env NODE_ENV=test jest&quot;,\r\n      &quot;test&quot;: &quot;run-p test:static-server \\&quot;test:jest -- {*}\\&quot; --&quot;,\r\n      &quot;test:coverage&quot;: &quot;npm run test -- --coverage&quot;,\r\n      &quot;test:watch&quot;: &quot;npm run test -- --watchAll&quot;,\r\n    }\r\n\r\n&gt; Note `run-p` is shortcut for `npm-run-all --paraller`\r\n\r\nThis allows me to run command with arguments like `npm run test:watch -- Something`.\r\n\r\n**EDIT:**\r\n\r\nThere is one more useful [option][3] for `npm-run-all`:\r\n\r\n     -r, --race   - - - - - - - Set the flag to kill all tasks when a task\r\n                                finished with zero. This option is valid only\r\n                                with &#39;parallel&#39; option.\r\n\r\nAdd `-r` to your `npm-run-all` script to kill all processes when one finished with code `0`. This is especially useful when you run a HTTP server and another script that use the server.\r\n\r\n      &quot;test&quot;: &quot;run-p -r test:static-server \\&quot;test:jest -- {*}\\&quot; --&quot;,\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/npm-run-all\r\n  [2]: https://github.com/mysticatea/npm-run-all/blob/master/docs/npm-run-all.md#run-with-arguments\r\n  [3]: https://github.com/mysticatea/npm-run-all/blob/master/docs/npm-run-all.md"}, {"tags": [], "down_vote_count": 0, "creation_date": 1506077966, "answer_id": 46363159, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1506077966, "body_markdown": "I have a crossplatform solution without any additional modules. I was looking for something like a try catch block I could use both in the cmd.exe and in the bash. \r\n\r\nThe solution is `command1 || command2` which seems to work in both enviroments same. So the solution for the OP is:\r\n\r\n\r\n    &quot;scripts&quot;: {\r\n      &quot;start-watch&quot;: &quot;nodemon run-babel index.js&quot;,\r\n      &quot;wp-server&quot;: &quot;webpack-dev-server&quot;,\r\n      // first command is for the cmd.exe, second one is for the bash\r\n      &quot;dev&quot;: &quot;(start npm run start-watch &amp;&amp; start npm run wp-server) || (npm run start-watch &amp; npm run wp-server)&quot;,\r\n      &quot;start&quot;: &quot;npm run dev&quot;\r\n    }\r\n\r\nThen simple `npm start` (and `npm run dev`) will work on all platforms!"}, {"tags": [], "down_vote_count": 1, "creation_date": 1511796324, "answer_id": 47514397, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1513604559, "last_edit_date": 1513604559, "body_markdown": "    npm-run-all --parallel task1 task2\r\n\r\nedit:\r\n\r\nYou need to have [npm-run-all][1] installed beforehand. Also check [this page][2] for other usage scenarios.\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/npm-run-all\r\n  [2]: https://github.com/mysticatea/npm-run-all/blob/master/docs/npm-run-all.md"}, {"tags": [], "down_vote_count": 0, "creation_date": 1514812872, "answer_id": 48050020, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1514812872, "body_markdown": "#How about forking\r\n\r\nAnother option to run multiple Node scripts is with a single Node script, which can **[fork](https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options)** many others. Forking is supported natively in Node, so it adds no dependencies and is cross-platform.\r\n\r\n---\r\n###Minimal example\r\n\r\nThis would just run the scripts as-is and assume they&#39;re located in the parent script&#39;s directory.\r\n\r\n    // fork-minimal.js - run with: node fork-minimal.js\r\n\r\n    const childProcess = require(&#39;child_process&#39;);\r\n\r\n    let scripts = [&#39;some-script.js&#39;, &#39;some-other-script.js&#39;];\r\n    scripts.forEach(script =&gt; childProcess.fork(script));\r\n\r\n---\r\n###Verbose example\r\n\r\nThis would run the scripts with arguments and configured by the many available options.\r\n\r\n    // fork-verbose.js - run with: node fork-verbose.js\r\n\r\n    const childProcess = require(&#39;child_process&#39;);\r\n\r\n    let scripts = [\r\n        {\r\n            path: &#39;some-script.js&#39;,\r\n            args: [&#39;-some_arg&#39;, &#39;/some_other_arg&#39;],\r\n            options: {cwd: &#39;./&#39;, env: {NODE_ENV: &#39;development&#39;}}\r\n        },    \r\n        {\r\n            path: &#39;some-other-script.js&#39;,\r\n            args: [&#39;-another_arg&#39;, &#39;/yet_other_arg&#39;],\r\n            options: {cwd: &#39;/some/where/else&#39;, env: {NODE_ENV: &#39;development&#39;}}\r\n        }\r\n    ];\r\n\r\n    let processes = [];\r\n\r\n    scripts.forEach(script =&gt; {\r\n        let runningScript = childProcess.fork(script.path, script.args, script.options);\r\n\r\n       // Optionally attach event listeners to the script\r\n       runningScript.on(&#39;close&#39;, () =&gt; console.log(&#39;Time to die...&#39;))\r\n\r\n        runningScripts.push(runningScript); // Keep a reference to the script for later use\r\n    });\r\n\r\n---\r\n\r\n###Communicating with forked scripts\r\n\r\nForking also has the added benefit that the parent script can receive events from the forked child processes as well as send back. A common example is for the parent script to kill its forked children.\r\n\r\n     runningScripts.forEach(runningScript =&gt; runningScript.kill());\r\n\r\nFor more available events and methods see the [`ChildProcess` documentation](https://nodejs.org/api/child_process.html#child_process_class_childprocess)"}], "title": "How can I run multiple npm scripts in parallel?", "view_count": 123415, "answer_count": 13, "code_snippet": ["<code>package.json</code>", "<code>  \"scripts\": {\n    \"start-watch\": \"nodemon run-babel index.js\",\n    \"wp-server\": \"webpack-dev-server\",\n  }\n</code>", "<code>\"dev\": \"npm run start-watch &amp;&amp; npm run wp-server\"\n</code>", "<code>start-watch</code>", "<code>wp-server</code>", "<code>output</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>npm i concurrently --save-dev</code>", "<code>npm run dev</code>", "<code>\"dev\": \"concurrently --kill-others \\\"npm run start-watch\\\" \\\"npm run wp-server\\\"\"\n</code>", "<code>node ./node_modules/concurrently/src/main.js</code>", "<code>concurrent</code>", "<code>./node_modules/.bin/concurrent</code>", "<code>concurrently</code>", "<code>parallelshell</code>", "<code>--raw</code>", "<code>--kill-others</code>", "<code>--love-others</code>", "<code>\"dev\": \"npm run start-watch | npm run wp-server\"\n</code>", "<code>npm scripts</code>", "<code>&amp;</code>", "<code>&amp;</code>", "<code>\"dev-nix\"</code>", "<code>\"dev-win\"</code>", "<code>&amp;</code>", "<code>\"dev\": \"npm run start-watch &amp; npm run wp-server\"\n</code>", "<code>\"dev\": \"npm-run-all --parallel start-watch wp-server\"\n</code>", "<code>&amp;&amp;</code>", "<code>&amp;</code>", "<code>|</code>", "<code>a &amp;&amp; b</code>", "<code>b</code>", "<code>a</code>", "<code>a &amp; b</code>", "<code>a</code>", "<code>b</code>", "<code>a | b</code>", "<code>a</code>", "<code>b</code>", "<code>&amp;</code>", "<code>npm</code>", "<code>npm run start-watch</code>", "<code>ctrl-c</code>", "<code>wait</code>", "<code>\"dev\": \"npm run start-watch &amp; npm run wp-server &amp; wait\"</code>", "<code>start</code>", "<code>\"dev\": \"start npm run start-watch &amp;&amp; start npm run wp-server\"\n</code>", "<code>&amp;&amp;</code>", "<code>concurrently</code>", "<code>parallelshell</code>", "<code>&amp;</code>", "<code>scripts: {\n  \"webdriver-start\": \"./node_modules/protractor/bin/webdriver-manager update &amp;&amp; ./node_modules/protractor/bin/webdriver-manager start\",\n  \"protractor\": \"./node_modules/protractor/bin/protractor ./tests/protractor.conf.js\",\n  \"http-server\": \"./node_modules/http-server/bin/http-server -a localhost -p 8000\",\n  \"test\": \"npm-run-all -p -r webdriver-start http-server protractor\"\n}\n</code>", "<code>npm run test</code>", "<code>gulp</code>", "<code>gulp-sync</code>", "<code>&amp;</code>", "<code>\"dev\": \"npm run start-watch &amp; npm run wp-server\"\n</code>", "<code>&amp;</code>", "<code>{\n  \"test:static-server\": \"cross-env NODE_ENV=test node server/testsServer.js\",\n  \"test:jest\": \"cross-env NODE_ENV=test jest\",\n  \"test\": \"run-p test:static-server \\\"test:jest -- {*}\\\" --\",\n  \"test:coverage\": \"npm run test -- --coverage\",\n  \"test:watch\": \"npm run test -- --watchAll\",\n}\n</code>", "<code>run-p</code>", "<code>npm-run-all --paraller</code>", "<code>npm run test:watch -- Something</code>", "<code>npm-run-all</code>", "<code> -r, --race   - - - - - - - Set the flag to kill all tasks when a task\n                            finished with zero. This option is valid only\n                            with 'parallel' option.\n</code>", "<code>-r</code>", "<code>npm-run-all</code>", "<code>0</code>", "<code>  \"test\": \"run-p -r test:static-server \\\"test:jest -- {*}\\\" --\",\n</code>", "<code>&amp;</code>", "<code>{\n  \"name\": \"npm-scripts-forking-example\",\n  \"scripts\": {\n    \"bundle\": \"watchify -vd -p browserify-hmr index.js -o bundle.js\",\n    \"serve\":  \"http-server -c 1 -a localhost\",\n    \"serve-bundle\": \"npm run bundle &amp; npm run serve &amp;\"\n  }\n</code>", "<code>npm run serve-bundle</code>", "<code>\"serve-bundle\": \"npm run bundle &amp; echo \\\"$!\\\" &gt; build/bundle.pid &amp;&amp; npm run serve &amp; echo \\\"$!\\\" &gt; build/serve.pid &amp;&amp; npm run open-browser\",\n</code>", "<code>fs</code>", "<code>streams</code>", "<code>&amp;</code>", "<code>&amp;</code>", "<code>|</code>", "<code>npm-run-parallel wp-server start-watch</code>", "<code>command1 || command2</code>", "<code>\"scripts\": {\n  \"start-watch\": \"nodemon run-babel index.js\",\n  \"wp-server\": \"webpack-dev-server\",\n  // first command is for the cmd.exe, second one is for the bash\n  \"dev\": \"(start npm run start-watch &amp;&amp; start npm run wp-server) || (npm run start-watch &amp; npm run wp-server)\",\n  \"start\": \"npm run dev\"\n}\n</code>", "<code>npm start</code>", "<code>npm run dev</code>", "<code>npm-run-all --parallel task1 task2\n</code>", "<code>// fork-minimal.js - run with: node fork-minimal.js\n\nconst childProcess = require('child_process');\n\nlet scripts = ['some-script.js', 'some-other-script.js'];\nscripts.forEach(script =&gt; childProcess.fork(script));\n</code>", "<code>// fork-verbose.js - run with: node fork-verbose.js\n\nconst childProcess = require('child_process');\n\nlet scripts = [\n    {\n        path: 'some-script.js',\n        args: ['-some_arg', '/some_other_arg'],\n        options: {cwd: './', env: {NODE_ENV: 'development'}}\n    },    \n    {\n        path: 'some-other-script.js',\n        args: ['-another_arg', '/yet_other_arg'],\n        options: {cwd: '/some/where/else', env: {NODE_ENV: 'development'}}\n    }\n];\n\nlet processes = [];\n\nscripts.forEach(script =&gt; {\n    let runningScript = childProcess.fork(script.path, script.args, script.options);\n\n   // Optionally attach event listeners to the script\n   runningScript.on('close', () =&gt; console.log('Time to die...'))\n\n    runningScripts.push(runningScript); // Keep a reference to the script for later use\n});\n</code>", "<code> runningScripts.forEach(runningScript =&gt; runningScript.kill());\n</code>", "<code>ChildProcess</code>"], "path": "stack.gulp"}, {"tags": ["windows", "batch-file", "command-line", "cmd"], "creation_date": 1320777064, "body_markdown": "I want to run two commands in a Windows CMD console.\r\n\r\nIn Linux I would do it like this: `touch thisfile ; ls -lstrh`.\r\n\r\nHow is it done on Windows?\r\n\r\n", "last_edit_date": 1500119149, "up_vote_count": 571, "link": "https://stackoverflow.com/questions/8055371/how-do-i-run-two-commands-in-one-line-in-windows-cmd", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1320777202, "answer_id": 8055390, "path": "stack.gulp.answer", "score": 726, "up_vote_count": 726, "is_accepted": true, "last_activity_date": 1508810565, "last_edit_date": 1508810565, "body_markdown": "Like this on all Microsoft OSes since 2000, and still good today:\r\n\r\n    dir &amp; echo foo\r\n\r\nIf you want the second command to execute only if the first exited successfully:\r\n\r\n    dir &amp;&amp; echo foo\r\n\r\nThe single ampersand (&amp;) syntax to execute multiple commands on one line goes back to Windows XP, Windows 2000, and some earlier NT versions. (4.0 at least, according to one commenter here.)\r\n\r\nThere are quite a few other points about this that you&#39;ll find scrolling down this page.\r\n\r\nHistorical data follows, for those who may find it educational.\r\n\r\nPrior to that, the &amp;&amp; syntax was only a feature of the shell replacement 4DOS before that feature was added to the Microsoft command interpreter.\r\n\r\nIn Windows 95, 98 and ME, you&#39;d use the pipe character instead:\r\n\r\n    dir | echo foo\r\n\r\nIn MS-DOS 5.0 and later, through some earlier Windows and NT versions of the command interpreter, the (undocumented) command separator was character 20 (Ctrl+T) which I&#39;ll represent with ^T here.\r\n\r\n    dir ^T echo foo\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1320777284, "answer_id": 8055408, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1320777284, "body_markdown": "You can use &amp; to run commands one after another. Example: `c:\\dir &amp; vim myFile.txt`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1320777400, "answer_id": 8055430, "path": "stack.gulp.answer", "score": 472, "up_vote_count": 472, "is_accepted": false, "last_activity_date": 1511264325, "last_edit_date": 1511264325, "body_markdown": "A quote from the documentation:\r\n\r\n* Source: Microsoft, Windows XP Professional Product Documentation, [*Command shell overview*][1]\r\n\r\n&gt;*Using multiple commands and conditional processing symbols*\r\n\r\n&gt;You can run multiple commands from a single command line or script using conditional processing symbols. When you run multiple commands with conditional processing symbols, the commands to the right of the conditional processing symbol act based upon the results of the command to the left of the conditional processing symbol. \r\n\r\n&gt; For example, you might want to run a command only if the previous command fails. Or, you might want to run a command only if the previous command is successful.\r\n\r\n&gt; You can use the special characters listed in the following table to pass multiple commands.\r\n\r\n&gt;* `&amp; [...]`  \r\n&gt;`command1 &amp; command2`  \r\n Use to separate multiple commands on one command line. Cmd.exe runs the first command, and then the second command.\r\n \r\n&gt;* `&amp;&amp; [...]`  \r\n`command1 &amp;&amp; command2`  \r\n Use to run the command following &amp;&amp; only if the command preceding the symbol is successful. Cmd.exe runs the first command, and then runs the second command only if the first command completed successfully. \r\n \r\n&gt;* `|| [...]`  \r\n`command1 || command2`  \r\n Use to run the command following || only if the command preceding || fails. Cmd.exe runs the first command, and then runs the second command only if the first command did not complete successfully (receives an error code greater than zero).\r\n \r\n&gt;* `( ) [...]`  \r\n`(command1 &amp; command2)`  \r\n Use to group or nest multiple commands.\r\n \r\n&gt;* `; or ,`  \r\n `command1 parameter1;parameter2`  \r\n Use to separate command parameters.\r\n\r\n\r\n  [1]: http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/ntcmds_shelloverview.mspx?mfr=true"}, {"tags": [], "down_vote_count": 0, "creation_date": 1320777477, "answer_id": 8055444, "path": "stack.gulp.answer", "score": 59, "up_vote_count": 59, "is_accepted": false, "last_activity_date": 1500138556, "last_edit_date": 1500138556, "body_markdown": "`&amp;` is the Bash equivalent for `;` ( run commands) and `&amp;&amp;` is the Bash equivalent of `&amp;&amp;` (run commands only when the previous has not caused an error).\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1384238362, "answer_id": 19922531, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1384238362, "body_markdown": "If you want to create a cmd shortcut (for example on your desktop) add /k parameter (/k means keep, /c will close window):\r\n\r\n    cmd /k echo hello &amp;&amp; cd c:\\ &amp;&amp; cd Windows"}, {"tags": [], "down_vote_count": 0, "creation_date": 1397626898, "answer_id": 23100921, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1418777044, "last_edit_date": 1418777044, "body_markdown": "`cmd /c ipconfig /all &amp; Output.txt`\r\n\r\nThis command execute command and open `Output.txt` file in a single command"}, {"tags": [], "down_vote_count": 0, "creation_date": 1422304536, "answer_id": 28158283, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1422470268, "last_edit_date": 1495542393, "body_markdown": "So, I was trying to enable the specific task of running `RegAsm` (register assembly) from a context menu.  The issue I had was that the result would flash up and go away before I could read it.  So I tried piping to `Pause`, which does not work when the command fails (as mentioned here https://stackoverflow.com/questions/9882019/pause-command-not-working-in-bat-script and here https://stackoverflow.com/questions/4666045/batch-file-command-pause-does-not-work).  So I tried `cmd /k` but that leaves the window open for more commands (I just want to read the result).  So I added a `pause` followed by `exit` to the chain, resulting in the following:\r\n\r\n`cmd /k C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe &quot;%1&quot; /codebase \\&quot;%1\\&quot; &amp; pause &amp; exit`\r\n\r\nThis works like a charm -- RegAsm runs on the file and shows its results, then a &quot;Press any key to continue...&quot; prompt is shown, then the command prompt window closes when a key is pressed.\r\n\r\nP.S.  For others who might be interested, you can use the following .reg file entries to add a dllfile association to .dll files and then a RegAsm command extension to that (notice the escaped quotes and backslashes):\r\n\r\n    [HKEY_CLASSES_ROOT\\.dll]\r\n    &quot;Content Type&quot;=&quot;application/x-msdownload&quot;\r\n    @=&quot;dllfile&quot;\r\n    \r\n    [HKEY_CLASSES_ROOT\\dllfile]\r\n    @=&quot;Application Extension&quot;\r\n\r\n    [HKEY_CLASSES_ROOT\\dllfile\\Shell\\RegAsm]\r\n    @=&quot;Register Assembly&quot;\r\n    \r\n    [HKEY_CLASSES_ROOT\\dllfile\\Shell\\RegAsm\\command]\r\n    @=&quot;cmd /k C:\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\v4.0.30319\\\\regasm.exe \\&quot;%1\\&quot; /codebase \\&quot;%1\\&quot; &amp; pause &amp; exit&quot;\r\n\r\nNow I have a nice right-click menu to register an assembly.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1457867184, "answer_id": 35969458, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1457867646, "last_edit_date": 1457867646, "body_markdown": "You can use *call* to overcome the problem of environment variables being evaluated too soon - e.g.\r\n\r\n    set A=Hello &amp; call echo %A%\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1469177803, "answer_id": 38522259, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1500138665, "last_edit_date": 1500138665, "body_markdown": "No, `cd / &amp;&amp; tree &amp;&amp; echo %time%`. The time echoed is at when the first command is executed.\r\n\r\nThe piping has some issue, but it is not critical as long as people know how it works.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1470234682, "answer_id": 38746523, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1506144981, "last_edit_date": 1506144981, "body_markdown": "A number of [processing symbols][1] can be used when running several commands on the same line, and may lead to processing redirection in some cases, altering output in other case, or just fail. One important case is placing on the same line commands that manipulate variables.\r\n\r\n    @echo off\r\n    setlocal enabledelayedexpansion\r\n    set count=0\r\n    set &quot;count=1&quot; &amp; echo %count% !count!\r\n    \r\n    0 1\r\n\r\nAs you see in the above example, when commands using variables are placed on the same line, you must use delayed expansion to update your variable values. If your variable is indexed, use CALL command with %% modifiers to update its value on the same line:\r\n\r\n    set &quot;i=5&quot; &amp; set &quot;arg!i!=MyFile!i!&quot; &amp; call echo path!i!=%temp%\\%%arg!i!%%\r\n    \r\n    path5=C:\\Users\\UserName\\AppData\\Local\\Temp\\MyFile5\r\n\r\n  [1]: http://ss64.com/nt/syntax-redirection.html\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1481604116, "answer_id": 41113857, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1481604116, "body_markdown": "In order to execute two commands at the same time, you must put an &amp; (ampersand) symbol between the two commands. Like so:\r\n\r\n    color 0a &amp; start chrome.exe\r\n   \r\n   \r\nCheers!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1489835800, "answer_id": 42873647, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1500138836, "last_edit_date": 1500138836, "body_markdown": "I try to have two pings in the same window, and it is a serial command on the same line. After finishing the first, run the second command.\r\n\r\nThe solution was to combine with `start /b` on a Windows 7 command prompt.\r\n\r\nStart as usual, without `/b`, and launch in a separate window.\r\n\r\nThe command used to launch in the same line is:\r\n\r\n    start /b command1 parameters &amp; command2 parameters\r\n\r\nAny way, if you wish to parse the output, I don&#39;t recommend to use this.\r\nI noticed the output is scrambled between the output of the commands.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1493507776, "answer_id": 43701364, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1500138898, "last_edit_date": 1500138898, "body_markdown": "Well, you have two options: Piping, or just `&amp;`:\r\n\r\n    DIR /S &amp; START FILE.TXT\r\n\r\nOr,\r\n\r\n    tasklist | find &quot;notepad.exe&quot;\r\n\r\nPiping (`|`) is more for taking the output of one command, and putting it into another. And (`&amp;`) is just saying run this, and that.  \r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1494166140, "answer_id": 43832480, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1500138960, "last_edit_date": 1500138960, "body_markdown": "One more example: For example, when we use the `gulp` build system, instead of\r\n\r\n`gulp`        - default &gt; build\r\n\r\n`gulp build`  - build build-folder\r\n\r\n`gulp watch`  - start file-watch\r\n\r\n`gulp dist`   - build dist-folder\r\n\r\nWe can do that with one line:\r\n\r\n    cd c:\\xampp\\htdocs\\project &amp; gulp &amp; gulp watch\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1496675204, "answer_id": 44371959, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1496675204, "body_markdown": "**It&#39;s simple:** just differentiate them with &amp;&amp; signs. \r\nExample: \r\n\r\n    echo Hello World &amp;&amp; echo GoodBye World\r\n*Goodbye World will be printed after Hello World.*\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1502490149, "answer_id": 45644557, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1506161967, "last_edit_date": 1506161967, "body_markdown": "When you try to use or manipulate variables in one line beware of their content! E.g. a variable like the following\r\n\r\n&gt;     PATH=C:\\Program Files (x86)\\somewhere;&quot;C:\\Company\\Cool Tool&quot;;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps;\r\n\r\nmay lead to a lot of unhand-able trouble if you use it as `%PATH%`\r\n\r\n1. The closing parentheses terminate your group statement\r\n2. The double quotes don&#39;t allow you to use `%PATH%` to handle the parentheses problem\r\n3. And what will a referenced variable like `%USERPROFILE%` contain?"}], "title": "How do I run two commands in one line in Windows CMD?", "view_count": 516042, "answer_count": 16, "code_snippet": ["<code>touch thisfile ; ls -lstrh</code>", "<code>dir &amp; echo foo\n</code>", "<code>dir &amp;&amp; echo foo\n</code>", "<code>dir | echo foo\n</code>", "<code>dir ^T echo foo\n</code>", "<code>&amp;</code>", "<code>&amp;&amp;</code>", "<code>cmd</code>", "<code>&amp; [...]</code>", "<code>command1 &amp; command2</code>", "<code>&amp;&amp; [...]</code>", "<code>command1 &amp;&amp; command2</code>", "<code>|| [...]</code>", "<code>command1 || command2</code>", "<code>( ) [...]</code>", "<code>(command1 &amp; command2)</code>", "<code>; or ,</code>", "<code>command1 parameter1;parameter2</code>", "<code>cmd /c \"echo foo &amp; echo bar\"</code>", "<code>vagrant up &amp;&amp; vagrant ssh</code>", "<code>&amp;</code>", "<code>&amp;&amp;</code>", "<code>&amp;</code>", "<code>command1 &amp; command2</code>", "<code>command2</code>", "<code>command1</code>", "<code>command1</code>", "<code>&amp;</code>", "<code>;</code>", "<code>&amp;&amp;</code>", "<code>&amp;&amp;</code>", "<code>;</code>", "<code>;</code>", "<code>&amp;</code>", "<code>progname &amp;</code>", "<code>c:\\dir &amp; vim myFile.txt</code>", "<code>cmd /k echo hello &amp;&amp; cd c:\\ &amp;&amp; cd Windows\n</code>", "<code>set A=Hello &amp; call echo %A%\n</code>", "<code>echo</code>", "<code>setlocal EnableDelayedExpansion</code>", "<code>cmd /v</code>", "<code>timeout 5 &amp;&amp; cmd /v /c echo !TIME! &amp;&amp; echo %TIME%</code>", "<code>cmd /c ipconfig /all &amp; Output.txt</code>", "<code>Output.txt</code>", "<code>RegAsm</code>", "<code>Pause</code>", "<code>cmd /k</code>", "<code>pause</code>", "<code>exit</code>", "<code>cmd /k C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe \"%1\" /codebase \\\"%1\\\" &amp; pause &amp; exit</code>", "<code>[HKEY_CLASSES_ROOT\\.dll]\n\"Content Type\"=\"application/x-msdownload\"\n@=\"dllfile\"\n\n[HKEY_CLASSES_ROOT\\dllfile]\n@=\"Application Extension\"\n\n[HKEY_CLASSES_ROOT\\dllfile\\Shell\\RegAsm]\n@=\"Register Assembly\"\n\n[HKEY_CLASSES_ROOT\\dllfile\\Shell\\RegAsm\\command]\n@=\"cmd /k C:\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\v4.0.30319\\\\regasm.exe \\\"%1\\\" /codebase \\\"%1\\\" &amp; pause &amp; exit\"\n</code>", "<code>@echo off\nsetlocal enabledelayedexpansion\nset count=0\nset \"count=1\" &amp; echo %count% !count!\n\n0 1\n</code>", "<code>set \"i=5\" &amp; set \"arg!i!=MyFile!i!\" &amp; call echo path!i!=%temp%\\%%arg!i!%%\n\npath5=C:\\Users\\UserName\\AppData\\Local\\Temp\\MyFile5\n</code>", "<code>cmd /V:ON /c \"set i=5 &amp; set arg!i!=MyFile!i! &amp; echo path!i!=%temp%\\%arg!i!%\"</code>", "<code>color 0a &amp; start chrome.exe\n</code>", "<code>start /b</code>", "<code>/b</code>", "<code>start /b command1 parameters &amp; command2 parameters\n</code>", "<code>&amp;</code>", "<code>DIR /S &amp; START FILE.TXT\n</code>", "<code>tasklist | find \"notepad.exe\"\n</code>", "<code>|</code>", "<code>&amp;</code>", "<code>&amp;</code>", "<code>|</code>", "<code>echo Hello World &amp;&amp; echo GoodBye World\n</code>", "<code>&amp;&amp;</code>", "<code>Hello World</code>", "<code>&amp;&amp;</code>", "<code>&amp;</code>", "<code>cd / &amp;&amp; tree &amp;&amp; echo %time%</code>", "<code>gulp</code>", "<code>gulp</code>", "<code>gulp build</code>", "<code>gulp watch</code>", "<code>gulp dist</code>", "<code>cd c:\\xampp\\htdocs\\project &amp; gulp &amp; gulp watch\n</code>", "<code>PATH=C:\\Program Files (x86)\\somewhere;\"C:\\Company\\Cool Tool\";%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps;\n</code>", "<code>%PATH%</code>", "<code>%PATH%</code>", "<code>%USERPROFILE%</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "debugging", "error-handling", "child-process", "spawn"], "creation_date": 1419855720, "body_markdown": "## When I get the following error:\r\n\r\n    events.js:72\r\n            throw er; // Unhandled &#39;error&#39; event\r\n                  ^\r\n    Error: spawn ENOENT\r\n        at errnoException (child_process.js:1000:11)\r\n        at Process.ChildProcess._handle.onexit (child_process.js:791:34)\r\n\r\n## What procedure can I follow to fix it?\r\n\r\n**Author note**: Lots of issues with this error encouraged me to post this question for future references.\r\n\r\n**Related questions:**\r\n\r\n- https://stackoverflow.com/questions/20825157/using-spawn-function-with-node-env-production\r\n- https://stackoverflow.com/questions/24496015/node-js-child-process-spawn-enoent-error-only-under-supervisord\r\n- https://stackoverflow.com/questions/25090140/spawn-enoent-node-js-error\r\n- https://stackoverflow.com/questions/27603713/nodejs-spawn-enoent-error-on-travis-calling-global-npm-package\r\n- https://stackoverflow.com/questions/20156067/node-js-child-process-spawnnpm-install-in-grunt-task-results-in-enoent-err\r\n- https://stackoverflow.com/questions/24366113/running-foreman-task-fatal-error-spawn-enoent/27689089#27689089\r\n- https://stackoverflow.com/questions/26624302/unhandled-error-event-in-node-js-error-spawn-enoent-at-errnoexception-child-pr/27689141#27689141\r\n- https://stackoverflow.com/questions/21379677/node-js-spookyjs-error-executing-hello-js\r\n- https://stackoverflow.com/questions/26572214/run-grunt-on-a-directory-nodewebkit\r\n- https://stackoverflow.com/questions/23764429/run-exe-file-with-child-process-nodejs\r\n- https://stackoverflow.com/questions/24717446/node-child-process-spawn-not-working-on-java-even-though-its-in-the-path-enoe\r\n- https://stackoverflow.com/questions/26232590/spawn-enoent-error-with-nodejs (PYTHON related)\r\n- https://stackoverflow.com/questions/21346717/image-resizing-is-not-working-in-node-js-partial-js (non-installed dependency)\r\n- https://stackoverflow.com/questions/25924494/npm-install-error-enoent (build dependency problem)\r\n- https://stackoverflow.com/questions/27393631/cannot-install-node-js-oracle-module-on-windows-7 (build dependency problem)\r\n- https://stackoverflow.com/questions/26699999/error-installing-gulp-using-nodejs-on-windows (strange case)\r\n", "last_edit_date": 1495539206, "up_vote_count": 199, "link": "https://stackoverflow.com/questions/27688804/how-do-i-debug-error-spawn-enoent-on-node-js", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1419855720, "answer_id": 27688805, "path": "stack.gulp.answer", "score": 76, "up_vote_count": 76, "is_accepted": false, "last_activity_date": 1500478995, "last_edit_date": 1500478995, "body_markdown": "## Step 1: Ensure `spawn` is called the right way\r\n\r\nFirst, review the [docs for child_process.spawn( command, args, options )](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options):\r\n\r\n&gt; Launches a new process with the given `command`, with command line arguments in `args`. If omitted, `args` defaults to an empty Array.\r\n&gt; \r\n&gt; The third argument is used to specify additional options, which defaults to:\r\n&gt;\r\n&gt; `{ cwd: undefined, env: process.env }`\r\n&gt;\r\n&gt; Use `env` to specify environment variables that will be visible to the new process, the default is `process.env`.\r\n\r\n**Ensure you are not putting any command line arguments in `command` and the whole `spawn` call is valid**. Proceed to next step.\r\n\r\n## Step 2: Identify the Event Emitter that emits the error event\r\n\r\nSearch on your source code for each call to `spawn`, or `child_process.spawn`, i.e.\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    spawn(&#39;some-command&#39;, [ &#39;--help&#39; ]);\r\n\r\nand attach there an event listener for the &#39;error&#39; event, so you get noticed the exact Event Emitter that is throwing it as &#39;Unhandled&#39;. After debugging, that handler can be removed.\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    spawn(&#39;some-command&#39;, [ &#39;--help&#39; ])\r\n      .on(&#39;error&#39;, function( err ){ throw err })\r\n    ;\r\n\r\nExecute and you should get the file path and line number where your &#39;error&#39; listener was registered. Something like:\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    /file/that/registers/the/error/listener.js:29\r\n          throw err;\r\n                ^\r\n    Error: spawn ENOENT\r\n        at errnoException (child_process.js:1000:11)\r\n        at Process.ChildProcess._handle.onexit (child_process.js:791:34)\r\n\r\nIf the first two lines are still\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    events.js:72\r\n            throw er; // Unhandled &#39;error&#39; event\r\n\r\ndo this step again until they are not. **You must identify the listener that emits the error before going on next step.**\r\n\r\n## Step 3: Ensure the environment variable `$PATH` is set\r\n\r\nThere are two possible scenarios:\r\n\r\n1. You rely on the default `spawn` behaviour, so child process environment will be the same as `process.env`.\r\n2. You are explicity passing an `env` object to `spawn` on the `options` argument.\r\n\r\n**In both scenarios, you must inspect the `PATH` key on the environment object that the spawned child process will use.**\r\n\r\n*Example for scenario 1*\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    // inspect the PATH key on process.env\r\n    console.log( process.env.PATH );\r\n    spawn(&#39;some-command&#39;, [&#39;--help&#39;]);\r\n\r\n*Example for scenario 2*\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    var env = getEnvKeyValuePairsSomeHow();\r\n    // inspect the PATH key on the env object\r\n    console.log( env.PATH );\r\n    spawn(&#39;some-command&#39;, [&#39;--help&#39;], { env: env });\r\n\r\n**The absence of `PATH` (i.e., it&#39;s `undefined`) will cause `spawn` to emit the `ENOENT` error**, as it will not be possible to locate any `command` unless it&#39;s an absolute path to the executable file.\r\n\r\n**When `PATH` is correctly set, proceed to next step.** It should be a directory, or a list of directories. Last case is the usual.\r\n\r\n## Step 4: Ensure `command` exists on a directory of those defined in `PATH`\r\n\r\n**Spawn may emit the `ENOENT` error if the filename `command` (i.e, &#39;some-command&#39;) does not exist in at least one of the directories defined on `PATH`.**\r\n\r\nLocate the exact place of `command`. On most linux distributions, this can be done from a terminal with the `which` command. It will tell you the absolute path to the executable file (like above), or tell if it&#39;s not found.\r\n\r\n_Example usage of which and its output when a command is **found**_\r\n\r\n    &gt; which some-command\r\n    some-command is /usr/bin/some-command\r\n\r\n_Example usage of which and its output when a command is **not found**_\r\n\r\n    &gt; which some-command\r\n    bash: type: some-command: not found\r\n\r\n**miss-installed programs are the most common cause for a _not found_ command.** Refer to each command documentation if needed and install it.\r\n\r\n**When command is a simple script file ensure it&#39;s accessible from a directory on the `PATH`.** If it&#39;s not, either move it to one or make a link to it.\r\n\r\nOnce you determine `PATH` is correctly set and `command` is accessible from it, you should be able to spawn your child process without `spawn ENOENT` being thrown.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1420944030, "answer_id": 27883443, "path": "stack.gulp.answer", "score": 155, "up_vote_count": 155, "is_accepted": true, "last_activity_date": 1438698938, "last_edit_date": 1495541454, "body_markdown": "I found a particular easy way to get the idea of the root cause of:\r\n\r\n    Error: spawn ENOENT\r\n\r\nThe problem of this error is, there is really little information in the error message to tell you where the call site is, i.e. which executable/command is not found, especially when you have a large code base where there are a lot of spawn calls. On the other hand, if we know the exact command that cause the error then we can follow [@laconbass&#39; answer][leconbassanswer] to fix the problem.\r\n\r\nI found a very easy way to spot which command cause the problem rather than adding event listeners everywhere in your code as suggested in @laconbass&#39; answer. The key idea is to wrap the original spawn call with a wrapper which prints the arguments send to the spawn call.\r\n\r\nHere is the wrapper function, put it at the top of the `index.js` or whatever your server&#39;s starting script.\r\n\r\n    (function() {\r\n        var childProcess = require(&quot;child_process&quot;);\r\n        var oldSpawn = childProcess.spawn;\r\n        function mySpawn() {\r\n            console.log(&#39;spawn called&#39;);\r\n            console.log(arguments);\r\n            var result = oldSpawn.apply(this, arguments);\r\n            return result;\r\n        }\r\n        childProcess.spawn = mySpawn;\r\n    })();\r\n\r\nThen the next time you run your application, before the uncaught exception&#39;s message you will see something like that:\r\n\r\n    spawn called\r\n    { &#39;0&#39;: &#39;hg&#39;,\r\n      &#39;1&#39;: [],\r\n      &#39;2&#39;:\r\n       { cwd: &#39;/* omitted */&#39;,\r\n         env: { IP: &#39;0.0.0.0&#39; },\r\n         args: [] } }\r\n\r\nIn this way you can easily know which command actually is executed and then you can find out why nodejs cannot find the executable to fix the problem.\r\n\r\n[leconbassanswer]: https://stackoverflow.com/a/27688805/916892"}, {"tags": [], "down_vote_count": 0, "creation_date": 1434139279, "answer_id": 30811285, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1434139279, "body_markdown": "In my case, I was getting this error thrown due to the necessary dependent system resources not being installed.\r\n\r\nMore specifically, I have a NodeJS app that is utilizing ImageMagick.  Despite having the npm package installed, the core Linux ImageMagick was not installed.  I did an apt-get to install ImageMagick and after that all worked great!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1438803467, "answer_id": 31841386, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1438803467, "body_markdown": "For anyone who might stumble upon this, if all the other answers do not help and you are on Windows, know that there is currently [a big issue with `spawn` on Windows](https://github.com/joyent/node/issues/2318) and the `PATHEXT` environment variable that can cause certain calls to spawn to not work depending on how the target command is installed."}, {"tags": [], "down_vote_count": 0, "creation_date": 1456168606, "answer_id": 35561971, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1456171071, "last_edit_date": 1456171071, "body_markdown": "Windows solution: Replace `spawn` with [node-cross-spawn](https://github.com/IndigoUnited/node-cross-spawn). For instance like this at the beginning of your app.js:\r\n\r\n    (function() {\r\n\t    var childProcess = require(&quot;child_process&quot;);\r\n     \tchildProcess.spawn = require(&#39;cross-spawn&#39;);\r\n    })(); "}, {"tags": [], "down_vote_count": 0, "creation_date": 1456618810, "answer_id": 35677181, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1456618810, "body_markdown": "I was getting this error when trying to debug a node.js program from within VS Code editor on a Debian Linux system. I noticed the same thing worked OK on Windows. The solutions previously given here weren&#39;t much help because I hadn&#39;t written any &quot;spawn&quot; commands. The offending code was presumably written by Microsoft and hidden under the hood of the VS Code program.\r\n\r\nNext I noticed that node.js is called node on Windows but on Debian (and presumably on Debian-based systems such as Ubuntu) it&#39;s called nodejs. So I created an alias - from a root terminal, I ran \r\n\r\nln -s /usr/bin/nodejs /usr/local/bin/node\r\n\r\nand this solved the problem. The same or a similar procedure will presumably work in other cases where your node.js is called nodejs but you&#39;re running a program which expects it to be called node, or vice-versa."}, {"tags": [], "down_vote_count": 1, "creation_date": 1460424738, "answer_id": 36562121, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1511237510, "last_edit_date": 1511237510, "body_markdown": "@laconbass&#39;s answer helped me and is probably most correct.\r\n\r\nI came here because I was using spawn incorrectly.\r\nAs a simple example:\r\n\r\n*this is incorrect:*\r\n\r\n    const s = cp.spawn(&#39;npm install -D suman&#39;, [], {\r\n        cwd: root\r\n    });\r\n    \r\n\r\n*this is incorrect:*\r\n\r\n    const s = cp.spawn(&#39;npm&#39;, [&#39;install -D suman&#39;], {\r\n        cwd: root\r\n    });\r\n\r\n**this is correct:**\r\n\r\n    const s = cp.spawn(&#39;npm&#39;, [&#39;install&#39;,&#39;-D&#39;,&#39;suman&#39;], {\r\n        cwd: root\r\n    });\r\n      \r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1462535288, "answer_id": 37071607, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1462535288, "body_markdown": "I got the same error for windows 8.The issue is because of an environment variable of your system path is missing . Add &quot;C:\\Windows\\System32\\&quot; value to your system  PATH variable."}, {"tags": [], "down_vote_count": 0, "creation_date": 1463857353, "answer_id": 37366944, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1466924375, "last_edit_date": 1466924375, "body_markdown": "I ran into the same problem, but I found a simple way to fix it.\r\nIt appears to be `spawn()` errors if the program has been added to the PATH by the user (e.g. normal system commands work).\r\n\r\nTo fix this, you can use the [which][1] module (`npm install --save which`):\r\n    \r\n    // Require which and child_process\r\n    const which = require(&#39;which&#39;);\r\n    const spawn = require(&#39;child_process&#39;).spawn;\r\n    // Find npm in PATH\r\n    const npm = which.sync(&#39;npm&#39;);\r\n    // Execute\r\n    const noErrorSpawn = spawn(npm, [&#39;install&#39;]);\r\n\r\n\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/which"}, {"tags": [], "down_vote_count": 0, "creation_date": 1466174673, "answer_id": 37884459, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1466174673, "last_edit_date": 1495540989, "body_markdown": "As [@DanielImfeld pointed it][1], ENOENT will be thrown if you specify &quot;cwd&quot; in the options, but the given directory does not exist.\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/27688804/how-do-i-debug-error-spawn-enoent-on-node-js#comment55397048_27688805"}, {"tags": [], "down_vote_count": 2, "creation_date": 1471110578, "answer_id": 38935438, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1472674143, "last_edit_date": 1472674143, "body_markdown": "Add `C:\\Windows\\System32\\` to the `path` environment variable.\r\n\r\n## Steps\r\n\r\n 1. Go to my _computer and properties_\r\n\r\n 2. Click on _Advanced settings_\r\n\r\n 3. Then on _Environment variables_\r\n\r\n 4. Select `Path` and then click on edit \r\n\r\n 5. Paste the following if not already present: `C:\\Windows\\System32\\`\r\n\r\n 6. Close the command prompt \r\n\r\n 7. Run the command that you wanted to run \r\n\r\n![Windows 8 Environment variables screenshot][1]\r\n\r\n  [1]: http://i.stack.imgur.com/XCTAf.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1474770167, "answer_id": 39682805, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1474770167, "body_markdown": "For ENOENT on Windows, https://github.com/nodejs/node-v0.x-archive/issues/2318#issuecomment-249355505 fix it.\r\n\r\ne.g. replace spawn(&#39;npm&#39;, [&#39;-v&#39;], {stdio: &#39;inherit&#39;}) with:\r\n\r\n* for all node.js version:\r\n\r\n        spawn(/^win/.test(process.platform) ? &#39;npm.cmd&#39; : &#39;npm&#39;, [&#39;-v&#39;], {stdio: &#39;inherit&#39;})\r\n\r\n* for node.js 5.x and later:\r\n\r\n        spawn(&#39;npm&#39;, [&#39;-v&#39;], {stdio: &#39;inherit&#39;, shell: true})\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1482699014, "answer_id": 41324427, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1482699014, "body_markdown": "Ensure module to be executed is installed or full path to command if it&#39;s not a node module "}, {"tags": [], "down_vote_count": 0, "creation_date": 1496479889, "answer_id": 44342131, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1496479889, "body_markdown": "Use `require(&#39;child_process&#39;).exec` instead of spawn for a more specific error message! \r\n\r\nfor example:\r\n\r\n  \r\n\r\n    var exec = require(&#39;child_process&#39;).exec;\r\n    var commandStr = &#39;java -jar something.jar&#39;;\r\n      \r\n    exec(commandStr, function(error, stdout, stderr) {\r\n      if(error || stderr) console.log(error || stderr);\r\n      else console.log(stdout);\r\n    });"}, {"tags": [], "down_vote_count": 1, "creation_date": 1497746914, "answer_id": 44610771, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1497746914, "body_markdown": "If you&#39;re on Windows Node.js does some funny business when handling quotes that may result in you issuing a command that you know works from the console, but does not when run in Node. For example the following *should* work:\r\n\r\n    spawn(&#39;ping&#39;, [&#39;&quot;8.8.8.8&quot;&#39;], {});\r\n\r\nbut fails. There&#39;s a fantastically undocumented option `windowsVerbatimArguments` for handling quotes/similar that seems to do the trick, just be sure to add the following to your opts object:\r\n\r\n    const opts = {\r\n        windowsVerbatimArguments: true\r\n    };\r\n\r\nand your command should be back in business.\r\n\r\n     spawn(&#39;ping&#39;, [&#39;&quot;8.8.8.8&quot;&#39;], { windowsVerbatimArguments: true });"}], "title": "How do I debug &quot;Error: spawn ENOENT&quot; on node.js?", "view_count": 207708, "answer_count": 15, "code_snippet": ["<code>events.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: spawn ENOENT\n    at errnoException (child_process.js:1000:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:791:34)\n</code>", "<code>Error: spawn ENOENT\n</code>", "<code>index.js</code>", "<code>(function() {\n    var childProcess = require(\"child_process\");\n    var oldSpawn = childProcess.spawn;\n    function mySpawn() {\n        console.log('spawn called');\n        console.log(arguments);\n        var result = oldSpawn.apply(this, arguments);\n        return result;\n    }\n    childProcess.spawn = mySpawn;\n})();\n</code>", "<code>spawn called\n{ '0': 'hg',\n  '1': [],\n  '2':\n   { cwd: '/* omitted */',\n     env: { IP: '0.0.0.0' },\n     args: [] } }\n</code>", "<code>spawn()</code>", "<code>exec()</code>", "<code>exec()</code>", "<code>spawn</code>", "<code>command</code>", "<code>args</code>", "<code>args</code>", "<code>{ cwd: undefined, env: process.env }</code>", "<code>env</code>", "<code>process.env</code>", "<code>command</code>", "<code>spawn</code>", "<code>spawn</code>", "<code>child_process.spawn</code>", "<code>spawn('some-command', [ '--help' ]);\n</code>", "<code>spawn('some-command', [ '--help' ])\n  .on('error', function( err ){ throw err })\n;\n</code>", "<code>/file/that/registers/the/error/listener.js:29\n      throw err;\n            ^\nError: spawn ENOENT\n    at errnoException (child_process.js:1000:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:791:34)\n</code>", "<code>events.js:72\n        throw er; // Unhandled 'error' event\n</code>", "<code>$PATH</code>", "<code>spawn</code>", "<code>process.env</code>", "<code>env</code>", "<code>spawn</code>", "<code>options</code>", "<code>PATH</code>", "<code>// inspect the PATH key on process.env\nconsole.log( process.env.PATH );\nspawn('some-command', ['--help']);\n</code>", "<code>var env = getEnvKeyValuePairsSomeHow();\n// inspect the PATH key on the env object\nconsole.log( env.PATH );\nspawn('some-command', ['--help'], { env: env });\n</code>", "<code>PATH</code>", "<code>undefined</code>", "<code>spawn</code>", "<code>ENOENT</code>", "<code>command</code>", "<code>PATH</code>", "<code>command</code>", "<code>PATH</code>", "<code>ENOENT</code>", "<code>command</code>", "<code>PATH</code>", "<code>command</code>", "<code>which</code>", "<code>&gt; which some-command\nsome-command is /usr/bin/some-command\n</code>", "<code>&gt; which some-command\nbash: type: some-command: not found\n</code>", "<code>PATH</code>", "<code>PATH</code>", "<code>command</code>", "<code>spawn ENOENT</code>", "<code>PATH</code>", "<code>cwd</code>", "<code>spawn('some-command', ['--help'], { env: env });</code>", "<code>PATH</code>", "<code>{ env: { PATH: process.env.PATH } }</code>", "<code>spawn</code>", "<code>(function() {\n    var childProcess = require(\"child_process\");\n    childProcess.spawn = require('cross-spawn');\n})(); \n</code>", "<code>var spawn = require('cross-spawn');</code>", "<code>// Spawn NPM asynchronously var child = spawn('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' });</code>", "<code>spawn</code>", "<code>PATHEXT</code>", "<code>spawn</code>", "<code>exec</code>", "<code>const s = cp.spawn('npm install -D suman', [], {\n    cwd: root\n});\n</code>", "<code>const s = cp.spawn('npm', ['install -D suman'], {\n    cwd: root\n});\n</code>", "<code>const s = cp.spawn('npm', ['install','-D','suman'], {\n    cwd: root\n});\n</code>", "<code>spawn(/^win/.test(process.platform) ? 'npm.cmd' : 'npm', ['-v'], {stdio: 'inherit'})\n</code>", "<code>spawn('npm', ['-v'], {stdio: 'inherit', shell: true})\n</code>", "<code>spawn()</code>", "<code>npm install --save which</code>", "<code>// Require which and child_process\nconst which = require('which');\nconst spawn = require('child_process').spawn;\n// Find npm in PATH\nconst npm = which.sync('npm');\n// Execute\nconst noErrorSpawn = spawn(npm, ['install']);\n</code>", "<code>require('child_process').exec</code>", "<code>var exec = require('child_process').exec;\nvar commandStr = 'java -jar something.jar';\n\nexec(commandStr, function(error, stdout, stderr) {\n  if(error || stderr) console.log(error || stderr);\n  else console.log(stdout);\n});\n</code>", "<code>spawn('ping', ['\"8.8.8.8\"'], {});\n</code>", "<code>windowsVerbatimArguments</code>", "<code>const opts = {\n    windowsVerbatimArguments: true\n};\n</code>", "<code> spawn('ping', ['\"8.8.8.8\"'], { windowsVerbatimArguments: true });\n</code>", "<code>C:\\Windows\\System32\\</code>", "<code>path</code>", "<code>Path</code>", "<code>C:\\Windows\\System32\\</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "coffeescript", "gulp"], "creation_date": 1396478735, "body_markdown": "in the snippet like this: \r\n\r\n    gulp.task &quot;coffee&quot;, -&gt;\r\n        gulp.src(&quot;src/server/**/*.coffee&quot;)\r\n            .pipe(coffee {bare: true}).on(&quot;error&quot;,gutil.log)\r\n            .pipe(gulp.dest &quot;bin&quot;)\r\n    \r\n    gulp.task &quot;clean&quot;,-&gt;\r\n        gulp.src(&quot;bin&quot;, {read:false})\r\n            .pipe clean\r\n                force:true\r\n    \r\n    gulp.task &#39;develop&#39;,[&#39;clean&#39;,&#39;coffee&#39;], -&gt;\r\n        console.log &quot;run something else&quot;\r\n\r\nIn `develop` task I want to run `clean` and after it&#39;s done, run `coffee` and when that&#39;s done, run something else. But I can&#39;t figure that out. This piece doesn&#39;t work. Please advise. ", "last_edit_date": 1471897479, "up_vote_count": 339, "link": "https://stackoverflow.com/questions/22824546/how-to-run-gulp-tasks-sequentially-one-after-the-other", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1396490143, "answer_id": 22826429, "path": "stack.gulp.answer", "score": 377, "up_vote_count": 380, "is_accepted": false, "last_activity_date": 1441497440, "last_edit_date": 1441497440, "body_markdown": "By default, gulp runs tasks simultaneously, unless they have explicit dependencies.  This isn&#39;t very useful for tasks like `clean`, where you don&#39;t want to depend, but you need them to run before everything else.\r\n\r\nI wrote [the `run-sequence` plugin](https://www.npmjs.org/package/run-sequence) specifically to fix this issue with gulp.  After you install it, use it like this:\r\n\r\n    var runSequence = require(&#39;run-sequence&#39;);\r\n\r\n    gulp.task(&#39;develop&#39;, function(done) {\r\n        runSequence(&#39;clean&#39;, &#39;coffee&#39;, function() {\r\n            console.log(&#39;Run something else&#39;);\r\n            done();\r\n        });\r\n    });\r\n\r\nYou can read the full instructions on the package README \u2014 it also supports running some sets of tasks simultaneously.\r\n\r\nPlease note, this will be [(effectively) fixed in the next major release of gulp](https://github.com/gulpjs/gulp/issues/355), as they are completely eliminating the automatic dependency ordering, and providing tools similar to `run-sequence` to allow you to manually specify run order how you want.\r\n\r\nHowever, that is a major breaking change, so there&#39;s no reason to wait when you can use `run-sequence` today."}, {"tags": [], "down_vote_count": 1, "creation_date": 1413401390, "answer_id": 26390567, "path": "stack.gulp.answer", "score": 343, "up_vote_count": 344, "is_accepted": false, "last_activity_date": 1457527019, "last_edit_date": 1457527019, "body_markdown": "The only good solution to this problem can be found in the gulp documentation which can be found [here][1]\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var gulp = require(&#39;gulp&#39;);\r\n\r\n    // takes in a callback so the engine knows when it&#39;ll be done\r\n    gulp.task(&#39;one&#39;, function(cb) {\r\n      // do stuff -- async or otherwise\r\n      cb(err); // if err is not null and not undefined, the orchestration will stop, and &#39;two&#39; will not run\r\n    });\r\n\r\n    // identifies a dependent task must be complete before this one begins\r\n    gulp.task(&#39;two&#39;, [&#39;one&#39;], function() {\r\n      // task &#39;one&#39; is done now\r\n    });\r\n\r\n    gulp.task(&#39;default&#39;, [&#39;one&#39;, &#39;two&#39;]);\r\n    // alternatively: gulp.task(&#39;default&#39;, [&#39;two&#39;]);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n\r\n  [1]: https://github.com/gulpjs/gulp/blob/master/docs/API.md#async-task-support"}, {"tags": [], "down_vote_count": 9, "creation_date": 1429241523, "answer_id": 29689755, "path": "stack.gulp.answer", "score": -7, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1429241523, "body_markdown": "Try this hack :-) \r\n[Gulp v3.x Hack for Async bug][1]\r\n\r\nI tried all of the &quot;official&quot; ways in the Readme, they didn&#39;t work for me but this did. You can also upgrade to gulp 4.x but I highly recommend you don&#39;t, it breaks so much stuff. You could use a real js promise, but hey, this is quick, dirty, simple :-)\r\nEssentially you use:\r\n\r\n    var wait = 0; // flag to signal thread that task is done\r\n    if(wait == 0) setTimeout(... // sleep and let nodejs schedule other threads\r\nCheck out the post!\r\n\r\n\r\n\r\n  [1]: https://medium.com/@willbittner/gulp-v3-x-hack-to-fix-error-gulp-resolve-dependencies-file-not-found-and-tasks-being-executed-d6b8f9df7df3"}, {"tags": [], "down_vote_count": 1, "creation_date": 1429555286, "answer_id": 29755873, "path": "stack.gulp.answer", "score": 43, "up_vote_count": 44, "is_accepted": false, "last_activity_date": 1484857901, "last_edit_date": 1484857901, "body_markdown": "I generated a node/gulp app using the [generator-gulp-webapp](https://github.com/yeoman/generator-gulp-webapp) Yeoman generator.  It handled the &quot;clean conundrum&quot; this way (translating to the original tasks mentioned in the question):\r\n\r\n    gulp.task(&#39;develop&#39;, [&#39;clean&#39;], function () {\r\n      gulp.start(&#39;coffee&#39;);\r\n    });"}, {"tags": [], "down_vote_count": 0, "creation_date": 1429874475, "answer_id": 29846174, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1429874475, "body_markdown": "I was having this exact same problem and the solution turned out to be pretty easy for me.  Basically change your code to the following and it should work. NOTE: the return before gulp.src made all the difference for me.\r\n\r\n    gulp.task &quot;coffee&quot;, -&gt;\r\n        return gulp.src(&quot;src/server/**/*.coffee&quot;)\r\n            .pipe(coffee {bare: true}).on(&quot;error&quot;,gutil.log)\r\n            .pipe(gulp.dest &quot;bin&quot;)\r\n\r\n    gulp.task &quot;clean&quot;,-&gt;\r\n        return gulp.src(&quot;bin&quot;, {read:false})\r\n            .pipe clean\r\n                force:true\r\n\r\n    gulp.task &#39;develop&#39;,[&#39;clean&#39;,&#39;coffee&#39;], -&gt;\r\n        console.log &quot;run something else&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1436047850, "answer_id": 31225490, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1436053944, "last_edit_date": 1436053944, "body_markdown": "Simply make `coffee` depend on `clean`, and `develop` depend on `coffee`:\r\n\r\n    gulp.task(&#39;coffee&#39;, [&#39;clean&#39;], function(){...});\r\n    gulp.task(&#39;develop&#39;, [&#39;coffee&#39;], function(){...});\r\n\r\nDispatch is now serial: `clean` &amp;#8594; `coffee` &amp;#8594; `develop`. Note that `clean`&#39;s implementation and `coffee`&#39;s implementation **must** accept a callback, [&quot;so the engine knows when it&#39;ll be done&quot;][1]:\r\n\r\n    gulp.task(&#39;clean&#39;, function(callback){\r\n      del([&#39;dist/*&#39;], callback);\r\n    });\r\n\r\nIn conclusion, below is a **simple gulp pattern for a synchronous `clean` followed by asynchronous build dependencies**:\r\n\r\n    //build sub-tasks\r\n    gulp.task(&#39;bar&#39;, [&#39;clean&#39;], function(){...});\r\n    gulp.task(&#39;foo&#39;, [&#39;clean&#39;], function(){...});\r\n    gulp.task(&#39;baz&#39;, [&#39;clean&#39;], function(){...});\r\n    ...\r\n    \r\n    //main build task\r\n    gulp.task(&#39;build&#39;, [&#39;foo&#39;, &#39;baz&#39;, &#39;bar&#39;, ...], function(){...})\r\n\r\nGulp is smart enough to run `clean` exactly once per `build`, no matter how many of `build`&#39;s dependencies depend on `clean`. As written above, `clean` is a synchronization barrier, then all of `build`&#39;s dependencies run in parallel, then `build` runs.\r\n\r\n  [1]: https://github.com/gulpjs/gulp/blob/master/docs/API.md"}, {"tags": [], "down_vote_count": 6, "creation_date": 1436479910, "answer_id": 31329150, "path": "stack.gulp.answer", "score": 71, "up_vote_count": 77, "is_accepted": true, "last_activity_date": 1517933308, "last_edit_date": 1517933308, "body_markdown": "It&#39;s not an official release yet, but the coming up Gulp 4.0 lets you easily do synchronous tasks with gulp.series. You can simply do it like this:\r\n\r\n    gulp.task(&#39;develop&#39;, gulp.series(&#39;clean&#39;, &#39;coffee&#39;))\r\n\r\nI found a good blog post introducing how to upgrade and make a use of those neat features:\r\n [migrating to gulp 4 by example][1]\r\n\r\n\r\n\r\n\r\n  [1]: https://blog.wearewizards.io/migrating-to-gulp-4-by-example"}, {"tags": [], "down_vote_count": 0, "creation_date": 1440439876, "answer_id": 32188928, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1440439876, "body_markdown": "According to the Gulp docs: \r\n\r\n&gt; Are your tasks running before the dependencies are complete? Make sure your dependency tasks are correctly using the async run hints: take in a callback or return a promise or event stream.\r\n\r\nTo run your sequence of tasks synchronously:\r\n\r\n 1. Return the event stream (e.g. `gulp.src`) to `gulp.task` to inform\r\n    the task of when the stream ends.\r\n 2. Declare task dependencies in the second argument of `gulp.task`.\r\n\r\nSee the revised code:\r\n\r\n    gulp.task &quot;coffee&quot;, -&gt;\r\n        return gulp.src(&quot;src/server/**/*.coffee&quot;)\r\n            .pipe(coffee {bare: true}).on(&quot;error&quot;,gutil.log)\r\n            .pipe(gulp.dest &quot;bin&quot;)\r\n    \r\n    gulp.task &quot;clean&quot;, [&#39;coffee&#39;], -&gt;\r\n          return gulp.src(&quot;bin&quot;, {read:false})\r\n            .pipe clean\r\n                force:true\r\n    \r\n    gulp.task &#39;develop&#39;,[&#39;clean&#39;,&#39;coffee&#39;], -&gt;\r\n        console.log &quot;run something else&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1452851308, "answer_id": 34808309, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1452851308, "body_markdown": "I was searching for this answer for a while. Now I got it in the official gulp documentation. \r\n\r\nIf you want to perform a gulp task when the last one is complete, you have to return a stream:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    gulp.task(&#39;wiredep&#39;, [&#39;dev-jade&#39;], function () {\r\n        var stream = gulp.src(paths.output + &#39;*.html&#39;)\r\n            .pipe($.wiredep())\r\n            .pipe(gulp.dest(paths.output));\r\n\r\n        return stream; // execute next task when this is completed\r\n    });\r\n\r\n    // First will execute and complete wiredep task\r\n    gulp.task(&#39;prod-jade&#39;, [&#39;wiredep&#39;], function() {\r\n        gulp.src(paths.output + &#39;**/*.html&#39;)\r\n            .pipe($.minifyHtml())\r\n            .pipe(gulp.dest(paths.output));\r\n    });\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1454520840, "answer_id": 35183849, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1454520840, "body_markdown": "Gulp and Node use **promises**.\r\n\r\nSo you can do this:\r\n\r\n    // ... require gulp, del, etc\r\n    \r\n    function cleanTask() {\r\n      return del(&#39;./dist/&#39;);\r\n    }\r\n\r\n    function bundleVendorsTask() {\r\n      return gulp.src([...])\r\n        .pipe(...)\r\n        .pipe(gulp.dest(&#39;...&#39;));\r\n    }\r\n    \r\n    function bundleAppTask() {\r\n      return gulp.src([...])\r\n        .pipe(...)\r\n        .pipe(gulp.dest(&#39;...&#39;));\r\n    }\r\n    \r\n    function tarTask() {\r\n      return gulp.src([...])\r\n        .pipe(...)\r\n        .pipe(gulp.dest(&#39;...&#39;));\r\n    }\r\n    \r\n    gulp.task(&#39;deploy&#39;, function deployTask() {\r\n      // 1. Run the clean task\r\n      cleanTask().then(function () {\r\n        // 2. Clean is complete. Now run two tasks in parallel\r\n        Promise.all([\r\n          bundleVendorsTask(),\r\n          bundleAppTask()\r\n        ]).then(function () {\r\n          // 3. Two tasks are complete, now run the final task.\r\n          tarTask();\r\n        });\r\n      });\r\n    });\r\n\r\nIf you return the gulp stream, you can use the `then()` method to add a callback. Alternately, you can use Node&#39;s native `Promise` to create your own promises. Here I use `Promise.all()` to have one callback that fires when all the promises resolve."}, {"tags": [], "down_vote_count": 0, "creation_date": 1456042586, "answer_id": 35533842, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1456043404, "last_edit_date": 1456043404, "body_markdown": "For me it was not running the minify task after concatenation as it expects concatenated input and it was not generated some times. \r\n\r\nI tried adding to a default task in execution order and it didn&#39;t worked. It worked after adding just a ``return`` for each tasks and getting the minification inside ``gulp.start()`` like below.\r\n\r\n    /**\r\n    * Concatenate JavaScripts\r\n    */\r\n    gulp.task(&#39;concat-js&#39;, function(){\r\n    \treturn gulp.src([\r\n    \t\t&#39;js/jquery.js&#39;,\r\n    \t\t&#39;js/jquery-ui.js&#39;,\r\n    \t\t&#39;js/bootstrap.js&#39;,\r\n    \t\t&#39;js/jquery.onepage-scroll.js&#39;,\r\n    \t\t&#39;js/script.js&#39;])\r\n    \t.pipe(maps.init())\r\n    \t.pipe(concat(&#39;ux.js&#39;))\r\n    \t.pipe(maps.write(&#39;./&#39;))\r\n    \t.pipe(gulp.dest(&#39;dist/js&#39;));\r\n    });\r\n    \r\n    /**\r\n    * Minify JavaScript\r\n    */\r\n    gulp.task(&#39;minify-js&#39;, function(){\r\n    \treturn gulp.src(&#39;dist/js/ux.js&#39;)\r\n    \t.pipe(uglify())\r\n    \t.pipe(rename(&#39;ux.min.js&#39;))\r\n    \t.pipe(gulp.dest(&#39;dist/js&#39;));\r\n    });\r\n\r\n    gulp.task(&#39;concat&#39;, [&#39;concat-js&#39;], function(){\r\n\t   gulp.start(&#39;minify-js&#39;);\r\n    });\r\n\r\n    gulp.task(&#39;default&#39;,[&#39;concat&#39;]); \r\n\r\nSource http://schickling.me/synchronous-tasks-gulp/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1470604706, "answer_id": 38818657, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1470604706, "body_markdown": "[run-sequence](https://www.npmjs.org/package/run-sequence) is the most clear way (at least until Gulp 4.0 is released)\r\n\r\n**With run-sequence**, your task will look like this:\r\n\r\n    var sequence = require(&#39;run-sequence&#39;);\r\n    /* ... */\r\n    gulp.task(&#39;develop&#39;, function (done) {\r\n        sequence(&#39;clean&#39;, &#39;coffee&#39;, done);\r\n    });\r\n\r\n\r\nBut if you (for some reason) prefer not using it, **`gulp.start` method will help**:\r\n\r\n    gulp.task(&#39;develop&#39;, [&#39;clean&#39;], function (done) {\r\n        gulp.on(&#39;task_stop&#39;, function (event) {\r\n            if (event.task === &#39;coffee&#39;) {\r\n                done();\r\n            }\r\n        });\r\n        gulp.start(&#39;coffee&#39;);\r\n    });\r\n\r\n**Note:** *If you only start task without listening to result, `develop` task will finish earlier than `coffee`, and that may be confusing.*\r\n\r\nYou may also **remove event listener** when not needed\r\n\r\n    gulp.task(&#39;develop&#39;, [&#39;clean&#39;], function (done) {\r\n        function onFinish(event) {\r\n            if (event.task === &#39;coffee&#39;) {\r\n                gulp.removeListener(&#39;task_stop&#39;, onFinish);\r\n                done();\r\n            }\r\n        }\r\n        gulp.on(&#39;task_stop&#39;, onFinish);\r\n        gulp.start(&#39;coffee&#39;);\r\n    });\r\n\r\n\r\nConsider **there is also `task_err` event** you may want to listen to.\r\n`task_stop` is triggered on successful finish, while `task_err` appears when there is some error.\r\n\r\nYou may also wonder why there is no official documentation for `gulp.start()`. This answer from gulp member explains the things: \r\n&gt; `gulp.start` is undocumented on purpose because it can lead to complicated build files and we don&#39;t want people using it\r\n\r\n(source: https://github.com/gulpjs/gulp/issues/426#issuecomment-41208007) "}, {"tags": [], "down_vote_count": 0, "creation_date": 1495664290, "answer_id": 44169372, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1495664290, "body_markdown": "tried all proposed solutions, all seem to have issues of their own. \r\n\r\nIf you actually look into the Orchestrator source, particularly the `.start()` implementation you will see that if the last parameter is a function it will treat it as a callback.\r\n\r\nI wrote this snippet for my own tasks:      \r\n\r\n      gulp.task( &#39;task1&#39;, () =&gt; console.log(a) )\r\n      gulp.task( &#39;task2&#39;, () =&gt; console.log(a) )\r\n      gulp.task( &#39;task3&#39;, () =&gt; console.log(a) )\r\n      gulp.task( &#39;task4&#39;, () =&gt; console.log(a) )\r\n      gulp.task( &#39;task5&#39;, () =&gt; console.log(a) )\r\n      \r\n      function runSequential( tasks ) {\r\n        if( !tasks || tasks.length &lt;= 0 ) return;\r\n\r\n    \tconst task = tasks[0];\r\n    \tgulp.start( task, () =&gt; {\r\n    \t    console.log( `${task} finished` );\r\n    \t    runSequential( tasks.slice(1) );\r\n    \t} );\r\n      }\r\n      gulp.task( &quot;run-all&quot;, () =&gt; runSequential([ &quot;task1&quot;, &quot;task2&quot;, &quot;task3&quot;, &quot;task4&quot;, &quot;task5&quot; ));\r\n\r\n"}], "title": "How to run Gulp tasks sequentially one after the other", "view_count": 178881, "answer_count": 13, "code_snippet": ["<code>gulp.task \"coffee\", -&gt;\n    gulp.src(\"src/server/**/*.coffee\")\n        .pipe(coffee {bare: true}).on(\"error\",gutil.log)\n        .pipe(gulp.dest \"bin\")\n\ngulp.task \"clean\",-&gt;\n    gulp.src(\"bin\", {read:false})\n        .pipe clean\n            force:true\n\ngulp.task 'develop',['clean','coffee'], -&gt;\n    console.log \"run something else\"\n</code>", "<code>develop</code>", "<code>clean</code>", "<code>coffee</code>", "<code>run-sequence</code>", "<code>gulp.task('develop', gulp.series('clean', 'coffee'))\n</code>", "<code>npm install gulp@next</code>", "<code>gulp.task('coffee', ['clean'], function(){...}); gulp.task('develop', ['coffee']);</code>", "<code>clean</code>", "<code>run-sequence</code>", "<code>var runSequence = require('run-sequence');\n\ngulp.task('develop', function(done) {\n    runSequence('clean', 'coffee', function() {\n        console.log('Run something else');\n        done();\n    });\n});\n</code>", "<code>run-sequence</code>", "<code>run-sequence</code>", "<code>gulp-clean</code>", "<code>run-sequence</code>", "<code>var gulp = require('gulp');\n\n// takes in a callback so the engine knows when it'll be done\ngulp.task('one', function(cb) {\n  // do stuff -- async or otherwise\n  cb(err); // if err is not null and not undefined, the orchestration will stop, and 'two' will not run\n});\n\n// identifies a dependent task must be complete before this one begins\ngulp.task('two', ['one'], function() {\n  // task 'one' is done now\n});\n\ngulp.task('default', ['one', 'two']);\n// alternatively: gulp.task('default', ['two']);\n</code>", "<code>ReferenceError: err is not defined</code>", "<code>gulp-compass</code>", "<code>return gulp.src('app/**/*.js').pipe(concat(app.js)).pipe(gulp.dest('app/scripts');</code>", "<code>gulp.task('two', ['one'], function() {...</code>", "<code>gulp.task('develop', ['clean'], function () {\n  gulp.start('coffee');\n});\n</code>", "<code>gulp.start()</code>", "<code>gulp.start is undocumented on purpose because it can lead to complicated build files and we don't want people using it</code>", "<code>coffee</code>", "<code>develop</code>", "<code>coffee</code>", "<code>run-sequence</code>", "<code>gulp.on('task_stop')</code>", "<code>var sequence = require('run-sequence');\n/* ... */\ngulp.task('develop', function (done) {\n    sequence('clean', 'coffee', done);\n});\n</code>", "<code>gulp.start</code>", "<code>gulp.task('develop', ['clean'], function (done) {\n    gulp.on('task_stop', function (event) {\n        if (event.task === 'coffee') {\n            done();\n        }\n    });\n    gulp.start('coffee');\n});\n</code>", "<code>develop</code>", "<code>coffee</code>", "<code>gulp.task('develop', ['clean'], function (done) {\n    function onFinish(event) {\n        if (event.task === 'coffee') {\n            gulp.removeListener('task_stop', onFinish);\n            done();\n        }\n    }\n    gulp.on('task_stop', onFinish);\n    gulp.start('coffee');\n});\n</code>", "<code>task_err</code>", "<code>task_stop</code>", "<code>task_err</code>", "<code>gulp.start()</code>", "<code>gulp.start</code>", "<code>gulp.src</code>", "<code>gulp.task</code>", "<code>gulp.task</code>", "<code>gulp.task \"coffee\", -&gt;\n    return gulp.src(\"src/server/**/*.coffee\")\n        .pipe(coffee {bare: true}).on(\"error\",gutil.log)\n        .pipe(gulp.dest \"bin\")\n\ngulp.task \"clean\", ['coffee'], -&gt;\n      return gulp.src(\"bin\", {read:false})\n        .pipe clean\n            force:true\n\ngulp.task 'develop',['clean','coffee'], -&gt;\n    console.log \"run something else\"\n</code>", "<code>gulp.task \"coffee\", -&gt;\n    return gulp.src(\"src/server/**/*.coffee\")\n        .pipe(coffee {bare: true}).on(\"error\",gutil.log)\n        .pipe(gulp.dest \"bin\")\n\ngulp.task \"clean\",-&gt;\n    return gulp.src(\"bin\", {read:false})\n        .pipe clean\n            force:true\n\ngulp.task 'develop',['clean','coffee'], -&gt;\n    console.log \"run something else\"\n</code>", "<code>gulp.task('wiredep', ['dev-jade'], function () {\r\n    var stream = gulp.src(paths.output + '*.html')\r\n        .pipe($.wiredep())\r\n        .pipe(gulp.dest(paths.output));\r\n\r\n    return stream; // execute next task when this is completed\r\n});\r\n\r\n// First will execute and complete wiredep task\r\ngulp.task('prod-jade', ['wiredep'], function() {\r\n    gulp.src(paths.output + '**/*.html')\r\n        .pipe($.minifyHtml())\r\n        .pipe(gulp.dest(paths.output));\r\n});</code>", "<code>return</code>", "<code>gulp.start()</code>", "<code>/**\n* Concatenate JavaScripts\n*/\ngulp.task('concat-js', function(){\n    return gulp.src([\n        'js/jquery.js',\n        'js/jquery-ui.js',\n        'js/bootstrap.js',\n        'js/jquery.onepage-scroll.js',\n        'js/script.js'])\n    .pipe(maps.init())\n    .pipe(concat('ux.js'))\n    .pipe(maps.write('./'))\n    .pipe(gulp.dest('dist/js'));\n});\n\n/**\n* Minify JavaScript\n*/\ngulp.task('minify-js', function(){\n    return gulp.src('dist/js/ux.js')\n    .pipe(uglify())\n    .pipe(rename('ux.min.js'))\n    .pipe(gulp.dest('dist/js'));\n});\n\ngulp.task('concat', ['concat-js'], function(){\n   gulp.start('minify-js');\n});\n\ngulp.task('default',['concat']); \n</code>", "<code>.start()</code>", "<code>  gulp.task( 'task1', () =&gt; console.log(a) )\n  gulp.task( 'task2', () =&gt; console.log(a) )\n  gulp.task( 'task3', () =&gt; console.log(a) )\n  gulp.task( 'task4', () =&gt; console.log(a) )\n  gulp.task( 'task5', () =&gt; console.log(a) )\n\n  function runSequential( tasks ) {\n    if( !tasks || tasks.length &lt;= 0 ) return;\n\n    const task = tasks[0];\n    gulp.start( task, () =&gt; {\n        console.log( `${task} finished` );\n        runSequential( tasks.slice(1) );\n    } );\n  }\n  gulp.task( \"run-all\", () =&gt; runSequential([ \"task1\", \"task2\", \"task3\", \"task4\", \"task5\" ));\n</code>", "<code>coffee</code>", "<code>clean</code>", "<code>develop</code>", "<code>coffee</code>", "<code>gulp.task('coffee', ['clean'], function(){...});\ngulp.task('develop', ['coffee'], function(){...});\n</code>", "<code>clean</code>", "<code>coffee</code>", "<code>develop</code>", "<code>clean</code>", "<code>coffee</code>", "<code>gulp.task('clean', function(callback){\n  del(['dist/*'], callback);\n});\n</code>", "<code>clean</code>", "<code>//build sub-tasks\ngulp.task('bar', ['clean'], function(){...});\ngulp.task('foo', ['clean'], function(){...});\ngulp.task('baz', ['clean'], function(){...});\n...\n\n//main build task\ngulp.task('build', ['foo', 'baz', 'bar', ...], function(){...})\n</code>", "<code>clean</code>", "<code>build</code>", "<code>build</code>", "<code>clean</code>", "<code>clean</code>", "<code>build</code>", "<code>build</code>", "<code>// ... require gulp, del, etc\n\nfunction cleanTask() {\n  return del('./dist/');\n}\n\nfunction bundleVendorsTask() {\n  return gulp.src([...])\n    .pipe(...)\n    .pipe(gulp.dest('...'));\n}\n\nfunction bundleAppTask() {\n  return gulp.src([...])\n    .pipe(...)\n    .pipe(gulp.dest('...'));\n}\n\nfunction tarTask() {\n  return gulp.src([...])\n    .pipe(...)\n    .pipe(gulp.dest('...'));\n}\n\ngulp.task('deploy', function deployTask() {\n  // 1. Run the clean task\n  cleanTask().then(function () {\n    // 2. Clean is complete. Now run two tasks in parallel\n    Promise.all([\n      bundleVendorsTask(),\n      bundleAppTask()\n    ]).then(function () {\n      // 3. Two tasks are complete, now run the final task.\n      tarTask();\n    });\n  });\n});\n</code>", "<code>then()</code>", "<code>Promise</code>", "<code>Promise.all()</code>", "<code>var wait = 0; // flag to signal thread that task is done\nif(wait == 0) setTimeout(... // sleep and let nodejs schedule other threads\n</code>"], "path": "stack.gulp"}, {"tags": ["windows", "node.js", "module", "require", "npm"], "creation_date": 1331050879, "body_markdown": "I am learning nodejs at the moment on Windows. Several modules are installed globally with npm.cmd, and nodejs failed to find the installed modules. Take jade for example,\r\n\r\n    npm install jade -g\r\n\r\nJade is installed in directory `&quot;C:\\Program Files (x86)\\nodejs\\node_modules&quot;`, but the following code will fail with a `&quot;Cannot find module &#39;jade&#39;&quot;` error,\r\n\r\n    var jade = require(&#39;jade&#39;);\r\n\r\nHowever, the code will run successfully when jade is locally installed (without -g option in npm). I don&#39;t want to use locally-installed modules, it&#39;s a waste of disk space for me, can someone help me to make the globally-installed modules work on Windows?", "last_edit_date": 1354416872, "up_vote_count": 190, "link": "https://stackoverflow.com/questions/9587665/nodejs-cannot-find-installed-module-on-windows", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1331052236, "answer_id": 9588052, "path": "stack.gulp.answer", "score": 271, "up_vote_count": 271, "is_accepted": true, "last_activity_date": 1513255115, "last_edit_date": 1513255115, "body_markdown": "Add an environment variable called `NODE_PATH` and set it to `%USERPROFILE%\\Application Data\\npm\\node_modules` (Windows XP), `%AppData%\\npm\\node_modules` (Windows 7/8/10), or wherever npm ends up installing the modules on your Windows flavor. To be done with it once and for all, add this as a System variable in the Advanced tab of the System Properties dialog (run `control.exe sysdm.cpl,System,3`).\r\n\r\nQuick solution in Windows 7+ is to just run:\r\n\r\n    rem for future\r\n    setx NODE_PATH %AppData%\\npm\\node_modules\r\n    rem for current session\r\n    set NODE_PATH=%AppData%\\npm\\node_modules\r\n\r\nIt&#39;s worth to mention that `NODE_PATH` is only used when importing modules in Node apps. When you want to use globally installed modules&#39; binaries in your CLI you need to add it also to your `PATH`, but without `node_modules` part (for example `%AppData%\\npm` in Windows 7/8/10).\r\n\r\n---\r\n_Old story_\r\n\r\n\r\nI&#39;m pretty much new to node.js myself so I can be not entirely right but from my experience it&#39;s works this way:\r\n\r\n1. **-g** is not a way to install global libraries, it&#39;s only a way to place them on system path so you can call them from command line without writing the full path to them. It is useful, for example, then node app is converting local files, like **less** \u2014 if you install it globally you can use it in any directory.\r\n2. node.js itself didn&#39;t look at the npm global dir, it is using another algorithm to find required files: http://nodejs.org/api/modules.html#modules_file_modules (basically its scanning every folder in the path, starting from the current for **node_modules** folder and checks it).\r\n\r\nSee similar question for more details: https://stackoverflow.com/questions/5817874/node-js-npm-is-not-installing-module-in-the-default-path\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1331053623, "answer_id": 9588420, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1506585239, "last_edit_date": 1506585239, "body_markdown": "I&#39;ll just quote from this node&#39;s [blog post][1]...\r\n\r\n&gt; In general, the rule of thumb is:\r\n&gt; \r\n&gt; - If you\u2019re installing something that you want to use in your program, using require(&#39;whatever&#39;), then install it locally, at the root of\r\n&gt; your project.\r\n&gt; - If you\u2019re installing something that you want to use in your shell, on the command line or something, install it globally, so that its\r\n&gt; binaries end up in your PATH environment variable.\r\n&gt;  \r\n&gt; ...\r\n&gt; \r\n&gt; Of course, there are some cases where you want to do both.\r\n&gt; Coffee-script and Express both are good examples of apps that have a\r\n&gt; command line interface, as well as a library. In those cases, you can\r\n&gt; do one of the following:\r\n&gt; \r\n&gt; 1. Install it in both places. Seriously, are you that short on disk space? It\u2019s fine, really. They\u2019re tiny JavaScript programs.\r\n&gt; 2. Install it globally, and then npm link coffee-script or npm link express (if you\u2019re on a platform that supports symbolic links.) Then\r\n&gt; you only need to update the global copy to update all the symlinks as\r\n&gt; well.\r\n\r\n\r\n  [1]: https://nodejs.org/en/blog/npm/npm-1-0-global-vs-local-installation/"}, {"tags": [], "down_vote_count": 3, "creation_date": 1331053768, "answer_id": 9588454, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1331053768, "body_markdown": "To make it short, use `npm link jade` in your app directory."}, {"tags": [], "down_vote_count": 6, "creation_date": 1360761814, "answer_id": 14854596, "path": "stack.gulp.answer", "score": -3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1360761814, "body_markdown": "if you are using windows , it takes some steps ,\r\n1) create a file called package.json\r\n\r\n     {\r\n      &quot;name&quot;: &quot;hello&quot;\r\n    , &quot;version&quot;: &quot;0.0.1&quot;\r\n    , &quot;dependencies&quot;: {\r\n        &quot;express&quot;: &quot;*&quot;\r\n      }\r\n    }\r\nwhere hello is the name of the package   and * means the latest version of your dependency\r\n\r\n2) code to you project directory and run the following command\r\n   \r\nnpm install\r\n\r\nIt installs the dependencies "}, {"tags": [], "down_vote_count": 1, "creation_date": 1364959622, "answer_id": 15778350, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1445010579, "last_edit_date": 1445010579, "body_markdown": "if you are in the windows7 platform maybe you should change the NODE_PATH like this:\r\n`%AppData%\\npm\\node_modules`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1392746929, "answer_id": 21861962, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1392746929, "body_markdown": "Alternatively you could add to `~/.npmrc` right [prefix](https://www.npmjs.org/doc/files/npmrc.html). I&#39;ve got `C:\\Program Files\\nodejs` for 64 Win7."}, {"tags": [], "down_vote_count": 0, "creation_date": 1401806970, "answer_id": 24018268, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1401806970, "body_markdown": "From my expierience with win8.1 npm installs modules on \r\n`C:\\Users\\[UserName]\\AppData\\Roaming\\npm\\node_modules` \r\n  but dumply searches them on\r\n`C:\\Users\\[UserName]\\node_modules`.\r\n\r\nOne simple solution reference module in application by full path:\r\n\r\n    var jsonminify = require(&quot;C:/Users/Saulius/AppData/Roaming/npm/node_modules/jsonminify&quot;);"}, {"tags": [], "down_vote_count": 0, "creation_date": 1428372527, "answer_id": 29482574, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1483345691, "last_edit_date": 1483345691, "body_markdown": "I know i can awake a zombie but i think this is still a problem, if you need global access to node modules on Windows 7  you need to add this to your global variable path: \r\n\r\n    C:\\Users\\{USER}\\AppData\\Roaming\\npm\r\n\r\nImportant: only this without the `node_modules` part, took me half hour to see this."}, {"tags": [], "down_vote_count": 0, "creation_date": 1437942480, "answer_id": 31641615, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1437942480, "body_markdown": "I ran into this issue on Windows 7, running\r\n\r\n    npm install -g gulp\r\n\r\nas administrator while being logged on as a normal user.\r\n\r\n**Solution:** When executing the same installation as normal user (not &quot;run as admin&quot; for cmd) all was fine. I guess it is related to the default install and search path."}, {"tags": [], "down_vote_count": 0, "creation_date": 1452014207, "answer_id": 34617497, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1452014207, "body_markdown": "Tried to add/edit environment variables and come to conclude that:\r\n\r\n 1. Edit/add `User variables` (of the upper box) instead of `System variables` (of the lower part); otherwise you have to &quot;run as administrator&quot; to get it work.\r\n 2. Append `;%AppData%\\npm` to `Path` in order to use it as a command line tool (if supported, like `jshint` and `grunt-cli`).\r\n 3. Create `NODE_PATH` and set it `%AppData%\\npm\\node_modules` in order to `require(&#39;&lt;pkg_name&gt;&#39;)` in scripts without install it in the project directory. (But [`npm link` is suggested][1] for this requirement if you&#39;re working on OS with `mklink` such as Vista and newer.)\r\n\r\nTest environment:\r\n\r\n - Win 7 (Ent., 64-bit, SP1), Node.js 4.2.4, npm 2.14.12\r\n - Win 8.1 (Ent., 64-bit), Node.js 0.10.30, npm 1.4.21\r\n\r\n\r\n  [1]: https://nodejs.org/en/blog/npm/npm-1-0-global-vs-local-installation/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1452224311, "answer_id": 34669100, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1476006751, "last_edit_date": 1476006751, "body_markdown": "For windows, everybody said you should set environment variables for nodejs and npm modules, but do you know why?\r\nFor some modules, they have command line tool, after installed the module, there&#39;are **[module].cmd** file in **C:\\Program Files\\nodejs**, and it&#39;s used for launch in window command. So if you don&#39;t add the path containing the cmd file to environment variables **%PATH%** , you won&#39;t launch them successfully through command window."}, {"tags": [], "down_vote_count": 0, "creation_date": 1453566130, "answer_id": 34965823, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1453566130, "body_markdown": "I stumbled on this question because I want to use node.js with visual studio 2015 on my new computer with windows 10. I used node.js on windows 7 and 8 and 8.1 Never a problem node.js finding a module. I use a legacy node.js 0.10.39 because I have to use this version  because of the serial and RFXCOM module.\r\n\r\nThe answer for windows 10 is to set the NODE_PATH in the enviroment variables with C:\\Users\\User\\node_modules."}, {"tags": [], "down_vote_count": 0, "creation_date": 1476278294, "answer_id": 39999651, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1476278294, "body_markdown": "For making it work on windows 10 I solved it by adding the folder `%USERPROFILE%\\AppData\\Roaming\\npm` to my PATH. Having `\\node_modules` appended like this: `%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\\` did not work for me.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1487525282, "answer_id": 42330431, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1487525282, "body_markdown": "For Windows 10, I had to locally install gulp in the folder:\r\n\r\nC:\\Users\\myaccount\\AppData\\Roaming\\npm\\node_modules\r\n\r\n    npm install gulp\r\n\r\nThis fixed my issue of &quot;gulp is not recognized&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1492950060, "answer_id": 43571088, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1492950060, "body_markdown": "I had a terrible time getting global modules to work. Eventually, I explicitly added `C:\\Users\\yourusername\\AppData\\Roaming\\npm` to the PATH variable under System Variables. I also needed to have this variable come before the nodejs path variable in the list.\r\n\r\nI am running Windows 10."}, {"tags": [], "down_vote_count": 0, "creation_date": 1505385062, "answer_id": 46216721, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1505385912, "last_edit_date": 1505385912, "body_markdown": "I had the same issue, trying to install bower with `npm install -g bower`\r\n\r\nI think this was because **node was installed by another user**, not me.\r\n\r\nI uninstalled node, and then I reinstalled it. During installation, I saw this text for the option *Add to PATH &gt; npm modules*:\r\n\r\nMessage in node installation\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\nAfter node installation, I executed `npm install -g bower` again. And now bower works.\r\n\r\nSure is not necessary reinstall node with own user, like me. Solution must be via *NODE_PATH* or *PATH* variables, as other users have explained.\r\n\r\nThis is only to remark that this problem occurs only if node has been installed by another user (or if during installation the option *Add to PATH &gt; npm modules* has not been marked).\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/QOSbC.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1506660467, "answer_id": 46481980, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1506660467, "body_markdown": "Just download and re-install the node from [this][1] and this will fix all the path issues. \r\n\r\nDon&#39;t forget to restart your command prompt or terminal.\r\n\r\n\r\n  [1]: https://nodejs.org/en/download/"}], "title": "Nodejs cannot find installed module on Windows?", "view_count": 207668, "answer_count": 17, "code_snippet": ["<code>npm install jade -g\n</code>", "<code>\"C:\\Program Files (x86)\\nodejs\\node_modules\"</code>", "<code>\"Cannot find module 'jade'\"</code>", "<code>var jade = require('jade');\n</code>", "<code>NODE_PATH</code>", "<code>%USERPROFILE%\\Application Data\\npm\\node_modules</code>", "<code>%AppData%\\npm\\node_modules</code>", "<code>control.exe sysdm.cpl,System,3</code>", "<code>rem for future\nsetx NODE_PATH %AppData%\\npm\\node_modules\nrem for current session\nset NODE_PATH=%AppData%\\npm\\node_modules\n</code>", "<code>NODE_PATH</code>", "<code>PATH</code>", "<code>node_modules</code>", "<code>%AppData%\\npm</code>", "<code>set NODE_PATH=C:\\Documents and Settings\\DevUser\\Application Data\\npm\\node_modules</code>", "<code>C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules</code>", "<code>npm install -g express</code>", "<code>C:\\Documents and Settings\\swapnil\\Application Data\\npm\\node_modules</code>", "<code>%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules</code>", "<code>npm list -g</code>", "<code>{output}\\node_modules</code>", "<code>npm install --global {xyz}</code>", "<code>%AppData%\\npm\\node_modules</code>", "<code>C:\\Users\\{USER}\\AppData\\Roaming\\npm\n</code>", "<code>node_modules</code>", "<code>node_modules</code>", "<code>%USERPROFILE%\\AppData\\Roaming\\npm</code>", "<code>\\node_modules</code>", "<code>%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\\</code>", "<code>path</code>", "<code>They\u2019re tiny JavaScript programs.</code>", "<code>npm link jade</code>", "<code>npm link jade</code>", "<code>npm ERR! Error: npm link not supported on windows</code>", "<code>npm link</code>", "<code>User variables</code>", "<code>System variables</code>", "<code>;%AppData%\\npm</code>", "<code>Path</code>", "<code>jshint</code>", "<code>grunt-cli</code>", "<code>NODE_PATH</code>", "<code>%AppData%\\npm\\node_modules</code>", "<code>require('&lt;pkg_name&gt;')</code>", "<code>npm link</code>", "<code>mklink</code>", "<code>npm install -g gulp\n</code>", "<code>C:\\Users\\yourusername\\AppData\\Roaming\\npm</code>", "<code>C:\\Users\\[UserName]\\AppData\\Roaming\\npm\\node_modules</code>", "<code>C:\\Users\\[UserName]\\node_modules</code>", "<code>var jsonminify = require(\"C:/Users/Saulius/AppData/Roaming/npm/node_modules/jsonminify\");\n</code>", "<code>~/.npmrc</code>", "<code>C:\\Program Files\\nodejs</code>", "<code>C:\\Users\\User\\node_modules</code>", "<code>C:\\Users\\User\\AppData\\Roaming\\npm\\node_modules</code>", "<code>C:\\Users\\User\\node_modules</code>", "<code>C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\node_modules</code>", "<code>npm install -g bower</code>", "<code>npm install -g bower</code>", "<code>npm install gulp\n</code>", "<code> {\n  \"name\": \"hello\"\n, \"version\": \"0.0.1\"\n, \"dependencies\": {\n    \"express\": \"*\"\n  }\n}\n</code>"], "path": "stack.gulp"}, {"tags": ["node.js"], "creation_date": 1277735461, "body_markdown": "How would I get the path to the script in Node.js?\r\n\r\nI know there&#39;s `process.cwd`, but that only refers to the directory where the script was called, not of the script itself. For instance, say I&#39;m in `/home/kyle/` and I run the following command:\r\n\r\n    node /home/kyle/some/dir/file.js\r\n\r\nIf I call `process.cwd()`, I get `/home/kyle/`, not `/home/kyle/some/dir/`.  Is there a way to get that directory?\r\n", "last_edit_date": 1481976234, "up_vote_count": 654, "link": "https://stackoverflow.com/questions/3133243/how-do-i-get-the-path-to-the-current-script-with-node-js", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1277735980, "answer_id": 3133313, "path": "stack.gulp.answer", "score": 935, "up_vote_count": 938, "is_accepted": true, "last_activity_date": 1492717219, "last_edit_date": 1492717219, "body_markdown": "I found it after looking through the documentation again. What I was looking for were the [`__filename`][1] and [`__dirname`][2] module-level variables.\r\n\r\n  [1]: http://nodejs.org/docs/latest/api/globals.html#globals_filename\r\n  [2]: http://nodejs.org/docs/latest/api/globals.html#globals_dirname\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1315507249, "answer_id": 7352912, "path": "stack.gulp.answer", "score": 171, "up_vote_count": 172, "is_accepted": false, "last_activity_date": 1351273758, "last_edit_date": 1351273758, "body_markdown": "So basically you can do this:\r\n\r\n    fs.readFile(path.resolve(__dirname, &#39;settings.json&#39;), &#39;UTF-8&#39;, callback);\r\n\r\nUse resolve() instead of concatenating with &#39;/&#39; or &#39;\\&#39; else you will run into cross-platform issues.\r\n\r\nNote: __dirname is the local path of the module or included script. If you are writing a plugin which needs to know the path of the main script it is:\r\n\r\n    require.main.filename\r\n\r\nor, to just get the folder name:\r\n\r\n    require(&#39;path&#39;).dirname(require.main.filename)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1352094074, "answer_id": 13226527, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 27, "is_accepted": false, "last_activity_date": 1396154301, "last_edit_date": 1396154301, "body_markdown": "    var settings = \r\n        JSON.parse(\r\n            require(&#39;fs&#39;).readFileSync(\r\n                require(&#39;path&#39;).resolve(\r\n                    __dirname, \r\n                    &#39;settings.json&#39;),\r\n                &#39;utf8&#39;));\r\n\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1450348895, "answer_id": 34332536, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 32, "is_accepted": false, "last_activity_date": 1513506958, "last_edit_date": 1513506958, "body_markdown": "When it comes to the main script it&#39;s as simple as:\r\n\r\n    process.argv[1]\r\n\r\nFrom the [Node.js documentation][1]:\r\n\r\n&gt; ##process.argv\r\n&gt;\r\n&gt; An array containing the command line arguments. The first element will be &#39;node&#39;, __the second element will be the path to the JavaScript file__. The next elements will be any additional command line arguments.\r\n\r\nIf you need to know the path of a module file then use [__filename][2].\r\n\r\n  [1]: https://nodejs.org/docs/latest/api/process.html#process_process_argv\r\n  [2]: https://nodejs.org/docs/latest/api/globals.html#globals_filename\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1464211652, "answer_id": 37447907, "path": "stack.gulp.answer", "score": 23, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1488103838, "last_edit_date": 1488103838, "body_markdown": "Every Node.js program has some global variables in its environment, which represents some information about your process and one of it is `__dirname`.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1475046034, "answer_id": 39740187, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1475046034, "body_markdown": "You can use process.env.PWD to get the current app folder path."}, {"tags": [], "down_vote_count": 0, "creation_date": 1477207058, "answer_id": 40200524, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1518478553, "last_edit_date": 1518478553, "body_markdown": "This command returns the current directory:\r\n\r\n    var currentPath = process.cwd();\r\n\r\nFor example, to use the path to read the file:\r\n\r\n\r\n    var fs = require(&#39;fs&#39;);\r\n    fs.readFile(process.cwd() + &quot;\\\\text.txt&quot;, function(err, data)\r\n    {\r\n        if(err)\r\n            console.log(err)\r\n        else\r\n            console.log(data.toString());\r\n    });\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1489592241, "answer_id": 42814318, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1489592241, "body_markdown": "I know this is pretty old, and the original question I was responding to is marked as duplicate and directed here, but I ran into an issue trying to get jasmine-reporters to work and didn&#39;t like the idea that I had to downgrade in order for it to work. I found out that jasmine-reporters wasn&#39;t resolving the savePath correctly and was actually putting the reports folder output in jasmine-reporters directory instead of the root directory of where I ran gulp. In order to make this work correctly I ended up using **process.env.INIT_CWD** to get the initial Current Working Directory which should be the directory where you ran gulp. Hope this helps someone. \r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var reporters = require(&#39;jasmine-reporters&#39;);\r\n    var junitReporter = new reporters.JUnitXmlReporter({\r\n      savePath: process.env.INIT_CWD + &#39;/report/e2e/&#39;,\r\n      consolidateAll: true,\r\n      captureStdout: true\r\n    });\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1493976734, "answer_id": 43801419, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1493976734, "body_markdown": "If you want something more like $0 in a shell script, try this:\r\n\r\n    var path = require(&#39;path&#39;);\r\n\r\n    var command = getCurrentScriptPath();\r\n\r\n    console.log(`Usage: ${command} &lt;foo&gt; &lt;bar&gt;`);\r\n\r\n    function getCurrentScriptPath () {\r\n        // Relative path from current working directory to the location of this script\r\n        var pathToScript = path.relative(process.cwd(), __filename);\r\n\r\n        // Check if current working dir is the same as the script\r\n        if (process.cwd() === __dirname) {\r\n            // E.g. &quot;./foobar.js&quot;\r\n            return &#39;.&#39; + path.sep + pathToScript;\r\n        } else {\r\n            // E.g. &quot;foo/bar/baz.js&quot;\r\n            return pathToScript;\r\n        }\r\n    }\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1504855710, "answer_id": 46110961, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1504855710, "body_markdown": "If you are using `pkg` to package your app, you&#39;ll find useful this expression:\r\n\r\n    appDirectory = require(&#39;path&#39;).dirname(process.pkg ? process.execPath : (require.main ? require.main.filename : process.argv[0]));\r\n\r\n- `process.pkg` tells if the app has been packaged by `pkg`. \r\n\r\n- `process.execPath` holds the full path of the executable, which is `/usr/bin/node` or similar for direct invocations of scripts (`node test.js`), or the packaged app.\r\n\r\n- `require.main.filename` holds the full path of the main script, but it&#39;s empty when Node runs in interactive mode.\r\n\r\n- `__dirname` holds the full path of the *current* script, so I&#39;m not using it (although it may be what OP asks; then better use `appDirectory = process.pkg ? require(&#39;path&#39;).dirname(process.execPath) : (__dirname || require(&#39;path&#39;).dirname(process.argv[0]));` noting that in interactive mode `__dirname` is empty.\r\n\r\n- For interactive mode, use either `process.argv[0]` to get the path to the Node executable or `process.cwd()` to get the current directory."}, {"tags": [], "down_vote_count": 0, "creation_date": 1513953047, "answer_id": 47943140, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1513953047, "body_markdown": "**Use __dirname!!**\r\n\r\n    __dirname\r\n\r\nThe directory name of the current module. This the same as the path.dirname() of the __filename.\r\n\r\nExample: running node example.js from /Users/mjr\r\n\r\n  \r\n\r\n    console.log(__dirname);\r\n    // Prints: /Users/mjr\r\n    console.log(path.dirname(__filename));\r\n    // Prints: /Users/mjr\r\n\r\nhttps://nodejs.org/api/modules.html#modules_dirname"}, {"tags": [], "down_vote_count": 0, "creation_date": 1518204546, "answer_id": 48712840, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1518204546, "body_markdown": "Another approach, if you&#39;re using modules and you&#39;d like to find the **filename** of the main module that called such sub-module or any module you&#39;re running, is to use\r\n\r\n    var fnArr = (process.mainModule.filename).split(&#39;/&#39;);\r\n    var filename = fnArr[fnArr.length -1];"}], "title": "How do I get the path to the current script with Node.js?", "view_count": 430063, "answer_count": 12, "code_snippet": ["<code>process.cwd</code>", "<code>/home/kyle/</code>", "<code>node /home/kyle/some/dir/file.js\n</code>", "<code>process.cwd()</code>", "<code>/home/kyle/</code>", "<code>/home/kyle/some/dir/</code>", "<code>__filename</code>", "<code>__dirname</code>", "<code>__dirname.split(path.sep).pop() </code>", "<code>require('path').basename(__dirname);</code>", "<code>fs.readFile(path.resolve(__dirname, 'settings.json'), 'UTF-8', callback);\n</code>", "<code>require.main.filename\n</code>", "<code>require('path').dirname(require.main.filename)\n</code>", "<code>var settings = require('./settings.json')</code>", "<code>var currentPath = process.cwd();\n</code>", "<code>var fs = require('fs');\nfs.readFile(process.cwd() + \"\\\\text.txt\", function(err, data)\n{\n    if(err)\n        console.log(err)\n    else\n        console.log(data.toString());\n});\n</code>", "<code>process.argv[1]\n</code>", "<code>process.argv[1]</code>", "<code>__filename</code>", "<code>process.argv[1]</code>", "<code>var settings = \n    JSON.parse(\n        require('fs').readFileSync(\n            require('path').resolve(\n                __dirname, \n                'settings.json'),\n            'utf8'));\n</code>", "<code>__dirname</code>", "<code>__dirname\n</code>", "<code>console.log(__dirname);\n// Prints: /Users/mjr\nconsole.log(path.dirname(__filename));\n// Prints: /Users/mjr\n</code>", "<code>var reporters = require('jasmine-reporters');\r\nvar junitReporter = new reporters.JUnitXmlReporter({\r\n  savePath: process.env.INIT_CWD + '/report/e2e/',\r\n  consolidateAll: true,\r\n  captureStdout: true\r\n});</code>", "<code>var fnArr = (process.mainModule.filename).split('/');\nvar filename = fnArr[fnArr.length -1];\n</code>", "<code>var path = require('path');\n\nvar command = getCurrentScriptPath();\n\nconsole.log(`Usage: ${command} &lt;foo&gt; &lt;bar&gt;`);\n\nfunction getCurrentScriptPath () {\n    // Relative path from current working directory to the location of this script\n    var pathToScript = path.relative(process.cwd(), __filename);\n\n    // Check if current working dir is the same as the script\n    if (process.cwd() === __dirname) {\n        // E.g. \"./foobar.js\"\n        return '.' + path.sep + pathToScript;\n    } else {\n        // E.g. \"foo/bar/baz.js\"\n        return pathToScript;\n    }\n}\n</code>", "<code>pkg</code>", "<code>appDirectory = require('path').dirname(process.pkg ? process.execPath : (require.main ? require.main.filename : process.argv[0]));\n</code>", "<code>process.pkg</code>", "<code>pkg</code>", "<code>process.execPath</code>", "<code>/usr/bin/node</code>", "<code>node test.js</code>", "<code>require.main.filename</code>", "<code>__dirname</code>", "<code>appDirectory = process.pkg ? require('path').dirname(process.execPath) : (__dirname || require('path').dirname(process.argv[0]));</code>", "<code>__dirname</code>", "<code>process.argv[0]</code>", "<code>process.cwd()</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "webpack"], "creation_date": 1419434453, "body_markdown": "I&#39;m trying to move from `Gulp` to `Webpack`. In `Gulp` I have task which copies all files and folders from **/static/** folder to **/build/** folder. How to do the same with `Webpack`? Do I need some plugin?", "last_edit_date": 1496542885, "up_vote_count": 200, "link": "https://stackoverflow.com/questions/27639005/how-to-copy-static-files-to-build-directory-with-webpack", "_childDocuments_": [{"tags": [], "down_vote_count": 8, "creation_date": 1419552421, "answer_id": 27651720, "path": "stack.gulp.answer", "score": 135, "up_vote_count": 143, "is_accepted": true, "last_activity_date": 1488535958, "last_edit_date": 1488535958, "body_markdown": "You don&#39;t need to copy things around, webpack works different than gulp. Webpack is a module bundler and everything you reference in your files will be included. You just need to specify a loader for that.\r\n\r\nSo if you write:\r\n\r\n    var myImage = require(&quot;./static/myImage.jpg&quot;);\r\n\r\nWebpack will first try to parse the referenced file as JavaScript (because that&#39;s the default). Of course, that will fail. That&#39;s why you need to specify a loader for that file type. The [file][1]- or [url-loader][2] for instance take the referenced file, put it into webpack&#39;s output folder (which should be `build` in your case) and return the hashed url for that file.\r\n\r\n    var myImage = require(&quot;./static/myImage.jpg&quot;);\r\n    console.log(myImage); // &#39;/build/12as7f9asfasgasg.jpg&#39;\r\n\r\nUsually loaders are applied via the webpack config:\r\n\r\n    // webpack.config.js\r\n\r\n    module.exports = {\r\n        ...\r\n        module: {\r\n            loaders: [\r\n                { test: /\\.(jpe?g|gif|png|svg|woff|ttf|wav|mp3)$/, loader: &quot;file&quot; }\r\n            ]\r\n        }\r\n    };\r\n\r\n\r\nOf course you need to install the file-loader first to make this work.\r\n\r\n  [1]: https://github.com/webpack/file-loader\r\n  [2]: https://github.com/webpack/url-loader"}, {"tags": [], "down_vote_count": 4, "creation_date": 1445967254, "answer_id": 33374807, "path": "stack.gulp.answer", "score": 342, "up_vote_count": 346, "is_accepted": false, "last_activity_date": 1509748882, "last_edit_date": 1509748882, "body_markdown": "Requiring assets using the file-loader module is the way webpack is intended to be used ([source][1]). However, if you need greater flexibility or want a cleaner interface, you can also copy static files directly using my `copy-webpack-plugin` ([npm][2], [Github][3])&lt;sup&gt;1&lt;/sup&gt;. For your `static` to `build` example:\r\n\r\n    var CopyWebpackPlugin = require(&#39;copy-webpack-plugin&#39;);\r\n     \r\n    module.exports = {\r\n        context: path.join(__dirname, &#39;your-app&#39;),\r\n        plugins: [\r\n            new CopyWebpackPlugin([\r\n                { from: &#39;static&#39; }\r\n            ])\r\n        ]\r\n    };\r\n\r\n&lt;sub&gt;**1**: I am the author of this plug-in.&lt;/sub&gt;\r\n\r\n\r\n  [1]: https://github.com/webpack/webpack/issues/395\r\n  [2]: https://www.npmjs.com/package/copy-webpack-plugin\r\n  [3]: https://github.com/kevlened/copy-webpack-plugin"}, {"tags": [], "down_vote_count": 1, "creation_date": 1454503488, "answer_id": 35177460, "path": "stack.gulp.answer", "score": 46, "up_vote_count": 47, "is_accepted": false, "last_activity_date": 1454503488, "body_markdown": "If you want to copy your static files you can use the file-loader in this way :\r\n \r\nfor html files :\r\n \r\nin webpack.config.js :\r\n   \r\n    module.exports = {\r\n        ...\r\n        module: {\r\n            loaders: [\r\n                { test: /\\.(html)$/,\r\n                  loader: &quot;file?name=[path][name].[ext]&amp;context=./app/static&quot;\r\n                }\r\n            ]\r\n        }\r\n    };\r\n \r\nin your js file :\r\n \r\n      require.context(&quot;./static/&quot;, true, /^\\.\\/.*\\.html/);\r\n \r\n \r\n./static/ is relative to where your js file is.\r\n\r\nYou can do the same with images or whatever.\r\nThe context is a powerful method to explore !!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1470659298, "answer_id": 38829238, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1470659788, "last_edit_date": 1470659788, "body_markdown": "Most likely you should use CopyWebpackPlugin which was mentioned in kevlened answer. Alternativly for some kind of files like [.html][1] or [.json][2] you can also use raw-loader or json-loader. Install it via `npm install -D raw-loader` and then what you only need to do is to add another loader to our `webpack.config.js` file.\r\n\r\nLike:\r\n\r\n    {\r\n        test: /\\.html/,\r\n        loader: &#39;raw&#39;\r\n    }\r\n\r\nNote: Restart the webpack-dev-server for any config changes to take effect.\r\n \r\nAnd now you can require html files using relative paths, this makes it much easier to move folders around.\r\n\r\n    template: require(&#39;./nav.html&#39;)  \r\n\r\n\r\n  [1]: https://github.com/webpack/raw-loader\r\n  [2]: https://github.com/webpack/json-loader"}, {"tags": [], "down_vote_count": 1, "creation_date": 1471791249, "answer_id": 39065521, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1471791249, "body_markdown": "Above suggestions are good.  But to try to answer your question directly I&#39;d suggest using `cpy-cli` in a script defined in your `package.json`.\r\n\r\nThis example expects `node` to somewhere on your path. Install `cpy-cli` as a development dependency:\r\n\r\n`npm install --save-dev cpy-cli`\r\n\r\nThen create a couple of nodejs files.  One to do the copy and the other to display a checkmark and message.\r\n\r\ncopy.js\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    #!/usr/bin/env node\r\n    \r\n    var shelljs = require(&#39;shelljs&#39;);\r\n    var addCheckMark = require(&#39;./helpers/checkmark&#39;);\r\n    var path = require(&#39;path&#39;);\r\n    \r\n    var cpy = path.join(__dirname, &#39;../node_modules/cpy-cli/cli.js&#39;);\r\n    \r\n    shelljs.exec(cpy + &#39; /static/* /build/&#39;, addCheckMark.bind(null, callback));\r\n    \r\n    function callback() {\r\n      process.stdout.write(&#39; Copied /static/* to the /build/ directory\\n\\n&#39;);\r\n    }\r\n\r\ncheckmark.js\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var chalk = require(&#39;chalk&#39;);\r\n    \r\n    /**\r\n     * Adds mark check symbol\r\n     */\r\n    function addCheckMark(callback) {\r\n      process.stdout.write(chalk.green(&#39; \u2713&#39;));\r\n      callback();\r\n    }\r\n    \r\n    module.exports = addCheckMark;\r\n\r\nAdd the script in `package.json`. Assuming scripts are in `&lt;project-root&gt;/scripts/`\r\n\r\n    ...\r\n    &quot;scripts&quot;: {\r\n      &quot;copy&quot;: &quot;node scripts/copy.js&quot;,\r\n    ...\r\n\r\nTo run the sript:\r\n\r\n`npm run copy`"}, {"tags": [], "down_vote_count": 2, "creation_date": 1492541396, "answer_id": 43480030, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1492541396, "body_markdown": "You can write bash in your package.json:\r\n\r\n    # package.json\r\n    {\r\n      &quot;name&quot;: ...,\r\n      &quot;version&quot;: ...,\r\n      &quot;scripts&quot;: {\r\n        &quot;build&quot;: &quot;NODE_ENV=production npm run webpack &amp;&amp; cp -v &lt;this&gt; &lt;that&gt; &amp;&amp; echo ok&quot;,\r\n        ...\r\n      }\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1493194960, "answer_id": 43628673, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1494325397, "last_edit_date": 1494325397, "body_markdown": "I was stuck here too. copy-webpack-plugin worked for me.\r\n\r\nHowever, &#39;copy-webpack-plugin&#39; was not necessary in my case (i learned later).\r\n\r\nwebpack ignores root paths&lt;br/&gt;\r\nexample\r\n\r\n    &lt;img src=&quot;/images/logo.png&#39;&gt;\r\n\r\nHence, to make this work without using &#39;copy-webpack-plugin&#39;\r\nuse &#39;~&#39; in paths\r\n\r\n    &lt;img src=&quot;~images/logo.png&#39;&gt;\r\n\r\n&#39;~&#39; tells webpack to consider &#39;images&#39; as a module\r\n\r\nnote:\r\nyou might have to add the parent directory of images directory in\r\n\r\n    resolve: {\r\n        modules: [\r\n            &#39;parent-directory of images&#39;,\r\n            &#39;node_modules&#39;\r\n        ]\r\n    }\r\n\r\nVisit https://vuejs-templates.github.io/webpack/static.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1494589030, "answer_id": 43936886, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1494589030, "body_markdown": "The webpack config file (in webpack 2) allows you to export a promise chain, so long as the last step returns a webpack config object. [See promise configuration docs](https://webpack.js.org/guides/migrating/#configuration-promise). From there:\r\n\r\n&gt; webpack now supports returning a Promise from the configuration file. This allows to do async processing in you configuration file.\r\n\r\n\r\nYou could create a simple recursive copy function that copies your file, and only after that triggers webpack. E.g.:\r\n\r\n    module.exports = function(){\r\n        return copyTheFiles( inpath, outpath).then( result =&gt; {\r\n            return { entry: &quot;...&quot; } // Etc etc\r\n        } )\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1497558422, "answer_id": 44576466, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1497558422, "body_markdown": "lets say all your static assets are in a folder &quot;static&quot; at the root level and you want copy them to the build folder maintaining the structure of subfolder, then \r\nin your entry file) just put \r\n\r\n\r\n    //index.js or index.jsx\r\n\r\n    require.context(&quot;!!file?name=[path][name].[ext]&amp;context=./static!../static/&quot;, true, /^\\.\\/.*\\.*/);\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1506017627, "answer_id": 46350657, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1506017627, "body_markdown": "One advantage that the aforementioned **copy-webpack-plugin** brings that hasn&#39;t been explained before is that all the other methods mentioned here still bundle the resources into your bundle files (and require you to &quot;require&quot; or &quot;import&quot; them somewhere).  If I just want to move some images around or some template partials, I don&#39;t want to clutter up my javascript bundle file with useless references to them, I just want the files emitted in the right place. I haven&#39;t found any other way to do this in webpack. Admittedly it&#39;s not what webpack originally was designed for, but it&#39;s definitely a current use case.\r\n(@BreakDS I hope this answers your question - it&#39;s only a benefit if you want it)"}], "title": "How to copy static files to build directory with Webpack?", "view_count": 150309, "answer_count": 10, "code_snippet": ["<code>Gulp</code>", "<code>Webpack</code>", "<code>Gulp</code>", "<code>Webpack</code>", "<code>var myImage = require(\"./static/myImage.jpg\");\n</code>", "<code>build</code>", "<code>var myImage = require(\"./static/myImage.jpg\");\nconsole.log(myImage); // '/build/12as7f9asfasgasg.jpg'\n</code>", "<code>// webpack.config.js\n\nmodule.exports = {\n    ...\n    module: {\n        loaders: [\n            { test: /\\.(jpe?g|gif|png|svg|woff|ttf|wav|mp3)$/, loader: \"file\" }\n        ]\n    }\n};\n</code>", "<code>npm install file-loader --save-dev</code>", "<code>copy-webpack-plugin</code>", "<code>static</code>", "<code>build</code>", "<code>var CopyWebpackPlugin = require('copy-webpack-plugin');\n\nmodule.exports = {\n    context: path.join(__dirname, 'your-app'),\n    plugins: [\n        new CopyWebpackPlugin([\n            { from: 'static' }\n        ])\n    ]\n};\n</code>", "<code>module.exports = {\n    ...\n    module: {\n        loaders: [\n            { test: /\\.(html)$/,\n              loader: \"file?name=[path][name].[ext]&amp;context=./app/static\"\n            }\n        ]\n    }\n};\n</code>", "<code>  require.context(\"./static/\", true, /^\\.\\/.*\\.html/);\n</code>", "<code>index.html</code>", "<code>_</code>", "<code>cpy-cli</code>", "<code>package.json</code>", "<code>node</code>", "<code>cpy-cli</code>", "<code>npm install --save-dev cpy-cli</code>", "<code>#!/usr/bin/env node\n\nvar shelljs = require('shelljs');\nvar addCheckMark = require('./helpers/checkmark');\nvar path = require('path');\n\nvar cpy = path.join(__dirname, '../node_modules/cpy-cli/cli.js');\n\nshelljs.exec(cpy + ' /static/* /build/', addCheckMark.bind(null, callback));\n\nfunction callback() {\n  process.stdout.write(' Copied /static/* to the /build/ directory\\n\\n');\n}\n</code>", "<code>var chalk = require('chalk');\n\n/**\n * Adds mark check symbol\n */\nfunction addCheckMark(callback) {\n  process.stdout.write(chalk.green(' \u2713'));\n  callback();\n}\n\nmodule.exports = addCheckMark;\n</code>", "<code>package.json</code>", "<code>&lt;project-root&gt;/scripts/</code>", "<code>...\n\"scripts\": {\n  \"copy\": \"node scripts/copy.js\",\n...\n</code>", "<code>npm run copy</code>", "<code>npm install -D raw-loader</code>", "<code>webpack.config.js</code>", "<code>{\n    test: /\\.html/,\n    loader: 'raw'\n}\n</code>", "<code>template: require('./nav.html')  \n</code>", "<code># package.json\n{\n  \"name\": ...,\n  \"version\": ...,\n  \"scripts\": {\n    \"build\": \"NODE_ENV=production npm run webpack &amp;&amp; cp -v &lt;this&gt; &lt;that&gt; &amp;&amp; echo ok\",\n    ...\n  }\n}\n</code>", "<code>\"build\": \"webpack &amp;&amp; xcopy images dist\\\\images\\\\ /S /Y &amp;&amp; xcopy css dist\\\\css\\\\ /S /Y\"</code>", "<code>&lt;img src=\"/images/logo.png'&gt;\n</code>", "<code>&lt;img src=\"~images/logo.png'&gt;\n</code>", "<code>resolve: {\n    modules: [\n        'parent-directory of images',\n        'node_modules'\n    ]\n}\n</code>", "<code>module.exports = function(){\n    return copyTheFiles( inpath, outpath).then( result =&gt; {\n        return { entry: \"...\" } // Etc etc\n    } )\n}\n</code>", "<code>//index.js or index.jsx\n\nrequire.context(\"!!file?name=[path][name].[ext]&amp;context=./static!../static/\", true, /^\\.\\/.*\\.*/);\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "object"], "creation_date": 1332937437, "body_markdown": "I have a quite simple JavaScript object, which I use as an associative array. Is there a simple function allowing me to get the key for a value, or do I have to iterate the object and find it out manually?", "last_edit_date": 1508840880, "up_vote_count": 173, "link": "https://stackoverflow.com/questions/9907419/how-to-get-a-key-in-a-javascript-object-by-its-value", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1332937751, "answer_id": 9907509, "path": "stack.gulp.answer", "score": 155, "up_vote_count": 157, "is_accepted": false, "last_activity_date": 1420630361, "last_edit_date": 1420630361, "body_markdown": "No standard method available. You need to iterate and you can create a simple helper:\r\n\r\n    Object.prototype.getKeyByValue = function( value ) {\r\n        for( var prop in this ) {\r\n            if( this.hasOwnProperty( prop ) ) {\r\n                 if( this[ prop ] === value )\r\n                     return prop;\r\n            }\r\n        }\r\n    }\r\n\r\n    var test = {\r\n       key1: 42,\r\n       key2: &#39;foo&#39;\r\n    };\r\n\r\n    test.getKeyByValue( 42 );  // returns &#39;key1&#39;\r\n\r\n**One word of caution**: Even if the above works, its generally a bad idea to extend any host or native object&#39;s `.prototype`. I did it here because it fits the issue very well. Anyway, you should probably use this function outside the `.prototype` and pass the object into it instead."}, {"tags": [], "down_vote_count": 1, "creation_date": 1332939082, "answer_id": 9907887, "path": "stack.gulp.answer", "score": 42, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1332939082, "body_markdown": "As said, iteration is needed. For instance, in modern browser you could have:\r\n\r\n    var key = Object.keys(obj).filter(function(key) {return obj[key] === value})[0];\r\n\r\nWhere `value` contains the value you&#39;re looking for.\r\nSaid that, I would probably use a loop.\r\n\r\nOtherwise you could use a proper &quot;hashmap&quot; object - there are several implementation in JS around - or implement by your own."}, {"tags": [], "down_vote_count": 1, "creation_date": 1344000757, "answer_id": 11796778, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1344000757, "body_markdown": "**I use this function:**\r\n\r\n    Object.prototype.getKey = function(value){\r\n      for(var key in this){\r\n        if(this[key] == value){\r\n          return key;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n**Usage:**\r\n\r\n    // ISO 639: 2-letter codes\r\n    var languageCodes = {\r\n      DA: &#39;Danish&#39;,\r\n      DE: &#39;German&#39;,\r\n      DZ: &#39;Bhutani&#39;,\r\n      EL: &#39;Greek&#39;,\r\n      EN: &#39;English&#39;,\r\n      EO: &#39;Esperanto&#39;,\r\n      ES: &#39;Spanish&#39;\r\n    };\r\n          \r\n    var key = languageCodes.getKey(&#39;Greek&#39;);\r\n    console.log(key); // EL"}, {"tags": [], "down_vote_count": 0, "creation_date": 1359187645, "answer_id": 14535089, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1359187645, "body_markdown": " http://jsfiddle.net/rTazZ/2/  \r\n\r\n\r\n  \r\n\r\n    var a = new Array(); \r\n        a.push({&quot;1&quot;: &quot;apple&quot;, &quot;2&quot;: &quot;banana&quot;}); \r\n        a.push({&quot;3&quot;: &quot;coconut&quot;, &quot;4&quot;: &quot;mango&quot;});\r\n        \r\n        GetIndexByValue(a, &quot;coconut&quot;);\r\n        \r\n        function GetIndexByValue(arrayName, value) {  \r\n        var keyName = &quot;&quot;;\r\n        var index = -1;\r\n        for (var i = 0; i &lt; arrayName.length; i++) { \r\n           var obj = arrayName[i]; \r\n                for (var key in obj) {          \r\n                    if (obj[key] == value) { \r\n                        keyName = key; \r\n                        index = i;\r\n                    } \r\n                } \r\n            }\r\n            //console.log(index); \r\n            return index;\r\n        } "}, {"tags": [], "down_vote_count": 0, "creation_date": 1364493599, "answer_id": 15688963, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1364493599, "body_markdown": "Or, easier yet - create a new object with the keys and values in the order you want then do look up against that object. We have had conflicts using the prototype codes above. You don&#39;t have to use the String function around the key, that is optional.\r\n\r\n     newLookUpObj = {};\r\n\t $.each(oldLookUpObj,function(key,value){\r\n\t\t\tnewLookUpObj[value] = String(key);\r\n\t\t});\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1376998338, "answer_id": 18333921, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1376998338, "body_markdown": "Since the values are unique, it should be possible to add the values as an additional set of keys. This could be done with the following shortcut.\r\n\r\n    var foo = {};\r\n    foo[foo.apple = &quot;an apple&quot;] = &quot;apple&quot;;\r\n    foo[foo.pear = &quot;a pear&quot;] = &quot;pear&quot;;\r\n\r\n\r\nThis would permit retrieval either via the key or the value:\r\n\r\n    var key = &quot;apple&quot;;\r\n    var value = &quot;an apple&quot;;\r\n    \r\n    console.log(foo[value]); // &quot;apple&quot;\r\n    console.log(foo[key]); // &quot;an apple&quot;\r\n\r\nThis does assume that there are no common elements between the keys and values.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1377484593, "answer_id": 18435833, "path": "stack.gulp.answer", "score": 82, "up_vote_count": 84, "is_accepted": true, "last_activity_date": 1377484593, "body_markdown": "with Underscore.js\r\n\r\n\r\n    var hash = {\r\n     foo: 1,\r\n     bar: 2\r\n    };\r\n\r\n    (_.invert(hash))[1]; // =&gt; &#39;foo&#39;\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1390851712, "answer_id": 21390106, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1390851712, "body_markdown": "This is a small extension to the Underscorejs method, and uses **Lodash** instead:\r\n\r\n    var getKeyByValue = function(searchValue) {\r\n      return _.findKey(hash, function(hashValue) {\r\n        return searchValue === hashValue;\r\n      });\r\n    }\r\n\r\n[**FindKey**](http://lodash.com/docs#findKey) will [search and return the first key](https://github.com/lodash/lodash/blob/2.4.1/dist/lodash.compat.js#L2275) which matches the value.&lt;br&gt;\r\nIf you want the last match instead, use [FindLastKey](http://lodash.com/docs#findLastKey) instead."}, {"tags": [], "down_vote_count": 0, "creation_date": 1398132557, "answer_id": 23209173, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1400463627, "last_edit_date": 1400463627, "body_markdown": "I created the *bimap* library (https://github.com/alethes/bimap) which implements a powerful, flexible and efficient JavaScript bidirectional map interface. It has no dependencies and is usable both on the server-side (in Node.js, you can install it with `npm install bimap`) and in the browser (by linking to *lib/bimap.js*).\r\n\r\nBasic operations are really simple:\r\n\r\n    var bimap = new BiMap;\r\n    bimap.push(&quot;k&quot;, &quot;v&quot;);\r\n    bimap.key(&quot;k&quot;) // =&gt; &quot;v&quot;\r\n    bimap.val(&quot;v&quot;) // =&gt; &quot;k&quot;\r\n    \r\n    bimap.push(&quot;UK&quot;, [&quot;London&quot;, &quot;Manchester&quot;]);\r\n    bimap.key(&quot;UK&quot;); // =&gt; [&quot;London&quot;, &quot;Manchester&quot;]\r\n    bimap.val(&quot;London&quot;); // =&gt; &quot;UK&quot;\r\n    bimap.val(&quot;Manchester&quot;); // =&gt; &quot;UK&quot;\r\n\r\n\r\nRetrieval of the key-value mapping is equally fast in both directions. There are no costly object/array traversals under the hood so the average access time remains constant regardless of the size of the data. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1422447106, "answer_id": 28191966, "path": "stack.gulp.answer", "score": 135, "up_vote_count": 135, "is_accepted": false, "last_activity_date": 1422447106, "body_markdown": "    function getKeyByValue(object, value) {\r\n      return Object.keys(object).find(key =&gt; object[key] === value);\r\n    }\r\n\r\nES6, no prototype mutations or external libraries.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1433366790, "answer_id": 30631071, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1433366790, "last_edit_date": 1495540507, "body_markdown": "I typically recommend lodash rather than underscore.\r\n\r\nIf you have it, use it.\r\n\r\nIf you don&#39;t, then you should consider using the lodash.invert npm package, which is pretty tiny.\r\n\r\nHere&#39;s how you can test it using gulp:\r\n\r\n1) Create a file called gulpfile.js with the following contents:\r\n\r\n    // Filename: gulpfile.js\r\n    var gulp = require(&#39;gulp&#39;);\r\n    var invert = require(&#39;lodash.invert&#39;);   \r\n    gulp.task(&#39;test-invert&#39;, function () {\r\n      var hash = {\r\n        foo: 1,\r\n        bar: 2\r\n      };\r\n      var val = 1;\r\n      var key = (invert(hash))[val];  // &lt;&lt; Here&#39;s where we call invert!\r\n      console.log(&#39;key for val(&#39; + val + &#39;):&#39;, key);\r\n    });\r\n\r\n2) Install the lodash.invert package and gulp\r\n\r\n    $ npm i --save lodash.invert &amp;&amp; npm install gulp\r\n\r\n\r\n3) Test that it works:\r\n\r\n    $ gulp test-invert\r\n    [17:17:23] Using gulpfile ~/dev/npm/lodash-invert/gulpfile.js\r\n    [17:17:23] Starting &#39;test-invert&#39;...\r\n    key for val(1): foo\r\n    [17:17:23] Finished &#39;test-invert&#39; after 511 \u03bcs\r\n\r\n**References**\r\n\r\nhttps://www.npmjs.com/package/lodash.invert\r\n\r\nhttps://lodash.com/\r\n\r\nhttps://stackoverflow.com/questions/13789618/differences-between-lodash-and-underscore\r\n\r\nhttps://github.com/gulpjs/gulp\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1435849348, "answer_id": 31188158, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1435849348, "body_markdown": "Given `input={&quot;a&quot;:&quot;x&quot;, &quot;b&quot;:&quot;y&quot;, &quot;c&quot;:&quot;x&quot;}` ...\r\n\r\nTo use the first value (e.g. `output={&quot;x&quot;:&quot;a&quot;,&quot;y&quot;:&quot;b&quot;}`):\r\n`output=Object.keys(input).reduceRight(function(accum,key,i){accum[input[key]]=key;return accum;},{})`\r\n\r\nTo use the last value (e.g. `output={&quot;x&quot;:&quot;c&quot;,&quot;y&quot;:&quot;b&quot;}`):\r\n`output=Object.keys(input).reduce(function(accum,key,i){accum[input[key]]=key;return accum;},{})`\r\n\r\nTo get an array of keys for each value (e.g. `output={&quot;x&quot;:[&quot;c&quot;,&quot;a&quot;],&quot;y&quot;:[&quot;b&quot;]}`):\r\n`output=Object.keys(input).reduceRight(function(accum,key,i){accum[input[key]]=(accum[input[key]]||[]).concat(key);return accum;},{})`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1438711165, "answer_id": 31816135, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1438711165, "body_markdown": "If you have (or want) a dependency on underscore.js, you can use the findKey function. Eg,\r\n\r\n    var test = {\r\n       key1: 42,\r\n       key2: &#39;foo&#39;\r\n    };\r\n\r\nes6\r\n\r\n    _.findKey(test, (val) =&gt; val === 42);\r\n\r\nes5\r\n\r\n    _.findKey(test, function(val) {\r\n        return val === 42;\r\n    });\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1450026062, "answer_id": 34253749, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1513037055, "last_edit_date": 1513037055, "body_markdown": " \r\n\r\n&gt;Keep your ***prototype*** clean.\r\n\r\n\r\n\tfunction val2key(val,array){\r\n\t\tfor (var key in array) {\r\n\t\t\tif(array[key] == val){\r\n\t\t\t\treturn key;\r\n\t\t\t}\r\n\t\t}\r\n     return false;\r\n\t}\r\nExample:\r\n\r\n    var map = {&quot;first&quot; : 1, &quot;second&quot; : 2};\r\n    var key = val2key(2,map); /*returns &quot;second&quot;*/"}, {"tags": [], "down_vote_count": 4, "creation_date": 1458436136, "answer_id": 36109166, "path": "stack.gulp.answer", "score": 34, "up_vote_count": 38, "is_accepted": false, "last_activity_date": 1458436136, "body_markdown": "The lodash way https://lodash.com/docs#findKey\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var users = {\r\n      &#39;barney&#39;:  { &#39;age&#39;: 36, &#39;active&#39;: true },\r\n      &#39;fred&#39;:    { &#39;age&#39;: 40, &#39;active&#39;: false },\r\n      &#39;pebbles&#39;: { &#39;age&#39;: 1,  &#39;active&#39;: true }\r\n    };\r\n\r\n    _.findKey(users, { &#39;age&#39;: 1, &#39;active&#39;: true });\r\n    // \u2192 &#39;pebbles&#39;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1461020535, "answer_id": 36705765, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1484565133, "last_edit_date": 1484565133, "body_markdown": "    function extractKeyValue(obj, value) {\r\n        return Object.keys(obj)[Object.values(obj).indexOf(value)];\r\n    }\r\n\r\nMade for closure compiler to extract key name which will be unknown after compilation\r\n\r\n**More sexy version but using future `Object.entries` function**\r\n&lt;!-- language: javascript --&gt; \r\n\r\n    function objectKeyByValue (obj, val) {\r\n      return Object.entries(obj).find(i =&gt; i[1] === val);\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1461820595, "answer_id": 36905813, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1461820595, "body_markdown": "### As if this question hasn&#39;t been beaten to a pulp...\r\n\r\nHere&#39;s one just for whatever curiosity it brings you...\r\n\r\nIf you&#39;re sure that your object will have only string values, you could really exhaust yourself to conjure up this implementation:\r\n\r\n    var o = { a: &#39;_A&#39;, b: &#39;_B&#39;, c: &#39;_C&#39; }\r\n      , json = JSON.stringify(o)\r\n      , split = json.split(&#39;&#39;)\r\n      , nosj = split.reverse()\r\n      , o2 = nosj.join(&#39;&#39;);\r\n    \r\n    var reversed = o2.replace(/[{}]+/g, function ($1) { return ({ &#39;{&#39;:&#39;}&#39;, &#39;}&#39;:&#39;{&#39; })[$1]; })\r\n      , object = JSON.parse(reversed)\r\n      , value = &#39;_B&#39;\r\n      , eulav = value.split(&#39;&#39;).reverse().join(&#39;&#39;);\r\n    \r\n    console.log(&#39;&gt;&gt;&#39;, object[eulav]);\r\n\r\nMaybe there&#39;s something useful to build off of here...\r\n\r\nHope this amuses you."}, {"tags": [], "down_vote_count": 0, "creation_date": 1489409129, "answer_id": 42763971, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1489409686, "last_edit_date": 1489409686, "body_markdown": "&gt; **Non-iteratable solution**\r\n\r\nMain function:\r\n\r\n    var keyByValue = function(value) {\r\n    \r\n    \tvar kArray = Object.keys(greetings);        // Creating array of keys\r\n    \tvar vArray = Object.values(greetings);      // Creating array of values\r\n    \tvar vIndex = vArray.indexOf(value);         // Finding value index \r\n    \r\n    \treturn kArray[vIndex];                      // Returning key by value index\r\n    }\r\n\r\nObject with keys and values:\r\n\r\n    var greetings = {\r\n    \tenglish   : &quot;hello&quot;,\r\n     \tukranian  : &quot;\u043f\u0440\u0438\u0432\u0456\u0442&quot;\r\n    };\r\n\r\nTest:\r\n\r\n    keyByValue(&quot;\u043f\u0440\u0438\u0432\u0456\u0442&quot;);\r\n    // =&gt; &quot;ukranian&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1506616843, "answer_id": 46474297, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1506616843, "body_markdown": "Here&#39;s a Lodash solution to this that works for flat key =&gt; value object, rather than a nested object. The accepted answer&#39;s suggestion to use `_.findKey` works for objects with nested objects, but it doesn&#39;t work in this common circumstance.\r\n\r\nThis approach inverts the object, swapping keys for values, and then finds the key by looking up the value on the new (inverted) object. If the key isn&#39;t found then `false` is returned, which I prefer over `undefined`, but you could easily swap this out in the third parameter of the `_.get` method in `getKey()`.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // Get an object&#39;s key by value\r\n    var getKey = function( obj, value ) {\r\n    \tvar inverse = _.invert( obj );\r\n    \treturn _.get( inverse, value, false );\r\n    };\r\n\r\n    // US states used as an example\r\n    var states = {\r\n    \t&quot;AL&quot;: &quot;Alabama&quot;,\r\n    \t&quot;AK&quot;: &quot;Alaska&quot;,\r\n    \t&quot;AS&quot;: &quot;American Samoa&quot;,\r\n    \t&quot;AZ&quot;: &quot;Arizona&quot;,\r\n    \t&quot;AR&quot;: &quot;Arkansas&quot;,\r\n    \t&quot;CA&quot;: &quot;California&quot;,\r\n    \t&quot;CO&quot;: &quot;Colorado&quot;,\r\n    \t&quot;CT&quot;: &quot;Connecticut&quot;,\r\n    \t&quot;DE&quot;: &quot;Delaware&quot;,\r\n    \t&quot;DC&quot;: &quot;District Of Columbia&quot;,\r\n    \t&quot;FM&quot;: &quot;Federated States Of Micronesia&quot;,\r\n    \t&quot;FL&quot;: &quot;Florida&quot;,\r\n    \t&quot;GA&quot;: &quot;Georgia&quot;,\r\n    \t&quot;GU&quot;: &quot;Guam&quot;,\r\n    \t&quot;HI&quot;: &quot;Hawaii&quot;,\r\n    \t&quot;ID&quot;: &quot;Idaho&quot;,\r\n    \t&quot;IL&quot;: &quot;Illinois&quot;,\r\n    \t&quot;IN&quot;: &quot;Indiana&quot;,\r\n    \t&quot;IA&quot;: &quot;Iowa&quot;,\r\n    \t&quot;KS&quot;: &quot;Kansas&quot;,\r\n    \t&quot;KY&quot;: &quot;Kentucky&quot;,\r\n    \t&quot;LA&quot;: &quot;Louisiana&quot;,\r\n    \t&quot;ME&quot;: &quot;Maine&quot;,\r\n    \t&quot;MH&quot;: &quot;Marshall Islands&quot;,\r\n    \t&quot;MD&quot;: &quot;Maryland&quot;,\r\n    \t&quot;MA&quot;: &quot;Massachusetts&quot;,\r\n    \t&quot;MI&quot;: &quot;Michigan&quot;,\r\n    \t&quot;MN&quot;: &quot;Minnesota&quot;,\r\n    \t&quot;MS&quot;: &quot;Mississippi&quot;,\r\n    \t&quot;MO&quot;: &quot;Missouri&quot;,\r\n    \t&quot;MT&quot;: &quot;Montana&quot;,\r\n    \t&quot;NE&quot;: &quot;Nebraska&quot;,\r\n    \t&quot;NV&quot;: &quot;Nevada&quot;,\r\n    \t&quot;NH&quot;: &quot;New Hampshire&quot;,\r\n    \t&quot;NJ&quot;: &quot;New Jersey&quot;,\r\n    \t&quot;NM&quot;: &quot;New Mexico&quot;,\r\n    \t&quot;NY&quot;: &quot;New York&quot;,\r\n    \t&quot;NC&quot;: &quot;North Carolina&quot;,\r\n    \t&quot;ND&quot;: &quot;North Dakota&quot;,\r\n    \t&quot;MP&quot;: &quot;Northern Mariana Islands&quot;,\r\n    \t&quot;OH&quot;: &quot;Ohio&quot;,\r\n    \t&quot;OK&quot;: &quot;Oklahoma&quot;,\r\n    \t&quot;OR&quot;: &quot;Oregon&quot;,\r\n    \t&quot;PW&quot;: &quot;Palau&quot;,\r\n    \t&quot;PA&quot;: &quot;Pennsylvania&quot;,\r\n    \t&quot;PR&quot;: &quot;Puerto Rico&quot;,\r\n    \t&quot;RI&quot;: &quot;Rhode Island&quot;,\r\n    \t&quot;SC&quot;: &quot;South Carolina&quot;,\r\n    \t&quot;SD&quot;: &quot;South Dakota&quot;,\r\n    \t&quot;TN&quot;: &quot;Tennessee&quot;,\r\n    \t&quot;TX&quot;: &quot;Texas&quot;,\r\n    \t&quot;UT&quot;: &quot;Utah&quot;,\r\n    \t&quot;VT&quot;: &quot;Vermont&quot;,\r\n    \t&quot;VI&quot;: &quot;Virgin Islands&quot;,\r\n    \t&quot;VA&quot;: &quot;Virginia&quot;,\r\n    \t&quot;WA&quot;: &quot;Washington&quot;,\r\n    \t&quot;WV&quot;: &quot;West Virginia&quot;,\r\n    \t&quot;WI&quot;: &quot;Wisconsin&quot;,\r\n    \t&quot;WY&quot;: &quot;Wyoming&quot;\r\n    };\r\n\r\n    console.log( &#39;The key for &quot;Massachusetts&quot; is &quot;&#39; + getKey( states, &#39;Massachusetts&#39; ) + &#39;&quot;&#39; );\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}], "title": "How to get a key in a JavaScript object by its value?", "view_count": 240834, "answer_count": 19, "code_snippet": ["<code>var\u00a0o\u00a0=\u00a0[];\u00a0var\u00a0map\u00a0=\u00a0{first:\u00a0o,\u00a0second:\u00a0o}</code>", "<code>find_key(o)</code>", "<code>var hash = {\n foo: 1,\n bar: 2\n};\n\n(_.invert(hash))[1]; // =&gt; 'foo'\n</code>", "<code>Object.prototype.getKeyByValue = function( value ) {\n    for( var prop in this ) {\n        if( this.hasOwnProperty( prop ) ) {\n             if( this[ prop ] === value )\n                 return prop;\n        }\n    }\n}\n\nvar test = {\n   key1: 42,\n   key2: 'foo'\n};\n\ntest.getKeyByValue( 42 );  // returns 'key1'\n</code>", "<code>.prototype</code>", "<code>.prototype</code>", "<code>function getKeyByValue(object, value) {\n  return Object.keys(object).find(key =&gt; object[key] === value);\n}\n</code>", "<code>keys()</code>", "<code>var key = Object.keys(obj).filter(function(key) {return obj[key] === value})[0];\n</code>", "<code>value</code>", "<code>Object.keys(obj).or(o=&gt;o[key] === value)</code>", "<code>or</code>", "<code>or</code>", "<code>[1,2,3,4].or(x=&gt;x&gt;2)</code>", "<code>3</code>", "<code>[1,2,3,4,5].or(x=&gt;x&lt;3)</code>", "<code>1</code>", "<code>or</code>", "<code>Array.prototype.find</code>", "<code>Array.prototype.findIndex</code>", "<code>var users = {\r\n  'barney':  { 'age': 36, 'active': true },\r\n  'fred':    { 'age': 40, 'active': false },\r\n  'pebbles': { 'age': 1,  'active': true }\r\n};\r\n\r\n_.findKey(users, { 'age': 1, 'active': true });\r\n// \u2192 'pebbles'</code>", "<code>_.findKey(users, { 'age': 1, 'active': true });</code>", "<code>_.find_key({a: \"A\", b:\"B\"}, \"B\"})</code>", "<code>undefined</code>", "<code>_.find_key({a: \"A\", b:\"B\"}, _.partial(_.isEqual,\"B\")})</code>", "<code>_.invert(haystack)[needle]</code>", "<code>function extractKeyValue(obj, value) {\n    return Object.keys(obj)[Object.values(obj).indexOf(value)];\n}\n</code>", "<code>Object.entries</code>", "<code>function objectKeyByValue (obj, val) {\n  return Object.entries(obj).find(i =&gt; i[1] === val);\n}\n</code>", "<code>Object.prototype.getKey = function(value){\n  for(var key in this){\n    if(this[key] == value){\n      return key;\n    }\n  }\n  return null;\n};\n</code>", "<code>// ISO 639: 2-letter codes\nvar languageCodes = {\n  DA: 'Danish',\n  DE: 'German',\n  DZ: 'Bhutani',\n  EL: 'Greek',\n  EN: 'English',\n  EO: 'Esperanto',\n  ES: 'Spanish'\n};\n\nvar key = languageCodes.getKey('Greek');\nconsole.log(key); // EL\n</code>", "<code>obj.hasOwnProperty(key)</code>", "<code>var test = {\n   key1: 42,\n   key2: 'foo'\n};\n</code>", "<code>_.findKey(test, (val) =&gt; val === 42);\n</code>", "<code>_.findKey(test, function(val) {\n    return val === 42;\n});\n</code>", "<code>function val2key(val,array){\n    for (var key in array) {\n        if(array[key] == val){\n            return key;\n        }\n    }\n return false;\n}\n</code>", "<code>var map = {\"first\" : 1, \"second\" : 2};\nvar key = val2key(2,map); /*returns \"second\"*/\n</code>", "<code>var keyByValue = function(value) {\n\n    var kArray = Object.keys(greetings);        // Creating array of keys\n    var vArray = Object.values(greetings);      // Creating array of values\n    var vIndex = vArray.indexOf(value);         // Finding value index \n\n    return kArray[vIndex];                      // Returning key by value index\n}\n</code>", "<code>var greetings = {\n    english   : \"hello\",\n    ukranian  : \"\u043f\u0440\u0438\u0432\u0456\u0442\"\n};\n</code>", "<code>keyByValue(\"\u043f\u0440\u0438\u0432\u0456\u0442\");\n// =&gt; \"ukranian\"\n</code>", "<code>npm install bimap</code>", "<code>var bimap = new BiMap;\nbimap.push(\"k\", \"v\");\nbimap.key(\"k\") // =&gt; \"v\"\nbimap.val(\"v\") // =&gt; \"k\"\n\nbimap.push(\"UK\", [\"London\", \"Manchester\"]);\nbimap.key(\"UK\"); // =&gt; [\"London\", \"Manchester\"]\nbimap.val(\"London\"); // =&gt; \"UK\"\nbimap.val(\"Manchester\"); // =&gt; \"UK\"\n</code>", "<code>var foo = {};\nfoo[foo.apple = \"an apple\"] = \"apple\";\nfoo[foo.pear = \"a pear\"] = \"pear\";\n</code>", "<code>var key = \"apple\";\nvar value = \"an apple\";\n\nconsole.log(foo[value]); // \"apple\"\nconsole.log(foo[key]); // \"an apple\"\n</code>", "<code> newLookUpObj = {};\n $.each(oldLookUpObj,function(key,value){\n        newLookUpObj[value] = String(key);\n    });\n</code>", "<code>var o = { a: '_A', b: '_B', c: '_C' }\n  , json = JSON.stringify(o)\n  , split = json.split('')\n  , nosj = split.reverse()\n  , o2 = nosj.join('');\n\nvar reversed = o2.replace(/[{}]+/g, function ($1) { return ({ '{':'}', '}':'{' })[$1]; })\n  , object = JSON.parse(reversed)\n  , value = '_B'\n  , eulav = value.split('').reverse().join('');\n\nconsole.log('&gt;&gt;', object[eulav]);\n</code>", "<code>var a = new Array(); \n    a.push({\"1\": \"apple\", \"2\": \"banana\"}); \n    a.push({\"3\": \"coconut\", \"4\": \"mango\"});\n\n    GetIndexByValue(a, \"coconut\");\n\n    function GetIndexByValue(arrayName, value) {  \n    var keyName = \"\";\n    var index = -1;\n    for (var i = 0; i &lt; arrayName.length; i++) { \n       var obj = arrayName[i]; \n            for (var key in obj) {          \n                if (obj[key] == value) { \n                    keyName = key; \n                    index = i;\n                } \n            } \n        }\n        //console.log(index); \n        return index;\n    } \n</code>", "<code>// Filename: gulpfile.js\nvar gulp = require('gulp');\nvar invert = require('lodash.invert');   \ngulp.task('test-invert', function () {\n  var hash = {\n    foo: 1,\n    bar: 2\n  };\n  var val = 1;\n  var key = (invert(hash))[val];  // &lt;&lt; Here's where we call invert!\n  console.log('key for val(' + val + '):', key);\n});\n</code>", "<code>$ npm i --save lodash.invert &amp;&amp; npm install gulp\n</code>", "<code>$ gulp test-invert\n[17:17:23] Using gulpfile ~/dev/npm/lodash-invert/gulpfile.js\n[17:17:23] Starting 'test-invert'...\nkey for val(1): foo\n[17:17:23] Finished 'test-invert' after 511 \u03bcs\n</code>", "<code>input={\"a\":\"x\", \"b\":\"y\", \"c\":\"x\"}</code>", "<code>output={\"x\":\"a\",\"y\":\"b\"}</code>", "<code>output=Object.keys(input).reduceRight(function(accum,key,i){accum[input[key]]=key;return accum;},{})</code>", "<code>output={\"x\":\"c\",\"y\":\"b\"}</code>", "<code>output=Object.keys(input).reduce(function(accum,key,i){accum[input[key]]=key;return accum;},{})</code>", "<code>output={\"x\":[\"c\",\"a\"],\"y\":[\"b\"]}</code>", "<code>output=Object.keys(input).reduceRight(function(accum,key,i){accum[input[key]]=(accum[input[key]]||[]).concat(key);return accum;},{})</code>", "<code>output['x']</code>", "<code>var getKeyByValue = function(searchValue) {\n  return _.findKey(hash, function(hashValue) {\n    return searchValue === hashValue;\n  });\n}\n</code>", "<code>_.findKey</code>", "<code>false</code>", "<code>undefined</code>", "<code>_.get</code>", "<code>getKey()</code>", "<code>// Get an object's key by value\r\nvar getKey = function( obj, value ) {\r\n\tvar inverse = _.invert( obj );\r\n\treturn _.get( inverse, value, false );\r\n};\r\n\r\n// US states used as an example\r\nvar states = {\r\n\t\"AL\": \"Alabama\",\r\n\t\"AK\": \"Alaska\",\r\n\t\"AS\": \"American Samoa\",\r\n\t\"AZ\": \"Arizona\",\r\n\t\"AR\": \"Arkansas\",\r\n\t\"CA\": \"California\",\r\n\t\"CO\": \"Colorado\",\r\n\t\"CT\": \"Connecticut\",\r\n\t\"DE\": \"Delaware\",\r\n\t\"DC\": \"District Of Columbia\",\r\n\t\"FM\": \"Federated States Of Micronesia\",\r\n\t\"FL\": \"Florida\",\r\n\t\"GA\": \"Georgia\",\r\n\t\"GU\": \"Guam\",\r\n\t\"HI\": \"Hawaii\",\r\n\t\"ID\": \"Idaho\",\r\n\t\"IL\": \"Illinois\",\r\n\t\"IN\": \"Indiana\",\r\n\t\"IA\": \"Iowa\",\r\n\t\"KS\": \"Kansas\",\r\n\t\"KY\": \"Kentucky\",\r\n\t\"LA\": \"Louisiana\",\r\n\t\"ME\": \"Maine\",\r\n\t\"MH\": \"Marshall Islands\",\r\n\t\"MD\": \"Maryland\",\r\n\t\"MA\": \"Massachusetts\",\r\n\t\"MI\": \"Michigan\",\r\n\t\"MN\": \"Minnesota\",\r\n\t\"MS\": \"Mississippi\",\r\n\t\"MO\": \"Missouri\",\r\n\t\"MT\": \"Montana\",\r\n\t\"NE\": \"Nebraska\",\r\n\t\"NV\": \"Nevada\",\r\n\t\"NH\": \"New Hampshire\",\r\n\t\"NJ\": \"New Jersey\",\r\n\t\"NM\": \"New Mexico\",\r\n\t\"NY\": \"New York\",\r\n\t\"NC\": \"North Carolina\",\r\n\t\"ND\": \"North Dakota\",\r\n\t\"MP\": \"Northern Mariana Islands\",\r\n\t\"OH\": \"Ohio\",\r\n\t\"OK\": \"Oklahoma\",\r\n\t\"OR\": \"Oregon\",\r\n\t\"PW\": \"Palau\",\r\n\t\"PA\": \"Pennsylvania\",\r\n\t\"PR\": \"Puerto Rico\",\r\n\t\"RI\": \"Rhode Island\",\r\n\t\"SC\": \"South Carolina\",\r\n\t\"SD\": \"South Dakota\",\r\n\t\"TN\": \"Tennessee\",\r\n\t\"TX\": \"Texas\",\r\n\t\"UT\": \"Utah\",\r\n\t\"VT\": \"Vermont\",\r\n\t\"VI\": \"Virgin Islands\",\r\n\t\"VA\": \"Virginia\",\r\n\t\"WA\": \"Washington\",\r\n\t\"WV\": \"West Virginia\",\r\n\t\"WI\": \"Wisconsin\",\r\n\t\"WY\": \"Wyoming\"\r\n};\r\n\r\nconsole.log( 'The key for \"Massachusetts\" is \"' + getKey( states, 'Massachusetts' ) + '\"' );</code>", "<code>&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js\"&gt;&lt;/script&gt;</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "coffeescript", "npm", "node-modules"], "creation_date": 1331623866, "body_markdown": "How do I use a local version of a module in `node.js`. For example, in my app, I installed coffee-script:\r\n\r\n    npm install coffee-script\r\n\r\nThis installs it in `./node_modules` and the coffee command is in `./node_modules/.bin/coffee`. Is there a way to run this command when I&#39;m in my project&#39;s main folder? I guess I&#39;m looking for something similar to `bundle exec` in bundler. Basically, I&#39;d like to specify a version of coffee-script that everyone involved with the project should use.\r\n\r\nI know I can add the `-g` flag to install it globally so coffee works fine anywhere, but what if I wanted to have different versions of coffee per project?\r\n", "last_edit_date": 1443516577, "up_vote_count": 301, "link": "https://stackoverflow.com/questions/9679932/how-to-use-package-installed-locally-in-node-modules", "_childDocuments_": [{"tags": [], "down_vote_count": 8, "creation_date": 1331625480, "answer_id": 9680221, "path": "stack.gulp.answer", "score": -8, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1331625480, "body_markdown": "Include coffee-script in package.json with the specific version required in each project, typically like this:\r\n\r\n    &quot;dependencies&quot;:{\r\n      &quot;coffee-script&quot;: &quot;&gt;= 1.2.0&quot;\r\n\r\nThen run npm install to install dependencies in each project. This will install the specified version of coffee-script which will be accessible locally to each project."}, {"tags": [], "down_vote_count": 9, "creation_date": 1331639541, "answer_id": 9683472, "path": "stack.gulp.answer", "score": 38, "up_vote_count": 47, "is_accepted": false, "last_activity_date": 1444140131, "last_edit_date": 1444140131, "body_markdown": "**Update:** I no longer recommend this method, both for the mentioned security reasons and not the least the newer `npm bin` command. Original answer below:\r\n\r\nAs you have found out, any locally installed binaries are in `./node_modules/.bin`. In order to always run binaries in this directory rather than globally available binaries, if present, I suggest you put `./node_modules/.bin` first in your path:\r\n\r\n    export PATH=&quot;./node_modules/.bin:$PATH&quot;\r\n\r\nIf you put this in your `~/.profile`, `coffee` will always be `./node_modules/.bin/coffee` if available, otherwise `/usr/local/bin/coffee` (or whatever prefix you are installing node modules under)."}, {"tags": [], "down_vote_count": 2, "creation_date": 1362139563, "answer_id": 15157360, "path": "stack.gulp.answer", "score": 421, "up_vote_count": 423, "is_accepted": true, "last_activity_date": 1490830498, "last_edit_date": 1490830498, "body_markdown": "The problem with putting\r\n\r\n    ./node_modules/.bin\r\n\r\ninto your PATH is that it only works when your current working directory is the root of your project directory structure (i.e. the location of `node_modules`)\r\n\r\nIndependent of what your working directory is, you can get the path of locally installed binaries with\r\n\r\n    npm bin\r\n\r\nTo execute a locally installed `coffee` binary independent of where you are in the project directory hierarchy you can use this bash construct\r\n\r\n    PATH=$(npm bin):$PATH coffee\r\n\r\nI aliased this to npm-exec\r\n\r\n    alias npm-exec=&#39;PATH=$(npm bin):$PATH&#39;\r\n\r\nSo, now I can\r\n\r\n    npm-exec coffee\r\n\r\nto run the correct copy of coffee no matter of where I am\r\n\r\n    $ pwd\r\n    /Users/regular/project1\r\n    \r\n    $ npm-exec which coffee\r\n    /Users/regular/project1/node_modules/.bin/coffee\r\n\r\n    $ cd lib/\r\n    $ npm-exec which coffee\r\n    /Users/regular/project1/node_modules/.bin/coffee\r\n\r\n    $ cd ~/project2\r\n    $ npm-exec which coffee\r\n    /Users/regular/project2/node_modules/.bin/coffee\r\n    "}, {"tags": [], "down_vote_count": 1, "creation_date": 1384150450, "answer_id": 19899975, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1384150450, "body_markdown": "If you want your PATH variable to correctly update based on your current working directory, add this to the end of your `.bashrc`-equivalent (or after anything that defines `PATH`):\r\n\r\n    __OLD_PATH=$PATH\r\n    function updatePATHForNPM() {\r\n      export PATH=$(npm bin):$__OLD_PATH\r\n    }\r\n\r\n    function node-mode() {\r\n      PROMPT_COMMAND=updatePATHForNPM\r\n    }\r\n\r\n    function node-mode-off() {\r\n      unset PROMPT_COMMAND\r\n      PATH=$__OLD_PATH\r\n    }\r\n\r\n    # Uncomment to enable node-mode by default:\r\n    # node-mode\r\n\r\nThis may add a short delay every time the bash prompt gets rendered (depending on the size of your project, most likely), so it&#39;s disabled by default.\r\n\r\nYou can enable and disable it within your terminal by running `node-mode` and `node-mode-off`, respectively."}, {"tags": [], "down_vote_count": 1, "creation_date": 1418433535, "answer_id": 27454532, "path": "stack.gulp.answer", "score": 79, "up_vote_count": 80, "is_accepted": false, "last_activity_date": 1418433535, "body_markdown": "Use the `npm bin` command to get the node modules /bin directory of your project\r\n\r\n    $ $(npm bin)/&lt;binary-name&gt; [args]\r\n\r\ne.g.\r\n\r\n    $ $(npm bin)/bower install\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1419978043, "answer_id": 27713427, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1419978413, "last_edit_date": 1495540510, "body_markdown": "I encountered the same problem and I don&#39;t particularly like using aliases (as [regular][1]&#39;s suggested), and if you don&#39;t like them too then here&#39;s another workaround that I use, you first have to create a tiny executable bash script, say **setenv.sh**:\r\n\r\n    #!/bin/sh\r\n\r\n    # Add your local node_modules bin to the path\r\n    export PATH=&quot;$(npm bin):$PATH&quot;\r\n\r\n    # execute the rest of the command\r\n    exec &quot;$@&quot;\r\n\r\nand then you can then use any executables in your local `/bin` using this command:\r\n\r\n    ./setenv.sh &lt;command&gt;\r\n    ./setenv.sh 6to5-node server.js\r\n    ./setenv.sh grunt\r\n\r\nIf you&#39;re using `scripts` in package.json then:\r\n\r\n    ...,\r\n    scripts: {\r\n        &#39;start&#39;: &#39;./setenv.sh &lt;command&gt;&#39;\r\n    }\r\n\r\n\r\n\r\n  [1]: https://stackoverflow.com/users/1196043/regular"}, {"tags": [], "down_vote_count": 0, "creation_date": 1424117451, "answer_id": 28549523, "path": "stack.gulp.answer", "score": 61, "up_vote_count": 61, "is_accepted": false, "last_activity_date": 1424117451, "body_markdown": "Use `npm run[-script] &lt;script name&gt;`\r\n\r\nAfter using npm to install the bin package to your local ./node_modules directory, modify package.json to add &lt;script name&gt; like this:\r\n\r\n    $ npm install --save learnyounode\r\n    $ edit packages.json\r\n    &gt;&gt;&gt; in packages.json\r\n    ...\r\n    &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\r\n        &quot;learnyounode&quot;: &quot;learnyounode&quot;\r\n    },\r\n    ...\r\n    $ npm run learnyounode\r\n\r\n*It would be nice if npm install had a --add-script option or something or if npm run would work without adding to the scripts block.*"}, {"tags": [], "down_vote_count": 0, "creation_date": 1439845782, "answer_id": 32059751, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1439845782, "body_markdown": "The PATH solution has the issue that if $(npm bin) is placed in your .profile/.bashrc/etc it is evaluated once and is forever set to whichever directory the path was first evaluated in. If instead you modify the current path then every time you run the script your path will grow. \r\n\r\nTo get around these issues, I create a function and used that. It doesn&#39;t modify your environment and is simple to use:\r\n\r\n    function npm-exec {\r\n       $(npm bin)/$@  \r\n    }\r\nThis can then be used like this without making any changes to your environment:\r\n\r\n    npm-exec r.js &lt;args&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1441723369, "answer_id": 32460731, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1486468698, "last_edit_date": 1486468698, "body_markdown": "Same @regular &#39;s accepted solution, but Fish shell flavour\r\n\r\n&lt;!-- language: fish --&gt;\r\n\r\n    if not contains (npm bin) $PATH\r\n        set PATH (npm bin) $PATH\r\n    end"}, {"tags": [], "down_vote_count": 0, "creation_date": 1453154963, "answer_id": 34864975, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1453154963, "body_markdown": "[zxc][] is like &quot;bundle exec&quot; for nodejs. It is similar to using `PATH=$(npm bin):$PATH`:\r\n\r\n    $ npm install -g zxc\r\n    $ npm install gulp\r\n    $ zxc which gulp\r\n    /home/nathan/code/project1/node_modules/.bin/gulp\r\n    \r\n\r\n\r\n[zxc]: https://www.npmjs.com/package/zxc"}, {"tags": [], "down_vote_count": 1, "creation_date": 1468547312, "answer_id": 38386701, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1471930217, "last_edit_date": 1471930217, "body_markdown": "I&#39;d love to know if this is an insecure/bad idea, but after thinking about it a bit I don&#39;t see an issue here:\r\n\r\nModifying Linus&#39;s insecure solution to add it to the end, using `npm bin` to find the directory, and making the script only call `npm bin` when a `package.json` is present in a parent (for speed), this is what I came up with for `zsh`:\r\n\r\n    find-up () {\r\n      path=$(pwd)\r\n      while [[ &quot;$path&quot; != &quot;&quot; &amp;&amp; ! -e &quot;$path/$1&quot; ]]; do\r\n        path=${path%/*}\r\n      done\r\n      echo &quot;$path&quot;\r\n    }\r\n\r\n    precmd() {\r\n      if [ &quot;$(find-up package.json)&quot; != &quot;&quot; ]; then\r\n        new_bin=$(npm bin)\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;$new_bin&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\r\n          export NODE_MODULES_PATH=$new_bin\r\n        fi\r\n      else\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}\r\n          export NODE_MODULES_PATH=&quot;&quot;\r\n        fi\r\n      fi\r\n    }\r\n\r\nFor `bash`, instead of using the `precmd` hook, you can use the `$PROMPT_COMMAND` variable (I haven&#39;t tested this but you get the idea):\r\n\r\n    __add-node-to-path() {\r\n      if [ &quot;$(find-up package.json)&quot; != &quot;&quot; ]; then\r\n        new_bin=$(npm bin)\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;$new_bin&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\r\n          export NODE_MODULES_PATH=$new_bin\r\n        fi\r\n      else\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}\r\n          export NODE_MODULES_PATH=&quot;&quot;\r\n        fi\r\n      fi   \r\n    }\r\n\r\n    export PROMPT_COMMAND=&quot;__add-node-to-path&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1470265209, "answer_id": 38754980, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1510745907, "last_edit_date": 1510745907, "body_markdown": "# For Windows\r\n\r\nStore the following in a file called `npm-exec.bat` and add it to your `%PATH%`\r\n\r\n    @echo off\r\n    set cmd=&quot;npm bin&quot;\r\n    FOR /F &quot;tokens=*&quot; %%i IN (&#39; %cmd% &#39;) DO SET modules=%%i\r\n    &quot;%modules%&quot;\\%*\r\n\r\n\r\n## Usage\r\nThen you can use it like \r\n`npm-exec &lt;command&gt; &lt;arg0&gt; &lt;arg1&gt; ...` \r\n\r\n**For example**\r\n\r\nTo execute `wdio` installed in local node_modules directory, do:\r\n\r\n    npm-exec wdio wdio.conf.js\r\n\r\n i.e. it will run  `.\\node_modules\\.bin\\wdio wdio.conf.js`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1477689646, "answer_id": 40313363, "path": "stack.gulp.answer", "score": 42, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1477689646, "body_markdown": "Use [`npm-run`](https://www.npmjs.com/package/npm-run).\r\n\r\nFrom the readme:\r\n\r\n# npm-run\r\n\r\n### Find &amp; run local executables from node_modules\r\n\r\nAny executable available to an npm lifecycle script is available to `npm-run`.\r\n\r\n## Usage\r\n\r\n    $ npm install mocha # mocha installed in ./node_modules\r\n    $ npm-run mocha test/* # uses locally installed mocha executable \r\n\r\n## Installation\r\n\r\n    $ npm install -g npm-run"}, {"tags": [], "down_vote_count": 0, "creation_date": 1479255743, "answer_id": 40622066, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1479255743, "body_markdown": "You can also use direnv and change the $PATH variable only in your working folder.\r\n\r\n    $ cat .envrc\r\n    &gt; export PATH=$(npm bin):$PATH"}, {"tags": [], "down_vote_count": 0, "creation_date": 1482166170, "answer_id": 41227356, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1485397548, "last_edit_date": 1485397548, "body_markdown": "Add this script to your `.bashrc`. Then you can call `coffee` or anyhting locally. This is handy for your laptop, but don&#39;t use it on your server.\r\n\r\n    DEFAULT_PATH=$PATH;\r\n    \r\n    add_local_node_modules_to_path(){\r\n      NODE_MODULES=&#39;./node_modules/.bin&#39;;\r\n      if [ -d $NODE_MODULES ]; then\r\n        PATH=$DEFAULT_PATH:$NODE_MODULES;\r\n      else\r\n        PATH=$DEFAULT_PATH;\r\n      fi\r\n    }\r\n    \r\n    cd () {\r\n      builtin cd &quot;$@&quot;;\r\n      add_local_node_modules_to_path;\r\n    }\r\n    \r\n    add_local_node_modules_to_path;\r\n\r\n*note*: this script makes aliase of `cd` command, and after each call of `cd` it checks `node_modules/.bin` and add it to your `$PATH`.\r\n\r\n*note2*: you can change the third line to `NODE_MODULES=$(npm bin);`. But that would make `cd` command too slow."}, {"tags": [], "down_vote_count": 0, "creation_date": 1485422862, "answer_id": 41870325, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1485422862, "body_markdown": "I am a `Windows` user and this is what worked for me:\r\n\r\n\r\n    // First set some variable - i.e. replace is with &quot;xo&quot;\r\n    D:\\project\\root&gt; set xo=&quot;./node_modules/.bin/&quot;\r\n    \r\n    // Next, work with it\r\n    D:\\project\\root&gt; %xo%/bower install\r\n\r\n\r\nGood Luck.\r\n "}, {"tags": [], "down_vote_count": 0, "creation_date": 1486040358, "answer_id": 42002907, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1487781308, "last_edit_date": 1487781308, "body_markdown": "For Windows use this:\r\n\r\n    /* cmd into &quot;node_modules&quot; folder */\r\n    &quot;%CD%\\.bin\\grunt&quot; --version"}, {"tags": [], "down_vote_count": 0, "creation_date": 1495211341, "answer_id": 44074849, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1495212351, "last_edit_date": 1495212351, "body_markdown": "In case you are using `fish shell` and do not want to add to `$path` for security reason. We can add the below function to run local node executables. \r\n\r\n    ### run executables in node_module/.bin directory\r\n    function n \r\n      set -l npmbin (npm bin)   \r\n      set -l argvCount (count $argv)\r\n      switch $argvCount\r\n        case 0\r\n          echo please specify the local node executable as 1st argument\r\n        case 1\r\n          # for one argument, we can eval directly \r\n          eval $npmbin/$argv\r\n        case &#39;*&#39;\r\n          set --local executable $argv[1]\r\n          # for 2 or more arguments we cannot append directly after the $npmbin/ since the fish will apply each array element after the the start string: $npmbin/arg1 $npmbin/arg2... \r\n          # This is just how fish interoperate array. \r\n          set --erase argv[1]\r\n          eval $npmbin/$executable $argv \r\n      end\r\n    end\r\n\r\nNow you can run thing like: \r\n\r\n`n coffee`\r\n\r\nor more arguments like:\r\n\r\n`n browser-sync --version`\r\n\r\nNote, if you are `bash` user, then @Bob9630 answers is the way to go by leveraging bash&#39;s `$@`, which is not available in `fishshell`. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1500375581, "answer_id": 45164863, "path": "stack.gulp.answer", "score": 65, "up_vote_count": 65, "is_accepted": false, "last_activity_date": 1519874908, "last_edit_date": 1519874908, "body_markdown": "[![Nice example][2]][2]\r\n\r\nYou don&#39;t have to manipulate `$PATH` anymore!\r\n\r\n\r\nFrom [npm@5.2.0][1], **npm** ships with `npx` package which lets you run commands from a local `node_modules/.bin` or from a central cache.\r\n\r\nSimply run:\r\n\r\n\r\n    $ npx [options] &lt;command&gt;[@version] [command-arg]...\r\n\r\n\r\nBy default, `npx` will check whether `&lt;command&gt;` exists in `$PATH`, or in the local project binaries, and execute that.\r\n\r\nCalling `npx &lt;command&gt;` when `&lt;command&gt;` isn&#39;t already in your `$PATH` will automatically install a package with that name from the NPM registry for you, and invoke it. When it&#39;s done, the installed package won\u2019t be anywhere in your globals, so you won\u2019t have to worry about pollution in the long-term. You can prevent this behaviour by providing `--no-install` option.\r\n\r\n\r\nFor `npm &lt; 5.2.0`, you can install `npx` package manually by running the following command:\r\n\r\n    $ npm install -g npx\r\n\r\n\r\n  [1]: https://github.com/npm/npm/releases/tag/v5.2.0\r\n  [2]: https://i.stack.imgur.com/zyFua.gif"}, {"tags": [], "down_vote_count": 0, "creation_date": 1502448844, "answer_id": 45633460, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1517842480, "last_edit_date": 1517842480, "body_markdown": "If you want to keep npm, then [npx](https://stackoverflow.com/a/45164863/457268) should do what you need.\r\n\r\n---\r\n\r\nIf switching to yarn (a npm replacement by facebook) is an option for you, then you can call:\r\n\r\n     yarn yourCmd\r\n\r\nscripts inside the package.json will take precedence, if none is found it will look inside the `./node_modules/.bin/` folder.\r\n\r\nIt also outputs what it ran:\r\n\r\n    $ yarn tsc\r\n    yarn tsc v0.27.5\r\n    $ &quot;/home/philipp/rate-pipeline/node_modules/.bin/tsc&quot;\r\n\r\nSo you don&#39;t have to setup scripts for each command in your `package.json`.\r\n\r\n\r\n---\r\n\r\nIf you had a script defined at `.scripts` inside your `package.json`:\r\n\r\n    &quot;tsc&quot;: &quot;tsc&quot; // each command defined in the scripts will be executed from `./node_modules/.bin/` first\r\n\r\n`yarn tsc` would be equivalent to `yarn run tsc` or `npm run tsc`:\r\n\r\n     yarn tsc\r\n     yarn tsc v0.27.5\r\n     $ tsc\r\n\r\n"}], "title": "How to use package installed locally in node_modules?", "view_count": 135620, "answer_count": 20, "code_snippet": ["<code>node.js</code>", "<code>npm install coffee-script\n</code>", "<code>./node_modules</code>", "<code>./node_modules/.bin/coffee</code>", "<code>bundle exec</code>", "<code>-g</code>", "<code>npm install niftycommand</code>", "<code>niftycommand</code>", "<code>coffee</code>", "<code>npm scripts</code>", "<code>\"build\": \"coffee -co target/directory source/directoy\", so you can run </code>", "<code>./node_modules/.bin\n</code>", "<code>node_modules</code>", "<code>npm bin\n</code>", "<code>coffee</code>", "<code>PATH=$(npm bin):$PATH coffee\n</code>", "<code>alias npm-exec='PATH=$(npm bin):$PATH'\n</code>", "<code>npm-exec coffee\n</code>", "<code>$ pwd\n/Users/regular/project1\n\n$ npm-exec which coffee\n/Users/regular/project1/node_modules/.bin/coffee\n\n$ cd lib/\n$ npm-exec which coffee\n/Users/regular/project1/node_modules/.bin/coffee\n\n$ cd ~/project2\n$ npm-exec which coffee\n/Users/regular/project2/node_modules/.bin/coffee\n</code>", "<code>alias coffee=\"npm-exec coffee\"</code>", "<code>npm bin</code>", "<code>PATH</code>", "<code>npm bin</code>", "<code>$ $(npm bin)/&lt;binary-name&gt; [args]\n</code>", "<code>$ $(npm bin)/bower install\n</code>", "<code>export PATH=\"./node_modules/.bin:$PATH\"</code>", "<code>$(npm bin)/jasmine</code>", "<code>node $(npm bin)/jasmine</code>", "<code>$PATH</code>", "<code>npx</code>", "<code>node_modules/.bin</code>", "<code>$ npx [options] &lt;command&gt;[@version] [command-arg]...\n</code>", "<code>npx</code>", "<code>&lt;command&gt;</code>", "<code>$PATH</code>", "<code>npx &lt;command&gt;</code>", "<code>&lt;command&gt;</code>", "<code>$PATH</code>", "<code>--no-install</code>", "<code>npm &lt; 5.2.0</code>", "<code>npx</code>", "<code>$ npm install -g npx\n</code>", "<code>npm run[-script] &lt;script name&gt;</code>", "<code>$ npm install --save learnyounode\n$ edit packages.json\n&gt;&gt;&gt; in packages.json\n...\n\"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\",\n    \"learnyounode\": \"learnyounode\"\n},\n...\n$ npm run learnyounode\n</code>", "<code>npm install</code>", "<code>npm run eslint</code>", "<code>npm start</code>", "<code>--</code>", "<code>npm run learnyounode -- --normal-switches --watch -d *.js</code>", "<code>npm-run</code>", "<code>npm-run</code>", "<code>$ npm install mocha # mocha installed in ./node_modules\n$ npm-run mocha test/* # uses locally installed mocha executable \n</code>", "<code>$ npm install -g npm-run\n</code>", "<code>npm bin</code>", "<code>./node_modules/.bin</code>", "<code>./node_modules/.bin</code>", "<code>export PATH=\"./node_modules/.bin:$PATH\"\n</code>", "<code>~/.profile</code>", "<code>coffee</code>", "<code>./node_modules/.bin/coffee</code>", "<code>/usr/local/bin/coffee</code>", "<code>./node_modules/.bin/coffee --output lib/ --compile --bare --watch src</code>", "<code>/tmp</code>", "<code>ls</code>", "<code>cp</code>", "<code>alias npm-exec='PATH=$(npm bin):$PATH'</code>", "<code>PATH</code>", "<code>$(npm bin)</code>", "<code>npm bin</code>", "<code>PATH</code>", "<code>npm</code>", "<code>function npm-exec {\n   $(npm bin)/$@  \n}\n</code>", "<code>npm-exec r.js &lt;args&gt;\n</code>", "<code>n</code>", "<code> yarn yourCmd\n</code>", "<code>./node_modules/.bin/</code>", "<code>$ yarn tsc\nyarn tsc v0.27.5\n$ \"/home/philipp/rate-pipeline/node_modules/.bin/tsc\"\n</code>", "<code>package.json</code>", "<code>.scripts</code>", "<code>package.json</code>", "<code>\"tsc\": \"tsc\" // each command defined in the scripts will be executed from `./node_modules/.bin/` first\n</code>", "<code>yarn tsc</code>", "<code>yarn run tsc</code>", "<code>npm run tsc</code>", "<code> yarn tsc\n yarn tsc v0.27.5\n $ tsc\n</code>", "<code>.bashrc</code>", "<code>PATH</code>", "<code>__OLD_PATH=$PATH\nfunction updatePATHForNPM() {\n  export PATH=$(npm bin):$__OLD_PATH\n}\n\nfunction node-mode() {\n  PROMPT_COMMAND=updatePATHForNPM\n}\n\nfunction node-mode-off() {\n  unset PROMPT_COMMAND\n  PATH=$__OLD_PATH\n}\n\n# Uncomment to enable node-mode by default:\n# node-mode\n</code>", "<code>node-mode</code>", "<code>node-mode-off</code>", "<code>npm-exec.bat</code>", "<code>%PATH%</code>", "<code>@echo off\nset cmd=\"npm bin\"\nFOR /F \"tokens=*\" %%i IN (' %cmd% ') DO SET modules=%%i\n\"%modules%\"\\%*\n</code>", "<code>npm-exec &lt;command&gt; &lt;arg0&gt; &lt;arg1&gt; ...</code>", "<code>wdio</code>", "<code>npm-exec wdio wdio.conf.js\n</code>", "<code>.\\node_modules\\.bin\\wdio wdio.conf.js</code>", "<code>$ cat .envrc\n&gt; export PATH=$(npm bin):$PATH\n</code>", "<code>.bashrc</code>", "<code>coffee</code>", "<code>DEFAULT_PATH=$PATH;\n\nadd_local_node_modules_to_path(){\n  NODE_MODULES='./node_modules/.bin';\n  if [ -d $NODE_MODULES ]; then\n    PATH=$DEFAULT_PATH:$NODE_MODULES;\n  else\n    PATH=$DEFAULT_PATH;\n  fi\n}\n\ncd () {\n  builtin cd \"$@\";\n  add_local_node_modules_to_path;\n}\n\nadd_local_node_modules_to_path;\n</code>", "<code>cd</code>", "<code>cd</code>", "<code>node_modules/.bin</code>", "<code>$PATH</code>", "<code>NODE_MODULES=$(npm bin);</code>", "<code>cd</code>", "<code>$(npm bin)</code>", "<code>./node_modules/.bin</code>", "<code>$(npm bin)</code>", "<code>cd</code>", "<code>if not contains (npm bin) $PATH\n    set PATH (npm bin) $PATH\nend\n</code>", "<code>/* cmd into \"node_modules\" folder */\n\"%CD%\\.bin\\grunt\" --version\n</code>", "<code>PATH=$(npm bin):$PATH</code>", "<code>$ npm install -g zxc\n$ npm install gulp\n$ zxc which gulp\n/home/nathan/code/project1/node_modules/.bin/gulp\n</code>", "<code>npm bin</code>", "<code>npm bin</code>", "<code>package.json</code>", "<code>zsh</code>", "<code>find-up () {\n  path=$(pwd)\n  while [[ \"$path\" != \"\" &amp;&amp; ! -e \"$path/$1\" ]]; do\n    path=${path%/*}\n  done\n  echo \"$path\"\n}\n\nprecmd() {\n  if [ \"$(find-up package.json)\" != \"\" ]; then\n    new_bin=$(npm bin)\n    if [ \"$NODE_MODULES_PATH\" != \"$new_bin\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\n      export NODE_MODULES_PATH=$new_bin\n    fi\n  else\n    if [ \"$NODE_MODULES_PATH\" != \"\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}\n      export NODE_MODULES_PATH=\"\"\n    fi\n  fi\n}\n</code>", "<code>bash</code>", "<code>precmd</code>", "<code>$PROMPT_COMMAND</code>", "<code>__add-node-to-path() {\n  if [ \"$(find-up package.json)\" != \"\" ]; then\n    new_bin=$(npm bin)\n    if [ \"$NODE_MODULES_PATH\" != \"$new_bin\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\n      export NODE_MODULES_PATH=$new_bin\n    fi\n  else\n    if [ \"$NODE_MODULES_PATH\" != \"\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}\n      export NODE_MODULES_PATH=\"\"\n    fi\n  fi   \n}\n\nexport PROMPT_COMMAND=\"__add-node-to-path\"\n</code>", "<code>npm bin</code>", "<code>$PATH</code>", "<code>Windows</code>", "<code>// First set some variable - i.e. replace is with \"xo\"\nD:\\project\\root&gt; set xo=\"./node_modules/.bin/\"\n\n// Next, work with it\nD:\\project\\root&gt; %xo%/bower install\n</code>", "<code>fish shell</code>", "<code>$path</code>", "<code>### run executables in node_module/.bin directory\nfunction n \n  set -l npmbin (npm bin)   \n  set -l argvCount (count $argv)\n  switch $argvCount\n    case 0\n      echo please specify the local node executable as 1st argument\n    case 1\n      # for one argument, we can eval directly \n      eval $npmbin/$argv\n    case '*'\n      set --local executable $argv[1]\n      # for 2 or more arguments we cannot append directly after the $npmbin/ since the fish will apply each array element after the the start string: $npmbin/arg1 $npmbin/arg2... \n      # This is just how fish interoperate array. \n      set --erase argv[1]\n      eval $npmbin/$executable $argv \n  end\nend\n</code>", "<code>n coffee</code>", "<code>n browser-sync --version</code>", "<code>bash</code>", "<code>$@</code>", "<code>fishshell</code>", "<code>#!/bin/sh\n\n# Add your local node_modules bin to the path\nexport PATH=\"$(npm bin):$PATH\"\n\n# execute the rest of the command\nexec \"$@\"\n</code>", "<code>/bin</code>", "<code>./setenv.sh &lt;command&gt;\n./setenv.sh 6to5-node server.js\n./setenv.sh grunt\n</code>", "<code>scripts</code>", "<code>...,\nscripts: {\n    'start': './setenv.sh &lt;command&gt;'\n}\n</code>", "<code>\"dependencies\":{\n  \"coffee-script\": \"&gt;= 1.2.0\"\n</code>", "<code>npm install svgo</code>", "<code>npm install</code>", "<code>grunt-cli</code>", "<code>grunt</code>", "<code>grunt</code>"], "path": "stack.gulp"}, {"tags": ["requirejs", "gulp", "minify", "uglifyjs"], "creation_date": 1398849638, "body_markdown": "I have a gulp rjs task that concatenates and uglifies all my custom .JS files (any non vendor libraries).\r\n\r\nWhat i am trying to do, is exclude some files/directories from this task (controllers and directives).\r\n\r\n**Heres my tree:**\r\n\r\n     - application\r\n        - resources\r\n          - js\r\n            main.js\r\n            - vendor\r\n                - jquery\r\n                - modernzr\r\n                - angular\r\n            - controllers\r\n                - controller1\r\n                - controller2\r\n                - controller3\r\n            - directives\r\n                - directives1\r\n                - directives2\r\n                - directives3\r\n            - widgets\r\n                - widget1\r\n                - widget2\r\n                - widget3\r\n                - widget4\r\n            - modules\r\n                - modules1\r\n                - modules2\r\n                - modules3\r\n                - modules4\r\n\r\n\r\n**Here my gulp.js**\r\n\r\n    dir = {\r\n    \tapp: \t\t&#39;application&#39;,\r\n    \tdest: \t\t&#39;dest&#39;,\r\n    };\r\n\r\n    config = {\r\n    \tsrc: {\r\n    \t\tjs: dir.app + &#39;/resources/js&#39;\r\n    \t},\r\n    \tdest: {\r\n    \t\tjs: dir.dest + &#39;/resources/js&#39;\r\n    \t}\r\n    };\r\n\r\n    gulp.task(&#39;rjs&#39;, function() {\r\n    \r\n    \t  rjs({\r\n    \t\t\tbaseUrl: config.src.js,\r\n    \t\t\tout: &#39;main.js&#39;,\r\n    \t\t\tname: &#39;main&#39;,\r\n    \t\t\tmainConfigFile: config.src.js + &#39;/main.js&#39;,\r\n    \t\t\texclude: [ &#39;jquery&#39;, &#39;angular&#39;]\t\t\t\r\n    \t\t})\r\n    \t\t.pipe(prod ? uglify({ mangle: false, outSourceMap: true, compress: { drop_console: true } }) : gutil.noop())\r\n    \t\t.pipe(gulp.dest(config.dest.js))\r\n    \t\t.pipe(filesize())\r\n    \t\t.pipe(dev ? connect.reload() : gutil.noop());\r\n    \r\n    });", "last_edit_date": 1457442193, "up_vote_count": 186, "link": "https://stackoverflow.com/questions/23384239/excluding-files-directories-from-gulp-task", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1404894081, "answer_id": 24648667, "path": "stack.gulp.answer", "score": 418, "up_vote_count": 418, "is_accepted": true, "last_activity_date": 1424639884, "last_edit_date": 1424639884, "body_markdown": "**Quick answer**\r\n\r\nOn src, you can always specify files to ignore using &quot;!&quot;.\r\n\r\nExample (you want to exclude all *.min.js files on your js folder and subfolder:\r\n\r\n    gulp.src([&#39;js/**/*.js&#39;, &#39;!js/**/*.min.js&#39;])\r\n    \r\nYou can do it as well for individual files.\r\n\r\n**Expanded answer:**\r\n\r\n[Extracted from gulp documentation:][1] \r\n\r\n&gt; gulp.src(globs[, options])\r\n\r\n&gt; Emits files matching provided glob or an array of globs. Returns a stream of Vinyl files that can be piped to plugins.\r\n\r\nglob refers to **node-glob syntax** or it can be a direct file path.\r\n\r\nSo, looking to [node-glob documentation][2] we can see that it uses the minimatch library to do its matching.\r\n\r\nOn [minimatch documentation][3], they point out the following:\r\n\r\n&gt; if the pattern starts with a ! character, then it is negated.\r\n\r\nAnd that is why **using ! symbol will exclude files / directories from a gulp task**\r\n\r\n\r\n  [1]: https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpsrcglobs-options\r\n  [2]: https://github.com/isaacs/node-glob#glob\r\n  [3]: https://github.com/isaacs/minimatch#comparisons-to-other-fnmatchglob-implementations"}], "title": "Excluding files/directories from Gulp task", "view_count": 105710, "answer_count": 1, "code_snippet": ["<code> - application\n    - resources\n      - js\n        main.js\n        - vendor\n            - jquery\n            - modernzr\n            - angular\n        - controllers\n            - controller1\n            - controller2\n            - controller3\n        - directives\n            - directives1\n            - directives2\n            - directives3\n        - widgets\n            - widget1\n            - widget2\n            - widget3\n            - widget4\n        - modules\n            - modules1\n            - modules2\n            - modules3\n            - modules4\n</code>", "<code>dir = {\n    app:        'application',\n    dest:       'dest',\n};\n\nconfig = {\n    src: {\n        js: dir.app + '/resources/js'\n    },\n    dest: {\n        js: dir.dest + '/resources/js'\n    }\n};\n\ngulp.task('rjs', function() {\n\n      rjs({\n            baseUrl: config.src.js,\n            out: 'main.js',\n            name: 'main',\n            mainConfigFile: config.src.js + '/main.js',\n            exclude: [ 'jquery', 'angular']         \n        })\n        .pipe(prod ? uglify({ mangle: false, outSourceMap: true, compress: { drop_console: true } }) : gutil.noop())\n        .pipe(gulp.dest(config.dest.js))\n        .pipe(filesize())\n        .pipe(dev ? connect.reload() : gutil.noop());\n\n});\n</code>", "<code>gulp.src(['./*.js', '!./node_modules/**'])</code>", "<code>gulp.src(['js/**/*.js', '!js/**/*.min.js'])\n</code>", "<code>Negation  The intent for negation would be for a pattern starting with ! to match everything that doesn't match the supplied pattern. However, the implementation is weird, and for the time being, this should be avoided. The behavior is deprecated in version 5, and will be removed entirely in version 6.</code>", "<code>gulp.src([/*file globs*/], {base:\".\"})</code>"], "path": "stack.gulp"}, {"tags": ["comments", "npm"], "creation_date": 1357669439, "body_markdown": "I&#39;ve got a simple package.json file and I want to add a comment. Is there a way to do this, or are there any hacks to make this work?\r\n\r\n    {\r\n      &quot;name&quot;: &quot;My Project&quot;,\r\n      &quot;version&quot;: &quot;0.0.1&quot;,\r\n      &quot;private&quot;: true,\r\n      &quot;dependencies&quot;: {\r\n        &quot;express&quot;: &quot;3.x&quot;,\r\n        &quot;mongoose&quot;: &quot;3.x&quot;\r\n      },\r\n      &quot;devDependencies&quot; :  {\r\n        &quot;should&quot;: &quot;*&quot;\r\n        /* &quot;mocha&quot;: &quot;*&quot; not needed as should be globally installed */\r\n      }\r\n    }\r\n\r\nThe example comment above doesn&#39;t work as npm breaks. I&#39;ve also tried // style comments.\r\n\r\n\r\n", "last_edit_date": 1380701048, "up_vote_count": 248, "link": "https://stackoverflow.com/questions/14221579/how-do-i-add-comments-to-package-json-for-npm-install", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1357670203, "answer_id": 14221781, "path": "stack.gulp.answer", "score": 316, "up_vote_count": 319, "is_accepted": true, "last_activity_date": 1446553053, "last_edit_date": 1446553053, "body_markdown": "This has recently been discussed in the [node.js mailing list][1].\r\n\r\nAccording to Isaac Schlueter who created npm:\r\n\r\n&gt; ... the &quot;//&quot; key will never be used by npm for any purpose, and is reserved for comments ... If you want to use a multiple line comment, you can use either an \r\narray, or multiple &quot;//&quot; keys.\r\n\r\n    { &quot;//&quot;: &quot;this is the first line of a comment&quot;, \r\n      &quot;//&quot;: &quot;this is the second line of the comment&quot; } \r\n    \r\n    { &quot;//&quot;: [ \r\n      &quot;first line&quot;, \r\n      &quot;second line&quot; ] } \r\n\r\n\r\n  [1]: https://groups.google.com/d/msg/nodejs/NmL7jdeuw0M/yTqI05DRQrIJ"}, {"tags": [], "down_vote_count": 3, "creation_date": 1375654713, "answer_id": 18048155, "path": "stack.gulp.answer", "score": 82, "up_vote_count": 85, "is_accepted": false, "last_activity_date": 1498681971, "last_edit_date": 1498681971, "body_markdown": "Here is another hack for adding comments in JSON.  Since:\r\n\r\n    {&quot;a&quot;: 1, &quot;a&quot;: 2}\r\n\r\nIs equivalent to \r\n  \r\n    {&quot;a&quot;: 2}\r\n\r\nYou can do something like:\r\n\r\n    {\r\n      &quot;devDependencies&quot;: &quot;&#39;mocha&#39; not needed as should be globally installed&quot;,\r\n      &quot;devDependencies&quot; :  {\r\n        &quot;should&quot;: &quot;*&quot;\r\n      }\r\n    }\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1400697177, "answer_id": 23791175, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1401134952, "last_edit_date": 1495535496, "body_markdown": "You can always abuse the fact that duplicated keys are overwritten. This is what I just wrote:\r\n\r\n    &quot;dependencies&quot;: {\r\n      &quot;grunt&quot;: &quot;...&quot;,\r\n      &quot;grunt-cli&quot;: &quot;...&quot;,\r\n\r\n      &quot;api-easy&quot;: &quot;# Here is the pull request: https://github.com/...&quot;,\r\n      &quot;api-easy&quot;: &quot;git://...&quot;\r\n\r\n      &quot;grunt-vows&quot;: &quot;...&quot;,\r\n      &quot;vows&quot;: &quot;...&quot;\r\n    }\r\n\r\nHowever, it is not clear whether JSON allows duplicated keys (see\r\n[Does JSON syntax allow duplicate keys in an object?][1]. It seems to work with npm, so I take the risk.\r\n\r\nThe recommened hack is to use `&quot;//&quot;` keys (from the [nodejs mailing list][2]). When I tested it, it did not work with &quot;dependencies&quot; sections, though. Also, the example in the post uses multiple `&quot;//&quot;` keys, which implies that npm does not reject JSON files with duplicated keys. In other words, the hack above should always be fine.\r\n\r\n**Update:** One annoying disadvantage of the duplicated key hack is that `npm install --save` silently eliminates all duplicates. Unfortunately, it is very easy to overlook it and your well-intentioned comments are gone.\r\n\r\nThe `&quot;//&quot;` hack is still the safest as it seems. However, multi-line comments will be removed by `npm install --save`, too.\r\n\r\n  [1]: https://stackoverflow.com/q/21832701/783510\r\n  [2]: https://groups.google.com/forum/#!msg/nodejs/NmL7jdeuw0M/yTqI05DRQrIJ"}, {"tags": [], "down_vote_count": 0, "creation_date": 1423301243, "answer_id": 28380502, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1428857588, "last_edit_date": 1428857588, "body_markdown": "Here&#39;s my take on comments within `package.json` / `bower.json`:\r\n\r\nI have `package.json.js` that contains a script that exports the actual `package.json`. Running the script overwrites the old `package.json` and tells me what changes it made, perfect to help you keep track of automatic changes `npm` made. That way I can even programatically define what packages I want to use. \r\n\r\nThe latest grunt task is here:\r\nhttps://gist.github.com/MarZab/72fa6b85bc9e71de5991\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1463134075, "answer_id": 37207193, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1463134390, "last_edit_date": 1463134390, "body_markdown": "I have a funny hack idea.\r\n\r\nCreate npm package name suitably as comment divider for `dependencies` and `devDependencies` block in package.json, for example `x----x----x`\r\n\r\n\t{\r\n\t    &quot;name&quot;: &quot;app-name&quot;,\r\n\t    &quot;dependencies&quot;: {\r\n\t    \t&quot;x----x----x&quot;: &quot;this is the first line of a comment&quot;,\r\n\t        &quot;babel-cli&quot;: &quot;6.x.x&quot;,\r\n\t        &quot;babel-core&quot;: &quot;6.x.x&quot;,\r\n\t    \t&quot;x----x----x&quot;: &quot;this is the second line of a comment&quot;,\r\n\t        &quot;knex&quot;: &quot;^0.11.1&quot;,\r\n\t        &quot;mocha&quot;: &quot;1.20.1&quot;,\r\n\t    \t&quot;x----x----x&quot;: &quot;*&quot;\r\n\t    }\r\n\t}\r\n    \r\n**NOTE**: Must add last comment divider line with valid version like `*` in block."}, {"tags": [], "down_vote_count": 0, "creation_date": 1491282199, "answer_id": 43198652, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1501943184, "last_edit_date": 1501943184, "body_markdown": "So far, most &quot;hacks&quot; here suggest to abuse JSON. But instead, why not abuse the underlying scripting language?\r\n\r\n**Edit** The initial response was putting the description on the right using `# add comments here` to wrap it; however, this does not work on Windows, because flags (e.g. npm run myframework -- --myframework-flags) would be ignored. I changed my response to make it work on all platforms, and added some indents for readability purposes.\r\n\r\n    {\r\n     &quot;scripts&quot;: {\r\n        &quot;help&quot;: &quot;       echo &#39;Display help information (this screen)&#39;;          npm run&quot;,\r\n        &quot;myframework&quot;: &quot;echo &#39;Run myframework binary&#39;;                          myframework&quot;,\r\n        &quot;develop&quot;: &quot;    echo &#39;Run in development mode (with terminal output)&#39;;  npm run myframework&quot;\r\n        &quot;start&quot;: &quot;      echo &#39;Start myFramework as a daemon&#39;;                   myframework start&quot;,\r\n        &quot;stop&quot;:  &quot;      echo &#39;Stop the myFramework daemon&#39;;                     myframework stop&quot;\r\n        &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;\r\n      }\r\n    }\r\n\r\nThis will:\r\n\r\n  1. Not break JSON compliance (or at least its not a hack, and your IDE will not give you warnings for doing strange, dangerous stuff)\r\n  2. Works cross platform (tested on macOS and windows, assuming it would work just fine on Linux)\r\n  3. Does not get in the way of running `npm run myframework -- --help` \r\n  4. Will output meaningful info when running `npm run` (which is the actual command to run to get information about available scripts)\r\n  5. Presents a more explicit help command (in case some devs are not aware that npm run presents such output)\r\n  6. Will show both the commands AND its description when running the command itself\r\n  7. Is somewhat readable when just opening `package.json` (using `less` or your favorite IDE)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1500035072, "answer_id": 45102957, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1500035072, "body_markdown": "NPS (Node Package Scripts) solved this problem for me. Lets you put your NPM scripts into a separate JS file, where you can add comments galore and any other JS logic you need to.\r\nhttps://www.npmjs.com/package/nps\r\n\r\nSample of the `package-scripts.js` from one of my projects\r\n\r\n    module.exports = {\r\n      scripts: {\r\n        // makes sure e2e webdrivers are up to date\r\n        postinstall: &#39;nps webdriver-update&#39;,\r\n    \r\n        // run the webpack dev server and open it in browser on port 7000\r\n        server: &#39;webpack-dev-server --inline --progress --port 7000 --open&#39;,\r\n\r\n        // start webpack dev server with full reload on each change\r\n        default: &#39;nps server&#39;,\r\n\r\n        // start webpack dev server with hot module replacement\r\n        hmr: &#39;nps server -- --hot&#39;,\r\n    \r\n        // generates icon font via a gulp task\r\n        iconFont: &#39;gulp default --gulpfile src/deps/build-scripts/gulp-icon-font.js&#39;,\r\n    \r\n        // No longer used\r\n        // copyFonts: &#39;copyfiles -f src/app/glb/font/webfonts/**/* dist/1-0-0/font&#39;\r\n      }\r\n    }\r\n\r\nI just did a local install `npm install nps -save-dev` and put this in my `package.json` scripts.\r\n\r\n    &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;nps&quot;,\r\n        &quot;test&quot;: &quot;nps test&quot;\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1503398326, "answer_id": 45815391, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1503401809, "last_edit_date": 1503401809, "body_markdown": "After wasting an hour on complex and hacky solutions I&#39;ve found myself a pretty simple, elegant and valid solution for commenting my bulky dependencies section in `package.json`. Just like this:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;package name&quot;,\r\n      &quot;version&quot;: &quot;1.0&quot;,\r\n      &quot;description&quot;: &quot;package description&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;npm install &amp;&amp; node server.js&quot;\r\n      },\r\n      &quot;scriptsComments&quot;: {\r\n        &quot;start&quot;: &quot;Runs development build on a local server configured by server.js&quot;\r\n      },\r\n      &quot;dependencies&quot;: {\r\n        &quot;ajv&quot;: &quot;^5.2.2&quot;\r\n      },\r\n      &quot;dependenciesComments&quot;: {\r\n        &quot;ajv&quot;: &quot;JSON-Schema Validator for validation of API data&quot;\r\n      }\r\n    }\r\n\r\nWhen sorted the same way, it&#39;s now very easy for me to track these pairs of dependencies/comments either in git commit diffs or in editor while working with `package.json`.\r\n\r\nAnd no extra tools involved, just plain and valid JSON.\r\n\r\nHope this helps anyone."}], "title": "How do I add comments to package.json for npm install?", "view_count": 61632, "answer_count": 8, "code_snippet": ["<code>{\n  \"name\": \"My Project\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"express\": \"3.x\",\n    \"mongoose\": \"3.x\"\n  },\n  \"devDependencies\" :  {\n    \"should\": \"*\"\n    /* \"mocha\": \"*\" not needed as should be globally installed */\n  }\n}\n</code>", "<code>package.json</code>", "<code>package.json</code>", "<code>package.json</code>", "<code>{ \"//\": \"this is the first line of a comment\", \n  \"//\": \"this is the second line of the comment\" } \n\n{ \"//\": [ \n  \"first line\", \n  \"second line\" ] } \n</code>", "<code>{ \"//\": \"first\",  \"//\": \"second\"}</code>", "<code>npm version</code>", "<code>package.json</code>", "<code>{ \"dependencies\": { \"//\": \"comment?\" }}</code>", "<code>{ \"//\": \"comment!\", \"dependencies\":{}}</code>", "<code>\"//\"</code>", "<code>{\"a\": 1, \"a\": 2}\n</code>", "<code>{\"a\": 2}\n</code>", "<code>{\n  \"devDependencies\": \"'mocha' not needed as should be globally installed\",\n  \"devDependencies\" :  {\n    \"should\": \"*\"\n  }\n}\n</code>", "<code>\"express\": \"makes routing better so I don't want to gouge my eyes out\", \"express\": \"3.x\"</code>", "<code>package.json</code>", "<code>npm version 1.2.3</code>", "<code>package.json</code>", "<code>{\n  \"name\": \"package name\",\n  \"version\": \"1.0\",\n  \"description\": \"package description\",\n  \"scripts\": {\n    \"start\": \"npm install &amp;&amp; node server.js\"\n  },\n  \"scriptsComments\": {\n    \"start\": \"Runs development build on a local server configured by server.js\"\n  },\n  \"dependencies\": {\n    \"ajv\": \"^5.2.2\"\n  },\n  \"dependenciesComments\": {\n    \"ajv\": \"JSON-Schema Validator for validation of API data\"\n  }\n}\n</code>", "<code>package.json</code>", "<code>\"dependencies\": {\n  \"grunt\": \"...\",\n  \"grunt-cli\": \"...\",\n\n  \"api-easy\": \"# Here is the pull request: https://github.com/...\",\n  \"api-easy\": \"git://...\"\n\n  \"grunt-vows\": \"...\",\n  \"vows\": \"...\"\n}\n</code>", "<code>\"//\"</code>", "<code>\"//\"</code>", "<code>npm install --save</code>", "<code>\"//\"</code>", "<code>npm install --save</code>", "<code>\"//\"</code>", "<code>mocha</code>", "<code>dependencies</code>", "<code>devDependencies</code>", "<code>x----x----x</code>", "<code>{\n    \"name\": \"app-name\",\n    \"dependencies\": {\n        \"x----x----x\": \"this is the first line of a comment\",\n        \"babel-cli\": \"6.x.x\",\n        \"babel-core\": \"6.x.x\",\n        \"x----x----x\": \"this is the second line of a comment\",\n        \"knex\": \"^0.11.1\",\n        \"mocha\": \"1.20.1\",\n        \"x----x----x\": \"*\"\n    }\n}\n</code>", "<code>*</code>", "<code>npm install</code>", "<code>package.json</code>", "<code>bower.json</code>", "<code>package.json.js</code>", "<code>package.json</code>", "<code>package.json</code>", "<code>npm</code>", "<code>npm install --save</code>", "<code>--save-dev</code>", "<code>package-scripts.js</code>", "<code>module.exports = {\n  scripts: {\n    // makes sure e2e webdrivers are up to date\n    postinstall: 'nps webdriver-update',\n\n    // run the webpack dev server and open it in browser on port 7000\n    server: 'webpack-dev-server --inline --progress --port 7000 --open',\n\n    // start webpack dev server with full reload on each change\n    default: 'nps server',\n\n    // start webpack dev server with hot module replacement\n    hmr: 'nps server -- --hot',\n\n    // generates icon font via a gulp task\n    iconFont: 'gulp default --gulpfile src/deps/build-scripts/gulp-icon-font.js',\n\n    // No longer used\n    // copyFonts: 'copyfiles -f src/app/glb/font/webfonts/**/* dist/1-0-0/font'\n  }\n}\n</code>", "<code>npm install nps -save-dev</code>", "<code>package.json</code>", "<code>\"scripts\": {\n    \"start\": \"nps\",\n    \"test\": \"nps test\"\n}\n</code>", "<code># add comments here</code>", "<code>{\n \"scripts\": {\n    \"help\": \"       echo 'Display help information (this screen)';          npm run\",\n    \"myframework\": \"echo 'Run myframework binary';                          myframework\",\n    \"develop\": \"    echo 'Run in development mode (with terminal output)';  npm run myframework\"\n    \"start\": \"      echo 'Start myFramework as a daemon';                   myframework start\",\n    \"stop\":  \"      echo 'Stop the myFramework daemon';                     myframework stop\"\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n  }\n}\n</code>", "<code>npm run myframework -- --help</code>", "<code>npm run</code>", "<code>package.json</code>", "<code>less</code>", "<code>\"//\":\"\"</code>", "<code>&amp;&amp;</code>", "<code>;</code>", "<code>\"help\": \"echo 'Display help information (this screen)' &amp;&amp;  npm run\",</code>", "<code>scripts</code>", "<code>package.json</code>"], "path": "stack.gulp"}, {"tags": ["html", "css", "twitter-bootstrap", "twitter-bootstrap-3"], "creation_date": 1375261738, "body_markdown": "I have been using the twitter bootstrap framework for quite a while now and they recently updated to version 3!\r\n\r\nI&#39;m having trouble getting the sticky footer to stick to the bottom, I have used the starter template supplied by the twitter bootstrap website, but still no luck, any ideas?\r\n", "last_edit_date": 1480632655, "up_vote_count": 188, "link": "https://stackoverflow.com/questions/17966140/twitter-bootstrap-3-sticky-footer", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1375263960, "answer_id": 17967000, "path": "stack.gulp.answer", "score": 34, "up_vote_count": 36, "is_accepted": false, "last_activity_date": 1391788582, "last_edit_date": 1391788582, "body_markdown": "In addition to the CSS you just added, remember you need to add the **push div** before closing the wrap div    \r\n  \r\nThe basic structure for the HTML is  \r\n\r\n    &lt;div id=&quot;wrap&quot;&gt; \r\n        page content here \r\n        &lt;div id=&quot;push&quot;&gt;&lt;/div&gt;\r\n    &lt;/div&gt; &lt;!-- end wrap --&gt;\r\n\r\n    &lt;div id=&quot;footer&quot;&gt;\r\n        footer content here\r\n    &lt;/div&gt; &lt;!-- end footer --&gt;\r\n     \r\n\r\n  \r\n[Live view][1]  \r\n[Edit view][2]\r\n\r\n\r\n  [1]: http://www.bootply.com/render/70755\r\n  [2]: http://www.bootply.com/panchroma/70755"}, {"tags": [], "down_vote_count": 1, "creation_date": 1383000528, "answer_id": 19646499, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1459458022, "last_edit_date": 1459458022, "body_markdown": "The push `div` should go right after the `wrap`, NOT within.. just like this    \r\n\r\n    &lt;div id=&quot;wrap&quot;&gt;\r\n      *content goes here*\r\n    &lt;/div&gt;\r\n    \r\n    &lt;div id=&quot;push&quot;&gt;\r\n    &lt;/div&gt;\r\n    \r\n    &lt;div id=&quot;footer&quot;&gt;\r\n      &lt;div class=&quot;container credit&quot;&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class=&quot;container&quot;&gt;\r\n        &lt;p class=&quot;muted credit&quot;&gt;&#169; Your Page 2013&lt;/p&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1387199290, "answer_id": 20611729, "path": "stack.gulp.answer", "score": 147, "up_vote_count": 148, "is_accepted": false, "last_activity_date": 1387199290, "body_markdown": "Referring to the official Boostrap3 sticky footer example, \r\nthere is no need to add `&lt;div id=&quot;push&quot;&gt;&lt;/div&gt;`, and the CSS is simpler.\r\n\r\nThe CSS used in the official exmaple is :\r\n\r\n    /* Sticky footer styles\r\n    -------------------------------------------------- */\r\n    \r\n    html,\r\n    body {\r\n      height: 100%;\r\n      /* The html and body elements cannot have any padding or margin. */\r\n    }\r\n    \r\n    /* Wrapper for page content to push down footer */\r\n    #wrap {\r\n      min-height: 100%;\r\n      height: auto;\r\n      /* Negative indent footer by its height */\r\n      margin: 0 auto -60px;\r\n      /* Pad bottom by footer height */\r\n      padding: 0 0 60px;\r\n    }\r\n    \r\n    /* Set the fixed height of the footer here */\r\n    #footer {\r\n      height: 60px;\r\n      background-color: #f5f5f5;\r\n    }\r\n\r\nand the essential HTML :\r\n\r\n    &lt;body&gt;\r\n    \r\n        &lt;!-- Wrap all page content here --&gt;\r\n        &lt;div id=&quot;wrap&quot;&gt;\r\n    \r\n          &lt;!-- Begin page content --&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n            \r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    \r\n        &lt;div id=&quot;footer&quot;&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n           \r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/body&gt;\r\n\r\n\r\nYou can find the link for this css in the [sticky-footer exmaple][1]&#39;s source code.\r\n\r\n    &lt;!-- Custom styles for this template --&gt;\r\n    &lt;link href=&quot;sticky-footer.css&quot; rel=&quot;stylesheet&quot;&gt;\r\n\r\nFull URL :\r\n[http://getbootstrap.com/examples/sticky-footer/sticky-footer.css][2]\r\n\r\n\r\n  [1]: http://getbootstrap.com/examples/sticky-footer/\r\n  [2]: http://getbootstrap.com/examples/sticky-footer/sticky-footer.css"}, {"tags": [], "down_vote_count": 12, "creation_date": 1391692856, "answer_id": 21604189, "path": "stack.gulp.answer", "score": 180, "up_vote_count": 192, "is_accepted": false, "last_activity_date": 1391692856, "body_markdown": "just add the class navbar-fixed-bottom to your footer.\r\n\r\n    &lt;div class=&quot;footer navbar-fixed-bottom&quot;&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1396991933, "answer_id": 22948396, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1396991933, "body_markdown": "Here&#39;s the [Sticky Footer simplified code][1] as of today because they&#39;re always optimizing it and this is GOOD:\r\n\r\n**HTML**\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html lang=&quot;en&quot;&gt;\r\n      &lt;head&gt;&lt;/head&gt;\r\n    \r\n      &lt;body&gt;\r\n    \r\n        &lt;!-- Fixed navbar --&gt;\r\n        &lt;div class=&quot;navbar navbar-default navbar-fixed-top&quot; role=&quot;navigation&quot;&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n            &lt;div class=&quot;navbar-header&quot;&gt;\r\n              &lt;button type=&quot;button&quot; class=&quot;navbar-toggle&quot; data-toggle=&quot;collapse&quot; data-target=&quot;.navbar-collapse&quot;&gt;\r\n                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;\r\n                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\r\n                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\r\n                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\r\n              &lt;/button&gt;\r\n              &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Project name&lt;/a&gt;\r\n            &lt;/div&gt;\r\n            &lt;div class=&quot;collapse navbar-collapse&quot;&gt;\r\n              &lt;ul class=&quot;nav navbar-nav&quot;&gt;\r\n                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li class=&quot;dropdown&quot;&gt;\r\n                  &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Dropdown &lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;\r\n                  &lt;ul class=&quot;dropdown-menu&quot;&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;\r\n                    &lt;li class=&quot;dropdown-header&quot;&gt;Nav header&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;\r\n                  &lt;/ul&gt;\r\n                &lt;/li&gt;\r\n              &lt;/ul&gt;\r\n            &lt;/div&gt;&lt;!--/.nav-collapse --&gt;\r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    \r\n        &lt;!-- Begin page content --&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n          &lt;div class=&quot;page-header&quot;&gt;\r\n            &lt;h1&gt;Sticky footer with fixed navbar&lt;/h1&gt;\r\n          &lt;/div&gt;\r\n          &lt;p class=&quot;lead&quot;&gt;Pin a fixed-height footer to the bottom of the viewport in desktop browsers with this custom HTML and CSS. A fixed navbar has been added with &lt;code&gt;padding-top: 60px;&lt;/code&gt; on the &lt;code&gt;body &gt; .container&lt;/code&gt;.&lt;/p&gt;\r\n          &lt;p&gt;Back to &lt;a href=&quot;../sticky-footer&quot;&gt;the default sticky footer&lt;/a&gt; minus the navbar.&lt;/p&gt;\r\n        &lt;/div&gt;\r\n    \r\n        &lt;footer&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n            &lt;p class=&quot;text-muted&quot;&gt;Place sticky footer content here.&lt;/p&gt;\r\n          &lt;/div&gt;\r\n        &lt;/footer&gt;\r\n    \r\n      &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n**CSS**\r\n\r\n    /* Sticky footer styles\r\n    -------------------------------------------------- */\r\n    html {\r\n      position: relative;\r\n      min-height: 100%;\r\n    }\r\n    body {\r\n      /* Margin bottom by footer height */\r\n      margin-bottom: 60px;\r\n    }\r\n    footer {\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      /* Set the fixed height of the footer here */\r\n      height: 60px;\r\n      background-color: #f5f5f5;\r\n    }\r\n\r\n\r\n  [1]: http://getbootstrap.com/examples/sticky-footer-navbar/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1397468450, "answer_id": 23056782, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1397468450, "body_markdown": "in Haml &amp; Sass words all that is necessary:\r\n\r\nHaml for `app/view/layouts/application.html.haml`\r\n\r\n    %html\r\n      %head\r\n      %body\r\n        Some  body stuff\r\n    \r\n        %footer\r\n          footer content\r\n\r\nSass for `app/assets/stylesheets/application.css.sass`\r\n\r\n    $footer-height: 110px\r\n    \r\n    html\r\n      position: relative\r\n      min-height: 100%\r\n    \r\n    body\r\n      margin-bottom: $footer-height\r\n    \r\n    body &gt; footer\r\n      position: absolute\r\n      bottom: 0\r\n      width: 100%\r\n      height: $footer-height\r\n\r\n\r\nbased on http://getbootstrap.com/examples/sticky-footer-navbar/\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1398956577, "answer_id": 23410380, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1398956577, "body_markdown": "I&#39;m a bit late on the subject but I came across this post as I&#39;ve just been bitten by that question and finally found a really easy way to get over it, simply use a `navbar` with the `navbar-fixed-bottom` class enabled. For example:\r\n\r\n    &lt;div class=&quot;navbar navbar-default navbar-fixed-bottom&quot;&gt;\r\n      &lt;div class=&quot;container&quot;&gt;\r\n        &lt;span class=&quot;navbar-text&quot;&gt;\r\n          Something useful\r\n        &lt;/span&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\nHTH\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1399540436, "answer_id": 23537529, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1399540436, "body_markdown": "The sticky example doesn not work for me.\r\nMy solution:\r\n\r\n    #footer {\r\n      position: fixed;\r\n      bottom: 0;\r\n      width: 100%;\r\n      /* Set the fixed height of the footer here */\r\n      height: 3em;\r\n      background-color: #f5f5f5;\r\n      text-align: center;\r\n      padding-top: 1em;\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1407467578, "answer_id": 25195540, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1504706045, "last_edit_date": 1504706045, "body_markdown": "Here is my updated solution to this issue. \r\n\r\n       \r\n    \r\n     /* Sticky footer styles\r\n    -------------------------------------------------- */\r\n    html {\r\n      position: relative;\r\n      min-height: 100%;\r\n    }\r\n\r\n\r\n    body {\r\n      /* Margin bottom by footer height */\r\n      margin-bottom: 60px;\r\n    }\r\n    .footer {\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      /* Set the fixed height of the footer here */\r\n      height: 60px;\r\n      background-color: #f5f5f5;\r\n    \r\n      border-top: 1px solid #eee;\r\n      text-align: center;\r\n    }\r\n    \r\n    .site-footer-links {\r\n      font-size: 12px;\r\n      line-height: 1.5;\r\n      color: #777;\r\n      padding-top: 20px;\r\n      display: block;\r\n      text-align: center;\r\n      float: center;\r\n      margin: 0;\r\n      list-style: none;\r\n    } \r\n\r\nAnd use it like this: \r\n\r\n    &lt;div class=&quot;footer&quot;&gt;\r\n     &lt;div class=&quot;site-footer&quot;&gt;\r\n      &lt;ul class=&quot;site-footer-links&quot;&gt;\r\n            &lt;li&gt;&#169; Zee and Company&lt;span&gt;&lt;/span&gt;&lt;/li&gt;\r\n      &lt;/ul&gt;\r\n     &lt;/div&gt;\r\n    \r\n    &lt;/div&gt;\r\n\r\n\r\nOr \r\n\r\n\r\n\r\n    html, body {\r\n      height: 100%;\r\n    }\r\n    .page-wrap {\r\n      min-height: 100%;\r\n      /* equal to footer height */\r\n      margin-bottom: -142px; \r\n    }\r\n    .page-wrap:after {\r\n      content: &quot;&quot;;\r\n      display: block;\r\n    }\r\n    .site-footer, .page-wrap:after {\r\n      height: 142px; \r\n    }\r\n    .site-footer {\r\n      background: orange;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1415185949, "answer_id": 26755782, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1415185949, "body_markdown": "To Summarize all of these, just keep one thing in your mind that everything except footer should have `min-height: 100%` or little less."}, {"tags": [], "down_vote_count": 0, "creation_date": 1415635505, "answer_id": 26847877, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1415635505, "body_markdown": "If yout want to use bootstrap build in classes for the footer. You should also write some javascript:\r\n\r\n    $(document).ready(function(){\r\n      $.fn.resize_footer();\r\n    \r\n      $(window).resize(function() {\r\n        $.fn.resize_footer();\r\n      });\r\n     });\r\n    \r\n    (function($) {\r\n    \r\n      $.fn.resize_footer = function(){\r\n        $(&#39;body &gt; .container-fluid&#39;).css(&#39;padding-bottom&#39;, $(&#39;body &gt; footer&#39;).height());\r\n      };\r\n     });\r\n\r\nIt will prevent content overlapping by the fixed footer, and it will adjust the `padding-bottom` when the user changes the window/screen size.\r\n\r\nIn the script above I assumed that footer is placed directly inside the body tag like that:\r\n\r\n    &lt;body&gt;\r\n      ... content of your page ...\r\n      &lt;div class=&quot;navbar navbar-default navbar-fixed-bottom&quot;&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n          &lt;div class=&quot;muted pull-right&quot;&gt;\r\n            Something useful\r\n          &lt;/div&gt;\r\n          ... some other footer content ...\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/body&gt;\r\n\r\nThis is definitely not the best solution (because of the JS which could be avoided), but it works without any issues with overlapping, it is easy to implement and responsive (`height` is not hardcoded in CSS)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1420319844, "answer_id": 27759635, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1420319844, "body_markdown": "I write my simplified sticky footer code with padding using LESS. This answer is probably off-topic because the question doesn&#39;t talk about padding, so if you&#39;re interested check [this post][1] for more details.\r\n\r\n    @footer-padding:      40px;  // Set here the footer padding\r\n    @footer-inner-height: 150px; // Set here the footer height (without padding)\r\n    \r\n    /* Calculates the overall footer height */\r\n    @footer-height: @footer-inner-height + @footer-padding*2;\r\n    \r\n    html {\r\n     position: relative;\r\n     min-height: 100%;\r\n    }\r\n    body {\r\n     /* This avoids footer to overlap the page content */\r\n     margin-bottom: @footer-height;\r\n    }\r\n    footer{\r\n     /* Fix the footer on bottom and give it fixed height */\r\n     position: absolute;\r\n     bottom: 0;\r\n     width: 100%;\r\n     height: @footer-height;\r\n     padding: @footer-padding 0;\r\n    }\r\n\r\n\r\n  [1]: http://blog.netgloo.com/2015/01/03/sticky-footer-with-padding-using-less-and-bootstrap-3/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1422376880, "answer_id": 28175512, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1422376880, "body_markdown": "\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    #myfooter{\r\n    height: 3em;\r\n      background-color: #f5f5f5;\r\n      text-align: center;\r\n      padding-top: 1em;\r\n    }\r\n\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;footer&gt;\r\n        &lt;div class=&quot;footer&quot;&gt;\r\n            &lt;div class=&quot;container-fluid&quot;  id=&quot;myfooter&quot;&gt;\r\n                &lt;div class=&quot;row&quot;&gt;\r\n                    &lt;div class=&quot;col-md-12&quot;&gt;\r\n                        &lt;p class=&quot;copy&quot;&gt;Copyright &amp;copy; Your words&lt;/p&gt;\r\n                    &lt;/div&gt;\r\n                &lt;/div&gt;\r\n            &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/footer&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1424537971, "answer_id": 28648457, "path": "stack.gulp.answer", "score": 42, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1437070443, "last_edit_date": 1437070443, "body_markdown": "Here is a method that will add a sticky footer that doesn&#39;t require any additional CSS or Javascript other than what&#39;s already in Bootstrap and won&#39;t interfere with your current footer.\r\n\r\nExample here:  [Easy Sticky Footer][1]\r\n\r\n\r\n  [1]: http://bootsnipp.com/snippets/featured/easy-sticky-footer\r\n\r\n\r\nJust copy and paste this directly into your code.  No fuss no muss.\r\n\r\n\r\n    &lt;div class=&quot;navbar navbar-default navbar-fixed-bottom&quot;&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n          &lt;p class=&quot;navbar-text pull-left&quot;&gt;&#169; 2014 - Site Built By Mr. M.\r\n               &lt;a href=&quot;http://tinyurl.com/tbvalid&quot; target=&quot;_blank&quot; &gt;HTML 5 Validation&lt;/a&gt;\r\n          &lt;/p&gt;\r\n          \r\n          &lt;a href=&quot;http://youtu.be/zJahlKPCL9g&quot; class=&quot;navbar-btn btn-danger btn pull-right&quot;&gt;\r\n          &lt;span class=&quot;glyphicon glyphicon-star&quot;&gt;&lt;/span&gt;&#160; Subscribe on YouTube&lt;/a&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1445730532, "answer_id": 33324602, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1445730532, "body_markdown": "Here is a very simple and clean sticky footer you can use in bootstrap. Totally Responsive!\r\n\r\nHTML\r\n\r\n \r\n    &lt;body&gt;\r\n    &lt;nav class=&quot;navbar navbar-default&quot;&gt;\r\n      &lt;div class=&quot;container-fluid&quot;&gt;\r\n        &lt;div class=&quot;navbar-header&quot;&gt;\r\n          &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;\r\n            &lt;img alt=&quot;Brand&quot; src=&quot;&quot;&gt;\r\n          &lt;/a&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/nav&gt;\r\n        &lt;footer&gt;&lt;/footer&gt;\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\nCSS\r\n\r\n    html {\r\n        position: relative;\r\n        min-height: 100%;\r\n    }\r\n    body {\r\n        margin: 0 0 100px;\r\n    }\r\n    footer {\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n        height: 100px;\r\n        width: 100%;\r\n        background-color: red;\r\n    }\r\n\r\nExample: [CodePen Demo](http://codepen.io/Gothburz/pen/jbrZmK)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1450151716, "answer_id": 34280863, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1450151716, "body_markdown": "Simple js\r\n\r\n    if ($(document).height() &lt;= $(window).height()) {\r\n\t\t$(&quot;footer&quot;).addClass(&quot;navbar-fixed-bottom&quot;);\r\n\t}"}, {"tags": [], "down_vote_count": 0, "creation_date": 1461722516, "answer_id": 36879004, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1461722516, "last_edit_date": 1495540510, "body_markdown": "Based on [Jek-fdrv&#39;s answer][1], I added an `.on(&#39;resize&#39;, function()` to make sure it works on every device and every resolution:\r\n\r\n    $(window).on(&#39;resize&#39;, function() {\r\n        if ($(document).height() &lt;= $(window).height()) {\r\n            $(&#39;footer&#39;).addClass(&quot;navbar-fixed-bottom&quot;);\r\n        } else {\r\n            $(&#39;footer&#39;).removeClass(&quot;navbar-fixed-bottom&quot;);\r\n        }\r\n    });\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/34280863/494581"}, {"tags": [], "down_vote_count": 0, "creation_date": 1462963930, "answer_id": 37160462, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1462963930, "body_markdown": "Answered by the OP:\r\n\r\nAdd this to your CSS file.\r\n\r\n    html,\r\n    body {\r\n      height: 100%;\r\n      /* The html and body elements cannot have any padding or margin. */\r\n    }\r\n    /* Wrapper for page content to push down footer */\r\n    #wrap {\r\n      min-height: 100%;\r\n      height: auto !important;\r\n      height: 100%;\r\n      /* Negative indent footer by it&#39;s height */\r\n      margin: 0 auto -60px;\r\n    }\r\n    \r\n    /* Set the fixed height of the footer here */\r\n    #push,\r\n    #footer {\r\n      height: 60px;\r\n    }\r\n    #footer {\r\n      background-color: #eee;\r\n    }\r\n    \r\n    /* Lastly, apply responsive CSS fixes as necessary */\r\n    @media (max-width: 767px) {\r\n      #footer {\r\n        margin-left: -20px;\r\n        margin-right: -20px;\r\n        padding-left: 20px;\r\n        padding-right: 20px;\r\n      }\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1471934812, "answer_id": 39094130, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1493864142, "last_edit_date": 1493864142, "body_markdown": "You can simply try adding a class on your footer navbar:\r\n\r\n    navbar-fixed-bottom\r\n\r\nThen create a CSS named **custom.css** and **body** padding like this..\r\n\r\n    body { padding-bottom: 70px; }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1475459384, "answer_id": 39823553, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1475459945, "last_edit_date": 1475459945, "body_markdown": "I wanted a **flexible sticky footer**, which is why I came here. Top answers got me in the right direction.\r\n\r\nThe current (2 Oct 16) Bootstrap 3 css Sticky footer (Fixed size) looks like this:\r\n\r\n    html {\r\n      position: relative;\r\n      min-height: 100%;\r\n    }\r\n    body {\r\n      /* Margin bottom by footer height */\r\n      margin-bottom: 60px;\r\n    }\r\n    .footer {\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      /* Set the fixed height of the footer here */\r\n      height: 60px;\r\n      background-color: #f5f5f5;\r\n    }\r\n\r\nAs long as the footer has a fixed size, the body margin-bottom creates a push to allow a pocket for the footer to sit in. In this case, both are set to 60px. But if the footer is not fixed and exceeds 60px height, it will cover your page content.\r\n\r\nMake Flexible: Delete the css body margin and footer height. Then add JavaScript to get the footer height and set the body marginBottom. That is done with the setfooter() function. Next add event listeners for when the page first loads and on resizing that run the setfooter. Note: If you footer has an accordion or anything else that triggers a size change, without a resize of window, you must call the setfooter() function again.\r\n\r\nRun the snippet and then fullscreen to demo it.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function setfooter(){\r\n    \tvar ht = document.getElementById(&quot;footer&quot;).scrollHeight;\r\n    \tdocument.body.style.marginBottom = ht + &quot;px&quot;;\r\n    }\r\n\r\n    window.addEventListener(&#39;resize&#39;, function(){\r\n    \t\tsetfooter();\r\n    \t}, true);\r\n    window.addEventListener(&#39;load&#39;, function(){\r\n    \tsetfooter();\r\n    }, true);\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    html {\r\n      position: relative;\r\n      min-height: 100%;\r\n    }\r\n    .footer {\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      \r\n      /* additional style for effect only */\r\n       text-align: center;\r\n        background-color: #333;\r\n        color: #fff;\r\n    }\r\n      \r\n\r\n\r\n    body{\r\n    /* additional style for effect only not needed in bootstrap*/\r\n      padding:0;\r\n      margin: 0;\r\n      }\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;div&gt;\r\n      Page content\r\n      &lt;br&gt;  &lt;br&gt;\r\n      line 3\r\n      &lt;br&gt;  &lt;br&gt;\r\n      line 5\r\n      &lt;br&gt;  &lt;br&gt;\r\n      line 7\r\n      \r\n     &lt;/div&gt;\r\n\r\n\r\n    &lt;footer id=&quot;footer&quot; class=&quot;footer&quot;&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n            &lt;p class=&quot;text-muted&quot;&gt;Footer with a long text, so that resizing, to a smaller screen size, will cause the footer to grow taller. But the footer will not overflow onto the main page.&lt;/p&gt;\r\n          &lt;/div&gt;\r\n        &lt;/footer&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1480631176, "answer_id": 40921529, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1480631176, "body_markdown": "The current version of bootstrap doesn&#39;t seem to work for this function anymore. If you download their sticky-footer-navbar example and place a large amount of content in the main body area the footer will get pushed down past the bottom of the viewport. It isn&#39;t sticky at all."}, {"tags": [], "down_vote_count": 0, "creation_date": 1483131709, "answer_id": 41402667, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1483137828, "last_edit_date": 1483137828, "body_markdown": "Here is a CSS based solution for a fully responsive variable-height sticky footer.  \r\n&lt;strong&gt;Advantage:&lt;/strong&gt; footer allows variable height, as height no longer needs to be hard-coded in CSS. \r\n\r\n&lt;!-- begin snippet: js hide: true console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    body {\r\n      display: -webkit-box;\r\n      display: -webkit-flex;\r\n      display: -moz-box;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -webkit-box-orient: vertical;\r\n      -webkit-box-direction: normal;\r\n      -webkit-flex-direction: column;\r\n         -moz-box-orient: vertical;\r\n         -moz-box-direction: normal;\r\n          -ms-flex-direction: column;\r\n              flex-direction: column;\r\n      min-height: 100vh;\r\n    }\r\n    body &gt; * {\r\n      -webkit-box-flex: 0;\r\n      -webkit-flex-grow: 0;\r\n         -moz-box-flex: 0;\r\n          -ms-flex-positive: 0;\r\n              flex-grow: 0;\r\n    }\r\n    body &gt; nav + .container {\r\n      -webkit-box-flex: 1;\r\n      -webkit-flex-grow: 1;\r\n         -moz-box-flex: 1;\r\n          -ms-flex-positive: 1;\r\n              flex-grow: 1;\r\n    }\r\n\r\n\r\n\r\n    /* Reset CSS and some footer styling. Only needed on StackOverflow */\r\n    body {\r\n      padding: 50px 0 0;\r\n      margin: 0;\r\n    }\r\n    footer {\r\n      background-color: #f8f8f8; \r\n      padding: 15px 0 5px; \r\n      border-top: 1px solid #e7e7e7;\r\n    }\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;link href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;\r\n    &lt;!DOCTYPE html&gt;\r\n\r\n         &lt;!-- Fixed navbar --&gt;\r\n        &lt;nav class=&quot;navbar navbar-default navbar-fixed-top&quot;&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n            &lt;div class=&quot;navbar-header&quot;&gt;\r\n              &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&gt;\r\n                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;\r\n                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\r\n                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\r\n                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\r\n              &lt;/button&gt;\r\n              &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Project name&lt;/a&gt;\r\n            &lt;/div&gt;\r\n            &lt;div id=&quot;navbar&quot; class=&quot;collapse navbar-collapse&quot;&gt;\r\n              &lt;ul class=&quot;nav navbar-nav&quot;&gt;\r\n                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li class=&quot;dropdown&quot;&gt;\r\n                  &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;\r\n                  &lt;ul class=&quot;dropdown-menu&quot;&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;\r\n                    &lt;li class=&quot;dropdown-header&quot;&gt;Nav header&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;\r\n                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;\r\n                  &lt;/ul&gt;\r\n                &lt;/li&gt;\r\n              &lt;/ul&gt;\r\n            &lt;/div&gt;&lt;!--/.nav-collapse --&gt;\r\n          &lt;/div&gt;\r\n        &lt;/nav&gt;\r\n\r\n        &lt;!-- Begin page content --&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n          &lt;div class=&quot;page-header&quot;&gt;\r\n            &lt;h1&gt;Responsive sticky footer of any height&lt;/h1&gt;\r\n          &lt;/div&gt;\r\n          &lt;p class=&quot;lead&quot;&gt;You can have a sticky footer of any height using this CSS. It&#39;s also fully responsive, no JavaScript needed.&lt;/p&gt;\r\n          \r\n        &lt;/div&gt;\r\n\r\n        &lt;footer class=&quot;footer&quot;&gt;\r\n          &lt;div class=&quot;container&quot;&gt;\r\n            &lt;p class=&quot;text-muted&quot;&gt;Place sticky footer content here.&lt;/p&gt;\r\n            &lt;p class=&quot;text-muted&quot;&gt;And some more content.&lt;/p&gt;\r\n            &lt;p class=&quot;text-muted&quot;&gt;And more...&lt;/p&gt;\r\n          &lt;/div&gt;\r\n        &lt;/footer&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nAnd here is the un-prefixed `SCSS` (for `gulp`/`grunt`):\r\n\r\n&lt;!-- language: lang-sass --&gt;\r\n\r\n    body {\r\n      display: flex;\r\n      flex-direction: column;\r\n      min-height: 100vh;\r\n      &gt; * {\r\n        flex-grow: 0;\r\n      }\r\n      &gt; nav + .container {\r\n        flex-grow: 1;\r\n      }\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484382906, "answer_id": 41648164, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1484382906, "body_markdown": "Using `flexbox` is the easiest way I have found, from the guys of [CSS-tricks][1]. This is true sticky-footer, it works when the content is &lt; 100% of the page and &gt; 100% of the page:\r\n\r\n    &lt;body&gt;\r\n      &lt;div class=&quot;content&quot;&gt;\r\n      content\r\n    &lt;/div&gt;\r\n    &lt;footer&gt;&lt;/footer&gt;\r\n    &lt;/body&gt;\r\n\r\nAnd CSS:\r\n\r\n    html {\r\n      height: 100%;\r\n    }\r\n    body {\r\n      min-height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .content {\r\n      flex: 1;\r\n    }\r\n\r\n  [1]: https://css-tricks.com/couple-takes-sticky-footer/#article-header-id-3\r\n\r\nNote that this is bootstrap-agnostic, so it works with bootstrap and without it."}, {"tags": [], "down_vote_count": 0, "creation_date": 1494532494, "answer_id": 43924434, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1494532494, "body_markdown": "Just use flex! Make sure to use body and main in your HTML and it&#39;s one of the best solutions (unless you need IE9 support). It doesn&#39;t require a fixed height or similiar.\r\n\r\nThat&#39;s recommended for Materialize as well!\r\n\r\n    body {\r\n        display: flex;\r\n        min-height: 100vh;\r\n        flex-direction: column;\r\n    }\r\n    \r\n    main {\r\n        flex: 1 0 auto;\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1503925997, "answer_id": 45919935, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1503925997, "body_markdown": "This has been solved by flexbox, once and forever:\r\n\r\nhttps://philipwalton.github.io/solved-by-flexbox/demos/sticky-footer/\r\n\r\nThe HTML\r\n\r\n    &lt;body class=&quot;Site&quot;&gt;\r\n      &lt;header&gt;\u2026&lt;/header&gt;\r\n      &lt;main class=&quot;Site-content&quot;&gt;\u2026&lt;/main&gt;\r\n      &lt;footer&gt;\u2026&lt;/footer&gt;\r\n    &lt;/body&gt;\r\n\r\nThe CSS\r\n\r\n    .Site {\r\n      display: flex;\r\n      min-height: 100vh;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .Site-content {\r\n      flex: 1;\r\n    }\r\n\r\n"}], "title": "Twitter Bootstrap 3 Sticky Footer", "view_count": 293408, "answer_count": 25, "code_snippet": ["<code>&lt;div class=\"footer navbar-fixed-bottom\"&gt;\n</code>", "<code>&lt;div id=\"push\"&gt;&lt;/div&gt;</code>", "<code>/* Sticky footer styles\n-------------------------------------------------- */\n\nhtml,\nbody {\n  height: 100%;\n  /* The html and body elements cannot have any padding or margin. */\n}\n\n/* Wrapper for page content to push down footer */\n#wrap {\n  min-height: 100%;\n  height: auto;\n  /* Negative indent footer by its height */\n  margin: 0 auto -60px;\n  /* Pad bottom by footer height */\n  padding: 0 0 60px;\n}\n\n/* Set the fixed height of the footer here */\n#footer {\n  height: 60px;\n  background-color: #f5f5f5;\n}\n</code>", "<code>&lt;body&gt;\n\n    &lt;!-- Wrap all page content here --&gt;\n    &lt;div id=\"wrap\"&gt;\n\n      &lt;!-- Begin page content --&gt;\n      &lt;div class=\"container\"&gt;\n\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"footer\"&gt;\n      &lt;div class=\"container\"&gt;\n\n      &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n</code>", "<code>&lt;!-- Custom styles for this template --&gt;\n&lt;link href=\"sticky-footer.css\" rel=\"stylesheet\"&gt;\n</code>", "<code>&lt;div class=\"navbar navbar-default navbar-fixed-bottom\"&gt;\n    &lt;div class=\"container\"&gt;\n      &lt;p class=\"navbar-text pull-left\"&gt;\u00a9 2014 - Site Built By Mr. M.\n           &lt;a href=\"http://tinyurl.com/tbvalid\" target=\"_blank\" &gt;HTML 5 Validation&lt;/a&gt;\n      &lt;/p&gt;\n\n      &lt;a href=\"http://youtu.be/zJahlKPCL9g\" class=\"navbar-btn btn-danger btn pull-right\"&gt;\n      &lt;span class=\"glyphicon glyphicon-star\"&gt;&lt;/span&gt;\u00a0 Subscribe on YouTube&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code>", "<code>&lt;div id=\"wrap\"&gt; \n    page content here \n    &lt;div id=\"push\"&gt;&lt;/div&gt;\n&lt;/div&gt; &lt;!-- end wrap --&gt;\n\n&lt;div id=\"footer\"&gt;\n    footer content here\n&lt;/div&gt; &lt;!-- end footer --&gt;\n</code>", "<code>navbar</code>", "<code>navbar-fixed-bottom</code>", "<code>&lt;div class=\"navbar navbar-default navbar-fixed-bottom\"&gt;\n  &lt;div class=\"container\"&gt;\n    &lt;span class=\"navbar-text\"&gt;\n      Something useful\n    &lt;/span&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code>", "<code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;&lt;/head&gt;\n\n  &lt;body&gt;\n\n    &lt;!-- Fixed navbar --&gt;\n    &lt;div class=\"navbar navbar-default navbar-fixed-top\" role=\"navigation\"&gt;\n      &lt;div class=\"container\"&gt;\n        &lt;div class=\"navbar-header\"&gt;\n          &lt;button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"&gt;\n            &lt;span class=\"sr-only\"&gt;Toggle navigation&lt;/span&gt;\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n          &lt;/button&gt;\n          &lt;a class=\"navbar-brand\" href=\"#\"&gt;Project name&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"collapse navbar-collapse\"&gt;\n          &lt;ul class=\"nav navbar-nav\"&gt;\n            &lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#about\"&gt;About&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"dropdown\"&gt;\n              &lt;a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"&gt;Dropdown &lt;b class=\"caret\"&gt;&lt;/b&gt;&lt;/a&gt;\n              &lt;ul class=\"dropdown-menu\"&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Action&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Another action&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Something else here&lt;/a&gt;&lt;/li&gt;\n                &lt;li class=\"divider\"&gt;&lt;/li&gt;\n                &lt;li class=\"dropdown-header\"&gt;Nav header&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Separated link&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;One more separated link&lt;/a&gt;&lt;/li&gt;\n              &lt;/ul&gt;\n            &lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Begin page content --&gt;\n    &lt;div class=\"container\"&gt;\n      &lt;div class=\"page-header\"&gt;\n        &lt;h1&gt;Sticky footer with fixed navbar&lt;/h1&gt;\n      &lt;/div&gt;\n      &lt;p class=\"lead\"&gt;Pin a fixed-height footer to the bottom of the viewport in desktop browsers with this custom HTML and CSS. A fixed navbar has been added with &lt;code&gt;padding-top: 60px;&lt;/code&gt; on the &lt;code&gt;body &gt; .container&lt;/code&gt;.&lt;/p&gt;\n      &lt;p&gt;Back to &lt;a href=\"../sticky-footer\"&gt;the default sticky footer&lt;/a&gt; minus the navbar.&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;footer&gt;\n      &lt;div class=\"container\"&gt;\n        &lt;p class=\"text-muted\"&gt;Place sticky footer content here.&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/footer&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code>", "<code>/* Sticky footer styles\n-------------------------------------------------- */\nhtml {\n  position: relative;\n  min-height: 100%;\n}\nbody {\n  /* Margin bottom by footer height */\n  margin-bottom: 60px;\n}\nfooter {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  /* Set the fixed height of the footer here */\n  height: 60px;\n  background-color: #f5f5f5;\n}\n</code>", "<code> /* Sticky footer styles\n-------------------------------------------------- */\nhtml {\n  position: relative;\n  min-height: 100%;\n}\n\n\nbody {\n  /* Margin bottom by footer height */\n  margin-bottom: 60px;\n}\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  /* Set the fixed height of the footer here */\n  height: 60px;\n  background-color: #f5f5f5;\n\n  border-top: 1px solid #eee;\n  text-align: center;\n}\n\n.site-footer-links {\n  font-size: 12px;\n  line-height: 1.5;\n  color: #777;\n  padding-top: 20px;\n  display: block;\n  text-align: center;\n  float: center;\n  margin: 0;\n  list-style: none;\n} \n</code>", "<code>&lt;div class=\"footer\"&gt;\n &lt;div class=\"site-footer\"&gt;\n  &lt;ul class=\"site-footer-links\"&gt;\n        &lt;li&gt;\u00a9 Zee and Company&lt;span&gt;&lt;/span&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n &lt;/div&gt;\n\n&lt;/div&gt;\n</code>", "<code>html, body {\n  height: 100%;\n}\n.page-wrap {\n  min-height: 100%;\n  /* equal to footer height */\n  margin-bottom: -142px; \n}\n.page-wrap:after {\n  content: \"\";\n  display: block;\n}\n.site-footer, .page-wrap:after {\n  height: 142px; \n}\n.site-footer {\n  background: orange;\n}\n</code>", "<code>some text&lt;br&gt;</code>", "<code>#footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  /* Set the fixed height of the footer here */\n  height: 3em;\n  background-color: #f5f5f5;\n  text-align: center;\n  padding-top: 1em;\n}\n</code>", "<code>div</code>", "<code>wrap</code>", "<code>&lt;div id=\"wrap\"&gt;\n  *content goes here*\n&lt;/div&gt;\n\n&lt;div id=\"push\"&gt;\n&lt;/div&gt;\n\n&lt;div id=\"footer\"&gt;\n  &lt;div class=\"container credit\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"container\"&gt;\n    &lt;p class=\"muted credit\"&gt;\u00a9 Your Page 2013&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code>", "<code>html,\nbody {\n  height: 100%;\n  /* The html and body elements cannot have any padding or margin. */\n}\n/* Wrapper for page content to push down footer */\n#wrap {\n  min-height: 100%;\n  height: auto !important;\n  height: 100%;\n  /* Negative indent footer by it's height */\n  margin: 0 auto -60px;\n}\n\n/* Set the fixed height of the footer here */\n#push,\n#footer {\n  height: 60px;\n}\n#footer {\n  background-color: #eee;\n}\n\n/* Lastly, apply responsive CSS fixes as necessary */\n@media (max-width: 767px) {\n  #footer {\n    margin-left: -20px;\n    margin-right: -20px;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n}\n</code>", "<code>html {\n  position: relative;\n  min-height: 100%;\n}\nbody {\n  /* Margin bottom by footer height */\n  margin-bottom: 60px;\n}\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  /* Set the fixed height of the footer here */\n  height: 60px;\n  background-color: #f5f5f5;\n}\n</code>", "<code>function setfooter(){\r\n\tvar ht = document.getElementById(\"footer\").scrollHeight;\r\n\tdocument.body.style.marginBottom = ht + \"px\";\r\n}\r\n\r\nwindow.addEventListener('resize', function(){\r\n\t\tsetfooter();\r\n\t}, true);\r\nwindow.addEventListener('load', function(){\r\n\tsetfooter();\r\n}, true);</code>", "<code>html {\r\n  position: relative;\r\n  min-height: 100%;\r\n}\r\n.footer {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  \r\n  /* additional style for effect only */\r\n   text-align: center;\r\n    background-color: #333;\r\n    color: #fff;\r\n}\r\n  \r\n\r\n\r\nbody{\r\n/* additional style for effect only not needed in bootstrap*/\r\n  padding:0;\r\n  margin: 0;\r\n  }</code>", "<code>&lt;div&gt;\r\n  Page content\r\n  &lt;br&gt;  &lt;br&gt;\r\n  line 3\r\n  &lt;br&gt;  &lt;br&gt;\r\n  line 5\r\n  &lt;br&gt;  &lt;br&gt;\r\n  line 7\r\n  \r\n &lt;/div&gt;\r\n\r\n\r\n&lt;footer id=\"footer\" class=\"footer\"&gt;\r\n      &lt;div class=\"container\"&gt;\r\n        &lt;p class=\"text-muted\"&gt;Footer with a long text, so that resizing, to a smaller screen size, will cause the footer to grow taller. But the footer will not overflow onto the main page.&lt;/p&gt;\r\n      &lt;/div&gt;\r\n    &lt;/footer&gt;</code>", "<code>min-height: 100%</code>", "<code>@footer-padding:      40px;  // Set here the footer padding\n@footer-inner-height: 150px; // Set here the footer height (without padding)\n\n/* Calculates the overall footer height */\n@footer-height: @footer-inner-height + @footer-padding*2;\n\nhtml {\n position: relative;\n min-height: 100%;\n}\nbody {\n /* This avoids footer to overlap the page content */\n margin-bottom: @footer-height;\n}\nfooter{\n /* Fix the footer on bottom and give it fixed height */\n position: absolute;\n bottom: 0;\n width: 100%;\n height: @footer-height;\n padding: @footer-padding 0;\n}\n</code>", "<code>if ($(document).height() &lt;= $(window).height()) {\n    $(\"footer\").addClass(\"navbar-fixed-bottom\");\n}\n</code>", "<code>.on('resize', function()</code>", "<code>$(window).on('resize', function() {\n    if ($(document).height() &lt;= $(window).height()) {\n        $('footer').addClass(\"navbar-fixed-bottom\");\n    } else {\n        $('footer').removeClass(\"navbar-fixed-bottom\");\n    }\n});\n</code>", "<code>body {\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -moz-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n  -webkit-flex-direction: column;\r\n     -moz-box-orient: vertical;\r\n     -moz-box-direction: normal;\r\n      -ms-flex-direction: column;\r\n          flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\nbody &gt; * {\r\n  -webkit-box-flex: 0;\r\n  -webkit-flex-grow: 0;\r\n     -moz-box-flex: 0;\r\n      -ms-flex-positive: 0;\r\n          flex-grow: 0;\r\n}\r\nbody &gt; nav + .container {\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex-grow: 1;\r\n     -moz-box-flex: 1;\r\n      -ms-flex-positive: 1;\r\n          flex-grow: 1;\r\n}\r\n\r\n\r\n\r\n/* Reset CSS and some footer styling. Only needed on StackOverflow */\r\nbody {\r\n  padding: 50px 0 0;\r\n  margin: 0;\r\n}\r\nfooter {\r\n  background-color: #f8f8f8; \r\n  padding: 15px 0 5px; \r\n  border-top: 1px solid #e7e7e7;\r\n}</code>", "<code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"&gt;&lt;/script&gt;\r\n&lt;link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/&gt;\r\n&lt;!DOCTYPE html&gt;\r\n\r\n     &lt;!-- Fixed navbar --&gt;\r\n    &lt;nav class=\"navbar navbar-default navbar-fixed-top\"&gt;\r\n      &lt;div class=\"container\"&gt;\r\n        &lt;div class=\"navbar-header\"&gt;\r\n          &lt;button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"&gt;\r\n            &lt;span class=\"sr-only\"&gt;Toggle navigation&lt;/span&gt;\r\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\r\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\r\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\r\n          &lt;/button&gt;\r\n          &lt;a class=\"navbar-brand\" href=\"#\"&gt;Project name&lt;/a&gt;\r\n        &lt;/div&gt;\r\n        &lt;div id=\"navbar\" class=\"collapse navbar-collapse\"&gt;\r\n          &lt;ul class=\"nav navbar-nav\"&gt;\r\n            &lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n            &lt;li&gt;&lt;a href=\"#about\"&gt;About&lt;/a&gt;&lt;/li&gt;\r\n            &lt;li&gt;&lt;a href=\"#contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\r\n            &lt;li class=\"dropdown\"&gt;\r\n              &lt;a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"&gt;Dropdown &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/a&gt;\r\n              &lt;ul class=\"dropdown-menu\"&gt;\r\n                &lt;li&gt;&lt;a href=\"#\"&gt;Action&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=\"#\"&gt;Another action&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=\"#\"&gt;Something else here&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li role=\"separator\" class=\"divider\"&gt;&lt;/li&gt;\r\n                &lt;li class=\"dropdown-header\"&gt;Nav header&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=\"#\"&gt;Separated link&lt;/a&gt;&lt;/li&gt;\r\n                &lt;li&gt;&lt;a href=\"#\"&gt;One more separated link&lt;/a&gt;&lt;/li&gt;\r\n              &lt;/ul&gt;\r\n            &lt;/li&gt;\r\n          &lt;/ul&gt;\r\n        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;\r\n      &lt;/div&gt;\r\n    &lt;/nav&gt;\r\n\r\n    &lt;!-- Begin page content --&gt;\r\n    &lt;div class=\"container\"&gt;\r\n      &lt;div class=\"page-header\"&gt;\r\n        &lt;h1&gt;Responsive sticky footer of any height&lt;/h1&gt;\r\n      &lt;/div&gt;\r\n      &lt;p class=\"lead\"&gt;You can have a sticky footer of any height using this CSS. It's also fully responsive, no JavaScript needed.&lt;/p&gt;\r\n      \r\n    &lt;/div&gt;\r\n\r\n    &lt;footer class=\"footer\"&gt;\r\n      &lt;div class=\"container\"&gt;\r\n        &lt;p class=\"text-muted\"&gt;Place sticky footer content here.&lt;/p&gt;\r\n        &lt;p class=\"text-muted\"&gt;And some more content.&lt;/p&gt;\r\n        &lt;p class=\"text-muted\"&gt;And more...&lt;/p&gt;\r\n      &lt;/div&gt;\r\n    &lt;/footer&gt;</code>", "<code>SCSS</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>body {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  &gt; * {\n    flex-grow: 0;\n  }\n  &gt; nav + .container {\n    flex-grow: 1;\n  }\n}\n</code>", "<code>app/view/layouts/application.html.haml</code>", "<code>%html\n  %head\n  %body\n    Some  body stuff\n\n    %footer\n      footer content\n</code>", "<code>app/assets/stylesheets/application.css.sass</code>", "<code>$footer-height: 110px\n\nhtml\n  position: relative\n  min-height: 100%\n\nbody\n  margin-bottom: $footer-height\n\nbody &gt; footer\n  position: absolute\n  bottom: 0\n  width: 100%\n  height: $footer-height\n</code>", "<code>$(document).ready(function(){\n  $.fn.resize_footer();\n\n  $(window).resize(function() {\n    $.fn.resize_footer();\n  });\n });\n\n(function($) {\n\n  $.fn.resize_footer = function(){\n    $('body &gt; .container-fluid').css('padding-bottom', $('body &gt; footer').height());\n  };\n });\n</code>", "<code>padding-bottom</code>", "<code>&lt;body&gt;\n  ... content of your page ...\n  &lt;div class=\"navbar navbar-default navbar-fixed-bottom\"&gt;\n    &lt;div class=\"container\"&gt;\n      &lt;div class=\"muted pull-right\"&gt;\n        Something useful\n      &lt;/div&gt;\n      ... some other footer content ...\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code>", "<code>height</code>", "<code>#myfooter{\r\nheight: 3em;\r\n  background-color: #f5f5f5;\r\n  text-align: center;\r\n  padding-top: 1em;\r\n}</code>", "<code>&lt;footer&gt;\r\n    &lt;div class=\"footer\"&gt;\r\n        &lt;div class=\"container-fluid\"  id=\"myfooter\"&gt;\r\n            &lt;div class=\"row\"&gt;\r\n                &lt;div class=\"col-md-12\"&gt;\r\n                    &lt;p class=\"copy\"&gt;Copyright &amp;copy; Your words&lt;/p&gt;\r\n                &lt;/div&gt;\r\n            &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/footer&gt;</code>", "<code>&lt;body&gt;\n&lt;nav class=\"navbar navbar-default\"&gt;\n  &lt;div class=\"container-fluid\"&gt;\n    &lt;div class=\"navbar-header\"&gt;\n      &lt;a class=\"navbar-brand\" href=\"#\"&gt;\n        &lt;img alt=\"Brand\" src=\"\"&gt;\n      &lt;/a&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n    &lt;footer&gt;&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>", "<code>html {\n    position: relative;\n    min-height: 100%;\n}\nbody {\n    margin: 0 0 100px;\n}\nfooter {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 100px;\n    width: 100%;\n    background-color: red;\n}\n</code>", "<code>flexbox</code>", "<code>&lt;body&gt;\n  &lt;div class=\"content\"&gt;\n  content\n&lt;/div&gt;\n&lt;footer&gt;&lt;/footer&gt;\n&lt;/body&gt;\n</code>", "<code>html {\n  height: 100%;\n}\nbody {\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.content {\n  flex: 1;\n}\n</code>", "<code>navbar-fixed-bottom\n</code>", "<code>body { padding-bottom: 70px; }\n</code>", "<code>body {\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n}\n\nmain {\n    flex: 1 0 auto;\n}\n</code>", "<code>&lt;body class=\"Site\"&gt;\n  &lt;header&gt;\u2026&lt;/header&gt;\n  &lt;main class=\"Site-content\"&gt;\u2026&lt;/main&gt;\n  &lt;footer&gt;\u2026&lt;/footer&gt;\n&lt;/body&gt;\n</code>", "<code>.Site {\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n}\n\n.Site-content {\n  flex: 1;\n}\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "webpack"], "creation_date": 1430742014, "body_markdown": "I&#39;m trying to convert an angular app from gulp to webpack. in gulp I use gulp-preprocess to replace some variables in the html page (e.g. database name) depending on the NODE_ENV. What is the best way of achieving a similar result with webpack?", "last_edit_date": 1496594284, "up_vote_count": 225, "link": "https://stackoverflow.com/questions/30030031/passing-environment-dependent-variables-in-webpack", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1430852871, "answer_id": 30061249, "path": "stack.gulp.answer", "score": 345, "up_vote_count": 347, "is_accepted": true, "last_activity_date": 1482476892, "last_edit_date": 1482476892, "body_markdown": "&lt;!-- language-all: lang-js --&gt;\r\n\r\nThere are two basic ways to achieve this.\r\n\r\n## DefinePlugin\r\n\r\n    new webpack.DefinePlugin({\r\n        &#39;process.env.NODE_ENV&#39;: JSON.stringify(process.env.NODE_ENV || &#39;development&#39;)\r\n    }),\r\n\r\nNote that this will just replace the matches &quot;as is&quot;. That&#39;s why the string is in the format it is. You could have a more complex structure, such as an object there but you get the idea.\r\n\r\n## EnvironmentPlugin\r\n\r\n\r\n    new webpack.EnvironmentPlugin([&#39;NODE_ENV&#39;])\r\n\r\n`EnvironmentPlugin` uses `DefinePlugin` internally and maps the environment values to code through it. Terser syntax.\r\n\r\n## Alias\r\n\r\nAlternatively you could consume configuration through [an aliased module](https://webpack.github.io/docs/configuration.html#resolve-alias). From consumer side it would look like this:\r\n\r\n    var config = require(&#39;config&#39;);\r\n\r\nConfiguration itself could look like this:\r\n\r\n    resolve: {\r\n        alias: {\r\n            config: path.join(__dirname, &#39;config&#39;, process.env.NODE_ENV)\r\n        }\r\n    }\r\n\r\nLet&#39;s say `process.env.NODE_ENV` is `development`. It would map into `./config/development.js` then. The module it maps to can export configuration like this:\r\n\r\n    module.exports = {\r\n        testing: &#39;something&#39;,\r\n        ...\r\n    };"}, {"tags": [], "down_vote_count": 1, "creation_date": 1458828387, "answer_id": 36202134, "path": "stack.gulp.answer", "score": 99, "up_vote_count": 100, "is_accepted": false, "last_activity_date": 1458828387, "body_markdown": "Just another option, if you want to use only a cli interface, just use the `define` option of webpack. I add the following script in my `package.json` :\r\n\r\n    &quot;build-production&quot;: &quot;webpack -p --define process.env.NODE_ENV=&#39;\\&quot;production\\&quot;&#39; --progress --colors&quot;\r\n\r\nSo I just have to run `npm run build-production`."}, {"tags": [], "down_vote_count": 0, "creation_date": 1466438853, "answer_id": 37927104, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 19, "is_accepted": false, "last_activity_date": 1466438853, "body_markdown": "You can directly use the [`EnvironmentPlugin`][1] available in `webpack` to have access to any environment variable during the transpilation.\r\n\r\nYou just have to declare the plugin in your `webpack.config.js` file:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var webpack = require(&#39;webpack&#39;);\r\n\r\n    module.exports = {\r\n        /* ... */\r\n        plugins = [\r\n            new webpack.EnvironmentPlugin([&#39;NODE_ENV&#39;])\r\n        ]\r\n    };\r\n\r\n*Note that you must declare explicitly the name of the environment variables you want to use.*\r\n\r\n  [1]: https://github.com/webpack/webpack/blob/b0fffd50d35dd0eef734d189928c1ac4c5c9fb97/lib/EnvironmentPlugin.js"}, {"tags": [], "down_vote_count": 0, "creation_date": 1468576137, "answer_id": 38393027, "path": "stack.gulp.answer", "score": 57, "up_vote_count": 57, "is_accepted": false, "last_activity_date": 1504779182, "last_edit_date": 1504779182, "body_markdown": "I investigated a couple of options on how to set environment-specific variables and ended up with this:\r\n\r\nI have 2 webpack configs currently: \r\n\r\n**webpack.production.config.js**\r\n\r\n    new webpack.DefinePlugin({\r\n      &#39;process.env&#39;:{\r\n        &#39;NODE_ENV&#39;: JSON.stringify(&#39;production&#39;),\r\n        &#39;API_URL&#39;: JSON.stringify(&#39;http://localhost:8080/bands&#39;)\r\n      }\r\n    }),\r\n**webpack.config.js**\r\n\r\n    new webpack.DefinePlugin({\r\n      &#39;process.env&#39;:{\r\n        &#39;NODE_ENV&#39;: JSON.stringify(&#39;development&#39;),\r\n        &#39;API_URL&#39;: JSON.stringify(&#39;http://10.10.10.10:8080/bands&#39;)\r\n      }\r\n    }),\r\n\r\nIn my code I get the value of API_URL in this (brief) way:\r\n\r\n`const apiUrl = process.env.API_URL;`\r\n\r\n**EDIT 3th of Nov, 2016**\r\n\r\nWebpack docs has an example: https://webpack.github.io/docs/list-of-plugins.html#dependency-injection\r\n\r\n    new webpack.DefinePlugin({\r\n        PRODUCTION: JSON.stringify(true),\r\n        VERSION: JSON.stringify(&quot;5fa3b9&quot;),\r\n        BROWSER_SUPPORTS_HTML5: true,\r\n        TWO: &quot;1+1&quot;,\r\n        &quot;typeof window&quot;: JSON.stringify(&quot;object&quot;)\r\n    })\r\n\r\nWith **ESLint** you need to specifically allow undefined variables in code, if you have `no-undef` rule on. [http://eslint.org/docs/rules/no-undef][1] like this:\r\n\r\n    /*global TWO*/\r\n    console.log(&#39;Running App version &#39; + TWO);\r\n\r\n\r\n\r\n**EDIT 7th of Sep, 2017 (Create-React-App specific)**\r\n\r\nIf you&#39;re not into configuring too much, check out Create-React-App: [Create-React-App - Adding Custom Environment Variables][2]. Under the hood CRA uses Webpack anyway.\r\n\r\n\r\n  [1]: http://eslint.org/docs/rules/no-undef\r\n  [2]: https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-custom-environment-variables"}, {"tags": [], "down_vote_count": 0, "creation_date": 1475378129, "answer_id": 39813511, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1477528570, "last_edit_date": 1477528570, "body_markdown": "To add to the bunch of answers personally I prefer the following:\r\n\r\n    const webpack = require(&#39;webpack&#39;);\r\n    const prod = process.argv.indexOf(&#39;-p&#39;) !== -1;\r\n    \r\n    module.exports = {\r\n      ...\r\n      plugins: [\r\n        new webpack.DefinePlugin({\r\n          process: {\r\n            env: {\r\n              NODE_ENV: prod? `&quot;production&quot;`: &#39;&quot;development&quot;&#39;\r\n            }\r\n          }\r\n        }),\r\n        ...\r\n      ]\r\n    };\r\n\r\nUsing this there is no funky env variable or cross-platform problems (with env vars).  All you do is run the normal ```webpack``` or ```webpack -p``` for dev or production respectively.\r\n\r\nReference: [Github issue][1]\r\n\r\n\r\n  [1]: https://github.com/webpack/webpack/issues/2537#issuecomment-250950677"}, {"tags": [], "down_vote_count": 3, "creation_date": 1475774778, "answer_id": 39902202, "path": "stack.gulp.answer", "score": -3, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1475774778, "body_markdown": "I don&#39;t know why but nobody really mentioning the simplest solution. This works for me for nodejs and grunt. As for many people the webpack can be confusing you can simply use the below line:\r\n\r\n```process.env.NODE_ENV = &#39;production&#39;;```\r\n\r\nWith the above solution you don&#39;t really need to use envify or webpack. Sometimes the simple hardcoded solution may work for some people."}, {"tags": [], "down_vote_count": 0, "creation_date": 1477034493, "answer_id": 40170658, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1477573148, "last_edit_date": 1477573148, "body_markdown": "You can pass command-line arguments using `--env` in webpack 2:\r\n\r\n    webpack --config webpack.config.js --env.foo=bar\r\n\r\nUsing the variable in webpack.config.js:\r\n\r\n    module.exports = function(env) {\r\n        if (env.foo === &#39;bar&#39;) {\r\n            // do something\r\n        }\r\n    }\r\n\r\n[Source][1]\r\n\r\n\r\n  [1]: https://github.com/webpack/webpack/issues/2254#issuecomment-203528744"}, {"tags": [], "down_vote_count": 0, "creation_date": 1477607065, "answer_id": 40295149, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1479828999, "last_edit_date": 1479828999, "body_markdown": "To add to the bunch of answers:\r\n\r\nUse **ExtendedDefinePlugin** instead of DefinePlugin\r\n\r\n    npm install extended-define-webpack-plugin --save-dev.\r\n\r\nExtendedDefinePlugin is much simpler to use and is documented :-)\r\n[link][1]\r\n\r\n\r\nBecause DefinePlugin **lacks** good documentation, I want to help out, by saying that it actually works like **#DEFINE in c#**. \r\n\r\n    #if (DEBUG)\r\n            Console.WriteLine(&quot;Debugging is enabled.&quot;);\r\n    #endif\r\n\r\nThus, if you want to understand how DefinePlugin works, read the  c# #define doucmentation. [link](https://msdn.microsoft.com/nl-be/library/yt3yck0x.aspx)\r\n\r\n\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/extended-define-webpack-plugin"}, {"tags": [], "down_vote_count": 0, "creation_date": 1478431692, "answer_id": 40448808, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1478431692, "body_markdown": "I prefer using .env file for different environment.\r\n\r\n1. Use webpack.dev.config to copy ```env.dev``` to .env into root folder  \r\n2. Use webpack.prod.config to copy ```env.prod``` to .env\r\n\r\nand in code\r\n\r\nuse \r\n\r\n```require(&#39;dotenv&#39;).config();\r\nconst API = process.env.API ## which will store the value from .env file\r\n```"}, {"tags": [], "down_vote_count": 0, "creation_date": 1478521034, "answer_id": 40465009, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1478529069, "last_edit_date": 1495540052, "body_markdown": "**Since my Edit on the [above post by thevangelist][1] wasn&#39;t approved**, posting additional information.\r\n\r\nIf you want to pick value from **package.json** like a defined ***version number*** and access it through **DefinePlugin** inside Javascript. \r\n\r\n    {&quot;version&quot;: &quot;0.0.1&quot;}\r\n\r\nThen, Import **package.json** inside respective **webpack.config**, access the attribute using the import variable, then use the attribute in the **DefinePlugin**.\r\n\r\n    const PACKAGE = require(&#39;../package.json&#39;);\r\n    const _version = PACKAGE.version;//Picks the version number from package.json\r\n\r\nFor example certain configuration on **webpack.config** is using METADATA for DefinePlugin:  \r\n\r\n    const METADATA = webpackMerge(commonConfig({env: ENV}).metadata, {\r\n      host: HOST,\r\n      port: PORT,\r\n      ENV: ENV,\r\n      HMR: HMR,\r\n      RELEASE_VERSION:_version//Version attribute retrieved from package.json\r\n    });\r\n\r\n    new DefinePlugin({\r\n            &#39;ENV&#39;: JSON.stringify(METADATA.ENV),\r\n            &#39;HMR&#39;: METADATA.HMR,\r\n            &#39;process.env&#39;: {\r\n              &#39;ENV&#39;: JSON.stringify(METADATA.ENV),\r\n              &#39;NODE_ENV&#39;: JSON.stringify(METADATA.ENV),\r\n              &#39;HMR&#39;: METADATA.HMR,\r\n              &#39;VERSION&#39;: JSON.stringify(METADATA.RELEASE_VERSION)//Setting it for the Scripts usage.\r\n            }\r\n          }),\r\n\r\nAccess this inside any typescript file:\r\n\r\n    this.versionNumber = process.env.VERSION;\r\n\r\n**The smartest way would be like this:**\r\n   \r\n\r\n    // webpack.config.js\r\n    plugins: [\r\n        new webpack.DefinePlugin({\r\n          VERSION: JSON.stringify(require(&quot;./package.json&quot;).version)\r\n        })\r\n      ]\r\n\r\n[Thanks to Ross Allen][2]\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/38393027/452708 &quot;above post&quot;\r\n  [2]: https://github.com/webpack/webpack/issues/237#issuecomment-69438616"}, {"tags": [], "down_vote_count": 1, "creation_date": 1486599337, "answer_id": 42126042, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1486599337, "body_markdown": "Just another answer that is similar to @zer0chain&#39;s answer. However, with one distinction.\r\n\r\n##Setting `webpack -p` is sufficient.\r\n\r\nIt is the same as: \r\n\r\n    --define process.env.NODE_ENV=&quot;production&quot;\r\n\r\nAnd this is the same as \r\n\r\n\r\n    // webpack.config.js\r\n    const webpack = require(&#39;webpack&#39;);\r\n    \r\n    module.exports = {\r\n      //...\r\n    \r\n      plugins:[\r\n        new webpack.DefinePlugin({\r\n          &#39;process.env.NODE_ENV&#39;: JSON.stringify(&#39;production&#39;)\r\n        })\r\n      ]\r\n    };\r\n\r\nSo you may only need something like this in `package.json` Node file:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;projectname&quot;,\r\n      &quot;version&quot;: &quot;1.0.0&quot;,\r\n      &quot;description&quot;: &quot;&quot;,\r\n      &quot;main&quot;: &quot;index.js&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\r\n        &quot;debug&quot;: &quot;webpack -d&quot;,\r\n        &quot;production&quot;: &quot;webpack -p&quot;\r\n      },\r\n      &quot;author&quot;: &quot;prosti&quot;,\r\n      &quot;license&quot;: &quot;ISC&quot;,\r\n      &quot;dependencies&quot;: {    \r\n        &quot;webpack&quot;: &quot;^2.2.1&quot;,\r\n        ...\r\n      }\r\n    }\r\n\r\n---\r\n\r\nJust a few tips from the [DefinePlugin][1]:\r\n\r\n&gt;The DefinePlugin allows you to create global constants which can be configured at compile time. This can be useful for allowing different behavior between development builds and release builds. For example, you might use a global constant to determine whether logging takes place; perhaps you perform logging in your development build but not in the release build. That&#39;s the sort of scenario the DefinePlugin facilitates.\r\n\r\n\r\n---\r\n\r\nThat this is so you can check if you type `webpack --help`\r\n\r\n    Config options:\r\n      --config  Path to the config file\r\n                             [string] [default: webpack.config.js or webpackfile.js]\r\n      --env     Enviroment passed to the config, when it is a function\r\n    \r\n    Basic options:\r\n      --context    The root directory for resolving entry point and stats\r\n                                           [string] [default: The current directory]\r\n      --entry      The entry point                                          [string]\r\n      --watch, -w  Watch the filesystem for changes                        [boolean]\r\n      --debug      Switch loaders to debug mode                            [boolean]\r\n      --devtool    Enable devtool for better debugging experience (Example:\r\n                   --devtool eval-cheap-module-source-map)                  [string]\r\n      -d           shortcut for --debug --devtool eval-cheap-module-source-map\r\n                   --output-pathinfo                                       [boolean]\r\n      -p           shortcut for --optimize-minimize --define\r\n                   process.env.NODE_ENV=&quot;production&quot; \r\n\r\n                          [boolean]\r\n      --progress   Print compilation progress in percentage                [boolean]\r\n\r\n\r\n\r\n\r\n\r\n  [1]: https://webpack.js.org/plugins/define-plugin/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1508154121, "answer_id": 46769506, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1508156105, "last_edit_date": 1508156105, "body_markdown": "I found the following solution to be easiest to setup environment variable for Webpack 2:\r\n\r\nFor example we have a webpack settings:\r\n\r\n    var webpack = require(&#39;webpack&#39;)\r\n    \r\n    let webpackConfig = (env) =&gt; { // Passing envirmonment through\r\n                                    // function is important here\r\n        return {\r\n            entry: {\r\n            },\r\n    \r\n            output: {\r\n            },\r\n    \r\n            plugins: [\r\n            ],\r\n    \r\n            module: {\r\n            },\r\n    \r\n            resolve: {\r\n            }\r\n    \r\n        }\r\n    };\r\n\r\n    module.exports = webpackConfig;\r\n\r\nAdd Environment Variable in Webpack:\r\n\r\n    plugins: [\r\n        new webpack.EnvironmentPlugin({\r\n           NODE_ENV: &#39;development&#39;,\r\n           }),\r\n    ]\r\n\r\nDefine Plugin Variable and add it to `plugins`:\r\n\r\n        new webpack.DefinePlugin({\r\n            &#39;NODE_ENV&#39;: JSON.stringify(env.NODE_ENV || &#39;development&#39;)\r\n        }),\r\n\r\nNow when running webpack command, pass `env.NODE_ENV` as argument:\r\n\r\n    webpack --env.NODE_ENV=development\r\n    \r\n    // OR\r\n    \r\n    webpack --env.NODE_ENV development\r\n\r\nNow you can access `NODE_ENV` variable anywhere in your code. \r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1516374217, "answer_id": 48343956, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1516374217, "body_markdown": "Here is a way that has worked for me and has allowed me keep my environment variables DRY by reusing a json file.\r\n\r\n    let config = require(&#39;./settings.json&#39;);\r\n    if (__PROD__) {\r\n      config = require(&#39;./settings-prod.json&#39;);\r\n    }\r\n\r\n    const envVars = {};\r\n    Object.keys(config).forEach((key) =&gt; {\r\n      envVars[key] = JSON.stringify(config[key]);\r\n    });\r\n\r\n    new webpack.DefinePlugin({\r\n      &#39;process.env&#39;: envVars\r\n    }),"}], "title": "Passing environment-dependent variables in webpack", "view_count": 149353, "answer_count": 13, "code_snippet": ["<code>new webpack.DefinePlugin({\n    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development')\n}),\n</code>", "<code>new webpack.EnvironmentPlugin(['NODE_ENV'])\n</code>", "<code>EnvironmentPlugin</code>", "<code>DefinePlugin</code>", "<code>var config = require('config');\n</code>", "<code>resolve: {\n    alias: {\n        config: path.join(__dirname, 'config', process.env.NODE_ENV)\n    }\n}\n</code>", "<code>process.env.NODE_ENV</code>", "<code>development</code>", "<code>./config/development.js</code>", "<code>module.exports = {\n    testing: 'something',\n    ...\n};\n</code>", "<code>JSON.stringify()</code>", "<code>'process.env.NODE_ENV': `\"${process.env.NODE_ENV || 'development'}\"`</code>", "<code>JSON.stringify('development')</code>", "<code>JSON.stringify(someVariable)</code>", "<code>NODE_ENV</code>", "<code>process.env.NODE_ENV</code>", "<code>define</code>", "<code>package.json</code>", "<code>\"build-production\": \"webpack -p --define process.env.NODE_ENV='\\\"production\\\"' --progress --colors\"\n</code>", "<code>npm run build-production</code>", "<code>new webpack.DefinePlugin({\n  'process.env':{\n    'NODE_ENV': JSON.stringify('production'),\n    'API_URL': JSON.stringify('http://localhost:8080/bands')\n  }\n}),\n</code>", "<code>new webpack.DefinePlugin({\n  'process.env':{\n    'NODE_ENV': JSON.stringify('development'),\n    'API_URL': JSON.stringify('http://10.10.10.10:8080/bands')\n  }\n}),\n</code>", "<code>const apiUrl = process.env.API_URL;</code>", "<code>new webpack.DefinePlugin({\n    PRODUCTION: JSON.stringify(true),\n    VERSION: JSON.stringify(\"5fa3b9\"),\n    BROWSER_SUPPORTS_HTML5: true,\n    TWO: \"1+1\",\n    \"typeof window\": JSON.stringify(\"object\")\n})\n</code>", "<code>no-undef</code>", "<code>/*global TWO*/\nconsole.log('Running App version ' + TWO);\n</code>", "<code>process.env</code>", "<code>process.env.PORT</code>", "<code>undefined</code>", "<code>EnvironmentPlugin</code>", "<code>webpack</code>", "<code>webpack.config.js</code>", "<code>var webpack = require('webpack');\n\nmodule.exports = {\n    /* ... */\n    plugins = [\n        new webpack.EnvironmentPlugin(['NODE_ENV'])\n    ]\n};\n</code>", "<code>--env</code>", "<code>webpack --config webpack.config.js --env.foo=bar\n</code>", "<code>module.exports = function(env) {\n    if (env.foo === 'bar') {\n        // do something\n    }\n}\n</code>", "<code>module.exports = function(env)</code>", "<code>const webpack = require('webpack');\nconst prod = process.argv.indexOf('-p') !== -1;\n\nmodule.exports = {\n  ...\n  plugins: [\n    new webpack.DefinePlugin({\n      process: {\n        env: {\n          NODE_ENV: prod? `\"production\"`: '\"development\"'\n        }\n      }\n    }),\n    ...\n  ]\n};\n</code>", "<code>webpack</code>", "<code>webpack -p</code>", "<code>webpack -p --env.production</code>", "<code>{\"version\": \"0.0.1\"}\n</code>", "<code>const PACKAGE = require('../package.json');\nconst _version = PACKAGE.version;//Picks the version number from package.json\n</code>", "<code>const METADATA = webpackMerge(commonConfig({env: ENV}).metadata, {\n  host: HOST,\n  port: PORT,\n  ENV: ENV,\n  HMR: HMR,\n  RELEASE_VERSION:_version//Version attribute retrieved from package.json\n});\n\nnew DefinePlugin({\n        'ENV': JSON.stringify(METADATA.ENV),\n        'HMR': METADATA.HMR,\n        'process.env': {\n          'ENV': JSON.stringify(METADATA.ENV),\n          'NODE_ENV': JSON.stringify(METADATA.ENV),\n          'HMR': METADATA.HMR,\n          'VERSION': JSON.stringify(METADATA.RELEASE_VERSION)//Setting it for the Scripts usage.\n        }\n      }),\n</code>", "<code>this.versionNumber = process.env.VERSION;\n</code>", "<code>// webpack.config.js\nplugins: [\n    new webpack.DefinePlugin({\n      VERSION: JSON.stringify(require(\"./package.json\").version)\n    })\n  ]\n</code>", "<code>webpack -p</code>", "<code>--define process.env.NODE_ENV=\"production\"\n</code>", "<code>// webpack.config.js\nconst webpack = require('webpack');\n\nmodule.exports = {\n  //...\n\n  plugins:[\n    new webpack.DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify('production')\n    })\n  ]\n};\n</code>", "<code>package.json</code>", "<code>{\n  \"name\": \"projectname\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\",\n    \"debug\": \"webpack -d\",\n    \"production\": \"webpack -p\"\n  },\n  \"author\": \"prosti\",\n  \"license\": \"ISC\",\n  \"dependencies\": {    \n    \"webpack\": \"^2.2.1\",\n    ...\n  }\n}\n</code>", "<code>webpack --help</code>", "<code>Config options:\n  --config  Path to the config file\n                         [string] [default: webpack.config.js or webpackfile.js]\n  --env     Enviroment passed to the config, when it is a function\n\nBasic options:\n  --context    The root directory for resolving entry point and stats\n                                       [string] [default: The current directory]\n  --entry      The entry point                                          [string]\n  --watch, -w  Watch the filesystem for changes                        [boolean]\n  --debug      Switch loaders to debug mode                            [boolean]\n  --devtool    Enable devtool for better debugging experience (Example:\n               --devtool eval-cheap-module-source-map)                  [string]\n  -d           shortcut for --debug --devtool eval-cheap-module-source-map\n               --output-pathinfo                                       [boolean]\n  -p           shortcut for --optimize-minimize --define\n               process.env.NODE_ENV=\"production\" \n\n                      [boolean]\n  --progress   Print compilation progress in percentage                [boolean]\n</code>", "<code>npm install extended-define-webpack-plugin --save-dev.\n</code>", "<code>#if (DEBUG)\n        Console.WriteLine(\"Debugging is enabled.\");\n#endif\n</code>", "<code>var webpack = require('webpack')\n\nlet webpackConfig = (env) =&gt; { // Passing envirmonment through\n                                // function is important here\n    return {\n        entry: {\n        },\n\n        output: {\n        },\n\n        plugins: [\n        ],\n\n        module: {\n        },\n\n        resolve: {\n        }\n\n    }\n};\n\nmodule.exports = webpackConfig;\n</code>", "<code>plugins: [\n    new webpack.EnvironmentPlugin({\n       NODE_ENV: 'development',\n       }),\n]\n</code>", "<code>plugins</code>", "<code>    new webpack.DefinePlugin({\n        'NODE_ENV': JSON.stringify(env.NODE_ENV || 'development')\n    }),\n</code>", "<code>env.NODE_ENV</code>", "<code>webpack --env.NODE_ENV=development\n\n// OR\n\nwebpack --env.NODE_ENV development\n</code>", "<code>NODE_ENV</code>", "<code>env.dev</code>", "<code>env.prod</code>", "<code>require('dotenv').config();\nconst API = process.env.API ## which will store the value from .env file\n</code>", "<code>let config = require('./settings.json');\nif (__PROD__) {\n  config = require('./settings-prod.json');\n}\n\nconst envVars = {};\nObject.keys(config).forEach((key) =&gt; {\n  envVars[key] = JSON.stringify(config[key]);\n});\n\nnew webpack.DefinePlugin({\n  'process.env': envVars\n}),\n</code>", "<code>process.env.NODE_ENV = 'production';</code>"], "path": "stack.gulp"}, {"tags": ["twitter-bootstrap-3", "glyphicons"], "creation_date": 1377126008, "body_markdown": "I downloaded bootstrap 3.0 and can&#39;t get the glyphicons to work. I get some kind of &quot;E003&quot; error. Any ideas why this is happening? I tried both locally and online and I still get the same problem.", "last_edit_date": 1436427495, "up_vote_count": 313, "link": "https://stackoverflow.com/questions/18369036/bootstrap-3-glyphicons-are-not-working", "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1377126655, "answer_id": 18369117, "path": "stack.gulp.answer", "score": 224, "up_vote_count": 225, "is_accepted": false, "last_activity_date": 1380892594, "last_edit_date": 1495540056, "body_markdown": "Note to readers: be sure to read [@user2261073&#39;s comment](https://stackoverflow.com/questions/18369036/bootstrap-3-glyphicons-not-working/18369117#comment26972465_18369117) and [@Jeff&#39;s answer](https://stackoverflow.com/a/18474869/247702) concerning a bug in the customizer. It&#39;s likely the cause of your problem.\r\n\r\n----------\r\n\r\nThe font file isn&#39;t being loaded correctly. Check if the files are in their expected location.\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    @font-face {\r\n      font-family: &#39;Glyphicons Halflings&#39;;\r\n      src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);\r\n      src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }\r\n\r\nAs indicated by Daniel, it might also be a mimetype issue. Chrome&#39;s dev tools show downloaded fonts in the network tab:\r\n\r\n![chrome network tab font download][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/35vy5.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1377635502, "answer_id": 18474869, "path": "stack.gulp.answer", "score": 453, "up_vote_count": 453, "is_accepted": false, "last_activity_date": 1378266553, "last_edit_date": 1378266553, "body_markdown": "I was having the same issue and couldn&#39;t find any information about it except in the hidden comments on this page.  My font files were loading just fine according to Chrome, but the icons weren&#39;t displaying properly.  I&#39;m making this an answer so it will hopefully help others.\r\n\r\nSomething was wrong with the font files that I downloaded from Bootstrap 3&#39;s customizer tool.  To get the correct fonts, go to the [Bootstrap homepage][1] and download the full .zip file.  Extract the four font files from there to your fonts directory and everything should work.\r\n\r\n\r\n  [1]: http://getbootstrap.com/"}, {"tags": [], "down_vote_count": 2, "creation_date": 1380189792, "answer_id": 19025198, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1380189792, "body_markdown": "This is due to wrong coding in bootstrap.css and bootstrap.min.css. When you download Bootstrap 3.0 from the Customizer the following code is missing:\r\n\r\n    @font-face {\r\n      font-family: &#39;Glyphicons Halflings&#39;;\r\n      src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);\r\n      src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }\r\n\r\nSince this is the main code for using Glyphicons, it won&#39;t work ofc...\r\n\r\nDownload the css-files from the full package and this code will be implemented."}, {"tags": [], "down_vote_count": 0, "creation_date": 1380996358, "answer_id": 19201015, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1380996358, "body_markdown": "Do you have all below files in your fonts directory \r\n\r\n    glyphicons-halflings-regular.eot\r\n    glyphicons-halflings-regular.svg\r\n    glyphicons-halflings-regular.ttf\r\n    glyphicons-halflings-regular.woff"}, {"tags": [], "down_vote_count": 0, "creation_date": 1381521092, "answer_id": 19326135, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1381521092, "body_markdown": "As @Stijn described, the default location in `Bootstrap.css` is incorrect when installing this package from `Nuget`.\r\n\r\nChange this section to look like this:\r\n\r\n    @font-face {\r\n      font-family: &#39;Glyphicons Halflings&#39;;\r\n      src: url(&#39;Content/fonts/glyphicons-halflings-regular.eot&#39;);\r\n      src: url(&#39;Content/fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded- opentype&#39;), url(&#39;Content/fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;Content/fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;Content/fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }"}, {"tags": [], "down_vote_count": 1, "creation_date": 1382860042, "answer_id": 19615799, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1382860042, "body_markdown": "Download full/Non customized package from there site and replace your fonts file with non customized packages fonts. Its will fixed."}, {"tags": [], "down_vote_count": 0, "creation_date": 1382980367, "answer_id": 19640975, "path": "stack.gulp.answer", "score": 74, "up_vote_count": 74, "is_accepted": false, "last_activity_date": 1440665679, "last_edit_date": 1440665679, "body_markdown": "In my case I was getting a 404 for ***glyphicons-halflings-regular.woff***, and non visible glyphicons on mobile browsers.\r\n\r\n\r\nLooks like there is some confusion about the MIME type for woff, more than one MIME type being accepted by different browsers, but the [W3C says][1]:\r\n\r\n    application/font-woff\r\n\r\nEdit: After testing the following MIME type for woff works on all browsers currently:\r\n\r\n    application/x-font-woff\r\n\r\nEdit: Latest version of Bootstrap at this time (3.3.5) uses .woff2 fonts with the same initial result as .woff, the W3C still [defining the spec][2] but at the moment the MIME type seems to be:\r\n\r\n    application/font-woff2\r\n\r\n\r\n  [1]: http://www.w3.org/TR/WOFF/#appendix-b\r\n  [2]: http://dev.w3.org/webfonts/WOFF2/spec/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1388125984, "answer_id": 20796011, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1388125984, "body_markdown": "I had this problem and it was caused by the variables.less file. Overriding it to set the icon-font-path value solved the problem.\r\n\r\nThe file structured looks like this:\r\n\r\n    \\Content\r\n            \\Bootstrap\r\n            \\Fonts\r\n     styles.less\r\n     variables.less\r\n\r\nAdding my own variables.less file in the root of Content and referencing this in styles.less resolved the 404 error.\r\n\r\nVariables.less contains:\r\n\r\n    @icon-font-path:          &quot;fonts/&quot;;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1388156144, "answer_id": 20802762, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1388156144, "body_markdown": "I got Bootstrap from NuGet. When I published my site the glyphs didn&#39;t work.\r\n\r\nIn my case I got it working by setting the Build Action for each of the font files to &#39;Content&#39; and set them to &#39;Copy Always&#39;. \r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1388323140, "answer_id": 20825558, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1388323140, "body_markdown": "Another problem/solution may be having this Bootstrap 2.x code:\r\n\r\n\r\n    &lt;button class=&quot;btn&quot; ng-click=&quot;open()&quot;&gt;&lt;i class=&quot;icon-calendar&quot;&gt;&lt;/i&gt;&lt;/button&gt;\r\n\r\nand when migrating based on the [guide][1] (`.icon-*   ---&gt; .glyphicon .glyphicon-*`):\r\n\r\n    &lt;button class=&quot;btn btn-default&quot; ng-click=&quot;open()&quot;&gt;&lt;i class=&quot;glyphicon-calendar&quot;&gt;&lt;/i&gt;&lt;/button&gt;\r\n\r\nyou forget to add the icon class (containing the font reference):\r\n\r\n    &lt;button class=&quot;btn btn-default&quot; ng-click=&quot;open()&quot;&gt;&lt;i class=&quot;glyphicon glyphicon-calendar&quot;&gt;&lt;/i&gt;&lt;/button&gt;\r\n\r\n\r\n  [1]: http://getbootstrap.com/getting-started/#migration-classes"}, {"tags": [], "down_vote_count": 3, "creation_date": 1390338182, "answer_id": 21269044, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1390338182, "body_markdown": "The problem I was facing involved Mac/PC conversion. I received a template from our MAc developers that had images, fonts, glyphicons and everything else you can think of. The problem can be seen when you load the files on to a PC. The filenames will be green by default. This means that they will not work. You will get raw HTML with broken links.\r\n\r\nHere&#39;s the quick fix. Zip all of the files you received, and extract them into a different folder. All file names will now be black and will work perfectly.\r\n\r\nGood luck."}, {"tags": [], "down_vote_count": 2, "creation_date": 1390830908, "answer_id": 21382680, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1390830908, "body_markdown": "It&#39;s looks like an UTF char problem in your css. Just update your bootstrap css file with the [new one][1].\r\n\r\n\r\n  [1]: http://getbootstrap.com/dist/css/bootstrap.css"}, {"tags": [], "down_vote_count": 1, "creation_date": 1392216841, "answer_id": 21731336, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1471267363, "last_edit_date": 1471267363, "body_markdown": "Check if it is `glyphicons-halflings-regular.woff` and not `glyphiconshalflings-regular.woff`"}, {"tags": [], "down_vote_count": 5, "creation_date": 1392627816, "answer_id": 21824711, "path": "stack.gulp.answer", "score": -4, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1471264130, "last_edit_date": 1471264130, "body_markdown": "If you for example want the icon of glyphicon-chevron-left \r\n\r\nTry adding `class=&quot;glyphicon glyphicon-chevron-left&quot;`\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1392889288, "answer_id": 21903827, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1392889288, "body_markdown": "I had to create some rewrite conditions to allow them:\r\n\r\n    RewriteCond %{REQUEST_URI} !(^.+\\.ttf)\r\n    RewriteCond %{REQUEST_URI} !(^.+\\.eot)\r\n    RewriteCond %{REQUEST_URI} !(^.+\\.svg)\r\n    RewriteCond %{REQUEST_URI} !(^.+\\.woff)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1393806682, "answer_id": 22135674, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1394933031, "last_edit_date": 1394933031, "body_markdown": "This answer is for anyone using Nancy (NancyFx).\r\n\r\nI have an ASP.NET-hosted NancyFX app, and I obtained Boostrap via NuGet.\r\n\r\nMy glyphicons were not working, but it turned out not to be an issue of bad font files, incorrect CSS relative directory paths, or any of the other things mentioned in the other answers.\r\n\r\nThe problem was that I was missing a convention, telling Nancy where to look for content. Once I realized that, the solution was simply to add the following overload to my bootstrapper file:\r\n\r\n    protected override void ConfigureConventions(NancyConventions nancyConventions)\r\n    {\r\n        base.ConfigureConventions(nancyConventions);\r\n        nancyConventions.StaticContentsConventions.Add(\r\n            StaticContentConventionBuilder.AddDirectory(&quot;/fonts&quot;));\r\n        nancyConventions.StaticContentsConventions.Add(\r\n            StaticContentConventionBuilder.AddDirectory(&quot;/Scripts&quot;));\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1394253657, "answer_id": 22265110, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1394253657, "last_edit_date": 1495539204, "body_markdown": "Below is what fixed it for me. I was getting &quot;bad URI&quot; error using in Firebug console. The icons were showing up as E### numbers. I had to add a .htaccess file in my &#39;fonts&#39; directory.\r\n````\r\n&lt;FilesMatch &quot;\\.(ttf|otf|eot|woff)$&quot;&gt;\r\n  &lt;IfModule mod_headers.c&gt;\r\n    Header set Access-Control-Allow-Origin &quot;*&quot;\r\n  &lt;/IfModule&gt;\r\n&lt;/FilesMatch&gt;\r\n````\r\nPossible duplicate of: https://stackoverflow.com/questions/15024333/downloadable-font-on-firefox-bad-uri-or-cross-site-access-not-allowed/15025681#15025681"}, {"tags": [], "down_vote_count": 0, "creation_date": 1394278749, "answer_id": 22268827, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1394279927, "last_edit_date": 1394279927, "body_markdown": "You must to set by this order:\r\n\r\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;path/bootstrap.min.css&quot;&gt; \r\n    &lt;style type=&quot;text/css&quot;&gt; \r\n         @font-face {   font-family: &#39;Glyphicons Halflings&#39;;   \r\n         src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);   \r\n         src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), \r\n         url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;),  \r\n         url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), \r\n         url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;); } \r\n    &lt;/style&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1396003581, "answer_id": 22710638, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1396003581, "body_markdown": "What worked for me was replacing routes from:\r\n\r\n    @font-face {\r\n      font-family: &#39;Glyphicons Halflings&#39;;\r\n      src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);\r\n      src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }\r\n\r\nto \r\n\r\n    @font-face {\r\n      font-family: &#39;Glyphicons Halflings&#39;;\r\n    \r\n      src: url(&#39;/assets/glyphicons-halflings-regular.eot&#39;);\r\n      src: url(&#39;/assets/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;),\r\n      url(&#39;/assets/fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;),\r\n      url(&#39;/assets/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;),\r\n      url(&#39;/assets/glyphicons-halflings-regular.svg#glyphicons_halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1396161416, "answer_id": 22741062, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1396162680, "last_edit_date": 1396162680, "body_markdown": "I modified my less variables.less file \r\nI modified the variable\r\n\r\n    @icon-font-path:          &quot;fonts/&quot;;    \r\n\r\nthe original was \r\n\r\n    @icon-font-path:          &quot;../fonts/&quot;; \r\n\r\nIt was causing a problem    "}, {"tags": [], "down_vote_count": 0, "creation_date": 1398863216, "answer_id": 23388953, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1398863216, "body_markdown": "IIS will not server `.woff` files by default, so in IIS you&#39;ll need to add a `&lt;mimeMap&gt;` entry to your `web.config` file;\r\n\r\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n    &lt;configuration&gt;\r\n        &lt;system.webServer&gt;\r\n            &lt;staticContent&gt;\r\n                &lt;mimeMap fileExtension=&quot;.woff&quot; mimeType=&quot;application/x-woff&quot; /&gt;\r\n            &lt;/staticContent&gt;\r\n        &lt;/system.webServer&gt;\r\n    &lt;/configuration&gt;\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1399227722, "answer_id": 23459904, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1399228376, "last_edit_date": 1399228376, "body_markdown": "i had a box width code \\e094 for glyphicon-arrow-down, in fact i solved the problem adding **glyphicon** in css class like that :\r\n          \r\n    &lt;i class=&quot;glyphicon  glyphicon-arrow-down&quot;&gt;&lt;/i&gt;\r\n\r\n\r\n\r\nif it could help someone ..."}, {"tags": [], "down_vote_count": 0, "creation_date": 1400072631, "answer_id": 23655593, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1400072631, "body_markdown": "Make sure you aren&#39;t over specifying the font family, for example\r\n\r\n    *{font-family: Verdana;}\r\n\r\nwill remove the halflings font from i elements. "}, {"tags": [], "down_vote_count": 1, "creation_date": 1403288767, "answer_id": 24333476, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1403288767, "body_markdown": "This is how you include the icon in bootstrap 3\r\n\r\n    &lt;span class=&quot;glyphicon glyphicon-bell&quot;&gt;&lt;/span&gt;\r\n\r\nhttp://glyphicons.bootstrapcheatsheets.com/\r\n\r\nHope that helps."}, {"tags": [], "down_vote_count": 0, "creation_date": 1409770162, "answer_id": 25651601, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1409770162, "body_markdown": "Note: below is likely a niche scenario, but I wanted to share it in case someone else might find it useful.  \r\n\r\nIn a rails project, we are reusing quite a bit through a gem that is a Rails engine using `bootstrap-sass`.  All was well in the main project with the exception of the glyphicon font path resolution. \r\n\r\n    GET http://0.0.0.0:3000/fonts/bootstrap/glyphicons-halflings-regular.woff 404 (Not Found) \r\n\r\nWe found that `$bootstrap-sass-asset-helper` was `false` during the resolution when we expected it to be true, so the path was different.\r\n\r\nWe caused the `$bootstrap-sass-asset-helper` to be initialized in the engine gem by doing:\r\n\r\n    // explicit sprockets import to get glyphicon font paths correct\r\n    @import &#39;bootstrap-sprockets&#39;;\r\n    @import &quot;bootstrap/variables&quot;;\r\n\r\ne.g. this caused the path to resolve to:\r\n\r\n    /assets/bootstrap/glyphicons-halflings-regular.woff\r\n\r\nAgain, this shouldn&#39;t be necessary in any normal rails project using `bootstrap-sass`, we just happen to be reusing a lot of views and this worked out for us.  Hopefully this can assist someone else."}, {"tags": [], "down_vote_count": 0, "creation_date": 1410976888, "answer_id": 25897350, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1410976888, "body_markdown": "If you&#39;re using a CDN for the bootstrap CSS files it may be the culprit, as the glyph files (e.g. *glyphicons-halflings-regular.woff*) are taken from the CDN as well. \r\n\r\nIn my case, I faced this issue using Microsoft&#39;s CDN, but switching to [MaxCDN][1] resolved it.\r\n\r\n\r\n  [1]: https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"}, {"tags": [], "down_vote_count": 0, "creation_date": 1412259100, "answer_id": 26162741, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 21, "is_accepted": true, "last_activity_date": 1413752002, "last_edit_date": 1413752002, "body_markdown": "I was looking through this old question of mine and since what was supposed to be the correct answer up until now, was given by me in the comments, I think I also deserve the credit for it.\r\n\r\nThe problem lied in the fact that the **glyphicon font files downloaded from bootstrap&#39;s customizer tool were not the same with the ones that are downloaded from the redirection found at bootstrap&#39;s homepage.** The ones that are working as they should are the ones that can be downloaded from the following link:\r\n\r\n    http://getbootstrap.com/getting-started/#download\r\n\r\nAnyone having problems with old bad customizer files should overwrite the fonts from the link above."}, {"tags": [], "down_vote_count": 0, "creation_date": 1415029775, "answer_id": 26717789, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1415029775, "body_markdown": "I had this problem when using a web fragment in Eclipse. The font files were corrupted when packed in to the web fragment jar. \r\nCopying the font files to the project where the fragment was used solved the problem."}, {"tags": [], "down_vote_count": 0, "creation_date": 1415225108, "answer_id": 26768034, "path": "stack.gulp.answer", "score": 44, "up_vote_count": 44, "is_accepted": false, "last_activity_date": 1490632513, "last_edit_date": 1490632513, "body_markdown": "**-If you followed the highest rated answer and it&#39;s still not working**: \r\n\r\nThe `Font` folder **MUST** be on the same level as your CSS folder.  Fixing the path in `bootstrap.css` **will not** work.  \r\n\r\n`Bootstrap.css` has to navigate to the `Fonts` folder *exactly* like this: \r\n\r\n    @font-face {\r\n        font-family: &#39;Glyphicons Halflings&#39;;\r\n  \r\n        src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);\r\n        src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1423061080, "answer_id": 28324165, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1424962312, "last_edit_date": 1424962312, "body_markdown": "Azure Websites are missing *woff* MIME configuration. You must add following entry into web.config\r\n\r\n    &lt;configuration&gt;\r\n        &lt;system.webServer&gt;\r\n            &lt;staticContent&gt;\r\n                &lt;mimeMap fileExtension=&quot;woff&quot; mimeType=&quot;application/font-woff&quot; /&gt;\r\n            &lt;/staticContent&gt;\r\n        &lt;/system.webServer&gt;\r\n    &lt;/configuration&gt; \r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1434113478, "answer_id": 30803578, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1434113478, "last_edit_date": 1495540056, "body_markdown": "If the other solutions aren&#39;t working, you may want to try importing Glyphicons from an external source, rather than relying on Bootstrap to do everything for you. To do this:\r\n\r\nYou can either do this in HTML:\r\n\r\n    &lt;link href=&quot;//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot; rel=&quot;stylesheet&quot;&gt;\r\n\r\nOr CSS:\r\n\r\n    @import url(&quot;//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot;)\r\n\r\nCredit to edsiofi from this thread: https://stackoverflow.com/questions/18222849/bootstrap-3-glyphicons-cdn\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1437411795, "answer_id": 31522226, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1437412111, "last_edit_date": 1437412111, "body_markdown": "This was the reason, why the icons didn&#39;t show up for me:\r\n\r\n    * {\r\n        arial, sans-serif !important;\r\n    }\r\n\r\nAfter i have removed this part of my `CSS`, everything worked like it should. The !important was the one causing trouble."}, {"tags": [], "down_vote_count": 0, "creation_date": 1437517048, "answer_id": 31550611, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1437517459, "last_edit_date": 1437517459, "body_markdown": "This is very much a long shoot, but it was my case and since it is not here already.\r\n\r\nIf you are compiling Twitter Bootstrap from SASS using `gulp-sass` or `grunt-sass` ie. `node-sass`. Make sure your node modules are up to date, especially if your are working on a rather old project. \r\n\r\nIt turns out that as of some time back the SASS directive `@at-root` is used in the definition of the `@font-face` in glyphicons, see https://github.com/twbs/bootstrap-sass/blob/b01ab4942233bd7316a0634472e1243b13fb9f46/assets/stylesheets/bootstrap/_glyphicons.scss.\r\n\r\nThe gotcha here is that `node-sass` ie. `libsass` do not support the `@at-root` directive if it is too old. If this is the case you will get a `@font-face` wrapped in a `@at-root` which the browser have no idea what to do with. The result of this is that no font will be downloaded and you will likely see garbage instead of icons."}, {"tags": [], "down_vote_count": 0, "creation_date": 1445490521, "answer_id": 33273776, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1445490521, "body_markdown": "    @font-face {\r\n         font-family: &#39;Glyphicons Halflings&#39;;\r\n          src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);\r\n          src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;)         format(&#39;embedded-opentype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;);}\r\n\r\nI am using bootstrap with namespace and glyphicons not working but after adding above line in code glyphicons working fine."}, {"tags": [], "down_vote_count": 0, "creation_date": 1447681319, "answer_id": 33736811, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1447681319, "body_markdown": "I just renamed the font from bootstrap.css using Ctrl+c, Ctrl+v and it worked."}, {"tags": [], "down_vote_count": 0, "creation_date": 1449659594, "answer_id": 34177384, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1449659594, "body_markdown": "Here is what official documentation says regarding fonts not rendering.\r\n&lt;blockquote&gt;\r\nChanging the icon font location\r\nBootstrap assumes icon font files will be located in the ../fonts/ directory, relative to the compiled CSS files. Moving or renaming those font files means updating the CSS in one of three ways:\r\n\r\nChange the @icon-font-path and/or @icon-font-name variables in the source Less files.\r\nUtilize the relative URLs option provided by the Less compiler.\r\nChange the url() paths in the compiled CSS.\r\nUse whatever option best suits your specific development setup.\r\n&lt;/blockquote&gt;\r\nOther than that it could be that you missed to copy the **fonts folder to the root directory**"}, {"tags": [], "down_vote_count": 0, "creation_date": 1449746747, "answer_id": 34200684, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1449746747, "body_markdown": "I work **with VS2015, ASP.NET MVC 6 (RC)** and also had problems (error messages to the reference, icons not showed) with the gliphicons in production (where it has worked in VS (development)).  \r\nThe reason seems to be, that the MS cdn page is down (at least right now and from Switzerland): \r\nhttp://www.websitedown.info/ajax.aspnetcdn.com\r\n\r\nTherefore (as temporary workaround), I have changed the external reference in _Layout.cshtml (under environment names=&quot;Staging,Production&quot;) to &quot;internal&quot; reference:  \r\nfrom:\r\n\r\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/css/bootstrap.min.css&quot;\r\n\r\nto \r\n \r\n\r\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;~/lib/bootstrap/dist/css/bootstrap.min.css&quot;\r\n\r\nAfter doing that, it works again.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1453996658, "answer_id": 35066143, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1453997738, "last_edit_date": 1453997738, "body_markdown": "I also faced the same problem, `CSS` was fine and there was no issue. \r\nIt also had all the fonts included.\r\n \r\nBut the problem got resolved only after I installed the &quot;`glyphicons-halflings-regular.ttf`&quot; I started getting icons properly on the UI."}, {"tags": [], "down_vote_count": 0, "creation_date": 1457135703, "answer_id": 35808201, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1457292141, "last_edit_date": 1457292141, "body_markdown": "None of the previous answers works for me....\r\n\r\nThe problem was that I was trying `&lt;span class=&quot;icones glyphicon glyphicon-pen&quot;&gt;`\r\nand after one hour I realized that this icon **was not included in the Bootstrap pack**! While the envelope icon was working fine..\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1457688556, "answer_id": 35936457, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1457688556, "body_markdown": "You must to set by this order:\r\n\r\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;path/bootstrap.min.css&quot;&gt;\r\n     &lt;style type=&quot;text/css&quot;&gt;\r\n          @font-face {\r\n      font-family: &#39;Glyphicons Halflings&#39;;\r\n            src: url(&#39;../fonts/glyphicons-halflings-regular.eot&#39;);\r\n            src: url(&#39;../fonts/glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;),       url(&#39;../fonts/glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;),        url(&#39;../fonts/glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;),       url(&#39;../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular&#39;) format(&#39;svg&#39;);\r\n    }\r\n     &lt;/style&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1458867308, "answer_id": 36212476, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1459852120, "last_edit_date": 1459852120, "body_markdown": "I was having the same problem where the browser was unable to find the font files, and my issue was due to exclusions in my .htaccess file that was whitelisting files that shouldn&#39;t be sent to `index.php` for processing. As the font file couldn&#39;t be loaded the characters were replaced with BLOB.\r\n    \r\n    RewriteCond %{REQUEST_URI} !\\.(jpg|png|gif|svg|css|js|ico|rss|xml|json)$\r\n    RewriteCond %{REQUEST_URI} !-d\r\n    RewriteRule ^ index.php [L,QSA]\r\n\r\nAs you can see, files like images, rss, and xml are excluded from the rewrite, but the font files are `.woff` and `.woff2` files, so these also needed adding to the whitelist.\r\n    \r\n    RewriteCond %{REQUEST_URI} !\\.(jpg|png|gif|svg|css|js|ico|rss|xml|json|woff|woff2)$\r\n    RewriteCond %{REQUEST_URI} !-d\r\n    RewriteRule ^ index.php [L,QSA]\r\n\r\nAdding `woff` and `woff2` to the whitelist allows the font files to be loaded, and the glyphicons should then display properly."}, {"tags": [], "down_vote_count": 0, "creation_date": 1483939387, "answer_id": 41541485, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1483939387, "body_markdown": "I&#39;m working with Angular2 and SCSS, as a best practice I copied to my project only the bootstrap files that I&#39;m modifying the other are imported from **node_modules**.. the only problem was with Glyphicons.\r\nAfter many tries I found that the best solution to me is to copy the font files to my project and set directly this path to **$ icon-font-path** as shown in the image:\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/X0Rac.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1505224979, "answer_id": 46178518, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1505224979, "body_markdown": "If you use Visual Studio (2015, in my case) to create an ASP.NET Webforms Web Application,  with Bootstrap theming, by default the glyphicons are stored in the /fonts folder off the project root.\r\n\r\nIf you start rearranging your bootstrap files under /Content into subfolders (to support multiple themes, for example), all the references within bootstrap to `../fonts/` will break.  You can either move the fonts folder to the appropriate relative path under `/Content`, or else rename all the references from `../fonts` to `/fonts`."}, {"tags": [], "down_vote_count": 0, "creation_date": 1514896376, "answer_id": 48061108, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1519299471, "last_edit_date": 1519299471, "body_markdown": "In case someone else ended up here and using Bootstrap &gt;= v4.0: glyphicon support is dropped\r\n\r\n&gt; Dropped the Glyphicons icon font. If you need icons, some options are:\r\n&gt; \r\n&gt; the upstream version of [Glyphicons][1]\r\n&gt; \r\n&gt; [Octicons][2]\r\n&gt; \r\n&gt; [Font Awesome][3]\r\n\r\nSource: https://v4-alpha.getbootstrap.com/migration/#components\r\n\r\nIf you want to use glyphicons you need to download it separately.\r\n\r\nI personally tried Font Awesome and it is quite good. Adding icons is similar to glypicon way:\r\n\r\n    &lt;i class=&quot;fas fa-chess&quot;&gt;&lt;/i&gt;\r\n\r\n\r\n\r\n\r\n  [1]: https://glyphicons.com/\r\n  [2]: https://octicons.github.com/\r\n  [3]: http://fontawesome.io/"}], "title": "Bootstrap 3 Glyphicons are not working", "view_count": 530896, "answer_count": 44, "code_snippet": ["<code>@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url('../fonts/glyphicons-halflings-regular.eot');\n  src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\n}\n</code>", "<code>application/font-woff\n</code>", "<code>application/x-font-woff\n</code>", "<code>application/font-woff2\n</code>", "<code>application/x-font-woff</code>", "<code>Font</code>", "<code>bootstrap.css</code>", "<code>Bootstrap.css</code>", "<code>Fonts</code>", "<code>@font-face {\n    font-family: 'Glyphicons Halflings';\n\n    src: url('../fonts/glyphicons-halflings-regular.eot');\n    src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');\n}\n</code>", "<code>&lt;link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css\" rel=\"stylesheet\"&gt;\n</code>", "<code>@import url(\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css\")\n</code>", "<code>http://getbootstrap.com/getting-started/#download\n</code>", "<code>application/vnd.ms-fontobject</code>", "<code>application/x-font-woff</code>", "<code>application/x-font-ttf</code>", "<code>image/svg+xml</code>", "<code>&lt;configuration&gt;\n    &lt;system.webServer&gt;\n        &lt;staticContent&gt;\n            &lt;mimeMap fileExtension=\"woff\" mimeType=\"application/font-woff\" /&gt;\n        &lt;/staticContent&gt;\n    &lt;/system.webServer&gt;\n&lt;/configuration&gt; \n</code>", "<code>woff, woff2 and ttf</code>", "<code>Bootstrap.css</code>", "<code>Nuget</code>", "<code>@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url('Content/fonts/glyphicons-halflings-regular.eot');\n  src: url('Content/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded- opentype'), url('Content/fonts/glyphicons-halflings-regular.woff') format('woff'), url('Content/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('Content/fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\n}\n</code>", "<code>.woff</code>", "<code>&lt;mimeMap&gt;</code>", "<code>web.config</code>", "<code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration&gt;\n    &lt;system.webServer&gt;\n        &lt;staticContent&gt;\n            &lt;mimeMap fileExtension=\".woff\" mimeType=\"application/x-woff\" /&gt;\n        &lt;/staticContent&gt;\n    &lt;/system.webServer&gt;\n&lt;/configuration&gt;\n</code>", "<code>@icon-font-path:          \"fonts/\";    \n</code>", "<code>@icon-font-path:          \"../fonts/\"; \n</code>", "<code>$icon-font-path: \"/assets/bootstrap/\"</code>", "<code>@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url('../fonts/glyphicons-halflings-regular.eot');\n  src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\n}\n</code>", "<code>glyphicons-halflings-regular.eot\nglyphicons-halflings-regular.svg\nglyphicons-halflings-regular.ttf\nglyphicons-halflings-regular.woff\n</code>", "<code>&lt;button class=\"btn\" ng-click=\"open()\"&gt;&lt;i class=\"icon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n</code>", "<code>.icon-*   ---&gt; .glyphicon .glyphicon-*</code>", "<code>&lt;button class=\"btn btn-default\" ng-click=\"open()\"&gt;&lt;i class=\"glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n</code>", "<code>&lt;button class=\"btn btn-default\" ng-click=\"open()\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n</code>", "<code>\n&lt;FilesMatch \"\\.(ttf|otf|eot|woff)$\"&gt;\n  &lt;IfModule mod_headers.c&gt;\n    Header set Access-Control-Allow-Origin \"*\"\n  &lt;/IfModule&gt;\n&lt;/FilesMatch&gt;\n</code>", "<code>* {\n    arial, sans-serif !important;\n}\n</code>", "<code>CSS</code>", "<code>gulp-sass</code>", "<code>grunt-sass</code>", "<code>node-sass</code>", "<code>@at-root</code>", "<code>@font-face</code>", "<code>node-sass</code>", "<code>libsass</code>", "<code>@at-root</code>", "<code>@font-face</code>", "<code>@at-root</code>", "<code>bootstrap-sass</code>", "<code>GET http://0.0.0.0:3000/fonts/bootstrap/glyphicons-halflings-regular.woff 404 (Not Found) \n</code>", "<code>$bootstrap-sass-asset-helper</code>", "<code>false</code>", "<code>$bootstrap-sass-asset-helper</code>", "<code>// explicit sprockets import to get glyphicon font paths correct\n@import 'bootstrap-sprockets';\n@import \"bootstrap/variables\";\n</code>", "<code>/assets/bootstrap/glyphicons-halflings-regular.woff\n</code>", "<code>bootstrap-sass</code>", "<code>*{font-family: Verdana;}\n</code>", "<code>index.php</code>", "<code>RewriteCond %{REQUEST_URI} !\\.(jpg|png|gif|svg|css|js|ico|rss|xml|json)$\nRewriteCond %{REQUEST_URI} !-d\nRewriteRule ^ index.php [L,QSA]\n</code>", "<code>.woff</code>", "<code>.woff2</code>", "<code>RewriteCond %{REQUEST_URI} !\\.(jpg|png|gif|svg|css|js|ico|rss|xml|json|woff|woff2)$\nRewriteCond %{REQUEST_URI} !-d\nRewriteRule ^ index.php [L,QSA]\n</code>", "<code>woff</code>", "<code>woff2</code>", "<code>\\Content\n        \\Bootstrap\n        \\Fonts\n styles.less\n variables.less\n</code>", "<code>@icon-font-path:          \"fonts/\";\n</code>", "<code>&lt;link rel=\"stylesheet\" href=\"path/bootstrap.min.css\"&gt; \n&lt;style type=\"text/css\"&gt; \n     @font-face {   font-family: 'Glyphicons Halflings';   \n     src: url('../fonts/glyphicons-halflings-regular.eot');   \n     src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), \n     url('../fonts/glyphicons-halflings-regular.woff') format('woff'),  \n     url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), \n     url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg'); } \n&lt;/style&gt;\n</code>", "<code>@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url('../fonts/glyphicons-halflings-regular.eot');\n  src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\n}\n</code>", "<code>@font-face {\n  font-family: 'Glyphicons Halflings';\n\n  src: url('/assets/glyphicons-halflings-regular.eot');\n  src: url('/assets/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'),\n  url('/assets/fonts/glyphicons-halflings-regular.woff') format('woff'),\n  url('/assets/glyphicons-halflings-regular.ttf') format('truetype'),\n  url('/assets/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');\n}\n</code>", "<code>&lt;i class=\"glyphicon  glyphicon-arrow-down\"&gt;&lt;/i&gt;\n</code>", "<code>&lt;span class=\"glyphicon glyphicon-bell\"&gt;&lt;/span&gt;\n</code>", "<code>@font-face {\n     font-family: 'Glyphicons Halflings';\n      src: url('../fonts/glyphicons-halflings-regular.eot');\n      src: url('../fonts/glyphicons-halflings-regular.eot?#iefix')         format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');}\n</code>", "<code>&lt;link rel=\"stylesheet\" href=\"path/bootstrap.min.css\"&gt;\n &lt;style type=\"text/css\"&gt;\n      @font-face {\n  font-family: 'Glyphicons Halflings';\n        src: url('../fonts/glyphicons-halflings-regular.eot');\n        src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'),       url('../fonts/glyphicons-halflings-regular.woff') format('woff'),        url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'),       url('../fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\n}\n &lt;/style&gt;\n</code>", "<code>&lt;i class=\"fas fa-chess\"&gt;&lt;/i&gt;\n</code>"], "path": "stack.gulp"}, {"tags": ["windows", "node.js", "install"], "creation_date": 1406969108, "body_markdown": "I have Windows 7 32-bit. I installed the latest [Node.js][1] 32 bit. When I try to run the command `npm install jquery`, I receive the error:\r\n\r\n&gt; Error: ENOENT, stat &#39;C:\\Users\\RT\\AppData\\Roaming\\npm \r\n\r\nHow does one resolve it?\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Node.js\r\n", "last_edit_date": 1417250506, "up_vote_count": 943, "link": "https://stackoverflow.com/questions/25093276/node-js-windows-error-enoent-stat-c-users-rt-appdata-roaming-npm", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1406984696, "answer_id": 25095327, "path": "stack.gulp.answer", "score": 1788, "up_vote_count": 1791, "is_accepted": true, "last_activity_date": 1423133716, "last_edit_date": 1423133716, "body_markdown": "Manually creating a folder named &#39;npm&#39; in the displayed path fixed the problem.\r\n\r\nMore information can be found on [Troubleshooting page][1]\r\n\r\n\r\n  [1]: https://github.com/npm/npm/wiki/Troubleshooting#error-enoent-stat-cusersuserappdataroamingnpm-on-windows-7"}, {"tags": [], "down_vote_count": 3, "creation_date": 1410257718, "answer_id": 25742097, "path": "stack.gulp.answer", "score": 102, "up_vote_count": 105, "is_accepted": false, "last_activity_date": 1417250602, "last_edit_date": 1417250602, "body_markdown": "I ran into the same problem while installing a package via npm. \r\n\r\nAfter creating the `npm` folder manually in `C:\\Users\\UserName\\AppData\\Roaming\\` that particular error was gone, but it gave similar multiple errors as it tried to create additional directories in the `npm` folder and failed. The issue was resolved after **running the command prompt as an administrator**.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1418295047, "answer_id": 27421047, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1418295047, "body_markdown": "Install a stable version instead of the latest one, I have downgrade my version to `node-v0.10.29-x86.msi` from `&#39;node-v0.10.33-x86.msi&#39;` and it is working well for me! \r\n\r\nhttp://blog.nodejs.org/2014/06/16/node-v0-10-29-stable/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1418684130, "answer_id": 27494648, "path": "stack.gulp.answer", "score": 87, "up_vote_count": 87, "is_accepted": false, "last_activity_date": 1419894109, "last_edit_date": 1419894109, "body_markdown": "This can also be fixed by installing a node package manually.\r\n\r\n    npm install npm -g\r\nThe process of doing that will setup all the required directories."}, {"tags": [], "down_vote_count": 0, "creation_date": 1419892433, "answer_id": 27697015, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1419892433, "body_markdown": "You can go to the **Start Menu** and search the Node.js icon and open the shell and then install anything with\r\n \r\n\r\n    install &lt;packagename&gt; -g"}, {"tags": [], "down_vote_count": 0, "creation_date": 1433821152, "answer_id": 30722593, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1433821152, "body_markdown": "I recommend setting an alternative location for your npm modules.\r\n\r\n    npm config set prefix C:\\Dev\\npm-repository\\npm --global \r\n    npm config set cache C:\\Dev\\npm-repository\\npm-cache --global  \r\n\r\nOf course you can set the location to wherever best suits.\r\n\r\nThis has worked well for me and gets around any permissions issues that you may encounter."}, {"tags": [], "down_vote_count": 0, "creation_date": 1470104758, "answer_id": 38710868, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1470104758, "body_markdown": "I needed a package from github that was written in typscript.  I did a git pull of the most recent version from the master branch into the root of my main project.  I then went into the directory and did an npm install so that the gulp commands would work that generates ES5 modules. Anyway, to make the long story short, my build process was trying to build files from this new folder so I had to move it out of my root.  This was causing these same errors."}], "title": "Node.js/Windows error: ENOENT, stat &#39;C:\\Users\\RT\\AppData\\Roaming\\npm&#39;", "view_count": 246985, "answer_count": 7, "code_snippet": ["<code>npm install jquery</code>", "<code>res.sendfile('pathSlightlyWrong/posts.html')</code>", "<code>npm</code>", "<code>C:\\Users\\UserName\\AppData\\Roaming\\</code>", "<code>npm</code>", "<code>npm install npm -g\n</code>", "<code>npm config set prefix C:\\Dev\\npm-repository\\npm --global \nnpm config set cache C:\\Dev\\npm-repository\\npm-cache --global  \n</code>", "<code>install &lt;packagename&gt; -g\n</code>", "<code>node-v0.10.29-x86.msi</code>", "<code>'node-v0.10.33-x86.msi'</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "gulp"], "creation_date": 1397255411, "body_markdown": "Normally in Gulp tasks look like this:\r\n\r\n    gulp.task(&#39;my-task&#39;, function() {\r\n    \treturn gulp.src(options.SCSS_SOURCE)\r\n    \t\t.pipe(sass({style:&#39;nested&#39;}))\r\n    \t\t.pipe(autoprefixer(&#39;last 10 version&#39;))\r\n    \t\t.pipe(concat(&#39;style.css&#39;))\r\n    \t\t.pipe(gulp.dest(options.SCSS_DEST));\r\n    });\r\n\r\n\r\nIs it possible to pass a command line flag to gulp (that&#39;s not a task) and have it run tasks conditionally based on that? For instance\r\n\r\n    $ gulp my-task -a 1\r\n\r\nAnd then in my gulpfile.js:\r\n    \r\n    gulp.task(&#39;my-task&#39;, function() {\r\n\t\t\tif (a == 1) {\r\n\t\t\t\tvar source = options.SCSS_SOURCE;\r\n\t\t\t} else {\r\n\t\t\t\tvar source = options.OTHER_SOURCE;\r\n\t\t\t}\r\n        \treturn gulp.src(source)\r\n        \t\t.pipe(sass({style:&#39;nested&#39;}))\r\n        \t\t.pipe(autoprefixer(&#39;last 10 version&#39;))\r\n        \t\t.pipe(concat(&#39;style.css&#39;))\r\n        \t\t.pipe(gulp.dest(options.SCSS_DEST));\r\n\t});", "last_edit_date": 1472030198, "up_vote_count": 335, "link": "https://stackoverflow.com/questions/23023650/is-it-possible-to-pass-a-flag-to-gulp-to-have-it-run-tasks-in-different-ways", "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1397354466, "answer_id": 23038290, "path": "stack.gulp.answer", "score": 497, "up_vote_count": 498, "is_accepted": true, "last_activity_date": 1397354466, "body_markdown": "Gulp doesn&#39;t offer any kind of util for that, but you can use one of the many command args parsers. I like [`yargs`](https://www.npmjs.org/package/yargs). Should be:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var argv = require(&#39;yargs&#39;).argv;\r\n\r\n    gulp.task(&#39;my-task&#39;, function() {\r\n        return gulp.src(argv.a == 1 ? options.SCSS_SOURCE : options.OTHER_SOURCE)\r\n            .pipe(sass({style:&#39;nested&#39;}))\r\n            .pipe(autoprefixer(&#39;last 10 version&#39;))\r\n            .pipe(concat(&#39;style.css&#39;))\r\n            .pipe(gulp.dest(options.SCSS_DEST));\r\n    });\r\n\r\nYou can also combine it with [`gulp-if`](https://github.com/robrich/gulp-if) to conditionally pipe the stream, very useful for dev vs. prod building:\r\n\r\n    var argv = require(&#39;yargs&#39;).argv,\r\n        gulpif = require(&#39;gulp-if&#39;),\r\n        rename = require(&#39;gulp-rename&#39;),\r\n        uglify = require(&#39;gulp-uglify&#39;);\r\n\r\n    gulp.task(&#39;my-js-task&#39;, function() {\r\n      gulp.src(&#39;src/**/*.js&#39;)\r\n        .pipe(concat(&#39;out.js&#39;))\r\n        .pipe(gulpif(argv.production, uglify()))\r\n        .pipe(gulpif(argv.production, rename({suffix: &#39;.min&#39;})))\r\n        .pipe(gulp.dest(&#39;dist/&#39;));\r\n    });\r\n\r\nAnd call with `gulp my-js-task` or `gulp my-js-task --production`."}, {"tags": [], "down_vote_count": 0, "creation_date": 1397575798, "answer_id": 23088183, "path": "stack.gulp.answer", "score": 97, "up_vote_count": 97, "is_accepted": false, "last_activity_date": 1397588398, "last_edit_date": 1397588398, "body_markdown": "In my project I use the following flag:\r\n\r\n    gulp styles --theme literature\r\n\r\nGulp offers an object `gulp.env` for that. It&#39;s deprecated in newer versions, so you must use gulp-util for that. The tasks looks like this:\r\n\r\n    var util = require(&#39;gulp-util&#39;);\r\n\r\n    gulp.task(&#39;styles&#39;, function() {\r\n      return gulp.src([&#39;src/styles/&#39; + (util.env.theme ? util.env.theme : &#39;main&#39;) + &#39;.scss&#39;])\r\n        .pipe(compass({\r\n            config_file: &#39;./config.rb&#39;,\r\n            sass   : &#39;src/styles&#39;,\r\n            css    : &#39;dist/styles&#39;,\r\n            style  : &#39;expanded&#39;\r\n\r\n        }))\r\n        .pipe(autoprefixer(&#39;last 2 version&#39;, &#39;safari 5&#39;, &#39;ie 8&#39;, &#39;ie 9&#39;, &#39;ff 17&#39;, &#39;opera 12.1&#39;, &#39;ios 6&#39;, &#39;android 4&#39;))\r\n        .pipe(livereload(server))\r\n        .pipe(gulp.dest(&#39;dist/styles&#39;))\r\n        .pipe(notify({ message: &#39;Styles task complete&#39; }));\r\n    });\r\n\r\nThe environment setting is available during all subtasks. So I can use this flag on the watch task too:\r\n\r\n    gulp watch --theme literature\r\n\r\nAnd my styles task also works.\r\n\r\nCiao\r\nRalf"}, {"tags": [], "down_vote_count": 0, "creation_date": 1400251037, "answer_id": 23698020, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1429258619, "last_edit_date": 1429258619, "body_markdown": "Here&#39;s a quick recipe I found:\r\n\r\n\r\ngulpfile.js\r\n----\r\n\r\n    var gulp   = require(&#39;gulp&#39;);\r\n\r\n    // npm install gulp yargs gulp-if gulp-uglify\r\n    var args   = require(&#39;yargs&#39;).argv;\r\n    var gulpif = require(&#39;gulp-if&#39;);\r\n    var uglify = require(&#39;gulp-uglify&#39;);\r\n    \r\n    var isProduction = args.env === &#39;production&#39;;\r\n    \r\n    gulp.task(&#39;scripts&#39;, function() {\r\n      return gulp.src(&#39;**/*.js&#39;)\r\n        .pipe(gulpif(isProduction, uglify())) // only minify if production\r\n        .pipe(gulp.dest(&#39;dist&#39;));\r\n    });\r\n\r\n\r\n\r\nCLI\r\n-\r\n    gulp scripts --env production\r\n\r\n\r\nOriginal Ref (not available anymore): https://github.com/gulpjs/gulp/blob/master/docs/recipes/pass-params-from-cli.md  \r\n\r\nAlternative with minimist\r\n====\r\nFrom Updated Ref: https://github.com/gulpjs/gulp/blob/master/docs/recipes/pass-arguments-from-cli.md\r\n\r\n\r\ngulpfile.js\r\n----\r\n\r\n    // npm install --save-dev gulp gulp-if gulp-uglify minimist\r\n\r\n    var gulp = require(&#39;gulp&#39;);\r\n    var gulpif = require(&#39;gulp-if&#39;);\r\n    var uglify = require(&#39;gulp-uglify&#39;);\r\n\r\n    var minimist = require(&#39;minimist&#39;);\r\n\r\n    var knownOptions = {\r\n      string: &#39;env&#39;,\r\n      default: { env: process.env.NODE_ENV || &#39;production&#39; }\r\n    };\r\n\r\n    var options = minimist(process.argv.slice(2), knownOptions);\r\n\r\n    gulp.task(&#39;scripts&#39;, function() {\r\n      return gulp.src(&#39;**/*.js&#39;)\r\n        .pipe(gulpif(options.env === &#39;production&#39;, uglify())) // only minify if production\r\n        .pipe(gulp.dest(&#39;dist&#39;));\r\n    });\r\n\r\n\r\nCLI\r\n-\r\n    gulp scripts --env production"}, {"tags": [], "down_vote_count": 0, "creation_date": 1416059254, "answer_id": 26946499, "path": "stack.gulp.answer", "score": 32, "up_vote_count": 32, "is_accepted": false, "last_activity_date": 1462975457, "last_edit_date": 1462975457, "body_markdown": "If you&#39;ve some strict (ordered!) arguments, then you can get them simply by checking `process.argv`.\r\n\r\n    var args = process.argv.slice(2);\r\n\r\n    if (args[0] === &quot;--env&quot; &amp;&amp; args[1] === &quot;production&quot;);\r\n\r\nExecute it: `gulp --env production`\r\n\r\n...however, I think that this is *tooo* strict and not bulletproof! So, I fiddled a bit around... and ended up with this utility function:\r\n\r\n\r\n    function getArg(key) {\r\n      var index = process.argv.indexOf(key);\r\n      var next = process.argv[index + 1];\r\n      return (index &lt; 0) ? null : (!next || next[0] === &quot;-&quot;) ? true : next;\r\n    }\r\n\r\nIt eats an argument-name and will search for this in `process.argv`. If nothing was found it spits out `null`. Otherwise if their is no next argument or the next argument is a command and not a value (we differ with a dash) `true` gets returned. (That&#39;s because the key exist, but there&#39;s just no value). If all the cases before will fail, the next argument-value is what we get.\r\n\r\n**`&gt; gulp watch --foo --bar 1337 -boom &quot;Foo isn&#39;t equal to bar.&quot;`**\r\n\r\n    getArg(&quot;--foo&quot;) // =&gt; true\r\n    getArg(&quot;--bar&quot;) // =&gt; &quot;1337&quot;\r\n    getArg(&quot;-boom&quot;) // =&gt; &quot;Foo isn&#39;t equal to bar.&quot;\r\n    getArg(&quot;--404&quot;) // =&gt; null\r\n\r\nOk, enough for now... Here&#39;s a simple example using *gulp*:\r\n\r\n    var gulp = require(&quot;gulp&quot;);\r\n    var sass = require(&quot;gulp-sass&quot;);\r\n    var rename = require(&quot;gulp-rename&quot;);\r\n\r\n    var env = getArg(&quot;--env&quot;);\r\n\r\n    gulp.task(&quot;styles&quot;, function () {\r\n      return gulp.src(&quot;./index.scss&quot;)\r\n      .pipe(sass({\r\n        style: env === &quot;production&quot; ? &quot;compressed&quot; : &quot;nested&quot;\r\n      }))\r\n      .pipe(rename({\r\n        extname: env === &quot;production&quot; ? &quot;.min.css&quot; : &quot;.css&quot;\r\n      }))\r\n      .pipe(gulp.dest(&quot;./build&quot;));\r\n    });\r\n\r\nRun it `gulp --env production`\r\n\r\n&lt;!-- https://github.com/WebReflection/just-args --&gt;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1416772919, "answer_id": 27093644, "path": "stack.gulp.answer", "score": 36, "up_vote_count": 37, "is_accepted": false, "last_activity_date": 1426960038, "last_edit_date": 1426960038, "body_markdown": "There&#39;s a very simple way to do `on/off` flags without parsing the arguments. `gulpfile.js` is just a file that&#39;s executed like any other, so you can do:\r\n\r\n    var flags = {\r\n      production: false\r\n    };\r\n\r\n    gulp.task(&#39;production&#39;, function () {\r\n      flags.production = true;\r\n    });\r\n\r\nAnd use something like `gulp-if` to conditionally execute a step\r\n\r\n    gulp.task(&#39;build&#39;, function () {\r\n      gulp.src(&#39;*.html&#39;)\r\n        .pipe(gulp_if(flags.production, minify_html()))\r\n        .pipe(gulp.dest(&#39;build/&#39;));\r\n    });\r\n\r\nExecuting `gulp build` will produce a nice html, while `gulp production build` will minify it."}, {"tags": [], "down_vote_count": 0, "creation_date": 1417342268, "answer_id": 27212119, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1417342268, "body_markdown": "I built a plugin to inject parameters from the commandline into the task callback.\r\n\r\n    gulp.task(&#39;mytask&#39;, function (production) {\r\n      console.log(production); // =&gt; true\r\n    });\r\n    \r\n    // gulp mytask --production\r\n\r\nhttps://github.com/stoeffel/gulp-param\r\n\r\nIf someone finds a bug or has a improvement to it, I am happy to merge PRs."}, {"tags": [], "down_vote_count": 0, "creation_date": 1418834312, "answer_id": 27530438, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1418834312, "body_markdown": "## Pass arguments from the command line\r\n\r\n\r\n    // npm install --save-dev gulp gulp-if gulp-uglify minimist\r\n\r\n    var gulp = require(&#39;gulp&#39;);\r\n    var gulpif = require(&#39;gulp-if&#39;);\r\n    var uglify = require(&#39;gulp-uglify&#39;);\r\n\r\n    var minimist = require(&#39;minimist&#39;);\r\n\r\n    var knownOptions = {\r\n      string: &#39;env&#39;,\r\n      default: { env: process.env.NODE_ENV || &#39;production&#39; }\r\n    };\r\n\r\n    var options = minimist(process.argv.slice(2), knownOptions);\r\n\r\n    gulp.task(&#39;scripts&#39;, function() {\r\n      return gulp.src(&#39;**/*.js&#39;)\r\n        .pipe(gulpif(options.env === &#39;production&#39;, uglify())) // only minify in production\r\n        .pipe(gulp.dest(&#39;dist&#39;));\r\n    });\r\n\r\n\r\nThen run gulp with:\r\n\r\n    $ gulp scripts --env development\r\n\r\n[Source](https://github.com/gulpjs/gulp/edit/master/docs/recipes/pass-arguments-from-cli.md)\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1450275705, "answer_id": 34314447, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1450275705, "body_markdown": "    var isProduction = (process.argv.indexOf(&quot;production&quot;)&gt;-1);\r\nCLI `gulp production` calls my production task and sets a flag for any conditionals."}, {"tags": [], "down_vote_count": 0, "creation_date": 1460413957, "answer_id": 36560466, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1460413957, "body_markdown": "We wanted to pass a different config file for different environments -- one for production, dev and testing. This is the code in the gulp file:\r\n\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    //passing in flag to gulp to set environment\r\n    //var env = gutil.env.env;\r\n\r\n    if (typeof gutil.env.env === &#39;string&#39;) {\r\n      process.env.NODE_ENV = gutil.env.env;\r\n    }\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nThis is the code in the app.js file:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n      if(env === &#39;testing&#39;){\r\n          var Config = require(&#39;./config.testing.js&#39;);\r\n          var Api = require(&#39;./api/testing.js&#39;)(Config.web);\r\n        }\r\n        else if(env === &#39;dev&#39;){\r\n           Config = require(&#39;./config.dev.js&#39;);\r\n            Api = require(&#39;./api/dev.js&#39;).Api;\r\n        }\r\n        else{\r\n           Config = require(&#39;./config.production.js&#39;);\r\n           Api = require(&#39;./api/production.js&#39;)(Config.web);\r\n        }\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nAnd then to run it gulp --env=testing"}, {"tags": [], "down_vote_count": 0, "creation_date": 1471574021, "answer_id": 39030269, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1471574021, "last_edit_date": 1495541905, "body_markdown": "And if you are using typescript (`gulpfile.ts`) then do this for `yargs` (building on @Caio Cunha&#39;s excellent answer https://stackoverflow.com/a/23038290/1019307 and other comments above):\r\n\r\n## Install\r\n\r\n    npm install --save-dev yargs\r\n\r\n    typings install dt~yargs --global --save\r\n\r\n### `.ts` files\r\n\r\nAdd this to the .ts files:\r\n\r\n    import { argv } from &#39;yargs&#39;;\r\n    \r\n    ...\r\n    \r\n      let debug: boolean = argv.debug;\r\n\r\nThis has to be done in each .ts file individually (even the `tools/tasks/project` files that are imported into the `gulpfile.ts/js`).\r\n\r\n## Run\r\n\r\n    gulp build.dev --debug\r\n\r\nOr under `npm` pass the arg through to gulp:\r\n\r\n    npm run build.dev -- --debug\r\n"}], "title": "Is it possible to pass a flag to Gulp to have it run tasks in different ways?", "view_count": 140767, "answer_count": 10, "code_snippet": ["<code>gulp.task('my-task', function() {\n    return gulp.src(options.SCSS_SOURCE)\n        .pipe(sass({style:'nested'}))\n        .pipe(autoprefixer('last 10 version'))\n        .pipe(concat('style.css'))\n        .pipe(gulp.dest(options.SCSS_DEST));\n});\n</code>", "<code>$ gulp my-task -a 1\n</code>", "<code>gulp.task('my-task', function() {\n        if (a == 1) {\n            var source = options.SCSS_SOURCE;\n        } else {\n            var source = options.OTHER_SOURCE;\n        }\n        return gulp.src(source)\n            .pipe(sass({style:'nested'}))\n            .pipe(autoprefixer('last 10 version'))\n            .pipe(concat('style.css'))\n            .pipe(gulp.dest(options.SCSS_DEST));\n});\n</code>", "<code>process.argv</code>", "<code>yargs</code>", "<code>var argv = require('yargs').argv;\n\ngulp.task('my-task', function() {\n    return gulp.src(argv.a == 1 ? options.SCSS_SOURCE : options.OTHER_SOURCE)\n        .pipe(sass({style:'nested'}))\n        .pipe(autoprefixer('last 10 version'))\n        .pipe(concat('style.css'))\n        .pipe(gulp.dest(options.SCSS_DEST));\n});\n</code>", "<code>gulp-if</code>", "<code>var argv = require('yargs').argv,\n    gulpif = require('gulp-if'),\n    rename = require('gulp-rename'),\n    uglify = require('gulp-uglify');\n\ngulp.task('my-js-task', function() {\n  gulp.src('src/**/*.js')\n    .pipe(concat('out.js'))\n    .pipe(gulpif(argv.production, uglify()))\n    .pipe(gulpif(argv.production, rename({suffix: '.min'})))\n    .pipe(gulp.dest('dist/'));\n});\n</code>", "<code>gulp my-js-task</code>", "<code>gulp my-js-task --production</code>", "<code>npm run gulp</code>", "<code>npm run gulp -- --production</code>", "<code>gulp styles --theme literature\n</code>", "<code>gulp.env</code>", "<code>var util = require('gulp-util');\n\ngulp.task('styles', function() {\n  return gulp.src(['src/styles/' + (util.env.theme ? util.env.theme : 'main') + '.scss'])\n    .pipe(compass({\n        config_file: './config.rb',\n        sass   : 'src/styles',\n        css    : 'dist/styles',\n        style  : 'expanded'\n\n    }))\n    .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'ff 17', 'opera 12.1', 'ios 6', 'android 4'))\n    .pipe(livereload(server))\n    .pipe(gulp.dest('dist/styles'))\n    .pipe(notify({ message: 'Styles task complete' }));\n});\n</code>", "<code>gulp watch --theme literature\n</code>", "<code>gulp.env</code>", "<code>yargs</code>", "<code>minimist</code>", "<code>util.env.theme ? util.env.theme : 'main'</code>", "<code>util.env.theme || 'main'</code>", "<code>gulp-util</code>", "<code>minimist</code>", "<code>gulp-util</code>", "<code>var gulp   = require('gulp');\n\n// npm install gulp yargs gulp-if gulp-uglify\nvar args   = require('yargs').argv;\nvar gulpif = require('gulp-if');\nvar uglify = require('gulp-uglify');\n\nvar isProduction = args.env === 'production';\n\ngulp.task('scripts', function() {\n  return gulp.src('**/*.js')\n    .pipe(gulpif(isProduction, uglify())) // only minify if production\n    .pipe(gulp.dest('dist'));\n});\n</code>", "<code>gulp scripts --env production\n</code>", "<code>// npm install --save-dev gulp gulp-if gulp-uglify minimist\n\nvar gulp = require('gulp');\nvar gulpif = require('gulp-if');\nvar uglify = require('gulp-uglify');\n\nvar minimist = require('minimist');\n\nvar knownOptions = {\n  string: 'env',\n  default: { env: process.env.NODE_ENV || 'production' }\n};\n\nvar options = minimist(process.argv.slice(2), knownOptions);\n\ngulp.task('scripts', function() {\n  return gulp.src('**/*.js')\n    .pipe(gulpif(options.env === 'production', uglify())) // only minify if production\n    .pipe(gulp.dest('dist'));\n});\n</code>", "<code>gulp scripts --env production\n</code>", "<code>on/off</code>", "<code>gulpfile.js</code>", "<code>var flags = {\n  production: false\n};\n\ngulp.task('production', function () {\n  flags.production = true;\n});\n</code>", "<code>gulp-if</code>", "<code>gulp.task('build', function () {\n  gulp.src('*.html')\n    .pipe(gulp_if(flags.production, minify_html()))\n    .pipe(gulp.dest('build/'));\n});\n</code>", "<code>gulp build</code>", "<code>gulp production build</code>", "<code>gulp.task('mytask', function() { if (flags.myflag ) { flaggedtask } else { unflaggedask } });</code>", "<code>flags</code>", "<code>process.argv</code>", "<code>var args = process.argv.slice(2);\n\nif (args[0] === \"--env\" &amp;&amp; args[1] === \"production\");\n</code>", "<code>gulp --env production</code>", "<code>function getArg(key) {\n  var index = process.argv.indexOf(key);\n  var next = process.argv[index + 1];\n  return (index &lt; 0) ? null : (!next || next[0] === \"-\") ? true : next;\n}\n</code>", "<code>process.argv</code>", "<code>null</code>", "<code>true</code>", "<code>&gt; gulp watch --foo --bar 1337 -boom \"Foo isn't equal to bar.\"</code>", "<code>getArg(\"--foo\") // =&gt; true\ngetArg(\"--bar\") // =&gt; \"1337\"\ngetArg(\"-boom\") // =&gt; \"Foo isn't equal to bar.\"\ngetArg(\"--404\") // =&gt; null\n</code>", "<code>var gulp = require(\"gulp\");\nvar sass = require(\"gulp-sass\");\nvar rename = require(\"gulp-rename\");\n\nvar env = getArg(\"--env\");\n\ngulp.task(\"styles\", function () {\n  return gulp.src(\"./index.scss\")\n  .pipe(sass({\n    style: env === \"production\" ? \"compressed\" : \"nested\"\n  }))\n  .pipe(rename({\n    extname: env === \"production\" ? \".min.css\" : \".css\"\n  }))\n  .pipe(gulp.dest(\"./build\"));\n});\n</code>", "<code>gulp --env production</code>", "<code>if (args[0] === '--env' &amp;&amp; args[1] === 'production');</code>", "<code>gulp.task('mytask', function (production) {\n  console.log(production); // =&gt; true\n});\n\n// gulp mytask --production\n</code>", "<code>gulpfile.ts</code>", "<code>yargs</code>", "<code>npm install --save-dev yargs\n\ntypings install dt~yargs --global --save\n</code>", "<code>.ts</code>", "<code>import { argv } from 'yargs';\n\n...\n\n  let debug: boolean = argv.debug;\n</code>", "<code>tools/tasks/project</code>", "<code>gulpfile.ts/js</code>", "<code>gulp build.dev --debug\n</code>", "<code>npm</code>", "<code>npm run build.dev -- --debug\n</code>", "<code>// npm install --save-dev gulp gulp-if gulp-uglify minimist\n\nvar gulp = require('gulp');\nvar gulpif = require('gulp-if');\nvar uglify = require('gulp-uglify');\n\nvar minimist = require('minimist');\n\nvar knownOptions = {\n  string: 'env',\n  default: { env: process.env.NODE_ENV || 'production' }\n};\n\nvar options = minimist(process.argv.slice(2), knownOptions);\n\ngulp.task('scripts', function() {\n  return gulp.src('**/*.js')\n    .pipe(gulpif(options.env === 'production', uglify())) // only minify in production\n    .pipe(gulp.dest('dist'));\n});\n</code>", "<code>$ gulp scripts --env development\n</code>", "<code>var isProduction = (process.argv.indexOf(\"production\")&gt;-1);\n</code>", "<code>gulp production</code>", "<code>//passing in flag to gulp to set environment\r\n//var env = gutil.env.env;\r\n\r\nif (typeof gutil.env.env === 'string') {\r\n  process.env.NODE_ENV = gutil.env.env;\r\n}</code>", "<code>  if(env === 'testing'){\r\n      var Config = require('./config.testing.js');\r\n      var Api = require('./api/testing.js')(Config.web);\r\n    }\r\n    else if(env === 'dev'){\r\n       Config = require('./config.dev.js');\r\n        Api = require('./api/dev.js').Api;\r\n    }\r\n    else{\r\n       Config = require('./config.production.js');\r\n       Api = require('./api/production.js')(Config.web);\r\n    }</code>"], "path": "stack.gulp"}, {"tags": ["linux", "bash", "loops", "unix", "io"], "creation_date": 1254765174, "body_markdown": "How do I iterate through each line of a text file with [Bash][1]?\r\n\r\nWith this script:\r\n\r\n    echo &quot;Start!&quot;\r\n    for p in (peptides.txt)\r\n    do\r\n        echo &quot;${p}&quot;\r\n    done\r\n\r\nI get this output on the screen:\r\n\r\n    Start!\r\n    ./runPep.sh: line 3: syntax error near unexpected token `(&#39;\r\n    ./runPep.sh: line 3: `for p in (peptides.txt)&#39;\r\n\r\n(Later I want to do something more complicated with $p than\r\njust output to the screen.)\r\n\r\n----------\r\n\r\nThe environment variable SHELL is (from env):\r\n\r\n    SHELL=/bin/bash\r\n\r\n`/bin/bash --version` output:\r\n\r\n    GNU bash, version 3.1.17(1)-release (x86_64-suse-linux-gnu)\r\n    Copyright (C) 2005 Free Software Foundation, Inc.\r\n\r\n`cat /proc/version` output:\r\n\r\n    Linux version 2.6.18.2-34-default (geeko@buildhost) (gcc version 4.1.2 20061115 (prerelease) (SUSE Linux)) #1 SMP Mon Nov 27 11:46:27 UTC 2006\r\n\r\nThe file peptides.txt contains:\r\n\r\n    RKEKNVQ\r\n    IPKKLLQK\r\n    QYFHQLEKMNVK\r\n    IPKKLLQK\r\n    GDLSTALEVAIDCYEK\r\n    QYFHQLEKMNVKIPENIYR\r\n    RKEKNVQ\r\n    VLAKHGKLQDAIN\r\n    ILGFMK\r\n    LEDVALQILL\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Bash\r\n\r\n", "last_edit_date": 1518384433, "up_vote_count": 849, "link": "https://stackoverflow.com/questions/1521462/looping-through-the-content-of-a-file-in-bash", "_childDocuments_": [{"tags": [], "down_vote_count": 9, "creation_date": 1254765278, "answer_id": 1521470, "path": "stack.gulp.answer", "score": 264, "up_vote_count": 273, "is_accepted": false, "last_activity_date": 1254765278, "body_markdown": "    cat peptides.txt | while read line\r\n    do\r\n       # do something with $line here\r\n    done"}, {"tags": [], "down_vote_count": 2, "creation_date": 1254765620, "answer_id": 1521498, "path": "stack.gulp.answer", "score": 1372, "up_vote_count": 1374, "is_accepted": true, "last_activity_date": 1493833161, "last_edit_date": 1493833161, "body_markdown": "One way to do it is:\r\n\r\n    while read p; do\r\n      echo $p\r\n    done &lt;peptides.txt\r\n\r\n\r\n----------\r\n\r\n\r\nExceptionally, if the [loop body may read from standard input][1], you can open the file using a different file descriptor:\r\n\r\n    while read -u 10 p; do\r\n      ...\r\n    done 10&lt;peptides.txt\r\n\r\nHere, 10 is just an arbitrary number (different from 0, 1, 2).\r\n\r\n  [1]: https://unix.stackexchange.com/questions/107800/using-while-loop-to-ssh-to-multiple-servers"}, {"tags": [], "down_vote_count": 0, "creation_date": 1254766727, "answer_id": 1521603, "path": "stack.gulp.answer", "score": 100, "up_vote_count": 100, "is_accepted": false, "last_activity_date": 1412673207, "last_edit_date": 1412673207, "body_markdown": "**Option 1a:**  While loop:  Single line at a time:  Input redirection\r\n\r\n    #!/bin/bash\r\n    filename=&#39;peptides.txt&#39;\r\n    echo Start\r\n    while read p; do \r\n        echo $p\r\n    done &lt; $filename\r\n\r\n**Option 1b:**  While loop:  Single line at a time:  \r\nOpen the file, read from a file descriptor (in this case file descriptor #4).  \r\n\r\n    #!/bin/bash\r\n    filename=&#39;peptides.txt&#39;\r\n    exec 4&lt;$filename\r\n    echo Start\r\n    while read -u4 p ; do\r\n        echo $p\r\n    done\r\n\r\n**Option 2:**  For loop:  Read file into single variable and parse.   \r\nThis syntax will parse &quot;lines&quot; based on any white space between the tokens.  This still works because the given input file lines are single work tokens.  If there were more than one token per line, then this method would not work as well.  Also, reading the full file into a single variable is not a good strategy for large files.  \r\n\r\n    #!/bin/bash\r\n    filename=&#39;peptides.txt&#39;\r\n    filelines=`cat $filename`\r\n    echo Start\r\n    for line in $filelines ; do\r\n        echo $line\r\n    done\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1380893451, "answer_id": 19182518, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 54, "is_accepted": false, "last_activity_date": 1387727268, "last_edit_date": 1387727268, "body_markdown": "This is no better than other answers, but is one more way to get the job done in a file without spaces (see comments). I find that I often need one-liners to dig through lists in text files without the extra step of using separate script files.\r\n\r\n    for word in $(cat peptides.txt); do echo $word; done\r\n\r\nThis format allows me to put it all in one command-line. Change the &quot;echo $word&quot; portion to whatever you want and you can issue multiple commands separated by semicolons. The following example uses the file&#39;s contents as arguments into two other scripts you may have written.\r\n\r\n    for word in $(cat peptides.txt); do cmd_a.sh $word; cmd_b.py $word; done\r\n\r\nOr if you intend to use this like a stream editor (learn sed) you can dump the output to another file as follows.\r\n\r\n    for word in $(cat peptides.txt); do cmd_a.sh $word; cmd_b.py $word; done &gt; outfile.txt\r\n\r\nI&#39;ve used these as written above because I have used text files where I&#39;ve created them with one word per line. (See comments) If you have spaces that you don&#39;t want splitting your words/lines, it gets a little uglier, but the same command still works as follows:\r\n\r\n    OLDIFS=$IFS; IFS=$&#39;\\n&#39;; for line in $(cat peptides.txt); do cmd_a.sh $line; cmd_b.py $line; done &gt; outfile.txt; IFS=$OLDIFS\r\n\r\nThis just tells the shell to split on newlines only, not spaces, then returns the environment back to what it was previously. At this point, you may want to consider putting it all into a shell script rather than squeezing it all into a single line, though.\r\n\r\nBest of luck!"}, {"tags": [], "down_vote_count": 5, "creation_date": 1384438996, "answer_id": 19980138, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1395683823, "last_edit_date": 1395683823, "body_markdown": "    #!/bin/bash\r\n    #\r\n    # Change the file name from &quot;test&quot; to desired input file \r\n    # (The comments in bash are prefixed with #&#39;s)\r\n    for x in $(cat test.txt)\r\n    do\r\n        echo $x\r\n    done\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1433862540, "answer_id": 30735977, "path": "stack.gulp.answer", "score": 35, "up_vote_count": 35, "is_accepted": false, "last_activity_date": 1490746224, "last_edit_date": 1490746224, "body_markdown": "Use a while loop, like this:\r\n\r\n    while IFS= read -r line; do\r\n       echo &quot;$line&quot;\r\n    done &lt;file\r\n\r\nNotes: \r\n\r\n1. If you don&#39;t set the `IFS` properly, you will lose indentation.\r\n\r\n2. [You should almost always use the -r option with read.][1]\r\n\r\n3. [Don&#39;t read lines with `for`][2]\r\n\r\n\r\n  [1]: http://mywiki.wooledge.org/BashFAQ/001\r\n  [2]: http://mywiki.wooledge.org/DontReadLinesWithFor"}, {"tags": [], "down_vote_count": 0, "creation_date": 1435652145, "answer_id": 31133011, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1435652145, "body_markdown": "Here is my real life example how to loop lines of another program output, check for substrings, drop double quotes from variable, use that variable outside of the loop. I guess quite many is asking these questions sooner or later.\r\n\r\n    ##Parse FPS from first video stream, drop quotes from fps variable\r\n    ## streams.stream.0.codec_type=&quot;video&quot;\r\n    ## streams.stream.0.r_frame_rate=&quot;24000/1001&quot;\r\n    ## streams.stream.0.avg_frame_rate=&quot;24000/1001&quot;\r\n    FPS=unknown\r\n    while read -r line; do\r\n      if [[ $FPS == &quot;unknown&quot; ]] &amp;&amp; [[ $line == *&quot;.codec_type=\\&quot;video\\&quot;&quot;* ]]; then\r\n        echo ParseFPS $line\r\n        FPS=parse\r\n      fi\r\n      if [[ $FPS == &quot;parse&quot; ]] &amp;&amp; [[ $line == *&quot;.r_frame_rate=&quot;* ]]; then\r\n        echo ParseFPS $line\r\n    \tFPS=${line##*=}\r\n    \tFPS=&quot;${FPS%\\&quot;}&quot;\r\n    \tFPS=&quot;${FPS#\\&quot;}&quot;\r\n      fi\r\n    done &lt;&lt;&lt; &quot;$(ffprobe -v quiet -print_format flat -show_format -show_streams -i &quot;$input&quot;)&quot;\r\n    if [ &quot;$FPS&quot; == &quot;unknown&quot; ] || [ &quot;$FPS&quot; == &quot;parse&quot; ]; then \r\n      echo ParseFPS Unknown frame rate\r\n    fi\r\n    echo Found $FPS\r\n\r\nDeclare variable outside of the loop, set value and use it outside of loop requires *done &lt;&lt;&lt; &quot;$(...)&quot;* syntax. Application need to be run within a context of current console. Quotes around the command keeps newlines of output stream.\r\n\r\nLoop match for substrings then reads *name=value* pair, splits right-side part of last *=* character, drops first quote, drops last quote, we have a clean value to be used elsewhere."}, {"tags": [], "down_vote_count": 3, "creation_date": 1440910805, "answer_id": 32293328, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1440910805, "body_markdown": "@Peter: This could work out for you-\r\n\r\n    echo &quot;Start!&quot;;for p in $(cat ./pep); do\r\n    echo $p\r\n    done\r\n\r\nThis would return the output-\r\n\r\n    Start!\r\n    RKEKNVQ\r\n    IPKKLLQK\r\n    QYFHQLEKMNVK\r\n    IPKKLLQK\r\n    GDLSTALEVAIDCYEK\r\n    QYFHQLEKMNVKIPENIYR\r\n    RKEKNVQ\r\n    VLAKHGKLQDAIN\r\n    ILGFMK\r\n    LEDVALQILL"}, {"tags": [], "down_vote_count": 0, "creation_date": 1454526914, "answer_id": 35185722, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1493745473, "last_edit_date": 1493745473, "body_markdown": "Suppose you have this file:\r\n\r\n    $ cat /tmp/test.txt\r\n    Line 1\r\n        Line 2 has leading space\r\n    Line 3 followed by blank line\r\n    \r\n    Line 5 (follows a blank line) and has trailing space    \r\n    Line 6 has no ending CR\r\n\r\nThere are four elements that will alter the meaning of the file output read by many Bash solutions: \r\n\r\n 1. The blank line 4;\r\n 1. Leading or trailing spaces on two lines;\r\n 1. Maintaining the meaning of individual lines (i.e., each line is a record);\r\n 1. The line 6 not terminated with a CR.\r\n\r\n\r\nIf you want the text file line by line including blank lines and terminating lines without CR, you must use a while loop and you must have an alternate test for the final line.  \r\n\r\nHere are the methods that may change the file (in comparison to what `cat` returns):\r\n\r\n1) Lose the last line and leading and trailing spaces:\r\n\r\n    $ while read -r p; do printf &quot;%s\\n&quot; &quot;&#39;$p&#39;&quot;; done &lt;/tmp/test.txt\r\n    &#39;Line 1&#39;\r\n    &#39;Line 2 has leading space&#39;\r\n    &#39;Line 3 followed by blank line&#39;\r\n    &#39;&#39;\r\n    &#39;Line 5 (follows a blank line) and has trailing space&#39;\r\n\r\n(If you do `while IFS= read -r p; do printf &quot;%s\\n&quot; &quot;&#39;$p&#39;&quot;; done &lt;/tmp/test.txt` instead, you preserve the leading and trailing spaces but still lose the last line if it is not terminated with CR)\r\n\r\n2) Using process substitution with `cat` will reads the entire file in one gulp and loses the meaning of individual lines:\r\n\r\n    $ for p in &quot;$(cat /tmp/test.txt)&quot;; do printf &quot;%s\\n&quot; &quot;&#39;$p&#39;&quot;; done\r\n    &#39;Line 1\r\n        Line 2 has leading space\r\n    Line 3 followed by blank line\r\n    \r\n    Line 5 (follows a blank line) and has trailing space    \r\n    Line 6 has no ending CR&#39;\r\n\r\n(If you remove the `&quot;` from `$(cat /tmp/test.txt)` you read the file word by word rather than one gulp. Also probably not what is intended...)\r\n\r\n---\r\n\r\nThe most robust and simplest way to read a file line-by-line and preserve all spacing is:\r\n\r\n    $ while IFS= read -r line || [[ -n $line ]]; do printf &quot;&#39;%s&#39;\\n&quot; &quot;$line&quot;; done &lt;/tmp/test.txt\r\n    &#39;Line 1&#39;\r\n    &#39;    Line 2 has leading space&#39;\r\n    &#39;Line 3 followed by blank line&#39;\r\n    &#39;&#39;\r\n    &#39;Line 5 (follows a blank line) and has trailing space    &#39;\r\n    &#39;Line 6 has no ending CR&#39;\r\n\r\nIf you want to strip leading and trading spaces, remove the `IFS= ` part:\r\n\r\n    $ while read -r line || [[ -n $line ]]; do printf &quot;&#39;%s&#39;\\n&quot; &quot;$line&quot;; done &lt;/tmp/test.txt\r\n    &#39;Line 1&#39;\r\n    &#39;Line 2 has leading space&#39;\r\n    &#39;Line 3 followed by blank line&#39;\r\n    &#39;&#39;\r\n    &#39;Line 5 (follows a blank line) and has trailing space&#39;\r\n    &#39;Line 6 has no ending CR&#39;\r\n\r\n(A text file without a terminating `\\n`, while fairly common, is considered broken under POSIX. If you can count on the trailing `\\n` you do not need `|| [[ -n $line ]]` in the `while` loop.) \r\n\r\nMore at the [BASH FAQ][1]\r\n\r\n\r\n\r\n\r\n  [1]: http://mywiki.wooledge.org/BashFAQ/001"}, {"tags": [], "down_vote_count": 0, "creation_date": 1457453451, "answer_id": 35872326, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1457453451, "body_markdown": "If you don&#39;t want your read to be broken by newline character, use -\r\n\r\n    #!/bin/bash\r\n    while IFS=&#39;&#39; read -r line || [[ -n &quot;$line&quot; ]]; do\r\n        echo &quot;$line&quot;\r\n    done &lt; &quot;$1&quot;\r\n\r\nThen run the script with file name as parameter.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484364641, "answer_id": 41646525, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1517942621, "last_edit_date": 1517942621, "body_markdown": "A few more things not covered by other answers:\r\n\r\n# Reading from a delimited file \r\n\r\n    # &#39;:&#39; is the delimiter here, and there are three fields on each line in the file\r\n    # IFS set below is restricted to the context of `read`, it doesn&#39;t affect any other code\r\n    while IFS=: read -r field1 field2 field3; do\r\n      # process the fields\r\n      # if the line has less than three fields, the missing fields will be set to an empty string\r\n      # if the line has more than three fields, `field3` will get all the values, including the third field plus the delimiter(s)\r\n    done &lt; input.txt\r\n\r\n# Reading from a null delimited input, for example `find ... -print0`\r\n\r\n    while read -r -d &#39;&#39; line; do\r\n      # logic\r\n      # use a second &#39;read ... &lt;&lt;&lt; &quot;$line&quot;&#39; if we need to tokenize the line\r\n    done &lt; &lt;(find /path/to/dir -print0)\r\n\r\n# Reading from more than one file at a time\r\n\r\n    while read -u 3 -r line1 &amp;&amp; read -u 4 -r line2; do\r\n      # process the lines\r\n      # note that the loop will end when we reach EOF on either of the files, because of the `&amp;&amp;`\r\n    done 3&lt; input1.txt 4&lt; input2.txt\r\n\r\n# Reading a whole file into an array (Bash versions earlier to 4)\r\n\r\n    while IFS= read -r line; do\r\n        my_array+=(&quot;$line&quot;)\r\n    done &lt; my_file\r\n\r\n# Reading a whole file into an array (Bash versions 4x and later)\r\n\r\n    readarray -t my_array &lt; my_file\r\n\r\nor\r\n\r\n    mapfile -t my_array &lt; my_file\r\n\r\nAnd then\r\n\r\n    for line in &quot;${my_array[@]}&quot;; do\r\n      # process the lines\r\n    done\r\n\r\n- [More about the shell builtins `read` and `readarray` commands - GNU][1]\r\n\r\n- [More about `IFS` - Wikipedia][2]\r\n- [BashFAQ/001 - How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?][3]\r\n\r\nRelated posts:\r\n\r\n- https://stackoverflow.com/questions/30988586/creating-an-array-from-a-text-file-in-bash\r\n\r\n  [1]: https://www.gnu.org/software/bash/manual/html_node/Bash-Builtins.html#index-read\r\n  [2]: https://en.wikipedia.org/wiki/Internal_field_separator\r\n  [3]: http://mywiki.wooledge.org/BashFAQ/005#Loading_lines_from_a_file_or_stream"}], "title": "Looping through the content of a file in Bash", "view_count": 942232, "answer_count": 11, "code_snippet": ["<code>echo \"Start!\"\nfor p in (peptides.txt)\ndo\n    echo \"${p}\"\ndone\n</code>", "<code>Start!\n./runPep.sh: line 3: syntax error near unexpected token `('\n./runPep.sh: line 3: `for p in (peptides.txt)'\n</code>", "<code>SHELL=/bin/bash\n</code>", "<code>/bin/bash --version</code>", "<code>GNU bash, version 3.1.17(1)-release (x86_64-suse-linux-gnu)\nCopyright (C) 2005 Free Software Foundation, Inc.\n</code>", "<code>cat /proc/version</code>", "<code>Linux version 2.6.18.2-34-default (geeko@buildhost) (gcc version 4.1.2 20061115 (prerelease) (SUSE Linux)) #1 SMP Mon Nov 27 11:46:27 UTC 2006\n</code>", "<code>RKEKNVQ\nIPKKLLQK\nQYFHQLEKMNVK\nIPKKLLQK\nGDLSTALEVAIDCYEK\nQYFHQLEKMNVKIPENIYR\nRKEKNVQ\nVLAKHGKLQDAIN\nILGFMK\nLEDVALQILL\n</code>", "<code>while read p; do\n  echo $p\ndone &lt;peptides.txt\n</code>", "<code>while read -u 10 p; do\n  ...\ndone 10&lt;peptides.txt\n</code>", "<code>read -r p</code>", "<code>read</code>", "<code>while read p || [[ -n $p ]]; do ...</code>", "<code>cat peptides.txt | while read line\ndo\n   # do something with $line here\ndone\n</code>", "<code>#!/bin/bash\nfilename='peptides.txt'\necho Start\nwhile read p; do \n    echo $p\ndone &lt; $filename\n</code>", "<code>#!/bin/bash\nfilename='peptides.txt'\nexec 4&lt;$filename\necho Start\nwhile read -u4 p ; do\n    echo $p\ndone\n</code>", "<code>#!/bin/bash\nfilename='peptides.txt'\nfilelines=`cat $filename`\necho Start\nfor line in $filelines ; do\n    echo $line\ndone\n</code>", "<code>done &lt; $filename</code>", "<code>done 4&lt;$filename</code>", "<code>$filename</code>", "<code>$1</code>", "<code>for word in $(cat peptides.txt); do echo $word; done\n</code>", "<code>for word in $(cat peptides.txt); do cmd_a.sh $word; cmd_b.py $word; done\n</code>", "<code>for word in $(cat peptides.txt); do cmd_a.sh $word; cmd_b.py $word; done &gt; outfile.txt\n</code>", "<code>OLDIFS=$IFS; IFS=$'\\n'; for line in $(cat peptides.txt); do cmd_a.sh $line; cmd_b.py $line; done &gt; outfile.txt; IFS=$OLDIFS\n</code>", "<code>for</code>", "<code>for l in $(echo '* b c'); do echo \"[$l]\"; done</code>", "<code>*</code>", "<code>for</code>", "<code>while IFS= read -r line; do\n   echo \"$line\"\ndone &lt;file\n</code>", "<code>IFS</code>", "<code>for</code>", "<code>-r</code>", "<code>Note #2</code>", "<code>-u</code>", "<code>-u</code>", "<code># ':' is the delimiter here, and there are three fields on each line in the file\n# IFS set below is restricted to the context of `read`, it doesn't affect any other code\nwhile IFS=: read -r field1 field2 field3; do\n  # process the fields\n  # if the line has less than three fields, the missing fields will be set to an empty string\n  # if the line has more than three fields, `field3` will get all the values, including the third field plus the delimiter(s)\ndone &lt; input.txt\n</code>", "<code>find ... -print0</code>", "<code>while read -r -d '' line; do\n  # logic\n  # use a second 'read ... &lt;&lt;&lt; \"$line\"' if we need to tokenize the line\ndone &lt; &lt;(find /path/to/dir -print0)\n</code>", "<code>while read -u 3 -r line1 &amp;&amp; read -u 4 -r line2; do\n  # process the lines\n  # note that the loop will end when we reach EOF on either of the files, because of the `&amp;&amp;`\ndone 3&lt; input1.txt 4&lt; input2.txt\n</code>", "<code>while IFS= read -r line; do\n    my_array+=(\"$line\")\ndone &lt; my_file\n</code>", "<code>readarray -t my_array &lt; my_file\n</code>", "<code>mapfile -t my_array &lt; my_file\n</code>", "<code>for line in \"${my_array[@]}\"; do\n  # process the lines\ndone\n</code>", "<code>read</code>", "<code>readarray</code>", "<code>IFS</code>", "<code>#!/bin/bash\nwhile IFS='' read -r line || [[ -n \"$line\" ]]; do\n    echo \"$line\"\ndone &lt; \"$1\"\n</code>", "<code>$ cat /tmp/test.txt\nLine 1\n    Line 2 has leading space\nLine 3 followed by blank line\n\nLine 5 (follows a blank line) and has trailing space    \nLine 6 has no ending CR\n</code>", "<code>cat</code>", "<code>$ while read -r p; do printf \"%s\\n\" \"'$p'\"; done &lt;/tmp/test.txt\n'Line 1'\n'Line 2 has leading space'\n'Line 3 followed by blank line'\n''\n'Line 5 (follows a blank line) and has trailing space'\n</code>", "<code>while IFS= read -r p; do printf \"%s\\n\" \"'$p'\"; done &lt;/tmp/test.txt</code>", "<code>cat</code>", "<code>$ for p in \"$(cat /tmp/test.txt)\"; do printf \"%s\\n\" \"'$p'\"; done\n'Line 1\n    Line 2 has leading space\nLine 3 followed by blank line\n\nLine 5 (follows a blank line) and has trailing space    \nLine 6 has no ending CR'\n</code>", "<code>\"</code>", "<code>$(cat /tmp/test.txt)</code>", "<code>$ while IFS= read -r line || [[ -n $line ]]; do printf \"'%s'\\n\" \"$line\"; done &lt;/tmp/test.txt\n'Line 1'\n'    Line 2 has leading space'\n'Line 3 followed by blank line'\n''\n'Line 5 (follows a blank line) and has trailing space    '\n'Line 6 has no ending CR'\n</code>", "<code>IFS=</code>", "<code>$ while read -r line || [[ -n $line ]]; do printf \"'%s'\\n\" \"$line\"; done &lt;/tmp/test.txt\n'Line 1'\n'Line 2 has leading space'\n'Line 3 followed by blank line'\n''\n'Line 5 (follows a blank line) and has trailing space'\n'Line 6 has no ending CR'\n</code>", "<code>\\n</code>", "<code>\\n</code>", "<code>|| [[ -n $line ]]</code>", "<code>while</code>", "<code>#!/bin/bash\n#\n# Change the file name from \"test\" to desired input file \n# (The comments in bash are prefixed with #'s)\nfor x in $(cat test.txt)\ndo\n    echo $x\ndone\n</code>", "<code>##Parse FPS from first video stream, drop quotes from fps variable\n## streams.stream.0.codec_type=\"video\"\n## streams.stream.0.r_frame_rate=\"24000/1001\"\n## streams.stream.0.avg_frame_rate=\"24000/1001\"\nFPS=unknown\nwhile read -r line; do\n  if [[ $FPS == \"unknown\" ]] &amp;&amp; [[ $line == *\".codec_type=\\\"video\\\"\"* ]]; then\n    echo ParseFPS $line\n    FPS=parse\n  fi\n  if [[ $FPS == \"parse\" ]] &amp;&amp; [[ $line == *\".r_frame_rate=\"* ]]; then\n    echo ParseFPS $line\n    FPS=${line##*=}\n    FPS=\"${FPS%\\\"}\"\n    FPS=\"${FPS#\\\"}\"\n  fi\ndone &lt;&lt;&lt; \"$(ffprobe -v quiet -print_format flat -show_format -show_streams -i \"$input\")\"\nif [ \"$FPS\" == \"unknown\" ] || [ \"$FPS\" == \"parse\" ]; then \n  echo ParseFPS Unknown frame rate\nfi\necho Found $FPS\n</code>", "<code>echo \"Start!\";for p in $(cat ./pep); do\necho $p\ndone\n</code>", "<code>Start!\nRKEKNVQ\nIPKKLLQK\nQYFHQLEKMNVK\nIPKKLLQK\nGDLSTALEVAIDCYEK\nQYFHQLEKMNVKIPENIYR\nRKEKNVQ\nVLAKHGKLQDAIN\nILGFMK\nLEDVALQILL\n</code>"], "path": "stack.gulp"}, {"tags": ["angular", "typescript"], "creation_date": 1445792328, "body_markdown": "I am using Angular (version 2) with TypeScript (version 1.6) and when I compile the code I get these errors:\r\n\r\n    Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/change_detection/parser/locals.d.ts(4,42): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(1,25): Error TS2304: Cannot find name &#39;MapConstructor&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(2,25): Error TS2304: Cannot find name &#39;SetConstructor&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(4,27): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(4,39): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(7,9): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(8,30): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(11,43): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(12,27): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(14,23): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(15,25): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(94,41): Error TS2304: Cannot find name &#39;Set&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(95,22): Error TS2304: Cannot find name &#39;Set&#39;.\r\n        node_modules/angular2/src/core/facade/collection.d.ts(96,25): Error TS2304: Cannot find name &#39;Set&#39;.\r\n        node_modules/angular2/src/core/facade/lang.d.ts(1,22): Error TS2304: Cannot find name &#39;BrowserNodeGlobal&#39;.\r\n        node_modules/angular2/src/core/facade/lang.d.ts(33,59): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(1,10): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(3,14): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(8,32): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(9,38): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(10,35): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(10,93): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(11,34): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(12,32): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(12,149): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/facade/promise.d.ts(13,43): Error TS2304: Cannot find name &#39;Promise&#39;.\r\n        node_modules/angular2/src/core/linker/element_injector.d.ts(72,32): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/element_injector.d.ts(74,17): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/element_injector.d.ts(78,184): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/element_injector.d.ts(83,182): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/element_injector.d.ts(107,37): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/proto_view_factory.d.ts(27,146): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(52,144): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(76,79): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(77,73): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(94,31): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(97,18): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(100,24): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(103,142): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/linker/view.d.ts(104,160): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/render/api.d.ts(281,74): Error TS2304: Cannot find name &#39;Map&#39;.\r\n        node_modules/angular2/src/core/zone/ng_zone.d.ts(1,37): Error TS2304: Cannot find name &#39;Zone&#39;.\r\n\r\nThis is the code:\r\n\r\n    import &#39;reflect-metadata&#39;;\r\n    import {bootstrap, Component, CORE_DIRECTIVES, FORM_DIRECTIVES} from &#39;angular2/core&#39;;\r\n    @Component({\r\n      selector: &#39;my-app&#39;,\r\n      template: &#39;&lt;input type=&quot;text&quot; [(ng-model)]=&quot;title&quot; /&gt;&lt;h1&gt;{{title}}&lt;/h1&gt;&#39;,\r\n      directives: [ CORE_DIRECTIVES ]\r\n    })\r\n    class AppComponent {\r\n      title :string;\r\n    \r\n      constructor() {\r\n        this.title = &#39;hello angular 2&#39;;\r\n      }\r\n    }\r\n    bootstrap(AppComponent);\r\n\r\n\r\n\r\n", "last_edit_date": 1513459926, "up_vote_count": 185, "link": "https://stackoverflow.com/questions/33332394/angular-and-typescript-cant-find-names", "_childDocuments_": [{"tags": [], "down_vote_count": 17, "creation_date": 1445919363, "answer_id": 33359873, "path": "stack.gulp.answer", "score": 52, "up_vote_count": 69, "is_accepted": true, "last_activity_date": 1445919363, "body_markdown": "A known issue: https://github.com/angular/angular/issues/4902 \r\n\r\nCore reason: the `.d.ts` file implicitly included by TypeScript varies with the compile target, so one needs to have more ambient declarations when targeting `es5` even if things are actually present in the runtimes (e.g. chrome). More on [`lib.d.ts`](https://basarat.gitbooks.io/typescript/content/docs/types/lib.d.ts.html)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1455914045, "answer_id": 35514492, "path": "stack.gulp.answer", "score": 101, "up_vote_count": 102, "is_accepted": false, "last_activity_date": 1455914045, "body_markdown": "There is a work-around mentioned in the changelog for [2.0.0-beta.6 (2016-02-11)][1] (listed under breaking changes):\r\n\r\n&gt; If you use --target=es5, you will need to add a line somewhere in your application (for example, at the top of the .ts file where you call bootstrap):\r\n\r\n    ///&lt;reference path=&quot;node_modules/angular2/typings/browser.d.ts&quot;/&gt;\r\n&gt; (Note that if your file is not in the same directory as node_modules, you&#39;ll need to add one or more ../ to the start of that path.)\r\n\r\nmake sure you have the correct reference path, i needed to add **../** to the start to get this working.\r\n\r\n  [1]: https://github.com/angular/angular/blob/master/CHANGELOG.md#200-beta6-2016-02-11"}, {"tags": [], "down_vote_count": 0, "creation_date": 1456886464, "answer_id": 35737470, "path": "stack.gulp.answer", "score": 47, "up_vote_count": 47, "is_accepted": false, "last_activity_date": 1456886464, "body_markdown": "For those following the Angular2 tutorial on `angular.io` just to be explicit, here is an expansion of mvdluit&#39;s answer of exactly where to put the code:\r\n\r\nYour `main.ts` should look like this:\r\n\r\n    /// &lt;reference path=&quot;../node_modules/angular2/typings/browser.d.ts&quot; /&gt;\r\n\r\n    import {bootstrap} from &#39;angular2/platform/browser&#39;\r\n    import {AppComponent} from &#39;./app.component&#39;\r\n    // Add all operators to Observable\r\n    import &#39;rxjs/Rx&#39;\r\n    \r\n    bootstrap(AppComponent);\r\n\r\nNote that you leave in the `///` forward slashes, don&#39;t remove them.\r\n\r\nref: https://github.com/ericmdantas/angular2-typescript-todo/blob/master/index.ts#L1"}, {"tags": [], "down_vote_count": 0, "creation_date": 1462265134, "answer_id": 36999540, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1464605957, "last_edit_date": 1464605957, "body_markdown": "For `Angular 2.0.0-rc.0` adding `node_modules/angular2/typings/browser.d.ts` won&#39;t work. First add [typings.json file][1] to your solution, with this content:\r\n\r\n    {\r\n        &quot;ambientDependencies&quot;: {\r\n            &quot;es6-shim&quot;: &quot;github:DefinitelyTyped/DefinitelyTyped/es6-shim/es6-shim.d.ts#7de6c3dd94feaeb21f20054b9f30d5dabc5efabd&quot;\r\n        }\r\n    }\r\n\r\nAnd then update the `package.json` file to include this `postinstall`:\r\n\r\n    &quot;scripts&quot;: {\r\n        &quot;postinstall&quot;: &quot;typings install&quot;\r\n    },\r\n\r\nNow run `npm install`\r\n\r\nAlso now you should ignore `typings` folder in your `tsconfig.json` file as well:\r\n\r\n     &quot;exclude&quot;: [\r\n            &quot;node_modules&quot;,\r\n            &quot;typings/main&quot;,\r\n            &quot;typings/main.d.ts&quot;\r\n        ]\r\n\r\n**Update**\r\n\r\nNow AngularJS 2.0 is using `core-js` instead of `es6-shim`. Follow its quick start [typings.json file][1] for more info.\r\n\r\n  [1]: https://github.com/angular/quickstart/blob/master/typings.json\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1462302033, "answer_id": 37012334, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1472428252, "last_edit_date": 1472428252, "body_markdown": "Good call, @VahidN,  I found I needed \r\n\r\n        &quot;exclude&quot;: [\r\n            &quot;node_modules&quot;,\r\n            &quot;typings/main&quot;,\r\n            &quot;typings/main.d.ts&quot;\r\n        ]\r\n\r\nIn my `tsconfig` too, to stop errors from `es6-shim` itself"}, {"tags": [], "down_vote_count": 0, "creation_date": 1463179615, "answer_id": 37220410, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1463179615, "body_markdown": "I was able to fix this by installing the `typings` module.\r\n\r\n    npm install -g typings\r\n    typings install\r\n\r\n(Using ng 2.0.0-rc.1)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1463310866, "answer_id": 37237552, "path": "stack.gulp.answer", "score": 48, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1468397354, "last_edit_date": 1468397354, "body_markdown": "I was able to fix this with the following command\r\n\r\n    typings install es6-promise es6-collections --ambient\r\n\r\nNote that you need `typings` to make the above command work, if you do not have it run the following command to install it\r\n\r\n    npm install -g typings\r\n\r\n**UPDATE**\r\n\r\ntypings update doesn&#39;t read `--ambient` it became `--global` also for some people you need to install the definitions of the above libraries, just use the following command\r\n\r\n    typings install dt~es6-promise dt~es6-collections --global --save\r\n\r\nThanks to **@bgerth** for pointing this out."}, {"tags": [], "down_vote_count": 0, "creation_date": 1464570289, "answer_id": 37516404, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1464570289, "body_markdown": "I was getting this on Angular 2 rc1. Turns out some names changed with typings v1 vs the old 0.x. The `browser.d.ts` files became `index.d.ts`.\r\n\r\nAfter running `typings install` locate your startup file (where you bootstrap) and add:\r\n\r\n`/// &lt;reference path=&quot;../typings/index.d.ts&quot; /&gt;` (or without the `../` if your startup file is in the same folder as the typings folder)\r\n\r\nAdding `index.d.ts` to the files list in `tsconfig.json` did not work for some reason.\r\n\r\nAlso, the `es6-shim` package was not needed."}, {"tags": [], "down_vote_count": 0, "creation_date": 1464604707, "answer_id": 37523598, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1464604707, "body_markdown": "Angular 2 RC1 renamed the `node_modules/angular2` directory to `node_modules/angular`.\r\n\r\nIf you&#39;re using a gulpfile to copy files to an output directory you probably still have `node_modules/angular` sitting in there which may be getting picked up by the compiler and confusing the hell out of itself.\r\n\r\nSo (carefully) wipe out what you have in `node_modules` that is for the beta versions, and also delete any old typings and re-run `typings install`.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1465607023, "answer_id": 37758982, "path": "stack.gulp.answer", "score": 79, "up_vote_count": 79, "is_accepted": false, "last_activity_date": 1475007862, "last_edit_date": 1475007862, "body_markdown": "ES6 features like promises aren&#39;t defined when targeting ES5. There are other libraries, but core-js is the javascript library that the Angular team uses. It contains polyfills for ES6.\r\n\r\nAngular 2 has changed a lot since this question was asked. Type declarations are **much** easier to use in Typescript 2.0.\r\n\r\n    npm install -g typescript\r\n\r\nFor ES6 features in Angular 2, you don&#39;t need Typings. Just use typescript 2.0 or higher and install @types/core-js with npm: \r\n\r\n    npm install --save-dev @types/core-js\r\n\r\nThen, add the **TypeRoots** and **Types** attributes to your tsconfig.json:\r\n\r\n    {\r\n      &quot;compilerOptions&quot;: {\r\n        &quot;target&quot;: &quot;es5&quot;,\r\n        &quot;module&quot;: &quot;es6&quot;,\r\n        &quot;moduleResolution&quot;: &quot;node&quot;,\r\n        &quot;sourceMap&quot;: true,\r\n        &quot;emitDecoratorMetadata&quot;: true,\r\n        &quot;experimentalDecorators&quot;: true,\r\n        &quot;removeComments&quot;: false,\r\n        &quot;noImplicitAny&quot;: false,\r\n        &quot;typeRoots&quot;: [\r\n          &quot;../node_modules/@types&quot;\r\n        ],\r\n        &quot;types&quot; : [\r\n          &quot;core-js&quot;\r\n        ]\r\n      },\r\n      &quot;exclude&quot;: [\r\n        &quot;node_modules&quot;\r\n      ]\r\n    }\r\n\r\nThis is much easier than using Typings, as explained in other answers. See Microsoft&#39;s blog post for more info: [Typescript: The Future of Declaration Files][1] \r\n\r\n  [1]: https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1465793710, "answer_id": 37782047, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1465793710, "body_markdown": "you can add the code at the beginning of .ts files.\r\n\r\n    /// &lt;reference path=&quot;../typings/index.d.ts&quot; /&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1466651005, "answer_id": 37981628, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1466651005, "body_markdown": "I found [this very helpful doc][1] at Angular 2&#39;s website. It finally let me get things working properly, whereas the other answers here, to install typings, failed me with various errors. (But helped lead me in the right direction.)\r\n\r\nInstead of including es6-promise and es6-collections, it includes core-js, which did the trick for me... no conflicts with Angular2&#39;s core ts definitions. Additionally the document explained how to set up all this to happen automatically when installing NPM, and how to modify your typings.json file.\r\n\r\n  [1]: https://angular.io/docs/ts/latest/guide/typescript-configuration.html#!#typings"}, {"tags": [], "down_vote_count": 1, "creation_date": 1466659434, "answer_id": 37982966, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1466659434, "body_markdown": "     typings install dt~es6-shim --save --global\r\n\r\nand add the correct path to index.d.ts\r\n\r\n    ///&lt;reference path=&quot;../typings/index.d.ts&quot;/&gt;\r\n\r\nTried on @angular-2.0.0-rc3 "}, {"tags": [], "down_vote_count": 0, "creation_date": 1469663207, "answer_id": 38624948, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1469663207, "last_edit_date": 1495542893, "body_markdown": "The accepted answer doesn&#39;t provide a viable fix, and most of the other ones suggest the &quot;triple-slashes&quot; workaround which is not viable anymore, since the `browser.d.ts` has been removed by the Angular2 latest RC&#39;s and thus is not available anymore.\r\n\r\nI strongly suggest to install the `typings` module as suggested by a couple solutions here, yet it&#39;s not necessary to do it manually or globally - there&#39;s an effective way to do that for your project only and within VS2015 interface. Here&#39;s what you need to do:\r\n\r\n - add `typings` in the project&#39;s package.json file.\r\n - add a `script` block in the `package.json` file to execute/update `typings` after each NPM action.\r\n - add a `typings.json` file in the project&#39;s root folder containing a reference to `core-js` (overall better than `es6-shim` atm).\r\n\r\nThat&#39;s it.\r\n\r\nYou can also take a look to [this other SO thread][1] and/or read [this post][2] for additional details.\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/38624888/1233379\r\n  [2]: http://www.ryadel.com/en/visual-studio-2015-fix-typescript-ts2304-compilation-errors/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1469794198, "answer_id": 38658497, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1469794198, "body_markdown": "If `npm install -g typings typings install` still does not help, delete *node_modules* and *typings* folders before executing this command.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1472474625, "answer_id": 39206664, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1472474625, "body_markdown": "This is that think how everyone is trying to do something different. I believe these systems still far from the final version.\r\n\r\nIn my case, I updated from rc.0 to rc.5 this error appeared. \r\n\r\nMy fixed was change the tsconfig.json.\r\n\r\n    {\r\n        &quot;compilerOptions&quot;: {\r\n            &quot;target&quot;: &quot;es6&quot;, &lt;-- It was es5\r\n            &quot;module&quot;: &quot;system&quot;,\r\n            &quot;moduleResolution&quot;: &quot;node&quot;,\r\n            &quot;sourceMap&quot;: true,\r\n            &quot;emitDecoratorMetadata&quot;: true,\r\n            &quot;experimentalDecorators&quot;: true,\r\n            &quot;removeComments&quot;: false,\r\n            &quot;noImplicitAny&quot;: false,\r\n            &quot;outDir&quot;: &quot;../wwwroot/app&quot;\r\n        },\r\n        &quot;compileOnSave&quot;: true,\r\n        &quot;exclude&quot;: [\r\n            &quot;../node_modules&quot;,\r\n            &quot;../typings/main&quot;\r\n        ]\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1474816359, "answer_id": 39688436, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1474816359, "body_markdown": "Do import the below statement in your JS file.\r\n\r\n    import &#39;rxjs/add/operator/map&#39;;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1478063477, "answer_id": 40372884, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1478063477, "body_markdown": "add typing.d.ts in main folder of the application and over there declare the varible which you want to use every time\r\n\r\n    declare var System: any;\r\n    declare var require: any;\r\n\r\nafter declaring this in typing.d.ts, error for require will not come in the application.."}, {"tags": [], "down_vote_count": 6, "creation_date": 1479447298, "answer_id": 40670019, "path": "stack.gulp.answer", "score": -4, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1479453169, "last_edit_date": 1479453169, "body_markdown": "&lt;!-- language-all: json --&gt;\r\nUpdate `tsconfig.json`, change\r\n\r\n    &quot;target&quot;: &quot;es5&quot;\r\nto\r\n\r\n    &quot;target&quot;: &quot;es6&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1482083859, "answer_id": 41211243, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1482083859, "last_edit_date": 1495540052, "body_markdown": "I had the same problem and I solved it using the `lib` option in `tsconfig.json`. As said by [basarat in his answer][1], a `.d.ts` file is implicitly included by TypeScript depending on the compile `target`option but this behaviour can be changed with the `lib` option.\r\n\r\nYou can specify additional definition files to be included without changing the targeted JS version. For examples this is part of my current `compilerOptions` for Typescript@2.1 and it adds support for `es2015` features without installing anything else:\r\n\r\n    &quot;compilerOptions&quot;: {\r\n        &quot;experimentalDecorators&quot;: true,\r\n        &quot;lib&quot;: [&quot;es5&quot;, &quot;dom&quot;, &quot;es6&quot;, &quot;dom.iterable&quot;, &quot;scripthost&quot;],\r\n        &quot;module&quot;: &quot;commonjs&quot;,\r\n        &quot;moduleResolution&quot;: &quot;node&quot;,\r\n        &quot;noLib&quot;: false,\r\n        &quot;target&quot;: &quot;es5&quot;,\r\n        &quot;types&quot;: [&quot;node&quot;]\r\n    }\r\n\r\nFor the complete list of available options check the [official doc][2].\r\n\r\nNote also that I added `&quot;types&quot;: [&quot;node&quot;]` and installed `npm install @types/node` to support `require(&#39;some-module&#39;)` in my code.\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/33359873/6860493\r\n  [2]: https://www.typescriptlang.org/docs/handbook/compiler-options.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484209116, "answer_id": 41608156, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1484209116, "body_markdown": "When having Typescript &gt;= 2 the &quot;lib&quot; option in tsconfig.json will do the job. No need for Typings. https://www.typescriptlang.org/docs/handbook/compiler-options.html\r\n\r\n    {\r\n        &quot;compilerOptions&quot;: {\r\n            &quot;target&quot;: &quot;es5&quot;,\r\n            &quot;lib&quot;: [&quot;es2016&quot;, &quot;dom&quot;] //or es6 instead of es2016(es7)\r\n        }\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1488541334, "answer_id": 42577983, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1488541495, "last_edit_date": 1488541495, "body_markdown": "I am new to Angular but for me the solution was found by simply importing Input. Can&#39;t take credit for this one, found it on another board. This is a simple fix if you&#39;re having the same problem but if your issues are more complex I&#39;d read the stuff above.\r\n\r\n*Mukesh*:\r\n&gt;you have to import input like this at top of child component\r\n\r\n    import { Directive, Component, OnInit, Input } from &#39;@angular/core&#39;;\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517212446, "answer_id": 48496686, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1517212446, "body_markdown": " Now you must import them manually.\r\n\r\n    import &#39;rxjs/add/operator/retry&#39;;\r\n    import &#39;rxjs/add/operator/timeout&#39;;\r\n    import &#39;rxjs/add/operator/delay&#39;;\r\n    import &#39;rxjs/add/operator/map&#39;;\r\n    \r\n    \r\n    \r\n    \r\n    this.http.post(url, JSON.stringify(json), {headers: headers, timeout: 1000})\r\n    \r\n             .retry(2)\r\n    \r\n             .timeout(10000, new Error(&#39;Time out.&#39;))\r\n    \r\n             .delay(10)\r\n    \r\n             .map((res) =&gt; res.json())\r\n            .subscribe(\r\n              (data) =&gt; resolve(data.json()),\r\n              (err) =&gt; reject(err)\r\n            );"}], "title": "Angular and Typescript: Can&#39;t find names", "view_count": 180783, "answer_count": 23, "code_snippet": ["<code>Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/change_detection/parser/locals.d.ts(4,42): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(1,25): Error TS2304: Cannot find name 'MapConstructor'.\n    node_modules/angular2/src/core/facade/collection.d.ts(2,25): Error TS2304: Cannot find name 'SetConstructor'.\n    node_modules/angular2/src/core/facade/collection.d.ts(4,27): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(4,39): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(7,9): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(8,30): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(11,43): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(12,27): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(14,23): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(15,25): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/collection.d.ts(94,41): Error TS2304: Cannot find name 'Set'.\n    node_modules/angular2/src/core/facade/collection.d.ts(95,22): Error TS2304: Cannot find name 'Set'.\n    node_modules/angular2/src/core/facade/collection.d.ts(96,25): Error TS2304: Cannot find name 'Set'.\n    node_modules/angular2/src/core/facade/lang.d.ts(1,22): Error TS2304: Cannot find name 'BrowserNodeGlobal'.\n    node_modules/angular2/src/core/facade/lang.d.ts(33,59): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/facade/promise.d.ts(1,10): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(3,14): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(8,32): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(9,38): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(10,35): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(10,93): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(11,34): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(12,32): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(12,149): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/facade/promise.d.ts(13,43): Error TS2304: Cannot find name 'Promise'.\n    node_modules/angular2/src/core/linker/element_injector.d.ts(72,32): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/element_injector.d.ts(74,17): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/element_injector.d.ts(78,184): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/element_injector.d.ts(83,182): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/element_injector.d.ts(107,37): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/proto_view_factory.d.ts(27,146): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(52,144): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(76,79): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(77,73): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(94,31): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(97,18): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(100,24): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(103,142): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/linker/view.d.ts(104,160): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/render/api.d.ts(281,74): Error TS2304: Cannot find name 'Map'.\n    node_modules/angular2/src/core/zone/ng_zone.d.ts(1,37): Error TS2304: Cannot find name 'Zone'.\n</code>", "<code>import 'reflect-metadata';\nimport {bootstrap, Component, CORE_DIRECTIVES, FORM_DIRECTIVES} from 'angular2/core';\n@Component({\n  selector: 'my-app',\n  template: '&lt;input type=\"text\" [(ng-model)]=\"title\" /&gt;&lt;h1&gt;{{title}}&lt;/h1&gt;',\n  directives: [ CORE_DIRECTIVES ]\n})\nclass AppComponent {\n  title :string;\n\n  constructor() {\n    this.title = 'hello angular 2';\n  }\n}\nbootstrap(AppComponent);\n</code>", "<code>import {ROUTER_PROVIDERS} from 'angular2/router';</code>", "<code>.d.ts</code>", "<code>es5</code>", "<code>lib.d.ts</code>", "<code>///&lt;reference path=\"node_modules/angular2/typings/browser.d.ts\"/&gt;\n</code>", "<code>TS2304: Cannot find name 'module'</code>", "<code>TS2339: Property 'find' does not exist on type 'MyThing[]'.</code>", "<code>npm install -g typescript\n</code>", "<code>npm install --save-dev @types/core-js\n</code>", "<code>{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"es6\",\n    \"moduleResolution\": \"node\",\n    \"sourceMap\": true,\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"removeComments\": false,\n    \"noImplicitAny\": false,\n    \"typeRoots\": [\n      \"../node_modules/@types\"\n    ],\n    \"types\" : [\n      \"core-js\"\n    ]\n  },\n  \"exclude\": [\n    \"node_modules\"\n  ]\n}\n</code>", "<code>typings install es6-promise es6-collections --ambient\n</code>", "<code>typings</code>", "<code>npm install -g typings\n</code>", "<code>--ambient</code>", "<code>--global</code>", "<code>typings install dt~es6-promise dt~es6-collections --global --save\n</code>", "<code>typings install dt~es6-promise dt~es6-collections --global --save</code>", "<code>typings</code>", "<code>angular.io</code>", "<code>main.ts</code>", "<code>/// &lt;reference path=\"../node_modules/angular2/typings/browser.d.ts\" /&gt;\n\nimport {bootstrap} from 'angular2/platform/browser'\nimport {AppComponent} from './app.component'\n// Add all operators to Observable\nimport 'rxjs/Rx'\n\nbootstrap(AppComponent);\n</code>", "<code>///</code>", "<code>_references.js</code>", "<code>../../</code>", "<code>../</code>", "<code>browser.d.ts</code>", "<code>.js</code>", "<code>dist</code>", "<code>typings.d.ts</code>", "<code>{\n    \"compilerOptions\": {\n        \"target\": \"es5\",\n        \"lib\": [\"es2016\", \"dom\"] //or es6 instead of es2016(es7)\n    }\n}\n</code>", "<code>Angular 2.0.0-rc.0</code>", "<code>node_modules/angular2/typings/browser.d.ts</code>", "<code>{\n    \"ambientDependencies\": {\n        \"es6-shim\": \"github:DefinitelyTyped/DefinitelyTyped/es6-shim/es6-shim.d.ts#7de6c3dd94feaeb21f20054b9f30d5dabc5efabd\"\n    }\n}\n</code>", "<code>package.json</code>", "<code>postinstall</code>", "<code>\"scripts\": {\n    \"postinstall\": \"typings install\"\n},\n</code>", "<code>npm install</code>", "<code>typings</code>", "<code>tsconfig.json</code>", "<code> \"exclude\": [\n        \"node_modules\",\n        \"typings/main\",\n        \"typings/main.d.ts\"\n    ]\n</code>", "<code>core-js</code>", "<code>es6-shim</code>", "<code>rc0</code>", "<code>/// &lt;reference path=\"../typings/index.d.ts\" /&gt;\n</code>", "<code>browser.d.ts</code>", "<code>index.d.ts</code>", "<code>typings install</code>", "<code>/// &lt;reference path=\"../typings/index.d.ts\" /&gt;</code>", "<code>../</code>", "<code>index.d.ts</code>", "<code>tsconfig.json</code>", "<code>es6-shim</code>", "<code>typings</code>", "<code>npm install -g typings\ntypings install\n</code>", "<code>lib</code>", "<code>tsconfig.json</code>", "<code>.d.ts</code>", "<code>target</code>", "<code>lib</code>", "<code>compilerOptions</code>", "<code>es2015</code>", "<code>\"compilerOptions\": {\n    \"experimentalDecorators\": true,\n    \"lib\": [\"es5\", \"dom\", \"es6\", \"dom.iterable\", \"scripthost\"],\n    \"module\": \"commonjs\",\n    \"moduleResolution\": \"node\",\n    \"noLib\": false,\n    \"target\": \"es5\",\n    \"types\": [\"node\"]\n}\n</code>", "<code>\"types\": [\"node\"]</code>", "<code>npm install @types/node</code>", "<code>require('some-module')</code>", "<code> typings install dt~es6-shim --save --global\n</code>", "<code>///&lt;reference path=\"../typings/index.d.ts\"/&gt;\n</code>", "<code>npm install -g typings typings install</code>", "<code>{\n    \"compilerOptions\": {\n        \"target\": \"es6\", &lt;-- It was es5\n        \"module\": \"system\",\n        \"moduleResolution\": \"node\",\n        \"sourceMap\": true,\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true,\n        \"removeComments\": false,\n        \"noImplicitAny\": false,\n        \"outDir\": \"../wwwroot/app\"\n    },\n    \"compileOnSave\": true,\n    \"exclude\": [\n        \"../node_modules\",\n        \"../typings/main\"\n    ]\n}\n</code>", "<code>\"lib\"</code>", "<code>\"target\"</code>", "<code>declare var System: any;\ndeclare var require: any;\n</code>", "<code>node_modules/angular2</code>", "<code>node_modules/angular</code>", "<code>node_modules/angular</code>", "<code>node_modules</code>", "<code>typings install</code>", "<code>    \"exclude\": [\n        \"node_modules\",\n        \"typings/main\",\n        \"typings/main.d.ts\"\n    ]\n</code>", "<code>tsconfig</code>", "<code>es6-shim</code>", "<code>import 'rxjs/add/operator/map';\n</code>", "<code>import './rxjs-extensions';</code>", "<code>app.component.ts</code>", "<code>import { Directive, Component, OnInit, Input } from '@angular/core';\n</code>", "<code>browser.d.ts</code>", "<code>typings</code>", "<code>typings</code>", "<code>script</code>", "<code>package.json</code>", "<code>typings</code>", "<code>typings.json</code>", "<code>core-js</code>", "<code>es6-shim</code>", "<code>import 'rxjs/add/operator/retry';\nimport 'rxjs/add/operator/timeout';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/map';\n\n\n\n\nthis.http.post(url, JSON.stringify(json), {headers: headers, timeout: 1000})\n\n         .retry(2)\n\n         .timeout(10000, new Error('Time out.'))\n\n         .delay(10)\n\n         .map((res) =&gt; res.json())\n        .subscribe(\n          (data) =&gt; resolve(data.json()),\n          (err) =&gt; reject(err)\n        );\n</code>", "<code>tsconfig.json</code>", "<code>\"target\": \"es5\"\n</code>", "<code>\"target\": \"es6\"\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "oop"], "creation_date": 1249755117, "body_markdown": "I created a JavaScript object, but how I can determine the class of that object?\r\n\r\nI want something similar to Java&#39;s `.getClass()` method. ", "last_edit_date": 1419685479, "up_vote_count": 445, "link": "https://stackoverflow.com/questions/1249531/how-to-get-a-javascript-objects-class", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1249755609, "answer_id": 1249554, "path": "stack.gulp.answer", "score": 642, "up_vote_count": 644, "is_accepted": true, "last_activity_date": 1474041611, "last_edit_date": 1474041611, "body_markdown": "There&#39;s no exact counterpart to Java&#39;s [`getClass()`](http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()) in JavaScript. Mostly that&#39;s due to JavaScript being a [prototype-based language](http://en.wikipedia.org/wiki/Prototype-based_programming), as opposed to Java being a [class-based](http://en.wikipedia.org/wiki/Class-based_programming) one.\r\n\r\nDepending on what you need `getClass()` for, there are several options in JavaScript: \r\n\r\n - [`typeof`][1]\r\n - [`instanceof`][2]\r\n - `obj.`[`constructor`][5]\r\n - `func.`[`prototype`][3], `proto`.[`isPrototypeOf`][4]\r\n\r\n\r\nA few examples:\r\n\r\n    function Foo() {}\r\n    var foo = new Foo();\r\n\r\n    typeof Foo;             // == &quot;function&quot;\r\n    typeof foo;             // == &quot;object&quot;\r\n\r\n    foo instanceof Foo;     // == true\r\n    foo.constructor.name;   // == &quot;Foo&quot;\r\n    Foo.name                // == &quot;Foo&quot;    \r\n    \r\n    Foo.prototype.isPrototypeOf(foo);   // == true\r\n    \r\n    Foo.prototype.bar = function (x) {return x+x;};\r\n    foo.bar(21);            // == 42\r\n\r\nNote: if you are compiling your code with Uglify it will change non-global class names. To prevent this, Uglify has a [`--mangle`](https://github.com/mishoo/UglifyJS2) param that you can set to false is using [gulp](https://github.com/terinjokes/gulp-uglify) or [grunt](https://github.com/gruntjs/grunt-contrib-uglify).\r\n\r\n\r\n  [1]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof\r\n  [2]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/instanceof\r\n  [3]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/prototype\r\n  [4]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\r\n  [5]: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/constructor"}, {"tags": [], "down_vote_count": 1, "creation_date": 1249755695, "answer_id": 1249555, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1249755695, "body_markdown": "Javascript is a class-less languages: there are no classes that defines the behaviour of a class statically as in Java. JavaScript uses prototypes instead of classes for defining object properties, including methods, and inheritance. It is possible to simulate many class-based features with prototypes in JavaScript.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1249755841, "answer_id": 1249563, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1249756290, "last_edit_date": 1249756290, "body_markdown": "You can get a reference to the constructor function which created the object by using the [constructor property][1]:\r\n\r\n    function MyObject(){\r\n    }\r\n    \r\n    var obj = new MyObject();\r\n    obj.constructor; // MyObject\r\n\r\nIf you need to confirm the type of an object at runtime you can use the [instanceof][2] operator:\r\n\r\n    obj instanceof MyObject // true\r\n\r\n\r\n  [1]: https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/constructor\r\n  [2]: https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/instanceof_Operator"}, {"tags": [], "down_vote_count": 1, "creation_date": 1249756385, "answer_id": 1249579, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1349791720, "last_edit_date": 1349791720, "body_markdown": "In javascript, there are no classes, but I think that you want the constructor name and `obj.constructor.toString()` will tell you what you need."}, {"tags": [], "down_vote_count": 0, "creation_date": 1249797182, "answer_id": 1250766, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1249797182, "body_markdown": "This function returns either `&quot;undefined&quot;`, `&quot;null&quot;`, or the `&quot;class&quot;` in `[object class]` from `Object.prototype.toString.call(someObject)`.\r\n\r\n    function getClass(obj) {\r\n      if (typeof obj === &quot;undefined&quot;)\r\n        return &quot;undefined&quot;;\r\n      if (obj === null)\r\n        return &quot;null&quot;;\r\n      return Object.prototype.toString.call(obj)\r\n        .match(/^\\[object\\s(.*)\\]$/)[1];\r\n    }\r\n    \r\n    getClass(&quot;&quot;)   === &quot;String&quot;;\r\n    getClass(true) === &quot;Boolean&quot;;\r\n    getClass(0)    === &quot;Number&quot;;\r\n    getClass([])   === &quot;Array&quot;;\r\n    getClass({})   === &quot;Object&quot;;\r\n    getClass(null) === &quot;null&quot;;\r\n    // etc..."}, {"tags": [], "down_vote_count": 3, "creation_date": 1325608613, "answer_id": 8715426, "path": "stack.gulp.answer", "score": 184, "up_vote_count": 187, "is_accepted": false, "last_activity_date": 1469054998, "last_edit_date": 1469054998, "body_markdown": "    obj.constructor.name\r\n\r\nworks in most cases in modern browsers, despite `Function.name` not being officially added to the standard until ES6. If the object is instantiated with `var obj = new MyClass()`, it will return &quot;MyClass&quot; as a string.\r\n\r\nIt will return &quot;Number&quot; for numbers, &quot;Array&quot; for arrays and &quot;Function&quot; for functions, etc. It seems to be quite reliable. The only cases where it fails are if an object is created without a prototype, via `Object.create( null )`, or the object was instantiated from an anonymously-defined (unnamed) function.\r\n\r\nArguably, `obj.constructor.name` is much more intuitive than `typeof`, and could be encapsulated in a function to handle the odd case where `constructor` isn&#39;t defined (and to handle null references).\r\n\r\n**Note:** Another advantage to this method is it works intuitively across DOM boundaries versus comparing the constructor objects directly or using `instanceOf`. The reason that doesn&#39;t work as you might expect is there are actually different instances of the constructor function on each DOM, thus doing an object comparison on their constructors won&#39;t work.\r\n\r\n**Note 2:** Oddly enough, this method appears to return the name of the base-most function used in a prototype chain, which is unfortunately not intuitive. For example if `B` derives prototypically from `A` and you create a new instance of `B`, `b`, `b.constructor.name` returns &quot;A&quot;! So that feels totally backwards. It does work fine for single-level prototypes and all primitives, however."}, {"tags": [], "down_vote_count": 0, "creation_date": 1349362520, "answer_id": 12730085, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1349386774, "last_edit_date": 1349386774, "body_markdown": "To get the &quot;pseudo class&quot;, you can get the constructor function, by\r\n\r\n    obj.constructor\r\n\r\nassuming the `constructor` is set correctly when you do the inheritance -- which is by something like:\r\n\r\n    Dog.prototype = new Animal();\r\n    Dog.prototype.constructor = Dog;\r\n\r\nand these two lines, together with:\r\n\r\n    var woofie = new Dog()\r\n\r\nwill make `woofie.constructor` point to `Dog`.  Note that `Dog` is a constructor function, and is a `Function` object.  But you can do `if (woofie.constructor === Dog) { ... }`.\r\n\r\nIf you want to get the class name as a string, I found the following working well:\r\n\r\nhttp://blog.magnetiq.com/post/514962277/finding-out-class-names-of-javascript-objects\r\n\r\n    function getObjectClass(obj) {\r\n        if (obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor.toString) {\r\n            var arr = obj.constructor.toString().match(\r\n                /function\\s*(\\w+)/);\r\n    \r\n            if (arr &amp;&amp; arr.length == 2) {\r\n                return arr[1];\r\n            }\r\n        }\r\n    \r\n        return undefined;\r\n    }\r\n\r\nIt gets to the constructor function, converts it to string, and extracts the name of the constructor function.\r\n\r\nNote that `obj.constructor.name` could have worked well, but it is not standard.  It is on Chrome and Firefox, but not on IE, including IE 9 or IE 10 RTM.\r\n\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1355747647, "answer_id": 13914278, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1355747647, "body_markdown": "I find `object.constructor.toString()` return `[object objectClass]` in IE ,rather than `function objectClass () {}` returned in chome. So,I think the code in http://blog.magnetiq.com/post/514962277/finding-out-class-names-of-javascript-objects may not work well in IE.And I fixed the code as follows:\r\n\r\n###code:\r\n\r\n    var getObjectClass = function (obj) {\r\n\t\t\tif (obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor.toString()) {\r\n\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t *\tfor browsers which have name property in the constructor\r\n\t\t\t\t\t *  of the object,such as chrome \r\n\t\t\t\t\t */\r\n\t\t\t\t\tif(obj.constructor.name) {\r\n\t\t\t\t\t\treturn obj.constructor.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar str = obj.constructor.toString();\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * executed if the return of object.constructor.toString() is \r\n\t\t\t\t\t * &quot;[object objectClass]&quot;\r\n\t\t\t\t\t */\r\n\t\t\t\t\t \r\n\t\t\t\t\tif(str.charAt(0) == &#39;[&#39;)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar arr = str.match(/\\[\\w+\\s*(\\w+)\\]/);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * executed if the return of object.constructor.toString() is \r\n\t\t\t\t\t\t\t * &quot;function objectClass () {}&quot;\r\n\t\t\t\t\t\t\t * for IE Firefox\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tvar arr = str.match(/function\\s*(\\w+)/);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (arr &amp;&amp; arr.length == 2) {\r\n\t\t\t\t\t\t\t\treturn arr[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t  return undefined;\t\r\n\t\t};\r\n\t\t"}, {"tags": [], "down_vote_count": 1, "creation_date": 1413562684, "answer_id": 26429278, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1413562684, "body_markdown": "Agree with dfa, that&#39;s why i consider the prototye as the class when no named class found\r\n\r\nHere is an upgraded function of the one posted by Eli Grey, to match my way of mind\r\n\r\n    function what(obj){\r\n    \tif(typeof(obj)===&quot;undefined&quot;)return &quot;undefined&quot;;\r\n    \tif(obj===null)return &quot;Null&quot;;\r\n    \tvar res = Object.prototype.toString.call(obj).match(/^\\[object\\s(.*)\\]$/)[1];\r\n    \tif(res===&quot;Object&quot;){\r\n    \t\tres = obj.constructor.name;\r\n    \t\tif(typeof(res)!=&#39;string&#39; || res.length==0){\r\n    \t\t\tif(obj instanceof jQuery)return &quot;jQuery&quot;;// jQuery build stranges Objects\r\n    \t\t\tif(obj instanceof Array)return &quot;Array&quot;;// Array prototype is very sneaky\r\n    \t\t\treturn &quot;Object&quot;;\r\n    \t\t}\r\n    \t}\r\n    \treturn res;\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1450822430, "answer_id": 34425317, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1450822430, "body_markdown": "Here&#39;s a implementation of `getClass()` and `getInstance()`\r\n-----------------------------------------------------------\r\n\r\nYou are able to get a reference for an Object&#39;s class using `window`.\r\n\r\nFrom an instance context:\r\n-------------------------\r\n\r\n    function A() {\r\n        this.getClass = function() {\r\n            return window[this.constructor.name];\r\n        }\r\n\r\n        this.getNewInstance = function() {\r\n            return new window[this.constructor.name];\r\n        }\r\n    }\r\n\r\n    var a = new A();\r\n    console.log(a.getClass());  //  function A { // etc... }\r\n\r\n    // you can even:\r\n    var b = new a.getClass();\r\n    b instanceof A; // true\r\n\r\n\r\nFrom static context:\r\n--------------------\r\n\r\n    function B() {};\r\n    \r\n    B.getClass = function() {\r\n        return window[this.name];\r\n    }\r\n    \r\n    B.getInstance() {\r\n        return new window[this.name];\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1454426177, "answer_id": 35157168, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1454426177, "body_markdown": "For Javascript Classes in ES6 you can use ```object.constructor```. In the example class below the ```getClass()``` method returns the ES6 class as you would expect:\r\n\r\n    var Cat = class {\r\n    \r\n        meow() {\r\n\r\n            console.log(&quot;meow!&quot;);\r\n    \r\n        }\r\n\r\n        getClass() {\r\n\r\n            return this.constructor;\r\n\r\n        }\r\n    \r\n    }\r\n    \r\n    var fluffy = new Cat();\r\n\r\n    ...\r\n\r\n    var AlsoCat = fluffy.getClass();\r\n    var ruffles = new AlsoCat();\r\n\r\n    ruffles.meow();    // &quot;meow!&quot;\r\n\r\nIf you instantiate the class from the ``getClass`` method make sure you wrap it in brackets e.g. ```ruffles = new ( fluffy.getClass() )( args... );```\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1470023116, "answer_id": 38690703, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1470023116, "body_markdown": "In keeping with its unbroken record of backwards-compatibility, ECMAScript 6, JavaScript still doesn&#39;t have a `class` type (though not everyone understands this). It **does** have a `class` keyword as part of its `class` syntax for creating prototypes\u2014but **still no thing called class**. JavaScript is not now and has **never been a classical OOP language**. Speaking of JS in terms of class is only either misleading or a sign of not yet grokking prototypical inheritance (just keeping it real).\r\n\r\nThat means `this.constructor` is still a great way to get a reference to the `constructor` function. And `this.constructor.prototype` is the way to access the prototype itself. Since this isn&#39;t Java, it&#39;s not a class. It&#39;s the prototype object your instance was instantiated from. Here is an example using the ES6 syntactic sugar for creating a prototype chain:\r\n\r\n    class Foo {\r\n      get foo () {\r\n        console.info(this.constructor, this.constructor.name)\r\n        return &#39;foo&#39;\r\n      }\r\n    }\r\n    \r\n    class Bar extends Foo {\r\n      get foo () {\r\n        console.info(&#39;[THIS]&#39;, this.constructor, this.constructor.name, Object.getOwnPropertyNames(this.constructor.prototype))\r\n        console.info(&#39;[SUPER]&#39;, super.constructor, super.constructor.name, Object.getOwnPropertyNames(super.constructor.prototype))\r\n    \r\n        return `${super.foo} + bar`\r\n      }\r\n    }\r\n    \r\n    const bar = new Bar()\r\n    console.dir(bar.foo)\r\n\r\n\r\nThis is what that outputs using `babel-node`:\r\n\r\n    &gt; $ babel-node ./foo.js                                                                                                                   \u2b21 6.2.0 [&#177;master \u25cf]\r\n    [THIS] [Function: Bar] &#39;Bar&#39; [ &#39;constructor&#39;, &#39;foo&#39; ]\r\n    [SUPER] [Function: Foo] &#39;Foo&#39; [ &#39;constructor&#39;, &#39;foo&#39; ]\r\n    [Function: Bar] &#39;Bar&#39;\r\n    &#39;foo + bar&#39;\r\n\r\nThere you have it! In 2016, there&#39;s a `class` keyword in JavaScript, but still no class type. `this.constructor` is the best way to get the constructor function, `this.constructor.prototype` the best way to get access to the prototype itself."}, {"tags": [], "down_vote_count": 2, "creation_date": 1478970829, "answer_id": 40565467, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1478970829, "body_markdown": "Question seems already answered but the OP wants to access the class of and object, just like we do in Java and the selected answer is not enough (imho).\r\n\r\nWith the following explanation, we can get a class of an object(it&#39;s actually called prototype in javascript).\r\n\r\n    var arr = new Array(&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;);\r\n    var arr2 = new Array(&#39;white&#39;, &#39;black&#39;, &#39;orange&#39;);\r\n\r\nYou can add a property like this:\r\n\r\n    Object.defineProperty(arr,&#39;last&#39;, {\r\n      get: function(){\r\n        return this[this.length -1];\r\n      }\r\n    });\r\n    console.log(arr.last) // blue\r\n\r\nBut `.last` property will only be available to &#39;`arr`&#39; object which is instantiated from Array prototype. So, in order to have the `.last` property to be available for all objects instantiated from Array prototype, we have to define the `.last` property for Array prototype:\r\n\r\n    Object.defineProperty(Array.prototype,&#39;last&#39;, {\r\n      get: function(){\r\n        return this[this.length -1];\r\n      }\r\n    });\r\n    console.log(arr.last) // blue\r\n    console.log(arr2.last) // orange\r\n\r\nThe problem here is, you have to know which object type (prototype) the &#39;`arr`&#39; and &#39;`arr2`&#39; variables belongs to! In other words, if you don&#39;t know class type (prototype) of the &#39;`arr`&#39; object, then you won&#39;t be able to define a property for them. In the above example, we know arr is instance of the Array object, that&#39;s why we used Array.prototype to define a property for Array. But what if we didn&#39;t know the class(prototype) of the &#39;`arr`&#39;?\r\n\r\n    Object.defineProperty(arr.__proto__,&#39;last2&#39;, {\r\n      get: function(){\r\n        return this[this.length -1];\r\n      }\r\n    });\r\n    console.log(arr.last) // blue\r\n    console.log(arr2.last) // orange\r\n\r\nAs you can see, without knowing that &#39;`arr`&#39; is an Array, we can add a new property just bu referring the class of the &#39;`arr`&#39; by using &#39;`arr.__proto__`&#39;.\r\n\r\nWe accessed the prototype of the &#39;`arr`&#39; without knowing that it&#39;s an instance of Array and I think that&#39;s what OP asked.\r\n\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1496049377, "answer_id": 44238781, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1496049377, "body_markdown": "i had a situation to work generic now and used this:\r\n\r\n    class Test {\r\n      // your class definition\r\n    }\r\n    \r\n    nameByType = function(type){\r\n      return type.prototype[&quot;constructor&quot;][&quot;name&quot;];\r\n    };\r\n    \r\n    console.log(nameByType(Test));\r\n\r\nthats the only way i found to get the class name by type input if you don&#39;t have a instance of an object.\r\n\r\n(written in ES2017)\r\n\r\n\r\ndot notation also works fine\r\n\r\n\r\n    console.log(Test.prototype.constructor.name); // returns &quot;Test&quot; "}], "title": "How to get a JavaScript object&#39;s class?", "view_count": 432804, "answer_count": 14, "code_snippet": ["<code>.getClass()</code>", "<code>class</code>", "<code>class</code>", "<code>class</code>", "<code>super</code>", "<code>getClass()</code>", "<code>getClass()</code>", "<code>typeof</code>", "<code>instanceof</code>", "<code>obj.</code>", "<code>constructor</code>", "<code>func.</code>", "<code>prototype</code>", "<code>proto</code>", "<code>isPrototypeOf</code>", "<code>function Foo() {}\nvar foo = new Foo();\n\ntypeof Foo;             // == \"function\"\ntypeof foo;             // == \"object\"\n\nfoo instanceof Foo;     // == true\nfoo.constructor.name;   // == \"Foo\"\nFoo.name                // == \"Foo\"    \n\nFoo.prototype.isPrototypeOf(foo);   // == true\n\nFoo.prototype.bar = function (x) {return x+x;};\nfoo.bar(21);            // == 42\n</code>", "<code>--mangle</code>", "<code>func.prototype</code>", "<code>prototype</code>", "<code>instanceof</code>", "<code>isPrototypeOf()</code>", "<code>__proto__</code>", "<code>Object.getPrototypeOf()</code>", "<code>Foo</code>", "<code>foo.constructor == Foo</code>", "<code>obj.constructor.name\n</code>", "<code>Function.name</code>", "<code>var obj = new MyClass()</code>", "<code>Object.create( null )</code>", "<code>obj.constructor.name</code>", "<code>typeof</code>", "<code>constructor</code>", "<code>instanceOf</code>", "<code>B</code>", "<code>A</code>", "<code>B</code>", "<code>b</code>", "<code>b.constructor.name</code>", "<code>Function.name</code>", "<code>Object.create(something).constructor === something.constructor</code>", "<code>obj.constructor.name</code>", "<code>var Foo = function() {}</code>", "<code>var foo = new Foo()</code>", "<code>foo.constructor.name</code>", "<code>constructor.name</code>", "<code>\"undefined\"</code>", "<code>\"null\"</code>", "<code>\"class\"</code>", "<code>[object class]</code>", "<code>Object.prototype.toString.call(someObject)</code>", "<code>function getClass(obj) {\n  if (typeof obj === \"undefined\")\n    return \"undefined\";\n  if (obj === null)\n    return \"null\";\n  return Object.prototype.toString.call(obj)\n    .match(/^\\[object\\s(.*)\\]$/)[1];\n}\n\ngetClass(\"\")   === \"String\";\ngetClass(true) === \"Boolean\";\ngetClass(0)    === \"Number\";\ngetClass([])   === \"Array\";\ngetClass({})   === \"Object\";\ngetClass(null) === \"null\";\n// etc...\n</code>", "<code>\"Object\"</code>", "<code>obj.constructor\n</code>", "<code>constructor</code>", "<code>Dog.prototype = new Animal();\nDog.prototype.constructor = Dog;\n</code>", "<code>var woofie = new Dog()\n</code>", "<code>woofie.constructor</code>", "<code>Dog</code>", "<code>Dog</code>", "<code>Function</code>", "<code>if (woofie.constructor === Dog) { ... }</code>", "<code>function getObjectClass(obj) {\n    if (obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor.toString) {\n        var arr = obj.constructor.toString().match(\n            /function\\s*(\\w+)/);\n\n        if (arr &amp;&amp; arr.length == 2) {\n            return arr[1];\n        }\n    }\n\n    return undefined;\n}\n</code>", "<code>obj.constructor.name</code>", "<code>function MyObject(){\n}\n\nvar obj = new MyObject();\nobj.constructor; // MyObject\n</code>", "<code>obj instanceof MyObject // true\n</code>", "<code>object.constructor.toString()</code>", "<code>[object objectClass]</code>", "<code>function objectClass () {}</code>", "<code>var getObjectClass = function (obj) {\n        if (obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor.toString()) {\n\n                /*\n                 *  for browsers which have name property in the constructor\n                 *  of the object,such as chrome \n                 */\n                if(obj.constructor.name) {\n                    return obj.constructor.name;\n                }\n                var str = obj.constructor.toString();\n                /*\n                 * executed if the return of object.constructor.toString() is \n                 * \"[object objectClass]\"\n                 */\n\n                if(str.charAt(0) == '[')\n                {\n                        var arr = str.match(/\\[\\w+\\s*(\\w+)\\]/);\n                } else {\n                        /*\n                         * executed if the return of object.constructor.toString() is \n                         * \"function objectClass () {}\"\n                         * for IE Firefox\n                         */\n                        var arr = str.match(/function\\s*(\\w+)/);\n                }\n                if (arr &amp;&amp; arr.length == 2) {\n                            return arr[1];\n                        }\n          }\n          return undefined; \n    };\n</code>", "<code>object.constructor</code>", "<code>getClass()</code>", "<code>var Cat = class {\n\n    meow() {\n\n        console.log(\"meow!\");\n\n    }\n\n    getClass() {\n\n        return this.constructor;\n\n    }\n\n}\n\nvar fluffy = new Cat();\n\n...\n\nvar AlsoCat = fluffy.getClass();\nvar ruffles = new AlsoCat();\n\nruffles.meow();    // \"meow!\"\n</code>", "<code>getClass</code>", "<code>ruffles = new ( fluffy.getClass() )( args... );</code>", "<code>class Test {\n  // your class definition\n}\n\nnameByType = function(type){\n  return type.prototype[\"constructor\"][\"name\"];\n};\n\nconsole.log(nameByType(Test));\n</code>", "<code>console.log(Test.prototype.constructor.name); // returns \"Test\" \n</code>", "<code>obj.constructor.toString()</code>", "<code>.name</code>", "<code>.name</code>", "<code>function what(obj){\n    if(typeof(obj)===\"undefined\")return \"undefined\";\n    if(obj===null)return \"Null\";\n    var res = Object.prototype.toString.call(obj).match(/^\\[object\\s(.*)\\]$/)[1];\n    if(res===\"Object\"){\n        res = obj.constructor.name;\n        if(typeof(res)!='string' || res.length==0){\n            if(obj instanceof jQuery)return \"jQuery\";// jQuery build stranges Objects\n            if(obj instanceof Array)return \"Array\";// Array prototype is very sneaky\n            return \"Object\";\n        }\n    }\n    return res;\n}\n</code>", "<code>class</code>", "<code>class</code>", "<code>class</code>", "<code>super</code>", "<code>class</code>", "<code>class</code>", "<code>class</code>", "<code>this.constructor</code>", "<code>constructor</code>", "<code>this.constructor.prototype</code>", "<code>class Foo {\n  get foo () {\n    console.info(this.constructor, this.constructor.name)\n    return 'foo'\n  }\n}\n\nclass Bar extends Foo {\n  get foo () {\n    console.info('[THIS]', this.constructor, this.constructor.name, Object.getOwnPropertyNames(this.constructor.prototype))\n    console.info('[SUPER]', super.constructor, super.constructor.name, Object.getOwnPropertyNames(super.constructor.prototype))\n\n    return `${super.foo} + bar`\n  }\n}\n\nconst bar = new Bar()\nconsole.dir(bar.foo)\n</code>", "<code>babel-node</code>", "<code>&gt; $ babel-node ./foo.js                                                                                                                   \u2b21 6.2.0 [\u00b1master \u25cf]\n[THIS] [Function: Bar] 'Bar' [ 'constructor', 'foo' ]\n[SUPER] [Function: Foo] 'Foo' [ 'constructor', 'foo' ]\n[Function: Bar] 'Bar'\n'foo + bar'\n</code>", "<code>class</code>", "<code>this.constructor</code>", "<code>this.constructor.prototype</code>", "<code>getClass()</code>", "<code>getInstance()</code>", "<code>window</code>", "<code>function A() {\n    this.getClass = function() {\n        return window[this.constructor.name];\n    }\n\n    this.getNewInstance = function() {\n        return new window[this.constructor.name];\n    }\n}\n\nvar a = new A();\nconsole.log(a.getClass());  //  function A { // etc... }\n\n// you can even:\nvar b = new a.getClass();\nb instanceof A; // true\n</code>", "<code>function B() {};\n\nB.getClass = function() {\n    return window[this.name];\n}\n\nB.getInstance() {\n    return new window[this.name];\n}\n</code>", "<code>this.constructor</code>", "<code>var arr = new Array('red', 'green', 'blue');\nvar arr2 = new Array('white', 'black', 'orange');\n</code>", "<code>Object.defineProperty(arr,'last', {\n  get: function(){\n    return this[this.length -1];\n  }\n});\nconsole.log(arr.last) // blue\n</code>", "<code>.last</code>", "<code>arr</code>", "<code>.last</code>", "<code>.last</code>", "<code>Object.defineProperty(Array.prototype,'last', {\n  get: function(){\n    return this[this.length -1];\n  }\n});\nconsole.log(arr.last) // blue\nconsole.log(arr2.last) // orange\n</code>", "<code>arr</code>", "<code>arr2</code>", "<code>arr</code>", "<code>arr</code>", "<code>Object.defineProperty(arr.__proto__,'last2', {\n  get: function(){\n    return this[this.length -1];\n  }\n});\nconsole.log(arr.last) // blue\nconsole.log(arr2.last) // orange\n</code>", "<code>arr</code>", "<code>arr</code>", "<code>arr.__proto__</code>", "<code>arr</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "angularjs", "web-applications", "mean-stack"], "creation_date": 1398090361, "body_markdown": "I wanted to use the MEAN JavaScript Stack, but I noticed that there are two different stacks with either their own website and installation methods: mean.js and mean.io. So I came up asking myself this question: &quot;Which one do I use?&quot;.\r\n\r\nSo in order to answer this question I ask the community if you could explain what are the differences between these two? And if possible pros and cons? Because they look very similar to me.", "last_edit_date": 1405947959, "up_vote_count": 325, "link": "https://stackoverflow.com/questions/23199392/difference-between-mean-js-and-mean-io", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1398118597, "answer_id": 23206972, "path": "stack.gulp.answer", "score": 366, "up_vote_count": 366, "is_accepted": true, "last_activity_date": 1438183284, "last_edit_date": 1438183284, "body_markdown": "They&#39;re essentially the same... They both use swig for templating, they both use karma and mocha for tests, passport integration, nodemon, etc. \r\n\r\nWhy so similar? Mean.js is a fork of Mean.io and both initiatives were started by [the same guy][1]... Mean.io is now under the umbrella of the company Linnovate and looks like the guy (Amos Haviv) stopped his collaboration with this company and started Mean.js. You can read more about the reasons [here][2]. \r\n\r\nNow... main (or little) differences you can see right now are:\r\n\r\n&lt;br&gt;\r\n\r\n**SCAFFOLDING AND BOILERPLATE GENERATION**\r\n\r\nMean.io uses a custom cli tool named &#39;mean&#39;&lt;br&gt;\r\nMean.js uses Yeoman Generators\r\n\r\n&lt;br&gt;\r\n**MODULARITY**\r\n\r\nMean.io uses a more self-contained node packages modularity with client and server files inside the modules.&lt;br&gt;\r\nMean.js uses modules just in the front-end (for angular), and connects them with Express. Although they were working on vertical modules as well...\r\n\r\n&lt;br&gt;\r\n**BUILD SYSTEM**\r\n\r\nMean.io has recently moved to gulp&lt;br&gt;\r\nMean.js uses grunt\r\n\r\n&lt;br&gt;\r\n**DEPLOYMENT**\r\n\r\nBoth have Dockerfiles in their respective repos, and Mean.io has one-click install on [Google Compute Engine][3], while Mean.js can also be deployed with [one-click install on Digital Ocean][4].\r\n\r\n&lt;br&gt;\r\n**DOCUMENTATION**\r\n\r\nMean.io has ok docs&lt;br&gt;\r\nMean.js has AWESOME docs\r\n\r\n&lt;br&gt;\r\n**COMMUNITY**\r\n\r\nMean.io has a bigger community since it was the original boilerplate&lt;br&gt;\r\nMean.js has less momentum but steady growth\r\n\r\n&lt;br&gt;\r\nOn a personal level, I like more the philosophy and openness of MeanJS and more the traction and modules/packages approach of MeanIO. Both are nice, and you&#39;ll end probably modifying them, so you can&#39;t really go wrong picking one or the other. Just take them as starting point and as a learning exercise.\r\n\r\n&lt;br&gt;\r\n&lt;h2&gt;ALTERNATIVE \u201cMEAN\u201d SOLUTIONS&lt;/h2&gt;\r\nMEAN is a generic way (coined by [Valeri Karpov][5]) to describe a boilerplate/framework that takes &quot;Mongo + Express + Angular + Node&quot; as the base of the stack. You can find frameworks with this stack that use other denomination, some of them really good for RAD (Rapid Application Development) and building SPAs. Eg:\r\n\r\n - **[Meteor][6]**. Now with official [Angular support][7], represents a [great MEAN stack][8] \r\n - [StrongLoop Loopback][9] (main Node.js core contributors and [Express maintainers][10])\r\n - [Generator Angular Fullstack][11]\r\n - [Sails.js][12]\r\n - [Cleverstack][13]\r\n - Deployd, etc (there are more)\r\n\r\n\r\nYou also have [Hackathon Starter][14]. It doesn&#39;t have A of MEAN (it is &#39;MEN&#39;), but it rocks..\r\n\r\nHave fun!\r\n\r\n\r\n  [1]: https://github.com/amoshaviv\r\n  [2]: http://blog.meanjs.org/post/76726660228/forking-out-of-an-open-source-conflict\r\n  [3]: https://cloud.google.com/solutions/mean/click-to-deploy\r\n  [4]: https://www.digitalocean.com/features/one-click-apps/mean/\r\n  [5]: http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and\r\n  [6]: https://www.meteor.com/\r\n  [7]: http://angular-meteor.com/\r\n  [8]: http://info.meteor.com/blog/thoughts-on-angular-meteor-as-a-great-mean-stack\r\n  [9]: http://strongloop.com/mobile-application-development/loopback/\r\n  [10]: http://strongloop.com/strongblog/tj-holowaychuk-sponsorship-of-express/\r\n  [11]: https://github.com/DaftMonk/generator-angular-fullstack\r\n  [12]: http://www.quora.com/Node-js/Should-I-use-a-MEAN-stack-or-Angular-+-Sails-js-for-a-node-js-powered-back-end-structure-or-framework\r\n  [13]: http://cleverstack.io/\r\n  [14]: https://github.com/sahat/hackathon-starter"}, {"tags": [], "down_vote_count": 1, "creation_date": 1398483572, "answer_id": 23306356, "path": "stack.gulp.answer", "score": 67, "up_vote_count": 68, "is_accepted": false, "last_activity_date": 1503416464, "last_edit_date": 1503416464, "body_markdown": "First of all, **MEAN** is an acronym for **M**ongoDB, **E**xpress, **A**ngular and **N**ode.js. \r\n\r\nIt *generically* identifies the combined used of these technologies in a &quot;stack&quot;. There is no such a thing as &quot;*The* MEAN framework&quot;.\r\n\r\n[Lior Kesos][1] at [Linnovate][2] took advantage of this confusion. He bought the domain MEAN.io and put some code at https://github.com/linnovate/mean\r\n\r\nThey luckily received a lot of publicity, and theree are more and more articles and video about MEAN. When you Google &quot;mean framework&quot;, mean.io is the first in the list.\r\n\r\nUnfortunately the code at https://github.com/linnovate/mean seems *poorly engineered*. \r\n\r\nIn February I fell in the trap myself. The site mean.io had a catchy design and the Github repo had 1000+ stars. The idea of questioning the quality did not even pass through my mind. I started experimenting with it but it did not take too long to stumble upon things that were not working, and puzzling pieces of code. \r\n\r\nThe commit history was also pretty concerning. They re-engineered the code and directory structure multiple times, and merging the new changes is too time consuming.\r\n\r\nThe nice things about both mean.io and mean.js code is that they come with Bootstrap integration. They also come with Facebook, Github, Linkedin etc authentication through [PassportJs][3] and an example of a model (Article) on the backend on MongoDB that sync with the frontend model with AngularJS.\r\n\r\nAccording to Linnovate&#39;s website: \r\n&gt; Linnovate is the leading Open Source company in Israel, with the most\r\n&gt; experienced team in the country, dedicated to the creation of high-end\r\n&gt; open source solutions. Linnovate is the only company in Israel which\r\n&gt; gives an A-Z services for enterprises for building and maintaining\r\n&gt; their next web project.\r\n\r\nFrom the website it looks like that their core skill set is Drupal (a PHP content management system) and only lately they started using Node.js and AngularJS.\r\n\r\nLately I was reading the [Mean.js Blog][4] and things became clearer. My understanding is that the main Javascript developer (Amos Haviv) left Linnovate to work on Mean.js leaving MEAN.io project with people that are novice Node.js developers that are slowing understanding how things are supposed to work.\r\n\r\nIn the future things may change but for now I would avoid to use mean.io. If you are looking for a boilerplate for a quickstart Mean.js seems a better option than mean.io.\r\n\r\n  [1]: http://www.linkedin.com/in/liorkesos\r\n  [2]: http://www.linnovate.net\r\n  [3]: http://passportjs.org/\r\n  [4]: http://blog.meanjs.org/post/76726660228/forking-out-of-an-open-source-conflict"}, {"tags": [], "down_vote_count": 1, "creation_date": 1403821754, "answer_id": 24441248, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1444662674, "last_edit_date": 1444662674, "body_markdown": "Here is a side-by-side comparison of several application starters/generators and other technologies including MEAN.js, MEAN.io, and cleverstack.  I keep adding alternatives as I find time and as that happens, the list of potentially provided benefits keeps growing too.  Today it&#39;s up to around 1600.  If anyone wants to help improve its accuracy or completeness, click the next link and do a questionnaire about something you know.\r\n\r\n[Compare app technologies project](http://www.dancancro.com/technology-questionnaires/)\r\n\r\nFrom this database, the system generates reports like the following:\r\n\r\n[MeanJS vs MeanIO trade-off report](http://dancancro.com/meanio_vs_meanjs.html)\r\n\r\n\r\n  [1]: http://www.dancancro.com/comparison-of-angularjs-application-starters/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1406109681, "answer_id": 24907475, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1432080448, "last_edit_date": 1432080448, "body_markdown": "I&#39;m surprised nobody has mentioned the Yeoman generator [angular-fullstack](https://github.com/DaftMonk/generator-angular-fullstack).\r\nIt is the number one Yeoman community generator, with currently 1490 stars on the [generator page](http://yeoman.io/generators/) vs Mean.js&#39; 81 stars (admittedly not a fair comparison given how new MEANJS is).  It is appears to be actively maintained and is in version 2.05 as I write this.  Unlike MEANJS, it doesn&#39;t use Swig for templating.  It can be scaffolded with passport built in.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1406200375, "answer_id": 24932110, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1439912346, "last_edit_date": 1439912346, "body_markdown": "[The Starter Trade-offs sheet](https://docs.google.com/spreadsheets/d/1r8rJy2Q5p5QORYKcye93UECwOlSgFL24c5fyF7dqhaM/edit#gid=239778472) of my comparison spreadsheet has comprehensive one-on-one comparisons between each generator.  So no more need to distortedly cherry-pick great things to say about your favorite.  \r\n\r\nHere is the one between generator-angular-fullstack and MEAN.js.  The percentages are values for each benefit based on my personal weightings, where a perfect generator would be 100% \r\n\r\ngenerator- angular- fullstack offers 8% that MEANJS.org doesn&#39;t\r\n\r\n* 1.9% Client-side end-to-end tests&lt;br/&gt;\r\n* 0.6% factory&lt;br/&gt;\r\n* 0.5% provider&lt;br/&gt;\r\n* 0.4% SASS&lt;br/&gt;\r\n* 0.4% LESS&lt;br/&gt;\r\n* 0.4% Compass&lt;br/&gt;\r\n* 0.4% decorator&lt;br/&gt;\r\n* 0.4% Endpoint subgenerator&lt;br/&gt;\r\n* 0.4% Comments&lt;br/&gt;\r\n* 0.3% FontAwesome&lt;br/&gt;\r\n* 0.3% Run server in debug mode&lt;br/&gt;\r\n* 0.3% Save generator answers to a file&lt;br/&gt;\r\n* 0.2% constant&lt;br/&gt;\r\n* 0.2% Development build script: ...... replace 3rd party deps with CDN versions&lt;br/&gt;\r\n* 0.2% Authentication - Cookie&lt;br/&gt;\r\n* 0.2% Authentication - JSON Web Token (JWT)&lt;br/&gt;\r\n* 0.2% Server-side logging&lt;br/&gt;\r\n* 0.1% Development build script: run tasks in parallel to speed it up&lt;br/&gt;\r\n* 0.1% Development build script: Renames asset files to prevent browser caching&lt;br/&gt;\r\n* 0.1% Development build script: run end to end tests&lt;br/&gt;\r\n* 0.1% Production build script: safe pre-minification&lt;br/&gt;\r\n* 0.1% Production build script: add CSS vendor prefixes&lt;br/&gt;\r\n* 0.1% Heroku deployment automation&lt;br/&gt;\r\n* 0.1% value&lt;br/&gt;\r\n* 0.1% Jade&lt;br/&gt;\r\n* 0.1% Coffeescript&lt;br/&gt;\r\n* 0.1% Serverside authenticated route restriction&lt;br/&gt;\r\n* 0.1% SASS version of Twitter Bootstrap&lt;br/&gt;\r\n* 0.1% Production build script: compress images&lt;br/&gt;\r\n* 0.1% OpenShift deployment automation&lt;br/&gt;\r\n\r\n\r\nMeanJS.org. offers 9% that generator-angular-fullstack doesn&#39;t\r\n\r\n* 3.7% Dedicated/searchable user group: response time mostly under a day&lt;br/&gt;\r\n* 0.4% Generate routes&lt;br/&gt;\r\n* 0.4% Authentication - Oauth&lt;br/&gt;\r\n* 0.4% config&lt;br/&gt;\r\n* 0.4% i18n, localization&lt;br/&gt;\r\n* 0.4% Input application profile&lt;br/&gt;\r\n* 0.3% FEATURE (a.k.a. module, entity, crud-mock)&lt;br/&gt;\r\n* 0.3% Menus system&lt;br/&gt;\r\n* 0.3% Options for making subcomponents&lt;br/&gt;\r\n* 0.3% test - client side&lt;br/&gt;\r\n* 0.3% Javascript performance thing&lt;br/&gt;\r\n* 0.3% Production build script: make static pages for SEO&lt;br/&gt;\r\n* 0.2% Quick install?&lt;br/&gt;\r\n* 0.2% Dedicated/searchable user group&lt;br/&gt;\r\n* 0.1% Development build script: reload build file upon change&lt;br/&gt;\r\n* 0.1% Development build script: coffee files compiled to JS&lt;br/&gt;\r\n* 0.1% controller - server side&lt;br/&gt;\r\n* 0.1% model - server side&lt;br/&gt;\r\n* 0.1% route - server side&lt;br/&gt;\r\n* 0.1% test - server side&lt;br/&gt;\r\n* 0.1% Swig&lt;br/&gt;\r\n* 0.1% Safe from IP Spoofing&lt;br/&gt;\r\n* 0.1% Production build script: uglification&lt;br/&gt;\r\n* 0.0% Approach to views: URLs start with &quot;#!&quot;&lt;br/&gt;\r\n* 0.0% Approach to frontend services and ajax calls: uses $resource&lt;br/&gt;\r\n\r\n\r\nHere is the one between MEAN.io and MEAN.js in a more readable format\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;table border=&quot;1&quot; cellpadding=&quot;10&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;33%&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MeanJS.org. provides these benefits that MEAN.io. doesn&#39;t&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using github issues&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* There&#39;s a book about it&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold directives&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Only one module definition per file&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Don\u2019t alter a module other than where it is defined&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Object-relational mapping&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side validation, server-side example&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client side validation, using Angular 1.3&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS views, Directives start with &quot;data-&quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use ng-init&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, URLs start with &#39;#!&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, Use query parameters to store route state&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, LESS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, SASS&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Don&#39;t use &quot;new&quot;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Mocha&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests, using Protractor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI), using Travis&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Yeoman&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build configurations file(s)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Azure&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Digital Ocean, screencast of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku, screencast of it&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Input application profile&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Quick install?&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Options for making subcomponents&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* config generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* directive generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* filter generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* service (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test - client side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* view or view partial generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* model (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test (server side) generator&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, Forgotten Password with Resetting&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Chat&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* CSV processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using Nodemailer&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using its own e-mail implementation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, state-based&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Paypal integration&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Responsive design&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Social connections management page&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Creates a favicon&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Safe from IP Spoofing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authorization, Access Contol List (ACL)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Cookie&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Websocket and RESTful http share security policies&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;33%&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. provides these benefits that MeanJS.org. doesn&#39;t&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Sponsoring company&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Docs with flatdoc&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Share code between projects&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module manager&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use state.resolve()&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, Use AMD with Require.js&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using wiredep&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to error handling, Server-side logging&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Centralized event handling&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $http and $q&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Wrap code in an IIFE (SEAF, SIAF)&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API introspection report and testing interface, using Swagger&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Independent command line interface&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, add IIFEs (SEAF, SIAF) to executable copies of code&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Scaffolding undo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(mean package -d &amp;lt;name&amp;gt;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator, Menu items added for new features&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Admin page for users and roles&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Content Management System&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Use special data-bound directives in your templates.&lt;br&gt;Switch to edit mode and you can edit the values right where you see them)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* File Upload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* i18n, localization&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, submenus&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, actually works with backend API&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, using Elastic Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap, using UI Bootstrap AngularJS directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor, using medium-editor&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Instrumentation, server-side&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serverside authenticated route restriction&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth, Link multiple Oauth strategies to one account&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, JSON Web Token (JWT)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;33%&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. and MeanJS.org. both provide these benefits&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Version Control, using git&lt;br&gt;&lt;b&gt;Platforms&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side JS Framework, using AngularJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS, using Express&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS, using Express&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Google Groups&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Facebook&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, response time mostly under a day&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Example application&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English, using Youtube&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated chatroom&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side, with type subfolders&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold services&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold templates&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate route configuration files for each module&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Modularized Functionality&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global &#39;app&#39; module variable&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global &#39;app&#39; module variable without an IIFE&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db, using MongoDB&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* No XHR calls in controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Templates, using Angular directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, prevents Flash of Unstyled/compiled Content (FOUC)&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, example of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing, using ui-router&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, HTML5 Mode&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using angular.bootstrap()&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve status codes only as responses&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Accept nested, JSON parameters&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Add timer header to requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Support for signed and encrypted cookies&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve URLs based on the route definitions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Can serve headers only&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using JSON&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $resource (angular-resource)&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, JavaScript (server side)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, Swig&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Use &#39;use strict&#39;&lt;br&gt;&lt;b&gt;Tool Configuration/customization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate runtime configuration profiles&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Jasmine&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Karma&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Automated device testing, using Live Reload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests, using Mocha&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI)&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using npm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using bower&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using Grunt&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using gulp&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, reload build script file upon change&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, copy assets to build or dist or target folder&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects js references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects css references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, LESS/SASS/etc files are linted, compiled&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking, using jshint or jslint&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, run unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, concatenation (aggregation, globbing, bundling)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(If you add debug:true to your config/env/development.js the will not be &lt;br&gt;uglified)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, minification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, safe pre-minification, using ng-annotate&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, uglification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, make static pages for SEO&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(README.md&lt;br&gt;feature css&lt;br&gt;routes&lt;br&gt;controller&lt;br&gt;view&lt;br&gt;additional menu item)&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 404 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 500 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, register/login/logout&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, is password manager friendly&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Front-end CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Read&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Create, Update and Delete&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Google Analytics&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync, using socket.io&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing, using lodash&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* One event-loop thread handles all requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Configurable response caching&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Express plugin&lt;br&gt;&lt;b&gt;https&lt;/b&gt;://www.npmjs.org/package/apicache)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Clustered HTTP sessions&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript obfuscation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* https&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Basic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Digest&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Token&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n"}], "title": "Difference between MEAN.js and MEAN.io", "view_count": 104507, "answer_count": 5, "code_snippet": ["<code>&lt;table border=\"1\" cellpadding=\"10\"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=\"top\" width=\"33%\"&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MeanJS.org. provides these benefits that MEAN.io. doesn't&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using github issues&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* There's a book about it&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold directives&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Only one module definition per file&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Don\u2019t alter a module other than where it is defined&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Object-relational mapping&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side validation, server-side example&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client side validation, using Angular 1.3&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS views, Directives start with \"data-\"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use ng-init&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, URLs start with '#!'&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, Use query parameters to store route state&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, LESS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, SASS&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Don't use \"new\"&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Mocha&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests, using Protractor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI), using Travis&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Yeoman&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build configurations file(s)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Azure&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Digital Ocean, screencast of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku, screencast of it&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Input application profile&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Quick install?&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Options for making subcomponents&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* config generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* directive generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* filter generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* service (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test - client side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* view or view partial generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* model (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test (server side) generator&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, Forgotten Password with Resetting&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Chat&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* CSV processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using Nodemailer&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using its own e-mail implementation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, state-based&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Paypal integration&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Responsive design&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Social connections management page&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Creates a favicon&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Safe from IP Spoofing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authorization, Access Contol List (ACL)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Cookie&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Websocket and RESTful http share security policies&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=\"top\" width=\"33%\"&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. provides these benefits that MeanJS.org. doesn't&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Sponsoring company&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Docs with flatdoc&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Share code between projects&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module manager&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use state.resolve()&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, Use AMD with Require.js&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using wiredep&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to error handling, Server-side logging&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Centralized event handling&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $http and $q&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Wrap code in an IIFE (SEAF, SIAF)&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API introspection report and testing interface, using Swagger&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Independent command line interface&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, add IIFEs (SEAF, SIAF) to executable copies of code&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Scaffolding undo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(mean package -d &amp;lt;name&amp;gt;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator, Menu items added for new features&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Admin page for users and roles&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Content Management System&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Use special data-bound directives in your templates.&lt;br&gt;Switch to edit mode and you can edit the values right where you see them)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* File Upload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* i18n, localization&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, submenus&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, actually works with backend API&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, using Elastic Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap, using UI Bootstrap AngularJS directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor, using medium-editor&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Instrumentation, server-side&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serverside authenticated route restriction&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth, Link multiple Oauth strategies to one account&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, JSON Web Token (JWT)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=\"top\" width=\"33%\"&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. and MeanJS.org. both provide these benefits&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Version Control, using git&lt;br&gt;&lt;b&gt;Platforms&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side JS Framework, using AngularJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS, using Express&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS, using Express&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Google Groups&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Facebook&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, response time mostly under a day&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Example application&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English, using Youtube&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated chatroom&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side, with type subfolders&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold services&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold templates&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate route configuration files for each module&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Modularized Functionality&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global 'app' module variable&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global 'app' module variable without an IIFE&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db, using MongoDB&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* No XHR calls in controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Templates, using Angular directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, prevents Flash of Unstyled/compiled Content (FOUC)&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, example of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing, using ui-router&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, HTML5 Mode&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using angular.bootstrap()&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve status codes only as responses&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Accept nested, JSON parameters&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Add timer header to requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Support for signed and encrypted cookies&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve URLs based on the route definitions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Can serve headers only&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using JSON&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $resource (angular-resource)&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, JavaScript (server side)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, Swig&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Use 'use strict'&lt;br&gt;&lt;b&gt;Tool Configuration/customization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate runtime configuration profiles&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Jasmine&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Karma&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Automated device testing, using Live Reload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests, using Mocha&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI)&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using npm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using bower&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using Grunt&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using gulp&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, reload build script file upon change&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, copy assets to build or dist or target folder&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects js references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects css references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, LESS/SASS/etc files are linted, compiled&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking, using jshint or jslint&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, run unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, concatenation (aggregation, globbing, bundling)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(If you add debug:true to your config/env/development.js the will not be &lt;br&gt;uglified)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, minification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, safe pre-minification, using ng-annotate&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, uglification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, make static pages for SEO&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(README.md&lt;br&gt;feature css&lt;br&gt;routes&lt;br&gt;controller&lt;br&gt;view&lt;br&gt;additional menu item)&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 404 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 500 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, register/login/logout&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, is password manager friendly&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Front-end CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Read&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Create, Update and Delete&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Google Analytics&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync, using socket.io&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing, using lodash&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* One event-loop thread handles all requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Configurable response caching&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Express plugin&lt;br&gt;&lt;b&gt;https&lt;/b&gt;://www.npmjs.org/package/apicache)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Clustered HTTP sessions&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript obfuscation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* https&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Basic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Digest&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Token&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</code>"], "path": "stack.gulp"}, {"tags": ["node.js"], "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1356459476, "answer_id": 14032965, "path": "stack.gulp.answer", "score": 323, "up_vote_count": 324, "is_accepted": true, "last_activity_date": 1506060178, "last_edit_date": 1506060178, "body_markdown": "&lt;h2&gt;UPDATE:&lt;/h2&gt;\r\nYou can register a handler for `process.on(&#39;exit&#39;)` and in any other case(`SIGINT` or unhandled exception) to call `process.exit()`\r\n\r\n    process.stdin.resume();//so the program will not close instantly\r\n    \r\n    function exitHandler(options, err) {\r\n        if (options.cleanup) console.log(&#39;clean&#39;);\r\n        if (err) console.log(err.stack);\r\n        if (options.exit) process.exit();\r\n    }\r\n\r\n    //do something when app is closing\r\n    process.on(&#39;exit&#39;, exitHandler.bind(null,{cleanup:true}));\r\n\r\n    //catches ctrl+c event\r\n    process.on(&#39;SIGINT&#39;, exitHandler.bind(null, {exit:true}));\r\n\r\n    // catches &quot;kill pid&quot; (for example: nodemon restart)\r\n    process.on(&#39;SIGUSR1&#39;, exitHandler.bind(null, {exit:true}));\r\n    process.on(&#39;SIGUSR2&#39;, exitHandler.bind(null, {exit:true}));\r\n\r\n    //catches uncaught exceptions\r\n    process.on(&#39;uncaughtException&#39;, exitHandler.bind(null, {exit:true}));\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1356466262, "answer_id": 14033687, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1356467189, "last_edit_date": 1356467189, "body_markdown": "&quot;exit&quot; is an event that gets triggered when node finish it&#39;s event loop internally, it&#39;s not triggered when you terminate the process externally.\r\n\r\nWhat you&#39;re looking for is executing something on a SIGINT.\r\n\r\nThe docs at http://nodejs.org/api/process.html#process_signal_events give an example:\r\n\r\nExample of listening for SIGINT:\r\n\r\n    // Start reading from stdin so we don&#39;t exit.\r\n    process.stdin.resume();\r\n    \r\n    process.on(&#39;SIGINT&#39;, function () {\r\n      console.log(&#39;Got SIGINT.  Press Control-D to exit.&#39;);\r\n    });\r\n\r\nNote: this seems to interrupt the sigint and you would need to call process.exit() when you finish with your code."}, {"tags": [], "down_vote_count": 0, "creation_date": 1393028711, "answer_id": 21947851, "path": "stack.gulp.answer", "score": 124, "up_vote_count": 124, "is_accepted": false, "last_activity_date": 1416353554, "last_edit_date": 1416353554, "body_markdown": "The script below allows having a single handler for all exit conditions. It uses an app specific callback function to perform custom cleanup code.\r\n\r\n**cleanup.js**\r\n\r\n    // Object to capture process exits and call app specific cleanup function\r\n\r\n    function noOp() {};\r\n    \r\n    exports.Cleanup = function Cleanup(callback) {\r\n    \r\n      // attach user callback to the process event emitter\r\n      // if no callback, it will still exit gracefully on Ctrl-C\r\n      callback = callback || noOp;\r\n      process.on(&#39;cleanup&#39;,callback);\r\n      \r\n      // do app specific cleaning before exiting\r\n      process.on(&#39;exit&#39;, function () {\r\n        process.emit(&#39;cleanup&#39;);\r\n      });\r\n    \r\n      // catch ctrl+c event and exit normally\r\n      process.on(&#39;SIGINT&#39;, function () {\r\n        console.log(&#39;Ctrl-C...&#39;);\r\n        process.exit(2);\r\n      });\r\n    \r\n      //catch uncaught exceptions, trace, then exit normally\r\n      process.on(&#39;uncaughtException&#39;, function(e) {\r\n        console.log(&#39;Uncaught Exception...&#39;);\r\n        console.log(e.stack);\r\n        process.exit(99);\r\n      });\r\n    };\r\n\r\nThis code intercepts uncaught exceptions, Ctrl-C and normal exit events. It then calls a single optional user cleanup callback function before exiting, handling all exit conditions with a single object.\r\n\r\nThe module simply extends the process object instead of defining another event emitter. Without an app specific callback the cleanup defaults to a no op function. This was sufficient for my use where child processes were left running when exiting by Ctrl-C.\r\n\r\nYou can easily add other exit events such as SIGHUP as desired. Note: per NodeJS manual, SIGKILL cannot have a listener. The test code below demonstrates various ways of using cleanup.js\r\n\r\n    // test cleanup.js on version 0.10.21\r\n    \r\n    // loads module and registers app specific cleanup callback...\r\n    var cleanup = require(&#39;./cleanup&#39;).Cleanup(myCleanup);\r\n    //var cleanup = require(&#39;./cleanup&#39;).Cleanup(); // will call noOp\r\n    \r\n    // defines app specific callback...\r\n    function myCleanup() {\r\n      console.log(&#39;App specific cleanup code...&#39;);\r\n    };\r\n    \r\n    // All of the following code is only needed for test demo\r\n\r\n    // Prevents the program from closing instantly\r\n    process.stdin.resume();\r\n    \r\n    // Emits an uncaught exception when called because module does not exist\r\n    function error() {\r\n      console.log(&#39;error&#39;);\r\n      var x = require(&#39;&#39;);\r\n    };\r\n    \r\n    // Try each of the following one at a time:\r\n    \r\n    // Uncomment the next line to test exiting on an uncaught exception\r\n    //setTimeout(error,2000);\r\n    \r\n    // Uncomment the next line to test exiting normally\r\n    //setTimeout(function(){process.exit(3)}, 2000);\r\n    \r\n    // Type Ctrl-C to test forced exit "}, {"tags": [], "down_vote_count": 2, "creation_date": 1422719608, "answer_id": 28253516, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1422719608, "body_markdown": "[io.js](https://iojs.org/) has an [`exit`](https://iojs.org/api/process.html#process_event_exit) and a [`beforeExit`](https://iojs.org/api/process.html#process_event_beforeexit) event, which do what you want."}, {"tags": [], "down_vote_count": 1, "creation_date": 1454437579, "answer_id": 35161132, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1454437579, "body_markdown": "    var fs = require(&#39;fs&#39;);\r\n    \r\n    function async(callback) {\r\n    \tfs.writeFile(&#39;async.txt&#39;, &#39;bye!&#39;, callback);\r\n    }\r\n    \r\n    function sync()\r\n    {\r\n    \tfor (var i = 0; i &lt; 10; i++) {}\r\n    \treturn true;\r\n    }\r\n    \r\n    function killProcess()\r\n    {\r\n    \tif (process.exitTimeoutId){\r\n    \t\treturn;\r\n    \t}\r\n    \t\r\n    \tprocess.exitTimeoutId = setTimeout(process.exit, 5000);\r\n    \tconsole.log(&#39;process will exit in 5 seconds&#39;);\r\n    \t\r\n    \tasync(function() {\r\n    \t\tconsole.log(&#39;async op. done&#39;, arguments);\r\n    \t});\r\n    \t\r\n    \tif (sync()) {\r\n    \t\tconsole.log(&#39;sync op. done&#39;);\r\n    \t}\r\n    }\r\n    \r\n    // https://nodejs.org/api/process.html#process_signal_events\r\n    process.on(&#39;SIGTERM&#39;, killProcess);\r\n    process.on(&#39;SIGINT&#39;, killProcess);\r\n    \r\n    process.on(&#39;uncaughtException&#39;, function(e)\r\n    {\r\n    \tconsole.log(&#39;[uncaughtException] app will be terminated: &#39;, e.stack);\r\n    \t\r\n    \tkillProcess();\r\n    \t/**\r\n         * @https://nodejs.org/api/process.html#process_event_uncaughtexception\r\n    \t *  \r\n    \t * &#39;uncaughtException&#39; should be used to perform synchronous cleanup before shutting down the process. \r\n    \t * It is not safe to resume normal operation after &#39;uncaughtException&#39;. \r\n    \t * If you do use it, restart your application after every unhandled exception!\r\n         * \r\n         * You have been warned.\r\n    \t */\r\n    });\r\n    \r\n    console.log(&#39;App is running...&#39;);\r\n    console.log(&#39;Try to press CTRL+C or SIGNAL the process with PID: &#39;, process.pid);\r\n    \r\n    process.stdin.resume();\r\n    // just for testing\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1461193977, "answer_id": 36756848, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1461193977, "body_markdown": "In the case where the process was spawned by another node process, like:\r\n\r\n    var child = spawn(&#39;gulp&#39;, [&#39;watch&#39;], {\r\n        stdio: &#39;inherit&#39;,\r\n    });\r\n\r\nAnd you try to kill it later, via:\r\n\r\n    child.kill();\r\n\r\nThis is how you handle the event [on the child]:\r\n\r\n    process.on(&#39;SIGTERM&#39;, function() {\r\n        console.log(&#39;Goodbye!&#39;);\r\n    });"}, {"tags": [], "down_vote_count": 0, "creation_date": 1471030705, "answer_id": 38925352, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1471030705, "body_markdown": "Just wanted to mention `death` package here: https://github.com/jprichardson/node-death\r\n\r\nExample:\r\n\r\n\r\n    var ON_DEATH = require(&#39;death&#39;)({uncaughtException: true}); //this is intentionally ugly\r\n    \r\n    ON_DEATH(function(signal, err) {\r\n      //clean up code here\r\n    })\r\n\r\n"}], "creation_date": 1356448046, "body_markdown": "I want to tell node.js to always do something just before it exits, for whatever reason - Ctrl+C, exception, or any other reason.\r\n\r\nI tried this:\r\n\r\n    process.on(&#39;exit&#39;, function (){\r\n      console.log(&#39;Goodbye!&#39;);\r\n    });\r\n\r\nStarted the process, killed it, and nothing happened; started again, pressed Ctrl+C, and still nothing happened...\r\n", "title": "doing a cleanup action just before node.js exits", "view_count": 85321, "up_vote_count": 198, "answer_count": 7, "link": "https://stackoverflow.com/questions/14031763/doing-a-cleanup-action-just-before-node-js-exits", "code_snippet": ["<code>process.on('exit', function (){\n  console.log('Goodbye!');\n});\n</code>", "<code>process.on('exit')</code>", "<code>SIGINT</code>", "<code>process.exit()</code>", "<code>process.stdin.resume();//so the program will not close instantly\n\nfunction exitHandler(options, err) {\n    if (options.cleanup) console.log('clean');\n    if (err) console.log(err.stack);\n    if (options.exit) process.exit();\n}\n\n//do something when app is closing\nprocess.on('exit', exitHandler.bind(null,{cleanup:true}));\n\n//catches ctrl+c event\nprocess.on('SIGINT', exitHandler.bind(null, {exit:true}));\n\n// catches \"kill pid\" (for example: nodemon restart)\nprocess.on('SIGUSR1', exitHandler.bind(null, {exit:true}));\nprocess.on('SIGUSR2', exitHandler.bind(null, {exit:true}));\n\n//catches uncaught exceptions\nprocess.on('uncaughtException', exitHandler.bind(null, {exit:true}));\n</code>", "<code>must only</code>", "<code>synchronous</code>", "<code>exit</code>", "<code>stderr</code>", "<code>// Object to capture process exits and call app specific cleanup function\n\nfunction noOp() {};\n\nexports.Cleanup = function Cleanup(callback) {\n\n  // attach user callback to the process event emitter\n  // if no callback, it will still exit gracefully on Ctrl-C\n  callback = callback || noOp;\n  process.on('cleanup',callback);\n\n  // do app specific cleaning before exiting\n  process.on('exit', function () {\n    process.emit('cleanup');\n  });\n\n  // catch ctrl+c event and exit normally\n  process.on('SIGINT', function () {\n    console.log('Ctrl-C...');\n    process.exit(2);\n  });\n\n  //catch uncaught exceptions, trace, then exit normally\n  process.on('uncaughtException', function(e) {\n    console.log('Uncaught Exception...');\n    console.log(e.stack);\n    process.exit(99);\n  });\n};\n</code>", "<code>// test cleanup.js on version 0.10.21\n\n// loads module and registers app specific cleanup callback...\nvar cleanup = require('./cleanup').Cleanup(myCleanup);\n//var cleanup = require('./cleanup').Cleanup(); // will call noOp\n\n// defines app specific callback...\nfunction myCleanup() {\n  console.log('App specific cleanup code...');\n};\n\n// All of the following code is only needed for test demo\n\n// Prevents the program from closing instantly\nprocess.stdin.resume();\n\n// Emits an uncaught exception when called because module does not exist\nfunction error() {\n  console.log('error');\n  var x = require('');\n};\n\n// Try each of the following one at a time:\n\n// Uncomment the next line to test exiting on an uncaught exception\n//setTimeout(error,2000);\n\n// Uncomment the next line to test exiting normally\n//setTimeout(function(){process.exit(3)}, 2000);\n\n// Type Ctrl-C to test forced exit \n</code>", "<code>process.exit()</code>", "<code>// Start reading from stdin so we don't exit.\nprocess.stdin.resume();\n\nprocess.on('SIGINT', function () {\n  console.log('Got SIGINT.  Press Control-D to exit.');\n});\n</code>", "<code>kill -2</code>", "<code>SIGINT</code>", "<code>death</code>", "<code>var ON_DEATH = require('death')({uncaughtException: true}); //this is intentionally ugly\n\nON_DEATH(function(signal, err) {\n  //clean up code here\n})\n</code>", "<code>var fs = require('fs');\n\nfunction async(callback) {\n    fs.writeFile('async.txt', 'bye!', callback);\n}\n\nfunction sync()\n{\n    for (var i = 0; i &lt; 10; i++) {}\n    return true;\n}\n\nfunction killProcess()\n{\n    if (process.exitTimeoutId){\n        return;\n    }\n\n    process.exitTimeoutId = setTimeout(process.exit, 5000);\n    console.log('process will exit in 5 seconds');\n\n    async(function() {\n        console.log('async op. done', arguments);\n    });\n\n    if (sync()) {\n        console.log('sync op. done');\n    }\n}\n\n// https://nodejs.org/api/process.html#process_signal_events\nprocess.on('SIGTERM', killProcess);\nprocess.on('SIGINT', killProcess);\n\nprocess.on('uncaughtException', function(e)\n{\n    console.log('[uncaughtException] app will be terminated: ', e.stack);\n\n    killProcess();\n    /**\n     * @https://nodejs.org/api/process.html#process_event_uncaughtexception\n     *  \n     * 'uncaughtException' should be used to perform synchronous cleanup before shutting down the process. \n     * It is not safe to resume normal operation after 'uncaughtException'. \n     * If you do use it, restart your application after every unhandled exception!\n     * \n     * You have been warned.\n     */\n});\n\nconsole.log('App is running...');\nconsole.log('Try to press CTRL+C or SIGNAL the process with PID: ', process.pid);\n\nprocess.stdin.resume();\n// just for testing\n</code>", "<code>exit</code>", "<code>beforeExit</code>", "<code>var child = spawn('gulp', ['watch'], {\n    stdio: 'inherit',\n});\n</code>", "<code>child.kill();\n</code>", "<code>process.on('SIGTERM', function() {\n    console.log('Goodbye!');\n});\n</code>"], "path": "stack.gulp"}, {"tags": ["angularjs"], "creation_date": 1347260236, "body_markdown": "I have a route setup like this:\r\n\r\n    var myApp = angular.module(&#39;myApp&#39;, []).\r\n        config([&#39;$routeProvider&#39;, function ($routeProvider) {\r\n        $routeProvider.\r\n            when(&#39;/landing&#39;, {\r\n                templateUrl: &#39;/landing-partial&#39;,\r\n                controller: landingController\r\n            }).\r\n            when(&#39;/:wkspId/query&#39;, {\r\n                templateUrl: &#39;/query-partial&#39;,\r\n                controller: queryController\r\n            }).\r\n            otherwise({\r\n                redirectTo: &#39;/landing&#39;\r\n            });\r\n    }]);\r\n\r\nI want to be able to make angularjs download both the partials in the beginning and not when requested.\r\n\r\nIs it possible?", "last_edit_date": 1365739440, "up_vote_count": 188, "link": "https://stackoverflow.com/questions/12346690/is-there-a-way-to-make-angularjs-load-partials-in-the-beginning-and-not-at-when", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1347261404, "answer_id": 12346901, "path": "stack.gulp.answer", "score": 266, "up_vote_count": 266, "is_accepted": true, "last_activity_date": 1348587778, "last_edit_date": 1348587778, "body_markdown": "Yes, there are at least 2 solutions for this:\r\n\r\n1. Use the `script` directive ([http://docs.angularjs.org/api/ng.directive:script][1]) to put your partials in the initially loaded HTML\r\n2. You could also fill in `$templateCache` ([http://docs.angularjs.org/api/ng.$templateCache][2]) from JavaScript if needed (possibly based on result of `$http` call)\r\n\r\nIf you would like to use method (2) to fill in `$templateCache` you can do it like this:\r\n\r\n    $templateCache.put(&#39;second.html&#39;, &#39;&lt;b&gt;Second&lt;/b&gt; template&#39;);\r\n\r\nOf course the templates content could come from a `$http` call:\r\n\r\n    $http.get(&#39;third.html&#39;, {cache:$templateCache});\r\n\r\nHere is the plunker those techniques: http://plnkr.co/edit/J6Y2dc?p=preview\r\n\r\n  [1]: http://docs.angularjs.org/api/ng.directive:script\r\n  [2]: http://docs.angularjs.org/api/ng.$templateCache"}, {"tags": [], "down_vote_count": 0, "creation_date": 1366493443, "answer_id": 16125388, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 25, "is_accepted": false, "last_activity_date": 1366493443, "body_markdown": "If you use Grunt to build your project, there is a plugin that will automatically assemble your partials into an Angular module that primes $templateCache.  You can concatenate this module with the rest of your code and load everything from one file on startup.\r\n\r\nhttps://npmjs.org/package/grunt-html2js"}, {"tags": [], "down_vote_count": 0, "creation_date": 1367150950, "answer_id": 16262700, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1367150950, "body_markdown": "If you use rails, you can use the asset pipeline to compile and shove all your haml/erb templates into a template module which can be appended to your application.js file. Checkout\r\nhttp://minhajuddin.com/2013/04/28/angularjs-templates-and-rails-with-eager-loading"}, {"tags": [], "down_vote_count": 2, "creation_date": 1372064191, "answer_id": 17271556, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1372064191, "body_markdown": "I just use `eco` to do the job for me.\r\n`eco` is supported by Sprockets by default. It&#39;s a shorthand for Embedded Coffeescript which takes a eco file and compile into a Javascript template file, and the file will be treated like any other js files you have in your assets folder.\r\n\r\nAll you need to do is to create a template with extension .jst.eco and write some html code in there, and rails will automatically compile and serve the file with the assets pipeline, and the way to access the template is really easy: `JST[&#39;path/to/file&#39;]({var: value});` where `path/to/file` is based on the logical path, so if you have file in `/assets/javascript/path/file.jst.eco`, you can access the template at `JST[&#39;path/file&#39;]()`\r\n\r\nTo make it work with angularjs, you can pass it into the template attribute instead of templateDir, and it will start working magically!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1391424514, "answer_id": 21525292, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1406037008, "last_edit_date": 1406037008, "body_markdown": "If you wrap each template in a script tag, eg:\r\n\r\n    &lt;script id=&quot;about.html&quot; type=&quot;text/ng-template&quot;&gt;\r\n    &lt;div&gt;\r\n        &lt;h3&gt;About&lt;/h3&gt;\r\n        This is the About page\r\n        Its cool!\r\n    &lt;/div&gt;\r\n    &lt;/script&gt;\r\n\r\nConcatenate all templates into 1 big file. If using Visual Studio 2013, download Web essentials - it adds a right click menu to create an HTML Bundle.\r\n\r\nAdd the code that this guy wrote to change the angular `$templatecache` service - its only a small piece of code and it works: [Vojta Jina&#39;s Gist][1]\r\n\r\nIts the `$http.get` that should be changed to use your bundle file:\r\n\r\n    allTplPromise = $http.get(&#39;templates/templateBundle.min.html&#39;).then(\r\n\r\nYour routes `templateUrl` should look like this:\r\n\r\n            $routeProvider.when(\r\n                &quot;/about&quot;, {\r\n                    controller: &quot;&quot;,\r\n                    templateUrl: &quot;about.html&quot;\r\n                }\r\n            );\r\n\r\n\r\n  [1]: https://gist.github.com/vojtajina/3354046"}, {"tags": [], "down_vote_count": 0, "creation_date": 1418328455, "answer_id": 27431497, "path": "stack.gulp.answer", "score": 15, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1423496263, "last_edit_date": 1495542398, "body_markdown": "Add a build task to concatenate and register your html partials in the Angular `$templateCache`. (*This answer is a more detailed variant of [karlgold&#39;s answer.][1])*\r\n\r\nFor **grunt**, use [grunt-angular-templates][2].\r\nFor **gulp**, use [gulp-angular-templatecache][3].\r\n\r\nBelow are config/code snippets to illustrate.\r\n\r\n\r\n\r\n**gruntfile.js Example:**\r\n\r\n    ngtemplates: {\r\n      app: {                \r\n        src: [&#39;app/partials/**.html&#39;, &#39;app/views/**.html&#39;],\r\n        dest: &#39;app/scripts/templates.js&#39;\r\n      },\r\n      options: {\r\n        module: &#39;myModule&#39;\r\n      }\r\n    }\r\n\r\n**gulpfile.js Example:**\r\n\r\n    var templateCache = require(&#39;gulp-angular-templatecache&#39;);\r\n    var paths = [&#39;app/partials/.html&#39;, &#39;app/views/.html&#39;];\r\n\r\n    gulp.task(&#39;createTemplateCache&#39;, function () {\r\n    return gulp.src(paths)\r\n        .pipe(templateCache(&#39;templates.js&#39;, { module: &#39;myModule&#39;, root:&#39;app/views&#39;}))\r\n        .pipe(gulp.dest(&#39;app/scripts&#39;));\r\n        });\r\n\r\n**templates.js (this file is autogenerated by the build task)**\r\n    \r\n    $templateCache.put(&#39;app/views/main.html&#39;, &quot;&lt;div class=\\&quot;main\\&quot;&gt;\\r&quot;...\r\n\r\n**index.html**\r\n\r\n    &lt;script src=&quot;app/scripts/templates.js&quot;&gt;&lt;/script&gt;\r\n    &lt;div ng-include ng-controller=&quot;main as vm&quot; src=&quot;&#39;app/views/main.html&#39;&quot;&gt;&lt;/div&gt;\r\n    \r\n\r\n  [1]: https://stackoverflow.com/a/16125388/88204\r\n  [2]: https://www.npmjs.com/package/grunt-angular-templates\r\n  [3]: https://www.npmjs.com/package/gulp-angular-templatecache "}, {"tags": [], "down_vote_count": 1, "creation_date": 1450476091, "answer_id": 34364605, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1450476091, "body_markdown": "Another method is to use HTML5&#39;s [Application Cache][1] to download all files once and keep them in the browser&#39;s cache.  The above link contains much more information.  The following information is from the article:\r\n\r\nChange your `&lt;html&gt;` tag to include a `manifest` attribute:\r\n\r\n    &lt;html manifest=&quot;http://www.example.com/example.mf&quot;&gt;\r\n\r\nA manifest file must be served with the mime-type `text/cache-manifest`.\r\n\r\nA simple manifest looks something like this:\r\n\r\n    CACHE MANIFEST\r\n    index.html\r\n    stylesheet.css\r\n    images/logo.png\r\n    scripts/main.js\r\n    http://cdn.example.com/scripts/main.js\r\n\r\nOnce an application is offline it remains cached until one of the following happens:\r\n\r\n 1. The user clears their browser&#39;s data storage for your site.\r\n 2. The manifest file is modified. Note: updating a file listed in the\r\n    manifest doesn&#39;t mean the browser will re-cache that resource. The\r\n    manifest file itself must be altered.\r\n\r\n  [1]: http://www.html5rocks.com/en/tutorials/appcache/beginner/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1474046193, "answer_id": 39536936, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1474046193, "body_markdown": "You can pass $state to your controller and then when the page loads and calls the getter in the controller you call $state.go(&#39;index&#39;) or whatever partial you want to load.  Done."}], "title": "Is there a way to make AngularJS load partials in the beginning and not at when needed?", "view_count": 106933, "answer_count": 8, "code_snippet": ["<code>var myApp = angular.module('myApp', []).\n    config(['$routeProvider', function ($routeProvider) {\n    $routeProvider.\n        when('/landing', {\n            templateUrl: '/landing-partial',\n            controller: landingController\n        }).\n        when('/:wkspId/query', {\n            templateUrl: '/query-partial',\n            controller: queryController\n        }).\n        otherwise({\n            redirectTo: '/landing'\n        });\n}]);\n</code>", "<code>script</code>", "<code>$templateCache</code>", "<code>$http</code>", "<code>$templateCache</code>", "<code>$templateCache.put('second.html', '&lt;b&gt;Second&lt;/b&gt; template');\n</code>", "<code>$http</code>", "<code>$http.get('third.html', {cache:$templateCache});\n</code>", "<code>&lt;script&gt;</code>", "<code>grunt-angular-templates</code>", "<code>$templateCache</code>", "<code>ngtemplates: {\n  app: {                \n    src: ['app/partials/**.html', 'app/views/**.html'],\n    dest: 'app/scripts/templates.js'\n  },\n  options: {\n    module: 'myModule'\n  }\n}\n</code>", "<code>var templateCache = require('gulp-angular-templatecache');\nvar paths = ['app/partials/.html', 'app/views/.html'];\n\ngulp.task('createTemplateCache', function () {\nreturn gulp.src(paths)\n    .pipe(templateCache('templates.js', { module: 'myModule', root:'app/views'}))\n    .pipe(gulp.dest('app/scripts'));\n    });\n</code>", "<code>$templateCache.put('app/views/main.html', \"&lt;div class=\\\"main\\\"&gt;\\r\"...\n</code>", "<code>&lt;script src=\"app/scripts/templates.js\"&gt;&lt;/script&gt;\n&lt;div ng-include ng-controller=\"main as vm\" src=\"'app/views/main.html'\"&gt;&lt;/div&gt;\n</code>", "<code>&lt;script id=\"about.html\" type=\"text/ng-template\"&gt;\n&lt;div&gt;\n    &lt;h3&gt;About&lt;/h3&gt;\n    This is the About page\n    Its cool!\n&lt;/div&gt;\n&lt;/script&gt;\n</code>", "<code>$templatecache</code>", "<code>$http.get</code>", "<code>allTplPromise = $http.get('templates/templateBundle.min.html').then(\n</code>", "<code>templateUrl</code>", "<code>        $routeProvider.when(\n            \"/about\", {\n                controller: \"\",\n                templateUrl: \"about.html\"\n            }\n        );\n</code>", "<code>eco</code>", "<code>eco</code>", "<code>JST['path/to/file']({var: value});</code>", "<code>path/to/file</code>", "<code>/assets/javascript/path/file.jst.eco</code>", "<code>JST['path/file']()</code>", "<code>&lt;html&gt;</code>", "<code>manifest</code>", "<code>&lt;html manifest=\"http://www.example.com/example.mf\"&gt;\n</code>", "<code>text/cache-manifest</code>", "<code>CACHE MANIFEST\nindex.html\nstylesheet.css\nimages/logo.png\nscripts/main.js\nhttp://cdn.example.com/scripts/main.js\n</code>"], "path": "stack.gulp"}, {"tags": ["svn", "tortoisesvn"], "creation_date": 1334249802, "body_markdown": "If I try to update my subversion repo, it says I must run cleanup. If I run cleanup, it says a file is missing. (I deleted a MASSIVE directory of files that failed to commit this morning from my home pc, but then I commit the same set of files from work, and now my home repo is bust). So, cleanup says:\r\n\r\n   Cleanup failed to process blablabla Can&#39;t set file blablabla read-write: The system cannot find the file specified.\r\n   \r\nIf I update it says:\r\n\r\n   \r\n\r\n&gt; Command: Update      Error: Previous operation has not finished; \r\n&gt; run &#39;cleanup&#39; if it was  interrupted      Error: Please execute the\r\n&gt; &#39;Cleanup&#39; command.      Completed!:\r\n\r\n  \r\n   \r\nHow do I get this unstuck?\r\n", "last_edit_date": 1463372991, "up_vote_count": 196, "link": "https://stackoverflow.com/questions/10128201/subversion-stuck-due-to-previous-operation-has-not-finished", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1334255288, "answer_id": 10129567, "path": "stack.gulp.answer", "score": 87, "up_vote_count": 90, "is_accepted": true, "last_activity_date": 1334255288, "body_markdown": "I&#39;ve been in similar situations. Have you tried running cleanup from the root of your workspace? I know sometimes a cleanup from a child directory (where the problem lies) doesn&#39;t work, and cleanup from the root of the workspace does.\r\n\r\nIf that still fails, since you had deleted a child dir somewhere. Try deleting 1 level higher from the child dir as well (assuming that is not the root), and re-trying update and cleanup. \r\n\r\nIf cleanup attempts aren&#39;t succeeding at any level then the answer is unfortunately checkout a new working copy. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1342016098, "answer_id": 11434616, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1342016098, "body_markdown": "I tried removing the .svn folder to other location and placed it back in the same root folder.  After when I tried to update the SVN, it got updated.  I don&#39;t know how exactly it worked.  "}, {"tags": [], "down_vote_count": 0, "creation_date": 1375248099, "answer_id": 17962207, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1375248099, "body_markdown": "delete the svn from the main folder and replace it from another viable copy you have from elsewere.and then update. svn folder will be normally a hidden folder. So, please make sure, to unhide the folder before doing the above steps."}, {"tags": [], "down_vote_count": 0, "creation_date": 1378834484, "answer_id": 18725412, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1378834484, "body_markdown": "I just had a similar issue.  Running Process Explorer showed that another program (Notepad++) had a file handle to a folder that SVN had tried to delete.  When I closed Notepad++, &quot;Clean Up&quot; was able to run successfully."}, {"tags": [], "down_vote_count": 0, "creation_date": 1381921156, "answer_id": 19401656, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1381921156, "body_markdown": "Workaround that worked for me:\r\n\r\n 1. Cut the content of your directory and copy it to another folder.\r\n 2. Run cleanup from command line on the empty folder.\r\n 3. Copy the files back in the original folder.\r\n\r\nDone, but I cannot explain why this happens.\r\nIf you don&#39;t remove the files, the cleanup command say that he can&#39;t read/write those files."}, {"tags": [], "down_vote_count": 0, "creation_date": 1382347135, "answer_id": 19490517, "path": "stack.gulp.answer", "score": 98, "up_vote_count": 98, "is_accepted": false, "last_activity_date": 1382348265, "last_edit_date": 1382348265, "body_markdown": "Running console `svn cleanup` has solved the same problem for me."}, {"tags": [], "down_vote_count": 0, "creation_date": 1389200135, "answer_id": 21001805, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1389200135, "body_markdown": "Trying to run cleanup while your files are open gave me problems. as soon as I closed my application (Visual studio) I ran clean up and it was successful\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1392197091, "answer_id": 21723595, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1392197091, "body_markdown": "I had the same issue, what worked for me:\r\n\r\n1. Copy your folders and files to another place, say to a folder &lt;new&gt; (I changed my files recently and the commitment failed and led to the addressed problem)\r\n2. check out a new working copy\r\n3. copy your changed files from folder &lt;new&gt; to your working copy and override existing files. Commiting / Updating should work now"}, {"tags": [], "down_vote_count": 1, "creation_date": 1396022098, "answer_id": 22717607, "path": "stack.gulp.answer", "score": 297, "up_vote_count": 298, "is_accepted": false, "last_activity_date": 1433159584, "last_edit_date": 1433159584, "body_markdown": "There is often no need for a new checkout or copying.\r\n\r\nI have just solved a similar issue relating to the error &quot;previous operation has not finished&quot; with help from this ([Link][1])\r\n\r\nIt seems that svn sometimes gets stuck while processing commands/operations.\r\nAll of these operations are stored in the database file wc.db in the .svn folder.\r\n\r\nBy downloading [SQLite][2] to my checkout directory and running\r\n\r\n    sqlite3.exe .svn/wc.db &quot;select * from work_queue&quot;\r\nyou can get a list of all pending operations. These operations are the ones the error is referring to as &quot;not finished&quot;.\r\n\r\nBy running \r\n\r\n    sqlite3.exe .svn/wc.db &quot;delete from work_queue&quot;\r\n\r\nall of the old operations are deleted from the work queue and the error disapears.\r\nNo need for a new checkout or anything\r\n\r\n\r\n  [1]: http://www.anujvarma.com/svn-cleanup-failedprevious-operation-has-not-finished-run-cleanup-if-it-was-interrupted/\r\n  [2]: http://www.sqlite.org/download.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1404932604, "answer_id": 24661809, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1404932604, "body_markdown": "I had the same problem, and somehow found that I had a hidden .svn file at the c:\\  level.  Once I deleted this hidden folder (.svn), everything worked okay.  I must have unintentionally created a working directory at the root drive."}, {"tags": [], "down_vote_count": 0, "creation_date": 1407051844, "answer_id": 25102665, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1407051844, "body_markdown": "I had an error such as &quot;Can&#39;t change perms of file &#39;/Users/Code/UnitTest.cpp&#39;: No such file or directory&quot;. The subversion is confused about a file that is no longer there. I simply did something like &quot;echo ABCD &gt;&gt; /Users/Code/UnitTest.cpp&quot; to create a copy of the file, then cleanup. It worked."}, {"tags": [], "down_vote_count": 0, "creation_date": 1408967976, "answer_id": 25485435, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1408967976, "body_markdown": "I was facing this problem after adding a jar which is already in the SVN and I added the new Version of it with the same name.\r\n\r\nIn Eclipse I tried this \r\n\r\n 1. Right click on folder &gt; Team &gt; Refresh/Cleanup.\r\n 2. Clean, build and refresh my application.\r\n 3. Restart the Eclipse.\r\n\r\nUsing above steps I am able to Synchronize.\r\n\r\n\r\n\r\n "}, {"tags": [], "down_vote_count": 0, "creation_date": 1413015873, "answer_id": 26312641, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1413015873, "body_markdown": "In my case, the error appeared when trying to commit from within an IDE. When I executed the commit of the same directories with TortoiseSVN in the explorer, the operation succeeded."}, {"tags": [], "down_vote_count": 0, "creation_date": 1426852731, "answer_id": 29165999, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1426852731, "body_markdown": "In my case I had gulp-watch running that caused the problems. After stopping it I could execute Cleanup command."}, {"tags": [], "down_vote_count": 0, "creation_date": 1432046172, "answer_id": 30328710, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1432046172, "body_markdown": "I got the same problem, in my case I was using svn tortoise with the application I mean. Using the cmd shell of windows in root mode I applied svn cleanup and then svn update.... Then you can comeback to the application mode aand it will work perfectly!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1458562868, "answer_id": 36130890, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1458562868, "body_markdown": "That has happened for me when using externals and one of them was corrupt. I had to go to that folder and perform a cleanup. Then the cleanup worked for the entire working copy. \r\n\r\nExample: Using external `^/widgets/foo  common/foo-widget`, first perform cleanup on folder `common/foo-widget`."}, {"tags": [], "down_vote_count": 1, "creation_date": 1461317275, "answer_id": 36790014, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1481089997, "last_edit_date": 1481089997, "body_markdown": "follow below steps.\r\n\r\n1) Go to the directory where you are not able to successfully clean up via `svn`.(Root folder or child folder).\r\n\r\n2) Select `.svn` folder in the directory, cut that folder and paste it in the separate drive or separate location (out of svn directory)\r\n\r\n3) Now, go back to the directory - right click and select `TortoiseSVN --&gt;Repo-browser`\r\n\r\n4) `Checkout` the folder(it will not perform fresh checkout).\r\n\r\n5) All your items will be versioned again, and it will repair the internal issue of svn, and problem should be solved."}, {"tags": [], "down_vote_count": 0, "creation_date": 1475160819, "answer_id": 39773607, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1475160819, "body_markdown": "I initially got this problem trying to check in with TortoiseSVN.  Initially, both, TortoiseSVN clean up and console svn cleanup both failed with similar messages as the original poster.\r\n\r\nBut my solution, (found out accidentally) was just to wait a few minutes.  I am thinking TSVNCache was holding on to some of those files at the time of check in.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1487149206, "answer_id": 42244764, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1487149206, "body_markdown": "In my case a background Java Virtual Machine instance was running, killing which cleanup was successful."}, {"tags": [], "down_vote_count": 0, "creation_date": 1496051838, "answer_id": 44239598, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1496051838, "body_markdown": "hi guys in my cases after i close Visual Studio and retry to CleanUp it work\r\nhave good time"}, {"tags": [], "down_vote_count": 2, "creation_date": 1501507321, "answer_id": 45417142, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1501507466, "last_edit_date": 1501507466, "body_markdown": "Please Follow this link.\r\nIt&#39;s Resolve your issue completely.\r\n\r\nGo to the main directory right click -&gt; Tortoise SVN -&gt; Clean Up\r\n\r\nhttps://tortoisesvn.net/docs/nightly/TortoiseSVN_en/tsvn-dug-cleanup.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1502376991, "answer_id": 45617163, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1502376991, "body_markdown": "I had taken .svn folder from my fellow developer and replaced my .svn folder with this. It worked for me. Don&#39;t know what may be other consequences!\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1513850014, "answer_id": 47922238, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1513850014, "body_markdown": "I had tried the most voted answers here and a few others to no avail. My `WORK_QUEUE` table was empty and I wasn&#39;t able to try a clean up at a higher folder. What *did* work was the following (this is via Tortoise SVN);\r\n\r\n* Right click on folder\r\n* Go to TortoiseSVN -&gt; Clean Up...\r\n* Make sure the option to Break Locks is ticked and click OK\r\n\r\nThe Clean Up operation now completes successfully and I can continue. No downloading of sqlite3 or other convoluted solutions required."}, {"tags": [], "down_vote_count": 0, "creation_date": 1519340460, "answer_id": 48938641, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1519340460, "body_markdown": "Using this link,\r\nhttps://tortoisesvn.net/docs/nightly/TortoiseSVN_en/tsvn-dug-cleanup.html\r\n\r\nI noticed the tutorial had the top 6 options checked. In desperation I tried it using those checked boxes, and to my surprised it worked. Be sure to read carefully what each does. Looking at the description of each, they seemed safe to include for me, so one of those checked items seemed to have fixed whatever issue was holding me up. "}], "title": "Subversion stuck due to &quot;previous operation has not finished&quot;?", "view_count": 183298, "answer_count": 24, "code_snippet": ["<code>sqlite3.exe .svn/wc.db \"select * from work_queue\"\n</code>", "<code>sqlite3.exe .svn/wc.db \"delete from work_queue\"\n</code>", "<code>svn cleanup</code>", "<code>svn cleanup</code>", "<code>svn cleanup</code>", "<code>WORK_QUEUE</code>", "<code>^/widgets/foo  common/foo-widget</code>", "<code>common/foo-widget</code>", "<code>svn</code>", "<code>.svn</code>", "<code>TortoiseSVN --&gt;Repo-browser</code>", "<code>Checkout</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "angular"], "creation_date": 1470135871, "body_markdown": "I wanted to start a simple hello world app for Angular.\r\n\r\nWhen I followed the instructions in the official [quickstart][1] the installation created 32,000 files in my project.\r\n\r\nI figured this is some mistake or I missed something, so I decided to use [angular-cli][2], but after setting up the project I counted 41,000 files.\r\n\r\nWhere did I go wrong? Am I missing something really really obvious?\r\n\r\n  [1]: https://angular.io/docs/js/latest/quickstart.html\r\n  [2]: https://cli.angular.io/\r\n", "last_edit_date": 1488989697, "up_vote_count": 476, "link": "https://stackoverflow.com/questions/38718690/huge-number-of-files-generated-for-every-angular-project", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1470137189, "answer_id": 38719154, "path": "stack.gulp.answer", "score": 275, "up_vote_count": 278, "is_accepted": false, "last_activity_date": 1509267418, "last_edit_date": 1509267418, "body_markdown": "There is nothing wrong with your configuration.\r\n\r\nAngular (since version 2.0) uses npm modules and dependencies for development. That&#39;s the sole reason you are seeing such a huge number of files.\r\n\r\nA basic setup of Angular contains transpiler, typings dependencies which are _essential_ for development purposes only.\r\n\r\nOnce you are done with development, all you will need to do is to bundle this application.\r\n\r\nAfter bundling your application, there will be only one `bundle.js` file which you can then deploy on your server.\r\n\r\n***&#39;transpiler&#39;** is just a compiler, thanks @omninonsense for adding that.*"}, {"tags": [], "down_vote_count": 2, "creation_date": 1470145378, "answer_id": 38722185, "path": "stack.gulp.answer", "score": 45, "up_vote_count": 47, "is_accepted": false, "last_activity_date": 1470145378, "body_markdown": "There is nothing wrong with your **development** configuration.\r\n\r\nSomething wrong with your **production** configuration.\r\n\r\nWhen you develop a &quot;Angular 2 Project&quot; or &quot;Any Project Which is based on JS&quot; you can use all files, you can try all files, you can import all files. But if you want to serve this project you need to **COMBINE** all structured files and get rid of useless files.\r\n\r\nThere are a lot of options for combine these files together:\r\n\r\n - [YUI Compressor][1]\r\n - [Google Closure Compiler][2]\r\n - For server side (I think it is best) [GULP][3]\r\n\r\n\r\n  [1]: https://github.com/yui/yuicompressor/\r\n  [2]: https://developers.google.com/closure/compiler/docs/gettingstarted_ui?csw=1\r\n  [3]: https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md"}, {"tags": [], "down_vote_count": 2, "creation_date": 1470151224, "answer_id": 38724475, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1509267463, "last_edit_date": 1509267463, "body_markdown": "Angular itself has lots of dependencies, and the beta version of CLI downloads four times more files. \r\n\r\nThis is how to create a simple project will less files (&quot;only&quot; 10K files)\r\nhttps://yakovfain.com/2016/05/06/starting-an-angular-2-rc-1-project/\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1470164474, "answer_id": 38728503, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 27, "is_accepted": false, "last_activity_date": 1476456868, "last_edit_date": 1476456868, "body_markdown": "As several people already mentioned: All files in your node_modules directory (NPM location for packages) are part of your project dependencies (So called direct dependencies). As an addition to that, your dependencies can also have their own dependencies and so on etc. (So called transitive dependencies). Several ten thousand files are nothing special.\r\n\r\nBecause you are only allowed to upload 10&#39;000 files (See comments), I would go with a bundler engine. This engine will bundle all your JavaScript, CSS, HTML etc. and create a single bundle (or more if you specify them). Your index.html will load this bundle and that&#39;s it.\r\n\r\nI am a fan of webpack, so my webpack solution will create an application bundle and a vendor bundle (For the full working application see here https://github.com/swaechter/project-collection/tree/master/web-angular2-example):\r\n\r\n**index.html**\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html&gt;\r\n    &lt;head&gt;\r\n        &lt;base href=&quot;/&quot;&gt;\r\n        &lt;title&gt;Webcms&lt;/title&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n    &lt;webcms-application&gt;Applikation wird geladen, bitte warten...&lt;/webcms-application&gt;\r\n    &lt;script type=&quot;text/javascript&quot; src=&quot;vendor.bundle.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script type=&quot;text/javascript&quot; src=&quot;main.bundle.js&quot;&gt;&lt;/script&gt;\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n\r\n**webpack.config.js**\r\n\r\n    var webpack = require(&quot;webpack&quot;);\r\n    var path = require(&#39;path&#39;);\r\n    \r\n    var ProvidePlugin = require(&#39;webpack/lib/ProvidePlugin&#39;);\r\n    var CommonsChunkPlugin = require(&#39;webpack/lib/optimize/CommonsChunkPlugin&#39;);\r\n    var UglifyJsPlugin = require(&#39;webpack/lib/optimize/UglifyJsPlugin&#39;);\r\n    \r\n    /*\r\n     * Configuration\r\n     */\r\n    module.exports = {\r\n        devtool: &#39;source-map&#39;,\r\n        debug: true,\r\n    \r\n        entry: {\r\n            &#39;main&#39;: &#39;./app/main.ts&#39;\r\n        },\r\n    \r\n        // Bundle configuration\r\n        output: {\r\n            path: root(&#39;dist&#39;),\r\n            filename: &#39;[name].bundle.js&#39;,\r\n            sourceMapFilename: &#39;[name].map&#39;,\r\n            chunkFilename: &#39;[id].chunk.js&#39;\r\n        },\r\n    \r\n        // Include configuration\r\n        resolve: {\r\n            extensions: [&#39;&#39;, &#39;.ts&#39;, &#39;.js&#39;, &#39;.css&#39;, &#39;.html&#39;]\r\n        },\r\n    \r\n        // Module configuration\r\n        module: {\r\n            preLoaders: [\r\n                // Lint all TypeScript files\r\n                {test: /\\.ts$/, loader: &#39;tslint-loader&#39;}\r\n            ],\r\n            loaders: [\r\n                // Include all TypeScript files\r\n                {test: /\\.ts$/, loader: &#39;ts-loader&#39;},\r\n    \r\n                // Include all HTML files\r\n                {test: /\\.html$/, loader: &#39;raw-loader&#39;},\r\n    \r\n                // Include all CSS files\r\n                {test: /\\.css$/, loader: &#39;raw-loader&#39;},\r\n            ]\r\n        },\r\n    \r\n        // Plugin configuration\r\n        plugins: [\r\n            // Bundle all third party libraries\r\n            new CommonsChunkPlugin({name: &#39;vendor&#39;, filename: &#39;vendor.bundle.js&#39;, minChunks: Infinity}),\r\n    \r\n            // Uglify all bundles\r\n            new UglifyJsPlugin({compress: {warnings: false}}),\r\n        ],\r\n    \r\n        // Linter configuration\r\n        tslint: {\r\n            emitErrors: false,\r\n            failOnHint: false\r\n        }\r\n    };\r\n    \r\n    // Helper functions\r\n    function root(args) {\r\n        args = Array.prototype.slice.call(arguments, 0);\r\n        return path.join.apply(path, [__dirname].concat(args));\r\n    }\r\n\r\nAdvantages:\r\n\r\n - Full build line (TS linting, compiling, minification etc.)\r\n - 3 files for deployment --&gt; Only a few Http request\r\n\r\nDisadvantages:\r\n\r\n - Higher build time\r\n - Not the best solution fot Http 2 projects (See disclaimer)\r\n\r\n\r\n**Disclaimer:** This is a good solution for Http 1.*, because it minimizes the overhead for each Http request. You only have a request for your index.html and each bundle - but not for 100 - 200 files. At the moment, this is the way to go.\r\n\r\nHttp 2 on the other hand tries to minimize the Http overhead, so it&#39;s based on a stream protocol. This stream is able to communicate in both direction (Client &lt;--&gt; Server) and as a reason of that a more intelligent resource loading is possible (You only load the required files). The stream eliminates much of the Http overhead (Less Http round trips).\r\n\r\nBut it&#39;s the same as with IPv6: It will take a few years until people will really use Http 2"}, {"tags": [], "down_vote_count": 4, "creation_date": 1470202387, "answer_id": 38735149, "path": "stack.gulp.answer", "score": 105, "up_vote_count": 109, "is_accepted": false, "last_activity_date": 1470413956, "last_edit_date": 1495540968, "body_markdown": "                                    Typical Angular2 Project\r\n\r\n**NPM Package**&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; **Files (Development)** &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;**Real World Files (Deployment)** \r\n\r\n    @angular                       3,236                             1\r\n    rxJS                           1,349                             1*\r\n    core-js                        1,341                             2\r\n    typings                        1,488                             0\r\n    gulp                           1,218                             0\r\n    gulp-typescript                1,243                             0\r\n    lite-server                    5,654                             0\r\n    systemjs-builder               6,470                             0\r\n    __________________________________________________________________\r\n    Total                         21,999                             3  \r\n\r\n`*`: *`bundled with @angular`* \r\n\r\n[ [see this for bundling process &amp;neArr;][1] ]\r\n    \r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/37631098/angular-2-how-to-bundle-for-production-currently-rc4/37874643#37874643"}, {"tags": [], "down_vote_count": 1, "creation_date": 1470231338, "answer_id": 38745227, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1470231338, "body_markdown": "You need to ensure that you&#39;re just deploying the dist (short for distributable) folder from your project generated by the [Angular CLI][1]. This allows the tool to take your source code and it&#39;s dependencies and only give you what you need in order to run your application.\r\n\r\nThat being said there is/was an issue with the Angular CLI in regards to production builds via `ng build --prod\r\n\r\nYesterday (August 2, 2016) a release was done which switched the build mechanism from [broccoli][2] + [systemjs][3] to [webpack][4] which successfully handles production builds.\r\n\r\nBased upon these steps:\r\n\r\n    ng new test-project\r\n    ng build --prod\r\n\r\nI am seeing a `dist` folder size of **1.1 MB** across the **14 files** listed here:\r\n\r\n    ./app/index.js\r\n    ./app/size-check.component.css\r\n    ./app/size-check.component.html\r\n    ./favicon.ico\r\n    ./index.html\r\n    ./main.js\r\n    ./system-config.js\r\n    ./tsconfig.json\r\n    ./vendor/es6-shim/es6-shim.js\r\n    ./vendor/reflect-metadata/Reflect.js\r\n    ./vendor/systemjs/dist/system.src.js\r\n    ./vendor/zone.js/dist/zone.js\r\n\r\n**Note** Currently to install the webpack version of the angular cli, you must run... `npm install angular-cli@webpack -g`\r\n\r\n  [1]: https://cli.angular.io\r\n  [2]: https://github.com/broccolijs\r\n  [3]: https://github.com/systemjs/systemjs\r\n  [4]: https://github.com/webpack/webpack"}, {"tags": [], "down_vote_count": 1, "creation_date": 1471782839, "answer_id": 39064238, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1509267494, "last_edit_date": 1509267494, "body_markdown": "This is actually not Angular specific, it happens with almost any project that uses the NodeJs / npm ecosystem for its tooling. \r\n\r\nThose project are inside your node_modules folders, and are the transititve dependencies that your direct dependencies need to run.\r\n\r\nIn the node ecosystem modules are usually small, meaning that instead of developing things ourselves we tend to import most of what we need under the form of a module. This can include such small things like the famous left-pad function, why write it ourselves if not as an exercise ?\r\n\r\nSo having a lot of files its actually a good thing, it means everything is very modular and module authors frequently reused other modules. This ease of modularity is probably one of the main reasons why the node ecosystem grew so fast.\r\n\r\nIn principle this should not cause any issue, but it seems you run into a google app engine file count limit. In that I case I suggest to not upload node_modules to app engine.\r\n\r\ninstead build the application locally and upload to google app engine only the bundled filesn but don&#39;t to the build in app engine itself."}, {"tags": [], "down_vote_count": 2, "creation_date": 1476983882, "answer_id": 40160635, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1476983882, "body_markdown": "There is nothing wrong. These are all the node dependencies that you have mentioned in the package.json.\n\nJust be careful if you have download some of the git hub project, it might have lot of other dependencies that are not actually require for angular 2 first hello world app :)\n\n- make sure you have angular dependencies\n-rxjs\n-gulp\n-typescript\n-tslint\n-docker"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484336024, "answer_id": 41642174, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1509267482, "last_edit_date": 1509267482, "body_markdown": "Seems like nobody have mentioned Ahead-of-Time Compilation as described here: https://angular.io/docs/ts/latest/cookbook/aot-compiler.html\r\n\r\nMy experience with Angular so far is that AoT creates the smallest builds with almost no loading time. And most important as the question here is about - you only need to ship a few files to production.\r\n\r\nThis seems to be because the Angular compiler will not be shipped with the production builds as the templates are compiled &quot;Ahead of Time&quot;. It&#39;s also very cool to see your HTML template markup transformed to javascript instructions that would be very hard to reverse engineer into the original HTML.\r\n\r\nI&#39;ve made a simple video where I demonstrate download size, number of files etc. for an Angular app in dev vs AoT build - which you can see here:\r\n\r\nhttps://youtu.be/ZoZDCgQwnmQ\r\n\r\nYou&#39;ll find the source code for the demo here:\r\n\r\nhttps://github.com/fintechneo/angular2-templates\r\n\r\nAnd - as all the others said here - there&#39;s nothing wrong when there are many files in your development environment. That&#39;s how it is with all the dependencies that comes with Angular, and many other modern frameworks. But the difference here is that when shipping to production you should be able to pack it into a few files. Also you don&#39;t want all of these dependency files in your git repository."}, {"tags": [], "down_vote_count": 0, "creation_date": 1497080321, "answer_id": 44470830, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1513838214, "last_edit_date": 1513838214, "body_markdown": "If you are using angular cli&#39;s newer version use `ng build --prod`\r\n\r\nIt will create **dist** folder which have less files and speed of project will increased.\r\n\r\nAlso for testing in local with best performance of angular cli you can use **ng serve --prod**"}, {"tags": [], "down_vote_count": 0, "creation_date": 1510753750, "answer_id": 47309135, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1510753750, "body_markdown": "Here is a comparison of what takes more space in angular projects.\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/Cfb2Q.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1512599605, "answer_id": 47684608, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1513865733, "last_edit_date": 1513865733, "body_markdown": "if you use Angular CLI you can always use --minimal flag when you create a project \r\n\r\n    ng new name --minimal\r\n\r\nI&#39;ve just run it with the flag and it creates 24 600 files and `ng build --prod` produces 212 KB dist folder \r\n\r\nSo if you don&#39;t need water fountains in your project or just want to quickly test something out this I think is pretty useful  "}, {"tags": [], "down_vote_count": 0, "creation_date": 1517851147, "answer_id": 48628016, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1517851147, "body_markdown": "If your file system supports symbolic links, then you can at least relegate all of these files to a hidden folder -- so that a smart tool like `tree` won&#39;t display them by default.\r\n\r\n    mv node_modules .blergyblerp &amp;&amp; ln -s .blergyblerp node_modules\r\n\r\nUsing a hidden folder for this may also encourage the understanding that these are build-related intermediate files that don&#39;t need to be saved to revision control -- or used directly in your deployment."}], "title": "Huge number of files generated for every Angular project", "view_count": 39536, "answer_count": 13, "code_snippet": ["<code>bundle.js</code>", "<code>                                Typical Angular2 Project\n</code>", "<code>@angular                       3,236                             1\nrxJS                           1,349                             1*\ncore-js                        1,341                             2\ntypings                        1,488                             0\ngulp                           1,218                             0\ngulp-typescript                1,243                             0\nlite-server                    5,654                             0\nsystemjs-builder               6,470                             0\n__________________________________________________________________\nTotal                         21,999                             3  \n</code>", "<code>*</code>", "<code>bundled with @angular</code>", "<code>-3</code>", "<code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;base href=\"/\"&gt;\n    &lt;title&gt;Webcms&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;webcms-application&gt;Applikation wird geladen, bitte warten...&lt;/webcms-application&gt;\n&lt;script type=\"text/javascript\" src=\"vendor.bundle.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"main.bundle.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>", "<code>var webpack = require(\"webpack\");\nvar path = require('path');\n\nvar ProvidePlugin = require('webpack/lib/ProvidePlugin');\nvar CommonsChunkPlugin = require('webpack/lib/optimize/CommonsChunkPlugin');\nvar UglifyJsPlugin = require('webpack/lib/optimize/UglifyJsPlugin');\n\n/*\n * Configuration\n */\nmodule.exports = {\n    devtool: 'source-map',\n    debug: true,\n\n    entry: {\n        'main': './app/main.ts'\n    },\n\n    // Bundle configuration\n    output: {\n        path: root('dist'),\n        filename: '[name].bundle.js',\n        sourceMapFilename: '[name].map',\n        chunkFilename: '[id].chunk.js'\n    },\n\n    // Include configuration\n    resolve: {\n        extensions: ['', '.ts', '.js', '.css', '.html']\n    },\n\n    // Module configuration\n    module: {\n        preLoaders: [\n            // Lint all TypeScript files\n            {test: /\\.ts$/, loader: 'tslint-loader'}\n        ],\n        loaders: [\n            // Include all TypeScript files\n            {test: /\\.ts$/, loader: 'ts-loader'},\n\n            // Include all HTML files\n            {test: /\\.html$/, loader: 'raw-loader'},\n\n            // Include all CSS files\n            {test: /\\.css$/, loader: 'raw-loader'},\n        ]\n    },\n\n    // Plugin configuration\n    plugins: [\n        // Bundle all third party libraries\n        new CommonsChunkPlugin({name: 'vendor', filename: 'vendor.bundle.js', minChunks: Infinity}),\n\n        // Uglify all bundles\n        new UglifyJsPlugin({compress: {warnings: false}}),\n    ],\n\n    // Linter configuration\n    tslint: {\n        emitErrors: false,\n        failOnHint: false\n    }\n};\n\n// Helper functions\nfunction root(args) {\n    args = Array.prototype.slice.call(arguments, 0);\n    return path.join.apply(path, [__dirname].concat(args));\n}\n</code>", "<code>angular-cli</code>", "<code>ng new test-project\nng build --prod\n</code>", "<code>dist</code>", "<code>./app/index.js\n./app/size-check.component.css\n./app/size-check.component.html\n./favicon.ico\n./index.html\n./main.js\n./system-config.js\n./tsconfig.json\n./vendor/es6-shim/es6-shim.js\n./vendor/reflect-metadata/Reflect.js\n./vendor/systemjs/dist/system.src.js\n./vendor/zone.js/dist/zone.js\n</code>", "<code>npm install angular-cli@webpack -g</code>", "<code>ng build --prod</code>", "<code>ng serve --prod</code>", "<code>ng new name --minimal\n</code>", "<code>ng build --prod</code>", "<code>tree</code>", "<code>mv node_modules .blergyblerp &amp;&amp; ln -s .blergyblerp node_modules\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "angularjs", "source-maps"], "creation_date": 1392183510, "body_markdown": "Recently I have seen files with `.js.map` extension shipped with some JavaScript libraries (like [Angular][1]), and that just raised few questions in my head:\r\n\r\n- What is it for? Why do the guys at Angular care to deliver a `.js.map` file?\r\n- How can I (as a JavaScript developer) use the `angular.min.js.map` file?\r\n- Should I care about creating `.js.map` files for my JavaScript applications?\r\n- How does it get created? I took a look at `angular.min.js.map` and it was filled with strange-formatted strings so I assume it&#39;s not created manually.\r\n\r\n\r\n  [1]: http://code.angularjs.org/", "last_edit_date": 1409727721, "up_vote_count": 238, "link": "https://stackoverflow.com/questions/21719562/javascript-map-files-javascript-source-maps", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1392184140, "answer_id": 21719713, "path": "stack.gulp.answer", "score": 353, "up_vote_count": 353, "is_accepted": true, "last_activity_date": 1421702736, "last_edit_date": 1421702736, "body_markdown": "The .map files are for js and css files that have been minified. They are called SourceMaps. When you minify a file, like the angular.js file, it takes thousands of lines of pretty code and turns it into only a few lines of ugly code. Hopefully, when you are shipping your code to production, you are using the minified code instead of the full, unminified version. When your app is in production, and has an error, the sourcemap will help take your ugly file, and will allow you to see the original version of the code. If you didn&#39;t have the sourcemap, then any error would seem cryptic at best. \r\n\r\nSame for CSS files. Once you take a SASS or LESS file and compile it to CSS, it looks nothing like it&#39;s original form. If you enable sourcemaps, then you can see the original state of the file, instead of the modified state. \r\n\r\nSo, to answer you questions in order:\r\n\r\n - **What is it for?** To de-reference uglified code\r\n - **How can a developer use it?** You use it for debugging a production app. In development mode you can use the full version of Angular. In production, you would use the minified version. \r\n - **Should I care about creating a js.map file?** If you care about being able to debug production code easier, then yes, you should do it. \r\n - **How does it get created?** It is created at build time. There are build tools that can build your .map file for you as it does other files. https://github.com/gruntjs/grunt-contrib-uglify/issues/71\r\n\r\nI hope this makes sense. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1414921568, "answer_id": 26697984, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1419020341, "last_edit_date": 1419020341, "body_markdown": "Just wanted to focus on the last part of the question; **How source map files are created?** by listing the build tools I know that can create source maps.\r\n\r\n1. [Grunt][1]: using plugin [`grunt-contrib-uglify`][2]\r\n2. [Gulp][3]: using plugin [`gulp-uglify`][4]\r\n3. [Google closure][5]: using parameter [`--create_source_map`][6]\r\n\r\nI don&#39;t know if there are other tools that can create source maps.\r\n\r\n  [1]: http://gruntjs.com\r\n  [2]: https://www.npmjs.org/package/grunt-contrib-uglify/\r\n  [3]: http://gulpjs.com/\r\n  [4]: https://www.npmjs.org/package/gulp-uglify/\r\n  [5]: https://developers.google.com/closure/\r\n  [6]: https://developers.google.com/closure/compiler/faq#sourcemaps"}, {"tags": [], "down_vote_count": 0, "creation_date": 1448708448, "answer_id": 33970543, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1448708448, "body_markdown": "The map file maps the unminified file to the minified file. If you make changes in the unminified file, the changes will be automatically reflected to the minified version of the file."}, {"tags": [], "down_vote_count": 0, "creation_date": 1460393448, "answer_id": 36554691, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1460393448, "body_markdown": " - **How can a developer use it?**\r\nI didn&#39;t find answer for this in the comments, here is how can be used:\r\n\r\n 1. **Don&#39;t link** your js.map file in your index.html file (no need for that)\r\n 2. Minifiacation tools (good ones) add a comment to your .min.js file: //# sourceMappingURL=yourFileName.min.js.map , **which will connect your .map file**\r\n\r\nWhen the min.js and js.map files are ready...\r\n\r\n 3. Chrome: Open dev-tools, navigate to &#39;Sources&#39; tab, You will see &#39;sources&#39; folder, where unminifide applications files are keep "}, {"tags": [], "down_vote_count": 0, "creation_date": 1503606875, "answer_id": 45870436, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1503607453, "last_edit_date": 1503607453, "body_markdown": "Just to add to how to use map files. I use chrome for ubuntu and if I go to sources and click on a file, if there is a map file a message comes up telling me that I can view the original file and how to do it. \r\n\r\nFor the Angular files that I worked with today I click \r\n&gt;Ctrl-P \r\nand a list of original files comes up in a small window. \r\n\r\nI can then browse through the list to view the file that I would like to inspect and check where the issue might be. \r\n "}], "title": "Javascript .map files - javascript source maps", "view_count": 58047, "answer_count": 5, "code_snippet": ["<code>.js.map</code>", "<code>.js.map</code>", "<code>angular.min.js.map</code>", "<code>.js.map</code>", "<code>angular.min.js.map</code>", "<code>.js.map</code>", "<code>grunt-contrib-uglify</code>", "<code>gulp-uglify</code>", "<code>--create_source_map</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "requirejs", "angularjs"], "_childDocuments_": [{"tags": [], "down_vote_count": 5, "creation_date": 1348232047, "answer_id": 12531010, "path": "stack.gulp.answer", "score": 221, "up_vote_count": 226, "is_accepted": false, "last_activity_date": 1369405298, "last_edit_date": 1369405298, "body_markdown": "Yes it makes sense to use `angular.js` along with `require.js` wherein you can use `require.js` for modularizing components.&lt;br&gt;\r\n\r\nI can point you to a [seed project][1] which uses `both angular.js and require.js`. Hope that helps! \r\n\r\n\r\n  [1]: https://github.com/tnajdek/angular-requirejs-seed"}, {"tags": [], "down_vote_count": 3, "creation_date": 1348239101, "answer_id": 12532936, "path": "stack.gulp.answer", "score": 57, "up_vote_count": 60, "is_accepted": false, "last_activity_date": 1348239101, "body_markdown": "This I believe is a subjective question, so I will provide my subjective opinion. \r\n\r\nAngular has a modularization mechanism built in. When you create your app, the first thing you would do is \r\n\r\n    var app = angular.module(&quot;myApp&quot;);\r\n\r\nand then\r\n\r\n    app.directive(...);\r\n    \r\n    app.controller(...);\r\n    \r\n    app.service(...);\r\n\r\nIf you have a look at the angular-seed which is neat starter app for angular, they have separated out the directives, services, controllers etc into different modules and then loaded those modules as dependancies on your main app.\r\n\r\nSomething like :\r\n\r\n    var app = angular.module(&quot;myApp&quot;,[&quot;Directives&quot;,&quot;Controllers&quot;,&quot;Services&quot;];\r\n\r\nAngular also lazy loads these modules ( into memory) not their script files. \r\n\r\nIn terms of lazy loading script files, to be frank unless you are writing something extremely large it would be an overkill because angular by its very nature reduces the amount of code you write. A typical app written in most other frameworks could expect a reduction in around 30-50% in LOC if written in angular. \r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1348315864, "answer_id": 12543614, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1348315864, "body_markdown": "As @ganaraj mentioned AngularJS has dependency injection at its core. When building toy seed applications with and without RequireJS, I personally found RequireJS was probably overkill for most use cases.\r\n\r\nThat doesn&#39;t mean RequireJS is not useful for it&#39;s script loading capabilities and keeping your codebase clean during development. Combining the r.js optimizer ([https://github.com/jrburke/r.js][1]) with almond ([https://github.com/jrburke/almond][2]) can create a very slim script loading story. However since its dependency management features are not as important with angular at the core of your application, you can also evaluate other client side (HeadJS, LABjs, ...) or even server side (MVC4 Bundler, ...) script loading solutions for your particular application.\r\n\r\n  [1]: https://github.com/jrburke/r.js\r\n  [2]: https://github.com/jrburke/almond"}, {"tags": [], "down_vote_count": 5, "creation_date": 1364404241, "answer_id": 15665056, "path": "stack.gulp.answer", "score": 135, "up_vote_count": 140, "is_accepted": false, "last_activity_date": 1429783205, "last_edit_date": 1429783205, "body_markdown": "Yes, it makes sense. \r\n\r\n&gt; Angular modules don&#39;t try to solve the problem of script load ordering\r\n&gt; or lazy script fetching. These goals are orthogonal and both module\r\n&gt; systems can live side by side and fulfil their goals.\r\n&gt; \r\n&gt; *Source: [Angular JS official website][1]&lt;/cite&gt;*\r\n\r\n\r\n  [1]: http://docs.angularjs.org/tutorial/step_07"}, {"tags": [], "down_vote_count": 1, "creation_date": 1369666997, "answer_id": 16775893, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1369740064, "last_edit_date": 1369740064, "body_markdown": "Yes it makes sense to use requireJS with Angular, I spent several days to test several technical solutions.\r\n\r\nI made an Angular Seed with RequireJS on Server Side. Very simple one.\r\nI use SHIM notation for no AMD module and not AMD because I think it&#39;s very difficult to deal with two different Dependency injection system. \r\n\r\nI use grunt and r.js to concatenate js files on server depends on the SHIM configuration (dependency) file. So I refer only one js file in my app.\r\n\r\nFor more information go on my github Angular Seed :\r\nhttps://github.com/matohawk/angular-seed-requirejs\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1369734386, "answer_id": 16788878, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1369734386, "body_markdown": "It makes sense to use requirejs with angularjs if you plan on lazy loading controllers and directives etc, while also combining multiple lazy dependencies into single script files for much faster lazy loading. RequireJS has an &lt;a href=&quot;http://requirejs.org/docs/optimization.html&quot;&gt;optimisation tool&lt;/a&gt; that makes the combining easy. See http://ify.io/using-requirejs-with-optimisation-for-lazy-loading-angularjs-artefacts/   "}, {"tags": [], "down_vote_count": 2, "creation_date": 1378303017, "answer_id": 18615865, "path": "stack.gulp.answer", "score": 148, "up_vote_count": 150, "is_accepted": false, "last_activity_date": 1453259489, "last_edit_date": 1495541904, "body_markdown": "To restate what I think the OP&#39;s question really is:\r\n\r\n&gt; If I&#39;m building an application principally in Angular 1.x, and (implicitly) doing so in the era of Grunt/Gulp/Broccoli and Bower/NPM, and I maybe have a couple additional library dependencies, does Require add clear, specific value beyond what I get by using Angular without Require? \r\n\r\nOr, put another way: \r\n\r\n&gt;&quot;Does vanilla Angular need Require to manage basic Angular component-loading effectively, *if I have other ways of handling basic script-loading?*&quot;\r\n\r\nAnd I believe the basic answer to that is: &quot;not unless you&#39;ve got something else going on, and/or you&#39;re unable to use newer, more modern tools.&quot; \r\n\r\nLet&#39;s be clear at the outset: RequireJS is a great tool that solved some very important problems, and started us down the road that we&#39;re on, toward more scalable, more professional Javascript applications. Importantly, it was the first time many people encountered the concept of modularization and of getting things out of global scope. So, if you&#39;re going to build a Javascript application that needs to scale, then Require and the AMD pattern are not bad tools for doing that.\r\n\r\nBut, **is there anything particular about Angular that makes Require/AMD a particularly good fit?** No. In fact, Angular provides you with its own modularization and encapsulation pattern, which in many ways renders redundant the basic modularization features of AMD. And, integrating Angular modules into the AMD pattern is not impossible, but it&#39;s a bit... finicky. You&#39;ll definitely be spending time getting the two patterns to integrate nicely.\r\n\r\nFor some perspective from the Angular team itself, there&#39;s [this][1], from Brian Ford, author of the Angular Batarang and now a member of the Angular core team:\r\n\r\n&gt; I don&#39;t recommend using RequireJS with AngularJS. Although it&#39;s certainly possible, I haven&#39;t seen any instance where RequireJS was beneficial in practice.\r\n\r\nSo, on the very specific question of AngularJS: Angular and Require/AMD are orthogonal, and in places overlapping. You _can_ use them together, but there&#39;s no reason specifically related to the nature/patterns of Angular itself. \r\n\r\n### But what about basic management of internal and external dependencies for scalable Javascript applications? Doesn&#39;t Require do something really critical for me there? \r\n\r\nI recommend checking out Bower and NPM, and particularly NPM. I&#39;m not trying to start a holy war about the comparative benefits of these tools. I merely want to say: there are other ways to skin that cat, and those ways *may* be even better than AMD/Require. (They certainly have much more popular momentum in late-2015, particularly NPM, combined with ES6 or CommonJS modules. See [related SO question][2].)\r\n\r\n### What about lazy-loading? \r\n\r\nNote that lazy-loading and lazy-downloading are different. Angular&#39;s lazy-loading doesn&#39;t mean you&#39;re pulling them direct from the server. In a Yeoman-style application with javascript automation, you&#39;re concatenating and minifying the whole shebang together into a single file. They&#39;re present, but not executed/instantiated until needed. The speed and bandwidth improvements you get from doing this vastly, vastly outweigh any alleged improvements from lazy-downloading a particular 20-line controller. In fact, the wasted network latency and transmission overhead for that controller is going to be an order of magnitude greater than the size of the controller itself.\r\n\r\nBut let&#39;s say you really do need lazy-downloading, perhaps for infrequently-used pieces of your application, such as an admin interface. That&#39;s a very legitimate case. Require can indeed do that for you. But there are [also][3] [many][4] [other][5], [potentially][6] [more][7] [flexible][8] [options][9] that accomplish the same thing. And Angular 2.0 will apparently take care of this for us, built-in to the [router][10]. ([Details][11].)\r\n\r\n\r\n### But what about during development on my local dev boxen? \r\n\r\nHow can I get all my dozens/hundreds of script files loaded without needing to attach them all to index.html manually?\r\n\r\nHave a look at the sub-generators in Yeoman&#39;s generator-angular, or at the automation patterns embodied in [generator-gulp-angular][12], or at the standard Webpack automation for React. These provide you a clean, scalable way to either: automatically attach the files at the time that components are scaffolded, or to simply grab them all automatically if they are present in certain folders/match certain glob-patterns. You never again need to think about your own script-loading once you&#39;ve got the latter options. \r\n\r\n### Bottom-line? \r\n\r\nRequire is a great tool, for certain things. But go with the grain whenever possible, and separate your concerns whenever possible. Let Angular worry about Angular&#39;s own modularization pattern, and consider using ES6 modules or CommonJS as a general modularization pattern. Let modern automation tools worry about script-loading and dependency-management. And take care of async lazy-loading in a granular way, rather than by tangling it up with the other two concerns. \r\n\r\nThat said, if you&#39;re developing Angular apps but can&#39;t install Node on your machine to use Javascript automation tools for some reason, then Require may be a good alternate solution. And I&#39;ve seen really elaborate setups where people want to dynamically load Angular components that each declare their own dependencies or something. And while I&#39;d probably try to solve that problem another way, I can see the merits of the idea, for that very particular situation. \r\n\r\nBut otherwise... when starting from scratch with a new Angular application and flexibility to create a modern automation environment... you&#39;ve got a lot of other, more flexible, more modern options.\r\n\r\n_(Updated repeatedly to keep up with the evolving JS scene.)_\r\n\r\n\r\n  [1]: http://briantford.com/blog/huuuuuge-angular-apps.html\r\n  [2]: https://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm/31633281#31633281\r\n  [3]: https://oclazyload.readme.io/\r\n  [4]: http://www.appelsiini.net/projects/lazyload\r\n  [5]: https://chris.lu/article/read/506de698268c420f0d000004\r\n  [6]: http://w3bits.com/async-javascript/\r\n  [7]: https://friendlybit.com/js/lazy-loading-asyncronous-javascript/\r\n  [8]: https://stackoverflow.com/questions/20578731/how-to-lazy-load-non-angular-javascript-files-using-angularjs\r\n  [9]: http://www.smashingmagazine.com/2015/02/redefining-lazy-loading-with-lazy-load-xt/\r\n  [10]: https://github.com/angular/router\r\n  [11]: http://www.syntaxsuccess.com/viewarticle/lazy-loading-in-angular-2.0\r\n  [12]: https://github.com/Swiip/generator-gulp-angular\r\n  [13]: http://c2.com/cgi/wiki?CargoCultProgramming"}, {"tags": [], "down_vote_count": 1, "creation_date": 1379232292, "answer_id": 18810266, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1379232292, "body_markdown": "I think that it depends on your project complexity since angular is pretty much modularized. \r\nYour controllers can be mapped and you can just import those JavaScript classes in your index.html page. \r\n\r\nBut in case your project get bigger. Or you anticipates such scenario, you should integrate angular with requirejs. In [this][1] article you can see a demo app for such integration. \r\n\r\n\r\n  [1]: http://angularcorner.blogspot.co.il/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1383857343, "answer_id": 19846403, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1383857343, "body_markdown": "I would avoid using Require.js. Apps I&#39;ve seen that do this wind up a mess of multiple types of module pattern architecture.  AMD, Revealing, different flavors of IIFE, etc.  There are other ways to load on demand like the [loadOnDemand Angular mod][1].  Adding other stuff just fills your code full of cruft and creates a [low signal to noise ratio][2] and makes your code hard to read. \r\n\r\n  [1]: https://github.com/AndyGrom/loadOnDemand\r\n  [2]: http://java.dzone.com/articles/whats-your-signal-noise-ratio"}, {"tags": [], "down_vote_count": 1, "creation_date": 1384954018, "answer_id": 20097262, "path": "stack.gulp.answer", "score": 17, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1384954018, "body_markdown": "Yes, it does, specially for very large SPA.\r\n\r\nIn some scenario, RequireJS is a must.  For example, I develop PhoneGap applications using AngularJS that also uses Google Map API.  Without AMD loader like RequireJS, the app would simply crash upon launch when offline as it cannot source the Google Map API scripts.  An AMD loader gives me a chance to display an error message to the user.\r\n\r\nHowever, integration between AngularJS and RequireJS is a bit tricky.  I created angularAMD to make this a less painful process:\r\n\r\nhttp://marcoslin.github.io/angularAMD/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1389024667, "answer_id": 20954143, "path": "stack.gulp.answer", "score": 33, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1413683045, "last_edit_date": 1413683045, "body_markdown": "Using RequireJS with AngularJS makes sense but only if you understand how each of them works regarding **dependency injection**, as although both of them injects dependencies, they inject very different things.\r\n\r\nAngularJS has its own dependency system that let you inject AngularJS modules to a newly created module in order to reuse implementations. Let&#39;s say you created a &quot;first&quot; module that implements an AngularJS filter &quot;greet&quot;:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    angular\r\n      .module(&#39;first&#39;, [])\r\n      .filter(&#39;greet&#39;, function() {\r\n        return function(name) {\r\n          return &#39;Hello, &#39; + name + &#39;!&#39;;\r\n        }\r\n      });\r\n\r\nAnd now let&#39;s say you want to use the &quot;greet&quot; filter in another module called &quot;second&quot; that implements a &quot;goodbye&quot; filter. You may do that injecting the &quot;first&quot; module to the &quot;second&quot; module:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    angular\r\n      .module(&#39;second&#39;, [&#39;first&#39;])\r\n      .filter(&#39;goodbye&#39;, function() {\r\n        return function(name) {\r\n          return &#39;Good bye, &#39; + name + &#39;!&#39;;\r\n        }\r\n      });\r\n\r\nThe thing is that in order to make this work correctly without RequireJS, you have to make sure that the &quot;first&quot; AngularJS module is loaded on the page before you create the &quot;second&quot; AngularJS module. Quoting documentation:\r\n\r\n&gt; Depending on a module implies that required module needs to be loaded\r\n&gt; before the requiring module is loaded.\r\n\r\nIn that sense, here is where RequireJS can help you as RequireJS provides a clean way to inject scripts to the page helping you organize script dependencies between each other.\r\n\r\nGoing back to the &quot;first&quot; and &quot;second&quot; AngularJS modules, here is how you can do it using RequireJS separating the modules on different files to leverage script dependencies loading:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // firstModule.js file\r\n    define([&#39;angular&#39;], function(angular) {\r\n      angular\r\n        .module(&#39;first&#39;, [])\r\n        .filter(&#39;greet&#39;, function() {\r\n          return function(name) {\r\n            return &#39;Hello, &#39; + name + &#39;!&#39;;\r\n          }\r\n        });\r\n    });\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // secondModule.js file\r\n    define([&#39;angular&#39;, &#39;firstModule&#39;], function(angular) {\r\n      angular\r\n        .module(&#39;second&#39;, [&#39;first&#39;])\r\n        .filter(&#39;goodbye&#39;, function() {\r\n          return function(name) {\r\n            return &#39;Good bye, &#39; + name + &#39;!&#39;;\r\n          }\r\n        });\r\n    });\r\n\r\nYou can see that we are depending on &quot;firstModule&quot; file to be injected before the content of the RequireJS callback can be executed which needs &quot;first&quot; AngularJS module to be loaded to create &quot;second&quot; AngularJS module.\r\n\r\nSide note: Injecting &quot;angular&quot; on the &quot;firstModule&quot; and &quot;secondModule&quot; files as dependency is required in order to use AngularJS inside the RequireJS callback function and it have to be configured on RequireJS config to map &quot;angular&quot; to the library code. You may have AngularJS loaded to the page in a traditional manner too (script tag) although defeats RequireJS benefits. \r\n\r\nMore details on having RequireJS support from AngularJS core from 2.0 version on my blog post.\r\n\r\n**Based on my blog post *&quot;Making sense of RequireJS with AngularJS&quot;*, here is the [link][1].**\r\n\r\n\r\n  [1]: http://leog.me/log/making-sense-of-requirejs-with-angularjs/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1390323280, "answer_id": 21264338, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1390323280, "body_markdown": "Short answer is, it make sense. Recently this was discussed in ng-conf 2014. Here is the talk on this topic:\r\n\r\nhttp://www.youtube.com/watch?v=4yulGISBF8w\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1393438334, "answer_id": 22049734, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1408986630, "last_edit_date": 1408986630, "body_markdown": "Here is the approach I use: http://thaiat.github.io/blog/2014/02/26/angularjs-and-requirejs-for-very-large-applications/\r\n\r\nThe page shows a possible implementation of AngularJS + RequireJS, where the code is split by features and then component type."}, {"tags": [], "down_vote_count": 1, "creation_date": 1404094644, "answer_id": 24482161, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1484000572, "last_edit_date": 1484000572, "body_markdown": "Answer from Brian Ford\r\n\r\nAngularJS has it&#39;s own module system an typically doesn&#39;t need something like RJS.\r\n\r\nReference: https://github.com/yeoman/generator-angular/issues/40"}], "creation_date": 1348224578, "body_markdown": "I&#39;m a newbie to Angular.js and trying to understand how it&#39;s different from Backbone.js... We used to manage our packages dependencies with Require.js while using Backbone. Does it make sense to do the same with Angular.js?", "title": "Does it make sense to use Require.js with Angular.js?", "view_count": 152584, "up_vote_count": 439, "answer_count": 14, "link": "https://stackoverflow.com/questions/12529083/does-it-make-sense-to-use-require-js-with-angular-js", "code_snippet": ["<code>angular.js</code>", "<code>require.js</code>", "<code>require.js</code>", "<code>both angular.js and require.js</code>", "<code>var app = angular.module(\"myApp\");\n</code>", "<code>app.directive(...);\n\napp.controller(...);\n\napp.service(...);\n</code>", "<code>var app = angular.module(\"myApp\",[\"Directives\",\"Controllers\",\"Services\"];\n</code>", "<code>angular\n  .module('first', [])\n  .filter('greet', function() {\n    return function(name) {\n      return 'Hello, ' + name + '!';\n    }\n  });\n</code>", "<code>angular\n  .module('second', ['first'])\n  .filter('goodbye', function() {\n    return function(name) {\n      return 'Good bye, ' + name + '!';\n    }\n  });\n</code>", "<code>// firstModule.js file\ndefine(['angular'], function(angular) {\n  angular\n    .module('first', [])\n    .filter('greet', function() {\n      return function(name) {\n        return 'Hello, ' + name + '!';\n      }\n    });\n});\n</code>", "<code>// secondModule.js file\ndefine(['angular', 'firstModule'], function(angular) {\n  angular\n    .module('second', ['first'])\n    .filter('goodbye', function() {\n      return function(name) {\n        return 'Good bye, ' + name + '!';\n      }\n    });\n});\n</code>"], "path": "stack.gulp"}, {"tags": ["twitter-bootstrap-3", "source-maps"], "creation_date": 1391294421, "body_markdown": "There are two files included in the `CSS` folder with .map file extensions. They are:\r\n\r\n    bootstrap-theme.css.map\r\n    bootstrap.css.map\r\n\r\nThey appear to be minified files but I don&#39;t know what they are for.", "last_edit_date": 1513458095, "up_vote_count": 355, "link": "https://stackoverflow.com/questions/21504611/what-are-the-map-files-used-for-in-bootstrap-3-x", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1391294703, "answer_id": 21504657, "path": "stack.gulp.answer", "score": 59, "up_vote_count": 61, "is_accepted": false, "last_activity_date": 1391294703, "body_markdown": "These are source maps.  Provide these alongside compressed source files; developer tools such as those in Firefox and Chrome will use them to allow debugging as if the code was not compressed."}, {"tags": [], "down_vote_count": 1, "creation_date": 1391295028, "answer_id": 21504707, "path": "stack.gulp.answer", "score": 360, "up_vote_count": 361, "is_accepted": true, "last_activity_date": 1391295028, "body_markdown": "From [Working with CSS preprocessors in Chrome DevTools](https://developers.google.com/chrome-developer-tools/docs/css-preprocessors):\r\n\r\n&gt; Many developers generate CSS style sheets using a CSS preprocessor, such as Sass, Less, or Stylus. Because the CSS files are generated, editing the CSS files directly is not as helpful.\r\n\r\n&gt; For preprocessors that support CSS source maps, DevTools lets you live-edit your preprocessor source files in the Sources panel, and view the results without having to leave DevTools or refresh the page. When you inspect an element whose styles are provided by a generated CSS file, the Elements panel displays a link to the original source file, not the generated .css file."}, {"tags": [], "down_vote_count": 0, "creation_date": 1404702983, "answer_id": 24602582, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1404702983, "body_markdown": "The bootstrap css can be generated by Less. The main purpose of map file is used to link the css source code to less source code in the chrome dev tool.\r\nAs we used to do .If we inspect the element in the chrome dev tool. you can see the source code of css.\r\nBut if include the map file in the page with bootstrap css file. you can see the less code which apply to the element style you want to inspect. "}, {"tags": [], "down_vote_count": 2, "creation_date": 1405724178, "answer_id": 24834942, "path": "stack.gulp.answer", "score": 141, "up_vote_count": 143, "is_accepted": false, "last_activity_date": 1405724178, "body_markdown": "If you just want to get rid of the error, you can also delete this line in `bootstrap.css`:\r\n\r\n    /*# sourceMappingURL=bootstrap.css.map */"}, {"tags": [], "down_vote_count": 0, "creation_date": 1477320153, "answer_id": 40221254, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1487340877, "last_edit_date": 1487340877, "body_markdown": "For anyone who came here looking for these files (Like me), you can usually find them by adding `.map` to the end of the URL:\r\n\r\nhttps://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css.map\r\n\r\n*Be sure to replace the version with whatever version of Bootstrap you&#39;re using.* "}, {"tags": [], "down_vote_count": 0, "creation_date": 1492616867, "answer_id": 43500451, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1492616867, "body_markdown": "&gt;Have you ever found yourself wishing you could keep your client-side code readable and more importantly debuggable even after you&#39;ve combined and minified it, without impacting performance? Well now you can through the magic of source maps.\r\n\r\n[This article](https://www.html5rocks.com/en/tutorials/developertools/sourcemaps/) explains Source Maps using a practical approach.\r\n\r\n"}], "title": "what are the .map files used for in Bootstrap 3.x?", "view_count": 202236, "answer_count": 6, "code_snippet": ["<code>CSS</code>", "<code>bootstrap-theme.css.map\nbootstrap.css.map\n</code>", "<code>bootstrap.css</code>", "<code>/*# sourceMappingURL=bootstrap.css.map */\n</code>", "<code>#</code>", "<code>bootstrap.css</code>", "<code>gulp --production</code>", "<code>.map</code>"], "path": "stack.gulp"}, {"tags": ["gruntjs", "npm", "gulp", "bower", "webpack"], "creation_date": 1453987719, "body_markdown": "I&#39;m trying to summarize my knowledge about the most popular JavaScript package managers, bundlers, and task runners. Please correct me if I&#39;m wrong:\r\n\r\n - `npm` &amp; `bower` are package managers. They just download the dependencies and don&#39;t know how to build projects on their own. What they know is to call `webpack`/`gulp`/`grunt` after fetching all the dependencies.\r\n - `bower` is like `npm`, but builds flattened dependencies trees (unlike `npm` which do it recursively). Meaning `npm` fetches the dependencies for each dependency (may fetch the same a few times), while `bower` expects you to manually include sub-dependencies. Sometimes `bower` and `npm` are used together for front-end and back-end respectively (since each megabyte might matter on front-end).\r\n - `grunt` and `gulp` are task runners to automate everything that can be automated (i.e. compile CSS/Sass, optimize images, make a bundle and minify/transpile it).\r\n - `grunt` vs. `gulp` (is like `maven` vs. `gradle` or configuration vs. code). Grunt is based on configuring separate independent tasks, each task opens/handles/closes file. Gulp requires less amount of code and is based on Node streams, which allows it to build pipe chains (w/o reopening the same file) and makes it faster. \r\n - `webpack` (`webpack-dev-server`) - for me it&#39;s a task runner with hot reloading of changes which allows you to forget about all JS/CSS watchers. \r\n - `npm`/`bower` + plugins may replace task runners. Their abilities often intersect so there are different implications if you need to use `gulp`/`grunt` over `npm` + plugins. But task runners are definitely better for complex tasks (e.g. &quot;on each build create bundle, transpile from ES6 to ES5, run it at all browsers emulators, make screenshots and deploy to dropbox through ftp&quot;).\r\n - `browserify` allows packaging node modules for browsers. `browserify` vs `node`&#39;s `require` is actually [AMD vs CommonJS][1].\r\n\r\n***Questions:***\r\n \r\n 1. *What is `webpack` &amp; `webpack-dev-server`?* Official documentation says it&#39;s a module bundler but for me it&#39;s just a task runner. *What&#39;s the difference?*\r\n 2. *Where would you use `browserify`? Can&#39;t we do the same with node/ES6 imports?* \r\n 3. *When would you use `gulp`/`grunt` over `npm` + plugins?*\r\n 4. *Please provide examples when you need to use a combination*\r\n\r\n\r\n  [1]: https://addyosmani.com/writing-modular-js/", "last_edit_date": 1488991619, "up_vote_count": 1343, "link": "https://stackoverflow.com/questions/35062852/npm-vs-bower-vs-browserify-vs-gulp-vs-grunt-vs-webpack", "_childDocuments_": [{"tags": [], "down_vote_count": 6, "creation_date": 1453991688, "answer_id": 35064297, "path": "stack.gulp.answer", "score": 711, "up_vote_count": 717, "is_accepted": true, "last_activity_date": 1511274278, "last_edit_date": 1511274278, "body_markdown": "Webpack and Browserify do pretty much the same job, which is bundling your modules to be used in a browser environment (though you can target other environments, like bundling your server-side ES6 code for Node). For example, the Node module is a feature, which doesn&#39;t exist in the browser, and ES 6 modules are not implemented in any browser yet, which is why things need to be bundled. However, they differ in many ways, Webpack offers many tools by default (e.g. code splitting), while Browserify can do this only after downloading plugins but using both leads to very similar results. It comes down to personal preference (I am used to Webpack). Webpack is not a task runner, it is just processor of your files (it processes them by so-called loaders) run directly from CLI or by a task runner.\r\n\r\n`webpack-dev-server` provides something like Browser-sync - a server, where you can deploy your app and verify your FE developing progress immediately by dev-server automatically refreshing the browser or even propagating changes without it with hot deploy (e.g. React components).\r\n\r\nI&#39;ve been using Gulp for its conciseness and easy task writing, but have later found out I need neither Gulp nor Grunt at all. Everything I have ever needed could have been done using npm scripts to run 3rd-party tools through their API. Choosing between Gulp, Grunt or npm scripts depends on your taste, JS experience, and experience of developers working with you.\r\n\r\nWhile tasks in Gulp (or Grunt maybe) are easy to read even for people not so familiar with JS, it is yet another tool to require and learn, and I personally prefer to narrow my dependencies and make things simple. On the other hand, replacing these tasks with the combination of npm scripts and run files (where configuration and execution function of tools like Webpack lies) is more challenging. But in the majority of cases, those three are equal in terms of results.\r\n\r\nAs for the examples, I suggest you have a look at this [React starter project][1], which shows you a nice combination of npm scripts, Webpack and Browser-sync. You can find those npm scripts in package.json in the root folder, in a property named `scripts`. There you will mostly encounter commands like `babel-node tools/run start`. Babel-node is a CLI tool (not meant for production use), which at first compiles ES6 file `tools/run` (run.js file located in [tools][2]) - basically a runner utility. This runner takes a function as an argument and runs it, which in this case is `start` - another utility (start.js) responsible for bundling source files (both client and server), starting the node-express server and subsequently Browser-sync, which serves as a proxy for propagating development changes to the browser.\r\n\r\nSpeaking more precisely, start.js imports Webpack config for the client manipulates it to add hot module replacement capabilities, then creates both client and server side bundles, starts node server through yet another utility named runServer.js and after successful start inits Browser-sync, which looks something like this.\r\n\r\n  \r\n\r\n    const bs = Browsersync.create();  \r\n    bs.init({\r\n          ...(DEBUG ? {} : { notify: false, ui: false }),\r\n    \r\n          proxy: {\r\n            target: host,\r\n            middleware: [wpMiddleware, ...hotMiddlewares],\r\n          },\r\n    \r\n          // no need to watch &#39;*.js&#39; here, webpack will take care of it for us,\r\n          // including full page reloads if HMR won&#39;t work\r\n          files: [&#39;build/content/**/*.*&#39;],\r\n    }, resolve)\r\n\r\nThe important part is `proxy.target`, where you set server address you want to proxy, which could be http://localhost:3000, and Browser-sync starts a server listening on http://localhost:3001, where the same app is deployed, but with hot module replacement, so you can experience propagation of source file changes to the browser immediately with or even without reloading. As you can see, there is another configuration property `files` with individual files or patterns Browser-sync watches for changes and reloads the browser if some occur, but as the comment says, Webpack takes care of watching js sources by itself with HMR, so they cooperate there.\r\n\r\nNow I don&#39;t have any equivalent example of such Grunt or Gulp configuration, but with Gulp (and somewhat similarly with Grunt) you would write individual tasks in gulpfile.js like\r\n\r\n    gulp.task(&#39;bundle&#39;, function() {\r\n      // bundling source files with some gulp plugins like gulp-webpack maybe\r\n    });\r\n    \r\n    gulp.task(&#39;start&#39;, function() {\r\n      // starting server and stuff\r\n    });\r\n\r\nwhere you would be doing essentially pretty much the same things as in the starter-kit, this time with task runner, which solves some problems for you, but presents its own issues and some difficulties during learning the usage, and as I say, the more dependencies you have, the more can go wrong. And that is the reason I like to get rid of such tools.\r\n\r\n\r\n  [1]: https://github.com/kriasoft/react-starter-kit\r\n  [2]: https://github.com/kriasoft/react-starter-kit/tree/master/tools"}, {"tags": [], "down_vote_count": 2, "creation_date": 1460649181, "answer_id": 36628118, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 39, "is_accepted": false, "last_activity_date": 1460649181, "body_markdown": "A small note about npm: npm3 tries install dependencies in a flat way\r\n\r\nhttps://docs.npmjs.com/how-npm-works/npm3#npm-v3-dependency-resolution\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1462093466, "answer_id": 36964916, "path": "stack.gulp.answer", "score": 39, "up_vote_count": 40, "is_accepted": false, "last_activity_date": 1462093466, "body_markdown": "You can find some technical comparison on [npmcompare][1]\r\n\r\n[Comparing browserify vs. grunt vs. gulp vs. webpack][2]\r\n\r\nAs you can see webpack is very well maintained with a new version coming out every 4 days on average.\r\nBut Gulp seems to have the biggest community of them all (with over 20K stars on Github)\r\nGrunt seems a bit neglected (compared to the others)\r\n\r\nSo if need to choose one over the other i would go with Gulp\r\n\r\n\r\n  [1]: https://npmcompare.com\r\n  [2]: https://npmcompare.com/compare/browserify,grunt,gulp,webpack"}, {"tags": [], "down_vote_count": 2, "creation_date": 1475475824, "answer_id": 39825582, "path": "stack.gulp.answer", "score": 500, "up_vote_count": 502, "is_accepted": false, "last_activity_date": 1513573316, "last_edit_date": 1513573316, "body_markdown": "I&#39;ve been also searching for this quite some time since there is a lot of tools out there and each of them benefits us in a different aspect. The community is divided across tools like `Browserify, Webpack, jspm, Grunt and Gulp`. You might also hear about `Yeoman or Slush`. That\u2019s not really a problem, it\u2019s just confusing for everyone trying to understand a clear path forward.\r\n\r\nAnyway, I would like to contribute something.\r\n\r\n**1. Package Manager** \r\n\r\nPackage managers simplify installing and updating project dependencies, which are libraries such as: `jQuery, Bootstrap`, etc - everything that is used on your site and isn&#39;t written by you.\r\n\r\nBrowsing all the library websites, downloading and unpacking the archives, copying files into the projects \u2014 all of this is replaced with a few commands in the terminal.\r\n\r\n- [`NPM`][1] stands for: `Node JS package manager` helps you to manage all the libraries your software relies on. You would define your needs in a file called `package.json` and run `npm install` in the command line... then BANG, your packages are downloaded and ready to use. Could be used both for `front-end and back-end` libraries.\r\n\r\n- [`Bower`][2]: for front-end package management, the concept is same with NPM. All your libraries are stored in a file named `bower.json` and then run `bower install` in the command line. \r\n\r\n&gt; The biggest difference between `Bower` and `NPM` is that NPM does nested\r\n&gt; dependency tree while Bower requires a flat dependency tree as below.\r\n&gt;\r\n Quoting from https://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm\r\n\r\n**[NPM][1]**\r\n\r\n    project root\r\n    [node_modules] // default directory for dependencies\r\n     -&gt; dependency A\r\n     -&gt; dependency B\r\n        [node_modules]\r\n        -&gt; dependency A\r\n    \r\n     -&gt; dependency C\r\n        [node_modules]\r\n        -&gt; dependency B\r\n          [node_modules]\r\n           -&gt; dependency A \r\n        -&gt; dependency D\r\n\r\n**[Bower][2]**\r\n\r\n    project root\r\n    [bower_components] // default directory for dependencies\r\n     -&gt; dependency A\r\n     -&gt; dependency B // needs A\r\n     -&gt; dependency C // needs B and D\r\n     -&gt; dependency D\r\n\r\n&gt; There are some updates on [`npm 3 Duplication and Deduplication`][3],\r\n&gt; please open the doc for more detail.\r\n\r\n- [`Yarn`][13]: A new package manager for `JavaScript` [published][4] by `Facebook` recently with some more advantages compared to `NPM`. And with Yarn, you still can use both [`NPM`][1]and [`Bower`][2] registry to fetch the package. If you&#39;ve installed a package before, `yarn` creates a cached copy which facilitates `offline package installs`.\r\n\r\n- [`jspm`][5]: is a package manager for the `SystemJS` universal module loader, built on top of the dynamic `ES6` module loader. It is not an entirely new package manager with its own set of rules, rather it works on top of existing package sources. Out of the box, it works with `GitHub` and `npm`. As most of the `Bower` based packages are based on `GitHub`, we can install the those packages using `jspm` as well. It has a registry that lists most of the commonly used front-end packages for easier installation.\r\n\r\n&gt; See the different between [`Bower`][2] and `jspm`:\r\n&gt; https://stackoverflow.com/questions/25416813/package-manager-bower-vs-jspm\r\n\r\n---\r\n\r\n**2. Module Loader/Bundling**\r\n\r\nMost projects of any scale will have their code split between a number of files. You can just include each file with an individual `&lt;script&gt;` tag, however, `&lt;script&gt;` establishes a new http connection, and for small files \u2013 which is a goal of modularity \u2013 the time to set up the connection can take significantly longer than transferring the data. While the scripts are downloading, no content can be changed on the page.\r\n\r\n- The problem of download time can largely be solved by concatenating a group of simple modules into a single file, and minifying it.\r\n\r\nE.g\r\n\r\n    &lt;head&gt;\r\n        &lt;title&gt;Wagon&lt;/title&gt;\r\n        &lt;script src=\u201cbuild/wagon-bundle.js\u201d&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n\r\n- The performance comes at the expense of the flexibility though. If your modules have inter-dependency, this lack of flexibility may be a showstopper.\r\n\r\nE.g\r\n\r\n    &lt;head&gt;\r\n    \t&lt;title&gt;Skateboard&lt;/title&gt;\r\n    \t&lt;script src=\u201cconnectors/axle.js\u201d&gt;&lt;/script&gt;\r\n    \t&lt;script src=\u201cframes/board.js\u201d&gt;&lt;/script&gt;\r\n    \t&lt;!-- skateboard-wheel and ball-bearing both depend on abstract-rolling-thing --&gt;\r\n    \t&lt;script src=\u201crolling-things/abstract-rolling-thing.js\u201d&gt;&lt;/script&gt;\r\n    \t&lt;script src=\u201crolling-things/wheels/skateboard-wheel.js\u201d&gt;&lt;/script&gt;\r\n    \t&lt;!-- but if skateboard-wheel also depends on ball-bearing --&gt;\r\n    \t&lt;!-- then having this script tag here could cause a problem --&gt;\r\n    \t&lt;script src=\u201crolling-things/ball-bearing.js\u201d&gt;&lt;/script&gt;\r\n    \t&lt;!-- connect wheels to axle and axle to frame --&gt;\r\n    \t&lt;script src=\u201cvehicles/skateboard/our-sk8bd-init.js\u201d&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n\r\nComputers can do that better than you can, and that is why you should use a tool to automatically bundle everything into a single file.\r\n\r\n**Then we heard about `RequireJS`, `Browserify`, `Webpack` and `SystemJS`**\r\n\r\n- [`RequireJS`][12]: is a `JavaScript` file and module loader. It is optimized for in-browser use, but it can be used in other JavaScript environments, like `Node`.\r\n\r\nE.g: **myModule.js**\r\n\r\n    // package/lib is a dependency we require\r\n    define([&quot;package/lib&quot;], function (lib) {\r\n    \r\n        // behavior for our module\r\n        function foo() {\r\n            lib.log( &quot;hello world!&quot; );\r\n        }\r\n    \r\n        // export (expose) foo to other modules as foobar\r\n        return {\r\n            foobar: foo\r\n        }\r\n    });\r\n\r\n\r\nIn `main.js`, we can import `myModule.js` as dependency and use it.\r\n\r\n    require([&quot;package/myModule&quot;], function(myModule) {\r\n        myModule.foobar();\r\n    });\r\n\r\nAnd then in our `HTML`, we can refer to use with `RequireJS`.\r\n\r\n    &lt;script src=\u201capp/require.js\u201d data-main=\u201cmain.js\u201d &gt;&lt;/script&gt;\r\n\r\n\r\n&gt; Read more about `CommonJS` and `AMD` to get understanding easily.\r\n&gt; https://stackoverflow.com/questions/16521471/relation-between-commonjs-amd-and-requirejs\r\n\r\n\r\n- [`Browserify`][7]: set out to allow use of `CommonJS` formatted modules in the browser. Consequently, `Browserify` isn\u2019t as much a module loader as a module bundler: `Browserify` is entirely a build-time tool, producing a bundle of code which can then be loaded client-side.\r\n\r\nStart with a build machine that has node &amp; npm installed, and get the package:\r\n\r\n    npm install -g \u2013save-dev browserify\r\n\r\nWrite your modules in `CommonJS` format\r\n\r\n    //entry-point.js\r\n    var foo = require(&#39;../foo.js&#39;);\r\n    console.log(foo(4));\r\n\r\nAnd when happy, issue the command to bundle:\r\n\r\n    browserify entry-point.js -o bundle-name.js\r\n\r\nBrowserify recursively finds all dependencies of entry-point and assembles them into a single file:\r\n\r\n    &lt;script src=\u201dbundle-name.js\u201d&gt;&lt;/script&gt;\r\n\r\n- [`Webpack`][6]: It bundles all of your static assets, including `JavaScript`, images, CSS and more, into a single file. It also enables you to process the files through different types of loaders. You could write your `JavaScript` with `CommonJS` or `AMD` modules syntax. It attacks the build problem in a fundamentally more integrated and opinionated manner. In `Browserify` you use `Gulp/Grunt` and a long list of transforms and plugins to get the job done. `Webpack` offers enough power out of the box that you typically don\u2019t need `Grunt` or `Gulp` at all.\r\n\r\nBasic usage is beyond simple. Install Webpack like Browserify:\r\n\r\n    npm install -g \u2013save-dev webpack\r\n\r\nAnd pass the command an entry point and an output file:\r\n\r\n    webpack ./entry-point.js bundle-name.js\r\n\r\n- [`SystemJS`][8]: is a module loader that **can import modules at run time in any of the popular formats** used today (`CommonJS, UMD, AMD, ES6`). It is built on top of the `ES6` module loader polyfill and is smart enough to detect the format being used and handle it appropriately. `SystemJS` can also transpile ES6 code (with `Babel` or `Traceur`) or other languages such as `TypeScript` and `CoffeeScript` using plugins. \r\n\r\n&gt; Want to know what is the `node module` and why it is not well adapted to in-browser.\r\n  \r\n&gt; More useful article: \r\n&gt;\r\n&gt; - https://medium.com/@housecor/browserify-vs-webpack-b3d7ca08a0a9#.c1q7ao3h4\r\n&gt; - http://jamesknelson.com/which-build-system-should-i-use-for-my-javascript-app/\r\n&gt; - https://appendto.com/2016/06/the-short-history-of-javascript-module-loaders/\r\n\r\n----\r\n\r\n&gt; Why `jspm` and `SystemJS`?\r\n&gt;\r\n&gt; One of the main goals of `ES6` modularity is to make it really simple\r\n&gt; to install and use any Javascript library from anywhere on the\r\n&gt; Internet (`Github`, `npm`, etc.). Only two things are needed:\r\n&gt; \r\n&gt; - A single command to install the library\r\n&gt; - One single line of code to import the library and use it\r\n&gt; \r\n&gt; So with `jspm`, you can do it.\r\n&gt; \r\n&gt; 1. Install the library with a command: `jspm install jquery`\r\n&gt; 2. Import the library with a single line of code, no need to external reference inside you HTML file. \r\n&gt; \r\n&gt; **display.js**\r\n&gt; \r\n&gt;     var $ = require(&#39;jquery&#39;); \r\n&gt;     \r\n&gt;     $(&#39;body&#39;).append(&quot;I&#39;ve imported jQuery!&quot;);\r\n&gt; \r\n&gt; 3. Then you configure these things within `System.config({ ... })` before\r\n&gt; importing your module. Normally when run `jspm init`, there will be a file \r\n&gt; named `config.js` for this purpose.\r\n&gt; \r\n&gt; 4. To make these scripts run, we need to load `system.js` and `config.js` on the HTML page. After that we will load the `display.js` file using\r\n&gt; the `SystemJS` module loader. \r\n&gt; \r\n&gt; **index.html**\r\n&gt;\r\n&gt;     &lt;script src=&quot;jspm_packages/system.js&quot;&gt;&lt;/script&gt;\r\n&gt;     &lt;script src=&quot;config.js&quot;&gt;&lt;/script&gt;\r\n&gt;     &lt;script&gt;\r\n&gt;       System.import(&quot;scripts/display.js&quot;);\r\n&gt;     &lt;/script&gt;\r\n&gt; \r\n&gt; Noted: You can also use `npm` with `Webpack` as Angular 2 has applied it. Since `jspm` was developed to integrate with `SystemJS` and it works on top of existing `npm` source, so your answer is up to you.\r\n\r\n---\r\n\r\n**3. Task runner**\r\n\r\nTask runners and build tools are primarily command-line tools. Why we need to use them: In one word: **automation**. The less work you have to do when performing repetitive tasks like **minification, compilation, unit testing, linting** which previously cost us a lot of times to do with command line or even manually.\r\n\r\n- [`Grunt`][9]: You can create automation for your development environment to pre-process codes or create build scripts with a config file and it seems very difficult to handle a complex task. Popular in last few years. \r\n\r\nEvery task in `Grunt` is an array of different plugin configurations, that simply get executed one after another, in a strictly independent, and sequential fashion.\r\n\r\n    grunt.initConfig({\r\n      clean: {\r\n        src: [&#39;build/app.js&#39;, &#39;build/vendor.js&#39;]\r\n      },\r\n      \r\n      copy: {\r\n        files: [{\r\n          src: &#39;build/app.js&#39;,\r\n          dest: &#39;build/dist/app.js&#39;\r\n        }]\r\n      }\r\n      \r\n      concat: {\r\n        &#39;build/app.js&#39;: [&#39;build/vendors.js&#39;, &#39;build/app.js&#39;]\r\n      }\r\n      \r\n      // ... other task configurations ...\r\n      \r\n    });\r\n    \r\n    grunt.registerTask(&#39;build&#39;, [&#39;clean&#39;, &#39;bower&#39;, &#39;browserify&#39;, &#39;concat&#39;, &#39;copy&#39;]);\r\n\r\n\r\n- [`Gulp`][10]: Automation just like `Grunt` but instead of configurations, you can write `JavaScript` with streams like it&#39;s a node application. Prefer these days.\r\n\r\nThis is a `Gulp` sample task declaration.\r\n\r\n    //import the necessary gulp plugins\r\n    var gulp = require(&#39;gulp&#39;);\r\n    var sass = require(&#39;gulp-sass&#39;);\r\n    var minifyCss = require(&#39;gulp-minify-css&#39;);\r\n    var rename = require(&#39;gulp-rename&#39;);\r\n    \r\n    //declare the task\r\n    gulp.task(&#39;sass&#39;, function(done) {\r\n      gulp.src(&#39;./scss/ionic.app.scss&#39;)\r\n        .pipe(sass())\r\n        .pipe(gulp.dest(&#39;./www/css/&#39;))\r\n        .pipe(minifyCss({\r\n          keepSpecialComments: 0\r\n        }))\r\n        .pipe(rename({ extname: &#39;.min.css&#39; }))\r\n        .pipe(gulp.dest(&#39;./www/css/&#39;))\r\n        .on(&#39;end&#39;, done);\r\n    });\r\n\r\n&gt; \r\n&gt; See more: https://medium.com/@preslavrachev/gulp-vs-grunt-why-one-why-the-other-f5d3b398edc4#.fte0nahri\r\n\r\n---\r\n\r\n**4. Scaffolding tools**\r\n\r\n- `Slush and Yeoman`: You can create starter projects with them. For example, you are planning to build a prototype with HTML and SCSS, then instead of manually create some folder like scss, css, img, fonts. You can just install `yeoman` and run a simple script. Then everything here for you. \r\n\r\nFind more [here][11]. \r\n\r\n\r\n    npm install -g yo\r\n    npm install --global generator-h5bp\r\n    yo h5bp\r\n\r\n\r\n&gt; See more: https://www.quora.com/What-are-the-differences-between-NPM-Bower-Grunt-Gulp-Webpack-Browserify-Slush-Yeoman-and-Express\r\n\r\n---\r\nMy answer is not really matched with the content of the question but when I&#39;m searching for these knowledge on Google, I always see the question on top so that I decided to answer it in summary as well as why we need to use those tool. \r\n\r\nRecently I found a really comprehensive guide from Grab team about how to approach front-end development in 2017. You can check it out as below.\r\n\r\nhttps://github.com/grab/front-end-guide\r\n\r\n\r\n  [1]: https://www.npmjs.com/\r\n  [2]: https://bower.io/\r\n  [3]: https://docs.npmjs.com/how-npm-works/npm3-dupe\r\n  [4]: https://code.facebook.com/posts/1840075619545360\r\n  [5]: http://jspm.io/\r\n  [6]: https://webpack.github.io/\r\n  [7]: http://browserify.org/\r\n  [8]: https://github.com/systemjs/systemjs\r\n  [9]: http://gruntjs.com/\r\n  [10]: http://gulpjs.com/\r\n  [11]: http://yeoman.io/\r\n  [12]: http://requirejs.org/\r\n  [13]: https://yarnpkg.com/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1476460724, "answer_id": 40047448, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1476713923, "last_edit_date": 1476713923, "body_markdown": "Yarn is a recent package manager that probably deserves to be mentioned. So, there : https://yarnpkg.com/\r\n\r\nAfaik, it can fetch both npm and bower dependencies and has other appreciated features."}, {"tags": [], "down_vote_count": 0, "creation_date": 1479777809, "answer_id": 40732339, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1489763685, "last_edit_date": 1489763685, "body_markdown": "&gt;What is webpack &amp; webpack-dev-server? Official documentation says it&#39;s a module bundler but for me it&#39;s just a task runner. What&#39;s the difference?\r\n\r\n[webpack-dev-server][1] is a live reloading web server that *Webpack* developers use to get immediate feedback what they do. It should only be used during development.\r\n\r\nThis project is heavily inspired by the [nof5][] unit test tool. \r\n\r\n*Webpack* as the name implies will create a *SINGLE* **pack**age for the **web**. The package will be minimized, and combined into a single file (we still live in HTTP 1.1 age). *Webpack* does the magic of combining the resources (JavaScript, CSS, images) and injecting them like this: `&lt;script src=&quot;assets/bundle.js&quot;&gt;&lt;/script&gt;`.\r\n\r\nIt can also be called *module bundler* because it must understand module dependencies, and how to grab the dependencies and to bundle them together.\r\n\r\n&gt;Where would you use browserify? Can&#39;t we do the same with node/ES6 imports?\r\n\r\nYou could use *Browserify* on the exact same tasks where you would use *Webpack*. \u2013 *Webpack* is more compact, though.\r\n\r\nNote that the [ES6 module loader features][3] in *Webpack2* are using *System.import*, which not a single browser supports natively.\r\n \r\n&gt;When would you use gulp/grunt over npm + plugins?\r\n\r\nYou can [forget][5] *Gulp, Grunt, Brokoli, Brunch and Bower*. Directly use npm command line scripts instead and you can eliminate extra packages like these here for *Gulp*:\r\n\r\n    var gulp        = require(&#39;gulp&#39;),\r\n      minifyCSS     = require(&#39;gulp-minify-css&#39;),\r\n      sass          = require(&#39;gulp-sass&#39;),\r\n      browserify    = require(&#39;gulp-browserify&#39;),\r\n      uglify        = require(&#39;gulp-uglify&#39;),\r\n      rename        = require(&#39;gulp-rename&#39;),\r\n      jshint        = require(&#39;gulp-jshint&#39;),\r\n      jshintStyle   = require(&#39;jshint-stylish&#39;),\r\n      replace       = require(&#39;gulp-replace&#39;),\r\n      notify        = require(&#39;gulp-notify&#39;),\r\n\r\nYou can probably use *Gulp* and *Grunt* config file generators when creating config files for your project. This way you don&#39;t need to install *Yeoman* or similar tools.\r\n\r\n\r\n  [1]: https://github.com/webpack/webpack-dev-server\r\n  [3]: https://gist.github.com/sokra/27b24881210b56bbaff7\r\n  [5]: https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/\r\n  [nof5]: https://github.com/peerigon/nof5\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1495338226, "answer_id": 44092960, "path": "stack.gulp.answer", "score": 31, "up_vote_count": 32, "is_accepted": false, "last_activity_date": 1518739871, "last_edit_date": 1518739871, "body_markdown": "**OK,** they all have got some similarities, they do the same things for you in different and similar ways, I divide them in **3 main groups** as below:\r\n&lt;hr&gt;\r\n**1) Module bundlers** \r\n\r\nwebpack and browserify as popular ones, work like task runners but with more flexibility, aslo it will bundle everything together as your setting, so you can point to the result as bundle.js for example in one single file including the CSS and Javascript, for more details of each, look at the details below:\r\n\r\n **webpack**\r\n\r\n&gt; webpack is a module bundler for modern JavaScript applications. When\r\n&gt; webpack processes your application, it recursively builds a dependency\r\n&gt; graph that includes every module your application needs, then packages\r\n&gt; all of those modules into a small number of bundles - often only one -\r\n&gt; to be loaded by the browser.\r\n&gt; \r\n&gt; It is incredibly configurable, but to get started you only need to\r\n&gt; understand Four Core Concepts: entry, output, loaders, and plugins.\r\n&gt; \r\n&gt; This document is intended to give a high-level overview of these\r\n&gt; concepts, while providing links to detailed concept specific\r\n&gt; use-cases.\r\n\r\n more [here][1]\r\n\r\n**browserify**\r\n\r\n&gt; Browserify is a development tool that allows us to write node.js-style\r\n&gt; modules that compile for use in the browser. Just like node, we write\r\n&gt; our modules in separate files, exporting external methods and\r\n&gt; properties using the module.exports and exports variables. We can even\r\n&gt; require other modules using the require function, and if we omit the\r\n&gt; relative path it\u2019ll resolve to the module in the node_modules\r\n&gt; directory.\r\n\r\n more [here][2]\r\n\r\n&lt;hr&gt;\r\n\r\n**2) Task runners** \r\n\r\ngulp and grunt are task runners, basically what they do, creating tasks and run them whenever you want, for example you install a plugin to minify your CSS and then run it each time to do minifying, more details about each: \r\n\r\n**gulp**\r\n\r\n&gt; gulp.js is an open-source JavaScript toolkit by Fractal Innovations\r\n&gt; and the open source community at GitHub, used as a streaming build\r\n&gt; system in front-end web development. It is a task runner built on\r\n&gt; Node.js and Node Package Manager (npm), used for automation of\r\n&gt; time-consuming and repetitive tasks involved in web development like\r\n&gt; minification, concatenation, cache busting, unit testing, linting,\r\n&gt; optimization etc. gulp uses a code-over-configuration approach to\r\n&gt; define its tasks and relies on its small, single-purposed plugins to\r\n&gt; carry them out. gulp ecosystem has 1000+ such plugins made available\r\n&gt; to choose from.\r\n\r\n more [here][3]\r\n\r\n**grunt**\r\n\r\n&gt; Grunt is a JavaScript task runner, a tool used to automatically\r\n&gt; perform frequently used tasks such as minification, compilation, unit\r\n&gt; testing, linting, etc. It uses a command-line interface to run custom\r\n&gt; tasks defined in a file (known as a Gruntfile). Grunt was created by\r\n&gt; Ben Alman and is written in Node.js. It is distributed via npm.\r\n&gt; Presently, there are more than five thousand plugins available in the\r\n&gt; Grunt ecosystem.\r\n\r\n more [here][4]\r\n\r\n\r\n&lt;hr&gt;\r\n\r\n**3) Package managers** \r\n\r\npackage managers, what they do is managing plugins you need in your application and install them for you through github etc using package.json, very handy to update you modules, install them and sharing your app across, more details for each:\r\n\r\n**npm**\r\n\r\n&gt; npm is a package manager for the JavaScript programming language. It\r\n&gt; is the default package manager for the JavaScript runtime environment\r\n&gt; Node.js. It consists of a command line client, also called npm, and an\r\n&gt; online database of public packages, called the npm registry. The\r\n&gt; registry is accessed via the client, and the available packages can be\r\n&gt; browsed and searched via the npm website.\r\n\r\n more [here][5]\r\n\r\n**bower**\r\n\r\n&gt; Bower can manage components that contain HTML, CSS, JavaScript, fonts\r\n&gt; or even image files. Bower doesn\u2019t concatenate or minify code or do\r\n&gt; anything else - it just installs the right versions of the packages\r\n&gt; you need and their dependencies.\r\n&gt; To get started, Bower works by fetching and installing packages from\r\n&gt; all over, taking care of hunting, finding, downloading, and saving the\r\n&gt; stuff you\u2019re looking for. Bower keeps track of these packages in a\r\n&gt; manifest file, bower.json.\r\n\r\n more [here][6]\r\n\r\n\r\nand the most recent package manager that shouldn&#39;t be missed, it&#39;s young and fast in real work environment compare to npm which I was mostly using before, for reinstalling modules, it do double checks the node_modules folder to check the existence of the module, also seems installing the modules takes less time:\r\n\r\n**yarn**\r\n\r\n&gt; Yarn is a package manager for your code. It allows you to use and\r\n&gt; share code with other developers from around the world. Yarn does this\r\n&gt; quickly, securely, and reliably so you don\u2019t ever have to worry.\r\n&gt; \r\n&gt; Yarn allows you to use other developers\u2019 solutions to different\r\n&gt; problems, making it easier for you to develop your software. If you\r\n&gt; have problems, you can report issues or contribute back, and when the\r\n&gt; problem is fixed, you can use Yarn to keep it all up to date.\r\n&gt; \r\n&gt; Code is shared through something called a package (sometimes referred\r\n&gt; to as a module). A package contains all the code being shared as well\r\n&gt; as a package.json file which describes the package.\r\n\r\nmore [here][7]\r\n\r\n&lt;hr&gt;\r\n\r\n\r\n  [1]: https://webpack.js.org/concepts/\r\n  [2]: http://blakeembrey.com/articles/2013/09/introduction-to-browserify/\r\n  [3]: https://en.wikipedia.org/wiki/Gulp.js\r\n  [4]: https://en.wikipedia.org/wiki/Grunt_(software)\r\n  [5]: https://www.npmjs.com/\r\n  [6]: https://bower.io/\r\n  [7]: https://yarnpkg.com/lang/en/docs/getting-started/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1496154683, "answer_id": 44265109, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1496154683, "body_markdown": "StackShare provides a side-by-side (or **stack up**) of three tools at one time. \r\n\r\nHere it is for [npm vs. Bower vs. Browserify][1] and for [gulp vs. Webpack vs. Grunt][2]\r\n\r\nOn these comparison pages you can find the following:\r\n\r\n - number of votes each has received from the StackShare community\r\n - which companies use them in their tech stack\r\n - interest level for each over time\r\n - pros for each tool\r\n\r\n  [1]: https://stackshare.io/stackups/bower-vs-browserify-vs-npm\r\n  [2]: https://stackshare.io/stackups/grunt-vs-gulp-vs-webpack"}, {"tags": [], "down_vote_count": 0, "creation_date": 1502703783, "answer_id": 45671697, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1502703783, "body_markdown": "`Webpack` is a bundler. Like `Browserfy` it looks in the codebase for module requests (`require` or `import`) and resolves them recursively. What is more, you can configure `Webpack` to resolve not just JavaScript-like modules, but CSS, images, HTML, literally everything. What especially makes me excited about `Webpack`, you can combine both compiled and dynamically loaded modules in the same app. Thus one get a real performance boost, especially over HTTP/1.x. How exactly you you do it I described with examples here http://dsheiko.com/weblog/state-of-javascript-modules-2017/\r\nAs an alternative for bundler one can think of `Rollup.js` (https://rollupjs.org/), which optimizes the code during compilation, but stripping all the found unused chunks. \r\n\r\nFor `AMD`, instead of `RequireJS` one can go with native `ES2016 module system`, but loaded with `System.js` (https://github.com/systemjs/systemjs)\r\n\r\nBesides, I would point that `npm` is often used as an automating tool like `grunt` or `gulp`. Check out https://docs.npmjs.com/misc/scripts. I personally  go now with npm scripts only avoiding other automation tools, though in past I was very much into `grunt`. With other tools you have to rely on countless plugins for packages, that often are not good written and not being actively maintained. `npm` knows its packages, so you call to any of locally installed packages by name like:\r\n\r\n    {\r\n      &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;npm http-server&quot;\r\n      },\r\n      &quot;devDependencies&quot;: {\r\n        &quot;http-server&quot;: &quot;^0.10.0&quot;\r\n      }\r\n    }\r\n\r\nActually you as a rule do not need any plugin if the package supports CLI. "}], "title": "NPM vs. Bower vs. Browserify vs. Gulp vs. Grunt vs. Webpack", "view_count": 207665, "answer_count": 9, "code_snippet": ["<code>npm</code>", "<code>bower</code>", "<code>webpack</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>bower</code>", "<code>npm</code>", "<code>npm</code>", "<code>npm</code>", "<code>bower</code>", "<code>bower</code>", "<code>npm</code>", "<code>grunt</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>gulp</code>", "<code>maven</code>", "<code>gradle</code>", "<code>webpack</code>", "<code>webpack-dev-server</code>", "<code>npm</code>", "<code>bower</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>npm</code>", "<code>browserify</code>", "<code>browserify</code>", "<code>node</code>", "<code>require</code>", "<code>webpack</code>", "<code>webpack-dev-server</code>", "<code>browserify</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>npm</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "ubuntu", "gruntjs"], "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1413076930, "answer_id": 26320915, "path": "stack.gulp.answer", "score": 702, "up_vote_count": 703, "is_accepted": true, "last_activity_date": 1413076930, "last_edit_date": 1495540056, "body_markdown": "Found the answer. Just in case it helps someone, I do post it here:\r\n\r\nDoing a symlink solves the issue: `ln -s /usr/bin/nodejs /usr/bin/node`\r\n(My thanks and +1 vote to [bodokaiser][1]).\r\n\r\nNOTE: I think this post is not an exact duplicate, because that post was somewhat a  browserify question.\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/20886217/browserify-error-usr-bin-env-node-no-such-file-or-directory"}, {"tags": [], "down_vote_count": 3, "creation_date": 1413077037, "answer_id": 26320925, "path": "stack.gulp.answer", "score": 39, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1413077189, "last_edit_date": 1413077189, "body_markdown": "I think you should upgrade lastest node version\r\n\r\n    sudo npm cache clean -f\r\n    sudo npm install -g n\r\n    sudo n stable"}, {"tags": [], "down_vote_count": 0, "creation_date": 1418276383, "answer_id": 27416100, "path": "stack.gulp.answer", "score": 88, "up_vote_count": 88, "is_accepted": false, "last_activity_date": 1418276383, "body_markdown": "The issue is not with the version of node. Instead its the way NodeJS is installed by default in Ubuntu. When running a node application in ubuntu you have to run &#39;nodejs somethign.js&#39; instead of &#39;node something.js&#39;\r\n\r\nSo the application name called in the terminal is nodejs and not node. This is why it there is a need of a symlink to simply forward all the commands received as node to nodejs.\r\n\r\n    ln -s /usr/bin/nodejs /usr/bin/node"}, {"tags": [], "down_vote_count": 1, "creation_date": 1455311626, "answer_id": 35372283, "path": "stack.gulp.answer", "score": 27, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1486663827, "last_edit_date": 1486663827, "body_markdown": "if you are able to access node on ubuntu terminal using nodejs command,then this problem can be simply solved using\r\n-creating a symbolic link of nodejs and node using\r\n\r\n`ln -s /usr/bin/nodejs /usr/bin/node`\r\n\r\nand this may solve the problem"}, {"tags": [], "down_vote_count": 1, "creation_date": 1459071882, "answer_id": 36245941, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1487282438, "last_edit_date": 1487282438, "body_markdown": "In my case installing nodejs-legacy solved the issue.\r\nHope that it helps.\r\n\r\n```sudo apt-get install nodejs-legacy\r\n```"}, {"tags": [], "down_vote_count": 2, "creation_date": 1469786058, "answer_id": 38655797, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1469786058, "body_markdown": "I&#39;ve found this is often a misnaming error, if you install from a package manager you bin may be called nodejs so you just need to symlink it like so \r\n\r\n    ln -s /usr/bin/nodejs /usr/bin/node"}, {"tags": [], "down_vote_count": 0, "creation_date": 1470198904, "answer_id": 38734497, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1470198904, "body_markdown": "If you already have nodejs installed (check with `which nodejs`) and don&#39;t want to install another package, you can, as root:\r\n\r\n    update-alternatives --install /usr/bin/node node /usr/bin/nodejs 99"}, {"tags": [], "down_vote_count": 0, "creation_date": 1477666010, "answer_id": 40307629, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1477666010, "body_markdown": "While `ln -s` is the obvious easiest fix, a piece of explanation:\r\n\r\n&gt; Because of a conflict with another package, the executable from the\r\n&gt; Ubuntu repositories is called nodejs instead of node. Keep this in\r\n&gt; mind as you are running software.\r\n\r\nThis advice comes up, when installing `sudo apt-get install nodejs`.\r\n\r\nSo some other known tool (I don&#39;t know what it does. While being known to ubuntu repositories, it is not installed by default in 16.04) occupies that namespace.\r\n\r\nWould have been nice, if Ubuntu had offered an advice how to fix this &#39;cleanly&#39;, if not by doing by hand what otherwise the package would do. (a collision remains a collision... if+when it would occur)\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1490354556, "answer_id": 42998248, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1490354556, "body_markdown": "    sudo PATH=&quot;$PATH:/usr/local/bin&quot; npm install -g &lt;package-name&gt;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1493542500, "answer_id": 43704629, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1509029692, "last_edit_date": 1509029692, "body_markdown": "When I was using gulp i got this error.\r\n\r\n    ~$ gulp\r\n\r\n/usr/bin/env: \u2018node\u2019: No such file or directory\r\n\r\nThis was removed by executing following command you have to keep in mind that /usr/bin directory has all permissions.\r\n\r\n    ~$ ln -s /usr/bin/nodejs /usr/bin/node\r\n\r\nthis works for me..\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1496831235, "answer_id": 44410063, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1496831235, "body_markdown": "Just do\r\n\r\n    $ sudo apt-get install nodejs-legacy\r\n\r\nAnd it will start working."}, {"tags": [], "down_vote_count": 0, "creation_date": 1512730816, "answer_id": 47712996, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1512730816, "body_markdown": "For my case link **did** **NOT** **work** as follow\r\n\r\n&gt; ln -s /usr/bin/nodejs /usr/bin/node\r\n\r\nBut you can open /usr/local/bin/lessc as root, and change the first line from node to nodejs.\r\n\r\n&gt; -#!/usr/bin/env node\r\n\r\n&gt; +#!/usr/bin/env nodejs\r\n\r\n"}], "creation_date": 1413076664, "body_markdown": "I&#39;m trying to install nodeJs into my Ubuntu 14.04 in order to use GruntJs.\r\n\r\nI&#39;ve read about [Ubuntu different way][1] of doing it ([issues?][2]), so this is what I&#39;ve done in order to install it:\r\n\r\n    sudo apt-get install npm\r\n\r\n    sudo npm install -g grunt-cli\r\n\r\nTyping grunt after that I&#39;ve got the error:\r\n\r\n    /usr/bin/env: node: No such file or directory\r\n\r\nSo, I&#39;ve tried:\r\n\r\n    curl -sL https://deb.nodesource.com/setup | sudo bash -\r\n\r\n    sudo apt-get install -y nodejs\r\n\r\n    sudo apt-get update\r\n\r\nAnd trying again, and still getting the error, I&#39;ve tried:\r\n\r\n    sudo add-apt-repository https://launchpad.net/~chris-lea/+archive/node.js/\r\n\r\n    sudo apt-get install -y nodejs\r\n\r\nI&#39;ve got this message:\r\n\r\n    nodejs is already the newest version.\r\n    0 to upgrade, 0 to newly install, 0 to remove and 3 not to upgrade.\r\n\r\nI did try a cleanup just in case:\r\n\r\n    sudo apt-get autoremove\r\n\r\nBut nope, the error is still there: when I type grunt I still get `/usr/bin/env: node: No such file or directory`\r\n\r\nWhat should I do?\r\n\r\n\r\n\r\n\r\n\r\n  [1]: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#debian-and-ubuntu-based-linux-distributions\r\n  [2]: https://github.com/atom/atom/issues/2241\r\n", "title": "Cannot install NodeJs: /usr/bin/env: node: No such file or directory", "view_count": 153071, "up_vote_count": 251, "answer_count": 12, "link": "https://stackoverflow.com/questions/26320901/cannot-install-nodejs-usr-bin-env-node-no-such-file-or-directory", "code_snippet": ["<code>sudo apt-get install npm\n\nsudo npm install -g grunt-cli\n</code>", "<code>/usr/bin/env: node: No such file or directory\n</code>", "<code>curl -sL https://deb.nodesource.com/setup | sudo bash -\n\nsudo apt-get install -y nodejs\n\nsudo apt-get update\n</code>", "<code>sudo add-apt-repository https://launchpad.net/~chris-lea/+archive/node.js/\n\nsudo apt-get install -y nodejs\n</code>", "<code>nodejs is already the newest version.\n0 to upgrade, 0 to newly install, 0 to remove and 3 not to upgrade.\n</code>", "<code>sudo apt-get autoremove\n</code>", "<code>/usr/bin/env: node: No such file or directory</code>", "<code>ln -s /usr/bin/nodejs /usr/bin/node</code>", "<code>sudo apt-get install nodejs-legacy</code>", "<code>ln -s /usr/bin/nodejs /usr/bin/node\n</code>", "<code>sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable\n</code>", "<code>n</code>", "<code>n</code>", "<code>ln -s /usr/bin/nodejs /usr/bin/node</code>", "<code>sudo apt-get install nodejs-legacy\n</code>", "<code>$ sudo apt-get install nodejs-legacy\n</code>", "<code>ln -s /usr/bin/nodejs /usr/bin/node\n</code>", "<code>which nodejs</code>", "<code>update-alternatives --install /usr/bin/node node /usr/bin/nodejs 99\n</code>", "<code>~$ gulp\n</code>", "<code>~$ ln -s /usr/bin/nodejs /usr/bin/node\n</code>", "<code>ln -s</code>", "<code>sudo apt-get install nodejs</code>", "<code>sudo PATH=\"$PATH:/usr/local/bin\" npm install -g &lt;package-name&gt;\n</code>"], "path": "stack.gulp"}, {"tags": ["facebook", "facebook-graph-api", "opengraph", "facebook-opengraph", "open-graph-protocol"], "creation_date": 1326479174, "body_markdown": "First -- I **do not** believe this is a duplicate issue. I&#39;ve searched for same or similar problems on SO extensively, and due to the nature of troubleshooting before asking, I believe this problem is unique. \r\n\r\nFacebook cannot grasp my `og:image` files and I have tried every usual solution. I&#39;m beginning to think it might have something to do with `https://...`\r\n\r\n - I have checked http://developers.facebook.com/tools/debug and have zero warnings or errors.\r\n - It is finding the images we linked to in the &quot;`og:image`&quot;, but they&#39;re showing up blank. When we click the image(s), however, they DO exist and it takes is straight to them.\r\n - It DOES show one image -- an image hosted on a non-https server.\r\n - We&#39;ve tried square images, jpegs, pngs, larger sizes and smaller sizes. We&#39;ve put the images right in public_html. Zero are showing up.\r\n - It&#39;s not a caching error, because when we add another `og:image` to the meta, FB&#39;s linter does find and read that. It DOES show a preview. The preview is blank. The **only** exception we&#39;re getting is for images that are not on this website.\r\n - We thought maybe there was some anti-leach on `cpanel` or the `.htaccess` that was preventing the images from showing up, so we checked. There was not. We even did a quick `&lt; img src=&quot;[remote file]&quot; &gt;` on an entirely different server and the image shows up fine. \r\n - We thought maybe it was the `og:type` or another oddity with another meta tag. We removed all of them, one at a time and checked it. No change. Just warnings. \r\n - The same code on a different website shows up without any issue. \r\n - We thought *maybe* it was not pulling images because we&#39;re using the same product page(s) for multiple products (changing it based on the get value, ie, &quot;details.php?id=xxx&quot;) but it&#39;s still pulling in one image (from a different url).\r\n - Leaving any `og:image` or image_src off, FB does not find any images.\r\n\r\nI am at the end of my rope. If I said how much time myself and others have spent on this, you&#39;d be shocked. The issue is that this is an online store. We absolutely, positively cannot NOT have images. We have to. We have ten or so other sites... This is the only one with `og:image` problems. It&#39;s also the only one on `https`, so we thought maybe that was the problem. But we can&#39;t find any precedent anywhere on the web for that. \r\n\r\nThese are the meta-tags:\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;meta property=&quot;og:title&quot; content=&quot;[The product name]&quot; /&gt; \r\n    &lt;meta property=&quot;og:description&quot; content=&quot;[the product description]&quot; /&gt; \r\n    &lt;meta property=&quot;og:image&quot; content=&quot;https://www.[ourwebsite].com/images/shirts/overdriven-blues-music-tshirt-details-black.png&quot; /&gt;\r\n    &lt;meta property=&quot;og:image&quot; content=&quot;https://www.[ourwebsite].com/images/shirts/overdriven-blues-music-tshirt-art-black.png&quot; /&gt;\r\n    &lt;meta property=&quot;og:image&quot; content=&quot;http://www.[ADIFFERENTwebsite].com/wp-content/uploads/2011/06/ARS-Header-Shine2.png&quot; /&gt;\r\n    &lt;meta property=&quot;og:image&quot; content=&quot;https://www.[ourwebsite].com/images/ARShopHeader.png&quot; /&gt;\r\n    &lt;meta property=&quot;og:image&quot; content=&quot;http://www.[ourwebsite].com/overdriven-blues-music-tshirt-art-black.JPG&quot; /&gt;\r\n    &lt;meta property=&quot;og:type&quot; content=&quot;product&quot;/&gt;\r\n    &lt;meta property=&quot;og:url&quot; content=&quot;https://www.[ourwebsite].com/apparel-details.php?i=10047&quot; /&gt;\r\n    &lt;meta property=&quot;og:site_name&quot; content=&quot;[our site name]&quot; /&gt;\t\t\r\n    &lt;meta property=&quot;fb:admins&quot; content=&quot;[FB-USER-ID-NUMBER]&quot;/&gt;\r\n    &lt;meta name=&quot;title&quot; content=&quot;[The product name]&quot; /&gt;\r\n    &lt;meta name=&quot;description&quot; content=&quot;[The product description]&quot; /&gt;\r\n    &lt;link rel=&quot;image_src&quot; href=&quot;https://www.[ourwebsite].com/images/shirts/overdriven-blues-music-tshirt-details-black.png&quot; /&gt;\r\n    &lt;meta name=&quot;keywords&quot; content=&quot;[four typical keywords]&quot;&gt;\r\n    &lt;meta name=&quot;robots&quot; content=&quot;noarchive&quot;&gt;\r\n\r\n\r\nIn case you want it, here&#39;s a link to one of our product pages that we&#39;ve been working on. [Link shortened to try to curb this getting into search results for our site]: http://rockn.ro/114\r\n\r\nEDIT ---- \r\n\r\nUsing the &quot;see what facebook sees&quot; scraper tool, we were able to see the following: \r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    &quot;image&quot;: [          \r\n          {\r\n             &quot;url&quot;: &quot;https://www.[httpSwebsite].com/images/shirts/soul-man-soul-music-tshirt-details-safari.png&quot;\r\n          },\r\n          {\r\n             &quot;url&quot;: &quot;https://www.[httpSwebsite].com/images/shirts/soul-man-soul-music-tshirt-art-safari.png&quot;\r\n          },\r\n          {\r\n             &quot;url&quot;: &quot;http://www.[theotherNONSECUREwebsite].com/wp-content/uploads/2011/06/ARS-Header-Shine2.png&quot;\r\n          }\r\n       ],\r\n\r\nWe tested all links it found for a single page. All were perfectly valid images. \r\n\r\nEDIT 2 ----\r\n\r\nWe tried a test and added a *subdomain* to the NONSECURE website (from which images are actually visible through facebook). Subdomain was http://img.[nonsecuresite].com. We then put all images into the main subdomain folder and referenced those. It would not pull those images into FB. However, it would still pull any images that were referenced on the nonsecure main domain. \r\n\r\nPOSTED WORKAROUND ----\r\n\r\nThanks to Keegan, we now know that this is a bug in Facebook. To workaround, we placed a subdomain in a different NON-HTTPS website and dumped all images in it. We referenced the coordinating `http://img.otherdomain.com/[like-image.jpg]` image in `og:image` on each product page. We then had to go through FB Linter and run EVERY link to refresh the OG data. This worked, but the solution is a band-aid workaround, and if the `https` issue is fixed and we go back to using the natural https domain, FB will have cached the images from a different website, complicating matters. Hopefully this information helps to save someone else from losing 32 coding hours of *their* life. ", "last_edit_date": 1372328366, "up_vote_count": 242, "link": "https://stackoverflow.com/questions/8855361/fb-opengraph-ogimage-not-pulling-images-possibly-https", "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1326492741, "answer_id": 8857948, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1326498284, "last_edit_date": 1326498284, "body_markdown": "I can see that the [Debugger is retrieving 4 `og:image` tags](https://developers.facebook.com/tools/debug/og/object?) from your URL.\r\n\r\nThe first image is the largest and therefore takes longest to load. \r\nTry shrink that first image down or change the order to show a smaller image first."}, {"tags": [], "down_vote_count": 2, "creation_date": 1326493372, "answer_id": 8858052, "path": "stack.gulp.answer", "score": 105, "up_vote_count": 107, "is_accepted": false, "last_activity_date": 1372328479, "last_edit_date": 1372328479, "body_markdown": "Some properties can have extra metadata attached to them. These are specified in the same way as other metadata with `property` and `content`, but the `property` will have extra :\r\n\r\nThe `og:image` property has some optional structured properties:\r\n\r\n&lt;!-- language-all: lang-html --&gt;\r\n\r\n - `og:image:url` - Identical to og:image. \r\n - `og:image:secure_url` - An\r\n   alternate url to use if the webpage requires HTTPS. \r\n - `og:image:type` - A\r\n   MIME type for this image. \r\n - `og:image:width` - The number of pixels wide.\r\n - `og:image:height` - The number of pixels high.\r\n\r\nA full image example:\r\n\r\n    &lt;meta property=&quot;og:image&quot; content=&quot;http://example.com/ogp.jpg&quot; /&gt;\r\n    &lt;meta property=&quot;og:image:secure_url&quot; content=&quot;https://secure.example.com/ogp.jpg&quot; /&gt; \r\n    &lt;meta property=&quot;og:image:type&quot; content=&quot;image/jpeg&quot; /&gt; \r\n    &lt;meta property=&quot;og:image:width&quot; content=&quot;400&quot; /&gt; \r\n    &lt;meta property=&quot;og:image:height&quot; content=&quot;300&quot; /&gt;\r\n\r\nSo you need to change `og:image` property for your HTTPS URLs to `og:image:secure_url`\r\n\r\nEx:\r\n\r\n**HTTPS META TAG FOR IMAGE:**\r\n\r\n    &lt;meta property=&quot;og:image:secure_url&quot; content=&quot;https://www.[YOUR SITE].com/images/shirts/overdriven-blues-music-tshirt-details-black.png&quot; /&gt;\r\n\r\n**HTTP META TAG FOR IMAGE:**\r\n\r\n    &lt;meta property=&quot;og:image&quot; content=&quot;http://www.[YOUR SITE].com/images/shirts/overdriven-blues-music-tshirt-details-black.png&quot; /&gt;\r\n\r\nSource: http://ogp.me/#structured &lt;-- You can visit this site for more information.\r\n\r\nHope this helps you.\r\n\r\n**EDIT:** Don&#39;t forget to ping facebook servers after updating your codes - [URL Linter][1]\r\n\r\n\r\n  [1]: http://developers.facebook.com/tools/lint/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1326893116, "answer_id": 8910877, "path": "stack.gulp.answer", "score": 71, "up_vote_count": 72, "is_accepted": true, "last_activity_date": 1326893116, "body_markdown": "I ran into the same problem and reported it as a bug on the Facebook developer site. It seems pretty clear that og:image URIs using HTTP work just fine and URIs using HTTPS do not. They have now acknowledged that they are &quot;looking into this.&quot;\r\n\r\nThe bug can be seen here:\r\nhttps://developers.facebook.com/bugs/260628274003812\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1340188720, "answer_id": 11117798, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1340188720, "body_markdown": "Got here from Google but this wasn&#39;t much help for me. It turned out that there is a minimum aspect ratio of 3:1 required for the logo. Mine was almost 4:1. I used Gimp to crop it to exactly 3:1 and voila - my logo is now shown on FB."}, {"tags": [], "down_vote_count": 2, "creation_date": 1364842882, "answer_id": 15749830, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1364842882, "body_markdown": "After several hours of testing and trying things... \r\n\r\nI solved this problem as simple as possible.\r\nI notice that they use &quot;test pages&quot; inside Facebook Developers Page that contains only the &quot;og&quot; tags and some text in the body tag that referals this og tags.\r\n\r\nSo what have i done?\r\n\r\nI created a second view in my application, containing this same things they use.\r\n\r\nAnd how i know is Facebook that is accessing my page so i can change the view? They have a unique User Agent: &quot;facebookexternalhit/1.1&quot;"}, {"tags": [], "down_vote_count": 2, "creation_date": 1366668009, "answer_id": 16157470, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1366668009, "body_markdown": "I had similar problems.  I removed the property=&quot;og:image:secure_url&quot; and now it will scrub with just og:image.  Sometimes, less is more"}, {"tags": [], "down_vote_count": 1, "creation_date": 1379112531, "answer_id": 18796379, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1379112531, "body_markdown": "In addition, this problem also occurs when you add a user generated story (where you do not use og:image). For example:\r\n\r\n    POST /me/cookbook:eat?\r\n      recipe=http://www.example.com/recipes/pizza/&amp;\r\n      image[0][url]=http://www.example.com/recipes/pizza/pizza.jpg&amp;\r\n      image[0][user_generated]=true&amp;\r\n      access_token=VALID_ACCESS_TOKEN\r\n\r\nThe above will only work with http and not with https. If you use https, you will get an error that says:\r\nAttached image (&lt;image url&gt;) failed to upload"}, {"tags": [], "down_vote_count": 1, "creation_date": 1418330264, "answer_id": 27431955, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1418330264, "body_markdown": "I don&#39;t know, if it&#39;s only with me but for me `og:image` does not work and it picks my site logo, even though [facebook debugger][1] shows the correct image.\r\n\r\nBut changing `og:image` to `og:image:url` worked for me. Hope this helps anybody else facing similar issue.\r\n\r\n\r\n  [1]: https://developers.facebook.com/tools/debug/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1446936369, "answer_id": 33588700, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1446936369, "body_markdown": "I had the same error and nothing of previous have helped, so I tried to follow original documentation of [Open Graph Protocol][1] and I added prefix attribute to my html tag and everything became awesome.\r\n\r\n    &lt;html prefix=&quot;og: http://ogp.me/ns#&quot;&gt;\r\n\r\n\r\n  [1]: http://ogp.me/"}, {"tags": [], "down_vote_count": 1, "creation_date": 1459369930, "answer_id": 36319138, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1459451275, "last_edit_date": 1459451275, "body_markdown": "As I accidentally found, transparent blank image comes with response header indicating possible cause of the problem.\r\n\r\n1. Go to the debugger at https://developers.facebook.com/tools/debug/og/object/\r\n2. Put your URL\r\n3. In the bottom, facebook shows your &quot;image&quot; (transparent 1x1 GIF)\r\n  1. Image is linked to your original image - no point pressing it\r\n  2. Press right and view image (you&#39;ll get something like `https://external-ams3-1.xx.fbcdn.net/safe_image.php?d=...&amp;url=...`)\r\n4. Turn on Net tab on firebug/developer tools, refresh page if needed\r\n5. You&#39;ll get `x-error-detail` response header with explanation\r\n\r\nFor example, in my case it was `Invalid image extension for URL: https://[mydomain]/[myfilename].jpg`\r\n\r\nThe real issue in my case was related to [prerender.io](https://github.com/prerender/prerender).\r\n\r\nAs it turns out, if image is requested via prerender, it&#39;s converted to HTML. Something like this:\r\n\r\n    &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;\r\n    &lt;html&gt;\r\n    &lt;head&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;/head&gt;\r\n    &lt;body style=&quot;margin: 0px;&quot;&gt;&lt;img style=&quot;-webkit-user-select: none; cursor: -webkit-zoom-in; &quot; src=&quot;https://[yourdomain].com/[yourfilename].jpg&quot; width=&quot;1078&quot; height=&quot;718&quot;&gt;&lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n\r\nIt&#39;s either bug in prerender itself, or it&#39;s supposed to be configured in your proxy to not use prerender for `*.jpg` requests (even if they are requested by Facebook bot).\r\n\r\nIt&#39;s really hard to notice this, as prerender is used only on certain user-agent headers."}, {"tags": [], "down_vote_count": 1, "creation_date": 1459421777, "answer_id": 36331401, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1459421777, "body_markdown": "I discovered another scenario that can cause this issue. I went through all the steps described in the question and the answers, still the problem remained.\r\n\r\nI checked my images and found that **some of my posts had way too large thumbnail images in `og:image` in the range of several thousand pixels and several megabytes.** \r\n\r\nThis happened due to the recent migration from WP to Jekyll, I optimized my images with gulp, but used the original images in og:image by mistake. \r\n\r\n[Facebook gives us the following recommendations as of today](https://developers.facebook.com/docs/sharing/best-practices): \r\n\r\n&gt; Use images that are at least 1200 x 630 pixels for the best display on\r\n&gt; high resolution devices. At the minimum, you should use images that\r\n&gt; are 600 x 315 pixels to display link page posts with larger images.\r\n&gt; Images can be up to 8MB in size.\r\n\r\n**So there is an upper limit of 8MB.**"}, {"tags": [], "down_vote_count": 1, "creation_date": 1470171859, "answer_id": 38730415, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1470171859, "body_markdown": "I ran into the same issue and then I noticed that I had a different domain for the `og:url`\r\n\r\nOnce I made sure that the domain was the same for `og:url` and `og:image` it worked.\r\n\r\nHope this helps."}, {"tags": [], "down_vote_count": 0, "creation_date": 1473244968, "answer_id": 39367718, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1473244968, "body_markdown": "From what I observed, I see that when your website is public and even though the image url is https, it just works fine."}, {"tags": [], "down_vote_count": 0, "creation_date": 1498211213, "answer_id": 44718285, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1500922128, "last_edit_date": 1500922128, "body_markdown": "Don&#39;t forget to refresh servers through : \r\n\r\n[Facebook Debugger][1]\r\n\r\n\r\n  [1]: https://developers.facebook.com/tools/debug/\r\n\r\nAnd click on &quot;Collect new info&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1499016942, "answer_id": 44873484, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1499016942, "body_markdown": "tl;dr \u2013 *be patient*\r\n\r\nI ended up here because I was seeing blank images served from a https site. The problem was quite a different one though:\r\n\r\n&gt; When content is shared for the first time, the Facebook crawler will scrape and cache the metadata from the URL shared. The crawler has to see an image at least once before it can be rendered. This means that the first person who shares a piece of content won&#39;t see a rendered image\r\n\r\n[https://developers.facebook.com/docs/sharing/best-practices/#precaching]\r\n\r\nWhile testing, it took facebook **around 10 minutes** to finally show the rendered image. So while I was scratching my head and throwing random og tags at facebook (and suspecting the https problem mentioned here), all I had to do was wait.\r\n\r\nAs this might really stop people from sharing your links for the first time, FB suggests two ways to circumvent this behavior: \r\na) running the OG Debugger on all your links: the image will be cached and ready for sharing after ~10 minutes or b) specifying og:image:width and og:image:height. (Read more in the above link)\r\n\r\nStill wondering though what takes them so long ...\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1510275429, "answer_id": 47214133, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1510275429, "body_markdown": "In my case the problem was in not providing **CA Root Certificate**. I figured it out after using: https://www.ssllabs.com/ssltest/analyze.html to analyze SSL configuration."}, {"tags": [], "down_vote_count": 0, "creation_date": 1517226494, "answer_id": 48500548, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1517226494, "body_markdown": "For me this worked:\r\n\r\n    &lt;meta property=&quot;og:url&quot; content=&quot;http://yoursiteurl&quot; /&gt;\r\n\t\t&lt;meta property=&quot;og:image&quot; content=&quot;link_to_first_image_if_you_want&quot; /&gt;\r\n        &lt;meta property=&quot;og:image&quot; content=&quot;link_to_second_image_if_you_want&quot; /&gt;\r\n        &lt;meta property=&quot;og:image:type&quot; content=&quot;image/jpeg&quot; /&gt; \r\n        &lt;meta property=&quot;og:image:width&quot; content=&quot;400&quot; /&gt; \r\n        &lt;meta property=&quot;og:image:height&quot; content=&quot;300&quot; /&gt;\r\n\t\t&lt;meta property=&quot;og:title&quot; content=&quot;your title&quot; /&gt;\r\n        &lt;meta property=&quot;og:description&quot;  content=&quot;your text about homepage&quot;/&gt; "}], "title": "FB OpenGraph og:image not pulling images (possibly https?)", "view_count": 185883, "answer_count": 17, "code_snippet": ["<code>og:image</code>", "<code>https://...</code>", "<code>og:image</code>", "<code>og:image</code>", "<code>cpanel</code>", "<code>.htaccess</code>", "<code>&lt; img src=\"[remote file]\" &gt;</code>", "<code>og:type</code>", "<code>og:image</code>", "<code>og:image</code>", "<code>https</code>", "<code>&lt;meta property=\"og:title\" content=\"[The product name]\" /&gt; \n&lt;meta property=\"og:description\" content=\"[the product description]\" /&gt; \n&lt;meta property=\"og:image\" content=\"https://www.[ourwebsite].com/images/shirts/overdriven-blues-music-tshirt-details-black.png\" /&gt;\n&lt;meta property=\"og:image\" content=\"https://www.[ourwebsite].com/images/shirts/overdriven-blues-music-tshirt-art-black.png\" /&gt;\n&lt;meta property=\"og:image\" content=\"http://www.[ADIFFERENTwebsite].com/wp-content/uploads/2011/06/ARS-Header-Shine2.png\" /&gt;\n&lt;meta property=\"og:image\" content=\"https://www.[ourwebsite].com/images/ARShopHeader.png\" /&gt;\n&lt;meta property=\"og:image\" content=\"http://www.[ourwebsite].com/overdriven-blues-music-tshirt-art-black.JPG\" /&gt;\n&lt;meta property=\"og:type\" content=\"product\"/&gt;\n&lt;meta property=\"og:url\" content=\"https://www.[ourwebsite].com/apparel-details.php?i=10047\" /&gt;\n&lt;meta property=\"og:site_name\" content=\"[our site name]\" /&gt;      \n&lt;meta property=\"fb:admins\" content=\"[FB-USER-ID-NUMBER]\"/&gt;\n&lt;meta name=\"title\" content=\"[The product name]\" /&gt;\n&lt;meta name=\"description\" content=\"[The product description]\" /&gt;\n&lt;link rel=\"image_src\" href=\"https://www.[ourwebsite].com/images/shirts/overdriven-blues-music-tshirt-details-black.png\" /&gt;\n&lt;meta name=\"keywords\" content=\"[four typical keywords]\"&gt;\n&lt;meta name=\"robots\" content=\"noarchive\"&gt;\n</code>", "<code>\"image\": [          \n      {\n         \"url\": \"https://www.[httpSwebsite].com/images/shirts/soul-man-soul-music-tshirt-details-safari.png\"\n      },\n      {\n         \"url\": \"https://www.[httpSwebsite].com/images/shirts/soul-man-soul-music-tshirt-art-safari.png\"\n      },\n      {\n         \"url\": \"http://www.[theotherNONSECUREwebsite].com/wp-content/uploads/2011/06/ARS-Header-Shine2.png\"\n      }\n   ],\n</code>", "<code>http://img.otherdomain.com/[like-image.jpg]</code>", "<code>og:image</code>", "<code>https</code>", "<code>og:type:\tog_products:product</code>", "<code>property</code>", "<code>content</code>", "<code>property</code>", "<code>og:image</code>", "<code>og:image:url</code>", "<code>og:image:secure_url</code>", "<code>og:image:type</code>", "<code>og:image:width</code>", "<code>og:image:height</code>", "<code>&lt;meta property=\"og:image\" content=\"http://example.com/ogp.jpg\" /&gt;\n&lt;meta property=\"og:image:secure_url\" content=\"https://secure.example.com/ogp.jpg\" /&gt; \n&lt;meta property=\"og:image:type\" content=\"image/jpeg\" /&gt; \n&lt;meta property=\"og:image:width\" content=\"400\" /&gt; \n&lt;meta property=\"og:image:height\" content=\"300\" /&gt;\n</code>", "<code>og:image</code>", "<code>og:image:secure_url</code>", "<code>&lt;meta property=\"og:image:secure_url\" content=\"https://www.[YOUR SITE].com/images/shirts/overdriven-blues-music-tshirt-details-black.png\" /&gt;\n</code>", "<code>&lt;meta property=\"og:image\" content=\"http://www.[YOUR SITE].com/images/shirts/overdriven-blues-music-tshirt-details-black.png\" /&gt;\n</code>", "<code>See exactly what our scraper sees for your URL</code>", "<code>charset</code>", "<code>og:image</code>", "<code>og:image:secure_url</code>", "<code>og:image</code>", "<code>og:image</code>", "<code>og:image:url</code>", "<code>og:image:url</code>", "<code>og:image</code>", "<code>&lt;html prefix=\"og: http://ogp.me/ns#\"&gt;\n</code>", "<code>og:image:width</code>", "<code>og:image:height</code>", "<code>og:image</code>", "<code>og:url</code>", "<code>og:url</code>", "<code>og:image</code>", "<code>og:image</code>", "<code>POST /me/cookbook:eat?\n  recipe=http://www.example.com/recipes/pizza/&amp;\n  image[0][url]=http://www.example.com/recipes/pizza/pizza.jpg&amp;\n  image[0][user_generated]=true&amp;\n  access_token=VALID_ACCESS_TOKEN\n</code>", "<code>https://external-ams3-1.xx.fbcdn.net/safe_image.php?d=...&amp;url=...</code>", "<code>x-error-detail</code>", "<code>Invalid image extension for URL: https://[mydomain]/[myfilename].jpg</code>", "<code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"&gt;&lt;/head&gt;\n&lt;body style=\"margin: 0px;\"&gt;&lt;img style=\"-webkit-user-select: none; cursor: -webkit-zoom-in; \" src=\"https://[yourdomain].com/[yourfilename].jpg\" width=\"1078\" height=\"718\"&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code>", "<code>*.jpg</code>", "<code>&lt;meta property=\"og:url\" content=\"http://yoursiteurl\" /&gt;\n    &lt;meta property=\"og:image\" content=\"link_to_first_image_if_you_want\" /&gt;\n    &lt;meta property=\"og:image\" content=\"link_to_second_image_if_you_want\" /&gt;\n    &lt;meta property=\"og:image:type\" content=\"image/jpeg\" /&gt; \n    &lt;meta property=\"og:image:width\" content=\"400\" /&gt; \n    &lt;meta property=\"og:image:height\" content=\"300\" /&gt;\n    &lt;meta property=\"og:title\" content=\"your title\" /&gt;\n    &lt;meta property=\"og:description\"  content=\"your text about homepage\"/&gt; \n</code>"], "path": "stack.gulp"}, {"tags": ["ssh", "sublimetext2"], "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1365752994, "answer_id": 15965854, "path": "stack.gulp.answer", "score": 147, "up_vote_count": 148, "is_accepted": true, "last_activity_date": 1486492916, "last_edit_date": 1486492916, "body_markdown": "There are three ways:\r\n\r\n- Use SFTP plugin (commercial) http://wbond.net/sublime_packages/sftp - I personally recommend this, as after settings public SSH keys with passphrase it is safe, easy and worth every penny http://opensourcehacker.com/2012/10/24/ssh-key-and-passwordless-login-basics-for-developers/\r\n\r\n- Mount the remote as local file system using ``osxfuse`` and ``sshfs`` as mentioned in the comments. This might be little difficult, depending on OSX version and your skills with UNIX file systems.\r\n\r\n- Hack together something like rmate which does file editing over remote tunneling using some kind of a local daemon (very difficult, cumbersome, but sudo compatible)  http://blog.macromates.com/2011/mate-and-rmate/\r\n\r\nAlso, in theory, you can install X11 on the remote server and run Sublime there over VNC or X11 forwarding, but there would be no point doing this.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1375889477, "answer_id": 18107549, "path": "stack.gulp.answer", "score": 93, "up_vote_count": 93, "is_accepted": false, "last_activity_date": 1406651401, "last_edit_date": 1406651401, "body_markdown": "You can use [rsub](https://github.com/Drarok/rsub), which is inspired on TextMate&#39;s `rmate`. From the description: \r\n\r\n&gt; Rsub is an implementation of TextMate 2&#39;s &#39;rmate&#39; feature for Sublime Text 2, allowing files to be edited on a remote server using SSH port forwarding / tunnelling.\r\n\r\n\r\n[Here&#39;s a good tutorial](http://log.liminastudio.com/writing/tutorials/sublime-tunnel-of-love-how-to-edit-remote-files-with-sublime-text-via-an-ssh-tunnel) on how to set it up properly.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1377884115, "answer_id": 18538531, "path": "stack.gulp.answer", "score": 31, "up_vote_count": 31, "is_accepted": false, "last_activity_date": 1402756130, "last_edit_date": 1402756130, "body_markdown": "&lt;!-- language-all: lang-none --&gt;\r\n\r\nAs a follow up to @ubik&#39;s answer, here are the three simple (one-time) steps to get the &#39;subl&#39; command working on your remote server:\r\n\r\n 1. [**Local**] Install the `rsub` package in Sublime Text using the [Sublime Package Manager][1]\r\n 2. [**Local**] Execute the following Bash command (this will set up an [SSH tunnel][2], which is rsub&#39;s secret sauce):\r\n\r\n        printf &quot;Host *\\n    RemoteForward 52698 127.0.0.1:52698&quot; &gt;&gt; ~/.ssh/config\r\n\r\n 3. [**Server**] Execute the following Bash command on your remote server (this will install the &#39;subl&#39; shell command):\r\n\r\n        sudo wget -O /usr/local/bin/subl https://raw.github.com/aurora/rmate/master/rmate; sudo chmod +x /usr/local/bin/subl\r\n\r\nAnd voila! **You&#39;re now using Sublime Text over SSH.**\r\n\r\nYou can open an example file in Sublime Text from the server with something like `subl ~/test.txt`\r\n\r\n\r\n  [1]: https://sublime.wbond.net/installation\r\n  [2]: http://en.wikipedia.org/wiki/Tunneling_protocol#Secure_shell_tunneling"}, {"tags": [], "down_vote_count": 1, "creation_date": 1382658273, "answer_id": 19578692, "path": "stack.gulp.answer", "score": 63, "up_vote_count": 64, "is_accepted": false, "last_activity_date": 1470100123, "last_edit_date": 1492086162, "body_markdown": "I&#39;m on Windows and have used 4 methods: **SFTP**, **WinSCP**, **Unison** and **Sublime Text on Linux with X11 forwarding over SSH to Windows** (yes you can do this without messy configs and using a free tool).\r\n\r\nThe fourth way is the best if you can install software on your Linux machine.\r\n\r\nThe fourth way:\r\n\r\n**MobaXterm**\r\n\r\n 1. Install [MobaXterm][1] on Windows\r\n 2. SSH to your Linux box from MobaXterm\r\n 3. On your linux box, install Sublime Text 3. Here&#39;s [how to on Ubuntu][2]\r\n 4. At the command prompt, start sublime with `subl`\r\n 5. That&#39;s it! You now have sublime text running on Linux, but with its window running on your Windows desktop. This is possible because MobaXterm handles the X11 forwarding over SSH for you so you don&#39;t have to do anything funky to get it going. There might be a teeny amount of a delay, but your files will never be out of sync, because you&#39;re editing them right on the Linux machine.\r\n\r\nNote:\r\nWhen invoking subl if it complains for a certain library - ensure you install them to successfully invoke sublimetext from mobaxterm.\r\n\r\nIf you can&#39;t install software on your Linux box, the best is Unison. Why?\r\n\r\n  - It&#39;s free\r\n  - It&#39;s fast\r\n  - It&#39;s reliable and doesn&#39;t care which editor you use\r\n  - You can create custom ignore lists\r\n\r\n**SFTP**\r\n\r\nSetup:\r\nInstall the [SFTP][3] Sublime Text package. This package requires a license.\r\n\r\n 1. Create a new folder\r\n 2. Open it as a Sublime Text Project.\r\n 3. In the sidebar, right click on the folder and select Map Remote.\r\n 4. Edit the sftp-config.json file\r\n 5. Right click the folder in step 1 select download.\r\n 6. Work locally.\r\n\r\nIn the sftp-config, I usually set:\r\n\r\n    &quot;upload_on_save&quot;: true,\r\n    &quot;sync_down_on_open&quot;: true,\r\n\r\nThis, in addition to an SSH terminal to the machine gives me a fairly seamless remote editing experience. \r\n\r\n**WinSCP**\r\n\r\n 1. Install and run [WinSCP][4]\r\n 2. Go to Preferences (Ctrl+Alt+P) and click on Transfer, then on Add. Name the preset.\r\n 3. Set the transfer mode to binary (you don&#39;t want line conversions)\r\n 4. Set file modification to &quot;No change&quot;\r\n 5. Click the Edit button next to File Mask and setup your include and exclude files and folders (useful for when you have a .git/.svn folder present or you want to exclude build products from being synchronized).\r\n 6. Click OK\r\n 7. Connect to your remote server and navigate to the folder of interest\r\n 8. Choose an empty folder on your local machine.\r\n 9. Select your newly created Transfer settings preset.\r\n 10. Finally, hit Ctrl+U (Commands &gt; Keep remote directory up to date) and make sure &quot;Synchronize on start&quot; and &quot;Update subdirectories&quot; are checked.\r\n\r\nFrom then on, WinSCP will keep your changes synchronized.\r\n\r\nWork in the local folder using SublimeText. Just make sure that Sublime Text is set to guess the line endings from the file that is being edited.\r\n\r\n**Unison**\r\n\r\nI have found that if source tree is massive (around a few hundred MB with a deep hierarchy), then the WinSCP method described above might be a bit slow. You can get much better performance using [Unison][5]. The down side is that Unison is not automatic (you need to trigger it with a keypress)  and requires a server component to be running on your linux machine. The up side is that the transfers are incredibly fast, it is very reliable and ignoring files, folders and extensions are incredibly easy to setup. \r\n\r\n\r\n  [1]: http://mobaxterm.mobatek.net/\r\n  [2]: https://askubuntu.com/a/227617/50830\r\n  [3]: http://wbond.net/sublime_packages/sftp\r\n  [4]: http://winscp.net/eng/index.php\r\n  [5]: http://www.cis.upenn.edu/~bcpierce/unison/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1383492890, "answer_id": 19754671, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1383492890, "body_markdown": "You can try something that I&#39;ve been working on called &#39;[xeno][1]&#39;.  It will allow you to open up files/folders in Sublime Text (or any local editor really) over an SSH connection and automatically synchronize changes to the remote machine.  It should work on almost all POSIX systems (I myself use it from OS X to connect to Linux machines and edit files in Sublime Text).  It&#39;s free and open source.  I&#39;d love some feedback.\r\n\r\nFor more information: it&#39;s basically a Git/SSH mashup written in Python that allows you to edit files and folders on a remote machine in a local editor.  You don&#39;t have to configure kernel modules, you don&#39;t need to have a persistent connection, it&#39;s all automatic, and it won&#39;t interfere with existing source control because it uses an out-of-worktree Git repository.  Also, because it&#39;s built on Git, it&#39;s extremely fast and supports automatic merging of files that might be changing on both ends, unlike SSHFS/SFTP which will just clobber any files with older timestamps.\r\n\r\n  [1]: https://xeno.io\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1399920141, "answer_id": 23616458, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1473171627, "last_edit_date": 1473171627, "body_markdown": "I am on MaxOS, and the most convenient way for me is to using [**CyberDuck**](https://cyberduck.io/), which is free (also available for Windows). You can connect to your remote SSH file system and edit your file using your local editor. What CyberDuck does is download the file to a temporary place on your local OS and open it with your editor. Once you save the file, CyberDuck automatically upload it to your remote system. It seems transparent as if you are editing your remote file using your local editor."}, {"tags": [], "down_vote_count": 0, "creation_date": 1401556722, "answer_id": 23973184, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1463413582, "last_edit_date": 1463413582, "body_markdown": "I&#39;ve been working on a project called [GiySync](https://github.com/ClockworkNet/GitSync). It still needs some work, but it&#39;s open source and I&#39;ve been using it every day for a couple of years. I&#39;m also working on a native OS X version I&#39;ve called [GitSyncApp](https://github.com/jachin/GitSyncApp)\r\n\r\nRight now it&#39;s OS X only but it should be easy to add support for Linux, and possibly Windows too.\r\n\r\nIt works by watching file system events and it uses to [git](http://git-scm.com/) to sync a project folder on your local machine and a server.\r\n\r\nI tried the other solutions like osx fuse, Expand Drive, Transmit, several solutions that used rsync, etc. They all work &#39;OK&#39; for small projects, but if you&#39;re working with a lot of code they  did not work for me.\r\n\r\nA lot of the file system options do caching to improve performance, which is fine, until it&#39;s not. Like if you&#39;re working with other people and someone else changes the files on the server.\r\n\r\nI also ran into issues if I was on a flaky or slow network where I&#39;d end up with empty files. Or file that didn&#39;t sync, then the caching got weird; hopefully you committed recently. Using git solves this problem because it checks each commit&#39;s integrity.\r\n\r\nTwo bonus features:\r\n\r\n 1. You end up with a commit for every save. It&#39;s not super useful but if you ever have to go back in time you can.\r\n 2. It works with any text editor.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1414785451, "answer_id": 26682495, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1414785451, "body_markdown": "Another mac solution similar to osxfuse is to just use Transmit FTP client from Panic Software, which allows you to mount a remote folder as a local disk.  It supports SFTP, which is very secure.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1419904118, "answer_id": 27698597, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1498798761, "last_edit_date": 1498798761, "body_markdown": "I know this is way old, but I have a really cool way of doing this that is worth sharing.\r\n\r\n\r\nWhat is required in [Conemu][1] and [WinSCP][2].  These are simple instructions\r\n\r\n 1. Open WinSCP.exe and login to my desired remote  server (I have   \r\n    found that it&#39;s important to login before attaching ... ).\r\n\r\n 2.  In the preferences for WinSCP -  two settings to change.  Choose Explorer type interface and rather than Commander - so you don&#39;t see local files.  Unless you want to (but that seems like it would suck here).   Set up Sublime as your default editor.\r\n \r\n 3. With ConEmu open, right click the tab bar and select the option `Attach to...`.  A dialog box will open with your running applications.  Choose, WinSCP and select OK.  ConEmu will now have an open tab with WinSCP displaying your remote files.\r\n\r\n 4.  Right click on the WinSCP tab and choose `New console...`.   When the dialog box opens, enter the path to the Sublime executable on your system.  Before you press `Start`, In the box that says `New console split` select the radio button `to right` and set the percentage.  I usually choose 75%, but you can customize this to your liking, and it can be changed later.\r\n\r\n5.  Now you will see Sublime in the same window running to the right of WinSCP.  In Sublime, from the View menu, choose `Sidebar-&gt;Hide Sidebar`, and bam, you now have remote files in exactly the same manner as you would locally - with a few caveats of course that comes with editing anything remotely.  WinSCP is lightening fast though.\r\n\r\n\r\nI have two monitors - left monitor display&#39;s Chrome browser, right monitor displays code editor.  Also in `ConEmu`, I create another tab and ssh into the site I&#39;m working on, so I can do things like run `gulp` or `grunt` remotely and also manipulate files from the command line.  Seriously sped up development.\r\n\r\n\r\nHere&#39;s a screenshot:\r\n\r\n![Setup Screenshot][3]\r\n\r\n\r\n  [1]: https://sourceforge.net/projects/conemu/ &quot;Conemu&quot;\r\n  [2]: https://sourceforge.net/projects/winscp/\r\n  [3]: http://i.stack.imgur.com/1ZMpd.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1425359185, "answer_id": 28824495, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1425359185, "body_markdown": "Depending on your exact needs, you may consider using BitTorrent Sync. Create a shared folder on your home PC and your work PC. Edit the files on your home PC (using Sublime or whatever you like), and they will sync automatically when you save. BitTorrent Sync does not rely on a central server storing the files (a la Dropbox and the like), so you should in theory be clear of any issues due to a third party storing sensitive info."}, {"tags": [], "down_vote_count": 0, "creation_date": 1440788224, "answer_id": 32278010, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1440788224, "body_markdown": "You can use sftp to mount the remote directory on your location machine and then simply open the files using Sublime text the way you normally would. \r\n\r\nTo mount remote directory using sftp, enter the following on your Linux file manager; \r\n\r\n    sftp://user@remote_box.com:22/home/user/code_directory\r\n\r\nIt might seem slow depending on your internet speeds. But this worked for me. "}, {"tags": [], "down_vote_count": 0, "creation_date": 1452416324, "answer_id": 34703714, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1452416324, "body_markdown": "A solution that worked great for me - edit locally on Mac, and have the file automatically synchronized to a remote machine\r\n\r\n1. Make sure you have passwordless login to the remote machine. If not, follow these steps http://osxdaily.com/2012/05/25/how-to-set-up-a-password-less-ssh-login/\r\n\r\n2. create a file in ~/Library/LaunchAgents/filesynchronizer.plist, with the following content:\r\n\r\n    `&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n    &lt;!DOCTYPE plist PUBLIC &quot;-//Apple Computer//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;\r\n    &lt;plist version=&quot;1.0&quot;&gt;\r\n    &lt;dict&gt;\r\n        &lt;key&gt;Label&lt;/key&gt;\r\n        &lt;string&gt;filesynchronizer&lt;/string&gt;\r\n        &lt;key&gt;ProgramArguments&lt;/key&gt;\r\n        &lt;array&gt;\r\n            &lt;string&gt;/usr/bin/rsync&lt;/string&gt;\r\n            &lt;string&gt;-avz&lt;/string&gt;\r\n            &lt;string&gt;/Users/USERNAME/SyncDirectory&lt;/string&gt;\r\n            &lt;string&gt;USERNAME@REMOTEMACHINE:~&lt;/string&gt;\r\n        &lt;/array&gt;\r\n        &lt;key&gt;WatchPaths&lt;/key&gt;\r\n        &lt;array&gt;\r\n            &lt;string&gt;/Users/USERNAME/SyncDirectory&lt;/string&gt;\r\n        &lt;/array&gt;\r\n    &lt;/dict&gt;\r\n    &lt;/plist&gt;`\r\n\r\n3. In a terminal window run \r\n\r\n    `launchctl load ~/Library/LaunchAgents/filesynchronizer.plist`\r\n\r\n4. That&#39;s it. Any changes to any files in ~/SyncDirectory will be synchronized to ~/SyncDirectory on the remote machine. Local changes will override any remote changes.\r\n\r\nThis creates a launchd job that monitors SyncDirectory, and whenever anything changes there runs rsync to synchronize the directory to the remote machine."}, {"tags": [], "down_vote_count": 0, "creation_date": 1462213885, "answer_id": 36989206, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1515202372, "last_edit_date": 1515202372, "body_markdown": "This is the easiest way to locally edit files which live on remote host where you have previously setup ssh to remote IP\r\n\r\n    # issue on local box\r\n    \r\n    sudo apt-get install sshfs   # on local host install sshfs ( linux )\r\n\r\n    # on local box create secure mount of remote directory\r\n\r\n    export REMOTE_IP=107.170.58.249 # remote host IP\r\n\r\n    sshfs myremoteuserid@${REMOTE_IP}:/your/remote/dir  /your/local/dir # for example\r\n\r\nDone !!!    \r\n\r\nNow on local host just start editing files ... when you list dir locally it may not list anything until you cd into subdir or list a specific file ... lazy loading ... this does not impact editing files\r\n\r\n    subl /your/local/dir/magnum_opus.go # local file edit using sublime text\r\n\r\nso above is actually editing remote file at\r\n\r\n    /your/remote/dir/magnum_opus.go  # remote file on box $REMOTE_IP\r\n \r\n[For OSX or Windows see this tut from the kind folk over on Digital Ocean][1]\r\n\r\n\r\n  [1]: https://www.digitalocean.com/community/tutorials/how-to-use-sshfs-to-mount-remote-file-systems-over-ssh"}, {"tags": [], "down_vote_count": 0, "creation_date": 1487058422, "answer_id": 42220515, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1487058422, "body_markdown": "[lsyncd][1] seem to be nice alternative to the sshfs approach. If you use &quot;-delay 0&quot; it works in real-time.\r\n\r\n\r\n  [1]: https://github.com/axkibe/lsyncd"}], "creation_date": 1365711313, "body_markdown": "I&#39;m trying to use Sublime Text 2 as an editor when I SSH in to my work server, and I&#39;m stumped.  I found this http://urbangiraffe.com/2011/08/13/remote-editing-with-sublime-text-2/ (among many other posts) that looks like it might help, but I don&#39;t follow it exactly, particularly with what values I should put in for the remote variable in line 5.  I set &quot;/Users/path/to/local/copy&quot; to my local root directory, but I don&#39;t know if that&#39;s right or if there&#39;s more to do.  Any thoughts?  I&#39;m on OSX10.8", "title": "How to use Sublime over SSH", "view_count": 266182, "up_vote_count": 223, "answer_count": 14, "link": "https://stackoverflow.com/questions/15958056/how-to-use-sublime-over-ssh", "code_snippet": ["<code>osxfuse</code>", "<code>sshfs</code>", "<code>osxfuse</code>", "<code>sshfs</code>", "<code>rmate</code>", "<code>subl</code>", "<code>\"upload_on_save\": true,\n\"sync_down_on_open\": true,\n</code>", "<code>SFTP setup</code>", "<code>rsub</code>", "<code>printf \"Host *\\n    RemoteForward 52698 127.0.0.1:52698\" &gt;&gt; ~/.ssh/config\n</code>", "<code>sudo wget -O /usr/local/bin/subl https://raw.github.com/aurora/rmate/master/rmate; sudo chmod +x /usr/local/bin/subl\n</code>", "<code>subl ~/test.txt</code>", "<code>/usr/local/bin/subl: connect: Connection refused /usr/local/bin/subl: line 200: /dev/tcp/localhost/52698: Connection refused Unable to connect to TextMate on localhost:52698</code>", "<code>Host *\\n\\tRemoteForward 52698 localhost:52698</code>", "<code># issue on local box\n\nsudo apt-get install sshfs   # on local host install sshfs ( linux )\n\n# on local box create secure mount of remote directory\n\nexport REMOTE_IP=107.170.58.249 # remote host IP\n\nsshfs myremoteuserid@${REMOTE_IP}:/your/remote/dir  /your/local/dir # for example\n</code>", "<code>subl /your/local/dir/magnum_opus.go # local file edit using sublime text\n</code>", "<code>/your/remote/dir/magnum_opus.go  # remote file on box $REMOTE_IP\n</code>", "<code>sftp://user@remote_box.com:22/home/user/code_directory\n</code>", "<code>Attach to...</code>", "<code>New console...</code>", "<code>Start</code>", "<code>New console split</code>", "<code>to right</code>", "<code>Sidebar-&gt;Hide Sidebar</code>", "<code>ConEmu</code>", "<code>gulp</code>", "<code>grunt</code>", "<code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n&lt;plist version=\"1.0\"&gt;\n&lt;dict&gt;\n    &lt;key&gt;Label&lt;/key&gt;\n    &lt;string&gt;filesynchronizer&lt;/string&gt;\n    &lt;key&gt;ProgramArguments&lt;/key&gt;\n    &lt;array&gt;\n        &lt;string&gt;/usr/bin/rsync&lt;/string&gt;\n        &lt;string&gt;-avz&lt;/string&gt;\n        &lt;string&gt;/Users/USERNAME/SyncDirectory&lt;/string&gt;\n        &lt;string&gt;USERNAME@REMOTEMACHINE:~&lt;/string&gt;\n    &lt;/array&gt;\n    &lt;key&gt;WatchPaths&lt;/key&gt;\n    &lt;array&gt;\n        &lt;string&gt;/Users/USERNAME/SyncDirectory&lt;/string&gt;\n    &lt;/array&gt;\n&lt;/dict&gt;\n&lt;/plist&gt;</code>", "<code>launchctl load ~/Library/LaunchAgents/filesynchronizer.plist</code>"], "path": "stack.gulp"}, {"tags": ["ruby", "rbenv"], "creation_date": 1339108127, "body_markdown": "I installed rbenv according to the github directions. I am running OSX but I have tried this on a Ubuntu 12.04 VM and got the same results. The following is what i get in my terminal when I try to change ruby versions:\r\n\r\n    rbenv versions\r\n    * 1.9.3-p0 (set by /Users/user/.rbenv/version)\r\n    1.9.3-p125\r\n\r\n    rbenv global\r\n    1.9.3-p0\r\n\r\n    rbenv rehash\r\n\r\n    ruby -v\r\n    ruby 1.8.7 (2011-12-28 patchlevel 357) [universal-darwin11.0]\r\n\r\n    which ruby\r\n    /usr/bin/ruby\r\n\r\nAnyone have any ideas as to why rbenv isn&#39;t switching the ruby version like it thinks it is? Also there is no .rbenv file in the local directory that would be causing the ruby version to default to 1.8.7\r\n\r\n    rbenv local\r\n    rbenv: no local version configured for this directory\r\n\r\n\r\n\r\n\r\n ", "last_edit_date": 1455680482, "up_vote_count": 177, "link": "https://stackoverflow.com/questions/10940736/rbenv-not-changing-ruby-version", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1340310924, "answer_id": 11146317, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1340310924, "body_markdown": "Strangely, rbenv version did not set the .rbenv file\r\nCheck with:  ls -ltra --&gt; to see that a rbenv was written"}, {"tags": [], "down_vote_count": 0, "creation_date": 1343560625, "answer_id": 11708787, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1344142541, "last_edit_date": 1344142541, "body_markdown": "I came to the same problem.\r\nFixed this by run the &quot;rbenv global&quot; command with &quot;sudo&quot;.\r\nI think it was something permission problem.\r\n\r\nupdate:\r\nI finally found the solution.\r\nThere was one same file &quot;version&quot; on my mac,  which is under &quot;/usr/local/Cellar/rbenv/0.3.0/&quot;.\r\nI think it was created by mistake occasionally. you should remove it.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1345315659, "answer_id": 12021313, "path": "stack.gulp.answer", "score": 20, "up_vote_count": 20, "is_accepted": false, "last_activity_date": 1345315659, "body_markdown": "I just found this same problem. What I did was uninstall rbenv (via homebrew) and reinstall it. I also added \r\n\r\n    if which rbenv &gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi\r\n\r\ninto ~/.bash_profile when I reinstalled rbenv. Works perfectly now."}, {"tags": [], "down_vote_count": 0, "creation_date": 1346107221, "answer_id": 12150580, "path": "stack.gulp.answer", "score": 347, "up_vote_count": 347, "is_accepted": true, "last_activity_date": 1369110220, "last_edit_date": 1369110220, "body_markdown": "Check that PATH contains $HOME/.rbenv/shims and $HOME/.rbenv/bin\r\n\r\n    $ env | grep PATH\r\n\r\nAlso check that you have the following in your ~/.bash_profile if using bash or ~/.zshenv if using zsh\r\n\r\n    export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\n    eval &quot;$(rbenv init -)&quot;\r\n\r\nNOTE:\r\nMake sure it&#39;s the last setting in your ~/.bash_profile . I ran into an issue where I installed a program that updated my .bash_profile and reset PATH."}, {"tags": [], "down_vote_count": 0, "creation_date": 1351856819, "answer_id": 13194638, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1351856819, "body_markdown": "When I had these symptoms, the problem turned out to be that install had failed halfway through for the new Ruby version I was trying to switch to, without me noticing. The fix was to delete &amp; reinstall it.\r\n\r\n(This meant that even though ruby 1.9.3 showed up in the rbenv list of available versions, it didn&#39;t have an executable on the path where rbenv assumed it would. Since rbenv tries to change your ruby version just by prepending a location to your path, if there&#39;s nothing actually in the location it prepends, your OS will happily continue searching your default path and find your system version, in my case like the question&#39;s 1.8.7.)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1353481402, "answer_id": 13487991, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1353481402, "body_markdown": "You could try using [chruby](https://github.com/postmodern/chruby#readme)? chruby does not rely on shims, instead it only modifies `PATH`, `GEM_HOME`, `GEM_PATH`."}, {"tags": [], "down_vote_count": 0, "creation_date": 1366898256, "answer_id": 16216746, "path": "stack.gulp.answer", "score": 58, "up_vote_count": 58, "is_accepted": false, "last_activity_date": 1495596509, "last_edit_date": 1495596509, "body_markdown": "I fixed this by adding the following to my ~/.bash_profile:\r\n\r\n    #PATH for rbenv\r\n    export PATH=&quot;$HOME/.rbenv/shims:$PATH&quot;\r\n\r\nThis is what is documented at https://github.com/sstephenson/rbenv.\r\n\r\nFrom what I can tell there is no ~/.rbenv/bin directory, which was mentioned in the post by @rodowi."}, {"tags": [], "down_vote_count": 0, "creation_date": 1373931686, "answer_id": 17665743, "path": "stack.gulp.answer", "score": 73, "up_vote_count": 73, "is_accepted": false, "last_activity_date": 1373931686, "body_markdown": "This may be an old question, but Google led me here and, for posterity sake, thought I&#39;d share.\r\n\r\nMy problem persisted after many of the recommended solutions above. Like the OP, I installed rbenv and then a ruby version, but my laptop defaulted to system. What I had overlooked was that when I ran:\r\n\r\n    [~/.rbenv] $ rbenv versions\r\n    * system (set by /Users/alphadogg/.rbenv/version)\r\n      2.0.0-p247\r\n\r\nIOW, it was still defaulting to system. A quick\r\n\r\n    [~/.rbenv] $ rbenv local 2.0.0-p247\r\n\r\nswitched it to the new version.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1386983972, "answer_id": 20578623, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1386985355, "last_edit_date": 1386985355, "body_markdown": "This happened to me right after I reinstalled `rbenv`. Apparently I had a `.ruby-version` file in my home directory, specifying a version that no longer existed. Once I deleted the file, everything worked."}, {"tags": [], "down_vote_count": 0, "creation_date": 1390743713, "answer_id": 21364118, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1390743713, "body_markdown": "```rbenv help shell```\r\n\r\n&quot;Sets a shell-specific Ruby version by setting the &#39;RBENV_VERSION&#39; environment variable in your shell. This version overrides localapplication-specific versions and the global version.&lt;version&gt; should be a string matching a Ruby version known to rbenv.The special version string &#39;system&#39; will use your default system Ruby. Run rbenv versions&#39; for a list of available Ruby versions.&quot;\r\n\r\nProvided rbenv was installed correctly, ruby -v will correspond to \r\n\r\n```rbenv shell 1.9.3-p125```"}, {"tags": [], "down_vote_count": 1, "creation_date": 1393828666, "answer_id": 22140224, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1393828666, "body_markdown": "I forgot to delete rvm before installing rbenv. I deleted rvm and re-installed rbenv, but system still wasn&#39;t using the version of Ruby being designated as global by rbenv. I tried shutting Terminal, but it only worked once I restarted the whole machine."}, {"tags": [], "down_vote_count": 0, "creation_date": 1452179021, "answer_id": 34658433, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1452179021, "body_markdown": "As for me the easiest way to use `rbenv` along with `zsh` is adding `rbenv` to plugins section in `.zshrc` config. In my case it looks similar to:\r\n\r\n\r\n    # Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n    # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n    # Example format: plugins=(rails git textmate ruby lighthouse)\r\n    # Add wisely, as too many plugins slow down shell startup.\r\n    plugins=(git bower rails ruby rbenv gulp npm node nvm sublime)\r\n\r\n After that there&#39;re no problems when installing, switching, using ruby versions with help of `rbenv`.\r\n\r\nMind to restart your terminal session after made changes."}, {"tags": [], "down_vote_count": 0, "creation_date": 1472603387, "answer_id": 39238995, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1472603387, "body_markdown": "First step is to find out which ruby is being called:&lt;br&gt;\r\n&lt;code&gt;which ruby&lt;/code&gt;\r\n\r\nYour system says:&lt;br&gt;\r\n&lt;code&gt;/usr/bin/ruby&lt;/code&gt;\r\n\r\nThis is NOT the shim used by rbenv, which (on MacOS) should look like:&lt;br&gt;\r\n&lt;code&gt;/Users/&amp;lt;username&amp;gt;/.rbenv/shims/ruby&lt;/code&gt;\r\n\r\nThe shim is actually a script that acts like a redirect to the version of ruby you set.&lt;br&gt;&lt;br&gt;\r\n&lt;code&gt;rbenv global 1.9.3\r\n rbenv local --unset\r\n rbenv shell --unset\r\n&lt;/code&gt;&lt;br&gt;\r\nI recommend that for trouble shooting you unset the project specific &quot;local&quot; version, and the shell specific &quot;shell&quot; version and just test using the &quot;global&quot; version setting which is determined in a plain text file in ~/.rbenv/verion which will just be the version number &quot;1.9.3&quot; in your case.  You can do &quot;ls -laG&quot; in the root of your project folder (not the home folder) to make sure there is no longer a &quot;.ruby-version&quot; file there.\r\n\r\nYou can use &quot;rbenv versions&quot; to identify which version rbenv is set to use (and the location and name of the file that is setting that).\r\n\r\n&lt;code&gt;rbenv versions&lt;/code&gt;\r\n\r\nNONE OF THAT MATTERS: until you set the path correctly.\r\n\r\nUse this to make sure your *MacOS will obey you:&lt;br&gt;\r\n&lt;code&gt;eval &quot;$(rbenv init -)&quot;&lt;/code&gt;\r\n\r\nFollowed by:&lt;br&gt;\r\n&lt;code&gt;which ruby&lt;/code&gt;\r\n\r\nTo make sure it looks like:\r\n/Users/&lt;username&gt;/.rbenv/shims/ruby\r\n\r\nThen add the line to your profile so it runs each time you open a new terminal window:&lt;br&gt;\r\n&lt;code&gt; ~/.bash_profile\r\neval &quot;$(rbenv init -)&quot;&lt;/code&gt;\r\n\r\nThere are other ways to modify the path, feel free to substitute any of them instead of running the rbenv init.\r\n\r\nNOTE: reinstall Rails with:&lt;br&gt;\r\n&lt;code&gt;gem install rails&lt;/code&gt;\r\n\r\n\r\nIf you were trying to run Ruby on Rails, then you need to have this all working first, then install the rails gem again.  A previous install of Rails will use a hard coded path to the wrong ruby and several other things will be in the wrong place, so just install the gem again.\r\n\r\nP. S. If your MacOS won&#39;t obey you (*mentioned above) then you may have to find another way to modify your path, but that&#39;s unlikely to be a problem because &quot;Macs just work&quot; ;)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1472624811, "answer_id": 39242206, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1472624811, "body_markdown": "Run this command\r\n\r\n# Add rbenv to bash so that it loads every time you open a terminal\r\n\r\n    echo &#39;if which rbenv &gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi&#39; &gt;&gt; ~/.bash_profile\r\n    source ~/.bash_profile\r\nthis will solve your problem [Reference][1]\r\n\r\n\r\n  [1]: https://gorails.com/setup/osx/10.10-yosemite"}, {"tags": [], "down_vote_count": 0, "creation_date": 1484482927, "answer_id": 41661031, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1484482927, "body_markdown": "I had the same problem, but caused by Homebrew:\r\n\r\n    [~]$ rbenv version\r\n    2.3.0 (set by /Users/user/.rbenv/version)\r\n    [~]$ ruby -v\r\n    ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-darwin16]\r\n    [~]$ which ruby\r\n    /usr/local/bin/ruby\r\n\r\nSomehow I had installed Ruby via Homebrew too, and the Homebrew path was ahead of the rbenv path in my `$PATH`. Running `brew uninstall ruby` fixed it for me."}, {"tags": [], "down_vote_count": 0, "creation_date": 1484958463, "answer_id": 41774472, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1484958463, "body_markdown": "for fish shell user\r\n\r\n    set --universal fish_user_paths $fish_user_paths ~/.rbenv/shims/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1486040112, "answer_id": 42002830, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1494581775, "last_edit_date": 1494581775, "body_markdown": "In my case changing the `~/.zshenv` did not work. I had to make the changes inside `~/.zshrc`.\r\n\r\nI just added: \r\n\r\n    # Include rbenv for ZSH\r\n    export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\n    eval &quot;$(rbenv init -)&quot;\r\n\r\nat the top of `~/.zshrc`, restarted the shell and logged out.\r\n\r\nCheck if it worked:\r\n\r\n    \u279c  ~ rbenv install 2.4.0\r\n    \u279c  ~ rbenv global 2.4.0\r\n    \u279c  ~ rbenv global\r\n    2.4.0\r\n    \u279c  ~ ruby -v\r\n    ruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1493530640, "answer_id": 43703280, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1494622392, "last_edit_date": 1494622392, "body_markdown": "Make sure the last line of your `.bash_profile` is:\r\n\r\n    export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\n    eval &quot;$(rbenv init -)&quot;\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1504050732, "answer_id": 45949894, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1504050732, "body_markdown": "run:\r\n\r\n    rbenv init\r\n\r\nAfter I ran that, when i set my local rbenv version:\r\n\r\n    rbenv local 2.4.0\r\n\r\nthen my `ruby -v` and my `rbenv local` versions coincided.\r\n\r\nNote: You might also want to exit the directory you&#39;re in and then go back into it, i&#39;ve noticed that was necessary for me in order to get things to work."}], "title": "rbenv not changing ruby version", "view_count": 100596, "answer_count": 19, "code_snippet": ["<code>rbenv versions\n* 1.9.3-p0 (set by /Users/user/.rbenv/version)\n1.9.3-p125\n\nrbenv global\n1.9.3-p0\n\nrbenv rehash\n\nruby -v\nruby 1.8.7 (2011-12-28 patchlevel 357) [universal-darwin11.0]\n\nwhich ruby\n/usr/bin/ruby\n</code>", "<code>rbenv local\nrbenv: no local version configured for this directory\n</code>", "<code>$ env | grep PATH\n</code>", "<code>export PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n</code>", "<code>source</code>", "<code>exec $SHELL -l</code>", "<code>export RBENV_ROOT=\"$HOME/.rbenv\" if which rbenv &gt; /dev/null; then eval \"$(rbenv init -)\"; fi</code>", "<code>[~/.rbenv] $ rbenv versions\n* system (set by /Users/alphadogg/.rbenv/version)\n  2.0.0-p247\n</code>", "<code>[~/.rbenv] $ rbenv local 2.0.0-p247\n</code>", "<code>#PATH for rbenv\nexport PATH=\"$HOME/.rbenv/shims:$PATH\"\n</code>", "<code>export PATH=\"$HOME/.rbenv/bin:$PATH</code>", "<code>~/.rbenv/bin/</code>", "<code>rbenv init</code>", "<code>if which rbenv &gt; /dev/null; then eval \"$(rbenv init -)\"; fi\n</code>", "<code>which ruby</code>", "<code>/usr/bin/ruby</code>", "<code>/Users/&lt;username&gt;/.rbenv/shims/ruby</code>", "<code>rbenv global 1.9.3\n rbenv local --unset\n rbenv shell --unset\n</code>", "<code>rbenv versions</code>", "<code>eval \"$(rbenv init -)\"</code>", "<code>which ruby</code>", "<code> ~/.bash_profile\neval \"$(rbenv init -)\"</code>", "<code>gem install rails</code>", "<code>rbenv help shell</code>", "<code>rbenv shell 1.9.3-p125</code>", "<code>~/.zshenv</code>", "<code>~/.zshrc</code>", "<code># Include rbenv for ZSH\nexport PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n</code>", "<code>~/.zshrc</code>", "<code>\u279c  ~ rbenv install 2.4.0\n\u279c  ~ rbenv global 2.4.0\n\u279c  ~ rbenv global\n2.4.0\n\u279c  ~ ruby -v\nruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]\n</code>", "<code>rbenv</code>", "<code>.ruby-version</code>", "<code>rbenv</code>", "<code>zsh</code>", "<code>rbenv</code>", "<code>.zshrc</code>", "<code># Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git bower rails ruby rbenv gulp npm node nvm sublime)\n</code>", "<code>rbenv</code>", "<code>echo 'if which rbenv &gt; /dev/null; then eval \"$(rbenv init -)\"; fi' &gt;&gt; ~/.bash_profile\nsource ~/.bash_profile\n</code>", "<code>[~]$ rbenv version\n2.3.0 (set by /Users/user/.rbenv/version)\n[~]$ ruby -v\nruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-darwin16]\n[~]$ which ruby\n/usr/local/bin/ruby\n</code>", "<code>$PATH</code>", "<code>brew uninstall ruby</code>", "<code>.bash_profile</code>", "<code>export PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n</code>", "<code>rbenv init\n</code>", "<code>rbenv local 2.4.0\n</code>", "<code>ruby -v</code>", "<code>rbenv local</code>", "<code>PATH</code>", "<code>GEM_HOME</code>", "<code>GEM_PATH</code>", "<code>set --universal fish_user_paths $fish_user_paths ~/.rbenv/shims/\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "gulp"], "creation_date": 1393682940, "body_markdown": "2 manuals about [gulp][1] say that I need to install gulp first globally (with -g flag) and then one more time locally. Why do I need this?\r\n\r\n\r\n  [1]: https://laracasts.com/lessons/gulp-this", "last_edit_date": 1458239668, "up_vote_count": 266, "link": "https://stackoverflow.com/questions/22115400/why-do-we-need-to-install-gulp-globally-and-locally", "_childDocuments_": [{"tags": [], "down_vote_count": 0, "creation_date": 1393683300, "answer_id": 22115441, "path": "stack.gulp.answer", "score": 223, "up_vote_count": 223, "is_accepted": true, "last_activity_date": 1502285038, "last_edit_date": 1502285038, "body_markdown": "When installing a tool globally it&#39;s to be used by a user as a command line utility anywhere, including outside of node projects. Global installs for a node project are *bad* because they make deployment more difficult.\r\n\r\n## npm 5.2+\r\n\r\nThe [`npx`](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) utility bundled with `npm` `5.2` solves this problem. With it you can invoke locally installed utilities like globally installed utilities (but you must begin the command with `npx`). For example, if you want to invoke a locally installed `eslint`, you can do:\r\n\r\n    npx eslint .\r\n\r\n## npm &lt; 5.2\r\n\r\nWhen used in a `script` field of your package.json, `npm` searches `node_modules` for the tool as well as globally installed modules, so the local install is sufficient.\r\n\r\nSo, if you are happy with (in your package.json):\r\n\r\n    &quot;devDependencies&quot;: {\r\n        &quot;gulp&quot;: &quot;3.5.2&quot;\r\n    }\r\n    &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;gulp test&quot;\r\n    }\r\n\r\netc. and running with `npm run test` then you shouldn&#39;t need the global install at all.\r\n\r\nBoth methods are useful for getting people set up with your project since `sudo` isn&#39;t needed. It also means that `gulp` will be updated when the version is bumped in the package.json, so everyone will be using the same version of gulp when developing with your project.\r\n\r\n### Addendum:\r\n\r\nIt appears that gulp has some unusual behaviour when used globally. When used as a global install, gulp looks for a locally installed gulp to pass control to. Therefore a gulp global install requires a gulp local install to work. The answer above still stands though. Local installs are always preferable to global installs.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1393981863, "answer_id": 22186540, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1393981863, "body_markdown": "Technically you don&#39;t need to install it globally if the `node_modules` folder in your local installation is in your `PATH`.  Generally this isn&#39;t a good idea.\r\n\r\nAlternatively if `npm test` references `gulp` then you can just type `npm test` and it&#39;ll run the local gulp.\r\n\r\nI&#39;ve never installed gulp globally -- I think it&#39;s bad form."}, {"tags": [], "down_vote_count": 0, "creation_date": 1423843792, "answer_id": 28503814, "path": "stack.gulp.answer", "score": 73, "up_vote_count": 73, "is_accepted": false, "last_activity_date": 1506702963, "last_edit_date": 1506702963, "body_markdown": "TLDR; Here&#39;s [why](http://dwaynecrooks.tumblr.com/post/110903139442/why-do-we-need-to-install-gulp-globally-and):\r\n\r\n&gt;  The reason this works is because `gulp` tries to run your `gulpfile.js` using your locally installed version of `gulp`, see [here][1]. Hence the reason for a global and local install of gulp.\r\n\r\nEssentially, when you install `gulp` locally the script isn&#39;t in your `PATH` and so you can&#39;t just type `gulp` and expect the shell to find the command. By installing it globally the `gulp` script gets into your `PATH` because the global `node/bin/` directory is most likely on your path.\r\n\r\nTo respect your local dependencies though, `gulp` will use your locally installed version of itself to run the `gulpfile.js`.\r\n\r\n\r\n  [1]: https://github.com/gulpjs/gulp/blob/84df40b0faabc2b61d576154fd1145e2146377ca/bin/gulp.js#L84-L91"}, {"tags": [], "down_vote_count": 1, "creation_date": 1424683536, "answer_id": 28670447, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1424683536, "body_markdown": "I&#39;m not sure if our problem was directly related with installing gulp only locally. But we had to install a bunch of dependencies ourself. This lead to a &quot;huge&quot; package.json and we are not sure if it is really a great idea to install gulp only locally. We had to do so because of our build environment. But I wouldn&#39;t recommend installing gulp not globally if it isn&#39;t absolutely necessary. We faced similar problems as described in the following [blog-post][1]\r\n\r\nNone of these problems arise for any of our developers on their local machines because they all installed gulp globally. On the build system we had the described problems. If someone is interested I could dive deeper into this issue. But right now I just wanted to mention that it isn&#39;t an easy path to install gulp only locally. \r\n\r\n  [1]: http://www.saintsatplay.com/blog/2015/01/resolving-gulp-cannot-find-module-errors#.VOrsBFOG_3E"}, {"tags": [], "down_vote_count": 1, "creation_date": 1430390287, "answer_id": 29965514, "path": "stack.gulp.answer", "score": 72, "up_vote_count": 73, "is_accepted": false, "last_activity_date": 1430390287, "body_markdown": "You can link the globally installed `gulp` locally with\r\n\r\n    npm link gulp"}, {"tags": [], "down_vote_count": 0, "creation_date": 1433881669, "answer_id": 30742196, "path": "stack.gulp.answer", "score": 49, "up_vote_count": 49, "is_accepted": false, "last_activity_date": 1475112489, "last_edit_date": 1475112489, "body_markdown": "The question &quot;*Why do we need to install gulp globally and locally?*&quot; can be broken down into the following two questions:\r\n\r\n 1. *Why do I need to install gulp locally if I&#39;ve already installed it globally?*\r\n\r\n 2. *Why do I need to install gulp globally if I&#39;ve already installed it locally?*\r\n\r\nSeveral others have provided excellent answers to theses questions in isolation, but I thought it would be beneficial to consolidate the information in a unified answer.\r\n\r\n**Why do I need to install gulp locally if I&#39;ve already installed it globally?**\r\n\r\nThe rationale for installing gulp locally is comprised of several reasons:\r\n\r\n 1. Including the dependencies of your project locally ensures the version of gulp (or other dependencies) used is the originally intended version.\r\n 2. Node doesn&#39;t consider global modules by default when using require() (which you need to include gulp within your script).  Ultimately, this is because the path to the global modules isn&#39;t added to NODE_PATH by default.\r\n 3. According to the Node development team, local modules load faster.  I can&#39;t say why this is, but this would seem to be more relevant to node&#39;s use in production (i.e. run-time dependencies) than in development (i.e. dev dependencies).  I suppose this is a legitimate reason as some may care about whatever minor speed advantage is gained loading local vs. global modules, but feel free to raise your eyebrow at this reason.\r\n\r\n**Why do I need to install gulp globally if I&#39;ve already installed it locally?**\r\n\r\n 1. The rationale for installing gulp globally is really just the convenience  of having the gulp executable automatically found within your system path.\r\n  \r\n\r\nTo avoid installing locally you can use `npm link [package]`, but the link command as well as the `install --global` command doesn&#39;t seem to support the `--save-dev` option which means there doesn&#39;t appear to be an easy way to install gulp globally and then easily add whatever version that is to your local package.json file.\r\n\r\nUltimately, I believe it makes more sense to have the option of using global modules to avoid having to duplicate the installation of common tools across all your projects, especially in the case of development tools such as grunt, gulp, jshint, etc.  Unfortunately it seems you end up fighting the tools a bit when you go against the grain."}, {"tags": [], "down_vote_count": 0, "creation_date": 1504750767, "answer_id": 46086873, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1504750767, "body_markdown": "You can try Dawn, it&#39;s simpler\r\n\r\n[https://github.com/alibaba/dawn][1]\r\n\r\nexample:\r\n\r\nInstall\r\n\r\n    npm i dawn -g\r\n\r\n\r\nAdd a `.dawn.yml` file to your project\r\n\r\n\r\n    build:\r\n      - name: webpack\r\n        output: ./dist\r\n        entry: ./src/*.js\r\n        template: ./assets/*.html\r\n\r\n\r\nExecute the following command\r\n\r\n    dn build\r\n\r\nYou can complete the build\r\n\r\n\r\n  [1]: https://github.com/alibaba/dawn"}], "title": "Why do we need to install gulp globally and locally?", "view_count": 112911, "answer_count": 7, "code_snippet": ["<code>npx</code>", "<code>npm</code>", "<code>5.2</code>", "<code>npx</code>", "<code>eslint</code>", "<code>npx eslint .\n</code>", "<code>script</code>", "<code>npm</code>", "<code>node_modules</code>", "<code>\"devDependencies\": {\n    \"gulp\": \"3.5.2\"\n}\n\"scripts\": {\n    \"test\": \"gulp test\"\n}\n</code>", "<code>npm run test</code>", "<code>sudo</code>", "<code>gulp</code>", "<code>./node_modules/.bin/gulp</code>", "<code>gulp</code>", "<code>coffee</code>", "<code>alias gulp=\"node_modules/.bin/gulp\"</code>", "<code>gulp</code>", "<code>Local gulp not found in ...</code>", "<code>gulp</code>", "<code>gulpfile.js</code>", "<code>gulp</code>", "<code>gulp</code>", "<code>PATH</code>", "<code>gulp</code>", "<code>gulp</code>", "<code>PATH</code>", "<code>node/bin/</code>", "<code>gulp</code>", "<code>gulpfile.js</code>", "<code>gulp</code>", "<code>npm link gulp\n</code>", "<code>npm link</code>", "<code>npm link [package]</code>", "<code>install --global</code>", "<code>--save-dev</code>", "<code>node_modules</code>", "<code>PATH</code>", "<code>npm test</code>", "<code>gulp</code>", "<code>npm test</code>", "<code>npm i dawn -g\n</code>", "<code>.dawn.yml</code>", "<code>build:\n  - name: webpack\n    output: ./dist\n    entry: ./src/*.js\n    template: ./assets/*.html\n</code>", "<code>dn build\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "angularjs", "angularjs-service"], "creation_date": 1367502089, "body_markdown": "How do you manage configuration variables/constants for different environments?\r\n\r\nThis could be an example:  \r\n\r\nMy rest API is reachable on `localhost:7080/myapi/`, but my friend that works on the same code under Git version control has the API deployed on his Tomcat on `localhost:8099/hisapi/`.\r\n\r\nSupposing that we have something like this : \r\n\r\n    angular\r\n        .module(&#39;app&#39;, [&#39;ngResource&#39;])\r\n        \r\n        .constant(&#39;API_END_POINT&#39;,&#39;&lt;local_end_point&gt;&#39;)\r\n        \r\n        .factory(&#39;User&#39;, function($resource, API_END_POINT) {\r\n            return $resource(API_END_POINT + &#39;user&#39;);\r\n        });\r\n\r\nHow do I dynamically inject the correct value of the API endpoint, depending on the environment?\r\n\r\nIn PHP I usually do this kind of stuff with a `config.username.xml` file, merging the basic configuration file (config.xml) with the local environment configuration file recognised by the name of the user. But I don&#39;t know how to manage this kind of thing in JavaScript?\r\n", "last_edit_date": 1429028084, "up_vote_count": 215, "link": "https://stackoverflow.com/questions/16339595/how-do-i-configure-different-environments-in-angular-js", "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1367503444, "answer_id": 16340162, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1367503444, "body_markdown": "Good question!\r\n\r\nOne solution could be to continue using your config.xml file, and provide api endpoint information from the backend to your generated html, like this (example in php):\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n    angular.module(&#39;YourApp&#39;).constant(&#39;API_END_POINT&#39;, &#39;&lt;?php echo $apiEndPointFromBackend; ?&gt;&#39;);\r\n    &lt;/script&gt;\r\n\r\nMaybe not a pretty solution, but it would work.\r\n\r\nAnother solution could be to keep the `API_END_POINT` constant value as it should be in production, and only modify your hosts-file to point that url to your local api instead.\r\n\r\nOr maybe a solution using `localStorage` for overrides, like this:\r\n\r\n    .factory(&#39;User&#39;,[&#39;$resource&#39;,&#39;API_END_POINT&#39;],function($resource,API_END_POINT){\r\n       var myApi = localStorage.get(&#39;myLocalApiOverride&#39;);\r\n       return $resource((myApi || API_END_POINT) + &#39;user&#39;);\r\n    });"}, {"tags": [], "down_vote_count": 2, "creation_date": 1367504166, "answer_id": 16340438, "path": "stack.gulp.answer", "score": 75, "up_vote_count": 77, "is_accepted": false, "last_activity_date": 1411074990, "last_edit_date": 1411074990, "body_markdown": "One cool solution might be separating all environment-specific values into some separate angular module, that all other modules depend on:\r\n\r\n    angular.module(&#39;configuration&#39;, [])\r\n           .constant(&#39;API_END_POINT&#39;,&#39;123456&#39;)\r\n           .constant(&#39;HOST&#39;,&#39;localhost&#39;);\r\n\r\nThen your modules that need those entries can declare a dependency on it:\r\n\r\n    angular.module(&#39;services&#39;,[&#39;configuration&#39;])\r\n           .factory(&#39;User&#39;,[&#39;$resource&#39;,&#39;API_END_POINT&#39;],function($resource,API_END_POINT){\r\n               return $resource(API_END_POINT + &#39;user&#39;);\r\n           });\r\n\r\n\r\nNow you could think about further cool stuff:\r\n\r\nThe module, that contains the configuration can be separated into configuration.js, that will be included at your page.\r\n\r\nThis script can be easily edited by each of you, as long as you don\u2019t check this separate file into git. But it&#39;s easier to not check in the configuration if it is in a separate file. Also, you could branch it locally.\r\n\r\nNow, if you have a build-system, like ANT or Maven, your further steps could be implementing some placeholders for the values API_END_POINT, that will be replaced during build-time, with your specific values.\r\n\r\nOr you have your `configuration_a.js` and `configuration_b.js` and decide at the backend which to include.\r\n"}, {"tags": [], "down_vote_count": 10, "creation_date": 1367504287, "answer_id": 16340481, "path": "stack.gulp.answer", "score": -8, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1367504287, "last_edit_date": 1495535478, "body_markdown": "Have you seen this [question][1] and its answer?\r\n\r\nYou can set a globally valid value for you app like this:\r\n\r\n    app.value(&#39;key&#39;, &#39;value&#39;);\r\n\r\nand then use it in your services. You could move this code to a config.js file and execute it on page load or another convenient moment.\r\n\r\n  [1]: https://stackoverflow.com/questions/13015523/angular-js-is-value-the-proper-way-to-set-app-wide-constant-and-how-to-retri?rq=1"}, {"tags": [], "down_vote_count": 4, "creation_date": 1373968092, "answer_id": 17673261, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1373968092, "body_markdown": "You could use `lvh.me:9000` to access your AngularJS app, (`lvh.me` just points to 127.0.0.1) and then specify a different endpoint if `lvh.me` is the host:\r\n\r\n\r\n    app.service(&quot;Configuration&quot;, function() {\r\n      if (window.location.host.match(/lvh\\.me/)) {\r\n        return this.API = &#39;http://localhost\\\\:7080/myapi/&#39;;\r\n      } else {\r\n        return this.API = &#39;http://localhost\\\\:8099/hisapi/&#39;;\r\n      }\r\n    });\r\n\r\nAnd then inject the Configuration service and use `Configuration.API` wherever you need to access the API:\r\n   \r\n    $resource(Configuration.API + &#39;/endpoint/:id&#39;, {\r\n      id: &#39;@id&#39;\r\n    });\r\n     \r\nA tad clunky, but works fine for me, albeit in a slightly different situation (API endpoints differ in production and development)."}, {"tags": [], "down_vote_count": 1, "creation_date": 1377026224, "answer_id": 18343298, "path": "stack.gulp.answer", "score": 206, "up_vote_count": 207, "is_accepted": true, "last_activity_date": 1457938367, "last_edit_date": 1457938367, "body_markdown": "I&#39;m a little late to the thread, but if you&#39;re using [Grunt][1] I&#39;ve had great success with [`grunt-ng-constant`][2].\r\n\r\nThe config section for `ngconstant` in my `Gruntfile.js` looks like\r\n\r\n    ngconstant: {\r\n      options: {\r\n        name: &#39;config&#39;,\r\n        wrap: &#39;&quot;use strict&quot;;\\n\\n{%= __ngModule %}&#39;\r\n        space: &#39;  &#39;\r\n      },\r\n      development: {\r\n        options: {\r\n          dest: &#39;&lt;%= yeoman.app %&gt;/scripts/config.js&#39;\r\n        },\r\n        constants: {\r\n          ENV: &#39;development&#39;\r\n        }\r\n      },\r\n      production: {\r\n        options: {\r\n          dest: &#39;&lt;%= yeoman.dist %&gt;/scripts/config.js&#39;\r\n        },\r\n        constants: {\r\n          ENV: &#39;production&#39;\r\n        }\r\n      }\r\n    }\r\n\r\nThe tasks that use `ngconstant` look like\r\n\r\n    grunt.registerTask(&#39;server&#39;, function (target) {\r\n      if (target === &#39;dist&#39;) {\r\n        return grunt.task.run([\r\n          &#39;build&#39;,\r\n          &#39;open&#39;,\r\n          &#39;connect:dist:keepalive&#39;\r\n        ]);\r\n      }\r\n\r\n      grunt.task.run([\r\n        &#39;clean:server&#39;,\r\n        &#39;ngconstant:development&#39;,\r\n        &#39;concurrent:server&#39;,\r\n        &#39;connect:livereload&#39;,\r\n        &#39;open&#39;,\r\n        &#39;watch&#39;\r\n      ]);\r\n    });\r\n\r\n    grunt.registerTask(&#39;build&#39;, [\r\n      &#39;clean:dist&#39;,\r\n      &#39;ngconstant:production&#39;,\r\n      &#39;useminPrepare&#39;,\r\n      &#39;concurrent:dist&#39;,\r\n      &#39;concat&#39;,\r\n      &#39;copy&#39;,\r\n      &#39;cdnify&#39;,\r\n      &#39;ngmin&#39;,\r\n      &#39;cssmin&#39;,\r\n      &#39;uglify&#39;,\r\n      &#39;rev&#39;,\r\n      &#39;usemin&#39;\r\n    ]);\r\n\r\nSo running `grunt server` will generate a `config.js` file in `app/scripts/` that looks like\r\n\r\n    &quot;use strict&quot;;\r\n    angular.module(&quot;config&quot;, []).constant(&quot;ENV&quot;, &quot;development&quot;);\r\n\r\nFinally, I declare the dependency on whatever modules need it:\r\n\r\n    // the &#39;config&#39; dependency is generated via grunt\r\n    var app = angular.module(&#39;myApp&#39;, [ &#39;config&#39; ]);\r\n\r\nNow my constants can be dependency injected where needed. E.g.,\r\n\r\n    app.controller(&#39;MyController&#39;, [&#39;ENV&#39;, function( ENV ) {\r\n      if( ENV === &#39;production&#39; ) {\r\n        ...\r\n      }\r\n    }]);\r\n\r\n\r\n  [1]: http://gruntjs.com/\r\n  [2]: https://npmjs.org/package/grunt-ng-constant"}, {"tags": [], "down_vote_count": 0, "creation_date": 1399968580, "answer_id": 23625898, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1399968580, "body_markdown": "If you&#39;re using [Brunch][1], the plugin [Constangular][2] helps you to manage variables for different environments.\r\n\r\n\r\n  [1]: http://brunch.io\r\n  [2]: https://www.npmjs.org/package/constangular-brunch"}, {"tags": [], "down_vote_count": 0, "creation_date": 1420500518, "answer_id": 27789701, "path": "stack.gulp.answer", "score": 30, "up_vote_count": 30, "is_accepted": false, "last_activity_date": 1454704004, "last_edit_date": 1454704004, "body_markdown": "For [Gulp][1] users, [gulp-ng-constant][2] is also useful combined with [gulp-concat][3], [event-stream][4] and [yargs][5].\r\n\r\n    var concat = require(&#39;gulp-concat&#39;),\r\n        es = require(&#39;event-stream&#39;),\r\n        gulp = require(&#39;gulp&#39;),\r\n        ngConstant = require(&#39;gulp-ng-constant&#39;),\r\n        argv = require(&#39;yargs&#39;).argv;\r\n\r\n    var enviroment = argv.env || &#39;development&#39;;\r\n    \r\n    gulp.task(&#39;config&#39;, function () {\r\n      var config = gulp.src(&#39;config/&#39; + enviroment + &#39;.json&#39;)\r\n        .pipe(ngConstant({name: &#39;app.config&#39;}));\r\n      var scripts = gulp.src(&#39;js/*&#39;);\r\n      return es.merge(config, scripts)\r\n        .pipe(concat(&#39;app.js&#39;))\r\n        .pipe(gulp.dest(&#39;app/dist&#39;))\r\n        .on(&#39;error&#39;, function() { });\r\n    });\r\n\r\nIn my config folder I have these files:\r\n\r\n    ls -l config\r\n    total 8\r\n    -rw-r--r--+ 1 .. ci.json\r\n    -rw-r--r--+ 1 .. development.json\r\n    -rw-r--r--+ 1 .. production.json\r\n\r\nThen you can run `gulp config --env development` and that will create something like this:\r\n\r\n    angular.module(&quot;app.config&quot;, [])\r\n    .constant(&quot;foo&quot;, &quot;bar&quot;)\r\n    .constant(&quot;ngConstant&quot;, true);\r\n\r\nI also have this spec:\r\n\r\n    beforeEach(module(&#39;app&#39;));\r\n\r\n    it(&#39;loads the config&#39;, inject(function(config) {\r\n      expect(config).toBeTruthy();\r\n    }));\r\n\r\n  [1]: http://gulpjs.com\r\n  [2]: https://www.npmjs.com/package/gulp-ng-constant\r\n  [3]: https://www.npmjs.com/package/gulp-concat\r\n  [4]: https://www.npmjs.com/package/event-stream\r\n  [5]: https://www.npmjs.com/package/yargs"}, {"tags": [], "down_vote_count": 0, "creation_date": 1437887607, "answer_id": 31633882, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1437887607, "body_markdown": "To achieve that, I suggest you to use AngularJS Environment Plugin: https://www.npmjs.com/package/angular-environment\r\n\r\nHere&#39;s an example:\r\n\r\n    angular.module(&#39;yourApp&#39;, [&#39;environment&#39;]).\r\n    config(function(envServiceProvider) {\r\n        // set the domains and variables for each environment \r\n        envServiceProvider.config({\r\n            domains: {\r\n                development: [&#39;localhost&#39;, &#39;dev.local&#39;],\r\n                production: [&#39;acme.com&#39;, &#39;acme.net&#39;, &#39;acme.org&#39;]\r\n                // anotherStage: [&#39;domain1&#39;, &#39;domain2&#39;], \r\n                // anotherStage: [&#39;domain1&#39;, &#39;domain2&#39;] \r\n            },\r\n            vars: {\r\n                development: {\r\n                    apiUrl: &#39;//localhost/api&#39;,\r\n                    staticUrl: &#39;//localhost/static&#39;\r\n                    // antoherCustomVar: &#39;lorem&#39;, \r\n                    // antoherCustomVar: &#39;ipsum&#39; \r\n                },\r\n                production: {\r\n                    apiUrl: &#39;//api.acme.com/v2&#39;,\r\n                    staticUrl: &#39;//static.acme.com&#39;\r\n                    // antoherCustomVar: &#39;lorem&#39;, \r\n                    // antoherCustomVar: &#39;ipsum&#39; \r\n                }\r\n                // anotherStage: { \r\n                //  customVar: &#39;lorem&#39;, \r\n                //  customVar: &#39;ipsum&#39; \r\n                // } \r\n            }\r\n        });\r\n \r\n        // run the environment check, so the comprobation is made \r\n        // before controllers and services are built \r\n        envServiceProvider.check();\r\n    });\r\n\r\nAnd then, you can call the variables from your controllers such as this:\r\n\r\n    envService.read(&#39;apiUrl&#39;);\r\n\r\nHope it helps."}, {"tags": [], "down_vote_count": 0, "creation_date": 1449829483, "answer_id": 34221231, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1449829483, "body_markdown": "We could also do something like this. \r\n\r\n    (function(){\r\n        &#39;use strict&#39;;\r\n    \r\n        angular.module(&#39;app&#39;).service(&#39;env&#39;, function env() {\r\n    \r\n            var _environments = {\r\n            \tlocal: {\r\n            \t\thost: &#39;localhost:3000&#39;,\r\n            \t\tconfig: {\r\n            \t\t\tapiroot: &#39;http://localhost:3000&#39;\r\n            \t\t}\r\n            \t},\r\n            \tdev: {\r\n            \t\thost: &#39;dev.com&#39;,\r\n            \t\tconfig: {\r\n            \t\t\tapiroot: &#39;http://localhost:3000&#39;\r\n            \t\t}\r\n            \t},\r\n            \ttest: {\r\n            \t\thost: &#39;test.com&#39;,\r\n            \t\tconfig: {\r\n            \t\t\tapiroot: &#39;http://localhost:3000&#39;\r\n            \t\t}\r\n            \t},\r\n            \tstage: {\r\n            \t\thost: &#39;stage.com&#39;,\r\n            \t\tconfig: {\r\n                \tapiroot: &#39;staging&#39;\r\n            \t\t}\r\n            \t},\r\n            \tprod: {\r\n            \t\thost: &#39;production.com&#39;,\r\n            \t\tconfig: {\r\n            \t\t\tapiroot: &#39;production&#39;\r\n            \t\t}\r\n            \t}\r\n            },\r\n            _environment;\r\n    \r\n            return {\r\n            \tgetEnvironment: function(){\r\n            \t\tvar host = window.location.host;\r\n            \t\tif(_environment){\r\n            \t\t\treturn _environment;\r\n            \t\t}\r\n    \r\n            \t\tfor(var environment in _environments){\r\n            \t\t\tif(typeof _environments[environment].host &amp;&amp; _environments[environment].host == host){\r\n            \t\t\t\t_environment = environment;\r\n            \t\t\t\treturn _environment;\r\n            \t\t\t}\r\n            \t\t}\r\n    \r\n            \t\treturn null;\r\n            \t},\r\n            \tget: function(property){\r\n            \t\treturn _environments[this.getEnvironment()].config[property];\r\n            \t}\r\n            }\r\n    \r\n        });\r\n    \r\n    })();\r\n\r\nAnd in your `controller/service`, we can inject the dependency and call the get method with property to be accessed. \r\n\r\n    (function() {\r\n        &#39;use strict&#39;;\r\n    \r\n        angular.module(&#39;app&#39;).service(&#39;apiService&#39;, apiService);\r\n    \r\n        apiService.$inject = [&#39;configurations&#39;, &#39;$q&#39;, &#39;$http&#39;, &#39;env&#39;];\r\n    \r\n        function apiService(config, $q, $http, env) {\r\n    \r\n            var service = {};\r\n            /* **********APIs **************** */\r\n            service.get = function() {\r\n                return $http.get(env.get(&#39;apiroot&#39;) + &#39;/api/yourservice&#39;);\r\n            };\r\n            \r\n            return service;\r\n        }\r\n    \r\n    })();\r\n\r\n`$http.get(env.get(&#39;apiroot&#39;)` would return the url based on the host environment.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1466575913, "answer_id": 37959895, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1481922546, "last_edit_date": 1481922546, "body_markdown": "Very late to the thread, but a technique I&#39;ve used, pre-Angular, is to take advantage of JSON and the flexibility of JS to dynamically reference collection keys, and use inalienable facts of the environment (host server name, current browser language, etc.) as inputs to selectively discriminate/prefer suffixed key names within a JSON data structure.\r\n\r\nThis provides not merely deploy-environment context (per OP) but any arbitrary context (such as language) to provide i18n or any other variance required simultaneously, and (ideally) within a single configuration manifest, without duplication, and readably obvious.\r\n\r\n   IN ABOUT 10 LINES VANILLA JS\r\n\r\nOverly-simplified but classic example: An API endpoint base URL in a JSON-formatted properties file that varies per environment where (natch) the host server will also vary:\r\n\r\n        ...\r\n        &#39;svcs&#39;: {\r\n            &#39;VER&#39;: &#39;2.3&#39;,\r\n            &#39;API@localhost&#39;: &#39;http://localhost:9090/&#39;,\r\n            &#39;API@www.uat.productionwebsite.com&#39;: &#39;https://www.uat.productionwebsite.com:9090/res/&#39;,\r\n            &#39;API@www.productionwebsite.com&#39;: &#39;https://www.productionwebsite.com:9090/api/res/&#39;\r\n        },\r\n        ...\r\n\r\nA key to the discrimination function is simply the server hostname in the request.\r\n\r\nThis, naturally, can be combined with an additional key based on the user&#39;s language settings:\r\n\r\n        ...\r\n        &#39;app&#39;: {\r\n            &#39;NAME&#39;: &#39;Ferry Reservations&#39;,\r\n            &#39;NAME@fr&#39;: &#39;R&#233;servations de ferry&#39;,\r\n            &#39;NAME@de&#39;: &#39;F&#228;hren Reservierungen&#39;\r\n        },\r\n        ...\r\n\r\nThe scope of the discrimination/preference can be confined to individual keys (as above) where the &quot;base&quot; key is only overwritten if there&#39;s a matching key+suffix for the inputs to the function -- or an entire structure, and that structure itself recursively parsed for matching discrimination/preference suffixes:\r\n\r\n        &#39;help&#39;: {\r\n            &#39;BLURB&#39;: &#39;This pre-production environment is not supported. Contact Development Team with questions.&#39;,\r\n            &#39;PHONE&#39;: &#39;808-867-5309&#39;,\r\n            &#39;EMAIL&#39;: &#39;coder.jen@lostnumber.com&#39;\r\n        },\r\n        &#39;help@www.productionwebsite.com&#39;: {\r\n            &#39;BLURB&#39;: &#39;Please contact Customer Service Center&#39;,\r\n            &#39;BLURB@fr&#39;: &#39;S\\&#39;il vous pla&#238;t communiquer avec notre Centre de service &#224; la client&#232;le&#39;,\r\n            &#39;BLURB@de&#39;: &#39;Bitte kontaktieren Sie unseren Kundendienst!!1!&#39;,\r\n            &#39;PHONE&#39;: &#39;1-800-CUS-TOMR&#39;,\r\n            &#39;EMAIL&#39;: &#39;customer.service@productionwebsite.com&#39;\r\n        },\r\n\r\nSO, if a visiting user to the production website has German (**de**) language preference setting, the above configuration would collapse to:\r\n\r\n        &#39;help&#39;: {\r\n            &#39;BLURB&#39;: &#39;Bitte kontaktieren Sie unseren Kundendienst!!1!&#39;,\r\n            &#39;PHONE&#39;: &#39;1-800-CUS-TOMR&#39;,\r\n            &#39;EMAIL&#39;: &#39;customer.service@productionwebsite.com&#39;\r\n        },\r\n\r\nWhat does such a magical preference/discrimination JSON-rewriting function look like? Not much:\r\n\r\n    // prefer(object,suffix|[suffixes]) by/par/durch storsoc\r\n    // prefer({ a: &#39;apple&#39;, a@env: &#39;banana&#39;, b: &#39;carrot&#39; },&#39;env&#39;) -&gt; { a: &#39;banana&#39;, b: &#39;carrot&#39; }\r\n    function prefer(o,sufs) {\r\n        for (var key in o) {\r\n            if (!o.hasOwnProperty(key)) continue; // skip non-instance props\r\n            if(key.split(&#39;@&#39;)[1]) { // suffixed!\r\n                // replace root prop with the suffixed prop if among prefs\r\n                if(o[key] &amp;&amp; sufs.indexOf(key.split(&#39;@&#39;)[1]) &gt; -1) o[key.split(&#39;@&#39;)[0]] = JSON.parse(JSON.stringify(o[key]));\r\n\r\n                // and nuke the suffixed prop to tidy up\r\n                delete o[key];\r\n\r\n                // continue with root key ...\r\n                key = key.split(&#39;@&#39;)[0];\r\n            }\r\n\r\n            // ... in case it&#39;s a collection itself, recurse it!\r\n            if(o[key] &amp;&amp; typeof o[key] === &#39;object&#39;) prefer(o[key],sufs);\r\n\r\n        };\r\n    };\r\n\r\n\r\nIn our implementations, which include Angular and pre-Angular websites, we simply bootstrap the configuration well ahead of other resource calls by placing the JSON within a self-executing JS closure, including the prefer() function, and fed basic properties of hostname and language-code (and accepts any additional arbitrary suffixes you might need):\r\n\r\n    (function(prefs){ var props = {\r\n        &#39;svcs&#39;: {\r\n            &#39;VER&#39;: &#39;2.3&#39;,\r\n            &#39;API@localhost&#39;: &#39;http://localhost:9090/&#39;,\r\n            &#39;API@www.uat.productionwebsite.com&#39;: &#39;https://www.uat.productionwebsite.com:9090/res/&#39;,\r\n            &#39;API@www.productionwebsite.com&#39;: &#39;https://www.productionwebsite.com:9090/api/res/&#39;\r\n        },\r\n        ...\r\n        /* yadda yadda moar JSON und bisque */\r\n        \r\n        function prefer(o,sufs) {\r\n            // body of prefer function, broken for e.g.\r\n        };\r\n\r\n        // convert string and comma-separated-string to array .. and process it\r\n        prefs = [].concat( ( prefs.split ? prefs.split(&#39;,&#39;) : prefs ) || []);\r\n        prefer(props,prefs);\r\n        window.app_props = JSON.parse(JSON.stringify(props));\r\n    })([location.hostname, ((window.navigator.userLanguage || window.navigator.language).split(&#39;-&#39;)[0])  ] );\r\n\r\n\r\nA pre-Angular site would now have a collapsed (no @ suffixed keys) **window.app_props** to refer to.\r\n\r\nAn Angular site, as a bootstrap/init step, simply copies the dead-dropped props object into $rootScope, and (optionally) destroys it from global/window scope\r\n\r\n    app.constant(&#39;props&#39;,angular.copy(window.app_props || {})).run( function ($rootScope,props) { $rootScope.props = props; delete window.app_props;} );\r\n\r\nto be subsequently injected into controllers:\r\n\r\n    app.controller(&#39;CtrlApp&#39;,function($log,props){ ... } );\r\n\r\nor referred to from bindings in views:\r\n\r\n    &lt;span&gt;{{ props.help.blurb }} {{ props.help.email }}&lt;/span&gt;\r\n\r\n\r\nCaveats? The @ character is not valid JS/JSON variable/key naming, but so far accepted. If that&#39;s a deal-breaker, substitute for any convention you like, such as &quot;__&quot; (double underscore) as long as you stick to it.\r\n\r\nThe technique could be applied server-side, ported to Java or C# but your efficiency/compactness may vary.\r\n\r\nAlternately, the function/convention could be part of your front-end compile script, so that the full gory all-environment/all-language JSON is never transmitted over the wire.\r\n\r\n**UPDATE**\r\n\r\nWe&#39;ve evolved usage of this technique to allow multiple suffixes to a key, to avoid being forced to use collections (you still can, as deeply as you want), and as well to honor the order of the preferred suffixes.\r\n\r\nExample (also see working [jsFiddle][1]):\r\n\r\n    var o = { &#39;a&#39;:&#39;apple&#39;, &#39;a@dev&#39;:&#39;apple-dev&#39;, &#39;a@fr&#39;:&#39;pomme&#39;,\r\n              &#39;b&#39;:&#39;banana&#39;, &#39;b@fr&#39;:&#39;banane&#39;, &#39;b@dev&amp;fr&#39;:&#39;banane-dev&#39;,\r\n              &#39;c&#39;:{ &#39;o&#39;:&#39;c-dot-oh&#39;, &#39;o@fr&#39;:&#39;c-point-oh&#39; }, &#39;c@dev&#39;: { &#39;o&#39;:&#39;c-dot-oh-dev&#39;, &#39;o@fr&#39;:&#39;c-point-oh-dev&#39; } };\r\n    \r\n    /*1*/ prefer(o,&#39;dev&#39;);        // { a:&#39;apple-dev&#39;, b:&#39;banana&#39;,     c:{o:&#39;c-dot-oh-dev&#39;}   }\r\n    /*2*/ prefer(o,&#39;fr&#39;);         // { a:&#39;pomme&#39;,     b:&#39;banane&#39;,     c:{o:&#39;c-point-oh&#39;}     }\r\n    /*3*/ prefer(o,&#39;dev,fr&#39;);     // { a:&#39;apple-dev&#39;, b:&#39;banane-dev&#39;, c:{o:&#39;c-point-oh-dev&#39;} }\r\n    /*4*/ prefer(o,[&#39;fr&#39;,&#39;dev&#39;]); // { a:&#39;pomme&#39;,     b:&#39;banane-dev&#39;, c:{o:&#39;c-point-oh-dev&#39;} }\r\n    /*5*/ prefer(o);              // { a:&#39;apple&#39;,     b:&#39;banana&#39;,     c:{o:&#39;c-dot-oh&#39;}       }\r\n\r\n**1/2** (basic usage) prefers &#39;@dev&#39; keys, discards all other suffixed keys\r\n\r\n**3** prefers &#39;@dev&#39; over &#39;@fr&#39;, prefers &#39;@dev&amp;fr&#39; over all others\r\n\r\n**4** (same as 3 but prefers &#39;@fr&#39; over &#39;@dev&#39;)\r\n\r\n**5** no preferred suffixes, drops ALL suffixed properties\r\n\r\nIt accomplishes this by scoring each suffixed property and promoting the value of a suffixed property to the non-suffixed property when iterating over the properties and finding a higher-scored suffix.\r\n\r\nSome efficiencies in this version, including removing dependence on JSON to deep-copy, and only recursing into objects that survive the scoring round at their depth:\r\n\r\n    function prefer(obj,suf) {\r\n        function pr(o,s) {\r\n            for (var p in o) {\r\n                if (!o.hasOwnProperty(p) || !p.split(&#39;@&#39;)[1] || p.split(&#39;@@&#39;)[1] ) continue; // ignore: proto-prop OR not-suffixed OR temp prop score\r\n                var b = p.split(&#39;@&#39;)[0]; // base prop name\r\n                if(!!!o[&#39;@@&#39;+b]) o[&#39;@@&#39;+b] = 0; // +score placeholder\r\n                var ps = p.split(&#39;@&#39;)[1].split(&#39;&amp;&#39;); // array of property suffixes\r\n                var sc = 0; var v = 0; // reset (running)score and value\r\n                while(ps.length) {\r\n                    // suffix value: index(of found suffix in prefs)^10\r\n                    v = Math.floor(Math.pow(10,s.indexOf(ps.pop())));\r\n                    if(!v) { sc = 0; break; } // found suf NOT in prefs, zero score (delete later)\r\n                    sc += v;\r\n                }\r\n                if(sc &gt; o[&#39;@@&#39;+b]) { o[&#39;@@&#39;+b] = sc; o[b] = o[p]; } // hi-score! promote to base prop\r\n                delete o[p];\r\n            }\r\n            for (var p in o) if(p.split(&#39;@@&#39;)[1]) delete o[p]; // remove scores\r\n            for (var p in o) if(typeof o[p] === &#39;object&#39;) pr(o[p],s); // recurse surviving objs\r\n        }\r\n        if( typeof obj !== &#39;object&#39; ) return; // validate\r\n        suf = ( (suf || suf === 0 ) &amp;&amp; ( suf.length || suf === parseFloat(suf) ) ? suf.toString().split(&#39;,&#39;) : []); // array|string|number|comma-separated-string -&gt; array-of-strings\r\n        pr(obj,suf.reverse());\r\n    }\r\n\r\n\r\n  [1]: https://jsfiddle.net/b236vb0s/"}], "title": "How do I configure different environments in Angular.js?", "view_count": 92367, "answer_count": 10, "code_snippet": ["<code>localhost:7080/myapi/</code>", "<code>localhost:8099/hisapi/</code>", "<code>angular\n    .module('app', ['ngResource'])\n\n    .constant('API_END_POINT','&lt;local_end_point&gt;')\n\n    .factory('User', function($resource, API_END_POINT) {\n        return $resource(API_END_POINT + 'user');\n    });\n</code>", "<code>config.username.xml</code>", "<code>grunt-ng-constant</code>", "<code>ngconstant</code>", "<code>Gruntfile.js</code>", "<code>ngconstant: {\n  options: {\n    name: 'config',\n    wrap: '\"use strict\";\\n\\n{%= __ngModule %}',\n    space: '  '\n  },\n  development: {\n    options: {\n      dest: '&lt;%= yeoman.app %&gt;/scripts/config.js'\n    },\n    constants: {\n      ENV: 'development'\n    }\n  },\n  production: {\n    options: {\n      dest: '&lt;%= yeoman.dist %&gt;/scripts/config.js'\n    },\n    constants: {\n      ENV: 'production'\n    }\n  }\n}\n</code>", "<code>ngconstant</code>", "<code>grunt.registerTask('server', function (target) {\n  if (target === 'dist') {\n    return grunt.task.run([\n      'build',\n      'open',\n      'connect:dist:keepalive'\n    ]);\n  }\n\n  grunt.task.run([\n    'clean:server',\n    'ngconstant:development',\n    'concurrent:server',\n    'connect:livereload',\n    'open',\n    'watch'\n  ]);\n});\n\ngrunt.registerTask('build', [\n  'clean:dist',\n  'ngconstant:production',\n  'useminPrepare',\n  'concurrent:dist',\n  'concat',\n  'copy',\n  'cdnify',\n  'ngmin',\n  'cssmin',\n  'uglify',\n  'rev',\n  'usemin'\n]);\n</code>", "<code>grunt server</code>", "<code>config.js</code>", "<code>app/scripts/</code>", "<code>\"use strict\";\nangular.module(\"config\", []).constant(\"ENV\", \"development\");\n</code>", "<code>// the 'config' dependency is generated via grunt\nvar app = angular.module('myApp', [ 'config' ]);\n</code>", "<code>app.controller('MyController', ['ENV', function( ENV ) {\n  if( ENV === 'production' ) {\n    ...\n  }\n}]);\n</code>", "<code>'ngconstant:development'</code>", "<code>'serve'</code>", "<code>'gruntfile'</code>", "<code>tasks: ['ngconstant:development']</code>", "<code>grunt serve</code>", "<code>package: grunt.file.readJSON('development.json')</code>", "<code>angular.module('configuration', [])\n       .constant('API_END_POINT','123456')\n       .constant('HOST','localhost');\n</code>", "<code>angular.module('services',['configuration'])\n       .factory('User',['$resource','API_END_POINT'],function($resource,API_END_POINT){\n           return $resource(API_END_POINT + 'user');\n       });\n</code>", "<code>configuration_a.js</code>", "<code>configuration_b.js</code>", "<code>var concat = require('gulp-concat'),\n    es = require('event-stream'),\n    gulp = require('gulp'),\n    ngConstant = require('gulp-ng-constant'),\n    argv = require('yargs').argv;\n\nvar enviroment = argv.env || 'development';\n\ngulp.task('config', function () {\n  var config = gulp.src('config/' + enviroment + '.json')\n    .pipe(ngConstant({name: 'app.config'}));\n  var scripts = gulp.src('js/*');\n  return es.merge(config, scripts)\n    .pipe(concat('app.js'))\n    .pipe(gulp.dest('app/dist'))\n    .on('error', function() { });\n});\n</code>", "<code>ls -l config\ntotal 8\n-rw-r--r--+ 1 .. ci.json\n-rw-r--r--+ 1 .. development.json\n-rw-r--r--+ 1 .. production.json\n</code>", "<code>gulp config --env development</code>", "<code>angular.module(\"app.config\", [])\n.constant(\"foo\", \"bar\")\n.constant(\"ngConstant\", true);\n</code>", "<code>beforeEach(module('app'));\n\nit('loads the config', inject(function(config) {\n  expect(config).toBeTruthy();\n}));\n</code>", "<code>angular.module('yourApp', ['environment']).\nconfig(function(envServiceProvider) {\n    // set the domains and variables for each environment \n    envServiceProvider.config({\n        domains: {\n            development: ['localhost', 'dev.local'],\n            production: ['acme.com', 'acme.net', 'acme.org']\n            // anotherStage: ['domain1', 'domain2'], \n            // anotherStage: ['domain1', 'domain2'] \n        },\n        vars: {\n            development: {\n                apiUrl: '//localhost/api',\n                staticUrl: '//localhost/static'\n                // antoherCustomVar: 'lorem', \n                // antoherCustomVar: 'ipsum' \n            },\n            production: {\n                apiUrl: '//api.acme.com/v2',\n                staticUrl: '//static.acme.com'\n                // antoherCustomVar: 'lorem', \n                // antoherCustomVar: 'ipsum' \n            }\n            // anotherStage: { \n            //  customVar: 'lorem', \n            //  customVar: 'ipsum' \n            // } \n        }\n    });\n\n    // run the environment check, so the comprobation is made \n    // before controllers and services are built \n    envServiceProvider.check();\n});\n</code>", "<code>envService.read('apiUrl');\n</code>", "<code>angular-environment</code>", "<code>envServiceProvider.check()</code>", "<code>lvh.me:9000</code>", "<code>lvh.me</code>", "<code>lvh.me</code>", "<code>app.service(\"Configuration\", function() {\n  if (window.location.host.match(/lvh\\.me/)) {\n    return this.API = 'http://localhost\\\\:7080/myapi/';\n  } else {\n    return this.API = 'http://localhost\\\\:8099/hisapi/';\n  }\n});\n</code>", "<code>Configuration.API</code>", "<code>$resource(Configuration.API + '/endpoint/:id', {\n  id: '@id'\n});\n</code>", "<code>window.location.host</code>", "<code>&lt;script type=\"text/javascript\"&gt;\nangular.module('YourApp').constant('API_END_POINT', '&lt;?php echo $apiEndPointFromBackend; ?&gt;');\n&lt;/script&gt;\n</code>", "<code>API_END_POINT</code>", "<code>localStorage</code>", "<code>.factory('User',['$resource','API_END_POINT'],function($resource,API_END_POINT){\n   var myApi = localStorage.get('myLocalApiOverride');\n   return $resource((myApi || API_END_POINT) + 'user');\n});\n</code>", "<code>(function(){\n    'use strict';\n\n    angular.module('app').service('env', function env() {\n\n        var _environments = {\n            local: {\n                host: 'localhost:3000',\n                config: {\n                    apiroot: 'http://localhost:3000'\n                }\n            },\n            dev: {\n                host: 'dev.com',\n                config: {\n                    apiroot: 'http://localhost:3000'\n                }\n            },\n            test: {\n                host: 'test.com',\n                config: {\n                    apiroot: 'http://localhost:3000'\n                }\n            },\n            stage: {\n                host: 'stage.com',\n                config: {\n                apiroot: 'staging'\n                }\n            },\n            prod: {\n                host: 'production.com',\n                config: {\n                    apiroot: 'production'\n                }\n            }\n        },\n        _environment;\n\n        return {\n            getEnvironment: function(){\n                var host = window.location.host;\n                if(_environment){\n                    return _environment;\n                }\n\n                for(var environment in _environments){\n                    if(typeof _environments[environment].host &amp;&amp; _environments[environment].host == host){\n                        _environment = environment;\n                        return _environment;\n                    }\n                }\n\n                return null;\n            },\n            get: function(property){\n                return _environments[this.getEnvironment()].config[property];\n            }\n        }\n\n    });\n\n})();\n</code>", "<code>controller/service</code>", "<code>(function() {\n    'use strict';\n\n    angular.module('app').service('apiService', apiService);\n\n    apiService.$inject = ['configurations', '$q', '$http', 'env'];\n\n    function apiService(config, $q, $http, env) {\n\n        var service = {};\n        /* **********APIs **************** */\n        service.get = function() {\n            return $http.get(env.get('apiroot') + '/api/yourservice');\n        };\n\n        return service;\n    }\n\n})();\n</code>", "<code>$http.get(env.get('apiroot')</code>", "<code>    ...\n    'svcs': {\n        'VER': '2.3',\n        'API@localhost': 'http://localhost:9090/',\n        'API@www.uat.productionwebsite.com': 'https://www.uat.productionwebsite.com:9090/res/',\n        'API@www.productionwebsite.com': 'https://www.productionwebsite.com:9090/api/res/'\n    },\n    ...\n</code>", "<code>    ...\n    'app': {\n        'NAME': 'Ferry Reservations',\n        'NAME@fr': 'R\u00e9servations de ferry',\n        'NAME@de': 'F\u00e4hren Reservierungen'\n    },\n    ...\n</code>", "<code>    'help': {\n        'BLURB': 'This pre-production environment is not supported. Contact Development Team with questions.',\n        'PHONE': '808-867-5309',\n        'EMAIL': 'coder.jen@lostnumber.com'\n    },\n    'help@www.productionwebsite.com': {\n        'BLURB': 'Please contact Customer Service Center',\n        'BLURB@fr': 'S\\'il vous pla\u00eet communiquer avec notre Centre de service \u00e0 la client\u00e8le',\n        'BLURB@de': 'Bitte kontaktieren Sie unseren Kundendienst!!1!',\n        'PHONE': '1-800-CUS-TOMR',\n        'EMAIL': 'customer.service@productionwebsite.com'\n    },\n</code>", "<code>    'help': {\n        'BLURB': 'Bitte kontaktieren Sie unseren Kundendienst!!1!',\n        'PHONE': '1-800-CUS-TOMR',\n        'EMAIL': 'customer.service@productionwebsite.com'\n    },\n</code>", "<code>// prefer(object,suffix|[suffixes]) by/par/durch storsoc\n// prefer({ a: 'apple', a@env: 'banana', b: 'carrot' },'env') -&gt; { a: 'banana', b: 'carrot' }\nfunction prefer(o,sufs) {\n    for (var key in o) {\n        if (!o.hasOwnProperty(key)) continue; // skip non-instance props\n        if(key.split('@')[1]) { // suffixed!\n            // replace root prop with the suffixed prop if among prefs\n            if(o[key] &amp;&amp; sufs.indexOf(key.split('@')[1]) &gt; -1) o[key.split('@')[0]] = JSON.parse(JSON.stringify(o[key]));\n\n            // and nuke the suffixed prop to tidy up\n            delete o[key];\n\n            // continue with root key ...\n            key = key.split('@')[0];\n        }\n\n        // ... in case it's a collection itself, recurse it!\n        if(o[key] &amp;&amp; typeof o[key] === 'object') prefer(o[key],sufs);\n\n    };\n};\n</code>", "<code>(function(prefs){ var props = {\n    'svcs': {\n        'VER': '2.3',\n        'API@localhost': 'http://localhost:9090/',\n        'API@www.uat.productionwebsite.com': 'https://www.uat.productionwebsite.com:9090/res/',\n        'API@www.productionwebsite.com': 'https://www.productionwebsite.com:9090/api/res/'\n    },\n    ...\n    /* yadda yadda moar JSON und bisque */\n\n    function prefer(o,sufs) {\n        // body of prefer function, broken for e.g.\n    };\n\n    // convert string and comma-separated-string to array .. and process it\n    prefs = [].concat( ( prefs.split ? prefs.split(',') : prefs ) || []);\n    prefer(props,prefs);\n    window.app_props = JSON.parse(JSON.stringify(props));\n})([location.hostname, ((window.navigator.userLanguage || window.navigator.language).split('-')[0])  ] );\n</code>", "<code>app.constant('props',angular.copy(window.app_props || {})).run( function ($rootScope,props) { $rootScope.props = props; delete window.app_props;} );\n</code>", "<code>app.controller('CtrlApp',function($log,props){ ... } );\n</code>", "<code>&lt;span&gt;{{ props.help.blurb }} {{ props.help.email }}&lt;/span&gt;\n</code>", "<code>var o = { 'a':'apple', 'a@dev':'apple-dev', 'a@fr':'pomme',\n          'b':'banana', 'b@fr':'banane', 'b@dev&amp;fr':'banane-dev',\n          'c':{ 'o':'c-dot-oh', 'o@fr':'c-point-oh' }, 'c@dev': { 'o':'c-dot-oh-dev', 'o@fr':'c-point-oh-dev' } };\n\n/*1*/ prefer(o,'dev');        // { a:'apple-dev', b:'banana',     c:{o:'c-dot-oh-dev'}   }\n/*2*/ prefer(o,'fr');         // { a:'pomme',     b:'banane',     c:{o:'c-point-oh'}     }\n/*3*/ prefer(o,'dev,fr');     // { a:'apple-dev', b:'banane-dev', c:{o:'c-point-oh-dev'} }\n/*4*/ prefer(o,['fr','dev']); // { a:'pomme',     b:'banane-dev', c:{o:'c-point-oh-dev'} }\n/*5*/ prefer(o);              // { a:'apple',     b:'banana',     c:{o:'c-dot-oh'}       }\n</code>", "<code>function prefer(obj,suf) {\n    function pr(o,s) {\n        for (var p in o) {\n            if (!o.hasOwnProperty(p) || !p.split('@')[1] || p.split('@@')[1] ) continue; // ignore: proto-prop OR not-suffixed OR temp prop score\n            var b = p.split('@')[0]; // base prop name\n            if(!!!o['@@'+b]) o['@@'+b] = 0; // +score placeholder\n            var ps = p.split('@')[1].split('&amp;'); // array of property suffixes\n            var sc = 0; var v = 0; // reset (running)score and value\n            while(ps.length) {\n                // suffix value: index(of found suffix in prefs)^10\n                v = Math.floor(Math.pow(10,s.indexOf(ps.pop())));\n                if(!v) { sc = 0; break; } // found suf NOT in prefs, zero score (delete later)\n                sc += v;\n            }\n            if(sc &gt; o['@@'+b]) { o['@@'+b] = sc; o[b] = o[p]; } // hi-score! promote to base prop\n            delete o[p];\n        }\n        for (var p in o) if(p.split('@@')[1]) delete o[p]; // remove scores\n        for (var p in o) if(typeof o[p] === 'object') pr(o[p],s); // recurse surviving objs\n    }\n    if( typeof obj !== 'object' ) return; // validate\n    suf = ( (suf || suf === 0 ) &amp;&amp; ( suf.length || suf === parseFloat(suf) ) ? suf.toString().split(',') : []); // array|string|number|comma-separated-string -&gt; array-of-strings\n    pr(obj,suf.reverse());\n}\n</code>", "<code>app.value('key', 'value');\n</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "string", "conventions"], "creation_date": 1225190075, "body_markdown": "`console.log(&quot;double&quot;);` vs `console.log(&#39;single&#39;);`\r\n\r\nI see more and more JavaScript libraries out there using single quotes when handling strings. What are the reasons to use one over the other? I thought they&#39;re pretty much interchangeable.\r\n", "last_edit_date": 1455001157, "up_vote_count": 1587, "link": "https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1225190418, "answer_id": 242833, "path": "stack.gulp.answer", "score": 977, "up_vote_count": 980, "is_accepted": true, "last_activity_date": 1477866078, "last_edit_date": 1477866078, "body_markdown": "The most likely reason for use of single vs double in different libraries is programmer preference and/or API consistency.\r\n\r\nOther than being consistent, use whichever best suits the string:.\r\n\r\nUsing the other type of quote as a literal:\r\n\r\n    alert(&#39;Say &quot;Hello&quot;&#39;);\r\n    alert(&quot;Say &#39;Hello&#39;&quot;);\r\n\r\n\u2026but this can get complicated\u2026\r\n\r\n    alert(&quot;It&#39;s \\&quot;game\\&quot; time.&quot;);\r\n    alert(&#39;It\\&#39;s &quot;game&quot; time.&#39;);\r\n\r\nAnother option, new in ES6, are [Template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) which use the `back-tick` character:\r\n\r\n    alert(`Use &quot;double&quot; and &#39;single&#39; quotes in the same string`);\r\n    alert(`The escape the \\` back-tick character in a string`);\r\n\r\nTemplate literals offer a clean syntax for: variable interpolation, multi-line strings, and more."}, {"tags": [], "down_vote_count": 0, "creation_date": 1225190599, "answer_id": 242843, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1225190599, "body_markdown": "There are people that claim to see performance differences: [old mailing list thread][1]. But I couldn&#39;t find any of them to be confirmed.\r\n\r\nThe main thing is to look at what kind of quotes (double or single) you are using inside your string. It helps to keep the number of escapes low. For instance when you are working with html inside your strings, it is easier to use single quotes so that you don&#39;t have to escape all double quotes around the attributes.\r\n\r\n\r\n  [1]: http://lists.evolt.org/pipermail/javascript/2003-November/006168.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1225198162, "answer_id": 243148, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1225198162, "body_markdown": "There is strictly no difference, so it is mostly a matter of taste and of what is in the string (or if the JS code itself is in a string), to keep number of escapes low.\r\n\r\nThe speed difference legend might come from PHP world, where the two quotes have different behavior."}, {"tags": [], "down_vote_count": 0, "creation_date": 1225206907, "answer_id": 243687, "path": "stack.gulp.answer", "score": 22, "up_vote_count": 22, "is_accepted": false, "last_activity_date": 1225206907, "body_markdown": "Strictly speaking, there is no difference in meaning; so the choice comes down to convenience.\r\n\r\nHere are several factors that could influence your choise:\r\n\r\n* House style: Some groups of developers already use one convention or the other.\r\n* Client-side requirements: Will you be using quotes within the strings? (See Ady&#39;s answer).\r\n* Server-side language: VB.Net people might choose to use single quotes for java-script so that the scripts can be built server-side (VB.Net uses double-quotes for strings, so the java-script strings are easy to distinguished if they use single quotes).\r\n* Library code: If you&#39;re using a library that uses a particular style, you might consider using the same style yourself.\r\n* Personal preference: You might thing one or other style looks better.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1225226988, "answer_id": 244824, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1225226988, "body_markdown": "The difference is purely stylistic. I used to be a double-quote Nazi. Now I use single quotes in nearly all cases. There&#39;s no practical difference beyond how your editor highlights the syntax."}, {"tags": [], "down_vote_count": 10, "creation_date": 1225227372, "answer_id": 244842, "path": "stack.gulp.answer", "score": 110, "up_vote_count": 120, "is_accepted": false, "last_activity_date": 1433923704, "last_edit_date": 1433923704, "body_markdown": "The **only** difference is demonstrated in the following:\r\n\r\n    &#39;A string that\\&#39;s single quoted&#39;\r\n\r\n    &quot;A string that&#39;s double quoted&quot;\r\n\r\nSo, it&#39;s only down to how much quote escaping you want to do. Obviously the same applies to double quotes in double quoted strings."}, {"tags": [], "down_vote_count": 5, "creation_date": 1241250496, "answer_id": 814376, "path": "stack.gulp.answer", "score": 52, "up_vote_count": 57, "is_accepted": false, "last_activity_date": 1389731379, "last_edit_date": 1389731379, "body_markdown": "I&#39;d like to say the difference is purely stylistic, but I&#39;m really having my doubts. Consider the following example:\r\n\r\n    /*\r\n       Add trim() functionality to JavaScript...\r\n        1. By extending the String prototype\r\n        2. By creating a &#39;stand-alone&#39; function\r\n       This is just to demonstrate results are the same in both cases.\r\n    */\r\n\r\n    // Extend the String prototype with a trim() method\r\n    String.prototype.trim = function() {\r\n     return this.replace(/^\\s+|\\s+$/g, &#39;&#39;);\r\n    };\r\n    \r\n    // &#39;Stand-alone&#39; trim() function\r\n    function trim(str) {\r\n     return str.replace(/^\\s+|\\s+$/g, &#39;&#39;);\r\n    };\r\n\r\n    document.writeln(String.prototype.trim);\r\n    document.writeln(trim);\r\n\r\nIn Safari, Chrome, Opera, and Internet Explorer (tested in IE7 and IE8), this will return the following:\r\n\r\n    function () {\r\n     return this.replace(/^\\s+|\\s+$/g, &#39;&#39;);\r\n    }\r\n    function trim(str) {\r\n     return str.replace(/^\\s+|\\s+$/g, &#39;&#39;);\r\n    }\r\n\r\nHowever, Firefox will yield a slightly different result:\r\n\r\n    function () {\r\n        return this.replace(/^\\s+|\\s+$/g, &quot;&quot;);\r\n    }\r\n    function trim(str) {\r\n        return str.replace(/^\\s+|\\s+$/g, &quot;&quot;);\r\n    }\r\n\r\nThe single quotes have been replaced by double quotes. (Also note how the indenting space was replaced by four spaces.) This gives the impression that at least one browser parses JavaScript internally as if everything was written using double quotes. *One might think, it takes Firefox less time to parse JavaScript if everything is already written according to this &#39;standard&#39;.*\r\n\r\nWhich, by the way, makes me a very sad panda, since I think single quotes look much nicer in code. Plus, in other programming languages, they&#39;re usually faster to use than double quotes, so it would only make sense if the same applied to JavaScript.\r\n\r\n**Conclusion:** I think we need to do more research on this.\r\n\r\n**Edit:** This might explain [Peter-Paul Koch&#39;s test results][1] from back in 2003.\r\n\r\n&gt; It seems that single quotes are *sometimes* faster in Explorer Windows (roughly 1/3 of my tests did show a faster response time), but if Mozilla shows a difference at all, it handles double quotes slightly faster. I found no difference at all in Opera.\r\n\r\n  [1]: http://lists.evolt.org/pipermail/javascript/2003-November/006155.html\r\n\r\n**Edit 2014:** Modern versions of Firefox/Spidermonkey don\u2019t do this anymore."}, {"tags": [], "down_vote_count": 0, "creation_date": 1241261950, "answer_id": 814644, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1241261950, "body_markdown": "I think it&#39;s important not to forget that while IE might have 0 extensions/toolbars installed, firefox might have some extensions installed (I&#39;m just thinking of firebug for instance). Those extensions will have an influence on the benchmark result. \r\n\r\nNot that it really matters since browser X is faster in getting elementstyles, while browser Y might be faster in rendering a canvas element. (hence why a browser &quot;manufacturer&quot; always has the fastest javascript engine)"}, {"tags": [], "down_vote_count": 4, "creation_date": 1248461409, "answer_id": 1179473, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1317177712, "last_edit_date": 1317177712, "body_markdown": "If you&#39;re doing inline JavaScript (arguably a &quot;bad&quot; thing, but avoiding that discussion) **single** quotes are your only option for string literals, I believe.\r\n\r\ne.g., this works fine:\r\n\r\n    &lt;a onclick=&quot;alert(&#39;hi&#39;);&quot;&gt;hi&lt;/a&gt;\r\n\r\nBut you can&#39;t wrap the &quot;hi&quot; in double quotes, via any escaping method I&#39;m aware of.  Even &lt;b&gt;&lt;code&gt;&amp;amp;quot;&lt;/code&gt;&lt;/b&gt; which would have been my best guess (since you&#39;re escaping quotes in an attribute value of HTML) doesn&#39;t work for me in Firefox.  &lt;b&gt;&lt;code&gt;\\&quot;&lt;/code&gt;&lt;/b&gt; won&#39;t work either because at this point you&#39;re escaping for HTML, not JavaScript.\r\n\r\nSo, if the name of the game is consistency, and you&#39;re going to do some inline JavaScript in parts of your app, I think single quotes are the winner.  Someone please correct me if I&#39;m wrong though.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1248461751, "answer_id": 1179507, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1248461751, "body_markdown": "I would use double quotes when single quotes cannot be used and vice versa:\r\n\r\n    &quot;&#39;&quot; + singleQuotedValue + &quot;&#39;&quot;\r\n    &#39;&quot;&#39; + doubleQuotedValue + &#39;&quot;&#39;\r\n\r\nInstead of:\r\n\r\n    &#39;\\&#39;&#39; + singleQuotedValue + &#39;\\&#39;&#39;\r\n    &quot;\\&quot;&quot; + doubleQuotedValue + &quot;\\&quot;&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1248604845, "answer_id": 1184251, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1448147420, "last_edit_date": 1448147420, "body_markdown": "There is no difference between single and double quotes in JavaScript.\r\n\r\nSpecification is important:\r\n\r\nMaybe there are performance diffs, but they are absolutely minimum and can change everyday according to browsers&#39; implementation. Further discussion is futile unless your JavaScript application is hundreds of thousands long.\r\n\r\nIt&#39;s like a benchmark if\r\n\r\n    a=b;\r\n\r\nis faster than\r\n\r\n    a = b;\r\n\r\n(extra spaces)\r\n\r\ntoday, in a particular browser and platform, etc.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1272555029, "answer_id": 2738605, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1448147475, "last_edit_date": 1448147475, "body_markdown": "I&#39;ve been running the following about 20 times. And it appears that double quotes are about 20% faster.\r\n\r\nThe fun part is, if you change part 2 and part 1 around, single quotes are about 20% faster.\r\n\r\n    //Part1\r\n    var r=&#39;&#39;;\r\n    var iTime3 = new Date().valueOf();\r\n    for(var j=0; j&lt;1000000; j++) {\r\n    \tr+=&#39;a&#39;;\r\n    }\r\n    var iTime4 = new Date().valueOf();\r\n    alert(&#39;With single quote : &#39; + (iTime4 - iTime3));\t\r\n    \r\n    //Part 2\t\t\t\t\r\n    var s=&quot;&quot;;\r\n    var iTime1 = new Date().valueOf();\r\n    for(var i=0; i&lt;1000000; i++) {\r\n    \ts += &quot;a&quot;;\r\n    }\r\n    var iTime2 = new Date().valueOf();\r\n    alert(&#39;With double quote: &#39; + (iTime2 - iTime1));\r\n"}, {"tags": [], "down_vote_count": 4, "creation_date": 1294300786, "answer_id": 4612914, "path": "stack.gulp.answer", "score": 545, "up_vote_count": 549, "is_accepted": false, "last_activity_date": 1294300786, "body_markdown": "If you&#39;re dealing with JSON, it should be noted that strictly speaking, JSON strings must be double quoted. Sure, many libraries support single quotes as well, but I had great problems in one of my projects before realizing that single quoting a string is in fact not according to JSON standards."}, {"tags": [], "down_vote_count": 0, "creation_date": 1316323322, "answer_id": 7459639, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1316323322, "body_markdown": "After reading all the answers that say it maybe be faster or maybe have advantages, I would say double quote is better or maybe faster too because [Google closure compiler][1] convert single quotes to double quotes. \r\n\r\n\r\n  [1]: http://closure-compiler.appspot.com/home"}, {"tags": [], "down_vote_count": 0, "creation_date": 1334193653, "answer_id": 10116207, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1334193653, "body_markdown": "One more thing that you might want to consider as a reason for the shift from double quotes to single quotes is the increase in popularity of server side scripts. When using PHP you can pass variables and parse javascript functions using strings and variables in PHP.\r\n\r\nIf you write a string and use double quotes for your PHP you won&#39;t have to escape any of the single quotes and PHP will automatically retrieve the value of the variables for you.\r\n\r\nExample:I need to run a javascript function using a variable from my server.\r\n\r\n    public static function redirectPage( $pageLocation )\r\n    {\r\n        echo &quot;&lt;script type=&#39;text/javascript&#39;&gt;window.location = &#39;$pageLocation&#39;;&lt;/script&gt;&quot;;\r\n    }\r\n\r\nThis saves me a lot of hassle in having to deal with joining strings, and I can effectively call a javascript from PHP. This is only one example, but this may be one of several reasons why programmers are defaulting to single quotes in javascript.\r\n\r\n[Quote from PHP documents][1]: &quot;The most important feature of double-quoted strings is the fact that variable names will be expanded. See string parsing for details. &quot;\r\n\r\n\r\n  [1]: http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double"}, {"tags": [], "down_vote_count": 2, "creation_date": 1335993101, "answer_id": 10421803, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 31, "is_accepted": false, "last_activity_date": 1472649463, "last_edit_date": 1472649463, "body_markdown": "Technically there&#39;s no difference, it&#39;s only matter of style and convention.\r\n\r\nDouglas Crockford recommends using single quotes for internal strings and double quotes for external (by external we mean those to be displayed to user of application, like messages or alerts).  \r\n\r\nI personally follow that.\r\n\r\n*UPDATE: It appears that Mr. Crockford [changed his mind][1] and now recommends using double quotes throughout  :)*\r\n\r\n\r\n  [1]: https://plus.google.com/+DouglasCrockfordEsq/posts/EBky2K9erKt"}, {"tags": [], "down_vote_count": 5, "creation_date": 1336326079, "answer_id": 10472742, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1448161404, "last_edit_date": 1448161404, "body_markdown": "For use of JavaScript code across different languages, I&#39;ve found single quotes to consistently require less code tweaking.\r\n\r\nDouble quotes support multi-line strings.\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1336418717, "answer_id": 10487870, "path": "stack.gulp.answer", "score": 13, "up_vote_count": 14, "is_accepted": false, "last_activity_date": 1448161487, "last_edit_date": 1448161487, "body_markdown": "I hope I am not adding something obvious, but I have been struggling with [Django][1] and [Ajax][2] and JSON on this.\r\n\r\nAssuming that in your HTML code you do use double quotes, as normally should be, I highly suggest to use single quotes for the rest in JavaScript.\r\n\r\nSo I agree with @ady but with some care.\r\n\r\nMy bottom line is:\r\nIn JavaScript probably it doesn&#39;t matter, but as soon as you embed\r\nit inside HTML or the like you start to get troubles. You should know\r\nwhat is actually escaping, reading, passing your string.\r\n\r\nMy simple case was:\r\n\r\n    tbox.innerHTML = tbox.innerHTML + &#39;&lt;div class=&quot;thisbox_des&quot; style=&quot;width:210px;&quot; onmouseout=&quot;clear()&quot;&gt;&lt;a href=&quot;/this/thislist/&#39;\r\n                       + myThis[i].pk +&#39;&quot;&gt;&lt;img src=&quot;/site_media/&#39;\r\n                       + myThis[i].fields.thumbnail +&#39;&quot; height=&quot;80&quot; width=&quot;80&quot; style=&quot;float:left;&quot; onmouseover=&quot;showThis(&#39;\r\n                       + myThis[i].fields.left +&#39;,&#39;\r\n                       + myThis[i].fields.right +&#39;,\\&#39;&#39;\r\n                       + myThis[i].fields.title +&#39;\\&#39;)&quot;&gt;&lt;/a&gt;&lt;p style=&quot;float:left;width:130px;height:80px;&quot;&gt;&lt;b&gt;&#39;\r\n                       + myThis[i].fields.title +&#39;&lt;/b&gt; &#39;\r\n                       + myThis[i].fields.description +&#39;&lt;/p&gt;&lt;/div&gt;&#39;\r\n\r\nYou can spot the \\&#39; in the third field of showThis.\r\n\r\nThe double quote didn&#39;t work!\r\n\r\nIt is clear why, but it is also clear why we should stick on single quotes...\r\n.. I guess..\r\n\r\nThis case is a very simple HTML embedding, the error was generated\r\nby a simple copy/paste from a &#39;double quoted&#39; JavaScript code.\r\n\r\nSo to answer the question:\r\n\r\nTry to use single quotes while within HTML. It might save a couple of debug issues...\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Django_%28web_framework%29\r\n  [2]: http://en.wikipedia.org/wiki/Ajax_%28programming%29\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1337550497, "answer_id": 10677511, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1364854678, "last_edit_date": 1364854678, "body_markdown": "It&#39;s mostly a matter of style and preference. There are some rather interesting and useful technical explorations in the other answers, so perhaps the only thing I might add is to offer a little worldly advice.\r\n\r\n - *If* you&#39;re coding in a company or team, *then* it&#39;s probably a good idea to\r\n   follow the &quot;house style&quot;.\r\n   \r\n - *If* you&#39;re alone hacking a few side projects, *then* look at a few prominent leaders in the community . Eg let&#39;s say you getting into Node.js. Take a look at core modules, eg underscore.js or express and see what\r\n   convention they use, and consider following that.\r\n\r\n - *If* both conventions are equally used, *then* defer to your personal   \r\n   preference.\r\n\r\n - *If* you have no personal preference, *then* flip a coin.\r\n\r\n - *If* you don&#39;t have a coin, *then* beer is on me ;)\r\n"}, {"tags": [], "down_vote_count": 5, "creation_date": 1343142971, "answer_id": 11633978, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1343142971, "body_markdown": "Let&#39;s look what a reference do.\r\n\r\nInside jquery.js, every string are double-quoted. \r\n\r\nSo, beginning now, I&#39;ll use double-quoted strings. (I was using single!)"}, {"tags": [], "down_vote_count": 1, "creation_date": 1345211861, "answer_id": 12007257, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1345211861, "body_markdown": "For me, if I code in a VIM editor and if something is enclosed in single quotes, I can double-click to select ONLY the text within the quotes. Double quotes, on the other hand, includes the quote marks which I find annoying when I want to do some quick copy and pasting.\r\n\r\nE.g. &#39;myVar&#39; double-click in VIM editor copies: &gt;myVar&lt;\r\n&quot;myVar&quot; literally copies: &gt;&quot;myVar&quot;&lt; and when I paste, I have to delete the quote marks either side.\r\n\r\nMy two cents anyway..."}, {"tags": [], "down_vote_count": 2, "creation_date": 1346319193, "answer_id": 12193881, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1374106041, "last_edit_date": 1374106041, "body_markdown": "As stated by other replies, they are almost the same. But I will try to add more.\r\n\r\n 1. Some efficient algorithms use character arrays to process strings. Those algorithms(browser compiler etc.) would see `&quot;` (#34) first before `&#39;` (#39) therefore saving several cpu cycles depending on your data structure.\r\n 2. `&quot;` is escaped by anti-XSS engines\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1351741749, "answer_id": 13170691, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1370663672, "last_edit_date": 1370663672, "body_markdown": "Not sure if this is relevant in todays world, but double quotes used to be used for content that needed to have control characters processed and single quotes for strings that didn&#39;t.\r\n\r\nThe compiler will run string manipulation on a double quoted string while leaving a single quoted string literally untouched. This used to lead to &#39;good&#39; developers choosing to use single quotes for strings that didn&#39;t contain control characters like `\\n` or `\\0` (not processed within single quotes) and double quotes when they needed the string parsed (at a slight cost in cpu cycles for processing the string)."}, {"tags": [], "down_vote_count": 0, "creation_date": 1374389908, "answer_id": 17769861, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1374389908, "body_markdown": "If you&#39;re jumping back an forth between JavaScript and C#, it&#39;s best to train your fingers for the common convention which is double quotes. "}, {"tags": [], "down_vote_count": 3, "creation_date": 1375605361, "answer_id": 18041188, "path": "stack.gulp.answer", "score": 219, "up_vote_count": 222, "is_accepted": false, "last_activity_date": 1446875534, "last_edit_date": 1446875534, "body_markdown": "**There is no one better solution**; however, I would like to argue that double quotes may be more desirable at times:\r\n\r\n* **Newcomers will already be familiar with double quotes from their language**.  In English, we must use double quotes ``&quot;`` to identify a passage of quoted text.  If we were to use a single quote ``&#39;``, the reader may misinterpret it as a contraction.  The other meaning of a passage of text surrounded by the ``&#39;`` indicates the &#39;colloquial&#39; meaning.  It makes sense to stay consistent with pre-existing languages, and this may likely ease the learning and interpretation of code.\r\n* **Double quotes eliminate the need to escape apostrophes** (as in contractions).  Consider the string: ``&quot;I&#39;m going to the mall&quot;``, vs. the otherwise escaped version: ``&#39;I\\&#39;m going to the mall&#39;``.\r\n* **Double quotes mean a string in many other languages**.  When you learn a new language like Java or C, double quotes are always used.  \r\n\r\n* **JSON notation is written with double quotes.**\r\n\r\nNonetheless, as others have stated, it is most important to remain consistent."}, {"tags": [], "down_vote_count": 2, "creation_date": 1380295973, "answer_id": 19054664, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1380295973, "body_markdown": "best practice is to use double quotes (&quot;&quot;) first and single quotes (&#39;&#39;) if needed after, the reason being is that if you ever use server-side scripting you will not be able to pull content from a server (example sql queries from a database) if you use singles quotes over double."}, {"tags": [], "down_vote_count": 0, "creation_date": 1384464807, "answer_id": 19988852, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1384464807, "body_markdown": "I think this is all a matter of convenience/preference.\r\n\r\nI prefer double quote because it matches to what C# has and this my environment that I normally work on: C# + JS.\r\n\r\nAlso one possible reason for double quotes over single quotes is this (which I have found in my projects code):\r\nFrench or some other languages use single quotes a lot (like English actually), so if by some reason you end up rendering strings from server side (which I know is bad practice), then a single quote will render wrongly.\r\n\r\nThe probability of using double quotes in regular language is low therefore I think it has a better chance of not breaking something."}, {"tags": [], "down_vote_count": 0, "creation_date": 1384874405, "answer_id": 20075342, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1384874405, "body_markdown": "Talking about performance, quotes will never be your bottleneck, however, the performance is the same in both cases.\r\n\r\nTalking about coding speed, if you use `&#39;` for delimiting a string, you will need to escape `&quot;` quotes. You are more likely to need to use `&quot;` inside the string, in example:\r\n\r\n    //JSON Objects:\r\n    var jsonObject = &#39;{&quot;foo&quot;:&quot;bar&quot;}&#39;;\r\n    //HTML attributes:\r\n    document.getElementById(&quot;foobar&quot;).innerHTML = &#39;&lt;input type=&quot;text&quot;&gt;&#39;;\r\n \r\nThen, I prefer to use `&#39;` for delimiting the string, so I have to escape less characters."}, {"tags": [], "down_vote_count": 0, "creation_date": 1385092773, "answer_id": 20136762, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1385092773, "body_markdown": "One (silly) reason to use single quotes would be that they don&#39;t require you to hit the shift key to type them, whereas a double quote do.  (I&#39;m assuming that the average string doesn&#39;t require escaping, which is a reasonable assumption.)  Now, let&#39;s suppose every day I code 200 lines of code.  Maybe in those 200 lines I have 30 quotes.  Maybe typing a double quote takes 0.1 seconds more time than typing a single quote (because I have to hit the shift key).  Then on any given day, I waste 3 seconds.  If I code in this manner for 200 days a year for 40 years, then I&#39;ve wasted 6.7 hours of my life.  Food for thought."}, {"tags": [], "down_vote_count": 0, "creation_date": 1393514456, "answer_id": 22072778, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1393514784, "last_edit_date": 1393514784, "body_markdown": "If you are using [jshint][1], it will raise an error if you use double quote string.\r\n\r\nI used it through the Yeoman scafflholding of AngularJS but maybe there is somehow a maner to configure this.\r\n\r\nBy the way, when you handle HTML into JavaScript, it&#39;s easier to use single quote :\r\n\r\n    var foo = &#39;&lt;div class=&quot;cool-stuff&quot;&gt;Cool content&lt;/div&gt;&#39;;\r\n\r\nAnd at least JSON is using double quotes to reprensent strings.\r\n\r\nThere is no trivial way to answer to your question\r\n\r\n  [1]: http://www.jshint.com/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1401951972, "answer_id": 24053745, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1401951972, "body_markdown": "If your JS source is:\r\n\r\n    elem.innerHTML=&quot;&lt;img src=&#39;smily&#39; alt=&#39;It\\&#39;s a Smily&#39; style=&#39;width:50px&#39;&gt;&quot;;\r\nThe HTML source will be: \r\n\r\n    &lt;img src=&quot;smiley&quot; alt=&quot;It&#39;s a Smiley&quot; style=&quot;width:50px&quot;&gt;\r\nor for HTML5\r\n\r\n    &lt;img src=smiley alt=&quot;It&#39;s a Smiley&quot; style=width:50px&gt;\r\n    \r\nJS allows arrays like that:\r\n \r\n    var arr=[&#39;this&#39;,&#39;that&#39;];\r\nBut if you stringify it, it will be for compatibly reason:\r\n\r\n    JSON=[&quot;this&quot;,&quot;that&quot;]\r\nI&#39;m sure this takes some time."}, {"tags": [], "down_vote_count": 0, "creation_date": 1402602424, "answer_id": 24192811, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1402602424, "body_markdown": "Just to add my 2 cents: In working with both JS and PHP a few years back, I&#39;ve become accustom to using single quotes so I can type the escape character (&#39;\\&#39;) without having to escape it as well.  I usually used it when typing raw strings with file paths, etc. (http://en.wikipedia.org/wiki/String_literal#Raw_strings)\r\n\r\nAnyhow, my convention ended up becoming the use of single quotes on identifier-type raw strings, such as `if (typeof s == &#39;string&#39;) ...` (in which escape characters would never be used - ever), and double quotes for *texts*, such as &quot;Hey, what&#39;s up?&quot;.  I also use single quotes in comments as a typographical convention to show identifier names.  This is just a rule of thumb, and I break off only when needed, such as when typing HTML strings `&#39;&lt;a href=&quot;#&quot;&gt; like so &lt;a&gt;&#39;` (though you could reverse the quotes here also).  I&#39;m also aware that, in the case of JSON, double quotes are used for the names - but outside that, personally, I prefer the single quotes when escaping is *never* required for the text between the quotes - like `document.createElement(&#39;div&#39;)`.\r\n\r\nBottom line, and as some have mentioned/alluded to, pick a convention, stick with it, and only deviate when necessary."}, {"tags": [], "down_vote_count": 0, "creation_date": 1410369061, "answer_id": 25771249, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1410369061, "body_markdown": "You can use single quotes or double quotes.\r\nThis enables you for example to easily nest javascript inside HTML attributes, without the need to escape the quotes. \r\nThe same is when you create javascript with PHP.\r\n\r\nThe general idea is: if it is possible use such quotes that you won&#39;t need to escape.\r\nLess escaping = better code."}, {"tags": [], "down_vote_count": 0, "creation_date": 1423646910, "answer_id": 28450732, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1454863930, "last_edit_date": 1454863930, "body_markdown": "When using CoffeeScript I use double quotes. I agree that you should pick either one and stick to it. CoffeeScript gives you interpolation when using the double quotes.\r\n\r\n    &quot;This is my #{name}&quot;\r\n\r\nES6 is using back ticks (`) for template strings. Which probably has a good reason, but when coding it can be cumbersome to change the string literals character from quotes or double quotes to back ticks in order to get the interpolation feature. CoffeeScript might not be perfect, but using the same string literals character everywhere (double quotes) and always be able to interpolate is a nice feature.\r\n\r\n    `This is my ${name}`"}, {"tags": [], "down_vote_count": 1, "creation_date": 1438968526, "answer_id": 31883471, "path": "stack.gulp.answer", "score": 60, "up_vote_count": 61, "is_accepted": false, "last_activity_date": 1490253870, "last_edit_date": 1495535499, "body_markdown": "Single Quotes\r\n=============\r\n\r\nI wish double quotes were the standard, because they [make a little bit more sense](https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript#18041188), but I keep using single quotes because they dominate the scene.\r\n\r\nSingle quotes:\r\n\r\n* [airbnb](https://github.com/jscs-dev/node-jscs/blob/master/presets/airbnb.json)\r\n* [facebook](https://github.com/facebook/fbjs/blob/8d447780c6f4df0ef92fa3d2987d9c4f96eb0100/packages/eslint-config-fbjs-opensource/index.js#L249)\r\n* [google](https://github.com/jscs-dev/node-jscs/blob/master/presets/google.json)\r\n* [grunt](https://github.com/jscs-dev/node-jscs/blob/master/presets/grunt.json)\r\n* [gulp](https://github.com/gulpjs/gulp/blob/master/.jscsrc)\r\n* [node](https://github.com/jscs-dev/node-jscs/blob/master/presets/node.json)\r\n* [npm](https://github.com/npm/npm/blob/master/lib/npm.js) (though not defined in author&#39;s [guide](https://docs.npmjs.com/misc/coding-style))\r\n* [wikimedia](https://github.com/jscs-dev/node-jscs/blob/master/presets/wikimedia.json)\r\n* [wordpress](https://github.com/jscs-dev/node-jscs/blob/master/presets/wordpress.json)\r\n* [yandex](https://github.com/jscs-dev/node-jscs/blob/master/presets/yandex.json)\r\n\r\nNo preference:\r\n\r\n* [three.js](https://github.com/jscs-dev/node-jscs/blob/master/presets/mdcs.json)\r\n\r\nDouble quotes:\r\n\r\n* [crockford](https://plus.google.com/+DouglasCrockfordEsq/posts/EBky2K9erKt)\r\n* [d3](https://github.com/d3/d3-format/blob/master/src/locale.js) (though not defined in [`.eslintrc`](https://github.com/d3/d3-shape/blob/master/.eslintrc))\r\n* [jquery](https://github.com/jscs-dev/node-jscs/blob/master/presets/jquery.json)"}, {"tags": [], "down_vote_count": 0, "creation_date": 1441730279, "answer_id": 32462977, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1483595767, "last_edit_date": 1483595767, "body_markdown": "**Just keep consistency in what you use. But don&#39;t let down your comfort level.**\r\n\r\n    &quot;This is my string.&quot;; // :-|\r\n    &quot;I&#39;m invincible.&quot;; // comfortable :)\r\n    &#39;You can\\&#39;t beat me.&#39;; // uncomfortable :(\r\n    &#39;Oh! Yes. I can &quot;beat&quot; you.&#39;; // comfortable :)\r\n    &quot;Do you really think, you can \\&quot;beat\\&quot; me?&quot;; // uncomfortable :(\r\n    &quot;You&#39;re my guest. I can \\&quot;beat\\&quot; you.&quot;; // sometimes, you&#39;ve to :P\r\n    &#39;You\\&#39;re my guest too. I can &quot;beat&quot; you too.&#39;; // sometimes, you&#39;ve to :P\r\n\r\n**ES6 update**\r\n\r\nUsing *template literal syntax*.\r\n\r\n    `Be &quot;my&quot; guest. You&#39;re in complete freedom.`; // most comfort :D"}, {"tags": [], "down_vote_count": 1, "creation_date": 1457448714, "answer_id": 35870563, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1457448714, "body_markdown": "&gt; Examining the pros and cons\r\n\r\n**In favor of single quotes**\r\n\r\n - Less visual clutter.\r\n - Generating HTML: HTML attributes are usually delimited by double quotes.\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    elem.innerHTML = &#39;&lt;a href=&quot;&#39; + url + &#39;&quot;&gt;Hello&lt;/a&gt;&#39;;\r\n\r\n&lt;!-- end snippet --&gt;\r\nHowever, single quotes are just as legal in HTML.\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    elem.innerHTML = &quot;&lt;a href=&#39;&quot; + url + &quot;&#39;&gt;Hello&lt;/a&gt;&quot;;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nFurthermore, inline HTML is normally an anti-pattern. Prefer templates.\r\n\r\n - Generating JSON: Only double quotes are allowed in JSON.\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    myJson = &#39;{ &quot;hello world&quot;: true }&#39;;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nAgain, you shouldn\u2019t have to construct JSON this way. JSON.stringify() is often enough. If not, use templates.\r\n\r\n**In favor of double quotes**\r\n\r\n - Doubles are easier to spot if you don&#39;t have color coding. Like in a console log or some kind of view-source setup.\r\n - Similarity to other languages: In shell programming (Bash etc.), single-quoted string literals exist, but escapes are not interpreted inside them. C and Java use double quotes for strings and single quotes for characters.\r\n - If you want code to be valid JSON, you need to use double quotes.\r\n\r\n**In favor of both**\r\n\r\nThere is no difference between the two in JavaScript. Therefore, you can use whatever is convenient at the moment. For example, the following string literals all produce the same string:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n        &quot;He said: \\&quot;Let&#39;s go!\\&quot;&quot;\r\n        &#39;He said: &quot;Let\\&#39;s go!&quot;&#39;\r\n        &quot;He said: \\&quot;Let\\&#39;s go!\\&quot;&quot;\r\n        &#39;He said: \\&quot;Let\\&#39;s go!\\&quot;&#39;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nSingle quotes for internal strings and double for external. That allows you to distinguish internal constants from strings that are to be displayed to the user (or written to disk etc.). Obviously, you should avoid putting the latter in your code, but that can\u2019t always be done."}, {"tags": [], "down_vote_count": 0, "creation_date": 1477568283, "answer_id": 40283674, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1477568283, "body_markdown": "Is just a matter *time* for me. A few milliseconds lost of my life every time I have to press the `shift` key before every I&#39;m able to type `&quot;`\r\n\r\nI prefer `&#39;` simply because you don&#39;t have to do it!\r\n\r\nOther than that you can escape a `&#39;` inside single quotes with backslash `\\&#39;` \r\n\r\n`console.log(&#39;Don\\&#39;t lose time&#39;); // &quot;Don&#39;t lose time&quot;`"}, {"tags": [], "down_vote_count": 0, "creation_date": 1502364223, "answer_id": 45612369, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1502364223, "body_markdown": "i use single quotes most of the time, becaus when developing in php, single quoted-string are in no way altered, wich is what i want. when i use\r\n\r\n    echo &quot;$xyz&quot;;\r\n\r\nin php, $xyz gets evaluated, wich is NOT what i want. theresfore i always use &#39; instead of &quot; when it comes to web development. so i ensure at least string-consistency when it comes to php/jscript. \r\n\r\nunfortunatly this can&#39;t be done in java or objective c, where &#39;&#39; stands for char and &quot;&quot; stands for string. but this is another question.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1518172594, "answer_id": 48703923, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1518172594, "body_markdown": "If you use php to generate JavaScript code you should use the following declaration. \r\n\r\n    let value = &quot;&lt;?php echo &#39;This is my message, &quot;double quoted&quot; - \\&#39;single quoted\\&#39; ?&gt;&quot;;\r\n\r\nThe output will be:\r\n\r\n    This is my message, &quot;double quoted&quot; - &#39;single quoted&#39;\r\n\r\nFor some reasons it is recommend to use single quotes rather then double quotes in PHP.\r\nFor the normal behaviour in Javascript it is recommend to use single quotes.\r\n\r\n    \r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var value = &#39;This is my message&#39;;\r\n    document.getElementById(&#39;sample-text&#39;).innerHTML = value;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;span id=&quot;sample-text&quot;&gt;&lt;/span&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}], "title": "When to use double or single quotes in JavaScript?", "view_count": 480751, "answer_count": 40, "code_snippet": ["<code>console.log(\"double\");</code>", "<code>console.log('single');</code>", "<code>alert(\"It's \\\"game\\\" time.\");</code>", "<code>alert('It\\'s \"game\" time.');</code>", "<code>alert('Say \"Hello\"');\nalert(\"Say 'Hello'\");\n</code>", "<code>alert(\"It's \\\"game\\\" time.\");\nalert('It\\'s \"game\" time.');\n</code>", "<code>back-tick</code>", "<code>alert(`Use \"double\" and 'single' quotes in the same string`);\nalert(`The escape the \\` back-tick character in a string`);\n</code>", "<code>var jsonString = '{\"key1\":\"value1\"}';</code>", "<code>.stringify()</code>", "<code>\"</code>", "<code>'</code>", "<code>'</code>", "<code>\"I'm going to the mall\"</code>", "<code>'I\\'m going to the mall'</code>", "<code>'A string that\\'s single quoted'\n\n\"A string that's double quoted\"\n</code>", "<code>\"{\\\"name\\\": \\\"Peter\\\"}\"</code>", "<code>'{\"name\": \"Peter\"}'</code>", "<code>.eslintrc</code>", "<code>/*\n   Add trim() functionality to JavaScript...\n    1. By extending the String prototype\n    2. By creating a 'stand-alone' function\n   This is just to demonstrate results are the same in both cases.\n*/\n\n// Extend the String prototype with a trim() method\nString.prototype.trim = function() {\n return this.replace(/^\\s+|\\s+$/g, '');\n};\n\n// 'Stand-alone' trim() function\nfunction trim(str) {\n return str.replace(/^\\s+|\\s+$/g, '');\n};\n\ndocument.writeln(String.prototype.trim);\ndocument.writeln(trim);\n</code>", "<code>function () {\n return this.replace(/^\\s+|\\s+$/g, '');\n}\nfunction trim(str) {\n return str.replace(/^\\s+|\\s+$/g, '');\n}\n</code>", "<code>function () {\n    return this.replace(/^\\s+|\\s+$/g, \"\");\n}\nfunction trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, \"\");\n}\n</code>", "<code>.toString</code>", "<code>&lt;a onclick=\"alert('hi');\"&gt;hi&lt;/a&gt;\n</code>", "<code>&amp;quot;</code>", "<code>\\\"</code>", "<code>&lt;a onclick=\"alert(%22hi%22);\"&gt;hi&lt;/a&gt;</code>", "<code>&lt;a href=\"javascript:alert(%22hi%22);\"&gt;hi&lt;/a&gt;</code>", "<code>&lt;a onclick='alert(\"hi\");'&gt;hi&lt;/a&gt;</code>", "<code>&lt;a onclick=\"alert(&amp;quot;hi&amp;quot;)\"&gt;</code>", "<code>alert(&amp;quot;hi&amp;quot;)</code>", "<code>&amp;quot;</code>", "<code>AttValue</code>", "<code>'</code>", "<code>00100111</code>", "<code>\"</code>", "<code>00100010</code>", "<code>tbox.innerHTML = tbox.innerHTML + '&lt;div class=\"thisbox_des\" style=\"width:210px;\" onmouseout=\"clear()\"&gt;&lt;a href=\"/this/thislist/'\n                   + myThis[i].pk +'\"&gt;&lt;img src=\"/site_media/'\n                   + myThis[i].fields.thumbnail +'\" height=\"80\" width=\"80\" style=\"float:left;\" onmouseover=\"showThis('\n                   + myThis[i].fields.left +','\n                   + myThis[i].fields.right +',\\''\n                   + myThis[i].fields.title +'\\')\"&gt;&lt;/a&gt;&lt;p style=\"float:left;width:130px;height:80px;\"&gt;&lt;b&gt;'\n                   + myThis[i].fields.title +'&lt;/b&gt; '\n                   + myThis[i].fields.description +'&lt;/p&gt;&lt;/div&gt;'\n</code>", "<code>\\n</code>", "<code>\\0</code>", "<code>var foo = '&lt;div class=\"cool-stuff\"&gt;Cool content&lt;/div&gt;';\n</code>", "<code>'</code>", "<code>\"</code>", "<code>\"</code>", "<code>//JSON Objects:\nvar jsonObject = '{\"foo\":\"bar\"}';\n//HTML attributes:\ndocument.getElementById(\"foobar\").innerHTML = '&lt;input type=\"text\"&gt;';\n</code>", "<code>'</code>", "<code>\"This is my string.\"; // :-|\n\"I'm invincible.\"; // comfortable :)\n'You can\\'t beat me.'; // uncomfortable :(\n'Oh! Yes. I can \"beat\" you.'; // comfortable :)\n\"Do you really think, you can \\\"beat\\\" me?\"; // uncomfortable :(\n\"You're my guest. I can \\\"beat\\\" you.\"; // sometimes, you've to :P\n'You\\'re my guest too. I can \"beat\" you too.'; // sometimes, you've to :P\n</code>", "<code>`Be \"my\" guest. You're in complete freedom.`; // most comfort :D\n</code>", "<code>public static function redirectPage( $pageLocation )\n{\n    echo \"&lt;script type='text/javascript'&gt;window.location = '$pageLocation';&lt;/script&gt;\";\n}\n</code>", "<code>var description = \"This is a \\\"quick\\\" test\";</code>", "<code>elem.innerHTML = '&lt;a href=\"' + url + '\"&gt;Hello&lt;/a&gt;';</code>", "<code>elem.innerHTML = \"&lt;a href='\" + url + \"'&gt;Hello&lt;/a&gt;\";</code>", "<code>myJson = '{ \"hello world\": true }';</code>", "<code>    \"He said: \\\"Let's go!\\\"\"\r\n    'He said: \"Let\\'s go!\"'\r\n    \"He said: \\\"Let\\'s go!\\\"\"\r\n    'He said: \\\"Let\\'s go!\\\"'</code>", "<code>\"'\" + singleQuotedValue + \"'\"\n'\"' + doubleQuotedValue + '\"'\n</code>", "<code>'\\'' + singleQuotedValue + '\\''\n\"\\\"\" + doubleQuotedValue + \"\\\"\"\n</code>", "<code>\"This is my #{name}\"\n</code>", "<code>`This is my ${name}`\n</code>", "<code>a=b;\n</code>", "<code>a = b;\n</code>", "<code>//Part1\nvar r='';\nvar iTime3 = new Date().valueOf();\nfor(var j=0; j&lt;1000000; j++) {\n    r+='a';\n}\nvar iTime4 = new Date().valueOf();\nalert('With single quote : ' + (iTime4 - iTime3));  \n\n//Part 2                \nvar s=\"\";\nvar iTime1 = new Date().valueOf();\nfor(var i=0; i&lt;1000000; i++) {\n    s += \"a\";\n}\nvar iTime2 = new Date().valueOf();\nalert('With double quote: ' + (iTime2 - iTime1));\n</code>", "<code>var dummy_date = new Date()</code>", "<code>elem.innerHTML=\"&lt;img src='smily' alt='It\\'s a Smily' style='width:50px'&gt;\";\n</code>", "<code>&lt;img src=\"smiley\" alt=\"It's a Smiley\" style=\"width:50px\"&gt;\n</code>", "<code>&lt;img src=smiley alt=\"It's a Smiley\" style=width:50px&gt;\n</code>", "<code>var arr=['this','that'];\n</code>", "<code>JSON=[\"this\",\"that\"]\n</code>", "<code>if (typeof s == 'string') ...</code>", "<code>'&lt;a href=\"#\"&gt; like so &lt;a&gt;'</code>", "<code>document.createElement('div')</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "google-chrome", "google-chrome-extension"], "creation_date": 1275537994, "body_markdown": "I&#39;d like for my chrome extension to reload every time I save a file in the extension folder, without having to explicitly click &quot;reload&quot; in [chrome://extensions/][1]. Is this possible?\r\n\r\nEdit: I&#39;m aware I can [update the interval][2] at which Chrome reloads extensions, which is a half-way solution, but I&#39;d rather either making my editor (emacs or textmate) trigger on-save a reload or asking Chrome to monitor the directory for changes.\r\n\r\n\r\n  [1]: chrome://extensions/\r\n  [2]: http://developer.chrome.com/extensions/autoupdate.html", "last_edit_date": 1467480080, "up_vote_count": 191, "link": "https://stackoverflow.com/questions/2963260/how-do-i-auto-reload-a-chrome-extension-im-developing", "_childDocuments_": [{"tags": [], "down_vote_count": 3, "creation_date": 1275562129, "answer_id": 2965192, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1275562129, "body_markdown": "It can&#39;t be done directly.  Sorry.\r\n\r\nIf you would like to see it as a feature you can request it at http://crbug.com/new"}, {"tags": [], "down_vote_count": 1, "creation_date": 1276055325, "answer_id": 3002976, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1276055325, "last_edit_date": 1495539206, "body_markdown": "Chrome Extensions have a [permission system][1] that it wouldn&#39;t allow it (some people in SO [had the same problem as you][2]), so requesting them to &quot;add this feature&quot; is not going to work IMO. There&#39;s a mail from Chromium Extensions Google Groups with a [proposed solution (theory)][3] using `chrome.extension.getViews()`, but is not guaranteed to work either.\r\n\r\nIf it was possible to add to the `manifest.json` some Chrome internal pages like `chrome://extensions/`, it would be possible to create a plugin that would interact to the `Reload` anchor, and, using an external program like [XRefresh][4] (a Firefox Plugin - there&#39;s a [Chrome version][5] using Ruby and WebSocket), you would achieve just what you need:\r\n\r\n&gt; XRefresh is a browser plugin which\r\n&gt; will refresh current web page due to\r\n&gt; file change in selected folders. This\r\n&gt; makes it possible to do live page\r\n&gt; editing with your favorite HTML/CSS\r\n&gt; editor.\r\n\r\nIt&#39;s not possible to do it, but I think you can use this same concept in a different way.\r\n\r\nYou could try to find third-party solutions instead that, after seeing modifications in a file (I don&#39;t know emacs neither Textmate, but in Emacs it would be possible to bind an app call within a &quot;save file&quot; action), just clicks in an specific coordinate of an specific application: in this case it&#39;s the `Reload` anchor from your extension in development (you leave a Chrome windows opened just for this reload).\r\n\r\n(Crazy as hell but it may work)\r\n\r\n  [1]: http://code.google.com/chrome/extensions/manifest.html#permissions\r\n  [2]: https://stackoverflow.com/questions/1761799/how-do-i-refresh-relaod-a-chrome-extension\r\n  [3]: http://www.mail-archive.com/chromium-extensions@googlegroups.com/msg01874.html\r\n  [4]: http://xrefresh.binaryage.com/\r\n  [5]: http://gist.github.com/342682"}, {"tags": [], "down_vote_count": 0, "creation_date": 1276055521, "answer_id": 3002990, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1276055521, "body_markdown": "Your content files such has html and manifest files are not changeable without installation of the extension, but I do believe that the JavaScript files are dynamically loaded until the extension has been packed.\r\n\r\nI know this because of a current project im working on via the Chrome Extensions API, and seems to load every-time i refresh a page."}, {"tags": [], "down_vote_count": 1, "creation_date": 1322402204, "answer_id": 8286066, "path": "stack.gulp.answer", "score": -1, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1441662965, "last_edit_date": 1441662965, "body_markdown": "Yes,you can do it indirectly! Here is my solution.\r\n\r\nIn manifest.json\r\n\r\n    {\r\n    \t&quot;name&quot;: &quot;&quot;,\r\n    \t&quot;version&quot;: &quot;1.0.0&quot;,\r\n    \t&quot;description&quot;: &quot;&quot;,\r\n    \t&quot;content_scripts&quot;:[{\r\n            &quot;run_at&quot;:&quot;document_end&quot;,\r\n    \t\t&quot;matches&quot;:[&quot;http://*/*&quot;],\r\n    \t\t&quot;js&quot;:[&quot;/scripts/inject.js&quot;]\r\n    \t}]\r\n    }\r\n\r\nIn inject.js\r\n\r\n    (function() {\r\n        var script = document.createElement(&#39;script&#39;); \r\n        script.type = &#39;text/javascript&#39;; \r\n        script.async = true;\r\n        script.src = &#39;Your_Scripts&#39;;\r\n        var s = document.getElementsByTagName(&#39;script&#39;)[0];\r\n        s.parentNode.insertBefore(script, s);\r\n    })();\r\n\r\nYour injected script can inject other script from any location.\r\n\r\nAnother benefit from this technic is that you can just ignore the limitation of **isolated world**. see [content script execution environment][1]\r\n\r\n\r\n  [1]: http://code.google.com/chrome/extensions/content_scripts.html"}, {"tags": [], "down_vote_count": 0, "creation_date": 1331372494, "answer_id": 9645435, "path": "stack.gulp.answer", "score": 50, "up_vote_count": 50, "is_accepted": false, "last_activity_date": 1401721733, "last_edit_date": 1486564492, "body_markdown": "**Update**: I have added an options page, so that you don&#39;t have to manually find and edit the extension&#39;s ID any more. [CRX][3] and source code are at: https://github.com/Rob--W/Chrome-Extension-Reloader  \r\nUpdate 2: Added shortcut (see my repository on Github).  \r\n&lt;sub&gt;*The original code, which includes the **basic functionality** is shown below*.&lt;/sub&gt;\r\n\r\n---\r\n\r\nCreate an extension, and use the [Browser Action][1] method in conjunction with the [`chrome.extension.management`][2] API to reload your unpacked extension.\r\n\r\nThe code below adds a button to Chrome, which will reload an extension upon click.\r\n\r\n\r\n##`manifest.json`\r\n\r\n    {\r\n        &quot;name&quot;: &quot;Chrome Extension Reloader&quot;,\r\n        &quot;version&quot;: &quot;1.0&quot;,\r\n        &quot;manifest_version&quot;: 2,\r\n        &quot;background&quot;: {&quot;scripts&quot;: [&quot;bg.js&quot;] },\r\n        &quot;browser_action&quot;: {\r\n            &quot;default_icon&quot;: &quot;icon48.png&quot;,\r\n            &quot;default_title&quot;: &quot;Reload extension&quot;\r\n        },\r\n        &quot;permissions&quot;: [&quot;management&quot;]\r\n    }\r\n\r\n##`bg.js`\r\n\r\n    var id = &quot;&lt;extension_id here&gt;&quot;;\r\n    function reloadExtension(id) {\r\n        chrome.management.setEnabled(id, false, function() {\r\n            chrome.management.setEnabled(id, true);\r\n        });\r\n    }\r\n    chrome.browserAction.onClicked.addListener(function(tab) {\r\n        reloadExtension(id);\r\n    });\r\n\r\n**`icon48.png`**: Pick any nice 48x48 icon, for example:&lt;br /&gt;\r\n![Google Chrome][4] ![Google Chrome][5]\r\n\r\n\r\n  [1]: http://developer.chrome.com/extensions/browserAction.html\r\n  [2]: http://developer.chrome.com/extensions/management.html\r\n  [3]: https://github.com/Rob--W/Chrome-Extension-Reloader/blob/master/Chrome-Extension-Reloader.crx\r\n  [4]: http://icons.iconarchive.com/icons/google/chrome/48/Google-Chrome-icon.png\r\n  [5]: https://a.fsdn.com/con/icons/ch/chromiumupdater@sf.net/product_logo_48.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1334765481, "answer_id": 10213500, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1334765481, "body_markdown": "Here&#39;s a function that you can use to watch files for changes, and reload if changes are detected. It works by polling them via AJAX, and reloading via window.location.reload(). I suppose you shouldn&#39;t use this in a distribution package.\r\n\r\n\r\n    function reloadOnChange(url, checkIntervalMS) {\r\n        if (!window.__watchedFiles) {\r\n            window.__watchedFiles = {};\r\n        }\r\n        \r\n        (function() {\r\n            var self = arguments.callee;\r\n            var xhr = new XMLHttpRequest();\r\n    \r\n            xhr.onreadystatechange = function() {\r\n                if (xhr.readyState == 4) {\r\n                    if (__watchedFiles[url] &amp;&amp;\r\n                        __watchedFiles[url] != xhr.responseText) {\r\n                        window.location.reload();\r\n                    } else {\r\n                        __watchedFiles[url] = xhr.responseText\r\n                        window.setTimeout(self, checkIntervalMS || 1000);\r\n                    }\r\n                }\r\n            };\r\n            \r\n            xhr.open(&quot;GET&quot;, url, true);\r\n            xhr.send();\r\n        })();\r\n    }\r\n\r\n    reloadOnChange(chrome.extension.getURL(&#39;/myscript.js&#39;));"}, {"tags": [], "down_vote_count": 0, "creation_date": 1349597907, "answer_id": 12767200, "path": "stack.gulp.answer", "score": 113, "up_vote_count": 113, "is_accepted": true, "last_activity_date": 1422730300, "last_edit_date": 1422730300, "body_markdown": "You can use **&quot;[Extensions Reloader][1]&quot;** for Chrome:\r\n\r\n\r\n&gt; **Reloads all unpacked extensions using the extension&#39;s toolbar button or by browsing to &quot;[http://reload.extensions][2]&quot;**\r\n&gt; \r\n&gt; If you&#39;ve ever developed a Chrome extension, you might have wanted to\r\n&gt; automate the process of reloading your unpacked extension without the\r\n&gt; need of going through the extensions page.\r\n&gt; \r\n&gt; &quot;Extensions Reloader&quot; allows you to reload all unpacked extensions \r\n&gt; using 2 ways:\r\n&gt;\r\n&gt; 1 - The extension&#39;s toolbar button.\r\n&gt;\r\n&gt; 2 - Browsing to &quot;[http://reload.extensions][3]&quot;.\r\n&gt; \r\n&gt; The toolbar icon will reload unpacked extensions using a single click.\r\n&gt; \r\n&gt; The &quot;reload by browsing&quot; is intended for automating the reload process\r\n&gt; using &quot;post build&quot; scripts - just add a browse to\r\n&gt; &quot;[http://reload.extensions][4]&quot; using Chrome to your script, and you&#39;ll\r\n&gt; have a refreshed Chrome window.\r\n\r\n\r\n  [1]: https://chrome.google.com/webstore/detail/extensions-reloader/fimgfedafeadlieiabdeeaodndnlbhid\r\n  [2]: http://reload.extensions\r\n  [3]: http://reload.extensions\r\n  [4]: http://reload.extensions\r\n  [5]: https://github.com/arikw/chrome-extensions-reloader\r\n\r\n**Update:** As of January 14, 2015, the extension is open-sourced and [available on GitHub][5]."}, {"tags": [], "down_vote_count": 0, "creation_date": 1358456496, "answer_id": 14388038, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1358456496, "body_markdown": "Thanks to @GmonC and @Arik and some spare time, I managet to get this working. I have had to change two files to make this work.\r\n\r\n(1) Install LiveReload and Chrome Extension for that application. \r\nThis will call some script on file change. \r\n\r\n(2) Open `&lt;LiveReloadInstallDir&gt;\\Bundled\\backend\\res\\livereload.js`\r\n\r\n(3) change line `#509` to \r\n\r\n`this.window.location.href = &quot;http://reload.extensions&quot;;`\r\n\r\n(4) Now install another extension `Extensions Reloader` which has useful link handler that reload all development extensions on navigating to `&quot;http://reload.extensions&quot;`\r\n\r\n(5) Now change that extension&#39;s `background.min.js` in this way\r\n\r\n`if((d.installType==&quot;development&quot;)&amp;&amp;(d.enabled==true)&amp;&amp;(d.name!=&quot;Extensions Reloader&quot;))`\r\n\r\nreplace with\r\n\r\n    if((d.installType==&quot;development&quot;)&amp;&amp;(d.enabled==true)&amp;&amp;(d.name!=&quot;Extensions Reloader&quot;)&amp;&amp;(d.name!=&quot;LiveReload&quot;))\r\n\r\nOpen LiveReload application, hide Extension Reloader button and activate LiveReload extension by clicking on button in toolbar, you will now reload page and extensions on each file change while using all other goodies from LiveReload (css reload, image reload etc.)\r\n\r\nOnly bad thing about this is that you will have to repeat procedure of changing scripts on every extension update. To avoid updates, add extension as unpacked. \r\n\r\nWhen I&#39;ll have more time to mess around with this, I probably will create extension that eliminates need for both of these extensions.\r\n\r\nUntill then, I&#39;m working on my extension [Projext Axeman][1]\r\n\r\n\r\n  [1]: http://justbuild.github.com/Project-Axeman/"}, {"tags": [], "down_vote_count": 3, "creation_date": 1369260714, "answer_id": 16702458, "path": "stack.gulp.answer", "score": 25, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1497489234, "last_edit_date": 1497489234, "body_markdown": "in any function or event\r\n\r\n    chrome.runtime.reload();\r\n\r\nwill reload your extension. You also need to change the **manifest.json** file, adding:\r\n\r\n    ...\r\n    &quot;permissions&quot;: [ &quot;management&quot; , ...]\r\n    ...\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1377817990, "answer_id": 18522414, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1377817990, "body_markdown": "Maybe a bit late answer but I think [crxreload](https://github.com/wader/crxreload) might work for you. It&#39;s my result of trying to have a reload-on-save workflow while developing."}, {"tags": [], "down_vote_count": 0, "creation_date": 1381188612, "answer_id": 19236542, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1381188612, "body_markdown": "Just found a newish [grunt][1] based project that provides bootstrapping, scaffolding, some automated pre-processing faculty, as well as auto-reloading (no interaction needed). \r\n\r\n[Bootstrap Your Chrome Extension][2] from Websecurify\r\n\r\n\r\n  [1]: http://gruntjs.com/\r\n  [2]: http://blog.websecurify.com/2013/09/chrome-extension-development-simplified.html\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1386469639, "answer_id": 20449147, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1386469639, "body_markdown": "I&#39;ve forked [LiveJS](https://github.com/labofoz/Packaged-LiveJS) to allow for live reloading of Packaged Apps. Just include the file in your app and every time you save a file the app will autoreload."}, {"tags": [], "down_vote_count": 0, "creation_date": 1428485593, "answer_id": 29510936, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1428485593, "body_markdown": "Another solution would be to create custom livereload script (extension-reload.js):\r\n\r\n    // Reload client for Chrome Apps &amp; Extensions.\r\n    // The reload client has a compatibility with livereload.\r\n    // WARNING: only supports reload command.\r\n    \r\n    var LIVERELOAD_HOST = &#39;localhost:&#39;;\r\n    var LIVERELOAD_PORT = 35729;\r\n    var connection = new WebSocket(&#39;ws://&#39; + LIVERELOAD_HOST + LIVERELOAD_PORT + &#39;/livereload&#39;);\r\n    \r\n    connection.onerror = function (error) {\r\n      console.log(&#39;reload connection got error:&#39;, error);\r\n    };\r\n    \r\n    connection.onmessage = function (e) {\r\n      if (e.data) {\r\n        var data = JSON.parse(e.data);\r\n        if (data &amp;&amp; data.command === &#39;reload&#39;) {\r\n          chrome.runtime.reload();\r\n        }\r\n      }\r\n    };\r\n\r\nThis script connects to the livereload server using websockets. Then, it will issue a chrome.runtime.reload() call upon reload message from livereload. The next step would be to add this script to run as background script in your manifest.json, and voila!\r\n\r\nNote: this is not my solution. I&#39;m just posting it. I found it in the generated code of [Chrome Extension generator][1] (Great tool!). I&#39;m posting this here because it might help.\r\n\r\n\r\n  [1]: https://github.com/yeoman/generator-chrome-extension &quot;Chrome Extension generator&quot;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1438289263, "answer_id": 31733718, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1438289263, "body_markdown": "Maybe I&#39;m a little late to the party, but I&#39;ve solved it for me by creating https://chrome.google.com/webstore/detail/chrome-unpacked-extension/fddfkmklefkhanofhlohnkemejcbamln \r\n\r\nIt works by reloading `chrome://extensions` page, whenever `file.change` events are incoming via websockets.\r\n\r\nA Gulp-based example of how to emit `file.change` event upon file changes in an extension folder can be found here: https://github.com/robin-drexler/chrome-extension-auto-reload-watcher\r\n\r\nWhy reloading the entire tab instead of just using the extensions management api to reload/re-enable extensions? Currently disabling and enabling extensions again causes any open inspection window (console log etc.) to close, which I found to be too annoying during active development."}, {"tags": [], "down_vote_count": 0, "creation_date": 1444793468, "answer_id": 33116160, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1444793468, "body_markdown": "As mentioned in the docs: the following command line will reload an app \r\n\r\n    /Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --load-and-launch-app=[path to the app ]\r\n\r\nso I just created a shell script and called that file from gulp. Super simple:\r\n\r\n    var exec = require(&#39;child_process&#39;).exec;\r\n\r\n\r\n\r\n    gulp.task(&#39;reload-chrome-build&#39;,function(cb){\r\n\r\n    console.log(&quot;reload&quot;);\r\n\r\n    var cmd=&quot;./reloadchrome.sh&quot;\r\n    \r\n    exec(cmd,function (err, stdout, stderr) {\r\n        console.log(&quot;done: &quot;+stdout);\r\n\r\n        cb(err);\r\n        }\r\n    );});\r\n\r\n\r\n\r\nrun your necessary watch commands on scripts and call the reload task when you want to. Clean, simple. \r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1453551778, "answer_id": 34963393, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1453551778, "body_markdown": "This is where software such as AutoIt or alternatives shine. The key is writing a script which emulates your current testing phase. Get used to using at least one of them as many technologies do not come with clear workflow/testing paths.\r\n\r\n    Run(&quot;c:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot;)\r\n    WinWaitActive(&quot;New Tab - Google Chrome&quot;)\r\n    Send(&quot;^l&quot;)\r\n    Send(&quot;chrome://extensions{ENTER}&quot;)\r\n    WinWaitActive(&quot;Extensions - Google Chrome&quot;)\r\n    Send(&quot;{TAB}{TAB}{TAB}{TAB}{TAB}{TAB}&quot;)\r\n    Send(&quot;{ENTER}&quot;)\r\n    WinWaitActive(&quot;Extensions - Google Chrome&quot;)\r\n    Send(&quot;{TAB}{TAB}&quot;)\r\n    Send(&quot;{ENTER}&quot;)\r\n    WinWaitActive(&quot;Developer Tools&quot;)\r\n    Send(&quot;^`&quot;)\r\n\r\nObviously you change the code to suit your testing/iterating needs. Make sure tab clicks are true to where the anchor tag is in the chrome://extensions site. You could also use relative to window mouse movements and other such macros.\r\n\r\nI would add the script to Vim in a way similar to this:\r\n\r\n    map &lt;leader&gt;A :w&lt;CR&gt;:!{input autoit loader exe here} &quot;{input script location here}&quot;&lt;CR&gt;\r\n\r\nThis means that when I&#39;m in Vim I press the button above ENTER (usually responsible for: | and \\\\) known as the leader button and follow it with a capital &#39;A&#39; and it saves and begins my testing phase script.\r\n\r\nPlease make sure to fill in the {input...} sections in the above Vim/hotkey script appropriately.\r\n\r\nMany editors will allow you to do something similar with hotkeys.\r\n\r\nAlternatives to &lt;a href=&quot;https://www.autoitscript.com/site/autoit/&quot;&gt;AutoIt&lt;/a&gt; can be found &lt;a href=&quot;http://alternativeto.net/software/autoit/&quot;&gt;here&lt;/a&gt;.\r\n\r\nFor Windows: AutoHotkey\r\n\r\nFor Linux: xdotool, xbindkeys\r\n\r\nFor Mac: Automator"}, {"tags": [], "down_vote_count": 0, "creation_date": 1455325465, "answer_id": 35374831, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1455325465, "body_markdown": "**If you have a Mac, &#161;the easiest way is with Alfred App!**\r\n\r\nJust get *Alfred App with Powerpack*, then add the workflow provided in the link below and customise the hotkey you want (I like to use \u2318 + \u2325 + R). That&#39;s all.\r\n\r\nNow, every time you use the hotkey, *Google Chrome* will reload, no matter which application you&#39;re at that moment.\r\n\r\nIf you want to use other browser, open the AppleScript inside Alfred Preferences Workflows and replace &quot;Google Chrome&quot; with &quot;Firefox&quot;, &quot;Safari&quot;, ...\r\n\r\nI also will show here the content of the **/usr/bin/osascript** script used in the *ReloadChrome.alfredworkflow file* so you can see what it is doing.\r\n\r\n    tell application &quot;Google Chrome&quot;\r\n\t  activate\r\n\t  delay 0.5\r\n\t  tell application &quot;System Events&quot; to keystroke &quot;r&quot; using command down\r\n\t  delay 0.5\r\n\t  tell application &quot;System Events&quot; to keystroke tab using command down\r\n    end tell\r\n\r\nThe workflow file is [ReloadChrome.alfredworkflow][1].\r\n\r\n  [1]: http://nitroflare.com/view/20BCC03C472BEB2/ReloadChrome.alfredworkflow"}, {"tags": [], "down_vote_count": 0, "creation_date": 1456076567, "answer_id": 35539564, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1456076567, "body_markdown": "Use `npm init` to create a package.json in directory root, then\r\n\r\n`npm install --save-dev gulp-open &amp;&amp; npm install -g gulp`\r\n\r\nthen create a `gulpfile.js`\r\n\r\nwhich looks like:\r\n\r\n    /* File: gulpfile.js */\r\n    \r\n    // grab our gulp packages\r\n    var gulp  = require(&#39;gulp&#39;),\r\n        open = require(&#39;gulp-open&#39;);\r\n    \r\n    // create a default task and just log a message\r\n    gulp.task(&#39;default&#39;, [&#39;watch&#39;]);\r\n    \r\n    // configure which files to watch and what tasks to use on file changes\r\n    gulp.task(&#39;watch&#39;, function() {\r\n      gulp.watch(&#39;extensionData/userCode/**/*.js&#39;, [&#39;uri&#39;]);\r\n    });\r\n    \r\n    gulp.task(&#39;uri&#39;, function(){\r\n      gulp.src(__filename)\r\n      .pipe(open({uri: &quot;http://reload.extensions&quot;}));\r\n    });\r\n\r\nThis works for me developing with CrossRider, you might watch to change the path you watch the files at, also assuming you have npm and node installed."}, {"tags": [], "down_vote_count": 0, "creation_date": 1469830647, "answer_id": 38668250, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1469830647, "body_markdown": "I want to reload (update) my extensions overnight, this is what I use in background.js:\r\n\r\n    var d = new Date();\r\n    var n = d.getHours();\r\n    var untilnight = (n == 0) ? 24*3600000 : (24-n)*3600000; \r\n    // refresh after 24 hours if hour = 0 else\r\n    // refresh after 24-n hours (that will always be somewhere between 0 and 1 AM)\r\n    setTimeout(function() {\r\n    \tlocation.reload();\r\n    }, untilnight);\r\n\r\nRegards, \r\nPeter"}, {"tags": [], "down_vote_count": 0, "creation_date": 1478464502, "answer_id": 40454227, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 16, "is_accepted": false, "last_activity_date": 1478714052, "last_edit_date": 1478714052, "body_markdown": "I&#39;ve made a simple embeddable script doing hot reload:\r\n\r\n**https://github.com/xpl/crx-hotreload**\r\n\r\nIt watches for file changes in an extension&#39;s directory. When a change detected, it reloads the extension and refreshes the active tab (to re-trigger updated content scripts).\r\n\r\n- Works by checking timestamps of files\r\n- Supports nested directories\r\n- Automatically disables itself in the production configuration\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1505960543, "answer_id": 46334432, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1505960543, "body_markdown": "Disclaimer: I developed this extension myself.\r\n\r\n## [Clerc - for Chrome Live Extension Reloading Client](https://chrome.google.com/webstore/detail/clerc/dncedehofgbacgaojmingbdfogecjjbj)\r\n\r\n&gt; Connect to a LiveReload compatible server to automatically reload your extension every time you save.\r\n\r\n&gt; Bonus: with a little extra work on your part, you can also automatically reload the webpages that your extension alters.\r\n\r\nMost webpage developers use a build system with some sort of watcher that automatically builds their files and restarts their server and reloads the website.\r\n\r\nDeveloping extensions shouldn&#39;t need to be that different. Clerc brings this same automation to Chrome devs. Set up a build system with a LiveReload server, and Clerc will listen for reload events to refresh your extension.\r\n\r\nThe only big gotcha is changes to the manifest.json. Any tiny typos in the manifest will probably cause further reload attempts to fail, and you will be stuck uninstalling/reinstalling your extension to get your changes loading again.\r\n\r\nClerc forwards the complete reload message to your extension after it reloads, so you can optionally use the provided message to trigger further refresh steps."}], "title": "How do I auto-reload a Chrome extension I&#39;m developing?", "view_count": 44385, "answer_count": 21, "code_snippet": ["<code>http://reload.extensions</code>", "<code>chrome.extension.management</code>", "<code>manifest.json</code>", "<code>{\n    \"name\": \"Chrome Extension Reloader\",\n    \"version\": \"1.0\",\n    \"manifest_version\": 2,\n    \"background\": {\"scripts\": [\"bg.js\"] },\n    \"browser_action\": {\n        \"default_icon\": \"icon48.png\",\n        \"default_title\": \"Reload extension\"\n    },\n    \"permissions\": [\"management\"]\n}\n</code>", "<code>bg.js</code>", "<code>var id = \"&lt;extension_id here&gt;\";\nfunction reloadExtension(id) {\n    chrome.management.setEnabled(id, false, function() {\n        chrome.management.setEnabled(id, true);\n    });\n}\nchrome.browserAction.onClicked.addListener(function(tab) {\n    reloadExtension(id);\n});\n</code>", "<code>icon48.png</code>", "<code>chrome.i18n.getMessage(\"@@extension_id\")</code>", "<code>management</code>", "<code>chrome.runtime.reload();\n</code>", "<code>...\n\"permissions\": [ \"management\" , ...]\n...\n</code>", "<code>chrome.runtime.reload()</code>", "<code>chrome.runtime.reload()</code>", "<code>import reloader from 'hot-reload'</code>", "<code>chrome.extension.getViews()</code>", "<code>manifest.json</code>", "<code>chrome://extensions/</code>", "<code>Reload</code>", "<code>Reload</code>", "<code>chrome.management.setEnabled()</code>", "<code>// Reload client for Chrome Apps &amp; Extensions.\n// The reload client has a compatibility with livereload.\n// WARNING: only supports reload command.\n\nvar LIVERELOAD_HOST = 'localhost:';\nvar LIVERELOAD_PORT = 35729;\nvar connection = new WebSocket('ws://' + LIVERELOAD_HOST + LIVERELOAD_PORT + '/livereload');\n\nconnection.onerror = function (error) {\n  console.log('reload connection got error:', error);\n};\n\nconnection.onmessage = function (e) {\n  if (e.data) {\n    var data = JSON.parse(e.data);\n    if (data &amp;&amp; data.command === 'reload') {\n      chrome.runtime.reload();\n    }\n  }\n};\n</code>", "<code>function reloadOnChange(url, checkIntervalMS) {\n    if (!window.__watchedFiles) {\n        window.__watchedFiles = {};\n    }\n\n    (function() {\n        var self = arguments.callee;\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4) {\n                if (__watchedFiles[url] &amp;&amp;\n                    __watchedFiles[url] != xhr.responseText) {\n                    window.location.reload();\n                } else {\n                    __watchedFiles[url] = xhr.responseText\n                    window.setTimeout(self, checkIntervalMS || 1000);\n                }\n            }\n        };\n\n        xhr.open(\"GET\", url, true);\n        xhr.send();\n    })();\n}\n\nreloadOnChange(chrome.extension.getURL('/myscript.js'));\n</code>", "<code>console.log</code>", "<code>chrome://extensions</code>", "<code>file.change</code>", "<code>file.change</code>", "<code>npm init</code>", "<code>npm install --save-dev gulp-open &amp;&amp; npm install -g gulp</code>", "<code>gulpfile.js</code>", "<code>/* File: gulpfile.js */\n\n// grab our gulp packages\nvar gulp  = require('gulp'),\n    open = require('gulp-open');\n\n// create a default task and just log a message\ngulp.task('default', ['watch']);\n\n// configure which files to watch and what tasks to use on file changes\ngulp.task('watch', function() {\n  gulp.watch('extensionData/userCode/**/*.js', ['uri']);\n});\n\ngulp.task('uri', function(){\n  gulp.src(__filename)\n  .pipe(open({uri: \"http://reload.extensions\"}));\n});\n</code>", "<code>&lt;LiveReloadInstallDir&gt;\\Bundled\\backend\\res\\livereload.js</code>", "<code>#509</code>", "<code>this.window.location.href = \"http://reload.extensions\";</code>", "<code>Extensions Reloader</code>", "<code>\"http://reload.extensions\"</code>", "<code>background.min.js</code>", "<code>if((d.installType==\"development\")&amp;&amp;(d.enabled==true)&amp;&amp;(d.name!=\"Extensions Reloader\"))</code>", "<code>if((d.installType==\"development\")&amp;&amp;(d.enabled==true)&amp;&amp;(d.name!=\"Extensions Reloader\")&amp;&amp;(d.name!=\"LiveReload\"))\n</code>", "<code>/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --load-and-launch-app=[path to the app ]\n</code>", "<code>var exec = require('child_process').exec;\n\n\n\ngulp.task('reload-chrome-build',function(cb){\n\nconsole.log(\"reload\");\n\nvar cmd=\"./reloadchrome.sh\"\n\nexec(cmd,function (err, stdout, stderr) {\n    console.log(\"done: \"+stdout);\n\n    cb(err);\n    }\n);});\n</code>", "<code>Run(\"c:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\")\nWinWaitActive(\"New Tab - Google Chrome\")\nSend(\"^l\")\nSend(\"chrome://extensions{ENTER}\")\nWinWaitActive(\"Extensions - Google Chrome\")\nSend(\"{TAB}{TAB}{TAB}{TAB}{TAB}{TAB}\")\nSend(\"{ENTER}\")\nWinWaitActive(\"Extensions - Google Chrome\")\nSend(\"{TAB}{TAB}\")\nSend(\"{ENTER}\")\nWinWaitActive(\"Developer Tools\")\nSend(\"^`\")\n</code>", "<code>map &lt;leader&gt;A :w&lt;CR&gt;:!{input autoit loader exe here} \"{input script location here}\"&lt;CR&gt;\n</code>", "<code>tell application \"Google Chrome\"\n  activate\n  delay 0.5\n  tell application \"System Events\" to keystroke \"r\" using command down\n  delay 0.5\n  tell application \"System Events\" to keystroke tab using command down\nend tell\n</code>", "<code>var d = new Date();\nvar n = d.getHours();\nvar untilnight = (n == 0) ? 24*3600000 : (24-n)*3600000; \n// refresh after 24 hours if hour = 0 else\n// refresh after 24-n hours (that will always be somewhere between 0 and 1 AM)\nsetTimeout(function() {\n    location.reload();\n}, untilnight);\n</code>", "<code>{\n    \"name\": \"\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"content_scripts\":[{\n        \"run_at\":\"document_end\",\n        \"matches\":[\"http://*/*\"],\n        \"js\":[\"/scripts/inject.js\"]\n    }]\n}\n</code>", "<code>(function() {\n    var script = document.createElement('script'); \n    script.type = 'text/javascript'; \n    script.async = true;\n    script.src = 'Your_Scripts';\n    var s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(script, s);\n})();\n</code>"], "path": "stack.gulp"}, {"tags": ["json", "comments"], "creation_date": 1225226343, "body_markdown": "Can I use comments inside a JSON file? If so, how?", "last_edit_date": 1469201960, "up_vote_count": 5334, "link": "https://stackoverflow.com/questions/244777/can-comments-be-used-in-json", "_childDocuments_": [{"tags": [], "down_vote_count": 4, "creation_date": 1225226540, "answer_id": 244795, "path": "stack.gulp.answer", "score": 91, "up_vote_count": 95, "is_accepted": false, "last_activity_date": 1484846433, "last_edit_date": 1484846433, "body_markdown": "You can&#39;t. At least that&#39;s my experience from a quick glance at [json.org][1].\r\n\r\nJSON has its syntax visualized on that page. There isn&#39;t any note about comments.\r\n\r\n  [1]: http://json.org\r\n"}, {"tags": [], "down_vote_count": 19, "creation_date": 1225227702, "answer_id": 244858, "path": "stack.gulp.answer", "score": 3667, "up_vote_count": 3686, "is_accepted": true, "last_activity_date": 1459977957, "last_edit_date": 1459977957, "body_markdown": "I don&#39;t believe you can have an actual comment.  The JSON should all be data, and if you include a comment, then it will be data too.\r\n\r\nYou could have a designated data element called `&quot;_comment&quot;` (or something) that would be ignored by apps that use the JSON data.\r\n\r\nYou would probably be better having the comment in the processes that generates/receives the JSON, as they are supposed to know what the JSON data will be in advance, or at least the structure of it. \r\n\r\nBut if you decided to:\r\n\r\n    {\r\n       &quot;_comment&quot;: &quot;comment text goes here...&quot;,\r\n       &quot;glossary&quot;: {\r\n          &quot;title&quot;: &quot;example glossary&quot;,\r\n          &quot;GlossDiv&quot;: {\r\n             &quot;title&quot;: &quot;S&quot;,\r\n             &quot;GlossList&quot;: {\r\n                &quot;GlossEntry&quot;: {\r\n                   &quot;ID&quot;: &quot;SGML&quot;,\r\n                   &quot;SortAs&quot;: &quot;SGML&quot;,\r\n                   &quot;GlossTerm&quot;: &quot;Standard Generalized Markup Language&quot;,\r\n                   &quot;Acronym&quot;: &quot;SGML&quot;,\r\n                   &quot;Abbrev&quot;: &quot;ISO 8879:1986&quot;,\r\n                   &quot;GlossDef&quot;: {\r\n                      &quot;para&quot;: &quot;A meta-markup language, used to create markup languages such as DocBook.&quot;,\r\n                      &quot;GlossSeeAlso&quot;: [&quot;GML&quot;, &quot;XML&quot;]\r\n                   },\r\n                   &quot;GlossSee&quot;: &quot;markup&quot;\r\n                }\r\n             }\r\n          }\r\n       }\r\n    }\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1225235152, "answer_id": 245213, "path": "stack.gulp.answer", "score": 24, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1484846729, "last_edit_date": 1484846729, "body_markdown": "The idea behind JSON is to provide simple data exchange between applications. These are typically web based and the language is JavaScript.\r\n\r\nIt doesn&#39;t really allow for comments as such, however, passing a comment as one of the name/value pairs in the data would certainly work, although that data would obviously need to be ignored or handled specifically by the parsing code.\r\n\r\nAll that said, it&#39;s not the intention that the JSON file should contain comments in the traditional sense. It should just be the data.\r\n\r\nHave a look at the [JSON website][1] for more detail.\r\n\r\n  [1]: http://www.json.org/\r\n"}, {"tags": [], "down_vote_count": 6, "creation_date": 1270852255, "answer_id": 2611372, "path": "stack.gulp.answer", "score": 36, "up_vote_count": 42, "is_accepted": false, "last_activity_date": 1440870686, "last_edit_date": 1440870686, "body_markdown": "If your text file, which is a JSON string, is going to be read by some program, how difficult would it be to strip out either C or C++ style comments before using it?\r\n\r\n**Answer:** It would be a one liner. If you do that then JSON files could be used as configuration files."}, {"tags": [], "down_vote_count": 8, "creation_date": 1277317253, "answer_id": 3104376, "path": "stack.gulp.answer", "score": 634, "up_vote_count": 642, "is_accepted": false, "last_activity_date": 1484919610, "last_edit_date": 1484919610, "body_markdown": "**Include comments if you choose; strip them out with a minifier before parsing or transmitting.**\r\n\r\nI just released **&lt;a href=&quot;http://github.com/getify/JSON.minify&quot;&gt;JSON.minify()&lt;/a&gt;** which strips out comments and whitespace from a block of JSON and makes it valid JSON that can be parsed. So, you might use it like:  \r\n\r\n    JSON.parse(JSON.minify(my_str));\r\n\r\nWhen I released it, I got a huge backlash of people disagreeing with even the idea of it, so I decided that I&#39;d write a comprehensive blog post on why &lt;a href=&quot;http://web.archive.org/web/20100629021329/http://blog.getify.com/2010/06/json-comments/&quot;&gt;comments make sense in JSON&lt;/a&gt;. It includes this notable comment from the creator of JSON:\r\n\r\n&gt; Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser. - [Douglas Crockford, 2012](https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr)\r\n\r\n Hopefully that&#39;s helpful to those who disagree with why **JSON.minify()** could be useful.\r\n"}, {"tags": [], "down_vote_count": 7, "creation_date": 1280342317, "answer_id": 3356227, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 60, "is_accepted": false, "last_activity_date": 1484847450, "last_edit_date": 1484847450, "body_markdown": "You should write a [JSON schema][1] instead. JSON schema is currently a proposed Internet draft specification. Besides documentation, the schema can also be used for validating your JSON data.\r\n\r\nExample:\r\n\r\n    {\r\n        &quot;description&quot;:&quot;A person&quot;,\r\n        &quot;type&quot;:&quot;object&quot;,\r\n        &quot;properties&quot;:\r\n            {\r\n                &quot;name&quot;:\r\n                    {\r\n                        &quot;type&quot;:&quot;string&quot;\r\n                    },\r\n                &quot;age&quot;:\r\n                    {\r\n                        &quot;type&quot;:&quot;integer&quot;,\r\n                        &quot;maximum&quot;:125\r\n                    }\r\n            }\r\n    }\r\n\r\nYou can provide documentation by using the **description** schema attribute.\r\n\r\n  [1]: http://json-schema.org/\r\n\r\n"}, {"tags": [], "down_vote_count": 11, "creation_date": 1289813561, "answer_id": 4183018, "path": "stack.gulp.answer", "score": 1500, "up_vote_count": 1511, "is_accepted": false, "last_activity_date": 1464938404, "last_edit_date": 1464938404, "body_markdown": "**No**, comments of the form `//\u2026` or `/*\u2026*/` are not allowed in JSON. This answer is based on:\r\n\r\n* http://www.json.org\r\n* [RFC 4627](http://www.ietf.org/rfc/rfc4627.txt):\r\nThe `application/json` Media Type for JavaScript Object Notation (JSON)\r\n* [RFC 7159](http://www.ietf.org/rfc/rfc7159.txt) The JavaScript Object Notation (JSON) Data Interchange Format - Obsoletes: 4627, 7158"}, {"tags": [], "down_vote_count": 2, "creation_date": 1295387826, "answer_id": 4729509, "path": "stack.gulp.answer", "score": 19, "up_vote_count": 21, "is_accepted": false, "last_activity_date": 1484847586, "last_edit_date": 1484847586, "body_markdown": "The Dojo Toolkit JavaScript toolkit (at least as of version 1.4), allows you to include comments in your JSON. The comments can be of `/* */` format. Dojo Toolkit consumes the JSON via the `dojo.xhrGet()` call.\r\n\r\nOther JavaScript toolkits may work similarly.\r\n\r\nThis can be helpful when experimenting with alternate data structures (or even data lists) before choosing a final option.\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1308748173, "answer_id": 6440396, "path": "stack.gulp.answer", "score": 24, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1484847730, "last_edit_date": 1484847730, "body_markdown": "I just encountering this for configuration files. I don&#39;t want to use **XML** (verbose, graphically, ugly, hard to read), or &quot;ini&quot; format (no hierarchy, no real standard, etc.) or Java &quot;Properties&quot; format (like .ini).\r\n\r\nJSON can do all they can do, but it is way less verbose and more human readable - and parsers are easy and ubiquitous in many languages. It&#39;s just a tree of data. But out-of-band comments are a necessity often to document &quot;default&quot; configurations and the like. Configurations are never to be &quot;full documents&quot;, but trees of saved data that can be human readable when needed.\r\n\r\nI guess one could use `&quot;#&quot;: &quot;comment&quot;`, for &quot;valid&quot; JSON.\r\n"}, {"tags": [], "down_vote_count": 10, "creation_date": 1314757466, "answer_id": 7251912, "path": "stack.gulp.answer", "score": 81, "up_vote_count": 91, "is_accepted": false, "last_activity_date": 1314757466, "body_markdown": "Consider using YAML. It&#39;s nearly a superset of JSON (virtually all valid JSON is valid YAML) and it allows comments."}, {"tags": [], "down_vote_count": 2, "creation_date": 1319622416, "answer_id": 7901053, "path": "stack.gulp.answer", "score": 46, "up_vote_count": 48, "is_accepted": false, "last_activity_date": 1484847992, "last_edit_date": 1484847992, "body_markdown": "Comments are not an official standard. Although some parsers support C-style comments. One that I use is [JsonCpp][1]. In the examples there is this one:\r\n\r\n    // Configuration options\r\n    {\r\n        // Default encoding for text\r\n        &quot;encoding&quot; : &quot;UTF-8&quot;,\r\n\r\n        // Plug-ins loaded at start-up\r\n        &quot;plug-ins&quot; : [\r\n            &quot;python&quot;,\r\n            &quot;c++&quot;,\r\n            &quot;ruby&quot;\r\n            ],\r\n\r\n        // Tab indent size\r\n        &quot;indent&quot; : { &quot;length&quot; : 3, &quot;use_space&quot;: true }\r\n    }\r\n\r\n[jsonlint][2] does not validate this. So comments are a parser specific extension and not standard.\r\n\r\nAnother parser is [JSON5][3].\r\n\r\nAn alternative to JSON [TOML][4].\r\n\r\n  [1]: https://github.com/open-source-parsers/jsoncpp\r\n  [2]: http://www.jsonlint.com\r\n  [3]: https://github.com/aseemk/json5\r\n  [4]: https://github.com/toml-lang/toml\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1339404743, "answer_id": 10976934, "path": "stack.gulp.answer", "score": 357, "up_vote_count": 360, "is_accepted": false, "last_activity_date": 1343684892, "last_edit_date": 1343684892, "body_markdown": "Comments were removed from JSON by design.\r\n\r\n&gt; I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability. I know that the lack of comments makes some people sad, but it shouldn&#39;t. \r\n\r\n&gt; Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser.\r\n\r\nSource: [Public statement by Douglas Crockford on G+][1]\r\n\r\n\r\n  [1]: https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr"}, {"tags": [], "down_vote_count": 0, "creation_date": 1344041799, "answer_id": 11805048, "path": "stack.gulp.answer", "score": 24, "up_vote_count": 24, "is_accepted": false, "last_activity_date": 1484848317, "last_edit_date": 1495535497, "body_markdown": "It depends on your JSON library. [Json.NET][1] supports JavaScript-style comments, ` /* commment */`.\r\n\r\nSee [another Stack&amp;nbsp;Overflow question][2].\r\n\r\n  [1]: https://github.com/JamesNK/Newtonsoft.Json\r\n  [2]: https://stackoverflow.com/a/10325432/166286\r\n\r\n"}, {"tags": [], "down_vote_count": 6, "creation_date": 1352360641, "answer_id": 13284621, "path": "stack.gulp.answer", "score": 37, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1484848425, "last_edit_date": 1484848425, "body_markdown": "Sorry, we can&#39;t use comments in JSON... See the syntax diagram for JSON on [JSON.org][1].\r\n\r\nDouglas Crockford says &quot;[why he removed comments in JSON and providing an alternative way to do that][2]&quot;:\r\n\r\n&gt; I removed comments from JSON because I saw people were using them to\r\n&gt; hold parsing directives, a practice which would have destroyed\r\n&gt; interoperability. I know that the lack of comments makes some people\r\n&gt; sad, but it shouldn&#39;t.\r\n&gt;\r\n&gt; Suppose you are using JSON to keep configuration files, which you\r\n&gt; would like to annotate. Go ahead and insert all the comments you like.\r\n&gt; Then pipe it through JSMin before handing it to your JSON parser.\r\n\r\n  [1]: http://json.org/\r\n  [2]: https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1355189837, "answer_id": 13812297, "path": "stack.gulp.answer", "score": 21, "up_vote_count": 23, "is_accepted": false, "last_activity_date": 1359125156, "last_edit_date": 1359125156, "body_markdown": "JSON makes a lot of sense for config files and other local usage because it&#39;s ubiquitous and because it&#39;s much simpler than XML. \r\n\r\nIf people have strong reasons against having comments in JSON when communicating data (whether valid or not), then possibly JSON could be split into two:\r\n\r\n* JSON-COM: JSON on the wire, or rules that apply when communicating JSON data.\r\n* JSON-DOC: JSON document, or JSON in files or locally. Rules that define a valid JSON document.\r\n\r\nJSON-DOC will allow comments, and other minor differences might exist such as handling whitespace. Parsers can easily convert from one spec to the other. \r\n\r\nWith regards to the [remark][1] made by Douglas Crockford on this issues (referenced by @Artur Czajka)\r\n\r\n&gt; Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser.\r\n\r\nWe&#39;re talking about a generic config file issue (cross language/platform), and he&#39;s answering with a JS specific utility!\r\n\r\nSure a JSON specific minify can be implemented in any language,\r\nbut standardize this so it becomes ubiquitous across parsers in all languages and platforms so people stop wasting their time lacking the feature because they have good use-cases for it, looking the issue up in online forums, and getting people telling them it&#39;s a bad idea or suggesting it&#39;s easy to implement stripping comments out of text files.\r\n\r\n\r\nThe other issue is interoperability. Suppose you have a library or API or any kind of subsystem which has some config or data files associated with it. And this subsystem is\r\nto be accessed from different languages.  Then do you go about telling people: by the way\r\ndon&#39;t forget to strip out the comments from the JSON files before passing them to the parser!\r\n\r\n  [1]: https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr"}, {"tags": [], "down_vote_count": 3, "creation_date": 1372171736, "answer_id": 17300561, "path": "stack.gulp.answer", "score": 24, "up_vote_count": 27, "is_accepted": false, "last_activity_date": 1372171736, "body_markdown": "JSON does not support comments natively, but you can make your own decoder or at least preprocessor to strip out comments, that&#39;s perfectly fine (as long as you just ignore comments and don&#39;t use them to guide how your application should process the JSON data).\r\n\r\n&gt; JSON does not have comments. A JSON encoder MUST NOT output comments.\r\nA JSON decoder MAY accept and ignore comments.\r\n\r\n&gt; Comments should never be used to transmit anything meaningful. That is\r\nwhat JSON is for.\r\n\r\nCf: [Douglas Crockford, author of JSON spec][1].\r\n\r\n\r\n  [1]: http://tech.groups.yahoo.com/group/json/message/152"}, {"tags": [], "down_vote_count": 246, "creation_date": 1375451169, "answer_id": 18018493, "path": "stack.gulp.answer", "score": 172, "up_vote_count": 418, "is_accepted": false, "last_activity_date": 1452837531, "last_edit_date": 1452837531, "body_markdown": "DISCLAIMER: YOUR WARRANTY IS VOID\r\n\r\nAs has been pointed out, this hack takes advantage of the implementation of the spec. Not all JSON parsers will understand this sort of JSON. Streaming parsers in particular will choke.\r\n\r\nIt&#39;s an interesting curiosity, but you **should really not be using it for anything at all**. Below is the original answer.\r\n\r\n-----\r\n\r\nI&#39;ve found a little hack that allows you to place comments in a JSON file that will not affect the parsing, or alter the data being represented in any way.\r\n\r\nIt appears that when declaring an object literal you can specify two values with the same key, and the last one takes precedence. Believe it or not, it turns out that JSON parsers work the same way. So we can use this to create comments in the source JSON that will not be present in a parsed object representation. \r\n\r\n    ({a: 1, a: 2});\r\n    // =&gt; Object {a: 2}\r\n    Object.keys(JSON.parse(&#39;{&quot;a&quot;: 1, &quot;a&quot;: 2}&#39;)).length; \r\n    // =&gt; 1\r\n\r\nIf we apply this technique, your commented JSON file might look like this:\r\n\r\n    {\r\n      &quot;api_host&quot; : &quot;The hostname of your API server. You may also specify the port.&quot;,\r\n      &quot;api_host&quot; : &quot;hodorhodor.com&quot;,\r\n\r\n      &quot;retry_interval&quot; : &quot;The interval in seconds between retrying failed API calls&quot;,\r\n      &quot;retry_interval&quot; : 10,\r\n\r\n      &quot;auth_token&quot; : &quot;The authentication token. It is available in your developer dashboard under &#39;Settings&#39;&quot;,\r\n      &quot;auth_token&quot; : &quot;5ad0eb93697215bc0d48a7b69aa6fb8b&quot;,\r\n\r\n      &quot;favorite_numbers&quot;: &quot;An array containing my all-time favorite numbers&quot;,\r\n      &quot;favorite_numbers&quot;: [19, 13, 53]\r\n    }\r\n\r\nThe above code is [valid JSON][1]. If you parse it, you&#39;ll get an object like this:\r\n\r\n    {\r\n        &quot;api_host&quot;: &quot;hodorhodor.com&quot;,\r\n        &quot;retry_interval&quot;: 10,\r\n        &quot;auth_token&quot;: &quot;5ad0eb93697215bc0d48a7b69aa6fb8b&quot;,\r\n        &quot;favorite_numbers&quot;: [19,13,53]\r\n    }\r\n\r\nWhich means there is no trace of the comments, and they won&#39;t have weird side-effects.\r\n\r\nHappy hacking!\r\n\r\n  [1]: http://jsonlint.com/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1381178258, "answer_id": 19234265, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 18, "is_accepted": false, "last_activity_date": 1484848816, "last_edit_date": 1484848816, "body_markdown": "You *can* have comments in [JSONP][1], but not in pure JSON. I&#39;ve just spent an hour trying to make my program work with this example from Highcharts: [http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&amp;callback=?][2]\r\n\r\nIf you follow the link, you will see\r\n\r\n    ?(/* AAPL historical OHLC data from the Google Finance API */\r\n    [\r\n    /* May 2006 */\r\n    [1147651200000,67.79],\r\n    [1147737600000,64.98],\r\n    ...\r\n    [1368057600000,456.77],\r\n    [1368144000000,452.97]\r\n    ]);\r\n\r\nSince I had a similar file in my local folder, there were no issues with the [Same-origin policy][3], so I decided to use pure JSON... and, of course, `$.getJSON` was failing silently because of the comments.\r\n\r\nEventually I just sent a manual HTTP request to the address above and realized that the content-type was `text/javascript` since, well, JSONP returns pure JavaScript. In this case comments *are allowed*. But my application returned content-type `application/json`, so I had to remove the comments.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JSONP\r\n  [2]: http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&amp;callback=?\r\n  [3]: http://en.wikipedia.org/wiki/Same-origin_policy\r\n"}, {"tags": [], "down_vote_count": 5, "creation_date": 1383042650, "answer_id": 19655633, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 15, "is_accepted": false, "last_activity_date": 1484848919, "last_edit_date": 1484848919, "body_markdown": "To cut a JSON item into parts I add &quot;dummy comment&quot; lines:\r\n\r\n    {\r\n   \r\n \t&quot;#############################&quot; : &quot;Part1&quot;,\r\n   \r\n\t&quot;data1&quot;\t\t\t\t: &quot;value1&quot;,\r\n    &quot;data2&quot;\t\t\t\t: &quot;value2&quot;,\r\n\r\n \t&quot;#############################&quot; : &quot;Part2&quot;,\r\n   \r\n\t&quot;data4&quot;\t\t\t\t: &quot;value3&quot;,\r\n    &quot;data3&quot;\t\t\t\t: &quot;value4&quot;\r\n\r\n    }\r\n"}, {"tags": [], "down_vote_count": 6, "creation_date": 1385646539, "answer_id": 20267852, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 13, "is_accepted": false, "last_activity_date": 1385646539, "body_markdown": "Sigh. Why not just add fields, e.g.\r\n\r\n    {\r\n        &quot;note1&quot; : &quot;This demonstrates the provision of annotations within a JSON file&quot;,\r\n        &quot;field1&quot; : 12,\r\n        &quot;field2&quot; : &quot;some text&quot;,\r\n     \r\n        &quot;note2&quot; : &quot;Add more annotations as necessary&quot;\r\n    }\r\n\r\nJust make sure your &quot;notex&quot; names don&#39;t conflict with any real fields."}, {"tags": [], "down_vote_count": 3, "creation_date": 1386366393, "answer_id": 20434146, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 11, "is_accepted": false, "last_activity_date": 1386806391, "last_edit_date": 1386806391, "body_markdown": "The author of JSON wants us to include comments in the JSON, but strip them out before parsing them (see [link][1] provided by Michael Burr.)  If JSON should have comments, why not standardize them, and let the JSON parser do the job?  I don&#39;t agree with the logic there, but, alas, that&#39;s the standard.  Using YAML solution as suggested by others is good, but requires library dependency.\r\n\r\nIf you want to strip out comments, but don&#39;t want to have a library dependency, here is a two-line solution, which works for C++-style comments, but can be adapted to others:\r\n\r\n    var comments=new RegExp(&quot;//.*&quot;, &#39;mg&#39;);\r\n    data = JSON.parse(fs.readFileSync(sample_file, &#39;utf8&#39;).replace(comments, &#39;&#39;));\r\n\r\nNote that this solution can only be used in cases where you can be sure that the JSON data does not contain the comment initiator, e.g. (&#39;//&#39;).\r\n\r\nAnother way to achieve JSON parsing, stripping of comments, and no extra library, is to evaluate the JSON in a JS interpreter.  The caveat with that approach, of course, is that you would only want to evaluate untainted data (no untrusted user-input.)  Here is an example of this approach in node.js -- another caveat, following example will only read the data once and then it will be cached:\r\n\r\n    data = require(fs.realpathSync(doctree_fp));\r\n\r\n  [1]: https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr"}, {"tags": [], "down_vote_count": 17, "creation_date": 1390921457, "answer_id": 21409180, "path": "stack.gulp.answer", "score": 11, "up_vote_count": 28, "is_accepted": false, "last_activity_date": 1508837148, "last_edit_date": 1508837148, "body_markdown": "There is a good solution (hack), which is valid JSON. \r\nJust make the same key twice (or more). For example: \r\n\r\n    {\r\n      &quot;param&quot; : &quot;This is the comment place&quot;,\r\n      &quot;param&quot; : &quot;This is value place&quot;,\r\n    }\r\nSo JSON will understand this as:\r\n\r\n    {\r\n      &quot;param&quot; : &quot;This is value place&quot;,\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1391719464, "answer_id": 21613658, "path": "stack.gulp.answer", "score": 43, "up_vote_count": 43, "is_accepted": false, "last_activity_date": 1487681295, "last_edit_date": 1487681295, "body_markdown": "If you are using [Jackson][1] as your JSON parser then this is how you enable it to allow comments:\r\n\r\n    ObjectMapper mapper = new ObjectMapper().configure(Feature.ALLOW_COMMENTS, true);\t\r\n\r\nThen you can have comments like this:\r\n\r\n    {\r\n      key: &quot;value&quot; // comment\r\n    }\r\n\r\nAnd you can also have comments starting with `#` by setting:\r\n\r\n    mapper.configure(Feature.ALLOW_YAML_COMMENTS, true);\t\r\n\r\n\r\nBut in general (as answered before) the spec does not allow comments.\t\t\t\t\t\t\t\t\r\n\r\n  [1]: http://wiki.fasterxml.com/JacksonHome/"}, {"tags": [], "down_vote_count": 10, "creation_date": 1395329211, "answer_id": 22537629, "path": "stack.gulp.answer", "score": 102, "up_vote_count": 112, "is_accepted": false, "last_activity_date": 1470777628, "last_edit_date": 1470777628, "body_markdown": "JSON does not support comments. It was also never intended to be used for configuration files where comments would be needed.\r\n\r\nHjson is a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.\r\n\r\n[![Hjson intro][1]][1]\r\n\r\nSee [hjson.org](http://hjson.org) for JavaScript, Java, Python, PHP, Rust, Go, Ruby and C# libraries.\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/u2E8q.gif"}, {"tags": [], "down_vote_count": 3, "creation_date": 1398360188, "answer_id": 23275699, "path": "stack.gulp.answer", "score": 14, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1450158821, "last_edit_date": 1450158821, "body_markdown": "This is a **&quot;can you&quot;** question. And here is a **&quot;yes&quot;** answer.\r\n\r\nNo, you shouldn&#39;t use duplicative object members to stuff side channel data into a JSON encoding. (See &quot;The names within an object SHOULD be unique&quot; &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;in the RFC&lt;/a&gt;).\r\n\r\nAnd yes, you could &lt;a href=&quot;https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr&quot;&gt;insert comments *around* the JSON&lt;/a&gt;, which you could parse out.\r\n\r\nBut if you want a way of inserting and extracting arbitrary side-channel data to a valid JSON, here is an answer. We take advantage of the non-unique representation of data in a JSON encoding. This is allowed&lt;sup&gt;*&lt;/sup&gt; in section two of the RFC under &quot;whitespace is allowed before or after any of the six structural characters&quot;.\r\n\r\n&lt;i&gt;&lt;sup&gt;*&lt;/sup&gt;The RFC only states &quot;whitespace is allowed before or after any of the six structural characters&quot;, not explicitly mentioning strings, numbers, &quot;false&quot;, &quot;true&quot;, and &quot;null&quot;. This omission is ignored in ALL implementations.&lt;/i&gt;\r\n\r\n-----------------\r\n\r\nFirst, canonicalize your JSON by minifying it:\r\n\r\n    $jsonMin = json_encode(json_decode($json));\r\n\r\nThen encode your comment in binary:\r\n\r\n    $hex = unpack(&#39;H*&#39;, $comment);\r\n    $commentBinary = base_convert($hex[1], 16, 2);\r\n\r\nThen steg your binary:\r\n\r\n    $steg = str_replace(&#39;0&#39;, &#39; &#39;, $commentBinary);\r\n    $steg = str_replace(&#39;1&#39;, &quot;\\t&quot;, $steg);\r\n\r\nHere is your output:\r\n\r\n    $jsonWithComment = $steg . $jsonMin;"}, {"tags": [], "down_vote_count": 0, "creation_date": 1404363972, "answer_id": 24545329, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 5, "is_accepted": false, "last_activity_date": 1484849846, "last_edit_date": 1484849846, "body_markdown": "I just found &quot;[grunt-strip-json-comments][1]&quot;.\r\n\r\n&gt; \u201cStrip comments from JSON. It lets you use comments in your JSON files!\u201d\r\n\r\n    {\r\n        // Rainbows\r\n        &quot;unicorn&quot;: /* \u2764 */ &quot;cake&quot;\r\n    }\r\n\r\n  [1]: https://www.npmjs.org/package/grunt-strip-json-comments\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1404763680, "answer_id": 24618928, "path": "stack.gulp.answer", "score": -2, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1484849941, "last_edit_date": 1484849941, "body_markdown": "Yes, you can, but your parse will probably fail (there is no standard).\r\n\r\nTo parse it you should remove those comments, or by hand, or using a regular expression:\r\n\r\nIt replaces any comments, like:\r\n\r\n    /****\r\n     * Hey\r\n     */\r\n\r\n    /\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/\r\n\r\nIt replaces any comments, like:\r\n\r\n    // Hey\r\n\r\n    /\\/\\/.*/\r\n\r\nIn JavaScript, you could do something like this:\r\n\r\n    jsonString = jsonString.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/, &quot;&quot;).replace(/\\/\\/.*/,&quot;&quot;)\r\n    var object = JSON.parse(jsonString);\r\n"}, {"tags": [], "down_vote_count": 1, "creation_date": 1405765783, "answer_id": 24839354, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1407435542, "last_edit_date": 1407435542, "body_markdown": "If your context is Node.js configuration, you might consider JavaScript via `module.exports` as an alternative to JSON:\r\n\r\n    module.exports = {\r\n    \t&quot;key&quot;: &quot;value&quot;,\r\n    \r\n    \t// And with comments!\r\n    \t&quot;key2&quot;: &quot;value2&quot;\r\n    };\r\n\r\nThe `require` syntax will still be the same. Being JavaScript, the file extension should be `.js`."}, {"tags": [], "down_vote_count": 1, "creation_date": 1406295810, "answer_id": 24957191, "path": "stack.gulp.answer", "score": 26, "up_vote_count": 27, "is_accepted": false, "last_activity_date": 1484850112, "last_edit_date": 1484850112, "body_markdown": "If you are using the Newtonsoft.Json library with ASP.NET to read/deserialize you can use comments in the JSON content:\r\n\r\n&gt; //&quot;name&quot;: &quot;string&quot;\r\n\r\n&gt; //&quot;id&quot;: int\r\n\r\nor\r\n\r\n&gt; /* This is a\r\n\r\n&gt; comment example */\r\n\r\n**PS:** Single-line comments are only supported with 6+ versions of Newtonsoft Json.\r\n\r\n**Additional note for people who can&#39;t think out of the box:** I use the JSON format for basic settings in an ASP.NET web application I made. I read the file, convert it into the settings object with the Newtonsoft library and use it when necessary.\r\n\r\nI prefer writing comments about each individual setting in the JSON file itself, and I really don&#39;t care about the integrity of the JSON format as long as the library I use is OK with it.\r\n\r\nI think this is an &#39;easier to use/understand&#39; way than creating a separate &#39;settings.README&#39; file and explaining the settings in it.\r\n\r\nIf you have a problem with this kind of usage; sorry, the genie is out of the lamp. People would find other usages for JSON format, and there is nothing you can do about it.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1417088367, "answer_id": 27169861, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1417088367, "body_markdown": "We are using [`strip-json-comments`][1] for our project. It supports something like:\r\n\r\n    /*\r\n     * Description \r\n    */\r\n    {\r\n        // rainbows\r\n        &quot;unicorn&quot;: /* \u2764 */ &quot;cake&quot;\r\n    }\r\n\r\nSimply `npm install --save strip-json-comments` to install and use it like:\r\n\r\n    var strip_json_comments = require(&#39;strip-json-comments&#39;)\r\n    var json = &#39;{/*rainbows*/&quot;unicorn&quot;:&quot;cake&quot;}&#39;;\r\n    JSON.parse(strip_json_comments(json));\r\n    //=&gt; {unicorn: &#39;cake&#39;}\r\n\r\n  [1]: https://github.com/sindresorhus/strip-json-comments"}, {"tags": [], "down_vote_count": 1, "creation_date": 1435866524, "answer_id": 31193416, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1435866524, "body_markdown": "There are other libraries that are json compatible, which support comments. \r\nOne notable example is the [&quot;Hashcorp Language&quot; (HCL)&quot;][1]. Written by the same people who made Vagrant, packer, consul, and vault. \r\n\r\nhttps://github.com/hashicorp/hcl \r\n\r\n\r\n  [1]: https://github.com/hashicorp/hcl"}, {"tags": [], "down_vote_count": 1, "creation_date": 1437384385, "answer_id": 31512948, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 17, "is_accepted": false, "last_activity_date": 1484850254, "last_edit_date": 1484850254, "body_markdown": "**JSON is not a framed protocol**. It is a *language free format*. So a comment&#39;s format is not defined for JSON.\r\n\r\nAs many people have suggested, there are some tricks, for example, duplicate keys or a specific key `_comment` that you can use. It&#39;s up to you.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1446904760, "answer_id": 33583560, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1484850449, "last_edit_date": 1484850449, "body_markdown": "As many answers have already pointed out, JSON does not natively have comments. Of course sometimes you want them anyway. For **Python**, two ways to do that are with [`commentjson`][2] (`#` and `//` for Python&amp;nbsp;2 only) or [`json_tricks`][1] (`#` or `//` for Python&amp;nbsp;2 and Python&amp;nbsp;3), which has several other features. Disclaimer: I made `json_tricks`.\r\n\r\n  [1]: https://github.com/mverleg/pyjson_tricks\r\n  [2]: https://github.com/vaidik/commentjson\r\n"}, {"tags": [], "down_vote_count": 9, "creation_date": 1448339669, "answer_id": 33885543, "path": "stack.gulp.answer", "score": 16, "up_vote_count": 25, "is_accepted": false, "last_activity_date": 1484850745, "last_edit_date": 1484850745, "body_markdown": "If you use [JSON5][1] you can include comments.\r\n\r\n---\r\n**JSON5 is a proposed extension to JSON** that aims to make it easier for humans to write and maintain by hand. It does this by adding some minimal syntax features directly from ECMAScript&amp;nbsp;5.\r\n\r\n  [1]: http://json5.org/\r\n"}, {"tags": [], "down_vote_count": 3, "creation_date": 1448652908, "answer_id": 33963845, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1484850910, "last_edit_date": 1484850910, "body_markdown": "JSON by design is an easily reverse-engineered (human parsed) alternative to XML. It is simplified even to the point that annotations are unnecessary. It is not even a markup language.\r\n\r\nAnyone who understands the &quot;has-a&quot; relationship of object orientation can understand any JSON structure - that is the whole point. It is just a  directed acyclic graph (DAG) with node tags (key/value pairs), which is a near universal data structure.\r\n\r\nThis only annotation required might be &quot;//These are DAG tags&quot;. The key names can be as informative as required.\r\n\r\nAny platform can parse JSON with just a few lines of code. XML requires complex OO libraries that are not viable on many platforms.\r\n\r\nAnnotations would just make it harder to parse, not easier. There is simply nothing else to add, unless what you really need is a markup language (XML), and don&#39;t care if your persisted data is easily parsed.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1451365945, "answer_id": 34504798, "path": "stack.gulp.answer", "score": 7, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1451994854, "last_edit_date": 1451994854, "body_markdown": "You can use JSON with comments in it, if you load it as a text file, and then remove comments from it.\r\n\r\nYou can use [decomment](https://www.npmjs.com/package/decomment) library for that. Below is a complete example.\r\n\r\n\r\n**Input JSON (file input.js):**\r\n\r\n    /*\r\n    * multi-line comments\r\n    **/\r\n    {\r\n        &quot;value&quot;: 123 // one-line comment\r\n    }\r\n\r\n**Test Application:**\r\n\r\n    var decomment = require(&#39;decomment&#39;);\r\n    var fs = require(&#39;fs&#39;);\r\n    \r\n    fs.readFile(&#39;input.js&#39;, &#39;utf8&#39;, function (err, data) {\r\n        if (err) {\r\n            console.log(err);\r\n        } else {\r\n            var text = decomment(data); // removing comments\r\n            var json = JSON.parse(text); // parsing JSON\r\n            console.log(json);\r\n        }\r\n    });\r\n\r\nOutput:\r\n\r\n    { value: 123 }\r\n\r\nSee also: [gulp-decomment](https://github.com/vitaly-t/gulp-decomment), [grunt-decomment](https://github.com/vitaly-t/grunt-decomment)\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1455216086, "answer_id": 35347457, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1455216086, "body_markdown": "You can use [JSON-LD](https://www.w3.org/TR/json-ld/) and the [schema.org comment](https://schema.org/comment) type to properly write comments: \r\n\r\n    {\r\n        &quot;https://schema.org/comment&quot;: &quot;this is a comment&quot;\r\n    }"}, {"tags": [], "down_vote_count": 0, "creation_date": 1458873972, "answer_id": 36213249, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1458873972, "body_markdown": "If you are using PHP, you can use this function to search for and remove // /* type comments from the JSON string before parsing it into an object/array:\r\n\r\n    function json_clean_decode($json, $assoc = true, $depth = 512, $options = 0) {\r\n           // search and remove comments like /* */ and //\r\n           $json = preg_replace(&quot;#(/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|([\\s\\t]//.*)|(^//.*)#&quot;, &#39;&#39;, $json);\r\n    \r\n           if(version_compare(phpversion(), &#39;5.4.0&#39;, &#39;&gt;=&#39;)) {\r\n               $json = json_decode($json, $assoc, $depth, $options);\r\n           }\r\n           elseif(version_compare(phpversion(), &#39;5.3.0&#39;, &#39;&gt;=&#39;)) {\r\n               $json = json_decode($json, $assoc, $depth);\r\n           }\r\n           else {\r\n               $json = json_decode($json, $assoc);\r\n           }\r\n    \r\n           return $json;\r\n       }\r\n\r\nHope this helps!"}, {"tags": [], "down_vote_count": 0, "creation_date": 1472232707, "answer_id": 39171793, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1472232707, "body_markdown": "In my case, I need use comments to debug purposes, prior the output of the JSON structure. So I decided to use debug info in the http header, to avoid breaking the client:\r\n\r\n    header(&quot;My-Json-Comment: Yes, I know it&#39;s a workaround ;-) &quot;);\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/yMh3J.png"}, {"tags": [], "down_vote_count": 0, "creation_date": 1481196097, "answer_id": 41038255, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1481196097, "body_markdown": "Yes, you can have comments. But I will not recommend whatever reason mentioned above. I did some investigation, I found all JSON require method uses  JSON.parse method. So I come solution, we can override or do monkey patching around JSON.parse.\r\n\r\n&gt; Note: tested on nodejs only ;-)\r\n\r\n    var oldParse = JSON.parse;\r\n    JSON.parse = parse;\r\n    function parse(json){\r\n        json = json.replace(/\\/\\*.+\\*\\//,function(comment){\r\n            console.log(&quot;comment:&quot;, comment);\r\n            return &quot;&quot;;\r\n        });\r\n        return oldParse(json)\r\n    }\r\n\r\nJSON file:\r\n\r\n    {\r\n      &quot;test&quot;:1\r\n      /*hello babe*/\r\n    }"}, {"tags": [], "down_vote_count": 2, "creation_date": 1492363951, "answer_id": 43440043, "path": "stack.gulp.answer", "score": 5, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1512392184, "last_edit_date": 1512392184, "body_markdown": "You can use simple preprocessing via regular expression. For instance, the following function will decode commented json in PHP:\r\n\r\n    function json_decode_commented ($data, $objectsAsArrays = false, $maxDepth = 512, $opts) {\r\n      $data = preg_replace(&#39;~\r\n        (&quot; (?:[^&quot;\\\\\\\\] | \\\\\\\\\\\\\\\\ | \\\\\\\\&quot;)*+ &quot;) | \\# [^\\v]*+ | // [^\\v]*+ | /\\* .*? \\*/\r\n      ~xs&#39;, &#39;$1&#39;, $data);\r\n\r\n      return json_decode($data, $objectsAsArrays, $maxDepth, $opts);\r\n    }\r\n\r\nIt supports all PHP-style comments: /*, #, //. String literals are preserved as is."}, {"tags": [], "down_vote_count": 0, "creation_date": 1498136305, "answer_id": 44700108, "path": "stack.gulp.answer", "score": 29, "up_vote_count": 29, "is_accepted": false, "last_activity_date": 1498136719, "last_edit_date": 1498136719, "body_markdown": "Here is what I found in the [Google Firebase documentation][1] that allows you to put comments in JSON:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    {\r\n      &quot;//&quot;: &quot;Some browsers will use this to enable push notifications.&quot;,\r\n      &quot;//&quot;: &quot;It is the same for all projects, this is not your project&#39;s sender ID&quot;,\r\n      &quot;gcm_sender_id&quot;: &quot;1234567890&quot;\r\n    }\r\n\r\n\r\n\r\n  [1]: https://firebase.google.com/docs/cloud-messaging/js/client#configure_the_browser_to_receive_messages"}], "title": "Can comments be used in JSON?", "view_count": 1245557, "answer_count": 42, "code_snippet": ["<code>//comments</code>", "<code>{\"__comment\": ...}</code>", "<code>\"_comment\"</code>", "<code>{\n   \"_comment\": \"comment text goes here...\",\n   \"glossary\": {\n      \"title\": \"example glossary\",\n      \"GlossDiv\": {\n         \"title\": \"S\",\n         \"GlossList\": {\n            \"GlossEntry\": {\n               \"ID\": \"SGML\",\n               \"SortAs\": \"SGML\",\n               \"GlossTerm\": \"Standard Generalized Markup Language\",\n               \"Acronym\": \"SGML\",\n               \"Abbrev\": \"ISO 8879:1986\",\n               \"GlossDef\": {\n                  \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\n                  \"GlossSeeAlso\": [\"GML\", \"XML\"]\n               },\n               \"GlossSee\": \"markup\"\n            }\n         }\n      }\n   }\n}\n</code>", "<code>\"__comment\":\"comment text goes here...\",</code>", "<code>Accronym</code>", "<code>Abbrev</code>", "<code>__comment__</code>", "<code>//\u2026</code>", "<code>/*\u2026*/</code>", "<code>application/json</code>", "<code>JSON.parse(JSON.minify(my_str));\n</code>", "<code>({a: 1, a: 2});\n// =&gt; Object {a: 2}\nObject.keys(JSON.parse('{\"a\": 1, \"a\": 2}')).length; \n// =&gt; 1\n</code>", "<code>{\n  \"api_host\" : \"The hostname of your API server. You may also specify the port.\",\n  \"api_host\" : \"hodorhodor.com\",\n\n  \"retry_interval\" : \"The interval in seconds between retrying failed API calls\",\n  \"retry_interval\" : 10,\n\n  \"auth_token\" : \"The authentication token. It is available in your developer dashboard under 'Settings'\",\n  \"auth_token\" : \"5ad0eb93697215bc0d48a7b69aa6fb8b\",\n\n  \"favorite_numbers\": \"An array containing my all-time favorite numbers\",\n  \"favorite_numbers\": [19, 13, 53]\n}\n</code>", "<code>{\n    \"api_host\": \"hodorhodor.com\",\n    \"retry_interval\": 10,\n    \"auth_token\": \"5ad0eb93697215bc0d48a7b69aa6fb8b\",\n    \"favorite_numbers\": [19,13,53]\n}\n</code>", "<code>yaml</code>", "<code>{\n    \"description\":\"A person\",\n    \"type\":\"object\",\n    \"properties\":\n        {\n            \"name\":\n                {\n                    \"type\":\"string\"\n                },\n            \"age\":\n                {\n                    \"type\":\"integer\",\n                    \"maximum\":125\n                }\n        }\n}\n</code>", "<code>// Configuration options\n{\n    // Default encoding for text\n    \"encoding\" : \"UTF-8\",\n\n    // Plug-ins loaded at start-up\n    \"plug-ins\" : [\n        \"python\",\n        \"c++\",\n        \"ruby\"\n        ],\n\n    // Tab indent size\n    \"indent\" : { \"length\" : 3, \"use_space\": true }\n}\n</code>", "<code>ObjectMapper mapper = new ObjectMapper().configure(Feature.ALLOW_COMMENTS, true);   \n</code>", "<code>{\n  key: \"value\" // comment\n}\n</code>", "<code>#</code>", "<code>mapper.configure(Feature.ALLOW_YAML_COMMENTS, true);    \n</code>", "<code>The connection to the server was reset while the page was loading.</code>", "<code>{\n  \"//\": \"Some browsers will use this to enable push notifications.\",\n  \"//\": \"It is the same for all projects, this is not your project's sender ID\",\n  \"gcm_sender_id\": \"1234567890\"\n}\n</code>", "<code>\"#\": \"comment\"</code>", "<code>/* commment */</code>", "<code>/* */</code>", "<code>dojo.xhrGet()</code>", "<code>dojo.xhrGet()</code>", "<code>?(/* AAPL historical OHLC data from the Google Finance API */\n[\n/* May 2006 */\n[1147651200000,67.79],\n[1147737600000,64.98],\n...\n[1368057600000,456.77],\n[1368144000000,452.97]\n]);\n</code>", "<code>$.getJSON</code>", "<code>text/javascript</code>", "<code>application/json</code>", "<code>_comment</code>", "<code>$jsonMin = json_encode(json_decode($json));\n</code>", "<code>$hex = unpack('H*', $comment);\n$commentBinary = base_convert($hex[1], 16, 2);\n</code>", "<code>$steg = str_replace('0', ' ', $commentBinary);\n$steg = str_replace('1', \"\\t\", $steg);\n</code>", "<code>$jsonWithComment = $steg . $jsonMin;\n</code>", "<code>{\n  \"param\" : \"This is the comment place\",\n  \"param\" : \"This is value place\",\n}\n</code>", "<code>{\n  \"param\" : \"This is value place\",\n}\n</code>", "<code>strip-json-comments</code>", "<code>/*\n * Description \n*/\n{\n    // rainbows\n    \"unicorn\": /* \u2764 */ \"cake\"\n}\n</code>", "<code>npm install --save strip-json-comments</code>", "<code>var strip_json_comments = require('strip-json-comments')\nvar json = '{/*rainbows*/\"unicorn\":\"cake\"}';\nJSON.parse(strip_json_comments(json));\n//=&gt; {unicorn: 'cake'}\n</code>", "<code>{\n\n\"#############################\" : \"Part1\",\n\n\"data1\"             : \"value1\",\n\"data2\"             : \"value2\",\n\n\"#############################\" : \"Part2\",\n\n\"data4\"             : \"value3\",\n\"data3\"             : \"value4\"\n\n}\n</code>", "<code>{    \"comment-001\":\"This is where you do abc...\",    \"comment-002\":\"This is where you do xyz...\" }</code>", "<code>var comments=new RegExp(\"//.*\", 'mg');\ndata = JSON.parse(fs.readFileSync(sample_file, 'utf8').replace(comments, ''));\n</code>", "<code>data = require(fs.realpathSync(doctree_fp));\n</code>", "<code>{\n    \"note1\" : \"This demonstrates the provision of annotations within a JSON file\",\n    \"field1\" : 12,\n    \"field2\" : \"some text\",\n\n    \"note2\" : \"Add more annotations as necessary\"\n}\n</code>", "<code>Just make sure your \"notex\" names don't conflict with any real fields.</code>", "<code>{\"/* ---- my section ----*/\":0}</code>"], "path": "stack.gulp"}, {"tags": ["javascript", "node.js", "babeljs"], "creation_date": 1446656308, "body_markdown": "I&#39;m trying to use async, await from scratch on Babel 6, but I&#39;m getting regeneratorRuntime is not defined.\r\n\r\n.babelrc file\r\n\r\n    {\r\n        &quot;presets&quot;: [ &quot;es2015&quot;, &quot;stage-0&quot; ]\r\n    }\r\n\r\npackage.json file\r\n\r\n    &quot;devDependencies&quot;: {\r\n        &quot;babel-core&quot;: &quot;^6.0.20&quot;,\r\n        &quot;babel-preset-es2015&quot;: &quot;^6.0.15&quot;,\r\n        &quot;babel-preset-stage-0&quot;: &quot;^6.0.15&quot;\r\n    }\r\n\r\n.js file\r\n\r\n    &quot;use strict&quot;;\r\n    async function foo() {\r\n      await bar();\r\n    }\r\n    function bar() { }\r\n    exports.default = foo;\r\n\r\nUsing it normally without the async/await works just fine. Any ideas what I&#39;m doing wrong?\r\n", "last_edit_date": 1500414319, "up_vote_count": 299, "link": "https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined", "_childDocuments_": [{"tags": [], "down_vote_count": 1, "creation_date": 1446657005, "answer_id": 33527883, "path": "stack.gulp.answer", "score": 396, "up_vote_count": 397, "is_accepted": true, "last_activity_date": 1453080628, "last_edit_date": 1453080628, "body_markdown": "`babel-polyfill` is required. You must also install it in order to get async/await working.\r\n\r\n    npm i -D babel-core babel-polyfill babel-preset-es2015 babel-preset-stage-0 babel-loader\r\n\r\npackage.json\r\n\r\n    &quot;devDependencies&quot;: {\r\n      &quot;babel-core&quot;: &quot;^6.0.20&quot;,\r\n      &quot;babel-polyfill&quot;: &quot;^6.0.16&quot;,\r\n      &quot;babel-preset-es2015&quot;: &quot;^6.0.15&quot;,\r\n      &quot;babel-preset-stage-0&quot;: &quot;^6.0.15&quot;\r\n    }\r\n\r\n.babelrc\r\n\r\n    {\r\n      &quot;presets&quot;: [ &quot;es2015&quot;, &quot;stage-0&quot; ]\r\n    }\r\n\r\n.js with async/await (sample code)\r\n\r\n    &quot;use strict&quot;;\r\n    \r\n    export default async function foo() {\r\n      var s = await bar();\r\n      console.log(s);\r\n    }\r\n    \r\n    function bar() {\r\n      return &quot;bar&quot;;\r\n    }\r\n\r\nIn the startup file\r\n\r\n    require(&quot;babel-core/register&quot;);\r\n    require(&quot;babel-polyfill&quot;);\r\n\r\nIf you are using **webpack** you need to put it as the first entry as per @Cemen comment:\r\n\r\n    module.exports = {\r\n      entry: [&#39;babel-polyfill&#39;, &#39;./test.js&#39;],\r\n    \r\n      output: {\r\n        filename: &#39;bundle.js&#39;       \r\n      },\r\n    \r\n      module: {\r\n        loaders: [\r\n          { test: /\\.jsx?$/, loader: &#39;babel&#39;, }\r\n        ]\r\n      }\r\n    };\r\n\r\nIf you want to run tests with babel then use:\r\n\r\n    mocha --compilers js:babel-core/register --require babel-polyfill\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1460530890, "answer_id": 36590887, "path": "stack.gulp.answer", "score": 33, "up_vote_count": 33, "is_accepted": false, "last_activity_date": 1460530890, "body_markdown": "Alternatively, if you don&#39;t need all the modules `babel-polyfill` provides, you can just specify `babel-regenerator-runtime` in your webpack config:\r\n\r\n\r\n    module.exports = {\r\n      entry: [&#39;babel-regenerator-runtime&#39;, &#39;./test.js&#39;],\r\n      \r\n      // ...\r\n    };\r\n\r\nWhen using webpack-dev-server with HMR, doing this reduced the number of files it has to compile on every build by quite a lot. This module is installed as part of `babel-polyfill` so if you already have that you&#39;re fine, otherwise you can install it separately with `npm i -D babel-regenerator-runtime`."}, {"tags": [], "down_vote_count": 1, "creation_date": 1461494069, "answer_id": 36821986, "path": "stack.gulp.answer", "score": 167, "up_vote_count": 168, "is_accepted": false, "last_activity_date": 1467923247, "last_edit_date": 1467923247, "body_markdown": "Besides polyfill, I use [babel-plugin-transform-runtime](http://babeljs.io/docs/plugins/transform-runtime/). The plugin is described as:\r\n\r\n&gt; Externalize references to helpers and builtins, automatically polyfilling your code without polluting globals. What does this actually mean though? Basically, you can use built-ins such as Promise, Set, Symbol etc as well use all the Babel features that require a polyfill seamlessly, without global pollution, making it extremely suitable for libraries.\r\n\r\nIt also includes support for async/await along with other built-ins of ES 6. \r\n\r\n    $ npm install --save-dev babel-plugin-transform-runtime\r\n    $ npm install --save babel-runtime\r\n\r\nIn `.babelrc`, add the runtime plugin\r\n\r\n    {\r\n      &quot;plugins&quot;: [\r\n        [&quot;transform-runtime&quot;, {\r\n          &quot;polyfill&quot;: false,\r\n          &quot;regenerator&quot;: true\r\n        }]\r\n      ]\r\n    }"}, {"tags": [], "down_vote_count": 1, "creation_date": 1468285949, "answer_id": 38318521, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1468285949, "body_markdown": "I have async await working with webpack/babel build:\r\n\r\n    &quot;devDependencies&quot;: {\r\n        &quot;babel-preset-stage-3&quot;: &quot;^6.11.0&quot;\r\n    }\r\n.babelrc:\r\n\r\n    &quot;presets&quot;: [&quot;es2015&quot;, &quot;stage-3&quot;]\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1471600111, "answer_id": 39035949, "path": "stack.gulp.answer", "score": 9, "up_vote_count": 9, "is_accepted": false, "last_activity_date": 1471600111, "body_markdown": "If using `babel-preset-stage-2` then just have to start the script with `--require babel-polyfill`.\r\n\r\nIn my case this error was thrown by `Mocha` tests.\r\n\r\nFollowing fixed the issue\r\n\r\n`mocha \\&quot;server/tests/**/*.test.js\\&quot; --compilers js:babel-register --require babel-polyfill`\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1473280828, "answer_id": 39378644, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1473280828, "body_markdown": "I had a setup   \r\nwith **webpack** using `presets: [&#39;es2015&#39;, &#39;stage-0&#39;]`  \r\nand **mocha** that was running tests compiled by webpack.\r\n\r\nTo make my `async/await` in tests work all I had to do is add `mocha --require babel-polyfill` option."}, {"tags": [], "down_vote_count": 1, "creation_date": 1479636823, "answer_id": 40702833, "path": "stack.gulp.answer", "score": 2, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1479636823, "body_markdown": "I get this error using gulp with rollup when I tried to use ES6 generators:\r\n\r\n    gulp.task(&#39;scripts&#39;, () =&gt; {\r\n      return rollup({\r\n        entry: &#39;./app/scripts/main.js&#39;,\r\n        format: &quot;iife&quot;,\r\n        sourceMap: true,\r\n        plugins: [babel({\r\n          exclude: &#39;node_modules/**&#39;,\r\n          &quot;presets&quot;: [\r\n            [\r\n              &quot;es2015-rollup&quot;\r\n            ]\r\n          ],\r\n          &quot;plugins&quot;: [\r\n            &quot;external-helpers&quot;\r\n          ]\r\n        }),\r\n        includePaths({\r\n          include: {},\r\n          paths: [&#39;./app/scripts&#39;],\r\n          external: [],\r\n          extensions: [&#39;.js&#39;]\r\n        })]\r\n      })\r\n    \r\n      .pipe(source(&#39;app.js&#39;))\r\n      .pipe(buffer())\r\n      .pipe(sourcemaps.init({\r\n        loadMaps: true\r\n      }))\r\n      .pipe(sourcemaps.write(&#39;.&#39;))\r\n      .pipe(gulp.dest(&#39;.tmp/scripts&#39;))\r\n      .pipe(reload({ stream: true }));\r\n    });\r\n\r\nI may case the solution was to include `babel-polyfill` as bower component:\r\n\r\n    bower install babel-polyfill --save\r\n\r\nand add it as dependency in index.html:\r\n\r\n    &lt;script src=&quot;/bower_components/babel-polyfill/browser-polyfill.js&quot;&gt;&lt;/script&gt;\r\n\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1482755252, "answer_id": 41331284, "path": "stack.gulp.answer", "score": 55, "up_vote_count": 57, "is_accepted": false, "last_activity_date": 1514353592, "last_edit_date": 1514353592, "body_markdown": "# Update\r\n\r\nIt works if you set the target to Chrome. But it might not work for other targets, please refer to: https://github.com/babel/babel-preset-env/issues/112\r\n\r\nSo this answer is **NOT** quite proper for the original question. I will keep it here as a reference to `babel-preset-env`.\r\n\r\nA simple solution is to add `import &#39;babel-polyfill&#39;` at the beginning of your code.\r\n\r\nIf you use webpack, a quick solution is to add `babel-polyfill` as shown below:\r\n\r\n    entry: {\r\n        index: [&#39;babel-polyfill&#39;, &#39;./index.js&#39;]\r\n    }\r\n\r\n\r\n# I believe I&#39;ve found the latest best practice. \r\n\r\nCheck this project: https://github.com/babel/babel-preset-env\r\n\r\n    yarn add --dev babel-preset-env\r\n\r\nUse the following as your babel configuration:\r\n\r\n    {\r\n      &quot;presets&quot;: [\r\n        [&quot;env&quot;, {\r\n          &quot;targets&quot;: {\r\n            &quot;browsers&quot;: [&quot;last 2 Chrome versions&quot;]\r\n          }\r\n        }]\r\n      ]\r\n    }\r\n\r\nThen your app should be good to go in the last 2 versions of Chrome browser.\r\n\r\nYou can also set **Node** as the targets or fine-tune the browsers list according to https://github.com/ai/browserslist\r\n\r\n# Tell me what, don&#39;t tell me how.\r\n\r\nI really like `babel-preset-env`&#39;s philosophy: tell me which environment you want to support, do NOT tell me how to support them. It&#39;s the beauty of declarative programming.\r\n\r\nI&#39;ve tested `async` `await` and they DO work. I don&#39;t know how they work and I really don&#39;t want to know. I want to spend my time on my own code and my business logic instead. Thanks to `babel-preset-env`, it liberates me from the Babel configuration hell."}, {"tags": [], "down_vote_count": 0, "creation_date": 1483791044, "answer_id": 41521308, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1483791044, "body_markdown": "1 - Install babel-plugin-transform-async-to-module-method, \r\nbabel-polyfil, bluebird , babel-preset-es2015, babel-core :\r\n\r\n    npm install babel-plugin-transform-async-to-module-method babel-polyfill bluebird babel-preset-es2015 babel-core\r\n\r\n2 -  Add in your js babel polyfill:\r\n\r\n`import &#39;babel-polyfill&#39;;`\r\n\r\n3 - Add plugin in your .babelrc:\r\n\r\n\r\n\r\n    {\r\n        &quot;presets&quot;: [&quot;es2015&quot;],\r\n        &quot;plugins&quot;: [\r\n          [&quot;transform-async-to-module-method&quot;, {\r\n            &quot;module&quot;: &quot;bluebird&quot;,\r\n            &quot;method&quot;: &quot;coroutine&quot;\r\n          }]\r\n        ]\r\n    }\r\n\r\nSource : http://babeljs.io/docs/plugins/transform-async-to-module-method/ "}, {"tags": [], "down_vote_count": 1, "creation_date": 1488228851, "answer_id": 42495576, "path": "stack.gulp.answer", "score": 6, "up_vote_count": 7, "is_accepted": false, "last_activity_date": 1488229190, "last_edit_date": 1495540052, "body_markdown": "You&#39;re getting an error because async/await use generators, which are an ES2016 feature, not ES2015. One way to fix this is to install the babel preset for ES2016 (`npm install --save babel-preset-es2016`) and compile to ES2016 instead of ES2015:\r\n\r\n    &quot;presets&quot;: [\r\n      &quot;es2016&quot;,\r\n      // etc...\r\n    ]\r\n\r\nAs the other answers mention, you can also use [polyfills](https://stackoverflow.com/a/33527883/6157047) (though make sure you [load the polyfill first](https://stackoverflow.com/a/36628148/6157047) before any other code runs). Alternatively, if you don&#39;t want to include all of the polyfill dependencies, you can use the [babel-regenerator-runtime](https://stackoverflow.com/a/36590887/6157047) or the [babel-plugin-transform-runtime](https://stackoverflow.com/a/36821986/6157047).\r\n"}, {"tags": [], "down_vote_count": 2, "creation_date": 1492149056, "answer_id": 43405922, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 6, "is_accepted": false, "last_activity_date": 1492151826, "last_edit_date": 1492151826, "body_markdown": "New Answer Why you follow my answer ?\r\n\r\n**Ans:** Because I am going to give you a answer with latest Update version npm project . \r\n\r\n**04/14/2017**\r\n\r\n    &quot;name&quot;: &quot;es6&quot;,\r\n     &quot;version&quot;: &quot;1.0.0&quot;,\r\n       &quot;babel-core&quot;: &quot;^6.24.1&quot;,\r\n        &quot;babel-loader&quot;: &quot;^6.4.1&quot;,\r\n        &quot;babel-polyfill&quot;: &quot;^6.23.0&quot;,\r\n        &quot;babel-preset-es2015&quot;: &quot;^6.24.1&quot;,\r\n        &quot;webpack&quot;: &quot;^2.3.3&quot;,\r\n        &quot;webpack-dev-server&quot;: &quot;^2.4.2&quot;\r\n\r\n\r\n**If your Use this version or more UP version of Npm and all other ...**\r\nSO just need to change : \r\n\r\n\r\n**webpack.config.js**\r\n\r\n    module.exports = {\r\n      entry: [&quot;babel-polyfill&quot;, &quot;./app/js&quot;]\r\n    };\r\n\r\nAfter change `webpack.config.js` files Just add this line to top of your code .\r\n\r\n    import &quot;babel-polyfill&quot;;\r\n\r\nNow check everything is ok. [Reference LINK][1] \r\n\r\nAlso Thanks @BrunoLM for his nice Answer.\r\n\r\n\r\n  [1]: https://babeljs.io/docs/usage/polyfill/"}, {"tags": [], "down_vote_count": 0, "creation_date": 1497884998, "answer_id": 44634124, "path": "stack.gulp.answer", "score": 10, "up_vote_count": 10, "is_accepted": false, "last_activity_date": 1502669747, "last_edit_date": 1502669747, "body_markdown": "My simple solution:\r\n\r\n    npm install --save-dev babel-plugin-transform-runtime\r\n    npm install babel-plugin-transform-async-to-generator --save-dev\r\n\r\n**.babelrc**\r\n\r\n    {\r\n      &quot;presets&quot;: [\r\n        [&quot;latest&quot;, {\r\n          &quot;es2015&quot;: {\r\n            &quot;loose&quot;: true\r\n          }\r\n        }],\r\n        &quot;react&quot;,\r\n        &quot;stage-0&quot;\r\n      ],\r\n      &quot;plugins&quot;: [\r\n        &quot;transform-runtime&quot;\r\n      ]\r\n    }"}, {"tags": [], "down_vote_count": 1, "creation_date": 1513086093, "answer_id": 47774110, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1513086093, "body_markdown": "I fixed this error by installing babel-polyfill\r\n\r\n    npm install babel-polyfill --save\r\n\r\nthen I imported it my app entry point\r\n\r\n    import http from &#39;http&#39;;\r\n    import config from &#39;dotenv&#39;;\r\n    import &#39;babel-polyfill&#39;;\r\n    import { register } from &#39;babel-core&#39;;\r\n    import app from &#39;../app&#39;;\r\n\r\nfor testing I included --require babel-polyfill in my test script\r\n\r\n    &quot;test&quot;: &quot;export NODE_ENV=test|| SET NODE_ENV=test&amp;&amp; mocha --compilers \r\n      js:babel-core/register --require babel-polyfill server/test/**.js --exit&quot;"}, {"tags": [], "down_vote_count": 1, "creation_date": 1513688932, "answer_id": 47887763, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1513688932, "body_markdown": "If you using Gulp + Babel for a frontend you need to use babel-polyfill\r\n\r\n`npm install babel-polyfill` \r\n\r\nand then add a script tag to index.html above all other script tags and reference babel-polyfill from node_modules"}, {"tags": [], "down_vote_count": 1, "creation_date": 1514098560, "answer_id": 47958663, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 2, "is_accepted": false, "last_activity_date": 1514098560, "body_markdown": "Most of these answers recommend solutions for dealing with this error using WebPack. But in case anyone is using RollUp (like I am), here is what finally worked for me (just a heads-up and bundling this polyfill ads about 10k tot he output size):\r\n\r\n.babelrc\r\n\r\n    {\r\n        &quot;presets&quot;: [\r\n            [\r\n                &quot;env&quot;,\r\n                {\r\n                    &quot;modules&quot;: false,\r\n                    &quot;targets&quot;: {\r\n                        &quot;browsers&quot;: [&quot;last 2 versions&quot;]\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        &quot;plugins&quot;: [&quot;external-helpers&quot;,\r\n            [\r\n                &quot;transform-runtime&quot;,\r\n                {\r\n                    &quot;polyfill&quot;: false,\r\n                    &quot;regenerator&quot;: true\r\n                }\r\n            ]]\r\n    }\r\n\r\n\r\nrollup.config.js\r\n\r\n    import resolve from &#39;rollup-plugin-node-resolve&#39;;\r\n    import babel from &#39;rollup-plugin-babel&#39;;\r\n    import uglify from &#39;rollup-plugin-uglify&#39;;\r\n    import commonjs from &#39;rollup-plugin-commonjs&#39;;\r\n    \r\n    \r\n    export default {\r\n        input: &#39;src/entry.js&#39;,\r\n        output: {\r\n            file: &#39;dist/bundle.js&#39;,\r\n            format: &#39;umd&#39;,\r\n            name: &#39;MyCoolLib&#39;,\r\n            exports: &#39;named&#39;\r\n        },\r\n        sourcemap: true,\r\n        plugins: [\r\n            commonjs({\r\n                // polyfill async/await\r\n                &#39;node_modules/babel-runtime/helpers/asyncToGenerator.js&#39;: [&#39;default&#39;]\r\n            }),\r\n            resolve(),\r\n            babel({\r\n                runtimeHelpers: true,\r\n                exclude: &#39;node_modules/**&#39;, // only transpile our source code\r\n            }),\r\n            uglify()\r\n    \r\n        ]\r\n    };\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1514987632, "answer_id": 48078796, "path": "stack.gulp.answer", "score": 1, "up_vote_count": 1, "is_accepted": false, "last_activity_date": 1514987632, "body_markdown": "`babel-regenerator-runtime` is now [deprecated][1], instead one should use `regenerator-runtime`.\r\n\r\nTo use the runtime generator with `webpack` and `babel` v7:\r\n\r\ninstall `regenerator-runtime`: \r\n\r\n    npm i -D regenerator-runtime\r\n\r\nAnd then add within webpack configuration : \r\n\r\n    entry: [\r\n      &#39;regenerator-runtime/runtime&#39;,\r\n      YOUR_APP_ENTRY\r\n    ]\r\n\r\n\r\n  [1]: https://github.com/babel/babel/blob/3b540e3f5a635272ff32523d1d406cef052b06ba/CHANGELOG.md"}, {"tags": [], "down_vote_count": 0, "creation_date": 1516187681, "answer_id": 48299797, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1516187681, "body_markdown": "For people looking to use the `babel-polyfill` version 7^ do this with `webpack` ver3^.\r\n\r\nNpm install the module `npm i -D @babel/polyfill`\r\n\r\nThen in your `webpack` file in your `entry` point do this\r\n\r\n    entry: [&#39;@babel/polyfill&#39;, path.resolve(APP_DIR, &#39;App.js&#39;)],"}, {"tags": [], "down_vote_count": 0, "creation_date": 1517376073, "answer_id": 48534963, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1517376073, "body_markdown": "I started getting this error after converting my project into a typescript project. From what I understand, the problem stems from async/await not being recognized.\r\n\r\nFor me the error was fixed by adding two things to my setup:\r\n\r\n1. As mentioned above many times, I needed to add babel-polyfill into my webpack entry array:\r\n\r\n    &lt;pre&gt;...\r\n    \r\n    entry: [&#39;babel-polyfill&#39;, &#39;./index.js&#39;],\r\n    \r\n    ...&lt;/pre&gt;\r\n\r\n2. I needed to update my .babelrc to allow the complilation of async/await into generators:\r\n\r\n    &lt;pre&gt;{\r\n      &quot;presets&quot;: [&quot;es2015&quot;],\r\n      &quot;plugins&quot;: [&quot;transform-async-to-generator&quot;]\r\n    }&lt;/pre&gt;\r\n\r\n###DevDependencies:\r\nI had to install a few things into my devDependencies in my package.json file as well. Namely, I was missing the babel-plugin-transform-async-to-generator, babel-polyfill and the babel-preset-es2015:\r\n    \r\n     &quot;devDependencies&quot;: {\r\n        &quot;babel-loader&quot;: &quot;^6.2.2&quot;,\r\n        &quot;babel-plugin-transform-async-to-generator&quot;: &quot;^6.5.0&quot;,\r\n        &quot;babel-polyfill&quot;: &quot;^6.5.0&quot;,\r\n        &quot;babel-preset-es2015&quot;: &quot;^6.5.0&quot;,\r\n        &quot;webpack&quot;: &quot;^1.12.13&quot;\r\n     }\r\n\r\n###Full Code Gist:\r\n\r\nI got the code from a really helpful and concise GitHub gist you can find [here][1].\r\n\r\n\r\n  [1]: https://gist.github.com/thejmazz/067295d9fb8b22c77be0\r\n\r\n\r\n\r\n"}], "title": "Babel 6 regeneratorRuntime is not defined", "view_count": 154250, "answer_count": 18, "code_snippet": ["<code>{\n    \"presets\": [ \"es2015\", \"stage-0\" ]\n}\n</code>", "<code>\"devDependencies\": {\n    \"babel-core\": \"^6.0.20\",\n    \"babel-preset-es2015\": \"^6.0.15\",\n    \"babel-preset-stage-0\": \"^6.0.15\"\n}\n</code>", "<code>\"use strict\";\nasync function foo() {\n  await bar();\n}\nfunction bar() { }\nexports.default = foo;\n</code>", "<code>babel-polyfill</code>", "<code>npm i -D babel-core babel-polyfill babel-preset-es2015 babel-preset-stage-0 babel-loader\n</code>", "<code>\"devDependencies\": {\n  \"babel-core\": \"^6.0.20\",\n  \"babel-polyfill\": \"^6.0.16\",\n  \"babel-preset-es2015\": \"^6.0.15\",\n  \"babel-preset-stage-0\": \"^6.0.15\"\n}\n</code>", "<code>{\n  \"presets\": [ \"es2015\", \"stage-0\" ]\n}\n</code>", "<code>\"use strict\";\n\nexport default async function foo() {\n  var s = await bar();\n  console.log(s);\n}\n\nfunction bar() {\n  return \"bar\";\n}\n</code>", "<code>require(\"babel-core/register\");\nrequire(\"babel-polyfill\");\n</code>", "<code>module.exports = {\n  entry: ['babel-polyfill', './test.js'],\n\n  output: {\n    filename: 'bundle.js'       \n  },\n\n  module: {\n    loaders: [\n      { test: /\\.jsx?$/, loader: 'babel', }\n    ]\n  }\n};\n</code>", "<code>mocha --compilers js:babel-core/register --require babel-polyfill\n</code>", "<code>require(\"babel-polyfill\")</code>", "<code>\"babel-polyfill\"</code>", "<code>entry</code>", "<code>entry: [\"babel-polyfill\", \"src/main.js\"]</code>", "<code>devDependency</code>", "<code>dependency</code>", "<code>$ npm install --save-dev babel-plugin-transform-runtime\n$ npm install --save babel-runtime\n</code>", "<code>.babelrc</code>", "<code>{\n  \"plugins\": [\n    [\"transform-runtime\", {\n      \"polyfill\": false,\n      \"regenerator\": true\n    }]\n  ]\n}\n</code>", "<code>babel-runtime</code>", "<code>babel-plugin-transform-runtime</code>", "<code>babel-runtime</code>", "<code>babel-plugin-transform-runtime</code>", "<code>require</code>", "<code>transform-runtime</code>", "<code>babel-preset-env</code>", "<code>import 'babel-polyfill'</code>", "<code>babel-polyfill</code>", "<code>entry: {\n    index: ['babel-polyfill', './index.js']\n}\n</code>", "<code>yarn add --dev babel-preset-env\n</code>", "<code>{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"browsers\": [\"last 2 Chrome versions\"]\n      }\n    }]\n  ]\n}\n</code>", "<code>babel-preset-env</code>", "<code>async</code>", "<code>await</code>", "<code>babel-preset-env</code>", "<code>babel-preset-env</code>", "<code>yarn install</code>", "<code>yarn add</code>", "<code>yarn install</code>", "<code>yarn add</code>", "<code>presets</code>", "<code>babel-polyfill</code>", "<code>babel-regenerator-runtime</code>", "<code>module.exports = {\n  entry: ['babel-regenerator-runtime', './test.js'],\n\n  // ...\n};\n</code>", "<code>babel-polyfill</code>", "<code>npm i -D babel-regenerator-runtime</code>", "<code>npm install --save-dev babel-plugin-transform-runtime\nnpm install babel-plugin-transform-async-to-generator --save-dev\n</code>", "<code>{\n  \"presets\": [\n    [\"latest\", {\n      \"es2015\": {\n        \"loose\": true\n      }\n    }],\n    \"react\",\n    \"stage-0\"\n  ],\n  \"plugins\": [\n    \"transform-runtime\"\n  ]\n}\n</code>", "<code>babel-preset-stage-2</code>", "<code>--require babel-polyfill</code>", "<code>Mocha</code>", "<code>mocha \\\"server/tests/**/*.test.js\\\" --compilers js:babel-register --require babel-polyfill</code>", "<code>npm install --save babel-preset-es2016</code>", "<code>\"presets\": [\n  \"es2016\",\n  // etc...\n]\n</code>", "<code>\"name\": \"es6\",\n \"version\": \"1.0.0\",\n   \"babel-core\": \"^6.24.1\",\n    \"babel-loader\": \"^6.4.1\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"webpack\": \"^2.3.3\",\n    \"webpack-dev-server\": \"^2.4.2\"\n</code>", "<code>module.exports = {\n  entry: [\"babel-polyfill\", \"./app/js\"]\n};\n</code>", "<code>webpack.config.js</code>", "<code>import \"babel-polyfill\";\n</code>", "<code>npm install babel-plugin-transform-async-to-module-method babel-polyfill bluebird babel-preset-es2015 babel-core\n</code>", "<code>import 'babel-polyfill';</code>", "<code>{\n    \"presets\": [\"es2015\"],\n    \"plugins\": [\n      [\"transform-async-to-module-method\", {\n        \"module\": \"bluebird\",\n        \"method\": \"coroutine\"\n      }]\n    ]\n}\n</code>", "<code> \"devDependencies\": {\n    \"babel-loader\": \"^6.2.2\",\n    \"babel-plugin-transform-async-to-generator\": \"^6.5.0\",\n    \"babel-polyfill\": \"^6.5.0\",\n    \"babel-preset-es2015\": \"^6.5.0\",\n    \"webpack\": \"^1.12.13\"\n }\n</code>", "<code>presets: ['es2015', 'stage-0']</code>", "<code>async/await</code>", "<code>mocha --require babel-polyfill</code>", "<code>gulp.task('scripts', () =&gt; {\n  return rollup({\n    entry: './app/scripts/main.js',\n    format: \"iife\",\n    sourceMap: true,\n    plugins: [babel({\n      exclude: 'node_modules/**',\n      \"presets\": [\n        [\n          \"es2015-rollup\"\n        ]\n      ],\n      \"plugins\": [\n        \"external-helpers\"\n      ]\n    }),\n    includePaths({\n      include: {},\n      paths: ['./app/scripts'],\n      external: [],\n      extensions: ['.js']\n    })]\n  })\n\n  .pipe(source('app.js'))\n  .pipe(buffer())\n  .pipe(sourcemaps.init({\n    loadMaps: true\n  }))\n  .pipe(sourcemaps.write('.'))\n  .pipe(gulp.dest('.tmp/scripts'))\n  .pipe(reload({ stream: true }));\n});\n</code>", "<code>babel-polyfill</code>", "<code>bower install babel-polyfill --save\n</code>", "<code>&lt;script src=\"/bower_components/babel-polyfill/browser-polyfill.js\"&gt;&lt;/script&gt;\n</code>", "<code>npm install babel-polyfill --save\n</code>", "<code>import http from 'http';\nimport config from 'dotenv';\nimport 'babel-polyfill';\nimport { register } from 'babel-core';\nimport app from '../app';\n</code>", "<code>\"test\": \"export NODE_ENV=test|| SET NODE_ENV=test&amp;&amp; mocha --compilers \n  js:babel-core/register --require babel-polyfill server/test/**.js --exit\"\n</code>", "<code>{\n    \"presets\": [\n        [\n            \"env\",\n            {\n                \"modules\": false,\n                \"targets\": {\n                    \"browsers\": [\"last 2 versions\"]\n                }\n            }\n        ]\n    ],\n    \"plugins\": [\"external-helpers\",\n        [\n            \"transform-runtime\",\n            {\n                \"polyfill\": false,\n                \"regenerator\": true\n            }\n        ]]\n}\n</code>", "<code>import resolve from 'rollup-plugin-node-resolve';\nimport babel from 'rollup-plugin-babel';\nimport uglify from 'rollup-plugin-uglify';\nimport commonjs from 'rollup-plugin-commonjs';\n\n\nexport default {\n    input: 'src/entry.js',\n    output: {\n        file: 'dist/bundle.js',\n        format: 'umd',\n        name: 'MyCoolLib',\n        exports: 'named'\n    },\n    sourcemap: true,\n    plugins: [\n        commonjs({\n            // polyfill async/await\n            'node_modules/babel-runtime/helpers/asyncToGenerator.js': ['default']\n        }),\n        resolve(),\n        babel({\n            runtimeHelpers: true,\n            exclude: 'node_modules/**', // only transpile our source code\n        }),\n        uglify()\n\n    ]\n};\n</code>", "<code>babel-polyfill</code>", "<code>babel-regenerator-runtime</code>", "<code>regenerator-runtime</code>", "<code>webpack</code>", "<code>babel</code>", "<code>regenerator-runtime</code>", "<code>npm i -D regenerator-runtime\n</code>", "<code>entry: [\n  'regenerator-runtime/runtime',\n  YOUR_APP_ENTRY\n]\n</code>", "<code>\"devDependencies\": {\n    \"babel-preset-stage-3\": \"^6.11.0\"\n}\n</code>", "<code>\"presets\": [\"es2015\", \"stage-3\"]\n</code>", "<code>npm install babel-polyfill</code>", "<code>babel-polyfill</code>", "<code>webpack</code>", "<code>npm i -D @babel/polyfill</code>", "<code>webpack</code>", "<code>entry</code>", "<code>entry: ['@babel/polyfill', path.resolve(APP_DIR, 'App.js')],\n</code>"], "path": "stack.gulp"}, {"tags": ["node.js", "express"], "creation_date": 1329059354, "body_markdown": "In Ubuntu it&#39;s quite simple; I can run the application using:\r\n\r\n    $ NODE_ENV=production node myapp/app.js\r\n\r\nHowever this doesn&#39;t work on Windows. Is there a configuration file where I can set the attribute?\r\n", "last_edit_date": 1500199636, "up_vote_count": 200, "link": "https://stackoverflow.com/questions/9249830/how-can-i-set-node-env-production-on-windows", "_childDocuments_": [{"tags": [], "down_vote_count": 2, "creation_date": 1329062094, "answer_id": 9250168, "path": "stack.gulp.answer", "score": 288, "up_vote_count": 290, "is_accepted": true, "last_activity_date": 1500199754, "last_edit_date": 1500199754, "body_markdown": "Try to use\r\n\r\n    set NODE_ENV=production\r\n\r\nThis should be executed in the command prompt where you intend to run your Node.js application.\r\n\r\nThe above line would set the environment variable NODE_ENV for the command prompt where you execute the command.\r\n\r\nTo set environment variables globally so they persist beyond just the single command prompt, you can find the tool from System in Control Panel (or by typing &#39;environment&#39; into the search box in the start menu).\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1349730529, "answer_id": 12789504, "path": "stack.gulp.answer", "score": 127, "up_vote_count": 127, "is_accepted": false, "last_activity_date": 1462167909, "last_edit_date": 1462167909, "body_markdown": "In PowerShell:\r\n\r\n    $env:NODE_ENV=&quot;production&quot;\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1401716492, "answer_id": 23996007, "path": "stack.gulp.answer", "score": 8, "up_vote_count": 8, "is_accepted": false, "last_activity_date": 1500200912, "last_edit_date": 1500200912, "body_markdown": "My experience using Node.js on Windows 7 64-bit in Visual Studio 2013 is that you need to use\r\n\r\n    setx NODE_ENV development\r\n\r\nfrom a cmd window. AND you have to restart Visual Studio in order for the new value to be recognized.\r\n\r\nThe set syntax only lasts for the duration of the cmd window in which it is set.\r\n\r\nSimple test in Node.js:\r\n\r\n    console.log(&#39;process.env.NODE_ENV = &#39; + process.env.NODE_ENV);\r\n\r\nIt returns &#39;undefined&#39; when using set, and it will return &#39;development&#39; if using setx and restarting Visual Studio.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1431755871, "answer_id": 30272349, "path": "stack.gulp.answer", "score": 53, "up_vote_count": 53, "is_accepted": false, "last_activity_date": 1500205739, "last_edit_date": 1500205739, "body_markdown": "It would be ideal if you could set parameters on the same line as your call to start Node.js on Windows. Look at the following carefully, and run it exactly as stated:\r\n\r\nYou have these two options:\r\n\r\n1. At the command line:\r\n\r\n        set NODE_ENV=production&amp;&amp;npm start\r\n\r\n    or\r\n\r\n        set NODE_ENV=production&amp;&amp;node index.js\r\n\r\n2. Run &quot;npm run start_windows&quot; at the command line with your package.json file configured as below\r\n\r\n        //package.json\r\n\r\n        &quot;scripts&quot;: {\r\n          &quot;start&quot;: &quot;node index.js&quot;\r\n          &quot;start_windows&quot;: &quot;set NODE_ENV=production&amp;&amp;node index.js&quot;\r\n        }\r\n\r\nThe trick for it to work on Windows is you need to remove the whitespace before and after the &quot;&amp;&amp;&quot;.\r\n\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1437493611, "answer_id": 31543805, "path": "stack.gulp.answer", "score": 4, "up_vote_count": 4, "is_accepted": false, "last_activity_date": 1500205801, "last_edit_date": 1500205801, "body_markdown": "To run your application in PowerShell (since `&amp;&amp;` is disallowed):\r\n\r\n    ($env:NODE_ENV=&quot;production&quot;) -and (node myapp/app.js)\r\n\r\nNote that the text output of what the server&#39;s doing is suppressed, and I am not sure if that&#39;s fixable. (Expanding on @jsalonen&#39;s answer.)\r\n"}, {"tags": [], "down_vote_count": 8, "creation_date": 1441806074, "answer_id": 32481210, "path": "stack.gulp.answer", "score": 18, "up_vote_count": 26, "is_accepted": false, "last_activity_date": 1500205909, "last_edit_date": 1500205909, "body_markdown": "You can use\r\n\r\n    npm run env NODE_ENV=production\r\n\r\nIt is probably the best way to do it, because it&#39;s compatible on both Windows and Unix.\r\n\r\nFrom the [npm run-script documentation][1]:\r\n\r\n&gt; The env script is a special built-in command that can be used to list environment variables that will be available to the script at runtime. If an &quot;env&quot; command is defined in your package it will take precedence over the built-in.\r\n\r\n  [1]: https://docs.npmjs.com/cli/run-script\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1445273478, "answer_id": 33219800, "path": "stack.gulp.answer", "score": 12, "up_vote_count": 12, "is_accepted": false, "last_activity_date": 1500206206, "last_edit_date": 1500206206, "body_markdown": "If you are using Visual Studio with NTVS, you can set the environment variables on the project properties page:\r\n\r\n[![Visual Studio NTVS Project Properties][1]][1]\r\n\r\nAs you can see, the Configuration and Platform dropdowns are disabled (I haven&#39;t looked too far into why this is), but if you edit your `.njsproj` file as follows:\r\n\r\n      &lt;PropertyGroup Condition=&quot; &#39;$(Configuration)&#39; == &#39;Debug&#39; &quot;&gt;\r\n        &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;\r\n        &lt;Environment&gt;NODE_ENV=development&lt;/Environment&gt;\r\n      &lt;/PropertyGroup&gt;\r\n      &lt;PropertyGroup Condition=&quot; &#39;$(Configuration)&#39; == &#39;Release&#39; &quot;&gt;\r\n        &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;\r\n        &lt;Environment&gt;NODE_ENV=production&lt;/Environment&gt;\r\n      &lt;/PropertyGroup&gt;\r\n\r\nThe &#39;Debug / Release&#39; dropdown will then control how the variable is set before starting Node.js.\r\n\r\n  [1]: http://i.stack.imgur.com/B2e5b.png\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1455084773, "answer_id": 35308102, "path": "stack.gulp.answer", "score": 96, "up_vote_count": 96, "is_accepted": false, "last_activity_date": 1500206322, "last_edit_date": 1500206322, "body_markdown": "I just found a nice Node.js package that can help a lot to define environment variables using a unique syntax, cross platform.\r\n\r\nhttps://www.npmjs.com/package/cross-env\r\n\r\nIt allow you to write something like this:\r\n\r\n    cross-env NODE_ENV=production my-command\r\n\r\nWhich is pretty convenient! No Windows or Unix specific commands any more!\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1483971982, "answer_id": 41550148, "path": "stack.gulp.answer", "score": 3, "up_vote_count": 3, "is_accepted": false, "last_activity_date": 1500206380, "last_edit_date": 1500206380, "body_markdown": "Just to clarify, and for anyone else that may be pulling their hair out...\r\n\r\nIf you are using **git bash on Windows**, ``set node_env=production&amp;&amp; node whatever.js`` **does not seem to work**. Instead, use the native cmd. Then, using ``set node_env=production&amp;&amp; node whatever.js``works as expected.\r\n\r\nMy use case:  \r\n\r\nI develop on Windows because my workflow is *a lot* faster, but I needed to make sure that my application&#39;s development-specific middleware were not firing in the production environment.\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1493208232, "answer_id": 43633672, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1493208232, "body_markdown": "Windows git-bash | Mac OS X Terminal\r\n----------------\r\n\r\n&gt; NODE_ENV=production node script.js\r\n\r\nWhich normally becomes\r\n\r\n&gt; NODE_ENV=production node app.js\r\n\r\nYou could also set N number of environment variables by running\r\n\r\n&gt; NODE_ENV=production NODE_APP_INSTANCE=3 node app.js\r\n\r\nThis would make npm `config` read the `default.js` file followed by the `production.js` file overwriting anything that is duplicate, then finally reading `production-3.js` and once again overwriting duplicate entries.\r\n\r\n"}, {"tags": [], "down_vote_count": 0, "creation_date": 1494322087, "answer_id": 43866095, "path": "stack.gulp.answer", "score": 0, "up_vote_count": 0, "is_accepted": false, "last_activity_date": 1494325136, "last_edit_date": 1495542392, "body_markdown": "For *multiple* environment variables, an `.env` file is more convenient. As an example `.env`:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    # This is a comment\r\n    DB_HOST=localhost\r\n    DB_USER=root\r\n    DB_PASS=s1mpl3\r\n    EMPTY=\r\n\r\n\r\nIt&#39;s easy to use with [`dotenv`](https://github.com/motdotla/dotenv):\r\n\r\n 1. Install with `npm install dotenv --save`.\r\n 2. Include it in your code (best at the start of the `index.js`) and directly use it with the [`process.env` command](https://nodejs.org/api/process.html#process_process_env):\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    require(&#39;dotenv&#39;).load()\r\n    console.log(process.env.DB_HOST)   \r\n\r\nDon&#39;t forget to [**ignore the file** in your VCS](https://stackoverflow.com/questions/9695461/is-it-safe-to-use-the-same-ignores-file-for-git-mercurial-and-bazaar), e.g. with the glob `*.env`, if the file contains credentials.\r\n\r\nTo test on start if all environments are set, use [`dotenv-safe`](https://github.com/rolodato/dotenv-safe). With it, you have the following files:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    # .env.example, committed to repo\r\n    SECRET=\r\n    TOKEN=\r\n    KEY=\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    # .env, private\r\n    SECRET=topsecret\r\n    TOKEN=\r\n\r\nand the start fails if a variable in `.env.example` is not set in `.env` (here: `KEY`)."}], "title": "How can I set NODE_ENV=production on Windows?", "view_count": 173356, "answer_count": 11, "code_snippet": ["<code>$ NODE_ENV=production node myapp/app.js\n</code>", "<code>set NODE_ENV=production\n</code>", "<code>set NODE_ENV=production &amp;&amp; node app</code>", "<code>package.json</code>", "<code>\"scripts\": { \"start\": \"set NODE_ENV=production &amp;&amp; node app\" }</code>", "<code>echo %NODE_ENV%</code>", "<code>cross-env</code>", "<code>$env:NODE_ENV=\"production\"\n</code>", "<code>set NODE_ENV=production</code>", "<code>$env:NODE_ENV=\"development\"; gulp runMytask</code>", "<code>cross-env NODE_ENV=production my-command\n</code>", "<code>set NODE_ENV=production&amp;&amp;npm start\n</code>", "<code>set NODE_ENV=production&amp;&amp;node index.js\n</code>", "<code>//package.json\n\n\"scripts\": {\n  \"start\": \"node index.js\"\n  \"start_windows\": \"set NODE_ENV=production&amp;&amp;node index.js\"\n}\n</code>", "<code>&amp;</code>", "<code>npm run env NODE_ENV=production\n</code>", "<code>npm run env NODE_ENV=production -- node -e 'console.log(process.env.NODE_ENV)'</code>", "<code>--</code>", "<code>node -e 'console.log(process.env.NODE_ENV)'</code>", "<code>.njsproj</code>", "<code>  &lt;PropertyGroup Condition=\" '$(Configuration)' == 'Debug' \"&gt;\n    &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;\n    &lt;Environment&gt;NODE_ENV=development&lt;/Environment&gt;\n  &lt;/PropertyGroup&gt;\n  &lt;PropertyGroup Condition=\" '$(Configuration)' == 'Release' \"&gt;\n    &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;\n    &lt;Environment&gt;NODE_ENV=production&lt;/Environment&gt;\n  &lt;/PropertyGroup&gt;\n</code>", "<code>setx NODE_ENV development\n</code>", "<code>console.log('process.env.NODE_ENV = ' + process.env.NODE_ENV);\n</code>", "<code>cmd</code>", "<code>&amp;&amp;</code>", "<code>($env:NODE_ENV=\"production\") -and (node myapp/app.js)\n</code>", "<code>set node_env=production&amp;&amp; node whatever.js</code>", "<code>set node_env=production&amp;&amp; node whatever.js</code>", "<code>config</code>", "<code>default.js</code>", "<code>production.js</code>", "<code>production-3.js</code>", "<code>.env</code>", "<code>.env</code>", "<code># This is a comment\nDB_HOST=localhost\nDB_USER=root\nDB_PASS=s1mpl3\nEMPTY=\n</code>", "<code>dotenv</code>", "<code>npm install dotenv --save</code>", "<code>index.js</code>", "<code>process.env</code>", "<code>require('dotenv').load()\nconsole.log(process.env.DB_HOST)   \n</code>", "<code>*.env</code>", "<code>dotenv-safe</code>", "<code># .env.example, committed to repo\nSECRET=\nTOKEN=\nKEY=\n</code>", "<code># .env, private\nSECRET=topsecret\nTOKEN=\n</code>", "<code>.env.example</code>", "<code>.env</code>", "<code>KEY</code>"], "path": "stack.gulp"}], "name": "gulp"}