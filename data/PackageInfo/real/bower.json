{
  "_childDocuments_": [
    {
      "tags": [
        "javascript",
        "backbone.js",
        "underscore.js",
        "requirejs"
      ],
      "creation_date": 1321329052,
      "body_markdown": "I&#39;m trying to load Backbone and Underscore (as well as jQuery) with RequireJS. With the latest versions of Backbone and Underscore, it seems kind of tricky. For one, Underscore automatically registers itself as a module, but Backbone assumes Underscore is available globally. I should also note that Backbone doesn&#39;t seem to register itself as a module which makes it kind of inconsistent with the other libs. This is the best main.js I could come up with that works:\r\n\r\n    require(\r\n\t{\r\n\t\tpaths: {\r\n\t\t\t&#39;backbone&#39;: &#39;libs/backbone/backbone-require&#39;,\r\n\t\t\t&#39;templates&#39;: &#39;../templates&#39;\r\n\t\t}\r\n\t},\r\n\t[\r\n\t\t// jQuery registers itself as a module.\r\n\t\t&#39;http://cdnjs.cloudflare.com/ajax/libs/jquery/1.7/jquery.min.js&#39;,\r\n\t\r\n\t\t// Underscore registers itself as a module.\r\n\t\t&#39;http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.2.1/underscore-min.js&#39;\r\n\t], function() {\r\n\t\r\n\t\t// These nested require() calls are just due to how Backbone is built.  Underscore basically says if require()\r\n\t\t// is available then it will automatically register an &quot;underscore&quot; module, but it won&#39;t register underscore\r\n\t\t// as a global &quot;_&quot;.  However, Backbone expects Underscore to be a global variable.  To make this work, we require\r\n\t\t// the Underscore module after it&#39;s been defined from within Underscore and set it as a global variable for\r\n\t\t// Backbone&#39;s sake.  Hopefully Backbone will soon be able to use the Underscore module directly instead of\r\n\t\t// assuming it&#39;s global.\r\n\t\trequire([&#39;underscore&#39;], function(_) {\r\n\t\t\twindow._ = _;\r\n\t\t});\r\n\t\r\n\t\trequire([\r\n\t\t\t&#39;order!http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.5.3/backbone-min.js&#39;,\r\n\t\t\t&#39;order!app&#39;\r\n\t\t], function(a, app) {\r\n\t\t\tapp.initialize();\r\n\t\t})\r\n\t});\r\n\r\nI should mention that, while it works, the optimizer chokes on it.  I receive the following: \r\n\r\n\r\n    Tracing dependencies for: main\r\n    js: &quot;/home/httpd/aahardy/requirejs/r.js&quot;, line 7619: exception from uncaught JavaScript throw: Error: Error: Error evaluating module &quot;undefined&quot; at location &quot;/home/httpd/aahardy/phoenix/trunk/ui/js/../../ui-build/js/underscore.js&quot;:\r\n    JavaException: java.io.FileNotFoundException: /home/httpd/aahardy/phoenix/trunk/ui/js/../../ui-build/js/underscore.js (No such file or directory)\r\n    fileName:/home/httpd/aahardy/phoenix/trunk/ui/js/../../ui-build/js/underscore.js\r\n    lineNumber: undefined\r\n    http://requirejs.org/docs/errors.html#defineerror\r\n    In module tree:\r\n        main\r\n\r\n\r\nIs there a better way of handling this?  Thanks!",
      "last_edit_date": 1413303743,
      "up_vote_count": 171,
      "link": "https://stackoverflow.com/questions/8131265/loading-backbone-and-underscore-using-requirejs",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1321466139,
          "answer_id": 8156341,
          "path": "stack.bower.answer",
          "score": 171,
          "up_vote_count": 173,
          "is_accepted": false,
          "last_activity_date": 1330016160,
          "last_edit_date": 1330016160,
          "body_markdown": "**Update**: As of version 1.3.0 [Underscore removed AMD (RequireJS) support][1].\r\n\r\nYou can use the [amdjs/Backbone 0.9.1][3] and the [amdjs/Underscore 1.3.1][4] fork with AMD support from James Burke (the maintainer of RequireJS).\r\n\r\nMore info about [AMD support for Underscore and Backbone][5].\r\n\r\n    // main.js using RequireJS 1.0.7\r\n    require.config({\r\n        paths: {\r\n            &#39;jquery&#39;: &#39;libs/jquery/1.7.1/jquery&#39;,\r\n            &#39;underscore&#39;: &#39;libs/underscore/1.3.1-amdjs/underscore&#39;, // AMD support\r\n            &#39;backbone&#39;: &#39;libs/backbone/0.9.1-amdjs/backbone&#39;, // AMD support\r\n            &#39;templates&#39;: &#39;../templates&#39;\r\n        }\r\n    });\r\n\r\n    require([\r\n        &#39;domReady&#39;, // optional, using RequireJS domReady plugin\r\n        &#39;app&#39;\r\n    ], function(domReady, app){\r\n        domReady(function () {\r\n            app.initialize();\r\n        });\r\n    });\r\nThe modules are properly registered and there is no need for the order plugin:\r\n\r\n    // app.js\r\n    define([\r\n        &#39;jquery&#39;, \r\n        &#39;underscore&#39;,\r\n        &#39;backbone&#39;\r\n    ], function($, _, Backbone){\r\n        return {\r\n            initialize: function(){\r\n                // you can use $, _ or Backbone here\r\n            }\r\n        };\r\n    });\r\n\r\nUnderscore is actually optional, because Backbone now gets its dependencies on its own:\r\n\r\n    // app.js\r\n    define([&#39;jquery&#39;, &#39;backbone&#39;], function($, Backbone){\r\n        return {\r\n            initialize: function(){\r\n                // you can use $ and Backbone here with\r\n                // dependencies loaded i.e. Underscore\r\n            }\r\n        };\r\n    });\r\n\r\nWith some [AMD sugar][6] you could also write it like this:\r\n\r\n    define(function(require) {\r\n        var Backbone = require(&#39;backbone&#39;),\r\n            $ = require(&#39;jquery&#39;);\r\n    \r\n        return {\r\n            initialize: function(){\r\n                // you can use $ and Backbone here with\r\n                // dependencies loaded i.e. Underscore\r\n            }\r\n        };\r\n    });\r\n\r\n\r\nRegarding the optimizer error: doublecheck your build configuration. I assume your path configuration is off. If you have a [directory setup similar to the RequireJS Docs][7] you can use:\r\n\r\n    // app.build.js\r\n    ({\r\n        appDir: &quot;../&quot;,\r\n        baseUrl: &quot;js&quot;,\r\n        dir: &quot;../../ui-build&quot;,\r\n        paths: {\r\n            &#39;jquery&#39;: &#39;libs/jquery/1.7.1/jquery&#39;,\r\n            &#39;underscore&#39;: &#39;libs/underscore/1.3.1-amdjs/underscore&#39;,\r\n            &#39;backbone&#39;: &#39;libs/backbone/0.9.1-amdjs/backbone&#39;,\r\n            &#39;templates&#39;: &#39;../templates&#39;\r\n        }, \r\n        modules: [\r\n            {\r\n                name: &quot;main&quot;\r\n            }\r\n        ]\r\n    })\r\n\r\n\r\n  [1]: https://github.com/documentcloud/underscore/pull/431#issuecomment-3452856\r\n  [2]: http://tagneto.blogspot.com/2012/01/simplicity-and-javascript-modules.html\r\n  [3]: https://github.com/amdjs/backbone\r\n  [4]: https://github.com/amdjs/underscore\r\n  [5]: http://tagneto.blogspot.com/2012/01/amd-support-for-underscore-and-backbone.html\r\n  [6]: http://requirejs.org/docs/whyamd.html#sugar\r\n  [7]: http://requirejs.org/docs/optimization.html#setup"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1338987388,
          "answer_id": 10914666,
          "path": "stack.bower.answer",
          "score": 292,
          "up_vote_count": 292,
          "is_accepted": true,
          "last_activity_date": 1375290040,
          "last_edit_date": 1375290040,
          "body_markdown": "[RequireJS 2.X][1] now organically addresses non-AMD modules such as Backbone &amp; Underscore much better, using the new [`shim`][2] configuration.  \r\n\r\nThe `shim` configuration is simple to use: (1) one states the dependencies (`deps`), if any, (which may be from the `paths` configuration, or may be valid paths themselves). (2) (optionally) specify the global variable name from the file you&#39;re shimming, which should be exported to your module functions that require it. (If you don&#39;t specify the exports, then you&#39;ll need to just use the global, as nothing will get passed into your require/define functions.)\r\n\r\nHere is a simple example usage of `shim` to load Backbone.  It also adds an export for underscore, even though it doesn&#39;t have any dependencies. \r\n\r\n    require.config({\r\n      shim: {\r\n        underscore: {\r\n          exports: &#39;_&#39;\r\n        },\r\n        backbone: {\r\n          deps: [&quot;underscore&quot;, &quot;jquery&quot;],\r\n          exports: &quot;Backbone&quot;\r\n        }\r\n      }\r\n    });\r\n    \r\n    //the &quot;main&quot; function to bootstrap your code\r\n    require([&#39;jquery&#39;, &#39;underscore&#39;, &#39;backbone&#39;], function ($, _, Backbone) {   // or, you could use these deps in a separate module using define\r\n\r\n    });\r\n\r\n&lt;sup&gt;*Note:* this simplified code assumes that jquery, backbone and underscore are in files named &quot;jquery.js&quot;, &quot;backbone.js&quot; and &quot;underscore.js&quot; in the same directory as this &quot;main&quot; code (which becomes the baseURL for require).  If this isn&#39;t the case, you&#39;ll need to use a [paths config][4].&lt;/sup&gt; \r\n\r\n\r\nI personally think with the built-in `shim` functionality, the advantages of not using a forked version of Backbone &amp; Underscore outweigh the benefits of using the AMD fork recommended in the other popular answer, but either way works.\r\n\r\n\r\n  [1]: https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.0\r\n  [2]: http://requirejs.org/docs/api.html#config-shim\r\n  [3]: https://github.com/tbranyen/backbone-boilerplate/blob/master/app/config.js\r\n  [4]: http://requirejs.org/docs/api.html#config-paths"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1392200202,
          "answer_id": 21724897,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1392200202,
          "body_markdown": "Good news, Underscore 1.6.0 now supports requirejs define !!!\r\n\r\nversions below this require shims, or requiring underscore.js then blindly hoping that the &quot;_&quot; global variable hasn;t been smashed (which to be fair is a fair bet)\r\n\r\nsimply load it in by\r\n\r\n      requirejs.config({\r\n      \tpaths: {\r\n      \t\t&quot;underscore&quot;: &quot;PATH/underscore-1.6.0.min&quot;,\r\n      \t}\r\n      });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1393592293,
          "answer_id": 22095887,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1432486509,
          "last_edit_date": 1432486509,
          "body_markdown": "I will write down directly, you can read the explaination on requirejs.org, you could use below code as a snippet for your everyday use; (p.s. i use yeoman) (since many things updated, im posting this as of Feb 2014.)\r\n\r\nMake sure you included script in your index.html\r\n\r\n    &lt;!-- build:js({app,.tmp}) scripts/main.js --&gt;\r\n    &lt;script data-main=&quot;scripts/main&quot; src=&quot;bower_components/requirejs/require.js&quot;&gt;&lt;/script&gt;\r\n    &lt;!-- endbuild --&gt;\r\n\r\nThen, in main.js\r\n\r\n    require.config({\r\n        shim: {\r\n            &#39;backbone&#39;: {\r\n                deps: [&#39;../bower_components/underscore/underscore.js&#39;, &#39;jquery&#39;],\r\n                exports: &#39;Backbone&#39;\r\n            }\r\n        },\r\n    \r\n        paths: {\r\n            jquery: &#39;../bower_components/jquery/jquery&#39;,\r\n            backbone: &#39;../bower_components/backbone/backbone&#39;\r\n        }\r\n    });\r\n    \r\n    require([&#39;views/app&#39;], function(AppView){\r\n        new AppView();\r\n    });\r\n\r\n\r\napp.js\r\n\r\n    /**\r\n     * App View\r\n     */\r\n    define([&#39;backbone&#39;, &#39;router&#39;], function(Backbone, MainRouter) {\r\n        var AppView = Backbone.View.extend({\r\n            el: &#39;body&#39;,\r\n    \r\n            initialize: function() {\r\n                App.Router = new MainRouter();\r\n                Backbone.history.start();\r\n            }\r\n        });\r\n    \r\n        return AppView;\r\n    });\r\n\r\n\r\nI hope I was useful.!"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1408140563,
          "answer_id": 25334909,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1408140563,
          "body_markdown": "For reference, as of version 1.1.1 (~Feb &#39;13), Backbone also [registers itself as an AMD module](https://github.com/jashkenas/backbone/commit/ab5d2eb4c657ed81e80ac815f687e94a2cb55fef). It will work with requirejs without the need to use its shim config. ([James Burke&#39;s amdjs fork](https://github.com/amdjs/backbone) also hasn&#39;t been updated since 1.1.0)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1516347290,
          "answer_id": 48336154,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1516347290,
          "body_markdown": "    require.config({\r\n      waitSeconds: 500,\r\n      paths: {\r\n        jquery: &quot;libs/jquery/jquery&quot;,\r\n        jqueryCookie: &quot;libs/jquery/jquery.cookie&quot;,\r\n        .....\r\n      },\r\n    \r\n      shim: {\r\n        jqxcore: {\r\n          export: &quot;$&quot;,\r\n          deps: [&quot;jquery&quot;]\r\n        },\r\n        jqxbuttons: {\r\n          export: &quot;$&quot;,\r\n          deps: [&quot;jquery&quot;, &quot;jqxcore&quot;]\r\n        }\r\n        ............\r\n      }\r\n    });\r\n    \r\n    require([\r\n     &lt;i&gt; // Load our app module and pass it to our definition function&lt;/i&gt;\r\n      &quot;app&quot;\r\n    ], function(App) {\r\n      // The &quot;app&quot; dependency is passed in as &quot;App&quot;\r\n      // Again, the other dependencies passed in are not &quot;AMD&quot; therefore don&#39;t pass a parameter to this function\r\n      App.initialize();\r\n    });\r\n\r\n"
        }
      ],
      "title": "Loading Backbone and Underscore using RequireJS",
      "view_count": 68187,
      "answer_count": 6,
      "code_snippet": [
        "<code>require(\n{\n    paths: {\n        'backbone': 'libs/backbone/backbone-require',\n        'templates': '../templates'\n    }\n},\n[\n    // jQuery registers itself as a module.\n    'http://cdnjs.cloudflare.com/ajax/libs/jquery/1.7/jquery.min.js',\n\n    // Underscore registers itself as a module.\n    'http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.2.1/underscore-min.js'\n], function() {\n\n    // These nested require() calls are just due to how Backbone is built.  Underscore basically says if require()\n    // is available then it will automatically register an \"underscore\" module, but it won't register underscore\n    // as a global \"_\".  However, Backbone expects Underscore to be a global variable.  To make this work, we require\n    // the Underscore module after it's been defined from within Underscore and set it as a global variable for\n    // Backbone's sake.  Hopefully Backbone will soon be able to use the Underscore module directly instead of\n    // assuming it's global.\n    require(['underscore'], function(_) {\n        window._ = _;\n    });\n\n    require([\n        'order!http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.5.3/backbone-min.js',\n        'order!app'\n    ], function(a, app) {\n        app.initialize();\n    })\n});\n</code>",
        "<code>Tracing dependencies for: main\njs: \"/home/httpd/aahardy/requirejs/r.js\", line 7619: exception from uncaught JavaScript throw: Error: Error: Error evaluating module \"undefined\" at location \"/home/httpd/aahardy/phoenix/trunk/ui/js/../../ui-build/js/underscore.js\":\nJavaException: java.io.FileNotFoundException: /home/httpd/aahardy/phoenix/trunk/ui/js/../../ui-build/js/underscore.js (No such file or directory)\nfileName:/home/httpd/aahardy/phoenix/trunk/ui/js/../../ui-build/js/underscore.js\nlineNumber: undefined\nhttp://requirejs.org/docs/errors.html#defineerror\nIn module tree:\n    main\n</code>",
        "<code>shim</code>",
        "<code>shim</code>",
        "<code>deps</code>",
        "<code>paths</code>",
        "<code>shim</code>",
        "<code>require.config({\n  shim: {\n    underscore: {\n      exports: '_'\n    },\n    backbone: {\n      deps: [\"underscore\", \"jquery\"],\n      exports: \"Backbone\"\n    }\n  }\n});\n\n//the \"main\" function to bootstrap your code\nrequire(['jquery', 'underscore', 'backbone'], function ($, _, Backbone) {   // or, you could use these deps in a separate module using define\n\n});\n</code>",
        "<code>shim</code>",
        "<code>Sample RequireJS 2.0.1 + jQuery 1.7.2 project</code>",
        "<code>// main.js using RequireJS 1.0.7\nrequire.config({\n    paths: {\n        'jquery': 'libs/jquery/1.7.1/jquery',\n        'underscore': 'libs/underscore/1.3.1-amdjs/underscore', // AMD support\n        'backbone': 'libs/backbone/0.9.1-amdjs/backbone', // AMD support\n        'templates': '../templates'\n    }\n});\n\nrequire([\n    'domReady', // optional, using RequireJS domReady plugin\n    'app'\n], function(domReady, app){\n    domReady(function () {\n        app.initialize();\n    });\n});\n</code>",
        "<code>// app.js\ndefine([\n    'jquery', \n    'underscore',\n    'backbone'\n], function($, _, Backbone){\n    return {\n        initialize: function(){\n            // you can use $, _ or Backbone here\n        }\n    };\n});\n</code>",
        "<code>// app.js\ndefine(['jquery', 'backbone'], function($, Backbone){\n    return {\n        initialize: function(){\n            // you can use $ and Backbone here with\n            // dependencies loaded i.e. Underscore\n        }\n    };\n});\n</code>",
        "<code>define(function(require) {\n    var Backbone = require('backbone'),\n        $ = require('jquery');\n\n    return {\n        initialize: function(){\n            // you can use $ and Backbone here with\n            // dependencies loaded i.e. Underscore\n        }\n    };\n});\n</code>",
        "<code>// app.build.js\n({\n    appDir: \"../\",\n    baseUrl: \"js\",\n    dir: \"../../ui-build\",\n    paths: {\n        'jquery': 'libs/jquery/1.7.1/jquery',\n        'underscore': 'libs/underscore/1.3.1-amdjs/underscore',\n        'backbone': 'libs/backbone/0.9.1-amdjs/backbone',\n        'templates': '../templates'\n    }, \n    modules: [\n        {\n            name: \"main\"\n        }\n    ]\n})\n</code>",
        "<code>&lt;!-- build:js({app,.tmp}) scripts/main.js --&gt;\n&lt;script data-main=\"scripts/main\" src=\"bower_components/requirejs/require.js\"&gt;&lt;/script&gt;\n&lt;!-- endbuild --&gt;\n</code>",
        "<code>require.config({\n    shim: {\n        'backbone': {\n            deps: ['../bower_components/underscore/underscore.js', 'jquery'],\n            exports: 'Backbone'\n        }\n    },\n\n    paths: {\n        jquery: '../bower_components/jquery/jquery',\n        backbone: '../bower_components/backbone/backbone'\n    }\n});\n\nrequire(['views/app'], function(AppView){\n    new AppView();\n});\n</code>",
        "<code>/**\n * App View\n */\ndefine(['backbone', 'router'], function(Backbone, MainRouter) {\n    var AppView = Backbone.View.extend({\n        el: 'body',\n\n        initialize: function() {\n            App.Router = new MainRouter();\n            Backbone.history.start();\n        }\n    });\n\n    return AppView;\n});\n</code>",
        "<code>  requirejs.config({\n    paths: {\n        \"underscore\": \"PATH/underscore-1.6.0.min\",\n    }\n  });\n</code>",
        "<code>require.config({\n  waitSeconds: 500,\n  paths: {\n    jquery: \"libs/jquery/jquery\",\n    jqueryCookie: \"libs/jquery/jquery.cookie\",\n    .....\n  },\n\n  shim: {\n    jqxcore: {\n      export: \"$\",\n      deps: [\"jquery\"]\n    },\n    jqxbuttons: {\n      export: \"$\",\n      deps: [\"jquery\", \"jqxcore\"]\n    }\n    ............\n  }\n});\n\nrequire([\n &lt;i&gt; // Load our app module and pass it to our definition function&lt;/i&gt;\n  \"app\"\n], function(App) {\n  // The \"app\" dependency is passed in as \"App\"\n  // Again, the other dependencies passed in are not \"AMD\" therefore don't pass a parameter to this function\n  App.initialize();\n});\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "npm",
        "bower"
      ],
      "creation_date": 1378399999,
      "body_markdown": "What is the fundamental difference between `bower` and `npm`? Just want something plain and simple. I&#39;ve seen some of my colleagues use `bower` and `npm` interchangeably in their projects.",
      "last_edit_date": 1488479615,
      "up_vote_count": 1560,
      "link": "https://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1378454968,
          "answer_id": 18652918,
          "path": "stack.bower.answer",
          "score": 1777,
          "up_vote_count": 1779,
          "is_accepted": true,
          "last_activity_date": 1488238160,
          "last_edit_date": 1488238160,
          "body_markdown": "[npm](https://www.npmjs.org) is most commonly used for managing Node.js modules, but it works for the front-end too when combined with [Browserify](http://browserify.org/) and/or `$ npm dedupe`.\r\n\r\n[Bower](http://bower.io) is created solely for the front-end and is optimized with that in mind. The biggest difference is that npm does nested dependency tree *(size heavy)* while Bower requires a flat dependency tree *(puts the burden of dependency resolution on the user)*.\r\n\r\nA nested dependency tree means that your dependencies can have their own dependencies which can have their own, and so on. This is really great on the server where you don&#39;t have to care much about space and latency. It lets you not have to care about dependency conflicts as all your dependencies use e.g. their own version of Underscore. This obviously doesn&#39;t work that well on the front-end. Imagine a site having to download three copies of jQuery.\r\n\r\nThe reason many projects use both is that they use Bower for front-end packages and npm for developer tools like Yeoman, Grunt, Gulp, JSHint, CoffeeScript, etc.\r\n\r\nAll package managers have many downsides. You just have to pick which you can live with.\r\n\r\n---\r\n\r\n## Resources\r\n\r\n- [Nested Dependencies](http://maxogden.com/nested-dependencies.html) - Insight into why node_modules works the way it does"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1405803561,
          "answer_id": 24844920,
          "path": "stack.bower.answer",
          "score": 42,
          "up_vote_count": 47,
          "is_accepted": false,
          "last_activity_date": 1425465238,
          "last_edit_date": 1495540501,
          "body_markdown": "Bower maintains a single version of modules, it only tries to help you select the correct/best one for you.\r\n&gt; \r\nhttps://stackoverflow.com/questions/15092345/javascript-dependency-management-npm-vs-bower-vs-volo/22101165#22101165\r\n&gt; \r\n\r\nNPM is better for node modules because there is a module system and you&#39;re working locally.\r\nBower is good for the browser because currently there is only the global scope, and you want to be very selective about the version you work with."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1412294923,
          "answer_id": 26171511,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1412911605,
          "last_edit_date": 1412911605,
          "body_markdown": "Found this useful explanation from http://ng-learn.org/2013/11/Bower-vs-npm/\r\n\r\n&gt; On one hand npm was created to install modules used in a node.js environment, or development tools built using node.js such Karma, lint, minifiers and so on. npm can install modules locally in a project ( by default in node_modules ) or globally to be used by multiple projects. In large projects the way to specify dependencies is by creating a file called package.json which contains a list of dependencies. That list is recognized by npm when you run npm install, which then downloads and installs them for you.\r\n\r\n&gt; On the other hand bower was created to manage your frontend dependencies. Libraries like jQuery, AngularJS, underscore, etc. Similar to npm it has a file in which you can specify a list of dependencies called bower.json. In this case your frontend dependencies are installed by running bower install which by default installs them in a folder called bower_components.\r\n\r\n&gt; As you can see, although they perform a similar task they are targeted to a very different set of libraries."
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1413060149,
          "answer_id": 26319078,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1413062829,
          "last_edit_date": 1413062829,
          "body_markdown": "For many people working with node.js, a major benefit of bower is for managing dependencies that are not javascript at all. If they are working with languages that compile to javascript, npm can be used to manage some of their dependencies. however, not all their dependencies are going to be node.js modules. Some of those that compile to javascript may have weird source language specific mangling that makes passing them around compiled to javascript an inelegant option when users are expecting source code.\r\n\r\nNot everything in an npm package needs to be user-facing javascript, but for npm library packages, at least some of it should be."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1416834609,
          "answer_id": 27105655,
          "path": "stack.bower.answer",
          "score": 326,
          "up_vote_count": 328,
          "is_accepted": false,
          "last_activity_date": 1453111967,
          "last_edit_date": 1453111967,
          "body_markdown": "\r\nThis answer is an addition to the answer of Sindre Sorhus. The major difference between npm and Bower is the way they treat recursive dependencies. Note that they can be used together in a single project.\r\n\r\n**On the [npm FAQ][1]:** \r\n\r\n&gt; It is much harder to avoid dependency conflicts without nesting\r\n&gt; dependencies. This is fundamental to the way that npm works, and has\r\n&gt; proven to be an extremely successful approach.\r\n\r\n\r\n**On [Bower][2] homepage:**\r\n\r\n&gt; Bower is optimized for the front-end. Bower uses a flat dependency\r\n&gt; tree, requiring only one version for each package, reducing page load\r\n&gt; to a minimum.\r\n\r\nIn short, npm aims for stability. Bower aims for minimal resource load. If you draw out the dependency structure, you will see this:\r\n\r\nnpm:\r\n\r\n    project root\r\n    [node_modules] // default directory for dependencies\r\n     -&gt; dependency A\r\n     -&gt; dependency B\r\n        [node_modules]\r\n        -&gt; dependency A\r\n\r\n     -&gt; dependency C\r\n        [node_modules]\r\n        -&gt; dependency B\r\n          [node_modules]\r\n           -&gt; dependency A \r\n        -&gt; dependency D\r\n\r\nAs you can see it installs some dependencies recursively. Dependency A has three installed instances!\r\n\r\nBower:\r\n\r\n    project root\r\n    [bower_components] // default directory for dependencies\r\n     -&gt; dependency A\r\n     -&gt; dependency B // needs A\r\n     -&gt; dependency C // needs B and D\r\n     -&gt; dependency D\r\n\r\nHere you see that all unique dependencies are on the same level. \r\n\r\n**So, why bother using npm?**\r\n\r\nMaybe dependency B requires a different version of dependency A than dependency C. npm installs both versions of this dependency so it will work anyway, but Bower will give you a *conflict* because it does not like duplication (because loading the same resource on a webpage is very inefficient and costly, also it can give some serious errors). You will have to manually pick which version you want to install. This can have the effect that one of the dependencies will break, but that is something that you will need to fix anyway.\r\n\r\nSo, the common usage is Bower for the packages that you want to publish on your webpages (e.g. *runtime*, where you avoid duplication), and use npm for other stuff, like testing, building, optimizing, checking, etc. (e.g. *development time*, where duplication is of less concern).\r\n\r\n**Update for npm 3:**\r\n\r\nnpm 3 still does things differently compared to Bower. It will install the dependencies globally, but only for the first version it encounters.  The other versions are installed in the tree (the parent module, then node_modules).\r\n\r\n\r\n- [node_modules]\r\n  - dep A v1.0\r\n    - dep B v1.0\r\n      - &lt;del&gt;dep A v1.0&lt;/del&gt; (uses root version)\r\n    - dep C v1.0\r\n      - dep A v2.0 (this version is different from the root version, so it will be an nested installation)\r\n\r\nFor more information, I suggest reading the [docs of npm 3][3]\r\n\r\n\r\n  [1]: https://docs.npmjs.com/misc/faq#why-can-t-npm-just-put-everything-in-one-place-like-other-package-managers\r\n  [2]: http://bower.io/\r\n  [3]: https://docs.npmjs.com/how-npm-works/npm3-dupe"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1424120669,
          "answer_id": 28550313,
          "path": "stack.bower.answer",
          "score": 31,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1448078691,
          "last_edit_date": 1448078691,
          "body_markdown": "My team moved away from Bower and migrated to npm because:\r\n\r\n* Programmatic usage was painful\r\n* Bower&#39;s interface kept changing\r\n* Some features, like the url shorthand, are entirely broken\r\n* Using both Bower and npm in the same project is painful\r\n* Keeping bower.json version field in sync with git tags is painful\r\n* Source control != package management\r\n* CommonJS support is not straightforward\r\n\r\nFor more details, see [&quot;Why my team uses npm instead of bower&quot;](https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb)."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1436006932,
          "answer_id": 31219726,
          "path": "stack.bower.answer",
          "score": 103,
          "up_vote_count": 104,
          "is_accepted": false,
          "last_activity_date": 1510868448,
          "last_edit_date": 1510868448,
          "body_markdown": "## 2017-Oct update\r\n\r\nBower has finally been [deprecated](https://bower.io/blog/2017/how-to-migrate-away-from-bower/). End of story.\r\n\r\n## Older answer\r\n\r\n[From Mattias Petter Johansson, JavaScript developer at Spotify](https://www.quora.com/Why-use-Bower-when-there-is-npm/answer/Mattias-Petter-Johansson):\r\n\r\n&gt; In almost all cases, it&#39;s more appropriate to use Browserify and npm over Bower. It is simply a better packaging solution for front-end apps than Bower is. At Spotify, we use npm to package entire web modules (html, css, js) and it works very well.\r\n\r\n&gt; Bower brands itself as the package manager for the web. It would be awesome if this was true  - a package manager that made my life better as a front-end developer would be awesome. The problem is that Bower offers no specialized tooling for the purpose. It offers NO tooling that I know of that npm doesn&#39;t, and especially none that is specifically useful for front-end developers. **There is simply no benefit for a front-end developer to use Bower over npm.**\r\n\r\n&gt; We should stop using bower and consolidate around npm. Thankfully, that is what [is happening](http://www.modulecounts.com/):\r\n\r\n[![Module counts - bower vs. npm][1]][1]\r\n\r\n&gt; With browserify or webpack, it becomes super-easy to concatenate all your modules into big minified files, which is awesome for performance, especially for mobile devices. Not so with Bower, which will require significantly more labor to get the same effect.\r\n\r\n&gt; npm also offers you the ability to use multiple versions of modules simultaneously. If you have not done much application development, this might initially strike you as a bad thing, but once you&#39;ve gone through a few bouts of [Dependency hell](http://en.wikipedia.org/wiki/Dependency_hell) you will realize that having the ability to have multiple versions of one module is a pretty darn great feature. Note that npm includes a very handy [dedupe tool](https://docs.npmjs.com/cli/dedupe) that automatically makes sure that you only use two versions of a module if you actually *have* to - if two modules both *can* use the same version of one module, they will. But if they *can&#39;t*, you have a very handy out.\r\n\r\n(Note that [Webpack](https://www.reddit.com/r/javascript/comments/2is81v/why_is_not_systemjs_dominating_the_field_of/cla66t3) and [rollup](https://nolanlawson.com/2016/08/15/the-cost-of-small-modules/) are widely regarded to be better than Browserify as of Aug 2016.)\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/HLBsP.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437880350,
          "answer_id": 31633281,
          "path": "stack.bower.answer",
          "score": 248,
          "up_vote_count": 248,
          "is_accepted": false,
          "last_activity_date": 1494142768,
          "last_edit_date": 1494142768,
          "body_markdown": "**TL;DR: The biggest difference in everyday use isn&#39;t nested dependencies... it&#39;s the difference between modules and globals.**\r\n\r\nI think the previous posters have covered well some of the basic distinctions. (npm&#39;s use of nested dependencies is indeed very helpful in managing large, complex applications, though I don&#39;t think it&#39;s the most important distinction.)\r\n\r\nI&#39;m surprised, however, that nobody has explicitly explained one of the most fundamental distinctions between Bower and npm. If you read the answers above, you&#39;ll see the word &#39;modules&#39; used often in the context of npm. But it&#39;s mentioned casually, as if it might even just be a syntax difference. \r\n\r\nBut this distinction of **modules vs. globals** (or modules vs. &#39;scripts&#39;) is possibly the most important difference between Bower and npm. *The npm approach of putting everything in modules requires you to change the way you write Javascript for the browser, almost certainly for the better.*\r\n\r\n###The Bower Approach: Global Resources, Like `&lt;script&gt;` Tags\r\n\r\nAt root, Bower is about loading plain-old script files. Whatever those script files contain, Bower will load them. Which basically means that Bower is just like including all your scripts in plain-old `&lt;script&gt;`&#39;s in the `&lt;head&gt;` of your HTML. \r\n\r\nSo, same basic approach you&#39;re used to, but you get some nice automation conveniences: \r\n\r\n* You used to need to include JS dependencies in your project repo (while developing), or get them via CDN. Now, you can skip that extra download weight in the repo, and somebody can do a quick `bower install` and instantly have what they need, locally.\r\n* If a Bower dependency then specifies its own dependencies in its `bower.json`, those&#39;ll be downloaded for you as well.\r\n\r\nBut beyond that, *Bower doesn&#39;t change how we write javascript*. Nothing about what goes inside the files loaded by Bower needs to change at all. In particular, this means that the resources provided in scripts loaded by Bower will (usually, but not always) still be defined as _global variables_, available from anywhere in the browser execution context.\r\n\r\n###The npm Approach: Common JS Modules, Explicit Dependency Injection\r\n\r\nAll code in Node land (and thus all code loaded via npm) is structured as modules (specifically, as an implementation of the [CommonJS module format](http://wiki.commonjs.org/wiki/Modules), or now, as an ES6 module). So, if you use NPM to handle browser-side dependencies (via Browserify or something else that does the same job), you&#39;ll structure your code the same way Node does.\r\n\r\nSmarter people than I have tackled the question of &#39;Why modules?&#39;, but here&#39;s a capsule summary:\r\n\r\n* Anything inside a module is effectively _namespaced_, meaning it&#39;s not a global variable any more, and you can&#39;t accidentally reference it without intending to.\r\n* Anything inside a module must be intentionally injected into a particular context (usually another module) in order to make use of it\r\n* This means you can have multiple versions of the same external dependency (lodash, let&#39;s say) in various parts of your application, and they won&#39;t collide/conflict. (This happens surprisingly often, because your own code wants to use one version of a dependency, but one of your external dependencies specifies another that conflicts. Or you&#39;ve got two external dependencies that each want a different version.)\r\n* Because all dependencies are manually injected into a particular module, it&#39;s very easy to reason about them. You know for a fact: _&quot;The only code I need to consider when working on this is what I have intentionally chosen to inject here&quot;_.\r\n* Because even the content of injected modules is _encapsulated_ behind the variable you assign it to, and all code executes inside a limited scope, surprises and collisions become very improbable. It&#39;s much, much less likely that something from one of your dependencies will accidentally redefine a global variable without you realizing it, or that you will do so. (It _can_ happen, but you usually have to go out of your way to do it, with something like `window.variable`. The one accident that still tends to occur is assigning `this.variable`, not realizing that `this` is actually `window` in the current context.)\r\n* When you want to test an individual module, you&#39;re able to very easily know: exactly what else (dependencies) is affecting the code that runs inside the module? And, because you&#39;re explicitly injecting everything, you can easily mock those dependencies.\r\n\r\nTo me, the use of modules for front-end code boils down to: working in a much narrower context that&#39;s easier to reason about and test, and having greater certainty about what&#39;s going on. \r\n\r\n----------\r\n\r\nIt only takes about 30 seconds to learn how to use the CommonJS/Node module syntax. Inside a given JS file, which is going to be a module, you first declare any outside dependencies you want to use, like this:\r\n\r\n```var React = require(&#39;react&#39;);```\r\n\r\nInside the file/module, you do whatever you normally would, and create some object or function that you&#39;ll want to expose to outside users, calling it perhaps `myModule`. \r\n\r\nAt the end of a file, you export whatever you want to share with the world, like this:\r\n\r\n```module.exports = myModule;```\r\n\r\nThen, to use a CommonJS-based workflow in the browser, you&#39;ll use tools like Browserify to grab all those individual module files, encapsulate their contents at runtime, and inject them into each other as needed. \r\n\r\nAND, since ES6 modules (which you&#39;ll likely transpile to ES5 with Babel or similar) are gaining wide acceptance, and work both in the browser or in Node 4.0, we should mention a [good overview][1] of those as well. \r\n\r\nMore about patterns for working with modules in [this deck](http://darrenderidder.github.io/talks/ModulePatterns/).\r\n\r\n--------\r\nEDIT (Feb 2017): Facebook&#39;s [Yarn][2] is a very important potential replacement/supplement for npm these days: fast, deterministic, offline package-management that builds on what npm gives you. It&#39;s worth a look for any JS project, particularly since it&#39;s so easy to swap it in/out.\r\n\r\n\r\n  [1]: https://24ways.org/2014/javascript-modules-the-es6-way/\r\n  [2]: http://yarnpkg.com"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1515317195,
          "answer_id": 48135879,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1515317195,
          "body_markdown": "Bower and Npm are package managers for javascript.\r\n\r\n**Bower**\r\n\r\nBower is created solely for the front-end development. It uses flat dependency tree, requiring only one version for each package, reducing the page load. It mainly aims for minimal resource load. It has less contributors and so development process is slow.\r\n\r\nBower has a configuration file called bower.json. In this file we can maintain the configuration for Bower like which dependencies we need and license details, description, name and so on. Bower is suitable for front-end packages like jquery, angular, react, ember, knockout, backbone and so on.\r\n\r\n**Npm**\r\n\r\nNpm is most commonly used for managing Node.js modules, but it works for the front-end too. It uses nested dependency tree as well as flat dependency tree. It is popular and has a lot of contributors. So its new version always comes up with exciting features.\r\n\r\nNpm has a configuration file called package.json. In this file we can maintain the configuration for Npm like which dependencies we need and license details, description, name and so on. Npm provides Dependencies and DevDependencies. Dependencies will download and maintain the front-end files like Jquery, Angular and so on. DevDependencies will download and maintain development tools like Grunt, Gulp, JSHint and so on.\r\n\r\nThis obviously doesn&#39;t work that well on the front-end, because we need jQuery in our projects. We need only one copy of jQuery, but when another package requires jQuery, then it will download again one more copy of jQuery. This is one of the main drawbacks of Npm.\r\n\r\n*Key Note :* The reason many projects use both is that they use Bower for front-end packages and Npm for developer tools. Multiplying package manager in your project make your workflow harder. Npm 3 coupled with [browserify][1] or [webpack][2] is the way to go now.\r\n\r\n\r\n  [1]: http://browserify.org/\r\n  [2]: https://webpack.github.io/"
        }
      ],
      "title": "What is the difference between Bower and npm?",
      "view_count": 279800,
      "answer_count": 9,
      "code_snippet": [
        "<code>bower</code>",
        "<code>npm</code>",
        "<code>bower</code>",
        "<code>npm</code>",
        "<code>$ npm dedupe</code>",
        "<code>project root\n[node_modules] // default directory for dependencies\n -&gt; dependency A\n -&gt; dependency B\n    [node_modules]\n    -&gt; dependency A\n\n -&gt; dependency C\n    [node_modules]\n    -&gt; dependency B\n      [node_modules]\n       -&gt; dependency A \n    -&gt; dependency D\n</code>",
        "<code>project root\n[bower_components] // default directory for dependencies\n -&gt; dependency A\n -&gt; dependency B // needs A\n -&gt; dependency C // needs B and D\n -&gt; dependency D\n</code>",
        "<code>npm</code>",
        "<code>bower</code>",
        "<code>&lt;script&gt;</code>",
        "<code>&lt;script&gt;</code>",
        "<code>&lt;head&gt;</code>",
        "<code>bower install</code>",
        "<code>bower.json</code>",
        "<code>window.variable</code>",
        "<code>this.variable</code>",
        "<code>this</code>",
        "<code>window</code>",
        "<code>var React = require('react');</code>",
        "<code>myModule</code>",
        "<code>module.exports = myModule;</code>",
        "<code>npm dedupe</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "html",
        "iframe",
        "height",
        "scrollbar"
      ],
      "creation_date": 1333367138,
      "body_markdown": "For example:\r\n\r\n    &lt;iframe name=&quot;Stack&quot; src=&quot;http://stackoverflow.com/&quot; width=&quot;740&quot;\r\n            frameborder=&quot;0&quot; scrolling=&quot;no&quot; id=&quot;iframe&quot;&gt; ...\r\n    &lt;/iframe&gt;\r\n\r\n\r\nI want it to be able to adjust its height according to the contents inside it, without using scroll.",
      "last_edit_date": 1362770460,
      "up_vote_count": 358,
      "link": "https://stackoverflow.com/questions/9975810/make-iframe-automatically-adjust-height-according-to-the-contents-without-using",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 18,
          "creation_date": 1333369222,
          "answer_id": 9976309,
          "path": "stack.bower.answer",
          "score": 476,
          "up_vote_count": 494,
          "is_accepted": true,
          "last_activity_date": 1515575488,
          "last_edit_date": 1515575488,
          "body_markdown": "Add this to your `&lt;head&gt;` section:\r\n\r\n    &lt;script&gt;\r\n      function resizeIframe(obj) {\r\n        obj.style.height = obj.contentWindow.document.body.scrollHeight + &#39;px&#39;;\r\n      }\r\n    &lt;/script&gt;\r\n\r\nAnd change your iframe to this:\r\n\r\n    &lt;iframe src=&quot;...&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; onload=&quot;resizeIframe(this)&quot; /&gt;\r\n\r\nAs found on [sitepoint discussion][1].\r\n\r\n  [1]: https://www.sitepoint.com/community/t/auto-height-iframe-content-script/67843"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1387650649,
          "answer_id": 20722176,
          "path": "stack.bower.answer",
          "score": 33,
          "up_vote_count": 34,
          "is_accepted": false,
          "last_activity_date": 1448818012,
          "last_edit_date": 1448818012,
          "body_markdown": "The suggestion by *hjpotter92* does not work in safari!\r\nI have made a small adjustment to the script so it now works in Safari as well.\r\n\r\nOnly change made is resetting height to 0 on every load in order to enable some browsers to decrease height.\r\n\r\nAdd this to `&lt;head&gt;` tag:\r\n\r\n\r\n         \r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n      function resizeIframe(obj){\r\n         obj.style.height = 0;\r\n         obj.style.height = obj.contentWindow.document.body.scrollHeight + &#39;px&#39;;\r\n      }\r\n    &lt;/script&gt;\r\n\r\nAnd add the following `onload` attribute to your iframe, like so\r\n\r\n    &lt;iframe onload=&#39;resizeIframe(this)&#39;&gt;&lt;/iframe&gt;\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1389815385,
          "answer_id": 21146867,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1423499425,
          "last_edit_date": 1423499425,
          "body_markdown": "    function autoResize(id){\r\n        var newheight;\r\n        var newwidth;\r\n    \r\n        if(document.getElementById){\r\n            newheight=document.getElementById(id).contentWindow.document.body.scrollHeight;\r\n            newwidth=document.getElementById(id).contentWindow.document.body.scrollWidth;\r\n        }\r\n                \r\n        document.getElementById(id).height=(newheight) + &quot;px&quot;;\r\n        document.getElementById(id).width=(newwidth) + &quot;px&quot;; \r\n    }\r\n\r\nadd this to your iframe: \r\nonload=&quot;autoResize(&#39;youriframeid&#39;)&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1391374356,
          "answer_id": 21516085,
          "path": "stack.bower.answer",
          "score": 61,
          "up_vote_count": 61,
          "is_accepted": false,
          "last_activity_date": 1428265477,
          "last_edit_date": 1428265477,
          "body_markdown": "You can use this library, which both initially sizes your iframe correctly and also keeps it at the right size by detecting whenever the size of the iframe&#39;s content changes (either via regular checking in a `setInterval` or via `MutationObserver`) and resizing it.\r\n\r\n**https://github.com/davidjbradshaw/iframe-resizer**\r\n\r\nThis works with both cross and same domain iframes."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1393338548,
          "answer_id": 22017144,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1393338548,
          "body_markdown": "I&#39;ve had problems in the past calling iframe.onload for dynamically created iframes, so I went with this approach for setting the iframe size:\r\n\r\niFrame View\r\n\r\n    var height = $(&quot;body&quot;).outerHeight();\r\n    parent.SetIFrameHeight(height);\r\n\r\nMain View\r\n\r\n    SetIFrameHeight = function(height) {\r\n    \t$(&quot;#iFrameWrapper&quot;).height(height);\r\n    }\r\n\r\n(this is only going to work if both views are in the same domain)"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1412521156,
          "answer_id": 26203828,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1484755405,
          "last_edit_date": 1484755405,
          "body_markdown": "    &lt;script type=&quot;text/javascript&quot;&gt;\r\n      function resizeIframe(obj) {\r\n        obj.style.height = 0;\r\n        obj.style.height = obj.contentWindow.document.body.scrollHeight + &#39;px&#39;;\r\n      }\r\n    &lt;/script&gt;\r\n\r\n**this is not working for chrome. But working for firefox.**"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1415134525,
          "answer_id": 26744848,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1428275216,
          "last_edit_date": 1428275216,
          "body_markdown": "I did it with AngularJS. Angular doesn&#39;t have an ng-load, but a 3rd party module was made; install with bower below, or find it here: https://github.com/andrefarzat/ng-load\r\n\r\nGet the ngLoad directive: `bower install ng-load --save`\r\n\r\nSetup your iframe:\r\n\r\n    &lt;iframe id=&quot;CreditReportFrame&quot; src=&quot;about:blank&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; ng-load=&quot;resizeIframe($event)&quot; seamless&gt;&lt;/iframe&gt;\r\n\r\n\r\n\r\nController resizeIframe function:\r\n\r\n    $scope.resizeIframe = function (event) {\r\n        console.log(&quot;iframe loaded!&quot;);\r\n        var iframe = event.target;\r\n        iframe.style.height = iframe.contentWindow.document.body.scrollHeight + &#39;px&#39;;\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1421769241,
          "answer_id": 28049657,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1472048559,
          "last_edit_date": 1472048559,
          "body_markdown": "jQuery&#39;s **.contents()** method method allows us to search through the immediate children of the element in the DOM tree.\r\n\r\njQuery:\r\n\r\n    $(&#39;iframe&#39;).height( $(&#39;iframe&#39;).contents().outerHeight() );\r\n\r\n\r\nRemember that the body of the page inner the iframe must have its height\r\n\r\nCSS:\r\n\r\n    body {\r\n      height: auto;\r\n      overflow: auto\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430729531,
          "answer_id": 30026111,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1430729531,
          "body_markdown": "    jq2(&#39;#stocks_iframe&#39;).load(function(){\r\n    var iframe_width = jq2(&#39;#stocks_iframe&#39;).contents().outerHeight() ; \r\n    jq2(&#39;#stocks_iframe&#39;).css(&#39;height&#39;,iframe_width); });\r\n\r\n    &lt;iframe id=&#39;stocks_iframe&#39; style=&#39;width:100%;height:0px;&#39; frameborder=&#39;0&#39;&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 22,
          "creation_date": 1431684887,
          "answer_id": 30256919,
          "path": "stack.bower.answer",
          "score": -3,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1431684887,
          "body_markdown": "This option will work 100%\r\n\r\n    &lt;iframe id=&#39;iframe2&#39; src=&quot;url.com&quot; frameborder=&quot;0&quot; style=&quot;overflow: hidden; height: 100%; width: 100%; position: absolute;&quot; height=&quot;100%&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431845828,
          "answer_id": 30284228,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1431845828,
          "body_markdown": "This works for me (also with multiple iframes on one page):\r\n\r\n    $(&#39;iframe&#39;).load(function(){$(this).height($(this).contents().outerHeight());});"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1436007693,
          "answer_id": 31219827,
          "path": "stack.bower.answer",
          "score": 11,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1436011345,
          "last_edit_date": 1436011345,
          "body_markdown": "The *hjpotter92* answer works well enough in certain cases, but I found the iframe content often got bottom-clipped in Firefox &amp; IE, while fine in Chrome.\r\n\r\nThe following works well for me and fixes the clipping problem. The code was found at http://www.dyn-web.com/tutorials/iframes/height/. I have made a slight modification to take the onload attribute out of the HTML. Place the following code after the `&lt;iframe&gt;` HTML and before the closing `&lt;/body&gt;` tag:\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n    function getDocHeight(doc) {\r\n        doc = doc || document;\r\n        // stackoverflow.com/questions/1145850/\r\n        var body = doc.body, html = doc.documentElement;\r\n        var height = Math.max( body.scrollHeight, body.offsetHeight, \r\n            html.clientHeight, html.scrollHeight, html.offsetHeight );\r\n        return height;\r\n    }\r\n\r\n    function setIframeHeight(id) {\r\n        var ifrm = document.getElementById(id);\r\n        var doc = ifrm.contentDocument? ifrm.contentDocument: \r\n            ifrm.contentWindow.document;\r\n        ifrm.style.visibility = &#39;hidden&#39;;\r\n        ifrm.style.height = &quot;10px&quot;; // reset to minimal height ...\r\n        // IE opt. for bing/msn needs a bit added or scrollbar appears\r\n        ifrm.style.height = getDocHeight( doc ) + 4 + &quot;px&quot;;\r\n        ifrm.style.visibility = &#39;visible&#39;;\r\n    }\r\n\r\n    document.getElementById(&#39;ifrm&#39;).onload = function() { // Adjust the Id accordingly\r\n\t    setIframeHeight(this.id);\r\n    }\r\n    &lt;/script&gt;\r\n\r\nYour iframe HTML:\r\n\r\n    &lt;iframe id=&quot;ifrm&quot; src=&quot;some-iframe-content.html&quot;&gt;&lt;/iframe&gt;\r\n\r\nNote if you prefer to include the Javascript in the `&lt;head&gt;` of the document then you can revert to using an inline `onload` attribute in the `iframe` HTML, as in the *dyn-web* web page."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1440295295,
          "answer_id": 32162488,
          "path": "stack.bower.answer",
          "score": 31,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1440366339,
          "last_edit_date": 1440366339,
          "body_markdown": "Here is a compact version:\r\n\r\n    &lt;iframe src=&quot;hello.html&quot;\r\n            onload=&quot;this.style.height=this.contentDocument.body.scrollHeight +&#39;px&#39;;&quot;&gt;\r\n    &lt;/iframe&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1443189251,
          "answer_id": 32783796,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1499723799,
          "last_edit_date": 1499723799,
          "body_markdown": "I wanted to make an `iframe` behave like a normal page (I needed to make a fullscreen banner inside an `iframe` element), so here is my script:\r\n\r\n        (function (window, undefined) {\r\n    \r\n        var frame,\r\n            lastKnownFrameHeight = 0,\r\n            maxFrameLoadedTries = 5,\r\n            maxResizeCheckTries = 20;\r\n    \r\n        //Resize iframe on window resize\r\n        addEvent(window, &#39;resize&#39;, resizeFrame);\r\n    \r\n        var iframeCheckInterval = window.setInterval(function () {\r\n            maxFrameLoadedTries--;\r\n            var frames = document.getElementsByTagName(&#39;iframe&#39;);\r\n            if (maxFrameLoadedTries == 0 || frames.length) {\r\n                clearInterval(iframeCheckInterval);\r\n                frame = frames[0];\r\n                addEvent(frame, &#39;load&#39;, resizeFrame);\r\n                var resizeCheckInterval = setInterval(function () {\r\n                    resizeFrame();\r\n                    maxResizeCheckTries--;\r\n                    if (maxResizeCheckTries == 0) {\r\n                        clearInterval(resizeCheckInterval);\r\n                    }\r\n                }, 1000);\r\n                resizeFrame();\r\n            }\r\n        }, 500);\r\n    \r\n        function resizeFrame() {\r\n            if (frame) {\r\n                var frameHeight = frame.contentWindow.document.body.scrollHeight;\r\n                if (frameHeight !== lastKnownFrameHeight) {\r\n                    lastKnownFrameHeight = frameHeight;\r\n    \r\n                    var viewportWidth = document.documentElement.clientWidth;\r\n                    if (document.compatMode &amp;&amp; document.compatMode === &#39;BackCompat&#39;) {\r\n                        viewportWidth = document.body.clientWidth;\r\n                    }\r\n    \r\n                    frame.setAttribute(&#39;width&#39;, viewportWidth);\r\n                    frame.setAttribute(&#39;height&#39;, lastKnownFrameHeight);\r\n    \r\n                    frame.style.width = viewportWidth + &#39;px&#39;;\r\n                    frame.style.height = frameHeight + &#39;px&#39;;\r\n                }\r\n            }\r\n        }\r\n    \r\n        //--------------------------------------------------------------\r\n        //  Cross-browser helpers\r\n        //--------------------------------------------------------------\r\n    \r\n        function addEvent(elem, event, fn) {\r\n            if (elem.addEventListener) {\r\n                elem.addEventListener(event, fn, false);\r\n            } else {\r\n                elem.attachEvent(&quot;on&quot; + event, function () {\r\n                    return (fn.call(elem, window.event));\r\n                });\r\n            }\r\n        }\r\n    \r\n    })(window);\r\n\r\n\r\nThe functions are self-explanatory and have comments to further explain their purpose."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1448818544,
          "answer_id": 33985798,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1448818544,
          "body_markdown": "Avoid inline JavaScript; you can use a class:\r\n\r\n    &lt;iframe src=&quot;...&quot; frameborder=&quot;0&quot; scrolling=&quot;auto&quot; class=&quot;iframe-full-height&quot;&gt;&lt;/iframe&gt;\r\n\r\nAnd reference it with jQuery:\r\n\r\n    $(&#39;.iframe-full-height&#39;).on(&#39;load&#39;, function(){\r\n    \tthis.style.height=this.contentDocument.body.scrollHeight +&#39;px&#39;;\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1449698967,
          "answer_id": 34189932,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1449698967,
          "body_markdown": "  Try this for IE11\r\n\r\n    &lt;iframe name=&quot;Stack&quot; src=&quot;http://stackoverflow.com/&quot; style=&#39;height: 100%; width: 100%;&#39; frameborder=&quot;0&quot; scrolling=&quot;no&quot; id=&quot;iframe&quot;&gt;...&lt;/iframe&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1451839873,
          "answer_id": 34579047,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1451840567,
          "last_edit_date": 1451840567,
          "body_markdown": "This works for me (mostly).\r\n\r\nPut this at the bottom of your page.\r\n\r\n    &lt;script type=&quot;application/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;\r\n    &lt;/script&gt;\r\n    \r\n    &lt;script type=&quot;application/javascript&quot; src=&quot;/script/jquery.browser.js&quot;&gt;\r\n    &lt;/script&gt;\r\n    \r\n    &lt;script type=&quot;application/javascript&quot; src=&quot;/script/jquery-iframe-auto-height.js&quot;&gt;\r\n    &lt;/script&gt;\r\n    \r\n    &lt;script type=&quot;application/javascript&quot;&gt; \r\n      jQuery(&#39;iframe&#39;).iframeAutoHeight();\r\n      $(window).load(\r\n          function() {\r\n    \t      jQuery(&#39;iframe&#39;).iframeAutoHeight();  \r\n          }\r\n      );\r\n    \r\n      // for when content is not html e.g. a PDF\r\n      function setIframeHeight() {\r\n          $(&#39;.iframe_fullHeight&#39;).each(\r\n    \t      function (i, item) {\r\n    \t          item.height = $(document).height();\r\n    \t      }\r\n          );\r\n      };\r\n      \r\n      $(document).ready( function () {\r\n          setIframeHeight();\r\n      });\r\n      $(window).resize( function () {\r\n          setIframeHeight();\r\n      });\r\n    &lt;/script&gt; \r\n\r\nThe first half is from ???, and works when there is html in the iframe.\r\nThe second half sets the iframe to page height (not content height), when iframes class is `iframe_fullHeight`. You can use this if the content is a PDF or other such like, but you have to set the class. Also can only be used when being full height is appropriate.\r\n\r\nNote: for some reason, when it recalculates after window resize, it gets height wrong."
        }
      ],
      "title": "Make iframe automatically adjust height according to the contents without using scrollbar?",
      "view_count": 760839,
      "answer_count": 17,
      "code_snippet": [
        "<code>&lt;iframe name=\"Stack\" src=\"http://stackoverflow.com/\" width=\"740\"\n        frameborder=\"0\" scrolling=\"no\" id=\"iframe\"&gt; ...\n&lt;/iframe&gt;\n</code>",
        "<code>&lt;head&gt;</code>",
        "<code>&lt;script&gt;\n  function resizeIframe(obj) {\n    obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';\n  }\n&lt;/script&gt;\n</code>",
        "<code>&lt;iframe src=\"...\" frameborder=\"0\" scrolling=\"no\" onload=\"resizeIframe(this)\" /&gt;\n</code>",
        "<code>onload=\"resizeIframe(this);\"</code>",
        "<code>scrolling</code>",
        "<code>auto</code>",
        "<code>setInterval</code>",
        "<code>MutationObserver</code>",
        "<code>&lt;head&gt;</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\n  function resizeIframe(obj){\n     obj.style.height = 0;\n     obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';\n  }\n&lt;/script&gt;\n</code>",
        "<code>onload</code>",
        "<code>&lt;iframe onload='resizeIframe(this)'&gt;&lt;/iframe&gt;\n</code>",
        "<code>{}</code>",
        "<code>obj.style.height = 0;</code>",
        "<code>&lt;iframe src=\"hello.html\"\n        onload=\"this.style.height=this.contentDocument.body.scrollHeight +'px';\"&gt;\n&lt;/iframe&gt;\n</code>",
        "<code>this.style.height=(this.contentDocument.body.scrollHeight + 15) + 'px';</code>",
        "<code>&lt;iframe&gt;</code>",
        "<code>&lt;/body&gt;</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\nfunction getDocHeight(doc) {\n    doc = doc || document;\n    // stackoverflow.com/questions/1145850/\n    var body = doc.body, html = doc.documentElement;\n    var height = Math.max( body.scrollHeight, body.offsetHeight, \n        html.clientHeight, html.scrollHeight, html.offsetHeight );\n    return height;\n}\n\nfunction setIframeHeight(id) {\n    var ifrm = document.getElementById(id);\n    var doc = ifrm.contentDocument? ifrm.contentDocument: \n        ifrm.contentWindow.document;\n    ifrm.style.visibility = 'hidden';\n    ifrm.style.height = \"10px\"; // reset to minimal height ...\n    // IE opt. for bing/msn needs a bit added or scrollbar appears\n    ifrm.style.height = getDocHeight( doc ) + 4 + \"px\";\n    ifrm.style.visibility = 'visible';\n}\n\ndocument.getElementById('ifrm').onload = function() { // Adjust the Id accordingly\n    setIframeHeight(this.id);\n}\n&lt;/script&gt;\n</code>",
        "<code>&lt;iframe id=\"ifrm\" src=\"some-iframe-content.html\"&gt;&lt;/iframe&gt;\n</code>",
        "<code>&lt;head&gt;</code>",
        "<code>onload</code>",
        "<code>iframe</code>",
        "<code>&lt;iframe src=\"...\" frameborder=\"0\" scrolling=\"auto\" class=\"iframe-full-height\"&gt;&lt;/iframe&gt;\n</code>",
        "<code>$('.iframe-full-height').on('load', function(){\n    this.style.height=this.contentDocument.body.scrollHeight +'px';\n});\n</code>",
        "<code>$('iframe').height( $('iframe').contents().outerHeight() );\n</code>",
        "<code>body {\n  height: auto;\n  overflow: auto\n}\n</code>",
        "<code>'body'</code>",
        "<code>contents()</code>",
        "<code>$('iframe').load(function(){$(this).height($(this).contents().outerHeight());});\n</code>",
        "<code>&lt;script type=\"application/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"&gt;\n&lt;/script&gt;\n\n&lt;script type=\"application/javascript\" src=\"/script/jquery.browser.js\"&gt;\n&lt;/script&gt;\n\n&lt;script type=\"application/javascript\" src=\"/script/jquery-iframe-auto-height.js\"&gt;\n&lt;/script&gt;\n\n&lt;script type=\"application/javascript\"&gt; \n  jQuery('iframe').iframeAutoHeight();\n  $(window).load(\n      function() {\n          jQuery('iframe').iframeAutoHeight();  \n      }\n  );\n\n  // for when content is not html e.g. a PDF\n  function setIframeHeight() {\n      $('.iframe_fullHeight').each(\n          function (i, item) {\n              item.height = $(document).height();\n          }\n      );\n  };\n\n  $(document).ready( function () {\n      setIframeHeight();\n  });\n  $(window).resize( function () {\n      setIframeHeight();\n  });\n&lt;/script&gt; \n</code>",
        "<code>iframe_fullHeight</code>",
        "<code>function autoResize(id){\n    var newheight;\n    var newwidth;\n\n    if(document.getElementById){\n        newheight=document.getElementById(id).contentWindow.document.body.scrollHeight;\n        newwidth=document.getElementById(id).contentWindow.document.body.scrollWidth;\n    }\n\n    document.getElementById(id).height=(newheight) + \"px\";\n    document.getElementById(id).width=(newwidth) + \"px\"; \n}\n</code>",
        "<code>jq2('#stocks_iframe').load(function(){\nvar iframe_width = jq2('#stocks_iframe').contents().outerHeight() ; \njq2('#stocks_iframe').css('height',iframe_width); });\n\n&lt;iframe id='stocks_iframe' style='width:100%;height:0px;' frameborder='0'&gt;\n</code>",
        "<code>var height = $(\"body\").outerHeight();\nparent.SetIFrameHeight(height);\n</code>",
        "<code>SetIFrameHeight = function(height) {\n    $(\"#iFrameWrapper\").height(height);\n}\n</code>",
        "<code>bower install ng-load --save</code>",
        "<code>&lt;iframe id=\"CreditReportFrame\" src=\"about:blank\" frameborder=\"0\" scrolling=\"no\" ng-load=\"resizeIframe($event)\" seamless&gt;&lt;/iframe&gt;\n</code>",
        "<code>$scope.resizeIframe = function (event) {\n    console.log(\"iframe loaded!\");\n    var iframe = event.target;\n    iframe.style.height = iframe.contentWindow.document.body.scrollHeight + 'px';\n};\n</code>",
        "<code>&lt;iframe name=\"Stack\" src=\"http://stackoverflow.com/\" style='height: 100%; width: 100%;' frameborder=\"0\" scrolling=\"no\" id=\"iframe\"&gt;...&lt;/iframe&gt;\n</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\n  function resizeIframe(obj) {\n    obj.style.height = 0;\n    obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';\n  }\n&lt;/script&gt;\n</code>",
        "<code>iframe</code>",
        "<code>iframe</code>",
        "<code>    (function (window, undefined) {\n\n    var frame,\n        lastKnownFrameHeight = 0,\n        maxFrameLoadedTries = 5,\n        maxResizeCheckTries = 20;\n\n    //Resize iframe on window resize\n    addEvent(window, 'resize', resizeFrame);\n\n    var iframeCheckInterval = window.setInterval(function () {\n        maxFrameLoadedTries--;\n        var frames = document.getElementsByTagName('iframe');\n        if (maxFrameLoadedTries == 0 || frames.length) {\n            clearInterval(iframeCheckInterval);\n            frame = frames[0];\n            addEvent(frame, 'load', resizeFrame);\n            var resizeCheckInterval = setInterval(function () {\n                resizeFrame();\n                maxResizeCheckTries--;\n                if (maxResizeCheckTries == 0) {\n                    clearInterval(resizeCheckInterval);\n                }\n            }, 1000);\n            resizeFrame();\n        }\n    }, 500);\n\n    function resizeFrame() {\n        if (frame) {\n            var frameHeight = frame.contentWindow.document.body.scrollHeight;\n            if (frameHeight !== lastKnownFrameHeight) {\n                lastKnownFrameHeight = frameHeight;\n\n                var viewportWidth = document.documentElement.clientWidth;\n                if (document.compatMode &amp;&amp; document.compatMode === 'BackCompat') {\n                    viewportWidth = document.body.clientWidth;\n                }\n\n                frame.setAttribute('width', viewportWidth);\n                frame.setAttribute('height', lastKnownFrameHeight);\n\n                frame.style.width = viewportWidth + 'px';\n                frame.style.height = frameHeight + 'px';\n            }\n        }\n    }\n\n    //--------------------------------------------------------------\n    //  Cross-browser helpers\n    //--------------------------------------------------------------\n\n    function addEvent(elem, event, fn) {\n        if (elem.addEventListener) {\n            elem.addEventListener(event, fn, false);\n        } else {\n            elem.attachEvent(\"on\" + event, function () {\n                return (fn.call(elem, window.event));\n            });\n        }\n    }\n\n})(window);\n</code>",
        "<code>setTimeout</code>",
        "<code>&lt;iframe id='iframe2' src=\"url.com\" frameborder=\"0\" style=\"overflow: hidden; height: 100%; width: 100%; position: absolute;\" height=\"100%\" width=\"100%\"&gt;&lt;/iframe&gt;\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "npm",
        "uninstall"
      ],
      "creation_date": 1390943753,
      "body_markdown": "Is there a way to simply uninstall all unused(undeclared) dependencies from a Node.js project (ones that are no longer defined in my `package.json`.) When I update my application I like to have the unreferenced packages removed automatically.\r\n\r\n",
      "last_edit_date": 1458736903,
      "up_vote_count": 283,
      "link": "https://stackoverflow.com/questions/21417014/npm-command-to-uninstall-unused-packages-in-node-js",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 7,
          "creation_date": 1390943990,
          "answer_id": 21417089,
          "path": "stack.bower.answer",
          "score": 179,
          "up_vote_count": 186,
          "is_accepted": false,
          "last_activity_date": 1390943990,
          "body_markdown": "If you&#39;re not worried about a couple minutes time to do so, a solution would be to `rm -rf node_modules` and `npm install` again to rebuild the local modules."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1390944027,
          "answer_id": 21417098,
          "path": "stack.bower.answer",
          "score": 513,
          "up_vote_count": 514,
          "is_accepted": true,
          "last_activity_date": 1449655342,
          "last_edit_date": 1449655342,
          "body_markdown": "Run [`npm prune`][1] to unbuild modules not listed in `package.json`.\r\n\r\nFrom `npm help prune`:\r\n\r\n&gt;This command removes &quot;extraneous&quot; packages.  If a package name is provided, then only packages matching one of the supplied names are removed.\r\n\r\n&gt;Extraneous packages are packages that are not listed on the parent package&#39;s dependencies list.\r\n\r\n&gt;If the `--production` flag is specified, this command will remove the packages specified in your devDependencies.\r\n\r\n\r\n  [1]: https://docs.npmjs.com/cli/prune"
        }
      ],
      "title": "npm command to uninstall unused packages in Node.js",
      "view_count": 91718,
      "answer_count": 2,
      "code_snippet": [
        "<code>package.json</code>",
        "<code>node_modules</code>",
        "<code>package.json</code>",
        "<code>npm prune</code>",
        "<code>package.json</code>",
        "<code>npm help prune</code>",
        "<code>--production</code>",
        "<code>package.json</code>",
        "<code>node_modules</code>",
        "<code>package.json</code>",
        "<code>npm prune</code>",
        "<code>node_modules</code>",
        "<code>package.json</code>",
        "<code>node_modules</code>",
        "<code>node_modules/bower/node_modules</code>",
        "<code>node_modules/bower/package.json</code>",
        "<code>rm -rf node_modules</code>",
        "<code>npm install</code>",
        "<code>node_modules</code>",
        "<code>package.json</code>",
        "<code>node_modules</code>",
        "<code>npm prune</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "node.js",
        "directory-listing"
      ],
      "creation_date": 1272435016,
      "body_markdown": "I&#39;m trying to get a list of the names of all the files present in a directory using Node.js.  I want output that is an array of filenames. How can I do this?",
      "last_edit_date": 1486130803,
      "up_vote_count": 548,
      "link": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1272435323,
          "answer_id": 2727191,
          "path": "stack.gulp.answer",
          "score": 687,
          "up_vote_count": 689,
          "is_accepted": true,
          "last_activity_date": 1494638551,
          "last_edit_date": 1494638551,
          "body_markdown": "You can use the [`fs.readdir`][1] or [`fs.readdirSync`][2] methods.\r\n\r\n**fs.readdir**\r\n\r\n    const testFolder = &#39;./tests/&#39;;\r\n    const fs = require(&#39;fs&#39;);\r\n\r\n    fs.readdir(testFolder, (err, files) =&gt; {\r\n      files.forEach(file =&gt; {\r\n        console.log(file);\r\n      });\r\n    })\r\n\r\n**fs.readdirSync**\r\n\r\n    const testFolder = &#39;./tests/&#39;;\r\n    const fs = require(&#39;fs&#39;);\r\n\r\n    fs.readdirSync(testFolder).forEach(file =&gt; {\r\n      console.log(file);\r\n    })\r\n\r\nThe difference between the two methods, is that the first one is asynchronous, so you have to provide a callback function that will be executed when the read process ends.\r\n\r\nThe second is synchronous, it will returns the file name array, but it will stop any further execution of your code until the read process ends.\r\n\r\n  [1]: https://nodejs.org/api/fs.html#fs_fs_readdir_path_options_callback\r\n  [2]: https://nodejs.org/api/fs.html#fs_fs_readdirsync_path_options"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1303889714,
          "answer_id": 5800843,
          "path": "stack.gulp.answer",
          "score": 158,
          "up_vote_count": 160,
          "is_accepted": false,
          "last_activity_date": 1408627402,
          "last_edit_date": 1408627402,
          "body_markdown": "The answer above does not perform a recursive search into the directory though. Here&#39;s what I did for a recursive search (using [node-walk][1]: `npm install walk`)\r\n\r\n    var walk    = require(&#39;walk&#39;);\r\n    var files   = [];\r\n    \r\n    // Walker options\r\n    var walker  = walk.walk(&#39;./test&#39;, { followLinks: false });\r\n    \r\n    walker.on(&#39;file&#39;, function(root, stat, next) {\r\n        // Add this file to the list of files\r\n        files.push(root + &#39;/&#39; + stat.name);\r\n        next();\r\n    });\r\n    \r\n    walker.on(&#39;end&#39;, function() {\r\n        console.log(files);\r\n    });\r\n\r\n\r\n  [1]: https://github.com/coolaj86/node-walk"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1386782717,
          "answer_id": 20525865,
          "path": "stack.gulp.answer",
          "score": 70,
          "up_vote_count": 71,
          "is_accepted": false,
          "last_activity_date": 1424428810,
          "last_edit_date": 1424428810,
          "body_markdown": "Get files in all subdirs\r\n\r\n    function getFiles (dir, files_){\r\n        files_ = files_ || [];\r\n        var files = fs.readdirSync(dir);\r\n        for (var i in files){\r\n            var name = dir + &#39;/&#39; + files[i];\r\n            if (fs.statSync(name).isDirectory()){\r\n                getFiles(name, files_);\r\n            } else {\r\n                files_.push(name);\r\n            }\r\n        }\r\n        return files_;\r\n    }\r\n\r\n    console.log(getFiles(&#39;path/to/dir&#39;))"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1393707446,
          "answer_id": 22120260,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1393869977,
          "last_edit_date": 1393869977,
          "body_markdown": "Here&#39;s an asynchronous recursive version.\r\n\r\n        function ( path, callback){\r\n         // the callback gets ( err, files) where files is an array of file names\r\n         if( typeof callback !== &#39;function&#39; ) return\r\n         var\r\n          result = []\r\n          , files = [ path.replace( /\\/\\s*$/, &#39;&#39; ) ]\r\n         function traverseFiles (){\r\n          if( files.length ) {\r\n           var name = files.shift()\r\n           fs.stat(name, function( err, stats){\r\n            if( err ){\r\n             if( err.errno == 34 ) traverseFiles()\r\n        // in case there&#39;s broken symbolic links or a bad path\r\n        // skip file instead of sending error\r\n             else callback(err)\r\n            }\r\n            else if ( stats.isDirectory() ) fs.readdir( name, function( err, files2 ){\r\n             if( err ) callback(err)\r\n             else {\r\n              files = files2\r\n               .map( function( file ){ return name + &#39;/&#39; + file } )\r\n               .concat( files )\r\n              traverseFiles()\r\n             }\r\n            })\r\n            else{\r\n             result.push(name)\r\n             traverseFiles()\r\n            }\r\n           })\r\n          }\r\n          else callback( null, result )\r\n         }\r\n         traverseFiles()\r\n        }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1396366501,
          "answer_id": 22790445,
          "path": "stack.gulp.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1396366501,
          "body_markdown": "    function getFilesRecursiveSync(dir, fileList, optionalFilterFunction) {\r\n        if (!fileList) {\r\n            grunt.log.error(&quot;Variable &#39;fileList&#39; is undefined or NULL.&quot;);\r\n            return;\r\n        }\r\n        var files = fs.readdirSync(dir);\r\n        for (var i in files) {\r\n            if (!files.hasOwnProperty(i)) continue;\r\n            var name = dir + &#39;/&#39; + files[i];\r\n            if (fs.statSync(name).isDirectory()) {\r\n                getFilesRecursiveSync(name, fileList, optionalFilterFunction);\r\n            } else {\r\n                if (optionalFilterFunction &amp;&amp; optionalFilterFunction(name) !== true)\r\n                    continue;\r\n                fileList.push(name);\r\n            }\r\n        }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1402552490,
          "answer_id": 24177327,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1402552490,
          "body_markdown": "Just a heads up: if you&#39;re planning to perform operations on each file in a directory, try [vinyl-fs](https://github.com/wearefractal/vinyl-fs) (which is used by [gulp](http://gulpjs.com/), the streaming build system)."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1409385477,
          "answer_id": 25580289,
          "path": "stack.gulp.answer",
          "score": 140,
          "up_vote_count": 140,
          "is_accepted": false,
          "last_activity_date": 1409385477,
          "body_markdown": "IMO the most convinient way to do such tasks is to use a [glob][1] tool. Here&#39;s a [glob package][2] for node.js. Install with\r\n\r\n    npm install glob\r\n\r\nThen use wild card to match filenames (example taken from package&#39;s website)\r\n\r\n    var glob = require(&quot;glob&quot;)\r\n    \r\n    // options is optional\r\n    glob(&quot;**/*.js&quot;, options, function (er, files) {\r\n      // files is an array of filenames.\r\n      // If the `nonull` option is set, and nothing\r\n      // was found, then files is [&quot;**/*.js&quot;]\r\n      // er is an error object or null.\r\n    })\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Glob_(programming)\r\n  [2]: https://github.com/isaacs/node-glob"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1422924889,
          "answer_id": 28289589,
          "path": "stack.gulp.answer",
          "score": 48,
          "up_vote_count": 48,
          "is_accepted": false,
          "last_activity_date": 1459311174,
          "last_edit_date": 1459311174,
          "body_markdown": "Here&#39;s a simple solution using only the native `fs` and `path` modules:\r\n\r\n    // sync version\r\n    function walkSync(currentDirPath, callback) {\r\n        var fs = require(&#39;fs&#39;),\r\n            path = require(&#39;path&#39;);\r\n        fs.readdirSync(currentDirPath).forEach(function (name) {\r\n            var filePath = path.join(currentDirPath, name);\r\n            var stat = fs.statSync(filePath);\r\n            if (stat.isFile()) {\r\n                callback(filePath, stat);\r\n            } else if (stat.isDirectory()) {\r\n                walkSync(filePath, callback);\r\n            }\r\n        });\r\n    }\r\n\r\nor async version (uses `fs.readdir` instead):\r\n\r\n    // async version with basic error handling\r\n    function walk(currentDirPath, callback) {\r\n        var fs = require(&#39;fs&#39;),\r\n\t\t    path = require(&#39;path&#39;);\r\n        fs.readdir(currentDirPath, function (err, files) {\r\n\t\t\tif (err) {\r\n\t\t\t\tthrow new Error(err);\r\n\t\t\t}\r\n\t\t\tfiles.forEach(function (name) {\r\n\t\t\t\tvar filePath = path.join(currentDirPath, name);\r\n\t\t\t\tvar stat = fs.statSync(filePath);\r\n\t\t\t\tif (stat.isFile()) {\r\n\t\t\t\t\tcallback(filePath, stat);\r\n\t\t\t\t} else if (stat.isDirectory()) {\r\n\t\t\t\t\twalk(filePath, callback);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n    }\r\n\r\nThen you just call (for sync version):\r\n\r\n    walkSync(&#39;path/to/root/dir&#39;, function(filePath, stat) {\r\n        // do something with &quot;filePath&quot;...\r\n    });\r\n\r\nor async version:\r\n\r\n    walk(&#39;path/to/root/dir&#39;, function(filePath, stat) {\r\n        // do something with &quot;filePath&quot;...\r\n    });\r\n\r\nThe difference is in how node blocks while performing the IO. Given that the API above is the same, you could just use the async version to ensure maximum performance.\r\n\r\nHowever there is one advantage to using the synchronous version. It is easier to execute some code as soon as the walk is done, as in the next statement after the walk. With the async version, you would need some extra way of knowing when you are done. Perhaps creating a map of all paths first, then enumerating them. For simple build/util scripts (vs high performance web servers) you could use the sync version without causing any damage."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1447385495,
          "answer_id": 33685480,
          "path": "stack.gulp.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1452752379,
          "last_edit_date": 1452752379,
          "body_markdown": "**Dependencies.**\r\n\r\n    var fs = require(&#39;fs&#39;);\r\n    var path = require(&#39;path&#39;);\r\n\r\n**Definition.**\r\n\r\n    // String -&gt; [String]\r\n    function fileList(dir) {\r\n      return fs.readdirSync(dir).reduce(function(list, file) {\r\n        var name = path.join(dir, file);\r\n        var isDir = fs.statSync(name).isDirectory();\r\n        return list.concat(isDir ? fileList(name) : [name]);\r\n      }, []);\r\n    }\r\n\r\n**Usage.**\r\n\r\n    var DIR = &#39;/usr/local/bin&#39;;\r\n\r\n    // 1. List all files in DIR\r\n    fileList(DIR);\r\n    // =&gt; [&#39;/usr/local/bin/babel&#39;, &#39;/usr/local/bin/bower&#39;, ...]\r\n\r\n    // 2. List all file names in DIR\r\n    fileList(DIR).map((file) =&gt; file.split(path.sep).slice(-1)[0]);\r\n    // =&gt; [&#39;babel&#39;, &#39;bower&#39;, ...]\r\n\r\nPlease note that `fileList` is way too optimistic. For anything serious, add some error handling."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452817736,
          "answer_id": 34802361,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1452817736,
          "body_markdown": "Took the general approach of @Hunan-Rostomyan, made it a litle more concise and added `excludeDirs` argument. It&#39;d be trivial to extend with `includeDirs`, just follow same pattern:\r\n\r\n    import * as fs from &#39;fs&#39;;\r\n    import * as path from &#39;path&#39;;\r\n    \r\n    function fileList(dir, excludeDirs?) {\r\n        return fs.readdirSync(dir).reduce(function (list, file) {\r\n            const name = path.join(dir, file);\r\n            if (fs.statSync(name).isDirectory()) {\r\n                if (excludeDirs &amp;&amp; excludeDirs.length) {\r\n                    excludeDirs = excludeDirs.map(d =&gt; path.normalize(d));\r\n                    const idx = name.indexOf(path.sep);\r\n                    const directory = name.slice(0, idx === -1 ? name.length : idx);\r\n                    if (excludeDirs.indexOf(directory) !== -1)\r\n                        return list;\r\n                }\r\n                return list.concat(fileList(name, excludeDirs));\r\n            }\r\n            return list.concat([name]);\r\n        }, []);\r\n    }\r\n\r\nExample usage:\r\n    \r\n    console.log(fileList(&#39;.&#39;, [&#39;node_modules&#39;, &#39;typings&#39;, &#39;bower_components&#39;]));\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1464634122,
          "answer_id": 37532027,
          "path": "stack.gulp.answer",
          "score": 15,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1464635689,
          "last_edit_date": 1464635689,
          "body_markdown": "Using Promises with ES7\r\n====\r\nAsynchronous use with mz/fs\r\n---\r\n\r\nThe [`mz`](https://www.npmjs.com/package/mz) module provides promisified versions of the core node library. Using them is simple. First install the library...\r\n\r\n    npm install mz\r\n\r\nThen...\r\n\r\n    const fs = require(&#39;mz/fs&#39;);\r\n    fs.readdir(&#39;./myDir&#39;).then(listing =&gt; console.log(listing))\r\n      .catch(err =&gt; console.error(err));\r\n\r\nAlternatively you can write them in asynchronous functions in ES7:\r\n\r\n    async function myReaddir () {\r\n      try {\r\n        const file = await fs.readdir(&#39;./myDir/&#39;);\r\n      }\r\n      catch (err) { console.error( err ) }\r\n    };\r\n\r\nUpdate for recursive listing\r\n---\r\nSome of the users have specified a desire to see a recursive listing (though not in the question)... Use [`fs-promise`](https://www.npmjs.com/package/fs-promise). It&#39;s a thin wrapper around [`mz`](https://www.npmjs.com/package/mz).\r\n\r\n    npm install fs-promise;\r\n\r\nthen...\r\n\r\n    const fs = require(&#39;fs-promise&#39;);\r\n    fs.walk(&#39;./myDir&#39;).then(\r\n        listing =&gt; listing.forEach(file =&gt; console.log(file.path))\r\n    ).catch(err =&gt; console.error(err));"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467383128,
          "answer_id": 38147895,
          "path": "stack.gulp.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1467805804,
          "last_edit_date": 1467805804,
          "body_markdown": "You don&#39;t say you want to do it recursively so I assume you only need direct children of the directory.\r\n\r\nSample code:\r\n\r\n    const fs = require(&#39;fs&#39;);\r\n    const path = require(&#39;path&#39;);\r\n\r\n    fs.readdirSync(&#39;your-directory-path&#39;)\r\n      .filter((file) =&gt; fs.lstatSync(path.join(folder, file)).isFile());"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1473786721,
          "answer_id": 39475552,
          "path": "stack.gulp.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1473786721,
          "body_markdown": "Load `fs`:\r\n\r\n    const fs = require(&#39;fs&#39;);\r\n\r\nRead files *async*:\r\n\r\n    fs.readdir(&#39;./dir&#39;, function (err, files) {\r\n        // &quot;files&quot; is an Array with files names\r\n    });\r\n\r\nRead files *sync*:\r\n\r\n    var files = fs.readdirSync(&#39;./dir&#39;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1509162751,
          "answer_id": 46986064,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1509166242,
          "last_edit_date": 1509166242,
          "body_markdown": "I made a node module to automate this task: [mddir][1]\r\n    \r\n# Usage\r\n\r\nnode mddir &quot;../relative/path/&quot;\r\n\r\nTo install: npm install mddir -g\r\n\r\nTo generate markdown for current directory: mddir\r\n\r\nTo generate for any absolute path: mddir /absolute/path\r\n\r\nTo generate for a relative path: mddir ~/Documents/whatever.\r\n\r\nThe md file gets generated in your working directory.\r\n\r\nCurrently ignores node_modules, and .git folders.\r\n\r\n# Troubleshooting\r\n\r\nIf you receive the error &#39;node\\r: No such file or directory&#39;, the issue is that your operating system uses different line endings and mddir can&#39;t parse them without you explicitly setting the line ending style to Unix. This usually affects Windows, but also some versions of Linux. Setting line endings to Unix style has to be performed within the mddir npm global bin folder.\r\n\r\n# Line endings fix\r\n\r\nGet npm bin folder path with:\r\n\r\n```npm config get prefix```\r\n\r\nCd into that folder\r\n\r\nbrew install dos2unix\r\n\r\ndos2unix lib/node_modules/mddir/src/mddir.js\r\n\r\nThis converts line endings to Unix instead of Dos\r\n\r\nThen run as normal with: node mddir &quot;../relative/path/&quot;.\r\n\r\n\r\n### Example generated markdown file structure &#39;directoryList.md&#39;\r\n    \r\n        |-- .bowerrc\r\n        |-- .jshintrc\r\n        |-- .jshintrc2\r\n        |-- Gruntfile.js\r\n        |-- README.md\r\n        |-- bower.json\r\n        |-- karma.conf.js\r\n        |-- package.json\r\n        |-- app\r\n            |-- app.js\r\n            |-- db.js\r\n            |-- directoryList.md\r\n            |-- index.html\r\n            |-- mddir.js\r\n            |-- routing.js\r\n            |-- server.js\r\n            |-- _api\r\n                |-- api.groups.js\r\n                |-- api.posts.js\r\n                |-- api.users.js\r\n                |-- api.widgets.js\r\n            |-- _components\r\n                |-- directives\r\n                    |-- directives.module.js\r\n                    |-- vendor\r\n                        |-- directive.draganddrop.js\r\n                |-- helpers\r\n                    |-- helpers.module.js\r\n                    |-- proprietary\r\n                        |-- factory.actionDispatcher.js\r\n                |-- services\r\n                    |-- services.cardTemplates.js\r\n                    |-- services.cards.js\r\n                    |-- services.groups.js\r\n                    |-- services.posts.js\r\n                    |-- services.users.js\r\n                    |-- services.widgets.js\r\n            |-- _mocks\r\n                |-- mocks.groups.js\r\n                |-- mocks.posts.js\r\n                |-- mocks.users.js\r\n                |-- mocks.widgets.js\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/mddir"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1519224347,
          "answer_id": 48908767,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1519225545,
          "last_edit_date": 1519225545,
          "body_markdown": "Get `sorted` filenames. You can filter results based on a specific `extension` such as `&#39;.txt&#39;`, `&#39;.jpg&#39;` and so on.\r\n\r\n\r\n    import * as fs from &#39;fs&#39;;\r\n    import * as Path from &#39;path&#39;;\r\n\r\n    function getFilenames(path, extension) {\r\n        return fs\r\n            .readdirSync(path)\r\n            .filter(\r\n                item =&gt;\r\n                    fs.statSync(Path.join(path, item)).isFile() &amp;&amp;\r\n                    (extension === undefined || Path.extname(item) === extension)\r\n            )\r\n            .sort();\r\n    }"
        }
      ],
      "title": "How do you get a list of the names of all files present in a directory in Node.js?",
      "view_count": 478972,
      "answer_count": 15,
      "code_snippet": [
        "<code>fs.readdir</code>",
        "<code>ls /tmp/*core*</code>",
        "<code>readdir-recursive</code>",
        "<code>fs.readdir</code>",
        "<code>fs.readdirSync</code>",
        "<code>const testFolder = './tests/';\nconst fs = require('fs');\n\nfs.readdir(testFolder, (err, files) =&gt; {\n  files.forEach(file =&gt; {\n    console.log(file);\n  });\n})\n</code>",
        "<code>const testFolder = './tests/';\nconst fs = require('fs');\n\nfs.readdirSync(testFolder).forEach(file =&gt; {\n  console.log(file);\n})\n</code>",
        "<code>readdir</code>",
        "<code>fs.stat(path, callback(err, stats))</code>",
        "<code>stats.isDirectory()</code>",
        "<code>ls</code>",
        "<code>dir /b/s</code>",
        "<code>npm install walk</code>",
        "<code>var walk    = require('walk');\nvar files   = [];\n\n// Walker options\nvar walker  = walk.walk('./test', { followLinks: false });\n\nwalker.on('file', function(root, stat, next) {\n    // Add this file to the list of files\n    files.push(root + '/' + stat.name);\n    next();\n});\n\nwalker.on('end', function() {\n    console.log(files);\n});\n</code>",
        "<code>.git</code>",
        "<code>npm install glob\n</code>",
        "<code>var glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n</code>",
        "<code>cwd</code>",
        "<code>glob</code>",
        "<code>console.log</code>",
        "<code>glob()</code>",
        "<code>glob.sync(pattern, [options])</code>",
        "<code>function getFiles (dir, files_){\n    files_ = files_ || [];\n    var files = fs.readdirSync(dir);\n    for (var i in files){\n        var name = dir + '/' + files[i];\n        if (fs.statSync(name).isDirectory()){\n            getFiles(name, files_);\n        } else {\n            files_.push(name);\n        }\n    }\n    return files_;\n}\n\nconsole.log(getFiles('path/to/dir'))\n</code>",
        "<code>if (typeof files_ === 'undefined') files_=[];</code>",
        "<code>var files_ = files_ || [];</code>",
        "<code>files_ = files_ || [];</code>",
        "<code>var fs = require('fs');</code>",
        "<code>getFiles</code>",
        "<code>fs</code>",
        "<code>path</code>",
        "<code>// sync version\nfunction walkSync(currentDirPath, callback) {\n    var fs = require('fs'),\n        path = require('path');\n    fs.readdirSync(currentDirPath).forEach(function (name) {\n        var filePath = path.join(currentDirPath, name);\n        var stat = fs.statSync(filePath);\n        if (stat.isFile()) {\n            callback(filePath, stat);\n        } else if (stat.isDirectory()) {\n            walkSync(filePath, callback);\n        }\n    });\n}\n</code>",
        "<code>fs.readdir</code>",
        "<code>// async version with basic error handling\nfunction walk(currentDirPath, callback) {\n    var fs = require('fs'),\n        path = require('path');\n    fs.readdir(currentDirPath, function (err, files) {\n        if (err) {\n            throw new Error(err);\n        }\n        files.forEach(function (name) {\n            var filePath = path.join(currentDirPath, name);\n            var stat = fs.statSync(filePath);\n            if (stat.isFile()) {\n                callback(filePath, stat);\n            } else if (stat.isDirectory()) {\n                walk(filePath, callback);\n            }\n        });\n    });\n}\n</code>",
        "<code>walkSync('path/to/root/dir', function(filePath, stat) {\n    // do something with \"filePath\"...\n});\n</code>",
        "<code>walk('path/to/root/dir', function(filePath, stat) {\n    // do something with \"filePath\"...\n});\n</code>",
        "<code>walkSync</code>",
        "<code>walk(filePath, callback);</code>",
        "<code>walkSync(filePath, callback);</code>",
        "<code>mz</code>",
        "<code>npm install mz\n</code>",
        "<code>const fs = require('mz/fs');\nfs.readdir('./myDir').then(listing =&gt; console.log(listing))\n  .catch(err =&gt; console.error(err));\n</code>",
        "<code>async function myReaddir () {\n  try {\n    const file = await fs.readdir('./myDir/');\n  }\n  catch (err) { console.error( err ) }\n};\n</code>",
        "<code>fs-promise</code>",
        "<code>mz</code>",
        "<code>npm install fs-promise;\n</code>",
        "<code>const fs = require('fs-promise');\nfs.walk('./myDir').then(\n    listing =&gt; listing.forEach(file =&gt; console.log(file.path))\n).catch(err =&gt; console.error(err));\n</code>",
        "<code>var fs = require('fs');\nvar path = require('path');\n</code>",
        "<code>// String -&gt; [String]\nfunction fileList(dir) {\n  return fs.readdirSync(dir).reduce(function(list, file) {\n    var name = path.join(dir, file);\n    var isDir = fs.statSync(name).isDirectory();\n    return list.concat(isDir ? fileList(name) : [name]);\n  }, []);\n}\n</code>",
        "<code>var DIR = '/usr/local/bin';\n\n// 1. List all files in DIR\nfileList(DIR);\n// =&gt; ['/usr/local/bin/babel', '/usr/local/bin/bower', ...]\n\n// 2. List all file names in DIR\nfileList(DIR).map((file) =&gt; file.split(path.sep).slice(-1)[0]);\n// =&gt; ['babel', 'bower', ...]\n</code>",
        "<code>fileList</code>",
        "<code>excludeDirs</code>",
        "<code>const fs = require('fs');\nconst path = require('path');\n\nfs.readdirSync('your-directory-path')\n  .filter((file) =&gt; fs.lstatSync(path.join(folder, file)).isFile());\n</code>",
        "<code>fs</code>",
        "<code>const fs = require('fs');\n</code>",
        "<code>fs.readdir('./dir', function (err, files) {\n    // \"files\" is an Array with files names\n});\n</code>",
        "<code>var files = fs.readdirSync('./dir');\n</code>",
        "<code>    function ( path, callback){\n     // the callback gets ( err, files) where files is an array of file names\n     if( typeof callback !== 'function' ) return\n     var\n      result = []\n      , files = [ path.replace( /\\/\\s*$/, '' ) ]\n     function traverseFiles (){\n      if( files.length ) {\n       var name = files.shift()\n       fs.stat(name, function( err, stats){\n        if( err ){\n         if( err.errno == 34 ) traverseFiles()\n    // in case there's broken symbolic links or a bad path\n    // skip file instead of sending error\n         else callback(err)\n        }\n        else if ( stats.isDirectory() ) fs.readdir( name, function( err, files2 ){\n         if( err ) callback(err)\n         else {\n          files = files2\n           .map( function( file ){ return name + '/' + file } )\n           .concat( files )\n          traverseFiles()\n         }\n        })\n        else{\n         result.push(name)\n         traverseFiles()\n        }\n       })\n      }\n      else callback( null, result )\n     }\n     traverseFiles()\n    }\n</code>",
        "<code>excludeDirs</code>",
        "<code>includeDirs</code>",
        "<code>import * as fs from 'fs';\nimport * as path from 'path';\n\nfunction fileList(dir, excludeDirs?) {\n    return fs.readdirSync(dir).reduce(function (list, file) {\n        const name = path.join(dir, file);\n        if (fs.statSync(name).isDirectory()) {\n            if (excludeDirs &amp;&amp; excludeDirs.length) {\n                excludeDirs = excludeDirs.map(d =&gt; path.normalize(d));\n                const idx = name.indexOf(path.sep);\n                const directory = name.slice(0, idx === -1 ? name.length : idx);\n                if (excludeDirs.indexOf(directory) !== -1)\n                    return list;\n            }\n            return list.concat(fileList(name, excludeDirs));\n        }\n        return list.concat([name]);\n    }, []);\n}\n</code>",
        "<code>console.log(fileList('.', ['node_modules', 'typings', 'bower_components']));\n</code>",
        "<code>npm config get prefix</code>",
        "<code>    |-- .bowerrc\n    |-- .jshintrc\n    |-- .jshintrc2\n    |-- Gruntfile.js\n    |-- README.md\n    |-- bower.json\n    |-- karma.conf.js\n    |-- package.json\n    |-- app\n        |-- app.js\n        |-- db.js\n        |-- directoryList.md\n        |-- index.html\n        |-- mddir.js\n        |-- routing.js\n        |-- server.js\n        |-- _api\n            |-- api.groups.js\n            |-- api.posts.js\n            |-- api.users.js\n            |-- api.widgets.js\n        |-- _components\n            |-- directives\n                |-- directives.module.js\n                |-- vendor\n                    |-- directive.draganddrop.js\n            |-- helpers\n                |-- helpers.module.js\n                |-- proprietary\n                    |-- factory.actionDispatcher.js\n            |-- services\n                |-- services.cardTemplates.js\n                |-- services.cards.js\n                |-- services.groups.js\n                |-- services.posts.js\n                |-- services.users.js\n                |-- services.widgets.js\n        |-- _mocks\n            |-- mocks.groups.js\n            |-- mocks.posts.js\n            |-- mocks.users.js\n            |-- mocks.widgets.js\n</code>",
        "<code>sorted</code>",
        "<code>extension</code>",
        "<code>'.txt'</code>",
        "<code>'.jpg'</code>",
        "<code>import * as fs from 'fs';\nimport * as Path from 'path';\n\nfunction getFilenames(path, extension) {\n    return fs\n        .readdirSync(path)\n        .filter(\n            item =&gt;\n                fs.statSync(Path.join(path, item)).isFile() &amp;&amp;\n                (extension === undefined || Path.extname(item) === extension)\n        )\n        .sort();\n}\n</code>",
        "<code>function getFilesRecursiveSync(dir, fileList, optionalFilterFunction) {\n    if (!fileList) {\n        grunt.log.error(\"Variable 'fileList' is undefined or NULL.\");\n        return;\n    }\n    var files = fs.readdirSync(dir);\n    for (var i in files) {\n        if (!files.hasOwnProperty(i)) continue;\n        var name = dir + '/' + files[i];\n        if (fs.statSync(name).isDirectory()) {\n            getFilesRecursiveSync(name, fileList, optionalFilterFunction);\n        } else {\n            if (optionalFilterFunction &amp;&amp; optionalFilterFunction(name) !== true)\n                continue;\n            fileList.push(name);\n        }\n    }\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "sass",
        "gulp"
      ],
      "creation_date": 1423482616,
      "body_markdown": "I would like to use google web starter kit. I installed node.js v0.12.0, `node-sass` &amp; `gulp`.\r\n\r\nAnd then ran:\r\n\r\n    $ sudo npm install\r\n\r\nWhen I typed `gulp serve` then got this error:\r\n\r\n    Using gulpfile ~/web-starter-kit/gulpfile.js Starting &#39;styles&#39;... &#39;styles&#39; errored after 93 ms \r\n    Error: `libsass` bindings not found. Try reinstalling `node-sass`? at getBinding\r\n\r\nI reinstalled node and gulp but this doesn&#39;t help.\r\n\r\nWhat should I do next?",
      "last_edit_date": 1427295360,
      "up_vote_count": 248,
      "link": "https://stackoverflow.com/questions/28409100/try-reinstalling-node-sass-on-node-0-12",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1424881614,
          "answer_id": 28724282,
          "path": "stack.gulp.answer",
          "score": 9,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1424992261,
          "last_edit_date": 1424992261,
          "body_markdown": "Downgrading Node to 0.10.36 should do it per this thread on the node-sass github page: https://github.com/sass/node-sass/issues/490#issuecomment-70388754\r\n\r\nIf you have NVM you can just: \r\n\r\n    nvm install 0.10\r\n\r\nIf you don&#39;t, you can find NVM and instructions here: https://www.npmjs.com/package/nvm"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1426023656,
          "answer_id": 28974608,
          "path": "stack.gulp.answer",
          "score": 233,
          "up_vote_count": 238,
          "is_accepted": false,
          "last_activity_date": 1426023656,
          "body_markdown": "I ran into this error using node `0.12.0` and it was fixed by deleting the existing `/node_modules` directory and running `npm update`."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1426804397,
          "answer_id": 29156211,
          "path": "stack.gulp.answer",
          "score": 22,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1429612261,
          "last_edit_date": 1429612261,
          "body_markdown": "I had the same issue:\r\n\r\n - installing node-sass\r\n - being told at the end of installation that the installation completed successfully\r\n - then being asked to re-install node-sass.\r\n\r\nThe solution is to **install node-sass version 2** which supports current versions of node. See https://github.com/sass/node-sass/issues/490#issuecomment-70388754\r\n\r\nRun:\r\n\r\n    npm install node-sass@2\r\n\r\nThen re-test:\r\n\r\n    $ npm ls node-sass\r\n    myapp@0.0.0 /var/www/myapp\r\n    └── node-sass@2.0.1\r\n\r\n    $ gulp sass\r\n    [09:48:42] Using gulpfile /var/www/myapp/gulpfile.js\r\n    [09:48:42] Starting &#39;sass&#39;...\r\n    [09:48:42] Finished &#39;sass&#39; after 15 ms"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430506333,
          "answer_id": 29993193,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1430506333,
          "body_markdown": "you may also want to ```npm remove gulp-sass``` and re-install gulp-sass if you&#39;ve switched node versions."
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1430885607,
          "answer_id": 30067395,
          "path": "stack.gulp.answer",
          "score": 331,
          "up_vote_count": 336,
          "is_accepted": false,
          "last_activity_date": 1434290736,
          "last_edit_date": 1434290736,
          "body_markdown": "I found this useful command:\r\n\r\n    npm rebuild node-sass\r\n\r\n\r\nFrom the `rebuild` [documentation](https://docs.npmjs.com/cli/rebuild):\r\n\r\n&gt; This is useful when you install a new version of node (or switch node\r\n&gt; versions), and must recompile all your C++ addons with the new node.js\r\n&gt; binary.\r\n\r\nhttp://laravel.io/forum/10-29-2014-laravel-elixir-sass-error"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430921790,
          "answer_id": 30079399,
          "path": "stack.gulp.answer",
          "score": 19,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1430921790,
          "body_markdown": "If you use Gulp then try:\r\n\r\n`npm install gulp-sass`\r\n\r\nI had the same problem and the `gulp-sass` package was the problem."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438711849,
          "answer_id": 31816317,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1438711849,
          "body_markdown": "For me, this issue was caused in my build system (Travis CI) by doing something kind of dumb in my `.travis.yml` file. In effect, I was calling `npm install` *before* `nvm use 0.12`, and this was causing `node-sass` to be built for `0.10` instead of `0.12`. My solution was simply moving `nvm use` out of the `.travis.yml` file’s `before_script` section to before the `npm install` command, which was in the `before_install` section.\r\n\r\nIn your case, it is likely that whatever process you are starting with `gulp` is using a different version of `node` (than what you would expect)."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1441840791,
          "answer_id": 32490619,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1441840791,
          "body_markdown": "This answer is a bit orthogonal to the the OP, but --\r\n\r\nlibsass bindings don&#39;t install properly with the node-sass wrapper on Node v4.0.0. I got the same error message as in the question (`Error: &#39;libsass&#39; bindings not found. Try reinstalling &#39;node-sass&#39;)` but I ended up uninstalling Node v4.0.0 and installing v0.12.7 using nvm, via this script:\r\n\r\nhttps://gist.github.com/brock/5b1b70590e1171c4ab54\r\n\r\nand now libsass and node-sass are behaving properly."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1442341512,
          "answer_id": 32593065,
          "path": "stack.gulp.answer",
          "score": 82,
          "up_vote_count": 83,
          "is_accepted": false,
          "last_activity_date": 1444954617,
          "last_edit_date": 1444954617,
          "body_markdown": "`npm rebuild node-sass` was giving me errors (Ubuntu) and `npm install gulp-sass` didn&#39;t make the error go away.\r\n\r\nSaw a solution on GitHub which worked for me:\r\n\r\n`npm uninstall --save-dev gulp-sass`\r\n\r\n`npm install --save-dev gulp-sass`\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1442652890,
          "answer_id": 32666240,
          "path": "stack.gulp.answer",
          "score": 385,
          "up_vote_count": 388,
          "is_accepted": false,
          "last_activity_date": 1442652890,
          "body_markdown": "If your node version is 4 and you are using gulp-sass, then try\r\n\r\n    npm uninstall --save-dev gulp-sass\r\n\r\n    npm install --save-dev gulp-sass@2"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1447344345,
          "answer_id": 33675923,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1447344345,
          "body_markdown": "I have same issue when gulp-sass version is 1.3.0, and fix it after upgrading to 2.1.0."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1447704185,
          "answer_id": 33743626,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1447704185,
          "body_markdown": "I had the same issue as @Kos had, only for some reason I had to modify the gulp-sass package from the old `package.json` file I had. It then installed the dependencies currently and now it finally works!"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453227022,
          "answer_id": 34884024,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1453227022,
          "body_markdown": "If you came here because you upgraded nodejs systemwide &amp; suddenly your emberjs ^1.13 app is failing with this message, make sure you&#39;re not using an outdated version of `ember-cli-sass`. You&#39;ll need to `rm -rf node_modules bower_components dist tmp` within the Ember app, then update your `package.json` with the appropriate `ember-cli-sass` version, and finally `npm install --save-dev`. This fixed it for me, without having to rebuild or change any other dependencies."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458138539,
          "answer_id": 36038605,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1458138539,
          "body_markdown": "My issue was that I was on a machine with `node version 0.12.2`, but that had an old `1.x.x` version of `npm`. Be sure to update your version of npm: `sudo npm install -g npm` Once that is done, remove any existing `node-sass` and reinstall it via npm."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458743115,
          "answer_id": 36180873,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1466192993,
          "last_edit_date": 1466192993,
          "body_markdown": "I removed all the `/node_modules` folder then ran `npm install` and it worked.\r\n\r\nI have node v5.5.0, npm 3.3.12"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1477720881,
          "answer_id": 40316514,
          "path": "stack.gulp.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1477720881,
          "body_markdown": "i had the same problem today at work.\r\n\r\n`npm rebuild node-sass`\r\n\r\ndone the job for me"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1478631613,
          "answer_id": 40494511,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1478631613,
          "body_markdown": "You need to use the right version. Try:\r\n\r\n    nvm use 0.12"
        }
      ],
      "title": "Try reinstalling `node-sass` on node 0.12?",
      "view_count": 150318,
      "answer_count": 17,
      "code_snippet": [
        "<code>node-sass</code>",
        "<code>gulp</code>",
        "<code>$ sudo npm install\n</code>",
        "<code>gulp serve</code>",
        "<code>Using gulpfile ~/web-starter-kit/gulpfile.js Starting 'styles'... 'styles' errored after 93 ms \nError: `libsass` bindings not found. Try reinstalling `node-sass`? at getBinding\n</code>",
        "<code>npm uninstall --save-dev gulp-sass\n\nnpm install --save-dev gulp-sass@2\n</code>",
        "<code>npm rebuild node-sass\n</code>",
        "<code>rebuild</code>",
        "<code>Python not supported by</code>",
        "<code>Failed at the node-sass@0.8.6 install script 'node build.js'</code>",
        "<code>Error: Cannot find module 'node_modules/node-sass/node_modules/pangyp/bin/node-gyp'</code>",
        "<code>0.12.0</code>",
        "<code>/node_modules</code>",
        "<code>npm update</code>",
        "<code>npm rebuild node-sass</code>",
        "<code>npm rebuild node-sass</code>",
        "<code>npm install gulp-sass</code>",
        "<code>npm uninstall --save-dev gulp-sass</code>",
        "<code>npm install --save-dev gulp-sass</code>",
        "<code>npm install node-sass@2\n</code>",
        "<code>$ npm ls node-sass\nmyapp@0.0.0 /var/www/myapp\n└── node-sass@2.0.1\n\n$ gulp sass\n[09:48:42] Using gulpfile /var/www/myapp/gulpfile.js\n[09:48:42] Starting 'sass'...\n[09:48:42] Finished 'sass' after 15 ms\n</code>",
        "<code>npm install gulp-sass</code>",
        "<code>gulp-sass</code>",
        "<code>npm install grunt-sass</code>",
        "<code>nvm install 0.10\n</code>",
        "<code>npm rebuild node-sass</code>",
        "<code>Error: 'libsass' bindings not found. Try reinstalling 'node-sass')</code>",
        "<code>npm remove gulp-sass</code>",
        "<code>ember-cli-sass</code>",
        "<code>rm -rf node_modules bower_components dist tmp</code>",
        "<code>package.json</code>",
        "<code>ember-cli-sass</code>",
        "<code>npm install --save-dev</code>",
        "<code>/node_modules</code>",
        "<code>npm install</code>",
        "<code>.travis.yml</code>",
        "<code>npm install</code>",
        "<code>nvm use 0.12</code>",
        "<code>node-sass</code>",
        "<code>0.10</code>",
        "<code>0.12</code>",
        "<code>nvm use</code>",
        "<code>.travis.yml</code>",
        "<code>before_script</code>",
        "<code>npm install</code>",
        "<code>before_install</code>",
        "<code>gulp</code>",
        "<code>node</code>",
        "<code>package.json</code>",
        "<code>node version 0.12.2</code>",
        "<code>1.x.x</code>",
        "<code>npm</code>",
        "<code>sudo npm install -g npm</code>",
        "<code>node-sass</code>",
        "<code>nvm use 0.12\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "angularjs",
        "anchor",
        "hashtag"
      ],
      "creation_date": 1360081778,
      "body_markdown": "Do any of you know how to nicely handle anchor hash linking in **AngularJS**?\r\n\r\nI have the following markup for a simple FAQ-page\r\n\r\n    &lt;a href=&quot;#faq-1&quot;&gt;Question 1&lt;/a&gt;\r\n    &lt;a href=&quot;#faq-2&quot;&gt;Question 2&lt;/a&gt;\r\n    &lt;a href=&quot;#faq-3&quot;&gt;Question 3&lt;/a&gt;\r\n      \r\n    &lt;h3 id=&quot;faq-1&quot;&gt;Question 1&lt;/h3&gt;\r\n    &lt;h3 id=&quot;faq-2&quot;&gt;Question 2&lt;/h3&gt;\r\n    &lt;h3 id=&quot;fa1-3&quot;&gt;Question 3&lt;/h3&gt;\r\n\r\nWhen clicking on any of the above links AngularJS intercepts and routes me to a completely different page (in my case, a 404-page as there are no routes matching the links.)\r\n\r\nMy first thought was to create a route matching &quot;**/faq/:chapter**&quot; and in the corresponding controller check `$routeParams.chapter` after a matching element and then use jQuery to scroll down to it.\r\n\r\nBut then AngularJS shits on me again and just scrolls to the top of the page anyway.\r\n\r\nSo, anyone here done anything similar in the past and knows a good solution to it?\r\n\r\nEdit: Switching to html5Mode should solve my problems but we kinda have to support IE8+ anyway so I fear it&#39;s not an accepted solution :/",
      "last_edit_date": 1518506676,
      "up_vote_count": 307,
      "link": "https://stackoverflow.com/questions/14712223/how-to-handle-anchor-hash-linking-in-angularjs",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1360083896,
          "answer_id": 14712912,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1360083896,
          "body_markdown": "Here is kind of dirty workaround by creating custom directive that will scrolls to specified element (with hardcoded &quot;faq&quot;)\r\n\r\n    app.directive(&#39;h3&#39;, function($routeParams) {\r\n      return {\r\n        restrict: &#39;E&#39;,\r\n        link: function(scope, element, attrs){        \r\n            if (&#39;faq&#39;+$routeParams.v == attrs.id) {\r\n              setTimeout(function() {\r\n                 window.scrollTo(0, element[0].offsetTop);\r\n              },1);        \r\n            }\r\n        }\r\n      };\r\n    });\r\n\r\nhttp://plnkr.co/edit/Po37JFeP5IsNoz5ZycFs?p=preview\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1360088587,
          "answer_id": 14714255,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1360916917,
          "last_edit_date": 1360916917,
          "body_markdown": "Try to set a hash prefix for angular routes `$locationProvider.hashPrefix(&#39;!&#39;)`\r\n\r\nFull example:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    angular.module(&#39;app&#39;, [])\r\n      .config([&#39;$routeProvider&#39;, &#39;$locationProvider&#39;, \r\n        function($routeProvider, $locationProvider){\r\n          $routeProvider.when( ... );\r\n          $locationProvider.hashPrefix(&#39;!&#39;);\r\n        }\r\n      ])"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1360098840,
          "answer_id": 14717011,
          "path": "stack.bower.answer",
          "score": 366,
          "up_vote_count": 368,
          "is_accepted": true,
          "last_activity_date": 1433994981,
          "last_edit_date": 1433994981,
          "body_markdown": "You&#39;re looking for `$anchorScroll()`.\r\n\r\n[Here&#39;s the (crappy) documentation.][1]\r\n\r\n[And here&#39;s the source.][2]\r\n\r\nBasically you just inject it and call it in your controller, and it will scroll you to any element with the id found in `$location.hash()`\r\n\r\n\r\n    app.controller(&#39;TestCtrl&#39;, function($scope, $location, $anchorScroll) {\r\n       $scope.scrollTo = function(id) {\r\n          $location.hash(id);\r\n          $anchorScroll();\r\n       }\r\n    });\r\n    \r\n    &lt;a ng-click=&quot;scrollTo(&#39;foo&#39;)&quot;&gt;Foo&lt;/a&gt;\r\n    \r\n    &lt;div id=&quot;foo&quot;&gt;Here you are&lt;/div&gt;\r\n\r\n\r\n[Here is a plunker to demonstrate][3]\r\n\r\n**EDIT: to use this with routing**\r\n\r\nSet up your angular routing as usual, then just add the following code.\r\n    \r\n    app.run(function($rootScope, $location, $anchorScroll, $routeParams) {\r\n      //when the route is changed scroll to the proper element.\r\n      $rootScope.$on(&#39;$routeChangeSuccess&#39;, function(newRoute, oldRoute) {\r\n        $location.hash($routeParams.scrollTo);\r\n        $anchorScroll();  \r\n      });\r\n    });\r\n\r\nand your link would look like this:\r\n\r\n    &lt;a href=&quot;#/test?scrollTo=foo&quot;&gt;Test/Foo&lt;/a&gt;\r\n\r\nHere is a [Plunker demonstrating scrolling with routing and $anchorScroll](http://plnkr.co/edit/De6bBrkHpojgAbEvHszu)\r\n\r\n\r\n**And even simpler:**\r\n\r\n    app.run(function($rootScope, $location, $anchorScroll) {\r\n      //when the route is changed scroll to the proper element.\r\n      $rootScope.$on(&#39;$routeChangeSuccess&#39;, function(newRoute, oldRoute) {\r\n        if($location.hash()) $anchorScroll();  \r\n      });\r\n    });\r\n\r\nand your link would look like this:\r\n\r\n    &lt;a href=&quot;#/test#foo&quot;&gt;Test/Foo&lt;/a&gt;\r\n\r\n  [1]: http://docs.angularjs.org/api/ng.$anchorScroll\r\n  [2]: https://github.com/angular/angular.js/blob/master/src/ng/anchorScroll.js\r\n  [3]: http://plnkr.co/edit/PCO051UJS8EHbdkmFV40?p=preview\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1365624781,
          "answer_id": 15935517,
          "path": "stack.bower.answer",
          "score": 163,
          "up_vote_count": 164,
          "is_accepted": false,
          "last_activity_date": 1365624781,
          "body_markdown": "in my case I noticed that the routing logic was kicking in if I modified the location hash. the following trick worked..\r\n\r\n\t$scope.scrollTo = function(id) {\r\n\t\tvar old = $location.hash();\r\n\t    $location.hash(id);\r\n\t    $anchorScroll();\r\n\t    //reset to old to keep any additional routing logic from kicking in\r\n\t    $location.hash(old);\r\n\t};\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1375113917,
          "answer_id": 17928780,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1422485564,
          "last_edit_date": 1422485564,
          "body_markdown": "This was my solution using a directive which seems more Angular-y because we&#39;re dealing with the DOM:\r\n\r\n[Plnkr over here](http://plnkr.co/edit/Sl2V4u3tVzsqEj7ttgNi?p=preview)\r\n\r\n[github](https://github.com/khalilravanna/scrollTo)\r\n\r\nCODE\r\n----\r\n    angular.module(&#39;app&#39;, [])\r\n    .directive(&#39;scrollTo&#39;, function ($location, $anchorScroll) {\r\n      return function(scope, element, attrs) {\r\n\r\n        element.bind(&#39;click&#39;, function(event) {\r\n    \t    event.stopPropagation();\r\n    \t    var off = scope.$on(&#39;$locationChangeStart&#39;, function(ev) {\r\n                off();\r\n    \t        ev.preventDefault();\r\n    \t    });\r\n    \t    var location = attrs.scrollTo;\r\n    \t    $location.hash(location);\r\n    \t    $anchorScroll();\r\n    \t});\r\n\r\n      };\r\n    });\r\n\r\n\r\n\r\nHTML\r\n----\r\n    &lt;ul&gt;\r\n      &lt;li&gt;&lt;a href=&quot;&quot; scroll-to=&quot;section1&quot;&gt;Section 1&lt;/a&gt;&lt;/li&gt;\r\n      &lt;li&gt;&lt;a href=&quot;&quot; scroll-to=&quot;section2&quot;&gt;Section 2&lt;/a&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;\r\n    \r\n    &lt;h1 id=&quot;section1&quot;&gt;Hi, I&#39;m section 1&lt;/h1&gt;\r\n  \t&lt;p&gt;\r\n    Zombie ipsum reversus ab viral inferno, nam rick grimes malum cerebro. De carne lumbering animata corpora quaeritis. \r\n     Summus brains sit​​, morbo vel maleficia? De apocalypsi gorger omero undead survivor dictum mauris. \r\n    Hi mindless mortuis soulless creaturas, imo evil stalking monstra adventus resi dentevil vultus comedat cerebella viventium. \r\n    Nescio brains an Undead zombies. Sicut malus putrid voodoo horror. Nigh tofth eliv ingdead.\r\n    &lt;/p&gt;\r\n\r\n    &lt;h1 id=&quot;section2&quot;&gt;I&#39;m totally section 2&lt;/h1&gt;\r\n  \t&lt;p&gt;\r\n    Zombie ipsum reversus ab viral inferno, nam rick grimes malum cerebro. De carne lumbering animata corpora quaeritis. \r\n     Summus brains sit​​, morbo vel maleficia? De apocalypsi gorger omero undead survivor dictum mauris. \r\n    Hi mindless mortuis soulless creaturas, imo evil stalking monstra adventus resi dentevil vultus comedat cerebella viventium. \r\n    Nescio brains an Undead zombies. Sicut malus putrid voodoo horror. Nigh tofth eliv ingdead.\r\n    &lt;/p&gt;\r\n\r\n\r\nI used the $anchorScroll service. To counteract the page-refresh that goes along with the hash changing I went ahead and cancelled the locationChangeStart event. This worked for me because I had a help page hooked up to an ng-switch and the refreshes would esentially break the app. \r\n    \r\n  "
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1381777030,
          "answer_id": 19367249,
          "path": "stack.bower.answer",
          "score": 19,
          "up_vote_count": 20,
          "is_accepted": false,
          "last_activity_date": 1381777030,
          "body_markdown": "If you always know the route, you can simply append the anchor like this:\r\n\r\n    href=&quot;#/route#anchorID\r\n\r\nwhere `route` is the current angular route and `anchorID` matches an `&lt;a id=&quot;anchorID&quot;&gt;` somewhere on the page"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1382579734,
          "answer_id": 19555522,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1382581607,
          "last_edit_date": 1382581607,
          "body_markdown": "You could try to use [anchorScroll][2].\r\n\r\n[Example][1]\r\n\r\n\r\n  [1]: http://plnkr.co/edit/QeU4oPJ1f0tx5b0tyFFX?p=preview\r\n  [2]: http://docs.angularjs.org/api/ng.$anchorScroll\r\n\r\n\r\nSo the controller would be:\r\n  \r\n    app.controller(&#39;MainCtrl&#39;, function($scope, $location, $anchorScroll, $routeParams) {\r\n      $scope.scrollTo = function(id) {\r\n         $location.hash(id);\r\n         $anchorScroll();\r\n      }\r\n    });\r\n\r\n\r\nAnd the view:\r\n\r\n    &lt;a href=&quot;&quot; ng-click=&quot;scrollTo(&#39;foo&#39;)&quot;&gt;Scroll to #foo&lt;/a&gt;\r\n\r\n\r\n\r\n...and no secret for the anchor id:\r\n    \r\n    &lt;div id=&quot;foo&quot;&gt;\r\n      This is #foo\r\n    &lt;/div&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1396424081,
          "answer_id": 22804531,
          "path": "stack.bower.answer",
          "score": 41,
          "up_vote_count": 41,
          "is_accepted": false,
          "last_activity_date": 1396424081,
          "body_markdown": "    &lt;a href=&quot;##faq-1&quot;&gt;Question 1&lt;/a&gt;\r\n    &lt;a href=&quot;##faq-2&quot;&gt;Question 2&lt;/a&gt;\r\n    &lt;a href=&quot;##faq-3&quot;&gt;Question 3&lt;/a&gt;\r\n    \r\n    &lt;h3 id=&quot;faq-1&quot;&gt;Question 1&lt;/h3&gt;\r\n    &lt;h3 id=&quot;faq-2&quot;&gt;Question 2&lt;/h3&gt;\r\n    &lt;h3 id=&quot;faq-3&quot;&gt;Question 3&lt;/h3&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1403621309,
          "answer_id": 24389699,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1403621309,
          "body_markdown": "This may be a new attribute for ngView, but I&#39;ve been able to get it anchor hash links to work with `angular-route` using the `ngView autoscroll` attribute and &#39;double-hashes&#39;. \r\n\r\n[ngView (see autoscroll)][1]\r\n\r\n(The following code was used with angular-strap)\r\n\r\n    &lt;!-- use the autoscroll attribute to scroll to hash on $viewContentLoaded --&gt;    \r\n    &lt;div ng-view=&quot;&quot; autoscroll&gt;&lt;/div&gt;\r\n\r\n    &lt;!-- A.href link for bs-scrollspy from angular-strap --&gt;\r\n    &lt;!-- A.ngHref for autoscroll on current route without a location change --&gt;\r\n    &lt;ul class=&quot;nav bs-sidenav&quot;&gt;\r\n      &lt;li data-target=&quot;#main-html5&quot;&gt;&lt;a href=&quot;#main-html5&quot; ng-href=&quot;##main-html5&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt;\r\n      &lt;li data-target=&quot;#main-angular&quot;&gt;&lt;a href=&quot;#main-angular&quot; ng-href=&quot;##main-angular&quot; &gt;Angular&lt;/a&gt;&lt;/li&gt;\r\n      &lt;li data-target=&quot;#main-karma&quot;&gt;&lt;a href=&quot;#main-karma&quot; ng-href=&quot;##main-karma&quot;&gt;Karma&lt;/a&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;\r\n\r\n\r\n  [1]: https://docs.angularjs.org/api/ngRoute/directive/ngView &quot;ngView with autoscroll&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410440768,
          "answer_id": 25788286,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1410440768,
          "body_markdown": "I got around this in the route logic for my app. \r\n\r\n    function config($routeProvider) {\r\n      $routeProvider\r\n        .when(&#39;/&#39;, {\r\n          templateUrl: &#39;/partials/search.html&#39;,\r\n          controller: &#39;ctrlMain&#39;\r\n        })\r\n        .otherwise({\r\n          // Angular interferes with anchor links, so this function preserves the\r\n          // requested hash while still invoking the default route.\r\n          redirectTo: function() {\r\n            // Strips the leading &#39;#/&#39; from the current hash value.\r\n            var hash = &#39;#&#39; + window.location.hash.replace(/^#\\//g, &#39;&#39;);\r\n            window.location.hash = hash;\r\n            return &#39;/&#39; + hash;\r\n          }\r\n        });\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413946779,
          "answer_id": 26499645,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1413946779,
          "body_markdown": "I was trying to make my Angular app scroll to an anchor opon loading and ran into the URL rewriting rules of $routeProvider.\r\n\r\nAfter long experimentation I settled on this:\r\n\r\n 1. register a document.onload event handler from the .run() section of\r\n    the Angular app module.  \r\n 2. in the handler find out what the original\r\n    has anchor tag was supposed to be by doing some string operations.\r\n 3. override location.hash with the stripped down anchor tag (which\r\n    causes $routeProvider to immediately overwrite it again with it&#39;s\r\n    &quot;#/&quot; rule. But that is fine, because Angular is now in sync with\r\n    what is going on in the URL 4) call $anchorScroll().\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    angular.module(&quot;bla&quot;,[]).}])\r\n    .run(function($location, $anchorScroll){\r\n             $(document).ready(function() {\r\n    \t if(location.hash &amp;&amp; location.hash.length&gt;=1)    \t\t{\r\n    \t\t\tvar path = location.hash;\r\n    \t\t\tvar potentialAnchor = path.substring(path.lastIndexOf(&quot;/&quot;)+1);\r\n    \t\t\tif ($(&quot;#&quot; + potentialAnchor).length &gt; 0) {   // make sure this hashtag exists in the doc.                          \r\n    \t\t\t    location.hash = potentialAnchor;\r\n    \t\t\t    $anchorScroll();\r\n    \t\t\t}\r\n    \t\t}\t \r\n     });\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1416531573,
          "answer_id": 27052472,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1416594564,
          "last_edit_date": 1416594564,
          "body_markdown": "I am not 100% sure if this works all the time, but in my application this gives me the expected behavior. \r\n\r\nLets say you are on **ABOUT** page and you have the following route:\r\n\r\n    yourApp.config([&#39;$routeProvider&#39;, \r\n    \tfunction($routeProvider) {\r\n    \t    $routeProvider.\r\n    \t      \twhen(&#39;/about&#39;, {\r\n    \t        \ttemplateUrl: &#39;about.html&#39;,\r\n    \t        \tcontroller: &#39;AboutCtrl&#39;\r\n    \t      \t}).\r\n    \t      \totherwise({\r\n    \t        \tredirectTo: &#39;/&#39;\r\n    \t      \t});\r\n    \t    }\r\n    ]);\r\n\r\nNow, in you HTML\r\n\r\n    &lt;ul&gt;\r\n    \t&lt;li&gt;&lt;a href=&quot;#/about#tab1&quot;&gt;First Part&lt;/a&gt;&lt;/li&gt;\r\n    \t&lt;li&gt;&lt;a href=&quot;#/about#tab2&quot;&gt;Second Part&lt;/a&gt;&lt;/li&gt;\r\n    \t&lt;li&gt;&lt;a href=&quot;#/about#tab3&quot;&gt;Third Part&lt;/a&gt;&lt;/li&gt;\t\t\t\t\t\t\r\n    &lt;/ul&gt;\r\n    \r\n    &lt;div id=&quot;tab1&quot;&gt;1&lt;/div&gt;\r\n    &lt;div id=&quot;tab2&quot;&gt;2&lt;/div&gt;\r\n    &lt;div id=&quot;tab3&quot;&gt;3&lt;/div&gt;\r\n\r\n**In conclusion**\r\n\r\nIncluding the page name before the anchor did the trick for me.\r\nLet me know about your thoughts.\r\n\r\n**Downside** \r\n\r\nThis will re-render the page and then scroll to the anchor.\r\n\r\n**UPDATE**\r\n\r\nA better way is to add the following:\r\n\r\n    &lt;a href=&quot;#tab1&quot; onclick=&quot;return false;&quot;&gt;First Part&lt;/a&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1421068273,
          "answer_id": 27902779,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1421070449,
          "last_edit_date": 1421070449,
          "body_markdown": "On Route change it will scroll to the top of the page.\r\n\r\n     $scope.$on(&#39;$routeChangeSuccess&#39;, function () {\r\n          window.scrollTo(0, 0);\r\n      });\r\n\r\nput this code on your controller.\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1423079460,
          "answer_id": 28330177,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1423079460,
          "body_markdown": "In my mind @slugslog had it, but I would change one thing. I would use replace instead so you don&#39;t have to set it back.\r\n\r\n    $scope.scrollTo = function(id) {\r\n        var old = $location.hash();\r\n        $location.hash(id).replace();\r\n        $anchorScroll();\r\n    };\r\n\r\n[Docs][1] Search for &quot;Replace method&quot;\r\n\r\n\r\n  [1]: https://docs.angularjs.org/guide/$location"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429639053,
          "answer_id": 29779770,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1429639053,
          "body_markdown": "None of the solution above works for me, but I just tried this, and it worked,\r\n\r\n    &lt;a href=&quot;#/#faq-1&quot;&gt;Question 1&lt;/a&gt;\r\n\r\nSo I realized I need to notify the page to start with the index page and then use the traditional anchor. \r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429917329,
          "answer_id": 29859041,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1463830618,
          "last_edit_date": 1463830618,
          "body_markdown": "I&#39;m using AngularJS 1.3.15 and looks like I don&#39;t have to do anything special.\r\n\r\nhttps://code.angularjs.org/1.3.15/docs/api/ng/provider/$anchorScrollProvider\r\n\r\nSo, the following works for me in my html:\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;ul&gt;\r\n      &lt;li ng-repeat=&quot;page in pages&quot;&gt;&lt;a ng-href=&quot;#{{&#39;id-&#39;+id}}&quot;&gt;{{id}}&lt;/a&gt;\r\n      &lt;/li&gt;\r\n    &lt;/ul&gt;\r\n    &lt;div ng-attr-id=&quot;{{&#39;id-&#39;+id}}&quot; &lt;/div&gt;\r\n\r\n\r\nI didn&#39;t have to make any changes to my controller or JavaScript at all."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1432067563,
          "answer_id": 30335610,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1432067563,
          "body_markdown": "    &lt;a href=&quot;/#/#faq-1&quot;&gt;Question 1&lt;/a&gt;\r\n    &lt;a href=&quot;/#/#faq-2&quot;&gt;Question 2&lt;/a&gt;\r\n    &lt;a href=&quot;/#/#faq-3&quot;&gt;Question 3&lt;/a&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1434630165,
          "answer_id": 30915242,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1434630799,
          "last_edit_date": 1434630799,
          "body_markdown": "This is an old post, but I spent a long time researching various solutions so I wanted to share one more simple one. Just adding `target=&quot;_self&quot;` to the `&lt;a&gt;` tag fixed it for me. The link works and takes me to the proper location on the page.\r\n\r\nHowever, Angular still injects some weirdness with the # in the URL so you may run into trouble using the back button for navigation and such after using this method."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1437337998,
          "answer_id": 31505668,
          "path": "stack.bower.answer",
          "score": 48,
          "up_vote_count": 49,
          "is_accepted": false,
          "last_activity_date": 1453035781,
          "last_edit_date": 1453035781,
          "body_markdown": "There is no need to change any routing or anything else just need to use `target=&quot;_self&quot;` when creating the links \r\n\r\nExample:\r\n\r\n    &lt;a href=&quot;#faq-1&quot; target=&quot;_self&quot;&gt;Question 1&lt;/a&gt;\r\n    &lt;a href=&quot;#faq-2&quot; target=&quot;_self&quot;&gt;Question 2&lt;/a&gt;\r\n    &lt;a href=&quot;#faq-3&quot; target=&quot;_self&quot;&gt;Question 3&lt;/a&gt;\r\n\r\nAnd use the `id` attribute in your **html** elements like this:    \r\n\r\n    &lt;h3 id=&quot;faq-1&quot;&gt;Question 1&lt;/h3&gt;\r\n    &lt;h3 id=&quot;faq-2&quot;&gt;Question 2&lt;/h3&gt;\r\n    &lt;h3 id=&quot;faq-3&quot;&gt;Question 3&lt;/h3&gt;\r\n\r\nThere is no need to use ## as pointed/mentioned in comments ;-)\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1449169655,
          "answer_id": 34074170,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1463821745,
          "last_edit_date": 1463821745,
          "body_markdown": "I could do this like so:\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;li&gt;\r\n    &lt;a href=&quot;#/#about&quot;&gt;About&lt;/a&gt;\r\n    &lt;/li&gt;\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453868853,
          "answer_id": 35028895,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1463830510,
          "last_edit_date": 1463830510,
          "body_markdown": "`$anchorScroll` works for this, but there&#39;s a much better way to use it in more recent versions of Angular. \r\n\r\nNow, `$anchorScroll` accepts the hash as an optional argument, so you don&#39;t have to change `$location.hash` at all. ([documentation][1])\r\n\r\nThis is the best solution because it doesn&#39;t affect the route at all. I couldn&#39;t get any of the other solutions to work because I&#39;m using ngRoute and the route would reload as soon as I set `$location.hash(id)`, before `$anchorScroll` could do its magic.\r\n\r\nHere is how to use it... first, in the directive or controller:\r\n\r\n    $scope.scrollTo = function (id) {\r\n      $anchorScroll(id);  \r\n    }\r\n\r\nand then in the view:\r\n\r\n    &lt;a href=&quot;&quot; ng-click=&quot;scrollTo(id)&quot;&gt;Text&lt;/a&gt;\r\n\r\n\r\nAlso, if you need to account for a fixed navbar (or other UI), you can set the offset for $anchorScroll like this (in the main module&#39;s run function):\r\n\r\n    .run(function ($anchorScroll) {\r\n       //this will make anchorScroll scroll to the div minus 50px\r\n       $anchorScroll.yOffset = 50;\r\n    });\r\n\r\n\r\n  [1]: https://docs.angularjs.org/api/ng/service/$anchorScroll"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458813507,
          "answer_id": 36197402,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1460451763,
          "last_edit_date": 1460451763,
          "body_markdown": "Get your scrolling feature easily.  It also supports **Animated/Smooth scrolling** as an additional feature.  Details for *Angular Scroll* library:\r\n\r\n**Github** - https://github.com/oblador/angular-scroll\r\n\r\n**Bower**: `bower install --save angular-scroll`\r\n\r\n**npm** : `npm install --save angular-scroll`\r\n\r\n**Minfied version** - only 9kb\r\n\r\n**Smooth Scrolling (animated scrolling)** - yes\r\n\r\n**Scroll Spy** - yes\r\n\r\n**Documentation** - excellent\r\n\r\n**Demo** - http://oblador.github.io/angular-scroll/\r\n\r\nHope this helps."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1459354195,
          "answer_id": 36314214,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1459354195,
          "body_markdown": "Sometime in angularjs application hash navigation not work and bootstrap jquery javascript libraries make extensive use of this type of navigation, to make it work add `target=&quot;_self&quot;` to anchor tag.\r\ne.g. `&lt;a data-toggle=&quot;tab&quot; href=&quot;#id_of_div_to_navigate&quot; target=&quot;_self&quot;&gt;`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1459585154,
          "answer_id": 36370937,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1463830410,
          "last_edit_date": 1463830410,
          "body_markdown": "See https://code.angularjs.org/1.4.10/docs/api/ngRoute/provider/$routeProvider\r\n\r\n&gt; [reloadOnSearch=true] - {boolean=} - reload route when only $location.search() or $location.hash() changes.\r\n\r\nSetting this to false did the trick without all of the above for me."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1459948263,
          "answer_id": 36452205,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1459948263,
          "body_markdown": "If you don&#39;t like to use `ng-click` here&#39;s an alternate solution. It uses a `filter` to generate the correct url based on the current state. My example uses *ui.router*.\r\n\r\n**The benefit is that the user will see where the link goes on hover.**\r\n\r\n    &lt;a href=&quot;{{ &#39;my-element-id&#39; | anchor }}&quot;&gt;My element&lt;/a&gt;\r\n\r\nThe filter:\r\n\r\n\t.filter(&#39;anchor&#39;, [&#39;$state&#39;, function($state) {\r\n\t\treturn function(id) {\r\n\t\t\treturn &#39;/#&#39; + $state.current.url + &#39;#&#39; + id;\r\n\t\t};\r\n\t}])\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1479381234,
          "answer_id": 40653429,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1479381234,
          "body_markdown": " My solution with ng-route was this simple directive:\r\n\r\n       app.directive(&#39;scrollto&#39;,\r\n           function ($anchorScroll,$location) {\r\n                return {\r\n                    link: function (scope, element, attrs) {\r\n                        element.click(function (e) {\r\n                            e.preventDefault();\r\n                            $location.hash(attrs[&quot;scrollto&quot;]);\r\n                            $anchorScroll();\r\n                        });\r\n                    }\r\n                };\r\n        })\r\n\r\nThe html is looking like:\r\n\r\n    &lt;a href=&quot;&quot; scrollTo=&quot;yourid&quot;&gt;link&lt;/a&gt;"
        }
      ],
      "title": "How to handle anchor hash linking in AngularJS",
      "view_count": 204739,
      "answer_count": 26,
      "code_snippet": [
        "<code>&lt;a href=\"#faq-1\"&gt;Question 1&lt;/a&gt;\n&lt;a href=\"#faq-2\"&gt;Question 2&lt;/a&gt;\n&lt;a href=\"#faq-3\"&gt;Question 3&lt;/a&gt;\n\n&lt;h3 id=\"faq-1\"&gt;Question 1&lt;/h3&gt;\n&lt;h3 id=\"faq-2\"&gt;Question 2&lt;/h3&gt;\n&lt;h3 id=\"fa1-3\"&gt;Question 3&lt;/h3&gt;\n</code>",
        "<code>$routeParams.chapter</code>",
        "<code>ng-href=\"\"</code>",
        "<code>$anchorScroll()</code>",
        "<code>$location.hash()</code>",
        "<code>app.controller('TestCtrl', function($scope, $location, $anchorScroll) {\n   $scope.scrollTo = function(id) {\n      $location.hash(id);\n      $anchorScroll();\n   }\n});\n\n&lt;a ng-click=\"scrollTo('foo')\"&gt;Foo&lt;/a&gt;\n\n&lt;div id=\"foo\"&gt;Here you are&lt;/div&gt;\n</code>",
        "<code>app.run(function($rootScope, $location, $anchorScroll, $routeParams) {\n  //when the route is changed scroll to the proper element.\n  $rootScope.$on('$routeChangeSuccess', function(newRoute, oldRoute) {\n    $location.hash($routeParams.scrollTo);\n    $anchorScroll();  \n  });\n});\n</code>",
        "<code>&lt;a href=\"#/test?scrollTo=foo\"&gt;Test/Foo&lt;/a&gt;\n</code>",
        "<code>app.run(function($rootScope, $location, $anchorScroll) {\n  //when the route is changed scroll to the proper element.\n  $rootScope.$on('$routeChangeSuccess', function(newRoute, oldRoute) {\n    if($location.hash()) $anchorScroll();  \n  });\n});\n</code>",
        "<code>&lt;a href=\"#/test#foo\"&gt;Test/Foo&lt;/a&gt;\n</code>",
        "<code>&lt;a href=\"#foo\"&gt;foo&lt;/a&gt;</code>",
        "<code>$location.search('scrollTo', null)</code>",
        "<code>$scope.scrollTo = function(id) {\n    var old = $location.hash();\n    $location.hash(id);\n    $anchorScroll();\n    //reset to old to keep any additional routing logic from kicking in\n    $location.hash(old);\n};\n</code>",
        "<code>$location.hash(my_id); $anchorScroll; $location.hash(null)</code>",
        "<code>old</code>",
        "<code>target=\"_self\"</code>",
        "<code>&lt;a href=\"#faq-1\" target=\"_self\"&gt;Question 1&lt;/a&gt;\n&lt;a href=\"#faq-2\" target=\"_self\"&gt;Question 2&lt;/a&gt;\n&lt;a href=\"#faq-3\" target=\"_self\"&gt;Question 3&lt;/a&gt;\n</code>",
        "<code>id</code>",
        "<code>&lt;h3 id=\"faq-1\"&gt;Question 1&lt;/h3&gt;\n&lt;h3 id=\"faq-2\"&gt;Question 2&lt;/h3&gt;\n&lt;h3 id=\"faq-3\"&gt;Question 3&lt;/h3&gt;\n</code>",
        "<code>&lt;a href=\"##faq-1\"&gt;Question 1&lt;/a&gt;\n&lt;a href=\"##faq-2\"&gt;Question 2&lt;/a&gt;\n&lt;a href=\"##faq-3\"&gt;Question 3&lt;/a&gt;\n\n&lt;h3 id=\"faq-1\"&gt;Question 1&lt;/h3&gt;\n&lt;h3 id=\"faq-2\"&gt;Question 2&lt;/h3&gt;\n&lt;h3 id=\"faq-3\"&gt;Question 3&lt;/h3&gt;\n</code>",
        "<code>href=\"#/route#anchorID\n</code>",
        "<code>route</code>",
        "<code>anchorID</code>",
        "<code>&lt;a id=\"anchorID\"&gt;</code>",
        "<code>reloadOnSearch: false</code>",
        "<code>a</code>",
        "<code>angular.module('app', [])\n.directive('scrollTo', function ($location, $anchorScroll) {\n  return function(scope, element, attrs) {\n\n    element.bind('click', function(event) {\n        event.stopPropagation();\n        var off = scope.$on('$locationChangeStart', function(ev) {\n            off();\n            ev.preventDefault();\n        });\n        var location = attrs.scrollTo;\n        $location.hash(location);\n        $anchorScroll();\n    });\n\n  };\n});\n</code>",
        "<code>&lt;ul&gt;\n  &lt;li&gt;&lt;a href=\"\" scroll-to=\"section1\"&gt;Section 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"\" scroll-to=\"section2\"&gt;Section 2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1 id=\"section1\"&gt;Hi, I'm section 1&lt;/h1&gt;\n&lt;p&gt;\nZombie ipsum reversus ab viral inferno, nam rick grimes malum cerebro. De carne lumbering animata corpora quaeritis. \n Summus brains sit​​, morbo vel maleficia? De apocalypsi gorger omero undead survivor dictum mauris. \nHi mindless mortuis soulless creaturas, imo evil stalking monstra adventus resi dentevil vultus comedat cerebella viventium. \nNescio brains an Undead zombies. Sicut malus putrid voodoo horror. Nigh tofth eliv ingdead.\n&lt;/p&gt;\n\n&lt;h1 id=\"section2\"&gt;I'm totally section 2&lt;/h1&gt;\n&lt;p&gt;\nZombie ipsum reversus ab viral inferno, nam rick grimes malum cerebro. De carne lumbering animata corpora quaeritis. \n Summus brains sit​​, morbo vel maleficia? De apocalypsi gorger omero undead survivor dictum mauris. \nHi mindless mortuis soulless creaturas, imo evil stalking monstra adventus resi dentevil vultus comedat cerebella viventium. \nNescio brains an Undead zombies. Sicut malus putrid voodoo horror. Nigh tofth eliv ingdead.\n&lt;/p&gt;\n</code>",
        "<code>$anchorScroll</code>",
        "<code>$anchorScroll</code>",
        "<code>$location.hash</code>",
        "<code>$location.hash(id)</code>",
        "<code>$anchorScroll</code>",
        "<code>$scope.scrollTo = function (id) {\n  $anchorScroll(id);  \n}\n</code>",
        "<code>&lt;a href=\"\" ng-click=\"scrollTo(id)\"&gt;Text&lt;/a&gt;\n</code>",
        "<code>.run(function ($anchorScroll) {\n   //this will make anchorScroll scroll to the div minus 50px\n   $anchorScroll.yOffset = 50;\n});\n</code>",
        "<code>id</code>",
        "<code>ngRoute</code>",
        "<code>$locationProvider.hashPrefix('!')</code>",
        "<code>angular.module('app', [])\n  .config(['$routeProvider', '$locationProvider', \n    function($routeProvider, $locationProvider){\n      $routeProvider.when( ... );\n      $locationProvider.hashPrefix('!');\n    }\n  ])\n</code>",
        "<code>function config($routeProvider) {\n  $routeProvider\n    .when('/', {\n      templateUrl: '/partials/search.html',\n      controller: 'ctrlMain'\n    })\n    .otherwise({\n      // Angular interferes with anchor links, so this function preserves the\n      // requested hash while still invoking the default route.\n      redirectTo: function() {\n        // Strips the leading '#/' from the current hash value.\n        var hash = '#' + window.location.hash.replace(/^#\\//g, '');\n        window.location.hash = hash;\n        return '/' + hash;\n      }\n    });\n}\n</code>",
        "<code>target=\"_self\"</code>",
        "<code>&lt;a&gt;</code>",
        "<code>angular-route</code>",
        "<code>ngView autoscroll</code>",
        "<code>&lt;!-- use the autoscroll attribute to scroll to hash on $viewContentLoaded --&gt;    \n&lt;div ng-view=\"\" autoscroll&gt;&lt;/div&gt;\n\n&lt;!-- A.href link for bs-scrollspy from angular-strap --&gt;\n&lt;!-- A.ngHref for autoscroll on current route without a location change --&gt;\n&lt;ul class=\"nav bs-sidenav\"&gt;\n  &lt;li data-target=\"#main-html5\"&gt;&lt;a href=\"#main-html5\" ng-href=\"##main-html5\"&gt;HTML5&lt;/a&gt;&lt;/li&gt;\n  &lt;li data-target=\"#main-angular\"&gt;&lt;a href=\"#main-angular\" ng-href=\"##main-angular\" &gt;Angular&lt;/a&gt;&lt;/li&gt;\n  &lt;li data-target=\"#main-karma\"&gt;&lt;a href=\"#main-karma\" ng-href=\"##main-karma\"&gt;Karma&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code>",
        "<code>&lt;li&gt;\n&lt;a href=\"#/#about\"&gt;About&lt;/a&gt;\n&lt;/li&gt;\n</code>",
        "<code>app.directive('h3', function($routeParams) {\n  return {\n    restrict: 'E',\n    link: function(scope, element, attrs){        \n        if ('faq'+$routeParams.v == attrs.id) {\n          setTimeout(function() {\n             window.scrollTo(0, element[0].offsetTop);\n          },1);        \n        }\n    }\n  };\n});\n</code>",
        "<code>$anchorScroll</code>",
        "<code>   app.directive('scrollto',\n       function ($anchorScroll,$location) {\n            return {\n                link: function (scope, element, attrs) {\n                    element.click(function (e) {\n                        e.preventDefault();\n                        $location.hash(attrs[\"scrollto\"]);\n                        $anchorScroll();\n                    });\n                }\n            };\n    })\n</code>",
        "<code>&lt;a href=\"\" scrollTo=\"yourid\"&gt;link&lt;/a&gt;\n</code>",
        "<code>scroll-to=\"yourid\"</code>",
        "<code>scrollTo</code>",
        "<code>attrs[\"scrollTo\"]</code>",
        "<code>element.on('click', function (e) {..})</code>",
        "<code>app.controller('MainCtrl', function($scope, $location, $anchorScroll, $routeParams) {\n  $scope.scrollTo = function(id) {\n     $location.hash(id);\n     $anchorScroll();\n  }\n});\n</code>",
        "<code>&lt;a href=\"\" ng-click=\"scrollTo('foo')\"&gt;Scroll to #foo&lt;/a&gt;\n</code>",
        "<code>&lt;div id=\"foo\"&gt;\n  This is #foo\n&lt;/div&gt;\n</code>",
        "<code>yourApp.config(['$routeProvider', \n    function($routeProvider) {\n        $routeProvider.\n            when('/about', {\n                templateUrl: 'about.html',\n                controller: 'AboutCtrl'\n            }).\n            otherwise({\n                redirectTo: '/'\n            });\n        }\n]);\n</code>",
        "<code>&lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"#/about#tab1\"&gt;First Part&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#/about#tab2\"&gt;Second Part&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#/about#tab3\"&gt;Third Part&lt;/a&gt;&lt;/li&gt;                      \n&lt;/ul&gt;\n\n&lt;div id=\"tab1\"&gt;1&lt;/div&gt;\n&lt;div id=\"tab2\"&gt;2&lt;/div&gt;\n&lt;div id=\"tab3\"&gt;3&lt;/div&gt;\n</code>",
        "<code>&lt;a href=\"#tab1\" onclick=\"return false;\"&gt;First Part&lt;/a&gt;\n</code>",
        "<code>&lt;a href=\"/#/#faq-1\"&gt;Question 1&lt;/a&gt;\n&lt;a href=\"/#/#faq-2\"&gt;Question 2&lt;/a&gt;\n&lt;a href=\"/#/#faq-3\"&gt;Question 3&lt;/a&gt;\n</code>",
        "<code>ng-click</code>",
        "<code>filter</code>",
        "<code>&lt;a href=\"{{ 'my-element-id' | anchor }}\"&gt;My element&lt;/a&gt;\n</code>",
        "<code>.filter('anchor', ['$state', function($state) {\n    return function(id) {\n        return '/#' + $state.current.url + '#' + id;\n    };\n}])\n</code>",
        "<code>bower install --save angular-scroll</code>",
        "<code>npm install --save angular-scroll</code>",
        "<code>angular.module(\"bla\",[]).}])\r\n.run(function($location, $anchorScroll){\r\n         $(document).ready(function() {\r\n\t if(location.hash &amp;&amp; location.hash.length&gt;=1)    \t\t{\r\n\t\t\tvar path = location.hash;\r\n\t\t\tvar potentialAnchor = path.substring(path.lastIndexOf(\"/\")+1);\r\n\t\t\tif ($(\"#\" + potentialAnchor).length &gt; 0) {   // make sure this hashtag exists in the doc.                          \r\n\t\t\t    location.hash = potentialAnchor;\r\n\t\t\t    $anchorScroll();\r\n\t\t\t}\r\n\t\t}\t \r\n });</code>",
        "<code> $scope.$on('$routeChangeSuccess', function () {\n      window.scrollTo(0, 0);\n  });\n</code>",
        "<code>$scope.scrollTo = function(id) {\n    var old = $location.hash();\n    $location.hash(id).replace();\n    $anchorScroll();\n};\n</code>",
        "<code>&lt;a href=\"#/#faq-1\"&gt;Question 1&lt;/a&gt;\n</code>",
        "<code>target=\"_self\"</code>",
        "<code>&lt;a data-toggle=\"tab\" href=\"#id_of_div_to_navigate\" target=\"_self\"&gt;</code>",
        "<code>&lt;ul&gt;\n  &lt;li ng-repeat=\"page in pages\"&gt;&lt;a ng-href=\"#{{'id-'+id}}\"&gt;{{id}}&lt;/a&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;div ng-attr-id=\"{{'id-'+id}}\" &lt;/div&gt;\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs"
      ],
      "creation_date": 1377017980,
      "body_markdown": "`ng-bind-html-unsafe` was removed in Angular 1.2\r\n\r\nI&#39;m trying to implement something where I need to use `ng-bind-html-unsafe`. In the docs and on the github commit they say:\r\n\r\n&gt; ng-bind-html provides ng-html-bind-unsafe like behavior (innerHTML&#39;s the result without\r\nsanitization) when bound to the result of $sce.trustAsHtml(string).\r\n\r\nHow do you do this?\r\n ",
      "last_edit_date": 1377018307,
      "up_vote_count": 204,
      "link": "https://stackoverflow.com/questions/18340872/how-do-you-use-sce-trustashtmlstring-to-replicate-ng-bind-html-unsafe-in-angu",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1377024280,
          "answer_id": 18342738,
          "path": "stack.bower.answer",
          "score": 216,
          "up_vote_count": 218,
          "is_accepted": true,
          "last_activity_date": 1489758748,
          "last_edit_date": 1489758748,
          "body_markdown": "That should be:\r\n\r\n    &lt;div ng-bind-html=&quot;trustedHtml&quot;&gt;&lt;/div&gt;\r\n\r\nplus in your controller:\r\n\r\n    $scope.html = &#39;&lt;ul&gt;&lt;li&gt;render me please&lt;/li&gt;&lt;/ul&gt;&#39;;\r\n    $scope.trustedHtml = $sce.trustAsHtml($scope.html);\r\n\r\ninstead of old syntax, where you could reference `$scope.html` variable directly:\r\n\r\n    &lt;div ng-bind-html-unsafe=&quot;html&quot;&gt;&lt;/div&gt;\r\n\r\nAs several commenters pointed out, `$sce` has to be injected in the controller, otherwise you will get `$sce undefined` error.\r\n\r\n     var myApp = angular.module(&#39;myApp&#39;,[]);\r\n    \r\n     myApp.controller(&#39;MyController&#39;, [&#39;$sce&#39;, function($sce) {\r\n     \t// ... [your code]\r\n     }]);"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1381022012,
          "answer_id": 19204391,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1463472924,
          "last_edit_date": 1463472924,
          "body_markdown": "Personally I sanitize all my data with some PHP libraries before going into the database so there&#39;s no need for another XSS filter for me.\r\n\r\nFrom AngularJS 1.0.8\r\n\r\n    directives.directive(&#39;ngBindHtmlUnsafe&#39;, [function() {\r\n    \treturn function(scope, element, attr) {\r\n    \t\telement.addClass(&#39;ng-binding&#39;).data(&#39;$binding&#39;, attr.ngBindHtmlUnsafe);\r\n    \t\tscope.$watch(attr.ngBindHtmlUnsafe, function ngBindHtmlUnsafeWatchAction(value) {\r\n    \t\t\telement.html(value || &#39;&#39;);\r\n    \t\t});\r\n    \t}\r\n    }]);\r\n\r\nTo use:\r\n\r\n    &lt;div ng-bind-html-unsafe=&quot;group.description&quot;&gt;&lt;/div&gt;\r\n\r\nTo disable `$sce`:\r\n\r\n    app.config([&#39;$sceProvider&#39;, function($sceProvider) {\r\n    \t$sceProvider.enabled(false);\r\n    }]);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1383218406,
          "answer_id": 19705096,
          "path": "stack.bower.answer",
          "score": 573,
          "up_vote_count": 573,
          "is_accepted": false,
          "last_activity_date": 1414952281,
          "last_edit_date": 1414952281,
          "body_markdown": "**Filter**\r\n\r\n    app.filter(&#39;unsafe&#39;, function($sce) { return $sce.trustAsHtml; });\r\n\r\n**Usage**\r\n\r\n    &lt;ANY ng-bind-html=&quot;value | unsafe&quot;&gt;&lt;/ANY&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410181565,
          "answer_id": 25725001,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1410181565,
          "body_markdown": "If you want the old directive back, you can add this to your app:\r\n\r\n**Directive:** \r\n\r\n    directives.directive(&#39;ngBindHtmlUnsafe&#39;, [&#39;$sce&#39;, function($sce){\r\n        return {\r\n            scope: {\r\n                ngBindHtmlUnsafe: &#39;=&#39;,\r\n            },\r\n            template: &quot;&lt;div ng-bind-html=&#39;trustedHtml&#39;&gt;&lt;/div&gt;&quot;,\r\n            link: function($scope, iElm, iAttrs, controller) {\r\n                $scope.updateView = function() {\r\n                    $scope.trustedHtml = $sce.trustAsHtml($scope.ngBindHtmlUnsafe);\r\n                }\r\n    \r\n                $scope.$watch(&#39;ngBindHtmlUnsafe&#39;, function(newVal, oldVal) {\r\n                    $scope.updateView(newVal);\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\n**Usage**\r\n\r\n    &lt;div ng-bind-html-unsafe=&quot;group.description&quot;&gt;&lt;/div&gt;\r\n\r\n[Source - https://github.com/angular-ui/bootstrap/issues/813][1]\r\n\r\n\r\n  [1]: https://github.com/angular-ui/bootstrap/issues/813"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1427176376,
          "answer_id": 29225894,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1453469769,
          "last_edit_date": 1453469769,
          "body_markdown": "JavaScript\r\n\r\n    $scope.get_pre = function(x) {\r\n        return $sce.trustAsHtml(x);\r\n    };\r\n\r\nHTML\r\n\r\n    &lt;pre ng-bind-html=&quot;get_pre(html)&quot;&gt;&lt;/pre&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1445573547,
          "answer_id": 33294756,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1445573547,
          "body_markdown": "For **Rails** (at least in my case) if you are using the **angularjs-rails gem**, please remember to add the sanitize module\r\n\r\n    //= require angular\r\n    //= require angular-sanitize\r\n\r\nAnd then load it up in your app...\r\n\r\n    var myDummyApp = angular.module(&#39;myDummyApp&#39;, [&#39;ngSanitize&#39;]);\r\n\r\nThen you can do the following:\r\n\r\nOn the template:\r\n\r\n    %span{&quot;ng-bind-html&quot;=&gt;&quot;phone_with_break(x)&quot;}\r\n\r\nAnd eventually:\r\n\r\n    $scope.phone_with_break = function (x) {\r\n      if (x.phone != &quot;&quot;) {\r\n       return x.phone + &quot;&lt;br&gt;&quot;;\r\n      }\r\n      return &#39;&#39;;\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1457179788,
          "answer_id": 35813932,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1457179788,
          "body_markdown": "`var line = &quot;&lt;label onclick=&quot;alert(1)&quot;&gt;aaa&lt;/label&gt;&quot;;`\r\n### 1. use filter \r\n\r\n    app.filter(&#39;unsafe&#39;, function($sce) { return $sce.trustAsHtml; });\r\nusing (html):\r\n\r\n    &lt;span ng-bind-html=&quot;line | unsafe&quot;&gt;&lt;/span&gt;\r\n    ==&gt;click `aaa` show alert box\r\n\r\n### 2. use ngSanitize : safer\r\n include `angular-sanitize.js`\r\n\r\n    &lt;script src=&quot;bower_components/angular-sanitize/angular-sanitize.js&quot;&gt;&lt;/script&gt;\r\n add **`ngSanitize`** in root angular app\r\n\r\n    var app = angular.module(&quot;app&quot;, [&quot;ngSanitize&quot;]);\r\nusing (html):\r\n\r\n    &lt;span ng-bind-html=&quot;line&quot;&gt;&lt;/span&gt;\r\n    ==&gt;click `aaa` nothing happen"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1499324861,
          "answer_id": 44941984,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1499324861,
          "body_markdown": "Simply creating a filter will do the trick. (Answered for Angular 1.6)\r\n\r\n    .filter(&#39;trustHtml&#39;, [\r\n            &#39;$sce&#39;,\r\n            function($sce) {\r\n                return function(value) {\r\n                    return $sce.trustAs(&#39;html&#39;, value);\r\n                }\r\n            }\r\n        ]);\r\n\r\nAnd use this as follow in the html.\r\n\r\n    &lt;h2 ng-bind-html=&quot;someScopeValue | trustHtml&quot;&gt;&lt;/h2&gt;"
        }
      ],
      "title": "How do you use $sce.trustAsHtml(string) to replicate ng-bind-html-unsafe in Angular 1.2+",
      "view_count": 184446,
      "answer_count": 8,
      "code_snippet": [
        "<code>ng-bind-html-unsafe</code>",
        "<code>ng-bind-html-unsafe</code>",
        "<code>&lt;div ng-bind-html=\"trustedHtml\"&gt;&lt;/div&gt;\n</code>",
        "<code>$scope.html = '&lt;ul&gt;&lt;li&gt;render me please&lt;/li&gt;&lt;/ul&gt;';\n$scope.trustedHtml = $sce.trustAsHtml($scope.html);\n</code>",
        "<code>$scope.html</code>",
        "<code>&lt;div ng-bind-html-unsafe=\"html\"&gt;&lt;/div&gt;\n</code>",
        "<code>$sce</code>",
        "<code>$sce undefined</code>",
        "<code> var myApp = angular.module('myApp',[]);\n\n myApp.controller('MyController', ['$sce', function($sce) {\n    // ... [your code]\n }]);\n</code>",
        "<code>&lt;p ng-bind-html=\"trustedHtml\"&gt;&lt;/p&gt;</code>",
        "<code>$scope.trustedHtml = $sce.trustAsHtml(description(category.id));</code>",
        "<code>&lt;p ng-bind-html=\"description(category.id)\"&gt;&lt;/p&gt;</code>",
        "<code>return $sce.trustAsHtml(value);</code>",
        "<code>app.filter('unsafe', function($sce) { return $sce.trustAsHtml; });\n</code>",
        "<code>&lt;ANY ng-bind-html=\"value | unsafe\"&gt;&lt;/ANY&gt;\n</code>",
        "<code>ngSanitize</code>",
        "<code>ngSanitize</code>",
        "<code>ngSanitize</code>",
        "<code>directives.directive('ngBindHtmlUnsafe', [function() {\n    return function(scope, element, attr) {\n        element.addClass('ng-binding').data('$binding', attr.ngBindHtmlUnsafe);\n        scope.$watch(attr.ngBindHtmlUnsafe, function ngBindHtmlUnsafeWatchAction(value) {\n            element.html(value || '');\n        });\n    }\n}]);\n</code>",
        "<code>&lt;div ng-bind-html-unsafe=\"group.description\"&gt;&lt;/div&gt;\n</code>",
        "<code>$sce</code>",
        "<code>app.config(['$sceProvider', function($sceProvider) {\n    $sceProvider.enabled(false);\n}]);\n</code>",
        "<code>&lt;script&gt;System.out.printIn(\"Hello World!\");&lt;/script&gt;</code>",
        "<code>var line = \"&lt;label onclick=\"alert(1)\"&gt;aaa&lt;/label&gt;\";</code>",
        "<code>app.filter('unsafe', function($sce) { return $sce.trustAsHtml; });\n</code>",
        "<code>&lt;span ng-bind-html=\"line | unsafe\"&gt;&lt;/span&gt;\n==&gt;click `aaa` show alert box\n</code>",
        "<code>angular-sanitize.js</code>",
        "<code>&lt;script src=\"bower_components/angular-sanitize/angular-sanitize.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>ngSanitize</code>",
        "<code>var app = angular.module(\"app\", [\"ngSanitize\"]);\n</code>",
        "<code>&lt;span ng-bind-html=\"line\"&gt;&lt;/span&gt;\n==&gt;click `aaa` nothing happen\n</code>",
        "<code>.filter('trustHtml', [\n        '$sce',\n        function($sce) {\n            return function(value) {\n                return $sce.trustAs('html', value);\n            }\n        }\n    ]);\n</code>",
        "<code>&lt;h2 ng-bind-html=\"someScopeValue | trustHtml\"&gt;&lt;/h2&gt;\n</code>",
        "<code>directives.directive('ngBindHtmlUnsafe', ['$sce', function($sce){\n    return {\n        scope: {\n            ngBindHtmlUnsafe: '=',\n        },\n        template: \"&lt;div ng-bind-html='trustedHtml'&gt;&lt;/div&gt;\",\n        link: function($scope, iElm, iAttrs, controller) {\n            $scope.updateView = function() {\n                $scope.trustedHtml = $sce.trustAsHtml($scope.ngBindHtmlUnsafe);\n            }\n\n            $scope.$watch('ngBindHtmlUnsafe', function(newVal, oldVal) {\n                $scope.updateView(newVal);\n            });\n        }\n    };\n}]);\n</code>",
        "<code>&lt;div ng-bind-html-unsafe=\"group.description\"&gt;&lt;/div&gt;\n</code>",
        "<code>$scope.get_pre = function(x) {\n    return $sce.trustAsHtml(x);\n};\n</code>",
        "<code>&lt;pre ng-bind-html=\"get_pre(html)\"&gt;&lt;/pre&gt;\n</code>",
        "<code>//= require angular\n//= require angular-sanitize\n</code>",
        "<code>var myDummyApp = angular.module('myDummyApp', ['ngSanitize']);\n</code>",
        "<code>%span{\"ng-bind-html\"=&gt;\"phone_with_break(x)\"}\n</code>",
        "<code>$scope.phone_with_break = function (x) {\n  if (x.phone != \"\") {\n   return x.phone + \"&lt;br&gt;\";\n  }\n  return '';\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs",
        "post",
        "angular-http"
      ],
      "creation_date": 1381252068,
      "body_markdown": "Could anyone tell me why the following statement does not send the post data to the designated url? The url is called but on the server when I print $_POST - I get an empty array. If I print message in the console before adding it to the data - it shows the correct content.\r\n\r\n    $http.post(&#39;request-url&#39;,  { &#39;message&#39; : message });\r\n\r\nI&#39;ve also tried it with the data as string (with the same outcome):\r\n\r\n    $http.post(&#39;request-url&#39;,  &quot;message=&quot; + message);\r\n\r\nIt seem to be working when I use it in the following format:\r\n\r\n    $http({\r\n        method: &#39;POST&#39;,\r\n        url: &#39;request-url&#39;,\r\n        data: &quot;message=&quot; + message,\r\n        headers: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}\r\n    });\r\n\r\nbut is there a way of doing it with the $http.post() - and do I always have to include the header in order for it to work? I believe that the above content type is specifying format of the sent data, but can I send it as javascript object?",
      "last_edit_date": 1472639771,
      "up_vote_count": 313,
      "link": "https://stackoverflow.com/questions/19254029/angularjs-http-post-does-not-send-data",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1381252488,
          "answer_id": 19254137,
          "path": "stack.bower.answer",
          "score": 74,
          "up_vote_count": 75,
          "is_accepted": false,
          "last_activity_date": 1429904451,
          "last_edit_date": 1429904451,
          "body_markdown": "You can set the default &quot;Content-Type&quot; like this:\r\n\r\n    $http.defaults.headers.post[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded&quot;;\r\n\r\nAbout the `data` format:\r\n\r\n&gt;The $http.post and $http.put methods accept any JavaScript object (or a string) value as their data parameter. If data is a JavaScript object it will be, by default, converted to a JSON string.\r\n\r\nTry to use this variation\r\n\r\n    function sendData($scope) {\r\n        $http({\r\n            url: &#39;request-url&#39;,\r\n            method: &quot;POST&quot;,\r\n            data: { &#39;message&#39; : message }\r\n        })\r\n        .then(function(response) {\r\n                // success\r\n        }, \r\n        function(response) { // optional\r\n                // failed\r\n        });\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1385685939,
          "answer_id": 20276775,
          "path": "stack.bower.answer",
          "score": 328,
          "up_vote_count": 329,
          "is_accepted": true,
          "last_activity_date": 1436959920,
          "last_edit_date": 1436959920,
          "body_markdown": "I had the same problem using asp.net MVC and [found the solution here](http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/)\r\n\r\n&gt; There is much confusion among newcomers to **AngularJS** as to why the\r\n&gt; `$http` service shorthand functions (`$http.post()`, etc.) don’t appear to\r\n&gt; be swappable with the **jQuery** equivalents (`jQuery.post()`, etc.)\r\n&gt; \r\n&gt; The difference is in how **jQuery** and **AngularJS** serialize and transmit the data. Fundamentally, the problem lies with your server language of choice being unable to understand AngularJS’s transmission natively ... By default, **jQuery** transmits data using \r\n&gt;\r\n    Content-Type: x-www-form-urlencoded\r\n\r\n&gt;and the familiar `foo=bar&amp;baz=moe` serialization.\r\n&gt;\r\n **AngularJS**, however, transmits data using \r\n&gt;\r\n    Content-Type: application/json \r\n\r\n&gt;and `{ &quot;foo&quot;: &quot;bar&quot;, &quot;baz&quot;: &quot;moe&quot; }`\r\n\r\n&gt;JSON serialization, which unfortunately some Web server languages—*notably\r\n PHP*—do not unserialize natively.\r\n\r\nWorks like a charm.\r\n\r\n&lt;b&gt;CODE&lt;/b&gt;\r\n\r\n    // Your app&#39;s root module...\r\n    angular.module(&#39;MyModule&#39;, [], function($httpProvider) {\r\n      // Use x-www-form-urlencoded Content-Type\r\n      $httpProvider.defaults.headers.post[&#39;Content-Type&#39;] = &#39;application/x-www-form-urlencoded;charset=utf-8&#39;;\r\n     \r\n      /**\r\n       * The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n       * @param {Object} obj\r\n       * @return {String}\r\n       */ \r\n      var param = function(obj) {\r\n        var query = &#39;&#39;, name, value, fullSubName, subName, subValue, innerObj, i;\r\n          \r\n        for(name in obj) {\r\n          value = obj[name];\r\n            \r\n          if(value instanceof Array) {\r\n            for(i=0; i&lt;value.length; ++i) {\r\n              subValue = value[i];\r\n              fullSubName = name + &#39;[&#39; + i + &#39;]&#39;;\r\n              innerObj = {};\r\n              innerObj[fullSubName] = subValue;\r\n              query += param(innerObj) + &#39;&amp;&#39;;\r\n            }\r\n          }\r\n          else if(value instanceof Object) {\r\n            for(subName in value) {\r\n              subValue = value[subName];\r\n              fullSubName = name + &#39;[&#39; + subName + &#39;]&#39;;\r\n              innerObj = {};\r\n              innerObj[fullSubName] = subValue;\r\n              query += param(innerObj) + &#39;&amp;&#39;;\r\n            }\r\n          }\r\n          else if(value !== undefined &amp;&amp; value !== null)\r\n            query += encodeURIComponent(name) + &#39;=&#39; + encodeURIComponent(value) + &#39;&amp;&#39;;\r\n        }\r\n          \r\n        return query.length ? query.substr(0, query.length - 1) : query;\r\n      };\r\n     \r\n      // Override $http service&#39;s default transformRequest\r\n      $httpProvider.defaults.transformRequest = [function(data) {\r\n        return angular.isObject(data) &amp;&amp; String(data) !== &#39;[object File]&#39; ? param(data) : data;\r\n      }];\r\n    });\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1400720562,
          "answer_id": 23796228,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1400720562,
          "body_markdown": "I know has ***accepted*** answer. But, following might help to future readers, if the answer doesn&#39;t suit them for any reason.\r\n\r\nAngular doesn&#39;t do ajax same as jQuery. While I tried to follow the guide to modify angular `$httpprovider` , I encountered other problems. E.g. I use codeigniter in which `$this-&gt;input-&gt;is_ajax_request()` function always failed (which was written by another programmer and used globally, so cant change) saying this was not real ajax request.\r\n\r\nTo solve it, I took help of [deferred promise][1].  I tested it in Firefox, and ie9 and it worked.\r\n\r\nI have following function defined ***outside*** any of the angular code. This function makes regular jquery ajax call and returns deferred/promise (I&#39;m still learning) object.\r\n\r\n    function getjQueryAjax(url, obj){\r\n\t    return $.ajax({\r\n\t\t\ttype: &#39;post&#39;,\r\n\t\t\turl: url,\r\n\t\t\tcache: true,\r\n\t\t\tdata: obj\r\n\t\t});\r\n    }\r\n\r\nThen I&#39;m calling it angular code using the following code. Please note that we have to update the `$scope` manually using `$scope.$apply()` .\r\n\r\n    \tvar data = {\r\n\t\t\tmedia: &quot;video&quot;,\r\n\t\t\tscope: &quot;movies&quot;\r\n\t\t};\r\n\t\tvar rPromise = getjQueryAjax(&quot;myController/getMeTypes&quot; , data);\r\n\t\trPromise.success(function(response){\r\n\t\t\tconsole.log(response);\r\n\t\t\t$scope.$apply(function(){\r\n\t\t\t\t$scope.testData = JSON.parse(response);\r\n\t\t\t\tconsole.log($scope.testData);\r\n\t\t\t});\r\n\t\t}).error(function(){\r\n\t\t\tconsole.log(&quot;AJAX failed!&quot;);\r\n\t\t});\r\n\r\n\r\n&lt;hr&gt;\r\n\r\nThis may not be the perfect answer, but it allowed me to use jquery ajax calls with angular and allowed me to update the `$scope`.\r\n\r\n\r\n  [1]: https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1401508450,
          "answer_id": 23966224,
          "path": "stack.bower.answer",
          "score": 53,
          "up_vote_count": 53,
          "is_accepted": false,
          "last_activity_date": 1401508450,
          "last_edit_date": 1495542878,
          "body_markdown": "I have had a similar issue, and I wonder if this can be useful as well: https://stackoverflow.com/a/11443066\r\n\r\n    var xsrf = $.param({fkey: &quot;key&quot;});\r\n    $http({\r\n        method: &#39;POST&#39;,\r\n        url: url,\r\n        data: xsrf,\r\n        headers: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}\r\n    })\r\n\r\nRegards,"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1409321459,
          "answer_id": 25570077,
          "path": "stack.bower.answer",
          "score": 32,
          "up_vote_count": 32,
          "is_accepted": false,
          "last_activity_date": 1423060221,
          "last_edit_date": 1423060221,
          "body_markdown": "I like to use a function to convert objects to post params.\r\n\r\n    myobject = {&#39;one&#39;:&#39;1&#39;,&#39;two&#39;:&#39;2&#39;,&#39;three&#39;:&#39;3&#39;}\r\n\r\n    Object.toparams = function ObjecttoParams(obj) {\r\n        var p = [];\r\n        for (var key in obj) {\r\n            p.push(key + &#39;=&#39; + encodeURIComponent(obj[key]));\r\n        }\r\n        return p.join(&#39;&amp;&#39;);\r\n    };\r\n\r\n    $http({\r\n        method: &#39;POST&#39;,\r\n        url: url,\r\n        data: Object.toparams(myobject),\r\n        headers: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}\r\n    })"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413054800,
          "answer_id": 26318292,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1415390824,
          "last_edit_date": 1415390824,
          "body_markdown": "I had the same problem with AngularJS and Node.js + Express 4 + Router\r\n\r\nRouter expects the data from post&#39;s request in body. This body was always empty if i followed the example from Angular Docs \r\n\r\nNotation 1\r\n\r\n    $http.post(&#39;/someUrl&#39;, {msg:&#39;hello word!&#39;})\r\n\r\nBut if i used it in the data\r\n\r\nNotation 2 \r\n\r\n    $http({\r\n           withCredentials: false,\r\n           method: &#39;post&#39;,\r\n           url: yourUrl,\r\n           headers: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;},\r\n           data: postData\r\n     });\r\n\r\nEdit 1:\r\n\r\nOtherwise node.js router will expect the data in req.body if used notation 1:\r\n\r\n    req.body.msg\r\n\r\nWhich also sends the information as JSON payload. This is better in some cases where you have arrays in your json and x-www-form-urlencoded will give some problems.\r\n\r\n\r\nit worked. Hope it helps."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1414427757,
          "answer_id": 26592352,
          "path": "stack.bower.answer",
          "score": 108,
          "up_vote_count": 109,
          "is_accepted": false,
          "last_activity_date": 1425345270,
          "last_edit_date": 1425345270,
          "body_markdown": "It&#39;s not super clear above, but if you are receiving the request in PHP you can use:\r\n\r\n&lt;code&gt;$params = json_decode(file_get_contents(&#39;php://input&#39;),true);&lt;/code&gt;\r\n\r\nTo access an array in PHP from an AngularJS POST.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1416428899,
          "answer_id": 27026361,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1416428899,
          "body_markdown": "To build on @felipe-miosso&#39;s answer: \r\n\r\n 1. Download it as an AngularJS module from [here][1],\r\n 1. Install it\r\n 1. Add it to your application:\r\n\r\n        var app = angular.module(&#39;my_app&#39;, [ ... , &#39;httpPostFix&#39;]);\r\n\r\n\r\n  [1]: https://gist.github.com/thinkadoo/9362570/raw/92c2fffb396a2c1e4a85becb094fe87ab18d0efc/angular-post-fix.js"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1421932579,
          "answer_id": 28089734,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1421932579,
          "body_markdown": "I also faced similar problem and i was doing something like this and that didn&#39;t worked. My Spring controller was not able read data parameter.\r\n\r\n    var paramsVal={data:&#39;&quot;id&quot;:&quot;1&quot;&#39;};\r\n      $http.post(&quot;Request URL&quot;,  {params: paramsVal});\t\r\n\r\nBut reading this forum and API Doc, I tried following  way and that worked for me.\r\nIf some one also have similar problem, You can try below way as well.\r\n\r\n    $http({\r\n          method: &#39;POST&#39;,\r\n          url: &quot;Request URL&quot;,     \t\t\r\n          params: paramsVal,\r\n          headers: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded;charset=utf-8&#39;}\r\n         \t\t});\r\nPlease check https://docs.angularjs.org/api/ng/service/$http#post  for what param config does.\r\n{data:&#39;&quot;id&quot;:&quot;1&quot;&#39;} – Map of strings or objects which will be turned to URL?data=&quot;id:1&quot; "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1423513931,
          "answer_id": 28418793,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1423513931,
          "body_markdown": "When I had this problem the parameter I was posting turned out to be an array of objects instead of a simple object."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1424553359,
          "answer_id": 28651424,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1424553359,
          "body_markdown": "I don&#39;t have the reputation to comment, but in response/addition to Don F&#39;s answer:\r\n\r\n`$params = json_decode(file_get_contents(&#39;php://input&#39;));`\r\n\r\nA second parameter of `true` needs to be added to the `json_decode` function in order to properly return an associative array:\r\n\r\n`$params = json_decode(file_get_contents(&#39;php://input&#39;), true);`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429324265,
          "answer_id": 29712242,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1429676726,
          "last_edit_date": 1429676726,
          "body_markdown": "Unlike JQuery and for the sake of pedantry, Angular uses JSON format for POST \r\ndata *transfer* from a client to the server (JQuery applies x-www-form-urlencoded presumably, although JQuery and Angular uses JSON for data imput). Therefore there are two parts of problem: in js client part and in your server part. So you need:\r\n\r\n1. put js Angular client part like this:\r\n\r\n\t\t$http({\r\n\t\tmethod: &#39;POST&#39;,\r\n\t\turl: &#39;request-url&#39;,\r\n\t\tdata: {&#39;message&#39;: &#39;Hello world&#39;}\r\n\t\t});\r\n\r\n\r\n\r\n**AND**\r\n\r\n2. write in your server part to receive data from a client (if it is php).\r\n\r\n\t\t\t\t$data \t\t\t\t= file_get_contents(&quot;php://input&quot;);\r\n\t\t\t\t$dataJsonDecode \t= json_decode($data);\r\n\t\t\t\t$message\t\t\t= $dataJsonDecode-&gt;message;\r\n\t\t\t\techo $message;     //&#39;Hello world&#39;\r\n    \r\n    \r\nNote: $_POST will not work!\r\n\r\nThe solution works for me fine, hopefully, and for you."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430604357,
          "answer_id": 30008012,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1430604357,
          "body_markdown": "I had the same problem in express .. to resolve you have to use bodyparser to parse json objects before sending http requests .. \r\n\r\n    app.use(bodyParser.json());\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430674313,
          "answer_id": 30017070,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1430680001,
          "last_edit_date": 1430680001,
          "body_markdown": "Just updated from angular 1.2 to 1.3, have found a problem in the code. Transforming a resource will lead to an endless-loop because (I think) of the $promise holding again the same object. Maybe it will help someone...\r\n\r\nI could fix that by:\r\n    \r\n    [...]\r\n      /**\r\n     * The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n     * @param {Object} obj\r\n     * @return {String}\r\n     */\r\n    var param = function (obj) {\r\n    var query = &#39;&#39;, name, value, fullSubName, subName, subValue, innerObj, i;\r\n\r\n    angular.forEach(obj, function(value, name) {\r\n    +    if(name.indexOf(&quot;$promise&quot;) != -1) {\r\n    +        return;\r\n    +    }\r\n\r\n        value = obj[name];\r\n        if (value instanceof Array) {\r\n            for (i = 0; i &lt; value.length; ++i) {\r\n    [...]"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431773452,
          "answer_id": 30274719,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1431773452,
          "body_markdown": "To send data via Post methode with `$http` of angularjs you need to change \r\n\r\n`data: &quot;message=&quot; + message`, with  `data: $.param({message:message})`"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1432379086,
          "answer_id": 30411936,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1432379086,
          "body_markdown": "I solved this by below codes:\r\n\r\nClient Side (Js):\r\n \r\n         $http({\r\n                    url: me.serverPath,\r\n                    method: &#39;POST&#39;,\r\n                    data: data,\r\n                    headers: { &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39; },\r\n                }).\r\n                    success(function (serverData) {\r\n                        console.log(&quot;ServerData:&quot;, serverData);\r\n        ......\r\n\r\n\r\nnotice that data is an object.\r\n\r\n\r\nOn the server (ASP.NET MVC):\r\n\r\n    [AllowCrossSiteJson]\r\n            public string Api()\r\n            {\r\n                var data = JsonConvert.DeserializeObject&lt;AgentRequest&gt;(Request.Form[0]);\r\n                if (data == null) return &quot;Null Request&quot;;\r\n                var bl = Page.Bl = new Core(this);\r\n    \r\n                return data.methodName;\r\n            }\r\n\r\nand &#39;AllowCrossSiteJsonAttribute&#39; is needed for cross domain requests:\r\n\r\n    public class AllowCrossSiteJsonAttribute : ActionFilterAttribute\r\n        {\r\n            public override void OnActionExecuting(ActionExecutingContext filterContext)\r\n            {\r\n                filterContext.RequestContext.HttpContext.Response.AddHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);\r\n                base.OnActionExecuting(filterContext);\r\n            }\r\n        }\r\n\r\n\r\n\r\nHope this was useful."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437135537,
          "answer_id": 31475710,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1437135860,
          "last_edit_date": 1437135860,
          "body_markdown": "I use [jQuery param][1] with [AngularJS post][2] requrest. Here is a example ... create AngularJS application module, where `myapp` is defined with `ng-app` in your HTML code.\r\n\r\n\tvar app = angular.module(&#39;myapp&#39;, []);\r\n\t\r\nNow let us create a Login controller and POST email and password.\r\n\r\n\tapp.controller(&#39;LoginController&#39;, [&#39;$scope&#39;, &#39;$http&#39;, function ($scope, $http) {\r\n\t\t// default post header\r\n\t\t$http.defaults.headers.post[&#39;Content-Type&#39;] = &#39;application/x-www-form-urlencoded;charset=utf-8&#39;;\r\n\t\t// send login data\r\n\t\t$http({\r\n\t\t\tmethod: &#39;POST&#39;,\r\n\t\t\turl: &#39;https://example.com/user/login&#39;,\r\n\t\t\tdata: $.param({\r\n\t\t\t\temail: $scope.email,\r\n\t\t\t\tpassword: $scope.password\r\n\t\t\t}),\r\n\t\t\theaders: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;}\r\n\t\t}).success(function (data, status, headers, config) {\r\n\t\t\t// handle success things\r\n\t\t}).error(function (data, status, headers, config) {\r\n\t\t\t// handle error things\r\n\t\t});\r\n\t}]);\r\n\r\nI don&#39;t like to exaplain the code, it is simple enough to understand :) Note that `param` is from jQuery, so you must install both jQuery and AngularJS to make it working. Here is a screenshot.\r\n\r\n![enter image description here][3]\r\n\r\nHope this is helpful. Thanks!\r\n\r\n\r\n  [1]: http://api.jquery.com/jquery.param/\r\n  [2]: https://docs.angularjs.org/api/ng/service/$http#post\r\n  [3]: http://i.stack.imgur.com/STv5A.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437403192,
          "answer_id": 31519375,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1437403192,
          "body_markdown": "&gt; I am using asp.net WCF webservices with angular js and below code\r\n&gt; worked:\r\n\r\n     $http({\r\n            contentType: &quot;application/json; charset=utf-8&quot;,//required\r\n            method: &quot;POST&quot;,\r\n            url: &#39;../../operation/Service.svc/user_forget&#39;,\r\n            dataType: &quot;json&quot;,//optional\r\n            data:{ &quot;uid_or_phone&quot;: $scope.forgettel, &quot;user_email&quot;: $scope.forgetemail },\r\n            async: &quot;isAsync&quot;//optional\r\n                            \r\n           }).success( function (response) {\r\n        \r\n             $scope.userforgeterror = response.d;                    \r\n           })\r\n\r\nHope it helps."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437577632,
          "answer_id": 31567065,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1437577632,
          "body_markdown": "Angular\r\n \r\n \r\n\r\n      var payload = $.param({ jobId: 2 });\r\n        \r\n                    this.$http({\r\n                        method: &#39;POST&#39;,\r\n                        url: &#39;web/api/ResourceAction/processfile&#39;,\r\n                        data: payload,\r\n                        headers: { &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39; }\r\n                    });\r\n\r\n\r\nWebAPI 2\r\n\r\n    public class AcceptJobParams\r\n            {\r\n                public int jobId { get; set; }\r\n            }\r\n    \r\n            public IHttpActionResult ProcessFile([FromBody]AcceptJobParams thing)\r\n            {\r\n                // do something with fileName parameter\r\n    \r\n                return Ok();\r\n            }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438010515,
          "answer_id": 31656986,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1438010515,
          "body_markdown": "This code solved the issue for me. It is an application-level solution:\r\n\r\n    moduleName.config([&#39;$httpProvider&#39;,\r\n      function($httpProvider) {\r\n        $httpProvider.defaults.transformRequest.push(function(data) {\r\n            var requestStr;\r\n            if (data) {\r\n                data = JSON.parse(data);\r\n                for (var key in data) {\r\n                    if (requestStr) {\r\n                        requestStr += &quot;&amp;&quot; + key + &quot;=&quot; + data[key];\r\n                    } else {\r\n                        requestStr = key + &quot;=&quot; + data[key];\r\n                    }\r\n                }\r\n            }\r\n            return requestStr;\r\n        });\r\n        $httpProvider.defaults.headers.post[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded&quot;;\r\n      }\r\n    ]);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1441005535,
          "answer_id": 32305861,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1441005535,
          "body_markdown": "use this way. no need to write so much\r\n\r\n     isAuth = $http.post(&quot;Yr URL&quot;, {username: username, password: password});\r\n\r\nand in the nodejs back end\r\n\r\n\r\n    app.post(&quot;Yr URL&quot;,function(req,resp)\r\n    {\r\n    \r\n      var username = req.body.username||req.param(&#39;username&#39;);\r\n      var password = req.body.password||req.param(&#39;password&#39;);\r\n    }\r\n\r\n\r\nI hope this helps\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1441902333,
          "answer_id": 32507103,
          "path": "stack.bower.answer",
          "score": 27,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1441902333,
          "body_markdown": "This has finally been addressed in angular 1.4 using **$httpParamSerializerJQLike**\r\n\r\nSee https://github.com/angular/angular.js/issues/6039\r\n\r\n    .controller(&#39;myCtrl&#39;, function($http, $httpParamSerializerJQLike) {\r\n    $http({\r\n      method: &#39;POST&#39;,\r\n      url: baseUrl,\r\n      data: $httpParamSerializerJQLike({\r\n        &quot;user&quot;:{\r\n          &quot;email&quot;:&quot;wahxxx@gmail.com&quot;,\r\n          &quot;password&quot;:&quot;123456&quot;\r\n        }\r\n      }),\r\n      headers:\r\n        &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;\r\n    })})\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1442718232,
          "answer_id": 32675340,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1442718232,
          "body_markdown": "I wrote a small **PHP helper function** that allows both types of input parameters :\r\n\r\n    function getArgs () {\r\n\t\tif ($input = file_get_contents(&#39;php://input&#39;) &amp;&amp; $input_params = json_decode($input,true))\r\n\t\t\treturn $input_params + $_POST + $_GET;\r\n\t\treturn $_POST + $_GET;\r\n\t}\r\n\r\nUsage : \r\n\r\n\r\n    &lt;?php\r\n\t\tinclude(&quot;util.php&quot;); # above code\r\n\t\t$request = getArgs();\r\n\t\t\r\n\t\t$myVar = &quot;&quot;;\r\n\t\tif (isset($request[&#39;myVar&#39;]))\r\n\t\t\t$myVar = $request[&#39;myVar&#39;];\r\n\t?&gt;\r\n\r\nTherefore no changes required to your JavaScript."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444171224,
          "answer_id": 32980967,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1444171224,
          "body_markdown": "I&#39;ve been using the accepted answer&#39;s code (Felipe&#39;s code) for a while and it&#39;s been working great (thanks, Felipe!).\r\n\r\nHowever, recently I discovered that it has issues with empty objects or arrays.\r\nFor example, when submitting this object:\r\n\r\n    {\r\n        A: 1,\r\n        B: {\r\n            a: [ ],\r\n        },\r\n        C: [ ],\r\n        D: &quot;2&quot;\r\n    }\r\n\r\nPHP doesn&#39;t seem to see B and C at all. It gets this:\r\n\r\n    [\r\n        &quot;A&quot; =&gt; &quot;1&quot;,\r\n        &quot;B&quot; =&gt; &quot;2&quot;\r\n    ]\r\n\r\nA look at the actual request in Chrome shows this:\r\n\r\n    A: 1\r\n    :\r\n    D: 2\r\n\r\nI wrote an alternative code snippet. It seems to work well with my use-cases but I haven&#39;t tested it extensively so use with caution.\r\n\r\nI used TypeScript because I like strong typing but it would be easy to convert to pure JS:\r\n\r\n    angular.module(&quot;MyModule&quot;).config([ &quot;$httpProvider&quot;, function($httpProvider: ng.IHttpProvider) {\r\n        // Use x-www-form-urlencoded Content-Type\r\n        $httpProvider.defaults.headers.post[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded;charset=utf-8&quot;;\r\n\r\n        function phpize(obj: Object | any[], depth: number = 1): string[] {\r\n            var arr: string[] = [ ];\r\n            angular.forEach(obj, (value: any, key: string) =&gt; {\r\n                if (angular.isObject(value) || angular.isArray(value)) {\r\n                    var arrInner: string[] = phpize(value, depth + 1);\r\n                    var tmpKey: string;\r\n                    var encodedKey = encodeURIComponent(key);\r\n                    if (depth == 1) tmpKey = encodedKey;\r\n                    else tmpKey = `[${encodedKey}]`;\r\n                    if (arrInner.length == 0) {\r\n                        arr.push(`${tmpKey}=`);\r\n                    }\r\n                    else {\r\n                        arr = arr.concat(arrInner.map(inner =&gt; `${tmpKey}${inner}`));\r\n                    }\r\n                }\r\n                else {\r\n                    var encodedKey = encodeURIComponent(key);\r\n                    var encodedValue;\r\n                    if (angular.isUndefined(value) || value === null) encodedValue = &quot;&quot;;\r\n                    else encodedValue = encodeURIComponent(value);\r\n\r\n                    if (depth == 1) {\r\n                        arr.push(`${encodedKey}=${encodedValue}`);\r\n                    }\r\n                    else {\r\n                        arr.push(`[${encodedKey}]=${encodedValue}`);\r\n                    }\r\n                }\r\n            });\r\n            return arr;\r\n        }\r\n\r\n        // Override $http service&#39;s default transformRequest\r\n        (&lt;any&gt;$httpProvider.defaults).transformRequest = [ function(data: any) {\r\n            if (!angular.isObject(data) || data.toString() == &quot;[object File]&quot;) return data;\r\n            return phpize(data).join(&quot;&amp;&quot;);\r\n        } ];\r\n    } ]);\r\n\r\nIt&#39;s less efficient than Felipe&#39;s code but I don&#39;t think it matters much since it should be immediate compared to the overall overhead of the HTTP request itself.\r\n\r\nNow PHP shows:\r\n\r\n    [\r\n    \t&quot;A&quot; =&gt; &quot;1&quot;,\r\n    \t&quot;B&quot; =&gt; [\r\n    \t\t&quot;a&quot; =&gt; &quot;&quot;\r\n    \t],\r\n    \t&quot;C&quot; =&gt; &quot;&quot;,\r\n    \t&quot;D&quot; =&gt; &quot;2&quot;\r\n    ]\r\n\r\nAs far as I know it&#39;s not possible to get PHP to recognize that B.a and C are empty arrays, but at least the keys appear, which is important when there&#39;s code that relies on the a certain structure even when its essentially empty inside.\r\n\r\nAlso note that it converts *undefined*s and *null*s to empty strings.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1449806054,
          "answer_id": 34215847,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1449806054,
          "body_markdown": "Didn&#39;t find a complete code snippet of how to use $http.post method to send data to the server and why it was not working in this case.\r\n\r\nExplanations of below code snippet...\r\n\r\n 1. I am using jQuery $.param function to serialize the JSON data to www post data\r\n 2. Setting the Content-Type in the config variable that will be passed along with the request of angularJS $http.post that instruct the server that we are sending data in www post format.\r\n\r\n 3. Notice the $htttp.post method, where I am sending 1st parameter as url,  2nd parameter as data (serialized) and 3rd parameter as config.\r\n\r\nRemaining code is self understood.\r\n\r\n\r\n    $scope.SendData = function () {\r\n               // use $.param jQuery function to serialize data from JSON \r\n                var data = $.param({\r\n                    fName: $scope.firstName,\r\n                    lName: $scope.lastName\r\n                });\r\n            \r\n                var config = {\r\n                    headers : {\r\n                        &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded;charset=utf-8;&#39;\r\n                    }\r\n                }\r\n    \r\n                $http.post(&#39;/ServerRequest/PostDataResponse&#39;, data, config)\r\n                .success(function (data, status, headers, config) {\r\n                    $scope.PostDataResponse = data;\r\n                })\r\n                .error(function (data, status, header, config) {\r\n                    $scope.ResponseDetails = &quot;Data: &quot; + data +\r\n                        &quot;&lt;hr /&gt;status: &quot; + status +\r\n                        &quot;&lt;hr /&gt;headers: &quot; + header +\r\n                        &quot;&lt;hr /&gt;config: &quot; + config;\r\n                });\r\n            };\r\n\r\nLook at the code example of [$http.post method here][1].\r\n\r\n\r\n  [1]: http://techfunda.com/Examples/Show/565"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1449874662,
          "answer_id": 34233917,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1449874662,
          "body_markdown": "If your using PHP this is a easy way to access an array in PHP from an AngularJS POST.\r\n\r\n    $params = json_decode(file_get_contents(&#39;php://input&#39;),true);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1450698326,
          "answer_id": 34394932,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1456146976,
          "last_edit_date": 1456146976,
          "body_markdown": "Add this in your js file:\r\n\r\n    $http.defaults.headers.post[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded&quot;;\r\n\r\nand add this to your server file:\r\n\r\n    $params = json_decode(file_get_contents(&#39;php://input&#39;), true);\r\n\r\nThat should work.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1456131479,
          "answer_id": 35549422,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1456131479,
          "body_markdown": "By using very simple method, we can follow this:\r\n\r\n\r\n     $http({\r\n\t\t\turl : &quot;submit_form_adv.php&quot;,\r\n\t\t\tmethod : &#39;POST&#39;,\r\n\t\t\theaders: {&#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;},\r\n\t\t\ttransformRequest: function(obj) {\r\n\t\t\t\tvar str = [];\r\n\t\t\t\tfor(var p in obj)\r\n\t\t\t\t\tstr.push(encodeURIComponent(p)+&#39; = &#39;+encodeURIComponent(obj[p]));\r\n\t\t\t\t\r\n\t\t\t\treturn str.join(&#39;&amp;&#39;);\r\n\t\t\t},\r\n\t\t\tdata : {sample_id : 100, sample_name: &#39;Abin John&#39;},\r\n\r\n\t\t}).success(function(data, status, headers, config) {\r\n\t\t\t\r\n\t\t}).error(function(ata, status, headers, config) {\r\n\r\n\t\t});\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1456748965,
          "answer_id": 35699599,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1472318791,
          "last_edit_date": 1472318791,
          "body_markdown": "Just put the data you want to send as second parameter:\r\n\r\n    $http.post(&#39;request-url&#39;,  message);\r\n\r\nAnother form which also works is:\r\n\r\n    $http.post(&#39;request-url&#39;,  { params: { paramName: value } });\r\n\r\nMake sure that `paramName` exactly matches the name of the parameter of the function you are calling.\r\n\r\nSource: [AngularJS post shortcut method][1]\r\n\r\n\r\n  [1]: https://docs.angularjs.org/api/ng/service/$http#post"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1461933340,
          "answer_id": 36938508,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1461933340,
          "body_markdown": "It&#39;s not angular&#39;s fault. Angular is designed to work in JSON world. So when $http service send AJAX request, it send all your data as a payload, not as form-data so that your backend application can handle it. But jQuery does some things internally. You instruct jQuery&#39;s $ajax module to bind form-data as JSON but before sending AJAX request, it serialized JSON and add `application/x-www-form-urlencoded` header. This way your backend application able to received form-data in form of post parameters and not JSON.\r\n\r\n\r\nBut you can modify angular $http service&#39;s default behavior by\r\n\r\n1. Adding header\r\n2. Serializing json\r\n\r\n$httpParamSerializerJQLike is angular&#39;s in-built service which serializes json in the same way $.param does of jQuery.\r\n\r\n    $http({\r\n        method: &#39;POST&#39;,\r\n        url: &#39;request-url&#39;,\r\n        data: $httpParamSerializerJQLike(json-form-data),\r\n        headers: {\r\n          &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8;&#39;\r\n        }\r\n    });\r\n\r\n\r\nIf you need a plugin to serialize form-data into JSON first, use this one https://github.com/marioizquierdo/jquery.serializeJSON"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1463564817,
          "answer_id": 37295933,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1463564817,
          "body_markdown": "If using **Angular &gt;= 1.4**, here&#39;s the cleanest solution using [the serializer provided by Angular][1]:\r\n\r\n    angular.module(&#39;yourModule&#39;)\r\n      .config(function ($httpProvider, $httpParamSerializerJQLikeProvider){\r\n        $httpProvider.defaults.transformRequest.unshift($httpParamSerializerJQLikeProvider.$get());\r\n        $httpProvider.defaults.headers.post[&#39;Content-Type&#39;] = &#39;application/x-www-form-urlencoded; charset=utf-8&#39;;\r\n    });\r\n\r\nAnd then you can simply do this anywhere in your app:\r\n\r\n    $http({\r\n      method: &#39;POST&#39;,\r\n      url: &#39;/requesturl&#39;,\r\n      data: {\r\n        param1: &#39;value1&#39;,\r\n        param2: &#39;value2&#39;\r\n      }\r\n    });\r\n\r\nAnd it will correctly serialize the data as `param1=value1&amp;param2=value2` and send it to `/requesturl` with the `application/x-www-form-urlencoded; charset=utf-8` Content-Type header as it&#39;s normally expected with POST requests on endpoints.\r\n\r\n**TL;DR**\r\n\r\nDuring my research I found that the answer to this problem comes in many different flavors; some are very convoluted and depend on custom functions, some depend on jQuery and and some are incomplete in suggesting that you only need to set the header.\r\n\r\nIf you just set the `Content-Type` header, the end point will see the POST data, but it won&#39;t be in the standard format because unless you provide a string as your `data`, or manually serialize your data object, it will all be serialized as JSON by default and may be incorrectly interpreted at the endpoint.\r\n\r\ne.g. if the correct serializer was not set in the above example, it would be seen in the endpoint as:\r\n\r\n    {&quot;param1&quot;:&quot;value1&quot;,&quot;param2&quot;:&quot;value2&quot;}\r\n\r\nAnd that can lead to unexpected parsing, e.g. ASP.NET treats it as a `null` parameter name, with `{&quot;param1&quot;:&quot;value1&quot;,&quot;param2&quot;:&quot;value2&quot;}` as value; or Fiddler interprets it the other way, with `{&quot;param1&quot;:&quot;value1&quot;,&quot;param2&quot;:&quot;value2&quot;}` as the parameter name, and `null` as the value.\r\n\r\n\r\n  [1]: https://docs.angularjs.org/api/ng/service/$httpParamSerializerJQLike"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1464114025,
          "answer_id": 37421085,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1464114025,
          "body_markdown": "this is probably a late answer but i think the most proper way is to use the same piece of code angular use when doing a &quot;get&quot; request using you `$httpParamSerializer` will have to inject it to your controller \r\nso you can simply do the following without having to use Jquery at all ,\r\n`$http.post(url,$httpParamSerializer({param:val}))`\r\n\r\n    app.controller(&#39;ctrl&#39;,function($scope,$http,$httpParamSerializer){\r\n        $http.post(url,$httpParamSerializer({param:val,secondParam:secondVal}));\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1469330415,
          "answer_id": 38548426,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1469330415,
          "body_markdown": "Similar to the OP&#39;s suggested working format &amp; Denison&#39;s answer, except using `$http.post` instead of just `$http` and is still dependent on jQuery.\r\n\r\nThe good thing about using jQuery here is that complex objects get passed properly; against manually converting into URL parameters which may garble the data.\r\n\r\n    $http.post( &#39;request-url&#39;, jQuery.param( { &#39;message&#39;: message } ), {\r\n        headers: { &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39; }\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1469701767,
          "answer_id": 38633768,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1469704025,
          "last_edit_date": 1469704025,
          "body_markdown": "In my case I resolve the problem like this :\r\n\r\n    var deferred = $q.defer();\r\n    \r\n    $http({\r\n    \tmethod: &#39;POST&#39;,\r\n    \turl: &#39;myUri&#39;, \r\n    \tdata: $.param({ param1: &#39;blablabla&#39;, param2: JSON.stringify(objJSON) }),\r\n        headers: { &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39; }\r\n    }).then(\r\n    \tfunction(res) {\r\n    \t\tconsole.log(&#39;succes !&#39;, res.data);\r\n    \t\tdeferred.resolve(res.data);\r\n    \t},\r\n    \tfunction(err) {\r\n    \t\tconsole.log(&#39;error...&#39;, err);\r\n    \t\tdeferred.resolve(err);\r\n    \t}\r\n    );\r\n    return deferred.promise;\r\n\r\nYou need to use JSON.stringify for each param containing a JSON object, and then build your data object with &quot;$.param&quot; :-)\r\n\r\nNB : My &quot;objJSON&quot; is a JSON object containing array, integer, string and html content. His total size is &gt;3500 characters.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1490844209,
          "answer_id": 43107944,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1490868873,
          "last_edit_date": 1490868873,
          "body_markdown": "Found the simple solution on \r\n\r\nhttp://jasonwatmore.com/post/2014/04/18/post-a-simple-string-value-from-angularjs-to-net-web-api\r\n\r\n    return $http.post(Config.apiUrl + &#39;/example/processfile&#39;, &#39;&quot;&#39; + fileName + &#39;&quot;&#39;);\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1497953479,
          "answer_id": 44650148,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1497953943,
          "last_edit_date": 1497953943,
          "body_markdown": "Just proposing a modernized version of [@FelipeMiosso&#39;s answer](https://stackoverflow.com/a/20276775/1225328):\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    .config([&quot;$httpProvider&quot;, function ($httpProvider) {\r\n\r\n      function buildKey(parentKey, subKey) {\r\n        return parentKey + &quot;[&quot; + subKey + &quot;]&quot;;\r\n      }\r\n\r\n      function buildObject(key, value) {\r\n        var object = {};\r\n        object[key] = value;\r\n        return object;\r\n      }\r\n\r\n      function join(array) {\r\n        return array.filter(function (entry) {\r\n          return entry;\r\n        }).join(&quot;&amp;&quot;);\r\n      }\r\n\r\n      function arrayToQueryString(parentKey, array) {\r\n        return join(array.map(function (value, subKey) {\r\n          return toQueryString(buildObject(buildKey(parentKey, subKey), value));\r\n        }));\r\n      }\r\n\r\n      function objectToQueryString(parentKey, object) {\r\n        return join(Object.keys(object).map(function (subKey) {\r\n          return toQueryString(buildObject(buildKey(parentKey, subKey), object[subKey]));\r\n        }));\r\n      }\r\n\r\n      function toQueryString(input) {\r\n        return join(Object.keys(input).map(function (key) {\r\n          var value = input[key];\r\n          if (value instanceof Array) {\r\n            return arrayToQueryString(key, value);\r\n          } else if (value instanceof Object) {\r\n            return objectToQueryString(key, value);\r\n          } else if (undefined !== value &amp;&amp; null !== value) {\r\n            return encodeURIComponent(key) + &quot;=&quot; + encodeURIComponent(value);\r\n          } else {\r\n            return &quot;&quot;;\r\n          }\r\n        }));\r\n      }\r\n\r\n      function isQueryStringEligible(input) {\r\n        return null !== input &amp;&amp; &quot;object&quot; === typeof input &amp;&amp; &quot;[object File]&quot; !== String(input);\r\n      }\r\n\r\n      var interceptor = [function () {\r\n        return {\r\n          request: function (config) {\r\n            if (0 &lt;= [&quot;post&quot;, &quot;put&quot;, &quot;patch&quot;].indexOf(config.method.toLowerCase()) &amp;&amp; isQueryStringEligible(config.data)) {\r\n              config.headers[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded;charset=utf-8&quot;;\r\n              config.data = toQueryString(config.data);\r\n            }\r\n            return config;\r\n          }\r\n        };\r\n      }];\r\n      \r\n      $httpProvider.interceptors.push(interceptor);\r\n      \r\n    }])\r\n\r\nES6 version:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    .config([&quot;$httpProvider&quot;, function ($httpProvider) {\r\n    \r\n      &quot;use strict&quot;;\r\n    \r\n      const buildKey = (parentKey, subKey) =&gt; `${parentKey}[${subKey}]`;\r\n    \r\n      const buildObject = (key, value) =&gt; ({ [key]: value });\r\n    \r\n      const join = (array) =&gt; array.filter((entry) =&gt; entry).join(&quot;&amp;&quot;);\r\n    \r\n      const arrayToQueryString = (parentKey, array) =&gt;\r\n        join(array.map((value, subKey) =&gt;\r\n          toQueryString(buildObject(buildKey(parentKey, subKey), value))));\r\n    \r\n      const objectToQueryString = (parentKey, object) =&gt;\r\n        join(Object.keys(object).map((subKey) =&gt;\r\n          toQueryString(buildObject(buildKey(parentKey, subKey), object[subKey]))));\r\n    \r\n      const toQueryString = (input) =&gt; join(Object.keys(input).map((key) =&gt; {\r\n        const value = input[key];\r\n        if (value instanceof Array) {\r\n          return arrayToQueryString(key, value);\r\n        } else if (value instanceof Object) {\r\n          return objectToQueryString(key, value);\r\n        } else if (undefined !== value &amp;&amp; null !== value) {\r\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\r\n        } else {\r\n          return &quot;&quot;;\r\n        }\r\n      }));\r\n    \r\n      const isQueryStringEligible = (input) =&gt;\r\n        null !== input &amp;&amp; &quot;object&quot; === typeof input &amp;&amp; &quot;[object File]&quot; !== String(input);\r\n    \r\n      const interceptor = [() =&gt; ({\r\n        request(config) {\r\n          if (0 &lt;= [&quot;post&quot;, &quot;put&quot;, &quot;patch&quot;].indexOf(config.method.toLowerCase()) &amp;&amp; isQueryStringEligible(config.data)) {\r\n            config.headers[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded;charset=utf-8&quot;;\r\n            config.data = toQueryString(config.data);\r\n          }\r\n          return config;\r\n        }\r\n      })];\r\n    \r\n      $httpProvider.interceptors.push(interceptor);\r\n    \r\n    }])"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1502106837,
          "answer_id": 45546298,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1502114512,
          "last_edit_date": 1502114512,
          "body_markdown": "I had this problem, the issue was i was not able to get the data while posting using above mentioned header i.e. \r\n\r\n    headers: {\r\n        &#39;Accept&#39;: &#39;application/json&#39;,\r\n        &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;\r\n    }\r\n\r\nWhile using jquery Ajax we were usually getting data in **response.body** at the backend server, but while implementing Angular ajax the data was not coming in response.body instead it was coming under\r\n\r\n    request.getParameterMap.keySet().iterator().next()\r\n\r\n"
        }
      ],
      "title": "AngularJs $http.post() does not send data",
      "view_count": 586688,
      "answer_count": 37,
      "code_snippet": [
        "<code>$http.post('request-url',  { 'message' : message });\n</code>",
        "<code>$http.post('request-url',  \"message=\" + message);\n</code>",
        "<code>$http({\n    method: 'POST',\n    url: 'request-url',\n    data: \"message=\" + message,\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n});\n</code>",
        "<code>$http</code>",
        "<code>$http.post()</code>",
        "<code>jQuery.post()</code>",
        "<code>Content-Type: x-www-form-urlencoded\n</code>",
        "<code>foo=bar&amp;baz=moe</code>",
        "<code>Content-Type: application/json \n</code>",
        "<code>{ \"foo\": \"bar\", \"baz\": \"moe\" }</code>",
        "<code>// Your app's root module...\nangular.module('MyModule', [], function($httpProvider) {\n  // Use x-www-form-urlencoded Content-Type\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n\n  /**\n   * The workhorse; converts an object to x-www-form-urlencoded serialization.\n   * @param {Object} obj\n   * @return {String}\n   */ \n  var param = function(obj) {\n    var query = '', name, value, fullSubName, subName, subValue, innerObj, i;\n\n    for(name in obj) {\n      value = obj[name];\n\n      if(value instanceof Array) {\n        for(i=0; i&lt;value.length; ++i) {\n          subValue = value[i];\n          fullSubName = name + '[' + i + ']';\n          innerObj = {};\n          innerObj[fullSubName] = subValue;\n          query += param(innerObj) + '&amp;';\n        }\n      }\n      else if(value instanceof Object) {\n        for(subName in value) {\n          subValue = value[subName];\n          fullSubName = name + '[' + subName + ']';\n          innerObj = {};\n          innerObj[fullSubName] = subValue;\n          query += param(innerObj) + '&amp;';\n        }\n      }\n      else if(value !== undefined &amp;&amp; value !== null)\n        query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&amp;';\n    }\n\n    return query.length ? query.substr(0, query.length - 1) : query;\n  };\n\n  // Override $http service's default transformRequest\n  $httpProvider.defaults.transformRequest = [function(data) {\n    return angular.isObject(data) &amp;&amp; String(data) !== '[object File]' ? param(data) : data;\n  }];\n});\n</code>",
        "<code>bower install angular-post-fix --save-dev</code>",
        "<code>$params = json_decode(file_get_contents('php://input'),true);</code>",
        "<code>json_decode(file_get_contents('php://input'), true);</code>",
        "<code>$http.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n</code>",
        "<code>data</code>",
        "<code>function sendData($scope) {\n    $http({\n        url: 'request-url',\n        method: \"POST\",\n        data: { 'message' : message }\n    })\n    .then(function(response) {\n            // success\n    }, \n    function(response) { // optional\n            // failed\n    });\n}\n</code>",
        "<code>var xsrf = $.param({fkey: \"key\"});\n$http({\n    method: 'POST',\n    url: url,\n    data: xsrf,\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n})\n</code>",
        "<code>myobject = {'one':'1','two':'2','three':'3'}\n\nObject.toparams = function ObjecttoParams(obj) {\n    var p = [];\n    for (var key in obj) {\n        p.push(key + '=' + encodeURIComponent(obj[key]));\n    }\n    return p.join('&amp;');\n};\n\n$http({\n    method: 'POST',\n    url: url,\n    data: Object.toparams(myobject),\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n})\n</code>",
        "<code>.controller('myCtrl', function($http, $httpParamSerializerJQLike) {\n$http({\n  method: 'POST',\n  url: baseUrl,\n  data: $httpParamSerializerJQLike({\n    \"user\":{\n      \"email\":\"wahxxx@gmail.com\",\n      \"password\":\"123456\"\n    }\n  }),\n  headers:\n    'Content-Type': 'application/x-www-form-urlencoded'\n})})\n</code>",
        "<code>myapp</code>",
        "<code>ng-app</code>",
        "<code>var app = angular.module('myapp', []);\n</code>",
        "<code>app.controller('LoginController', ['$scope', '$http', function ($scope, $http) {\n    // default post header\n    $http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n    // send login data\n    $http({\n        method: 'POST',\n        url: 'https://example.com/user/login',\n        data: $.param({\n            email: $scope.email,\n            password: $scope.password\n        }),\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).success(function (data, status, headers, config) {\n        // handle success things\n    }).error(function (data, status, headers, config) {\n        // handle error things\n    });\n}]);\n</code>",
        "<code>param</code>",
        "<code>$http({\nmethod: 'POST',\nurl: 'request-url',\ndata: {'message': 'Hello world'}\n});\n</code>",
        "<code>        $data               = file_get_contents(\"php://input\");\n        $dataJsonDecode     = json_decode($data);\n        $message            = $dataJsonDecode-&gt;message;\n        echo $message;     //'Hello world'\n</code>",
        "<code>$http.post('/someUrl', {msg:'hello word!'})\n</code>",
        "<code>$http({\n       withCredentials: false,\n       method: 'post',\n       url: yourUrl,\n       headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n       data: postData\n });\n</code>",
        "<code>req.body.msg\n</code>",
        "<code>$http</code>",
        "<code>data: \"message=\" + message</code>",
        "<code>data: $.param({message:message})</code>",
        "<code>var app = angular.module('my_app', [ ... , 'httpPostFix']);\n</code>",
        "<code>$params = json_decode(file_get_contents('php://input'));</code>",
        "<code>true</code>",
        "<code>json_decode</code>",
        "<code>$params = json_decode(file_get_contents('php://input'), true);</code>",
        "<code>  var payload = $.param({ jobId: 2 });\n\n                this.$http({\n                    method: 'POST',\n                    url: 'web/api/ResourceAction/processfile',\n                    data: payload,\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n                });\n</code>",
        "<code>public class AcceptJobParams\n        {\n            public int jobId { get; set; }\n        }\n\n        public IHttpActionResult ProcessFile([FromBody]AcceptJobParams thing)\n        {\n            // do something with fileName parameter\n\n            return Ok();\n        }\n</code>",
        "<code>moduleName.config(['$httpProvider',\n  function($httpProvider) {\n    $httpProvider.defaults.transformRequest.push(function(data) {\n        var requestStr;\n        if (data) {\n            data = JSON.parse(data);\n            for (var key in data) {\n                if (requestStr) {\n                    requestStr += \"&amp;\" + key + \"=\" + data[key];\n                } else {\n                    requestStr = key + \"=\" + data[key];\n                }\n            }\n        }\n        return requestStr;\n    });\n    $httpProvider.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n  }\n]);\n</code>",
        "<code>var paramsVal={data:'\"id\":\"1\"'};\n  $http.post(\"Request URL\",  {params: paramsVal});  \n</code>",
        "<code>$http({\n      method: 'POST',\n      url: \"Request URL\",           \n      params: paramsVal,\n      headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'}\n            });\n</code>",
        "<code>$http.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n</code>",
        "<code>$params = json_decode(file_get_contents('php://input'), true);\n</code>",
        "<code>$httpParamSerializer</code>",
        "<code>$http.post(url,$httpParamSerializer({param:val}))</code>",
        "<code>app.controller('ctrl',function($scope,$http,$httpParamSerializer){\n    $http.post(url,$httpParamSerializer({param:val,secondParam:secondVal}));\n}\n</code>",
        "<code>$httpprovider</code>",
        "<code>$this-&gt;input-&gt;is_ajax_request()</code>",
        "<code>function getjQueryAjax(url, obj){\n    return $.ajax({\n        type: 'post',\n        url: url,\n        cache: true,\n        data: obj\n    });\n}\n</code>",
        "<code>$scope</code>",
        "<code>$scope.$apply()</code>",
        "<code>    var data = {\n        media: \"video\",\n        scope: \"movies\"\n    };\n    var rPromise = getjQueryAjax(\"myController/getMeTypes\" , data);\n    rPromise.success(function(response){\n        console.log(response);\n        $scope.$apply(function(){\n            $scope.testData = JSON.parse(response);\n            console.log($scope.testData);\n        });\n    }).error(function(){\n        console.log(\"AJAX failed!\");\n    });\n</code>",
        "<code>$scope</code>",
        "<code> $http({\n        contentType: \"application/json; charset=utf-8\",//required\n        method: \"POST\",\n        url: '../../operation/Service.svc/user_forget',\n        dataType: \"json\",//optional\n        data:{ \"uid_or_phone\": $scope.forgettel, \"user_email\": $scope.forgetemail },\n        async: \"isAsync\"//optional\n\n       }).success( function (response) {\n\n         $scope.userforgeterror = response.d;                    \n       })\n</code>",
        "<code>$scope.SendData = function () {\n           // use $.param jQuery function to serialize data from JSON \n            var data = $.param({\n                fName: $scope.firstName,\n                lName: $scope.lastName\n            });\n\n            var config = {\n                headers : {\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;'\n                }\n            }\n\n            $http.post('/ServerRequest/PostDataResponse', data, config)\n            .success(function (data, status, headers, config) {\n                $scope.PostDataResponse = data;\n            })\n            .error(function (data, status, header, config) {\n                $scope.ResponseDetails = \"Data: \" + data +\n                    \"&lt;hr /&gt;status: \" + status +\n                    \"&lt;hr /&gt;headers: \" + header +\n                    \"&lt;hr /&gt;config: \" + config;\n            });\n        };\n</code>",
        "<code>angular.module('yourModule')\n  .config(function ($httpProvider, $httpParamSerializerJQLikeProvider){\n    $httpProvider.defaults.transformRequest.unshift($httpParamSerializerJQLikeProvider.$get());\n    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n});\n</code>",
        "<code>$http({\n  method: 'POST',\n  url: '/requesturl',\n  data: {\n    param1: 'value1',\n    param2: 'value2'\n  }\n});\n</code>",
        "<code>param1=value1&amp;param2=value2</code>",
        "<code>/requesturl</code>",
        "<code>application/x-www-form-urlencoded; charset=utf-8</code>",
        "<code>Content-Type</code>",
        "<code>data</code>",
        "<code>{\"param1\":\"value1\",\"param2\":\"value2\"}\n</code>",
        "<code>null</code>",
        "<code>{\"param1\":\"value1\",\"param2\":\"value2\"}</code>",
        "<code>{\"param1\":\"value1\",\"param2\":\"value2\"}</code>",
        "<code>null</code>",
        "<code>var deferred = $q.defer();\n\n$http({\n    method: 'POST',\n    url: 'myUri', \n    data: $.param({ param1: 'blablabla', param2: JSON.stringify(objJSON) }),\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n}).then(\n    function(res) {\n        console.log('succes !', res.data);\n        deferred.resolve(res.data);\n    },\n    function(err) {\n        console.log('error...', err);\n        deferred.resolve(err);\n    }\n);\nreturn deferred.promise;\n</code>",
        "<code>app.use(bodyParser.json());\n</code>",
        "<code>[...]\n  /**\n * The workhorse; converts an object to x-www-form-urlencoded serialization.\n * @param {Object} obj\n * @return {String}\n */\nvar param = function (obj) {\nvar query = '', name, value, fullSubName, subName, subValue, innerObj, i;\n\nangular.forEach(obj, function(value, name) {\n+    if(name.indexOf(\"$promise\") != -1) {\n+        return;\n+    }\n\n    value = obj[name];\n    if (value instanceof Array) {\n        for (i = 0; i &lt; value.length; ++i) {\n[...]\n</code>",
        "<code>{\n    A: 1,\n    B: {\n        a: [ ],\n    },\n    C: [ ],\n    D: \"2\"\n}\n</code>",
        "<code>[\n    \"A\" =&gt; \"1\",\n    \"B\" =&gt; \"2\"\n]\n</code>",
        "<code>A: 1\n:\nD: 2\n</code>",
        "<code>angular.module(\"MyModule\").config([ \"$httpProvider\", function($httpProvider: ng.IHttpProvider) {\n    // Use x-www-form-urlencoded Content-Type\n    $httpProvider.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded;charset=utf-8\";\n\n    function phpize(obj: Object | any[], depth: number = 1): string[] {\n        var arr: string[] = [ ];\n        angular.forEach(obj, (value: any, key: string) =&gt; {\n            if (angular.isObject(value) || angular.isArray(value)) {\n                var arrInner: string[] = phpize(value, depth + 1);\n                var tmpKey: string;\n                var encodedKey = encodeURIComponent(key);\n                if (depth == 1) tmpKey = encodedKey;\n                else tmpKey = `[${encodedKey}]`;\n                if (arrInner.length == 0) {\n                    arr.push(`${tmpKey}=`);\n                }\n                else {\n                    arr = arr.concat(arrInner.map(inner =&gt; `${tmpKey}${inner}`));\n                }\n            }\n            else {\n                var encodedKey = encodeURIComponent(key);\n                var encodedValue;\n                if (angular.isUndefined(value) || value === null) encodedValue = \"\";\n                else encodedValue = encodeURIComponent(value);\n\n                if (depth == 1) {\n                    arr.push(`${encodedKey}=${encodedValue}`);\n                }\n                else {\n                    arr.push(`[${encodedKey}]=${encodedValue}`);\n                }\n            }\n        });\n        return arr;\n    }\n\n    // Override $http service's default transformRequest\n    (&lt;any&gt;$httpProvider.defaults).transformRequest = [ function(data: any) {\n        if (!angular.isObject(data) || data.toString() == \"[object File]\") return data;\n        return phpize(data).join(\"&amp;\");\n    } ];\n} ]);\n</code>",
        "<code>[\n    \"A\" =&gt; \"1\",\n    \"B\" =&gt; [\n        \"a\" =&gt; \"\"\n    ],\n    \"C\" =&gt; \"\",\n    \"D\" =&gt; \"2\"\n]\n</code>",
        "<code>$params = json_decode(file_get_contents('php://input'),true);\n</code>",
        "<code>     $http({\n                url: me.serverPath,\n                method: 'POST',\n                data: data,\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            }).\n                success(function (serverData) {\n                    console.log(\"ServerData:\", serverData);\n    ......\n</code>",
        "<code>[AllowCrossSiteJson]\n        public string Api()\n        {\n            var data = JsonConvert.DeserializeObject&lt;AgentRequest&gt;(Request.Form[0]);\n            if (data == null) return \"Null Request\";\n            var bl = Page.Bl = new Core(this);\n\n            return data.methodName;\n        }\n</code>",
        "<code>public class AllowCrossSiteJsonAttribute : ActionFilterAttribute\n    {\n        public override void OnActionExecuting(ActionExecutingContext filterContext)\n        {\n            filterContext.RequestContext.HttpContext.Response.AddHeader(\"Access-Control-Allow-Origin\", \"*\");\n            base.OnActionExecuting(filterContext);\n        }\n    }\n</code>",
        "<code>application/x-www-form-urlencoded</code>",
        "<code>$http({\n    method: 'POST',\n    url: 'request-url',\n    data: $httpParamSerializerJQLike(json-form-data),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;'\n    }\n});\n</code>",
        "<code>$http.post</code>",
        "<code>$http</code>",
        "<code>$http.post( 'request-url', jQuery.param( { 'message': message } ), {\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n});\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs",
        "angularjs-ng-repeat",
        "ng-repeat"
      ],
      "creation_date": 1369865891,
      "body_markdown": "Is there a way to ng-repeat a defined number of times instead of always having to iterate over an array?\r\n\r\nFor example, below I want the list item to show up 5 times assuming `$scope.number` equal to 5 in addition incrementing the number so each list item increments like 1, 2, 3, 4, 5\r\n\r\nDesired result:\r\n\r\n    &lt;ul&gt;\r\n       &lt;li&gt;&lt;span&gt;1&lt;/span&gt;&lt;/li&gt;\r\n       &lt;li&gt;&lt;span&gt;2&lt;/span&gt;&lt;/li&gt;\r\n       &lt;li&gt;&lt;span&gt;3&lt;/span&gt;&lt;/li&gt;\r\n       &lt;li&gt;&lt;span&gt;4&lt;/span&gt;&lt;/li&gt;\r\n       &lt;li&gt;&lt;span&gt;5&lt;/span&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;",
      "last_edit_date": 1400060084,
      "up_vote_count": 366,
      "link": "https://stackoverflow.com/questions/16824853/way-to-ng-repeat-defined-number-of-times-instead-of-repeating-over-array",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1369866370,
          "answer_id": 16824944,
          "path": "stack.bower.answer",
          "score": 501,
          "up_vote_count": 503,
          "is_accepted": true,
          "last_activity_date": 1389043478,
          "last_edit_date": 1389043478,
          "body_markdown": "At the moment, `ng-repeat` only accepts a collection as a parameter, but you could do this:\r\n\r\n    &lt;ul&gt;\r\n        &lt;li ng-repeat=&quot;i in getNumber(number)&quot;&gt;&lt;span&gt;{{$index+1}}&lt;/span&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;\r\n\r\nAnd somewhere in your controller:\r\n\r\n    $scope.number = 5;\r\n    $scope.getNumber = function(num) {\r\n        return new Array(num);   \r\n    }\r\n\r\nThis would allow you to change `$scope.number` to any number as you please and still maintain the binding you&#39;re looking for.\r\n\r\n[Here is a fiddle][1] with a couple of lists using the same `getNumber` function.\r\n\r\n**EDIT 1/6/2014**:  Newer versions of Angular make use of the following syntax:\r\n\r\n    &lt;li ng-repeat=&quot;i in getNumber(number) track by $index&quot;&gt;\r\n\r\n\r\n  [1]: http://jsfiddle.net/sh0ber/cHQLH/"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1369866439,
          "answer_id": 16824961,
          "path": "stack.bower.answer",
          "score": 77,
          "up_vote_count": 81,
          "is_accepted": false,
          "last_activity_date": 1369866439,
          "body_markdown": "I think this [jsFiddle][1] from this [thread][2] might be what you&#39;re looking for.\r\n\r\n\r\n    &lt;div ng-app ng-controller=&quot;Main&quot;&gt;\r\n       &lt;div ng-repeat=&quot;item in items | limitTo:2&quot;&gt;\r\n           {{item.name}}\r\n       &lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\n  [1]: http://jsfiddle.net/Nu7rZ/\r\n  [2]: https://groups.google.com/forum/?fromgroups#!topic/angular/LjwlVYMulN8"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1369866504,
          "answer_id": 16824971,
          "path": "stack.bower.answer",
          "score": 88,
          "up_vote_count": 88,
          "is_accepted": false,
          "last_activity_date": 1395945925,
          "last_edit_date": 1395945925,
          "body_markdown": "Here is an example of how you could do this.  Note that I was inspired by a comment in the ng-repeat docs: http://jsfiddle.net/digitalzebra/wnWY6/\r\n\r\nNote the ng-repeat directive:\r\n\r\n    &lt;div ng-app&gt;\r\n        &lt;div ng-controller=&quot;TestCtrl&quot;&gt;\r\n            &lt;div ng-repeat=&quot;a in range(5) track by $index&quot;&gt;{{$index + 1}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\nHere is the controller:\r\n\r\n    function TestCtrl($scope) {\r\n        $scope.range = function(n) {\r\n            return new Array(n);\r\n        };\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386255294,
          "answer_id": 20403189,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1386255294,
          "body_markdown": "I needed a more dynamic solution to this - where I could increment the repeat.\r\n\r\nHTML \r\n\r\n    &lt;div ng-repeat=&quot;n in newUserCount&quot;&gt;\r\n    &lt;input type=&quot;text&quot; value=&quot;&quot; name=&quot;newuser{{n}}&quot;/&gt;\r\n    &lt;/div&gt;\r\n\r\n\r\n\r\nDuplicator Control\r\n    \r\n    &lt;span class=&quot;helper&quot; ng-click=&quot;duplicateUser()&quot;&gt;\r\n    Create another user with the same permissions\r\n    &lt;/span&gt;\r\n\r\n\r\nJS\r\n\r\n     $scope.newUserCount = Array(&#39;1&#39;);\r\n    var primaryValue = 1;\r\n    $scope.duplicateUser = function()\r\n    {\r\n        primaryValue++;\r\n        $scope.newUserCount.push(primaryValue)\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386861832,
          "answer_id": 20547385,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1386861832,
          "body_markdown": "You can use this example.\r\n\r\nInside controller:\r\n\r\n    $scope.data = {\r\n        &#39;myVal&#39;: 33,\r\n        &#39;maxVal&#39;: 55,\r\n        &#39;indexCount&#39;: function(count) {\r\n            var cnt = 10;\r\n            if (typeof count === &#39;number&#39;) {\r\n                cnt = count;\r\n            }\r\n            return new Array(cnt);\r\n        }\r\n    };\r\n\r\nExample for select element at the HTML code side:\r\n\r\n    &lt;select ng-model=&quot;data.myVal&quot; value=&quot;{{ data.myVal }}&quot;&gt;\r\n        &lt;option ng-repeat=&quot;i in data.indexCount(data.maxVal) track by $index&quot; value=&quot;{{ $index + 1 }}&quot;&gt;{{ $index + 1 }}&lt;/option&gt;\r\n    &lt;/select&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1389395562,
          "answer_id": 21056194,
          "path": "stack.bower.answer",
          "score": 48,
          "up_vote_count": 50,
          "is_accepted": false,
          "last_activity_date": 1389395874,
          "last_edit_date": 1389395874,
          "body_markdown": "I ran into the same issue.  I came across this thread, but didn&#39;t like the methods they had here.  My solution was using underscore.js, which we had already installed.  It&#39;s as simple as this:\r\n\r\n    &lt;ul&gt;\r\n        &lt;li ng-repeat=&quot;n in _.range(1,6)&quot;&gt;&lt;span&gt;{{n}}&lt;/span&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;\r\n\r\nThis will do exactly what you&#39;re looking for."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1392511987,
          "answer_id": 21805864,
          "path": "stack.bower.answer",
          "score": 120,
          "up_vote_count": 122,
          "is_accepted": false,
          "last_activity_date": 1392511987,
          "body_markdown": "you can do this:\r\n\r\n    &lt;div ng-repeat=&quot;i in [1, 2, 3, 4]&quot;&gt;\r\n      ...\r\n    &lt;/div&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1393832266,
          "answer_id": 22141138,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1470998136,
          "last_edit_date": 1470998136,
          "body_markdown": "angular gives a very sweet function called **slice**.. using this you can achieve what you are looking for.\r\n*e.g. ng-repeat=&quot;ab in abc.slice(startIndex,endIndex)&quot;*\r\n\r\n this demo :http://jsfiddle.net/sahilosheal/LurcV/39/ will help you out and tell you how to use this &quot;making life easy&quot; function. :)\r\n \r\nhtml:\r\n\r\n    &lt;div class=&quot;div&quot; ng-app &gt;\r\n        &lt;div ng-controller=&quot;Main&quot;&gt;\r\n            &lt;h2&gt;sliced list(conditional NG-repeat)&lt;/h2&gt;\r\n            &lt;ul ng-controller=&quot;ctrlParent&quot;&gt;\r\n                &lt;li ng-repeat=&quot;ab in abc.slice(2,5)&quot;&gt;&lt;span&gt;{{$index+1}} :: {{ab.name}} &lt;/span&gt;&lt;/li&gt;\r\n            &lt;/ul&gt;\r\n            &lt;h2&gt;unsliced list( no conditional NG-repeat)&lt;/h2&gt;\r\n             &lt;ul ng-controller=&quot;ctrlParent&quot;&gt;\r\n                &lt;li ng-repeat=&quot;ab in abc&quot;&gt;&lt;span&gt;{{$index+1}} :: {{ab.name}} &lt;/span&gt;&lt;/li&gt;\r\n            &lt;/ul&gt;\r\n             \r\n        &lt;/div&gt;\r\n\r\nCSS:\r\n\r\n    ul\r\n    {\r\n    list-style: none;\r\n    }\r\n    .div{\r\n        padding:25px;\r\n    }\r\n    li{\r\n        background:#d4d4d4;\r\n        color:#052349;\r\n    }\r\n\r\nng-JS:\r\n\r\n     function ctrlParent ($scope) {\r\n        $scope.abc = [\r\n         { &quot;name&quot;: &quot;What we do&quot;, url: &quot;/Home/AboutUs&quot; },\r\n         { &quot;name&quot;: &quot;Photo Gallery&quot;, url: &quot;/home/gallery&quot; },\r\n         { &quot;name&quot;: &quot;What we work&quot;, url: &quot;/Home/AboutUs&quot; },\r\n         { &quot;name&quot;: &quot;Photo play&quot;, url: &quot;/home/gallery&quot; },\r\n         { &quot;name&quot;: &quot;Where&quot;, url: &quot;/Home/AboutUs&quot; },\r\n         { &quot;name&quot;: &quot;playground&quot;, url: &quot;/home/gallery&quot; },\r\n         { &quot;name&quot;: &quot;What we score&quot;, url: &quot;/Home/AboutUs&quot; },\r\n         { &quot;name&quot;: &quot;awesome&quot;, url: &quot;/home/gallery&quot; },\r\n         { &quot;name&quot;: &quot;oscar&quot;, url: &quot;/Home/AboutUs&quot; },\r\n         { &quot;name&quot;: &quot;american hustle&quot;, url: &quot;/home/gallery&quot; }\r\n        ];\r\n    }\r\n    function Main($scope){\r\n        $scope.items = [{sort: 1, name: &#39;First&#39;}, \r\n                        {sort: 2, name: &#39;Second&#39;}, \r\n                        {sort: 3, name: &#39;Third&#39;}, \r\n                        {sort: 4, name:&#39;Last&#39;}];\r\n        }\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394064463,
          "answer_id": 22212188,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1394064463,
          "body_markdown": "Angular provides filters to modify a collection. In this case the collection would be null, i.e. [], and the filter also takes arguments, as follows:\r\n\r\n    &lt;div id=&quot;demo&quot;&gt;\r\n        &lt;ul&gt;\r\n            &lt;li ng-repeat=&quot;not in []|fixedNumber:number track by $index&quot;&gt;{{$index}}&lt;/li&gt;\r\n        &lt;/ul&gt;\r\n    &lt;/div&gt;\r\n\r\nJS:\r\n\r\n    module.filter(&#39;fixedNumber&#39;, function() {\r\n        return function(emptyarray, number) {\r\n            return Array(number);\r\n        }\r\n    });\r\n\r\n    module.controller(&#39;myCtrl&#39;, [&#39;$scope&#39;, function($scope) {\r\n        $scope.number = 5;\r\n    }]);\r\n\r\nThis method is very similar to those proposed above and isn&#39;t necessarily superior but shows the power of filters in AngularJS."
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1398199201,
          "answer_id": 23229739,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1512093596,
          "last_edit_date": 1512093596,
          "body_markdown": "since iterating over a string it will render an item for each char:\r\n\r\n    &lt;li ng-repeat = &quot;k in &#39;aaaa&#39; track by $index&quot;&gt;\r\n       {{$index}} //THIS DOESN&#39;T ANSWER OP&#39;S QUESTION. Read below.\r\n    &lt;/li&gt;\r\n\r\nwe can use this **ugly** but no-code workaround using the `number|n decimal places` native filter.\r\n\r\n     &lt;li ng-repeat=&quot;k in (0|number:mynumber -2 ) track by $index&quot;&gt;\r\n        {{$index}}\r\n     &lt;/li&gt;\r\n\r\nthis way we&#39;ll have `mynumber` elements with no extra code. Say `&#39;0.000&#39;`.  \r\nWe use `mynumber - 2` to compensate `0.`  \r\nIt won&#39;t work for numbers below 3, but might be useful in some cases."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1400059148,
          "answer_id": 23650453,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1400059779,
          "last_edit_date": 1400059779,
          "body_markdown": "Heres an answer for angular 1.2.x\r\n\r\nBasically it is the same, with the slight modification of of the `ng-repeat` \r\n\r\n    &lt;li ng-repeat=&quot;i in getNumber(myNumber) track by $index&quot;&gt;\r\n\r\nhere is the fiddle: http://jsfiddle.net/cHQLH/153/\r\n\r\nthis is because angular 1.2 doesn&#39;t allow duplicate values in the directive. This means if you are trying to do the following, you will get an error.\r\n\r\n    &lt;li ng-repeat=&quot;x in [1,1,1]&quot;&gt;&lt;/li&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1404738429,
          "answer_id": 24611330,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1404890261,
          "last_edit_date": 1404890261,
          "body_markdown": "If n is not too high, another option could be to use split(&#39;&#39;) with a string of n characters :\r\n\r\n\r\n    &lt;div ng-controller=&quot;MainCtrl&quot;&gt;\r\n    &lt;div ng-repeat=&quot;a in &#39;abcdefgh&#39;.split(&#39;&#39;)&quot;&gt;{{$index}}&lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1407619140,
          "answer_id": 25223163,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1451823373,
          "last_edit_date": 1451823373,
          "body_markdown": "There are many ways to do this.  I was really bothered at having the logic in my controller so  I created a simple directive to solve the problem of repeating an element n-times.\r\n\r\n__Installation:__\r\n\r\nThe directive can be installed using `bower install angular-repeat-n`\r\n\r\n__Example:__\r\n\r\n    &lt;span ng-repeat-n=&quot;4&quot;&gt;{{$index}}&lt;/span\r\n\r\nproduces: `1234`\r\n\r\nIt also works using a scope variable:\r\n\r\n    &lt;span ng-repeat-n=&quot;repeatNum&quot;&gt;&lt;/span&gt;\r\n\r\n__Source:__\r\n\r\n[Github](https://github.com/connorbode/angular-repeat-n)\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1418235423,
          "answer_id": 27408073,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1418235423,
          "body_markdown": "## Easiest answer: 2 lines of code\r\n\r\n**JS (in your AngularJS controller)**\r\n\r\n    $scope.range = new Array(MAX_REPEATS); // set MAX_REPEATS to the most repetitions you will ever need in a single ng-repeat that makes use of this strategy\r\n\r\n**HTML**\r\n\r\n    &lt;div ng-repeat=&quot;i in range.slice(0,repeatCount) track by $index&quot;&gt;&lt;/div&gt;\r\n\r\n...where `repeatCount` is the number of repetitions that should appear in this location."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1421444003,
          "answer_id": 27993106,
          "path": "stack.bower.answer",
          "score": 33,
          "up_vote_count": 33,
          "is_accepted": false,
          "last_activity_date": 1444928526,
          "last_edit_date": 1444928526,
          "body_markdown": "This is really UGLY, but it works without a controller for either an integer or variable:\r\n\r\ninteger:\r\n\r\n    &lt;span ng-repeat=&quot;_ in ((_ = []) &amp;&amp; (_.length=33) &amp;&amp; _) track by $index&quot;&gt;{{$index}}&lt;/span&gt;\r\n\r\nvariable:\r\n\r\n    &lt;span ng-repeat=&quot;_ in ((_ = []) &amp;&amp; (_.length=myVar) &amp;&amp; _) track by $index&quot;&gt;{{$index}}&lt;/span&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1428633782,
          "answer_id": 29552460,
          "path": "stack.bower.answer",
          "score": 40,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1513794414,
          "last_edit_date": 1513794414,
          "body_markdown": "I wanted to keep my html very minimal, so defined a small filter that creates the array [0,1,2,...] as others have done:\r\n\r\n    angular.module(&#39;awesomeApp&#39;)\r\n      .filter(&#39;range&#39;, function(){\r\n        return function(n) {\r\n          var res = [];\r\n          for (var i = 0; i &lt; n; i++) {\r\n            res.push(i);\r\n          }\r\n          return res;\r\n        };\r\n      });\r\n\r\nAfter that, on the view is possible to use like this:\r\n\r\n    &lt;ul&gt;\r\n      &lt;li ng-repeat=&quot;i in 5 | range&quot;&gt;\r\n        {{i+1}} &lt;!-- the array will range from 0 to 4 --&gt;\r\n      &lt;/li&gt;\r\n    &lt;/ul&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437239451,
          "answer_id": 31493545,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1451823299,
          "last_edit_date": 1451823299,
          "body_markdown": "For users using CoffeeScript, you can use a range comprehension:\r\n\r\n**Directive**  \r\n\r\n    link: (scope, element, attrs) -&gt;\r\n      scope.range = [1..+attrs.range]\r\n\r\n\r\n**or Controller**   \r\n\r\n    $scope.range = [1..+$someVariable]\r\n    $scope.range = [1..5] # Or just an integer\r\n\r\n\r\n**Template**  \r\n\r\n    &lt;div ng-repeat=&quot;i in range&quot;&gt;[ the rest of your code ]&lt;/div&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438891799,
          "answer_id": 31864879,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1438891799,
          "body_markdown": "I encountered the same problem and this is what I came out with:\r\n\r\n    (function () {\r\n      angular\r\n        .module(&#39;app&#39;)\r\n        .directive(&#39;repeatTimes&#39;, repeatTimes);\r\n\r\n      function repeatTimes ($window, $compile) {\r\n        return { link: link };\r\n\r\n        function link (scope, element, attrs) {\r\n          var times    = scope.$eval(attrs.repeatTimes),\r\n              template = element.clone().removeAttr(&#39;repeat-times&#39;);\r\n\r\n          $window._(times).times(function (i) {\r\n            var _scope = angular.extend(scope.$new(), { &#39;$index&#39;: i });\r\n            var html = $compile(template.clone())(_scope);\r\n\r\n            html.insertBefore(element);\r\n          });\r\n\r\n          element.remove();\r\n        }\r\n      }\r\n    })();\r\n... and the html:\r\n\r\n    &lt;div repeat-times=&quot;4&quot;&gt;{{ $index }}&lt;/div&gt;\r\n[LIVE EXAMPLE](http://codepen.io/nicooga/pen/PqVXPj/?editors=101)\r\n\r\nI used underscore&#39;s `times` function as we where already using it on the project, but you can easily replace that with native code."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1440686023,
          "answer_id": 32252272,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1440686023,
          "body_markdown": "You can use the `ng-if` directive with `ng-repeat`\r\n\r\nSo, if num is the number of times you need the element repeated:\r\n\r\n    &lt;li ng-repeat=&quot;item in list&quot; ng-if=&quot;$index &lt; num&quot;&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1454028627,
          "answer_id": 35075028,
          "path": "stack.bower.answer",
          "score": 11,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1454028627,
          "body_markdown": "This is only a slight variation on the accepted answer, but you don&#39;t really need to create a *new* function. Only to import &#39;Array&#39; in the scope:\r\n\r\n    &lt;div ng-app=&quot;myapp&quot;&gt;\r\n        &lt;div ng-controller=&quot;ctrlParent&quot;&gt;\r\n            &lt;ul&gt;\r\n                &lt;li ng-repeat=&quot;i in counter(5) track by $index&quot;&gt;\r\n                  &lt;span&gt;{{$index+1}}&lt;/span&gt;&lt;/li&gt;\r\n            &lt;/ul&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\n&lt;!-- --&gt;\r\n\r\n    var app = angular.module(&#39;myapp&#39;,[]);\r\n    app.controller(&#39;ctrlParent&#39;,function($scope){\r\n        $scope.myNumber = 5;\r\n        $scope.counter = Array;\r\n    });\r\n\r\nSee [this fiddle][1] for a live example.\r\n\r\n\r\n  [1]: http://jsfiddle.net/cHQLH/512/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1476986065,
          "answer_id": 40161302,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1476986065,
          "body_markdown": "First, create an angular filter using LoDash:\r\n\r\n    angular.module(&#39;myApp&#39;).filter(&#39;times&#39;, function(){\r\n       return function(value){\r\n          return _.times(value || 0);\r\n       }\r\n    });\r\n\r\nThe LoDash times function is capable of handling null, undefined, 0, numbers, and string representation of numbers.\r\n\r\n\r\nThen, use it in your HTML as this:\r\n\r\n    &lt;span ng-repeat=&quot;i in 5 | times&quot;&gt;\r\n     &lt;!--DO STUFF--&gt;\r\n    &lt;/span&gt;\r\n\r\nor \r\n\r\n \r\n\r\n    &lt;span ng-repeat=&quot;i in myVar | times&quot;&gt;\r\n     &lt;!--DO STUFF--&gt;\r\n    &lt;/span&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1497633762,
          "answer_id": 44594836,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1497633762,
          "body_markdown": "A simpler approach would be (for an example of 5 times):\r\n\r\n    &lt;div ng-repeat=&quot;x in [].constructor(5) track by $index&quot;&gt;\r\n           ...\r\n    &lt;/div&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1501783997,
          "answer_id": 45491695,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1501785289,
          "last_edit_date": 1501785289,
          "body_markdown": "I am creating a reusable directive where the max number will come from another ng-repeat. So, this is an edit over the best voted answer. \r\n\r\nJust change the code at controller to this -\r\n\r\n        \r\n    $scope.getNumber = function(num) {\r\n        var temp = [];\r\n        for(var j = 0; j &lt; num; j++){\r\n            temp.push(j)\r\n        }\r\n        return temp; \r\n    }\r\n    \r\nThis will return a new array with specified number of iterations\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1511967073,
          "answer_id": 47555582,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1511967073,
          "body_markdown": "simple way:\r\n\r\n        public defaultCompetences: Array&lt;number&gt; = [1, 2, 3];\r\nin the component/controller and then:\r\n\r\n        &lt;div ng-repeat=&quot;i in $ctrl.defaultCompetences track by $index&quot;&gt;\r\n\r\nThis code is from my typescript project but could be rearranged to pure javascript"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1519254454,
          "answer_id": 48917046,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1519254454,
          "body_markdown": "Expanding a bit on Ivan&#39;s first answer a bit, you can use a string as the collection without a track by statement so long as the characters are unique, so if the use-case is less than 10 numbers as is the question I would simply do:\r\n\r\n    &lt;ul&gt;\r\n       &lt;li ng-repeat=&quot;n in &#39;12345&#39;&quot;&gt;&lt;span&gt;{{n}}&lt;/span&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;\r\n\r\nWhich is a bit jenky, sure, but simple enough to look at and not particularly confusing."
        }
      ],
      "title": "Way to ng-repeat defined number of times instead of repeating over array?",
      "view_count": 308322,
      "answer_count": 25,
      "code_snippet": [
        "<code>$scope.number</code>",
        "<code>&lt;ul&gt;\n   &lt;li&gt;&lt;span&gt;1&lt;/span&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;span&gt;2&lt;/span&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;span&gt;3&lt;/span&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;span&gt;4&lt;/span&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;span&gt;5&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code>",
        "<code>ng-repeat</code>",
        "<code>&lt;ul&gt;\n    &lt;li ng-repeat=\"i in getNumber(number)\"&gt;&lt;span&gt;{{$index+1}}&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code>",
        "<code>$scope.number = 5;\n$scope.getNumber = function(num) {\n    return new Array(num);   \n}\n</code>",
        "<code>$scope.number</code>",
        "<code>getNumber</code>",
        "<code>&lt;li ng-repeat=\"i in getNumber(number) track by $index\"&gt;\n</code>",
        "<code>&lt;div ng-repeat=\"i in [1, 2, 3, 4]\"&gt;\n  ...\n&lt;/div&gt;\n</code>",
        "<code>&lt;div ng-app&gt;\n    &lt;div ng-controller=\"TestCtrl\"&gt;\n        &lt;div ng-repeat=\"a in range(5) track by $index\"&gt;{{$index + 1}}&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code>",
        "<code>function TestCtrl($scope) {\n    $scope.range = function(n) {\n        return new Array(n);\n    };\n};\n</code>",
        "<code>_.range</code>",
        "<code>&lt;div ng-app ng-controller=\"Main\"&gt;\n   &lt;div ng-repeat=\"item in items | limitTo:2\"&gt;\n       {{item.name}}\n   &lt;/div&gt;\n&lt;/div&gt;\n</code>",
        "<code>$scope.number</code>",
        "<code>$scope.limit = 2</code>",
        "<code>...|limitTo:limit</code>",
        "<code>&lt;ul&gt;\n    &lt;li ng-repeat=\"n in _.range(1,6)\"&gt;&lt;span&gt;{{n}}&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code>",
        "<code>$scope._ = _</code>",
        "<code>$rootScope</code>",
        "<code>app.run</code>",
        "<code>app.config</code>",
        "<code>app.run(function ($rootScope) { \t$rootScope._ = _; });</code>",
        "<code>angular.module('awesomeApp')\n  .filter('range', function(){\n    return function(n) {\n      var res = [];\n      for (var i = 0; i &lt; n; i++) {\n        res.push(i);\n      }\n      return res;\n    };\n  });\n</code>",
        "<code>&lt;ul&gt;\n  &lt;li ng-repeat=\"i in 5 | range\"&gt;\n    {{i+1}} &lt;!-- the array will range from 0 to 4 --&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code>",
        "<code>&lt;span ng-repeat=\"_ in ((_ = []) &amp;&amp; (_.length=33) &amp;&amp; _) track by $index\"&gt;{{$index}}&lt;/span&gt;\n</code>",
        "<code>&lt;span ng-repeat=\"_ in ((_ = []) &amp;&amp; (_.length=myVar) &amp;&amp; _) track by $index\"&gt;{{$index}}&lt;/span&gt;\n</code>",
        "<code>_ in (_ = []).length = 33; _ track by $index</code>",
        "<code>&lt;div ng-repeat=\"x in [].constructor(5) track by $index\"&gt;\n       ...\n&lt;/div&gt;\n</code>",
        "<code>bower install angular-repeat-n</code>",
        "<code>&lt;span ng-repeat-n=\"4\"&gt;{{$index}}&lt;/span\n</code>",
        "<code>1234</code>",
        "<code>&lt;span ng-repeat-n=\"repeatNum\"&gt;&lt;/span&gt;\n</code>",
        "<code>&lt;div ng-app=\"myapp\"&gt;\n    &lt;div ng-controller=\"ctrlParent\"&gt;\n        &lt;ul&gt;\n            &lt;li ng-repeat=\"i in counter(5) track by $index\"&gt;\n              &lt;span&gt;{{$index+1}}&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code>",
        "<code>var app = angular.module('myapp',[]);\napp.controller('ctrlParent',function($scope){\n    $scope.myNumber = 5;\n    $scope.counter = Array;\n});\n</code>",
        "<code>$scope.range = new Array(MAX_REPEATS); // set MAX_REPEATS to the most repetitions you will ever need in a single ng-repeat that makes use of this strategy\n</code>",
        "<code>&lt;div ng-repeat=\"i in range.slice(0,repeatCount) track by $index\"&gt;&lt;/div&gt;\n</code>",
        "<code>repeatCount</code>",
        "<code>repeatCount</code>",
        "<code>MAX_REPEATS</code>",
        "<code>ngRepeat</code>",
        "<code>Array.prototype.slice</code>",
        "<code>&lt;div class=\"div\" ng-app &gt;\n    &lt;div ng-controller=\"Main\"&gt;\n        &lt;h2&gt;sliced list(conditional NG-repeat)&lt;/h2&gt;\n        &lt;ul ng-controller=\"ctrlParent\"&gt;\n            &lt;li ng-repeat=\"ab in abc.slice(2,5)\"&gt;&lt;span&gt;{{$index+1}} :: {{ab.name}} &lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;h2&gt;unsliced list( no conditional NG-repeat)&lt;/h2&gt;\n         &lt;ul ng-controller=\"ctrlParent\"&gt;\n            &lt;li ng-repeat=\"ab in abc\"&gt;&lt;span&gt;{{$index+1}} :: {{ab.name}} &lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n\n    &lt;/div&gt;\n</code>",
        "<code>ul\n{\nlist-style: none;\n}\n.div{\n    padding:25px;\n}\nli{\n    background:#d4d4d4;\n    color:#052349;\n}\n</code>",
        "<code> function ctrlParent ($scope) {\n    $scope.abc = [\n     { \"name\": \"What we do\", url: \"/Home/AboutUs\" },\n     { \"name\": \"Photo Gallery\", url: \"/home/gallery\" },\n     { \"name\": \"What we work\", url: \"/Home/AboutUs\" },\n     { \"name\": \"Photo play\", url: \"/home/gallery\" },\n     { \"name\": \"Where\", url: \"/Home/AboutUs\" },\n     { \"name\": \"playground\", url: \"/home/gallery\" },\n     { \"name\": \"What we score\", url: \"/Home/AboutUs\" },\n     { \"name\": \"awesome\", url: \"/home/gallery\" },\n     { \"name\": \"oscar\", url: \"/Home/AboutUs\" },\n     { \"name\": \"american hustle\", url: \"/home/gallery\" }\n    ];\n}\nfunction Main($scope){\n    $scope.items = [{sort: 1, name: 'First'}, \n                    {sort: 2, name: 'Second'}, \n                    {sort: 3, name: 'Third'}, \n                    {sort: 4, name:'Last'}];\n    }\n</code>",
        "<code>ng-repeat</code>",
        "<code>&lt;li ng-repeat=\"i in getNumber(myNumber) track by $index\"&gt;\n</code>",
        "<code>&lt;li ng-repeat=\"x in [1,1,1]\"&gt;&lt;/li&gt;\n</code>",
        "<code>ng-if</code>",
        "<code>ng-repeat</code>",
        "<code>&lt;li ng-repeat=\"item in list\" ng-if=\"$index &lt; num\"&gt;\n</code>",
        "<code>ng-repeat</code>",
        "<code>&lt;!-- ngIf: $index &lt; num --&gt;</code>",
        "<code>li</code>",
        "<code>link: (scope, element, attrs) -&gt;\n  scope.range = [1..+attrs.range]\n</code>",
        "<code>$scope.range = [1..+$someVariable]\n$scope.range = [1..5] # Or just an integer\n</code>",
        "<code>&lt;div ng-repeat=\"i in range\"&gt;[ the rest of your code ]&lt;/div&gt;\n</code>",
        "<code>angular.module('myApp').filter('times', function(){\n   return function(value){\n      return _.times(value || 0);\n   }\n});\n</code>",
        "<code>&lt;span ng-repeat=\"i in 5 | times\"&gt;\n &lt;!--DO STUFF--&gt;\n&lt;/span&gt;\n</code>",
        "<code>&lt;span ng-repeat=\"i in myVar | times\"&gt;\n &lt;!--DO STUFF--&gt;\n&lt;/span&gt;\n</code>",
        "<code>$scope.data = {\n    'myVal': 33,\n    'maxVal': 55,\n    'indexCount': function(count) {\n        var cnt = 10;\n        if (typeof count === 'number') {\n            cnt = count;\n        }\n        return new Array(cnt);\n    }\n};\n</code>",
        "<code>&lt;select ng-model=\"data.myVal\" value=\"{{ data.myVal }}\"&gt;\n    &lt;option ng-repeat=\"i in data.indexCount(data.maxVal) track by $index\" value=\"{{ $index + 1 }}\"&gt;{{ $index + 1 }}&lt;/option&gt;\n&lt;/select&gt;\n</code>",
        "<code>&lt;div ng-controller=\"MainCtrl\"&gt;\n&lt;div ng-repeat=\"a in 'abcdefgh'.split('')\"&gt;{{$index}}&lt;/div&gt;\n&lt;/div&gt;\n</code>",
        "<code>&lt;div ng-repeat=\"n in newUserCount\"&gt;\n&lt;input type=\"text\" value=\"\" name=\"newuser{{n}}\"/&gt;\n&lt;/div&gt;\n</code>",
        "<code>&lt;span class=\"helper\" ng-click=\"duplicateUser()\"&gt;\nCreate another user with the same permissions\n&lt;/span&gt;\n</code>",
        "<code> $scope.newUserCount = Array('1');\nvar primaryValue = 1;\n$scope.duplicateUser = function()\n{\n    primaryValue++;\n    $scope.newUserCount.push(primaryValue)\n}\n</code>",
        "<code>&lt;div id=\"demo\"&gt;\n    &lt;ul&gt;\n        &lt;li ng-repeat=\"not in []|fixedNumber:number track by $index\"&gt;{{$index}}&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code>",
        "<code>module.filter('fixedNumber', function() {\n    return function(emptyarray, number) {\n        return Array(number);\n    }\n});\n\nmodule.controller('myCtrl', ['$scope', function($scope) {\n    $scope.number = 5;\n}]);\n</code>",
        "<code>(function () {\n  angular\n    .module('app')\n    .directive('repeatTimes', repeatTimes);\n\n  function repeatTimes ($window, $compile) {\n    return { link: link };\n\n    function link (scope, element, attrs) {\n      var times    = scope.$eval(attrs.repeatTimes),\n          template = element.clone().removeAttr('repeat-times');\n\n      $window._(times).times(function (i) {\n        var _scope = angular.extend(scope.$new(), { '$index': i });\n        var html = $compile(template.clone())(_scope);\n\n        html.insertBefore(element);\n      });\n\n      element.remove();\n    }\n  }\n})();\n</code>",
        "<code>&lt;div repeat-times=\"4\"&gt;{{ $index }}&lt;/div&gt;\n</code>",
        "<code>times</code>",
        "<code>$scope.getNumber = function(num) {\n    var temp = [];\n    for(var j = 0; j &lt; num; j++){\n        temp.push(j)\n    }\n    return temp; \n}\n</code>",
        "<code>    public defaultCompetences: Array&lt;number&gt; = [1, 2, 3];\n</code>",
        "<code>    &lt;div ng-repeat=\"i in $ctrl.defaultCompetences track by $index\"&gt;\n</code>",
        "<code>&lt;li ng-repeat = \"k in 'aaaa' track by $index\"&gt;\n   {{$index}} //THIS DOESN'T ANSWER OP'S QUESTION. Read below.\n&lt;/li&gt;\n</code>",
        "<code>number|n decimal places</code>",
        "<code> &lt;li ng-repeat=\"k in (0|number:mynumber -2 ) track by $index\"&gt;\n    {{$index}}\n &lt;/li&gt;\n</code>",
        "<code>mynumber</code>",
        "<code>'0.000'</code>",
        "<code>mynumber - 2</code>",
        "<code>0.</code>",
        "<code>track by $index</code>",
        "<code>ng-repeat=\"i in [1,2,3,4]\"</code>",
        "<code>$scope.number</code>",
        "<code>&lt;ul&gt;\n   &lt;li ng-repeat=\"n in '12345'\"&gt;&lt;span&gt;{{n}}&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "base64"
      ],
      "creation_date": 1225287258,
      "body_markdown": "I have a PHP script that can encode a PNG image to a Base64 string.\r\n\r\nI&#39;d like to do the same thing using JavaScript. I know how to open files, but I&#39;m not sure how to do the encoding? I&#39;m not used to working with binary data.\r\n",
      "last_edit_date": 1370549209,
      "up_vote_count": 572,
      "link": "https://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1225287557,
          "answer_id": 246813,
          "path": "stack.bower.answer",
          "score": 262,
          "up_vote_count": 266,
          "is_accepted": false,
          "last_activity_date": 1355407353,
          "last_edit_date": 1355407353,
          "body_markdown": "[From here][1]:\r\n\r\n     \r\n    /**\r\n    *\r\n    *  Base64 encode / decode\r\n    *  http://www.webtoolkit.info/\r\n    *\r\n    **/\r\n    var Base64 = {\r\n \r\n\t// private property\r\n\t_keyStr : &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,\r\n \r\n\t// public method for encoding\r\n\tencode : function (input) {\r\n\t\tvar output = &quot;&quot;;\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n \r\n\t\tinput = Base64._utf8_encode(input);\r\n \r\n\t\twhile (i &lt; input.length) {\r\n \r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n \r\n\t\t\tenc1 = chr1 &gt;&gt; 2;\r\n\t\t\tenc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\r\n\t\t\tenc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\r\n\t\t\tenc4 = chr3 &amp; 63;\r\n \r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n \r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n \r\n\t\t}\r\n \r\n\t\treturn output;\r\n\t},\r\n \r\n\t// public method for decoding\r\n\tdecode : function (input) {\r\n\t\tvar output = &quot;&quot;;\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n \r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, &quot;&quot;);\r\n \r\n\t\twhile (i &lt; input.length) {\r\n \r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n \r\n\t\t\tchr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\r\n\t\t\tchr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\r\n\t\t\tchr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\r\n \r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n \r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n \r\n\t\t}\r\n \r\n\t\toutput = Base64._utf8_decode(output);\r\n \r\n\t\treturn output;\r\n \r\n\t},\r\n \r\n\t// private method for UTF-8 encoding\r\n\t_utf8_encode : function (string) {\r\n\t\tstring = string.replace(/\\r\\n/g,&quot;\\n&quot;);\r\n\t\tvar utftext = &quot;&quot;;\r\n \r\n\t\tfor (var n = 0; n &lt; string.length; n++) {\r\n \r\n\t\t\tvar c = string.charCodeAt(n);\r\n \r\n\t\t\tif (c &lt; 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c &gt;&gt; 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c &amp; 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c &gt;&gt; 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c &amp; 63) | 128);\r\n\t\t\t}\r\n \r\n\t\t}\r\n \r\n\t\treturn utftext;\r\n\t},\r\n \r\n\t// private method for UTF-8 decoding\r\n\t_utf8_decode : function (utftext) {\r\n\t\tvar string = &quot;&quot;;\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n \r\n\t\twhile ( i &lt; utftext.length ) {\r\n \r\n\t\t\tc = utftext.charCodeAt(i);\r\n \r\n\t\t\tif (c &lt; 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n \r\n\t\t}\r\n \r\n\t\treturn string;\r\n\t}\r\n \r\n    }\r\n\r\nAlso, search on [&quot;javascript base64 encoding&quot;][2] turns a lot of other options, the above was the first one.\r\n\r\n\r\n\r\n  [1]: http://www.webtoolkit.info/javascript-base64.html\r\n  [2]: http://www.google.com/search?q=javascript+base64+encode\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1225294263,
          "answer_id": 247261,
          "path": "stack.bower.answer",
          "score": 582,
          "up_vote_count": 582,
          "is_accepted": true,
          "last_activity_date": 1480600798,
          "last_edit_date": 1495541903,
          "body_markdown": "You can use [`btoa()`][1] and [`atob()`][2] to convert to and from base64 encoding.\r\n\r\nThere appears to be some confusion in the comments regarding what these functions accept/return, so…\r\n\r\n- `btoa()` accepts a “string” where each character represents an 8-bit byte – if you pass a string containing characters that can’t be represented in 8 bits, [it will probably break][3]. This isn’t a problem *if* you’re actually treating the string as a byte array, but if you’re trying to do something else then you’ll have to encode it first.\r\n\r\n- `atob()` returns a “string” where each character represents an 8-bit byte – that is, its value will be between `0` and `0xff`. This does *not* mean it’s ASCII – presumably if you’re using this function at all, you expect to be working with binary data and not text.\r\n\r\n### See also: \r\n\r\n- https://stackoverflow.com/questions/1095102/how-do-i-load-binary-image-data-using-javascript-and-xmlhttprequest\r\n\r\n\r\n  [1]: https://developer.mozilla.org/En/DOM/Window.btoa\r\n  [2]: https://developer.mozilla.org/en/DOM/window.atob\r\n  [3]: https://developer.mozilla.org/en-US/docs/Web/API/window.btoa#Unicode_Strings"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1311026914,
          "answer_id": 6740027,
          "path": "stack.bower.answer",
          "score": 90,
          "up_vote_count": 90,
          "is_accepted": false,
          "last_activity_date": 1311026914,
          "body_markdown": "Sunny&#39;s code is great except it breaks in IE7 because of references to &quot;this&quot;.   Fixed by replacing such references with &quot;Base64&quot;:\r\n\r\n    var Base64 = {\r\n    // private property\r\n    _keyStr : &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,\r\n\r\n    // public method for encoding\r\n    encode : function (input) {\r\n        var output = &quot;&quot;;\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n\r\n        input = Base64._utf8_encode(input);\r\n\r\n        while (i &lt; input.length) {\r\n\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 &gt;&gt; 2;\r\n            enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\r\n            enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\r\n            enc4 = chr3 &amp; 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            output = output +\r\n            Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\r\n            Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\r\n\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    // public method for decoding\r\n    decode : function (input) {\r\n        var output = &quot;&quot;;\r\n        var chr1, chr2, chr3;\r\n        var enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, &quot;&quot;);\r\n\r\n        while (i &lt; input.length) {\r\n\r\n            enc1 = Base64._keyStr.indexOf(input.charAt(i++));\r\n            enc2 = Base64._keyStr.indexOf(input.charAt(i++));\r\n            enc3 = Base64._keyStr.indexOf(input.charAt(i++));\r\n            enc4 = Base64._keyStr.indexOf(input.charAt(i++));\r\n\r\n            chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\r\n            chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\r\n            chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\r\n\r\n            output = output + String.fromCharCode(chr1);\r\n\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n\r\n        }\r\n\r\n        output = Base64._utf8_decode(output);\r\n\r\n        return output;\r\n\r\n    },\r\n\r\n    // private method for UTF-8 encoding\r\n    _utf8_encode : function (string) {\r\n        string = string.replace(/\\r\\n/g,&quot;\\n&quot;);\r\n        var utftext = &quot;&quot;;\r\n\r\n        for (var n = 0; n &lt; string.length; n++) {\r\n\r\n            var c = string.charCodeAt(n);\r\n\r\n            if (c &lt; 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\r\n                utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\r\n                utftext += String.fromCharCode((c &amp; 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\r\n                utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\r\n                utftext += String.fromCharCode((c &amp; 63) | 128);\r\n            }\r\n\r\n        }\r\n\r\n        return utftext;\r\n    },\r\n\r\n    // private method for UTF-8 decoding\r\n    _utf8_decode : function (utftext) {\r\n        var string = &quot;&quot;;\r\n        var i = 0;\r\n        var c = c1 = c2 = 0;\r\n\r\n        while ( i &lt; utftext.length ) {\r\n\r\n            c = utftext.charCodeAt(i);\r\n\r\n            if (c &lt; 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\r\n                c2 = utftext.charCodeAt(i+1);\r\n                string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c2 = utftext.charCodeAt(i+1);\r\n                c3 = utftext.charCodeAt(i+2);\r\n                string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));\r\n                i += 3;\r\n            }\r\n\r\n        }\r\n        return string;\r\n    }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1311714876,
          "answer_id": 6836708,
          "path": "stack.bower.answer",
          "score": 25,
          "up_vote_count": 25,
          "is_accepted": false,
          "last_activity_date": 1311714876,
          "body_markdown": "There&#39;s a couple of bugs in both implementations of `_utf8_decode`. `c1` and `c2` are assigned as global variables due to broken use of the `var` statement, and `c3` is not initialized or declared at all.\r\n\r\nIt works, but these variables will overwrite any existing ones with the same name outside this function.\r\n\r\nHere&#39;s a version that won&#39;t do this:\r\n\r\n    // private method for UTF-8 decoding\r\n    _utf8_decode : function (utftext) {\r\n        var string = &quot;&quot;;\r\n        var i = 0;\r\n        var c = 0, c1 = 0, c2 = 0;\r\n\r\n        while ( i &lt; utftext.length ) {\r\n\r\n            c = utftext.charCodeAt(i);\r\n\r\n            if (c &lt; 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\r\n                c1 = utftext.charCodeAt(i+1);\r\n                string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c1 &amp; 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c1 = utftext.charCodeAt(i+1);\r\n                c2 = utftext.charCodeAt(i+2);\r\n                string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c1 &amp; 63) &lt;&lt; 6) | (c2 &amp; 63));\r\n                i += 3;\r\n            }\r\n\r\n        }\r\n        return string;\r\n    }\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1313939258,
          "answer_id": 7139071,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1313939258,
          "body_markdown": "To make a Base64 encoded String URL friendly, in JavaScript you could do something like this:\r\n\r\n    // if this is your Base64 encoded string\r\n    var str = &#39;VGhpcyBpcyBhbiBhd2Vzb21lIHNjcmlwdA==&#39;; \r\n\r\n    // make URL friendly:\r\n    str = str.replace(/\\+/g, &#39;-&#39;).replace(/\\//g, &#39;_&#39;).replace(/\\=+$/, &#39;&#39;);\r\n\r\n    // reverse to original encoding\r\n    str = (str + &#39;===&#39;).slice(0, str.length + (str.length % 4));\r\n    str = str.replace(/-/g, &#39;+&#39;).replace(/_/g, &#39;/&#39;);\r\n\r\nSee also this Fiddle: http://jsfiddle.net/magikMaker/7bjaT/"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1324956434,
          "answer_id": 8640873,
          "path": "stack.bower.answer",
          "score": 84,
          "up_vote_count": 90,
          "is_accepted": false,
          "last_activity_date": 1417437884,
          "last_edit_date": 1417437884,
          "body_markdown": "You can use `btoa` (to base-64) and `atob` (from base-64). \r\n\r\nFor IE 9 and below, try the [jquery-base64][1] plugin:\r\n\r\n    $.base64.encode(&quot;this is a test&quot;);\r\n    $.base64.decode(&quot;dGhpcyBpcyBhIHRlc3Q=&quot;);\r\n\r\n  [1]: https://github.com/carlo/jquery-base64"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1345478851,
          "answer_id": 12041192,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1345478851,
          "body_markdown": "I +1&#39;ed Sunny&#39;s answer, but I wanted to contribute back a few changes I made for my own project in case anyone should find it useful. Basically I&#39;ve just cleaned up the original code a little so JSLint doesn&#39;t complain quite as much, and I made the methods marked as private in the comments actually private. I also added two methods I needed in my own project, namely `decodeToHex` and `encodeFromHex`.\r\n\r\nThe code:\r\n\r\n    var Base64 = (function() {\r\n        &quot;use strict&quot;;\r\n    \r\n        var _keyStr = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;;\r\n    \r\n        var _utf8_encode = function (string) {\r\n    \r\n            var utftext = &quot;&quot;, c, n;\r\n    \r\n            string = string.replace(/\\r\\n/g,&quot;\\n&quot;);\r\n    \r\n            for (n = 0; n &lt; string.length; n++) {\r\n    \r\n                c = string.charCodeAt(n);\r\n    \r\n                if (c &lt; 128) {\r\n                \r\n                    utftext += String.fromCharCode(c);\r\n                \r\n                } else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\r\n                \r\n                    utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\r\n                    utftext += String.fromCharCode((c &amp; 63) | 128);\r\n                \r\n                } else {\r\n                    \r\n                    utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\r\n                    utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\r\n                    utftext += String.fromCharCode((c &amp; 63) | 128);\r\n                \r\n                }\r\n    \r\n            }\r\n    \r\n            return utftext;\r\n        };\r\n    \r\n        var _utf8_decode = function (utftext) {\r\n            var string = &quot;&quot;, i = 0, c = 0, c1 = 0, c2 = 0;\r\n    \r\n            while ( i &lt; utftext.length ) {\r\n    \r\n                c = utftext.charCodeAt(i);\r\n    \r\n                if (c &lt; 128) {\r\n    \r\n                    string += String.fromCharCode(c);\r\n                    i++;\r\n                \r\n                } else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\r\n                  \r\n                    c1 = utftext.charCodeAt(i+1);\r\n                    string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c1 &amp; 63));\r\n                    i += 2;\r\n                \r\n                } else {\r\n                  \r\n                    c1 = utftext.charCodeAt(i+1);\r\n                    c2 = utftext.charCodeAt(i+2);\r\n                    string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c1 &amp; 63) &lt;&lt; 6) | (c2 &amp; 63));\r\n                    i += 3;\r\n                \r\n                }\r\n    \r\n            }\r\n    \r\n            return string;\r\n        };\r\n    \r\n        var _hexEncode = function(input) {\r\n            var output = &#39;&#39;, i;\r\n    \r\n            for(i = 0; i &lt; input.length; i++) {\r\n                output += input.charCodeAt(i).toString(16);\r\n            }\r\n    \r\n            return output;\r\n        };\r\n    \r\n        var _hexDecode = function(input) {\r\n            var output = &#39;&#39;, i;\r\n    \r\n            if(input.length % 2 &gt; 0) {\r\n                input = &#39;0&#39; + input;\r\n            }\r\n    \r\n            for(i = 0; i &lt; input.length; i = i + 2) {\r\n                output += String.fromCharCode(parseInt(input.charAt(i) + input.charAt(i + 1), 16));\r\n            }\r\n    \r\n            return output;\r\n        };\r\n        \r\n        var encode = function (input) {\r\n            var output = &quot;&quot;, chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\r\n    \r\n            input = _utf8_encode(input);\r\n    \r\n            while (i &lt; input.length) {\r\n    \r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n    \r\n                enc1 = chr1 &gt;&gt; 2;\r\n                enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\r\n                enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\r\n                enc4 = chr3 &amp; 63;\r\n    \r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n    \r\n                output += _keyStr.charAt(enc1);\r\n                output += _keyStr.charAt(enc2);\r\n                output += _keyStr.charAt(enc3);\r\n                output += _keyStr.charAt(enc4);\r\n    \r\n            }\r\n    \r\n            return output;\r\n        };\r\n    \r\n        var decode = function (input) {\r\n            var output = &quot;&quot;, chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\r\n    \r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, &quot;&quot;);\r\n    \r\n            while (i &lt; input.length) {\r\n    \r\n                enc1 = _keyStr.indexOf(input.charAt(i++));\r\n                enc2 = _keyStr.indexOf(input.charAt(i++));\r\n                enc3 = _keyStr.indexOf(input.charAt(i++));\r\n                enc4 = _keyStr.indexOf(input.charAt(i++));\r\n    \r\n                chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\r\n                chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\r\n                chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\r\n    \r\n                output += String.fromCharCode(chr1);\r\n    \r\n                if (enc3 !== 64) {\r\n                    output += String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 !== 64) {\r\n                    output += String.fromCharCode(chr3);\r\n                }\r\n    \r\n            }\r\n    \r\n            return _utf8_decode(output);\r\n        };\r\n    \r\n        var decodeToHex = function(input) {\r\n            return _hexEncode(decode(input));\r\n        };\r\n    \r\n        var encodeFromHex = function(input) {\r\n            return encode(_hexDecode(input));\r\n        };\r\n    \r\n        return {\r\n            &#39;encode&#39;: encode,\r\n            &#39;decode&#39;: decode,\r\n            &#39;decodeToHex&#39;: decodeToHex,\r\n            &#39;encodeFromHex&#39;: encodeFromHex\r\n        };\r\n    }());"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1358029725,
          "answer_id": 14298618,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1358029725,
          "body_markdown": "if you need to encode HTML image object,\r\nyou can write simple function like:\r\n\r\n    function getBase64Image(img) {  \r\n      var canvas = document.createElement(&quot;canvas&quot;);  \r\n      canvas.width = img.width;  \r\n      canvas.height = img.height;  \r\n      var ctx = canvas.getContext(&quot;2d&quot;);  \r\n      ctx.drawImage(img, 0, 0);  \r\n      var dataURL = canvas.toDataURL(&quot;image/png&quot;);  \r\n      // escape data:image prefix\r\n      return dataURL.replace(/^data:image\\/(png|jpg);base64,/, &quot;&quot;);  \r\n      // or just return dataURL\r\n      // return dataURL\r\n    }  \r\n  \r\nTo get base64 of image by id:\r\n\r\n    function getBase64ImageById(id){  \r\n      return getBase64Image(document.getElementById(id));  \r\n    } \r\n\r\nmore [here][1]\r\n\r\n\r\n  [1]: http://drcreazy.com/art/61/base64-javascript.aspx"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1359981598,
          "answer_id": 14687010,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1359981598,
          "body_markdown": "Please note that this is not suitable for raw Unicode strings! See Unicode section &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.btoa&quot;&gt;here&lt;/a&gt;.\r\n\r\nSyntax for encoding\r\n\r\n  `var encodedData = window.btoa(stringToEncode);`\r\n\r\nSyntax for decoding\r\n\r\n  `var decodedData = window.atob(encodedData);`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1363654566,
          "answer_id": 15489720,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1363654566,
          "body_markdown": "I have re-wrote by hand, these encoding and decoding methods with the exception of the hexadecimal one into a modular format for cross-platform / browser compatibility and also with real private scoping, and uses `btoa` and `atob` if they exist due to speed rather than utilize its own encoding:\r\n\r\nhttps://gist.github.com/Nijikokun/5192472\r\n\r\nUsage:\r\n\r\n    base64.encode(/* String */);\r\n    base64.decode(/* String */);\r\n\r\n    utf8.encode(/* String */);\r\n    utf8.decode(/* String */);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1374648751,
          "answer_id": 17827101,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1374648751,
          "body_markdown": "For my project I still need to support IE7 and work with large input to encode.\r\n\r\nBased on the code proposed by Joe Dyndale and as suggested in comment by Marius, it is possible to improve the performance with IE7 by constructing the result with an array instead of a string.\r\n\r\nHere is the example for encode:\r\n\r\n    var encode = function (input) {\r\n        var output = [], chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\r\n\r\n        input = _utf8_encode(input);\r\n\r\n        while (i &lt; input.length) {\r\n\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 &gt;&gt; 2;\r\n            enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\r\n            enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\r\n            enc4 = chr3 &amp; 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            output.push(_keyStr.charAt(enc1));\r\n            output.push(_keyStr.charAt(enc2));\r\n            output.push(_keyStr.charAt(enc3));\r\n            output.push(_keyStr.charAt(enc4));\r\n\r\n        }\r\n\r\n        return output.join(&quot;&quot;);\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1377785434,
          "answer_id": 18513304,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1435828618,
          "last_edit_date": 1435828618,
          "body_markdown": "Well, if you are using dojo, it gives us direct way to encode or decode into base64.\r\n    \r\nTry this:-\r\n    \r\nTo encode an array of bytes using dojox.encoding.base64:\r\n    \r\n    var str = dojox.encoding.base64.encode(myByteArray);\r\n    \r\nTo decode a base64-encoded string:\r\n    \r\n    var bytes = dojox.encoding.base64.decode(str);\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1384671924,
          "answer_id": 20028154,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1384671924,
          "body_markdown": "I&#39;d rather use the bas64 encode/decode methods from [CryptoJS](https://code.google.com/p/crypto-js/#Encoders), the most popular library for standard and secure cryptographic algorithms implemented in JavaScript using best practices and patterns."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1384935899,
          "answer_id": 20090752,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1384935899,
          "body_markdown": "Contributing with a minified polyfill for `window.atob` + `window.btoa` that I&#39;m currently using.\r\n\r\n    (function(){function t(t){this.message=t}var e=&quot;undefined&quot;!=typeof exports?exports:this,r=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;;t.prototype=Error(),t.prototype.name=&quot;InvalidCharacterError&quot;,e.btoa||(e.btoa=function(e){for(var o,n,a=0,i=r,c=&quot;&quot;;e.charAt(0|a)||(i=&quot;=&quot;,a%1);c+=i.charAt(63&amp;o&gt;&gt;8-8*(a%1))){if(n=e.charCodeAt(a+=.75),n&gt;255)throw new t(&quot;&#39;btoa&#39; failed: The string to be encoded contains characters outside of the Latin1 range.&quot;);o=o&lt;&lt;8|n}return c}),e.atob||(e.atob=function(e){if(e=e.replace(/=+$/,&quot;&quot;),1==e.length%4)throw new t(&quot;&#39;atob&#39; failed: The string to be decoded is not correctly encoded.&quot;);for(var o,n,a=0,i=0,c=&quot;&quot;;n=e.charAt(i++);~n&amp;&amp;(o=a%4?64*o+n:n,a++%4)?c+=String.fromCharCode(255&amp;o&gt;&gt;(6&amp;-2*a)):0)n=r.indexOf(n);return c})})();\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1400992049,
          "answer_id": 23852010,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1400992049,
          "body_markdown": "Here is an AngularJS Factory version of @user850789&#39;s one:\r\n\r\n    &#39;use strict&#39;;\r\n    \r\n    var ProjectNameBase64Factory = angular.module(&#39;project_name.factories.base64&#39;, []);\r\n    \r\n    ProjectNameBase64Factory.factory(&#39;Base64&#39;, function () {\r\n        var Base64 = {\r\n            // private property\r\n            _keyStr: &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,\r\n    \r\n            // public method for encoding\r\n            encode: function (input) {\r\n                var output = &quot;&quot;;\r\n                var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n                var i = 0;\r\n    \r\n                input = Base64._utf8_encode(input);\r\n    \r\n                while (i &lt; input.length) {\r\n    \r\n                    chr1 = input.charCodeAt(i++);\r\n                    chr2 = input.charCodeAt(i++);\r\n                    chr3 = input.charCodeAt(i++);\r\n    \r\n                    enc1 = chr1 &gt;&gt; 2;\r\n                    enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\r\n                    enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\r\n                    enc4 = chr3 &amp; 63;\r\n    \r\n                    if (isNaN(chr2)) {\r\n                        enc3 = enc4 = 64;\r\n                    } else if (isNaN(chr3)) {\r\n                        enc4 = 64;\r\n                    }\r\n    \r\n                    output = output +\r\n                             Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\r\n                             Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\r\n    \r\n                }\r\n    \r\n                return output;\r\n            },\r\n    \r\n            // public method for decoding\r\n            decode: function (input) {\r\n                var output = &quot;&quot;;\r\n                var chr1, chr2, chr3;\r\n                var enc1, enc2, enc3, enc4;\r\n                var i = 0;\r\n    \r\n                input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, &quot;&quot;);\r\n    \r\n                while (i &lt; input.length) {\r\n    \r\n                    enc1 = Base64._keyStr.indexOf(input.charAt(i++));\r\n                    enc2 = Base64._keyStr.indexOf(input.charAt(i++));\r\n                    enc3 = Base64._keyStr.indexOf(input.charAt(i++));\r\n                    enc4 = Base64._keyStr.indexOf(input.charAt(i++));\r\n    \r\n                    chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\r\n                    chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\r\n                    chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\r\n    \r\n                    output = output + String.fromCharCode(chr1);\r\n    \r\n                    if (enc3 != 64) {\r\n                        output = output + String.fromCharCode(chr2);\r\n                    }\r\n                    if (enc4 != 64) {\r\n                        output = output + String.fromCharCode(chr3);\r\n                    }\r\n    \r\n                }\r\n    \r\n                output = Base64._utf8_decode(output);\r\n    \r\n                return output;\r\n    \r\n            },\r\n    \r\n            // private method for UTF-8 encoding\r\n            _utf8_encode: function (string) {\r\n                string = string.replace(/\\r\\n/g, &quot;\\n&quot;);\r\n                var utftext = &quot;&quot;;\r\n    \r\n                for (var n = 0; n &lt; string.length; n++) {\r\n    \r\n                    var c = string.charCodeAt(n);\r\n    \r\n                    if (c &lt; 128) {\r\n                        utftext += String.fromCharCode(c);\r\n                    }\r\n                    else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\r\n                        utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\r\n                        utftext += String.fromCharCode((c &amp; 63) | 128);\r\n                    }\r\n                    else {\r\n                        utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\r\n                        utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\r\n                        utftext += String.fromCharCode((c &amp; 63) | 128);\r\n                    }\r\n    \r\n                }\r\n    \r\n                return utftext;\r\n            },\r\n    \r\n            // private method for UTF-8 decoding\r\n            _utf8_decode: function (utftext) {\r\n                var string = &quot;&quot;;\r\n                var i = 0;\r\n                var c = 0, c2 = 0, c3 = 0;\r\n    \r\n                while (i &lt; utftext.length) {\r\n    \r\n                    c = utftext.charCodeAt(i);\r\n    \r\n                    if (c &lt; 128) {\r\n                        string += String.fromCharCode(c);\r\n                        i++;\r\n                    }\r\n                    else if ((c &gt; 191) &amp;&amp; (c &lt; 224)) {\r\n                        c2 = utftext.charCodeAt(i + 1);\r\n                        string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));\r\n                        i += 2;\r\n                    }\r\n                    else {\r\n                        c2 = utftext.charCodeAt(i + 1);\r\n                        c3 = utftext.charCodeAt(i + 2);\r\n                        string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));\r\n                        i += 3;\r\n                    }\r\n    \r\n                }\r\n                return string;\r\n            }\r\n        };\r\n        return Base64;\r\n    });\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1412447641,
          "answer_id": 26195897,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1412447641,
          "body_markdown": "I needed encoding of an UTF-8 string as base64 for a project of mine. Most of the answers here don&#39;t seem to properly handle UTF-16 surrogate pairs when converting to UTF-8 so, for completion sake, I will post my solution:\r\n\r\n    function strToUTF8Base64(str) {\r\n    \r\n    \tfunction decodeSurrogatePair(hi, lo) {\r\n    \t\tvar resultChar = 0x010000;\r\n    \t\tresultChar += lo - 0xDC00;\r\n    \t\tresultChar += (hi - 0xD800) &lt;&lt; 10;\r\n    \t\treturn resultChar;\r\n    \t}\r\n    \r\n    \tvar bytes = [0, 0, 0];\r\n    \tvar byteIndex = 0;\r\n    \tvar result = [];\r\n    \r\n    \tfunction output(s) {\r\n    \t\tresult.push(s);\r\n    \t}\r\n    \r\n    \tfunction emitBase64() {\r\n    \r\n    \t\tvar digits =\r\n    \t\t\t\t&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39; +\r\n    \t\t\t\t&#39;abcdefghijklmnopqrstuvwxyz&#39; +\r\n    \t\t\t\t&#39;0123456789+/&#39;;\r\n    \r\n    \t\tfunction toDigit(value) {\r\n    \t\t\treturn digits[value];\r\n    \t\t}\r\n    \r\n    \t\t// --Byte 0--    --Byte 1--    --Byte 2--\r\n    \t\t// 1111  1122    2222  3333    3344  4444\r\n    \r\n    \t\tvar d1 = toDigit(bytes[0] &gt;&gt; 2);\r\n    \t\tvar d2 = toDigit(\r\n    \t\t\t((bytes[0] &amp; 0x03) &lt;&lt; 4) |\r\n    \t\t\t(bytes[1] &gt;&gt; 4));\r\n    \t\tvar d3 = toDigit(\r\n    \t\t\t((bytes[1] &amp; 0x0F) &lt;&lt; 2) |\r\n    \t\t\t(bytes[2] &gt;&gt; 6));\r\n    \t\tvar d4 = toDigit(\r\n    \t\t\tbytes[2] &amp; 0x3F);\r\n    \r\n    \t\tif (byteIndex === 1) {\r\n    \t\t\toutput(d1 + d2 + &#39;==&#39;);\r\n    \t\t}\r\n    \t\telse if (byteIndex === 2) {\r\n    \t\t\toutput(d1 + d2 + d3 + &#39;=&#39;);\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\toutput(d1 + d2 + d3 + d4);\r\n    \t\t}\r\n    \t}\r\n    \r\n    \tfunction emit(chr) {\r\n    \t\tbytes[byteIndex++] = chr;\r\n    \t\tif (byteIndex == 3) {\r\n    \t\t\temitBase64();\r\n    \t\t\tbytes[0] = 0;\r\n    \t\t\tbytes[1] = 0;\r\n    \t\t\tbytes[2] = 0;\r\n    \t\t\tbyteIndex = 0;\r\n    \t\t}\r\n    \t}\r\n    \r\n    \tfunction emitLast() {\r\n    \t\tif (byteIndex &gt; 0) {\r\n    \t\t\temitBase64();\r\n    \t\t}\r\n    \t}\r\n    \r\n    \t// Converts the string to UTF8:\r\n    \r\n    \tvar i, chr;\r\n    \tvar hi, lo;\r\n    \tfor (i = 0; i &lt; str.length; i++) {\r\n    \t\tchr = str.charCodeAt(i);\r\n    \r\n    \t\t// Test and decode surrogate pairs in the string\r\n    \t\tif (chr &gt;= 0xD800 &amp;&amp; chr &lt;= 0xDBFF) {\r\n    \t\t\thi = chr;\r\n    \t\t\tlo = str.charCodeAt(i + 1);\r\n    \t\t\tif (lo &gt;= 0xDC00 &amp;&amp; lo &lt;= 0xDFFF) {\r\n    \t\t\t\tchr = decodeSurrogatePair(hi, lo);\r\n    \t\t\t\ti++;\r\n    \t\t\t}\r\n    \t\t}\r\n    \r\n    \t\t// Encode the character as UTF-8.\r\n    \t\tif (chr &lt; 0x80) {\r\n    \t\t\temit(chr);\r\n    \t\t}\r\n    \t\telse if (chr &lt; 0x0800) {\r\n    \t\t\temit((chr &gt;&gt; 6) | 0xC0);\r\n    \t\t\temit(((chr &gt;&gt; 0) &amp; 0x3F) | 0x80);\r\n    \t\t}\r\n    \t\telse if (chr &lt; 0x10000) {\r\n    \t\t\temit((chr &gt;&gt; 12) | 0xE0);\r\n    \t\t\temit(((chr &gt;&gt;  6) &amp; 0x3F) | 0x80);\r\n    \t\t\temit(((chr &gt;&gt;  0) &amp; 0x3F) | 0x80);\r\n    \t\t}\r\n    \t\telse if (chr &lt; 0x110000) {\r\n    \t\t\temit((chr &gt;&gt; 18) | 0xF0);\r\n    \t\t\temit(((chr &gt;&gt; 12) &amp; 0x3F) | 0x80);\r\n    \t\t\temit(((chr &gt;&gt;  6) &amp; 0x3F) | 0x80);\r\n    \t\t\temit(((chr &gt;&gt;  0) &amp; 0x3F) | 0x80);\r\n    \t\t}\r\n    \t}\r\n    \r\n    \temitLast();\r\n    \r\n    \treturn result.join(&#39;&#39;);\r\n    }\r\n\r\nNote that the code is not thoroughly tested. I tested some inputs, including things like `strToUTF8Base64(&#39;衠衢蠩蠨&#39;)` and compared with the output of an online encoding tool (https://www.base64encode.org/)."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1414001193,
          "answer_id": 26514148,
          "path": "stack.bower.answer",
          "score": 77,
          "up_vote_count": 77,
          "is_accepted": false,
          "last_activity_date": 1414001193,
          "body_markdown": "## Internet Explorer 10+\r\n\r\n    // Define the string\r\n    var string = &#39;Hello World!&#39;;\r\n\r\n    // Encode the String\r\n    var encodedString = btoa(string);\r\n    console.log(encodedString); // Outputs: &quot;SGVsbG8gV29ybGQh&quot;\r\n\r\n    // Decode the String\r\n    var decodedString = atob(encodedString);\r\n    console.log(decodedString); // Outputs: &quot;Hello World!&quot;\r\n\r\n---\r\n\r\n## Cross-Browser\r\n\r\n    // Create Base64 Object\r\n    var Base64={_keyStr:&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,encode:function(e){var t=&quot;&quot;;var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f&lt;e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n&gt;&gt;2;o=(n&amp;3)&lt;&lt;4|r&gt;&gt;4;u=(r&amp;15)&lt;&lt;2|i&gt;&gt;6;a=i&amp;63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t=&quot;&quot;;var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\\+\\/\\=]/g,&quot;&quot;);while(f&lt;e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s&lt;&lt;2|o&gt;&gt;4;r=(o&amp;15)&lt;&lt;4|u&gt;&gt;2;i=(u&amp;3)&lt;&lt;6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\\r\\n/g,&quot;\\n&quot;);var t=&quot;&quot;;for(var n=0;n&lt;e.length;n++){var r=e.charCodeAt(n);if(r&lt;128){t+=String.fromCharCode(r)}else if(r&gt;127&amp;&amp;r&lt;2048){t+=String.fromCharCode(r&gt;&gt;6|192);t+=String.fromCharCode(r&amp;63|128)}else{t+=String.fromCharCode(r&gt;&gt;12|224);t+=String.fromCharCode(r&gt;&gt;6&amp;63|128);t+=String.fromCharCode(r&amp;63|128)}}return t},_utf8_decode:function(e){var t=&quot;&quot;;var n=0;var r=c1=c2=0;while(n&lt;e.length){r=e.charCodeAt(n);if(r&lt;128){t+=String.fromCharCode(r);n++}else if(r&gt;191&amp;&amp;r&lt;224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&amp;31)&lt;&lt;6|c2&amp;63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&amp;15)&lt;&lt;12|(c2&amp;63)&lt;&lt;6|c3&amp;63);n+=3}}return t}}\r\n     \r\n    // Define the string\r\n    var string = &#39;Hello World!&#39;;\r\n     \r\n    // Encode the String\r\n    var encodedString = Base64.encode(string);\r\n    console.log(encodedString); // Outputs: &quot;SGVsbG8gV29ybGQh&quot;\r\n     \r\n    // Decode the String\r\n    var decodedString = Base64.decode(encodedString);\r\n    console.log(decodedString); // Outputs: &quot;Hello World!&quot;\r\n\r\n[jsFiddle][1]\r\n\r\n---\r\n\r\n## with Node.js\r\n\r\nHere is how you encode normal text to base64 in Node.js:\r\n\r\n    //Buffer() requires a number, array or string as the first parameter, and an optional encoding type as the second parameter. \r\n    // Default is utf8, possible encoding types are ascii, utf8, ucs2, base64, binary, and hex\r\n    var b = new Buffer(&#39;JavaScript&#39;);\r\n    // If we don&#39;t use toString(), JavaScript assumes we want to convert the object to utf8.\r\n    // We can make it convert to other formats by passing the encoding type to toString().\r\n    var s = b.toString(&#39;base64&#39;);\r\n\r\nAnd here is how you decode base64 encoded strings:\r\n\r\n    var b = new Buffer(&#39;SmF2YVNjcmlwdA==&#39;, &#39;base64&#39;)\r\n    var s = b.toString();\r\n\r\n---\r\n\r\n## with Dojo.js\r\n\r\nTo encode an array of bytes using dojox.encoding.base64:\r\n\r\n    var str = dojox.encoding.base64.encode(myByteArray);\r\n\r\nTo decode a base64-encoded string:\r\n\r\n    var bytes = dojox.encoding.base64.decode(str)\r\n\r\n---\r\n\r\n## bower install angular-base64\r\n\r\n    &lt;script src=&quot;bower_components/angular-base64/angular-base64.js&quot;&gt;&lt;/script&gt;\r\n\r\n    angular\r\n        .module(&#39;myApp&#39;, [&#39;base64&#39;])\r\n        .controller(&#39;myController&#39;, [\r\n    \r\n        &#39;$base64&#39;, &#39;$scope&#39;, \r\n        function($base64, $scope) {\r\n        \r\n            $scope.encoded = $base64.encode(&#39;a string&#39;);\r\n            $scope.decoded = $base64.decode(&#39;YSBzdHJpbmc=&#39;);\r\n    }]);\r\n\r\n  [1]: http://jsfiddle.net/gabrieleromanato/qAGHT/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1469063476,
          "answer_id": 38493287,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1469063476,
          "body_markdown": "While a bit more work, if you want a high performance native solution there are some HTML5 functions you can use.\r\n\r\nIf you can get your data into a [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob), then you can use the [FileReader.readAsDataURL()](https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL) function to get a `data://` URL and chop off the front of it to get at the base64 data.\r\n\r\nYou may have to do further processing however to urldecode the data, as I&#39;m not sure whether `+` characters are escaped or not for the `data://` URL, but this should be pretty trivial."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1478139881,
          "answer_id": 40392850,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1478139881,
          "body_markdown": "This question and it&#39;s answers pointed me to the right direction.  \r\nEspecially with unicode atob and btoa can not be used &quot;vanilla&quot; and these days EVERYTHING is unicode ..  \r\n\r\nDirectly from Mozilla, two nice functions for this purpose (tested with unicode and html tags inside)\r\n\r\n    \r\n    function b64EncodeUnicode(str) {\r\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            return String.fromCharCode(&#39;0x&#39; + p1);\r\n        }));\r\n    }\r\n    \r\n    b64EncodeUnicode(&#39;✓ &#224; la mode&#39;); // &quot;4pyTIMOgIGxhIG1vZGU=&quot;\r\n    b64EncodeUnicode(&#39;\\n&#39;); // &quot;Cg==&quot;\r\n\r\n\r\n    \r\n    function b64DecodeUnicode(str) {\r\n        return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\r\n            return &#39;%&#39; + (&#39;00&#39; + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(&#39;&#39;));\r\n    }\r\n    \r\n    b64DecodeUnicode(&#39;4pyTIMOgIGxhIG1vZGU=&#39;); // &quot;✓ &#224; la mode&quot;\r\n    b64DecodeUnicode(&#39;Cg==&#39;); // &quot;\\n&quot;\r\n\r\nThese functions will perform lightning fast in comparison to raw base64 decoding using a custom javascript function as btoa and atob are executed outside the interpreter.\r\n\r\nIf you can ignore old IE and old mobile phones (like iphone 3?) this should be a good solution.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1503505494,
          "answer_id": 45844934,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1517649024,
          "last_edit_date": 1517649024,
          "body_markdown": "From the comments (by SET and Stefan Steiger) below the accepted answer, here is a quick summary of how to encode/decode a string to/from base64 without need of a library.\r\n\r\n    str = &quot;The quick brown fox jumps over the lazy dog&quot;;\r\n    b64 = btoa(unescape(encodeURIComponent(str)));\r\n    str = decodeURIComponent(escape(window.atob(b64)));\r\n\r\n## Demo ##\r\n(uses jQuery library, but not for encode/decode)\r\n\r\n&lt;!-- begin snippet: js hide: true console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    str = &quot;The quick brown fox jumps over the lazy dog&quot;;\r\n\r\n    $(&#39;input&#39;).val(str);\r\n\r\n    $(&#39;#btnConv&#39;).click(function(){\r\n      var txt = $(&#39;input&#39;).val();\r\n      var b64 = btoa(unescape(encodeURIComponent(txt)));\r\n      $(&#39;input&#39;).val(b64);\r\n      $(&#39;#btnDeConv&#39;).show();\r\n    });\r\n    $(&#39;#btnDeConv&#39;).click(function(){\r\n      var b64 = $(&#39;input&#39;).val();\r\n      var txt = decodeURIComponent(escape(window.atob(b64)));\r\n      $(&#39;input&#39;).val(txt);\r\n    });\r\n\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    #btnDeConv{display:none;}\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n    &lt;input type=&quot;text&quot; /&gt;\r\n    &lt;button id=&quot;btnConv&quot;&gt;Convert&lt;/button&gt;\r\n    &lt;button id=&quot;btnDeConv&quot;&gt;DeConvert&lt;/button&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        }
      ],
      "title": "How can you encode a string to Base64 in JavaScript?",
      "view_count": 748019,
      "answer_count": 20,
      "code_snippet": [
        "<code>btoa()</code>",
        "<code>atob()</code>",
        "<code>btoa()</code>",
        "<code>atob()</code>",
        "<code>0</code>",
        "<code>0xff</code>",
        "<code>btoa(unescape(encodeURIComponent(str))))</code>",
        "<code>/**\n*\n*  Base64 encode / decode\n*  http://www.webtoolkit.info/\n*\n**/\nvar Base64 = {\n\n// private property\n_keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n// public method for encoding\nencode : function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = Base64._utf8_encode(input);\n\n    while (i &lt; input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 &gt;&gt; 2;\n        enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\n        enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\n        enc4 = chr3 &amp; 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output +\n        this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n        this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n\n    }\n\n    return output;\n},\n\n// public method for decoding\ndecode : function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i &lt; input.length) {\n\n        enc1 = this._keyStr.indexOf(input.charAt(i++));\n        enc2 = this._keyStr.indexOf(input.charAt(i++));\n        enc3 = this._keyStr.indexOf(input.charAt(i++));\n        enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\n        chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\n        chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    output = Base64._utf8_decode(output);\n\n    return output;\n\n},\n\n// private method for UTF-8 encoding\n_utf8_encode : function (string) {\n    string = string.replace(/\\r\\n/g,\"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n &lt; string.length; n++) {\n\n        var c = string.charCodeAt(n);\n\n        if (c &lt; 128) {\n            utftext += String.fromCharCode(c);\n        }\n        else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\n            utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\n            utftext += String.fromCharCode((c &amp; 63) | 128);\n        }\n        else {\n            utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\n            utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\n            utftext += String.fromCharCode((c &amp; 63) | 128);\n        }\n\n    }\n\n    return utftext;\n},\n\n// private method for UTF-8 decoding\n_utf8_decode : function (utftext) {\n    var string = \"\";\n    var i = 0;\n    var c = c1 = c2 = 0;\n\n    while ( i &lt; utftext.length ) {\n\n        c = utftext.charCodeAt(i);\n\n        if (c &lt; 128) {\n            string += String.fromCharCode(c);\n            i++;\n        }\n        else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\n            c2 = utftext.charCodeAt(i+1);\n            string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));\n            i += 2;\n        }\n        else {\n            c2 = utftext.charCodeAt(i+1);\n            c3 = utftext.charCodeAt(i+2);\n            string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));\n            i += 3;\n        }\n\n    }\n\n    return string;\n}\n\n}\n</code>",
        "<code>string = string.replace(/\\r\\n/g,\"\\n\");</code>",
        "<code>string = string.replace(/\\r\\n/g,\"\\n\");</code>",
        "<code>var Base64 = {\n// private property\n_keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n// public method for encoding\nencode : function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = Base64._utf8_encode(input);\n\n    while (i &lt; input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 &gt;&gt; 2;\n        enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\n        enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\n        enc4 = chr3 &amp; 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output +\n        Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\n        Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\n\n    }\n\n    return output;\n},\n\n// public method for decoding\ndecode : function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i &lt; input.length) {\n\n        enc1 = Base64._keyStr.indexOf(input.charAt(i++));\n        enc2 = Base64._keyStr.indexOf(input.charAt(i++));\n        enc3 = Base64._keyStr.indexOf(input.charAt(i++));\n        enc4 = Base64._keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\n        chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\n        chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    output = Base64._utf8_decode(output);\n\n    return output;\n\n},\n\n// private method for UTF-8 encoding\n_utf8_encode : function (string) {\n    string = string.replace(/\\r\\n/g,\"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n &lt; string.length; n++) {\n\n        var c = string.charCodeAt(n);\n\n        if (c &lt; 128) {\n            utftext += String.fromCharCode(c);\n        }\n        else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\n            utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\n            utftext += String.fromCharCode((c &amp; 63) | 128);\n        }\n        else {\n            utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\n            utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\n            utftext += String.fromCharCode((c &amp; 63) | 128);\n        }\n\n    }\n\n    return utftext;\n},\n\n// private method for UTF-8 decoding\n_utf8_decode : function (utftext) {\n    var string = \"\";\n    var i = 0;\n    var c = c1 = c2 = 0;\n\n    while ( i &lt; utftext.length ) {\n\n        c = utftext.charCodeAt(i);\n\n        if (c &lt; 128) {\n            string += String.fromCharCode(c);\n            i++;\n        }\n        else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\n            c2 = utftext.charCodeAt(i+1);\n            string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));\n            i += 2;\n        }\n        else {\n            c2 = utftext.charCodeAt(i+1);\n            c3 = utftext.charCodeAt(i+2);\n            string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));\n            i += 3;\n        }\n\n    }\n    return string;\n}\n}\n</code>",
        "<code>btoa</code>",
        "<code>atob</code>",
        "<code>$.base64.encode(\"this is a test\");\n$.base64.decode(\"dGhpcyBpcyBhIHRlc3Q=\");\n</code>",
        "<code>base64.encode(...)</code>",
        "<code>base64.decode(...)</code>",
        "<code>// Define the string\nvar string = 'Hello World!';\n\n// Encode the String\nvar encodedString = btoa(string);\nconsole.log(encodedString); // Outputs: \"SGVsbG8gV29ybGQh\"\n\n// Decode the String\nvar decodedString = atob(encodedString);\nconsole.log(decodedString); // Outputs: \"Hello World!\"\n</code>",
        "<code>// Create Base64 Object\nvar Base64={_keyStr:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",encode:function(e){var t=\"\";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f&lt;e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n&gt;&gt;2;o=(n&amp;3)&lt;&lt;4|r&gt;&gt;4;u=(r&amp;15)&lt;&lt;2|i&gt;&gt;6;a=i&amp;63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t=\"\";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");while(f&lt;e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s&lt;&lt;2|o&gt;&gt;4;r=(o&amp;15)&lt;&lt;4|u&gt;&gt;2;i=(u&amp;3)&lt;&lt;6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\\r\\n/g,\"\\n\");var t=\"\";for(var n=0;n&lt;e.length;n++){var r=e.charCodeAt(n);if(r&lt;128){t+=String.fromCharCode(r)}else if(r&gt;127&amp;&amp;r&lt;2048){t+=String.fromCharCode(r&gt;&gt;6|192);t+=String.fromCharCode(r&amp;63|128)}else{t+=String.fromCharCode(r&gt;&gt;12|224);t+=String.fromCharCode(r&gt;&gt;6&amp;63|128);t+=String.fromCharCode(r&amp;63|128)}}return t},_utf8_decode:function(e){var t=\"\";var n=0;var r=c1=c2=0;while(n&lt;e.length){r=e.charCodeAt(n);if(r&lt;128){t+=String.fromCharCode(r);n++}else if(r&gt;191&amp;&amp;r&lt;224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&amp;31)&lt;&lt;6|c2&amp;63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&amp;15)&lt;&lt;12|(c2&amp;63)&lt;&lt;6|c3&amp;63);n+=3}}return t}}\n\n// Define the string\nvar string = 'Hello World!';\n\n// Encode the String\nvar encodedString = Base64.encode(string);\nconsole.log(encodedString); // Outputs: \"SGVsbG8gV29ybGQh\"\n\n// Decode the String\nvar decodedString = Base64.decode(encodedString);\nconsole.log(decodedString); // Outputs: \"Hello World!\"\n</code>",
        "<code>//Buffer() requires a number, array or string as the first parameter, and an optional encoding type as the second parameter. \n// Default is utf8, possible encoding types are ascii, utf8, ucs2, base64, binary, and hex\nvar b = new Buffer('JavaScript');\n// If we don't use toString(), JavaScript assumes we want to convert the object to utf8.\n// We can make it convert to other formats by passing the encoding type to toString().\nvar s = b.toString('base64');\n</code>",
        "<code>var b = new Buffer('SmF2YVNjcmlwdA==', 'base64')\nvar s = b.toString();\n</code>",
        "<code>var str = dojox.encoding.base64.encode(myByteArray);\n</code>",
        "<code>var bytes = dojox.encoding.base64.decode(str)\n</code>",
        "<code>&lt;script src=\"bower_components/angular-base64/angular-base64.js\"&gt;&lt;/script&gt;\n\nangular\n    .module('myApp', ['base64'])\n    .controller('myController', [\n\n    '$base64', '$scope', \n    function($base64, $scope) {\n\n        $scope.encoded = $base64.encode('a string');\n        $scope.decoded = $base64.decode('YSBzdHJpbmc=');\n}]);\n</code>",
        "<code>_utf8_decode</code>",
        "<code>c1</code>",
        "<code>c2</code>",
        "<code>var</code>",
        "<code>c3</code>",
        "<code>// private method for UTF-8 decoding\n_utf8_decode : function (utftext) {\n    var string = \"\";\n    var i = 0;\n    var c = 0, c1 = 0, c2 = 0;\n\n    while ( i &lt; utftext.length ) {\n\n        c = utftext.charCodeAt(i);\n\n        if (c &lt; 128) {\n            string += String.fromCharCode(c);\n            i++;\n        }\n        else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\n            c1 = utftext.charCodeAt(i+1);\n            string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c1 &amp; 63));\n            i += 2;\n        }\n        else {\n            c1 = utftext.charCodeAt(i+1);\n            c2 = utftext.charCodeAt(i+2);\n            string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c1 &amp; 63) &lt;&lt; 6) | (c2 &amp; 63));\n            i += 3;\n        }\n\n    }\n    return string;\n}\n</code>",
        "<code>decodeToHex</code>",
        "<code>encodeFromHex</code>",
        "<code>var Base64 = (function() {\n    \"use strict\";\n\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    var _utf8_encode = function (string) {\n\n        var utftext = \"\", c, n;\n\n        string = string.replace(/\\r\\n/g,\"\\n\");\n\n        for (n = 0; n &lt; string.length; n++) {\n\n            c = string.charCodeAt(n);\n\n            if (c &lt; 128) {\n\n                utftext += String.fromCharCode(c);\n\n            } else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\n\n                utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\n                utftext += String.fromCharCode((c &amp; 63) | 128);\n\n            } else {\n\n                utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\n                utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\n                utftext += String.fromCharCode((c &amp; 63) | 128);\n\n            }\n\n        }\n\n        return utftext;\n    };\n\n    var _utf8_decode = function (utftext) {\n        var string = \"\", i = 0, c = 0, c1 = 0, c2 = 0;\n\n        while ( i &lt; utftext.length ) {\n\n            c = utftext.charCodeAt(i);\n\n            if (c &lt; 128) {\n\n                string += String.fromCharCode(c);\n                i++;\n\n            } else if((c &gt; 191) &amp;&amp; (c &lt; 224)) {\n\n                c1 = utftext.charCodeAt(i+1);\n                string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c1 &amp; 63));\n                i += 2;\n\n            } else {\n\n                c1 = utftext.charCodeAt(i+1);\n                c2 = utftext.charCodeAt(i+2);\n                string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c1 &amp; 63) &lt;&lt; 6) | (c2 &amp; 63));\n                i += 3;\n\n            }\n\n        }\n\n        return string;\n    };\n\n    var _hexEncode = function(input) {\n        var output = '', i;\n\n        for(i = 0; i &lt; input.length; i++) {\n            output += input.charCodeAt(i).toString(16);\n        }\n\n        return output;\n    };\n\n    var _hexDecode = function(input) {\n        var output = '', i;\n\n        if(input.length % 2 &gt; 0) {\n            input = '0' + input;\n        }\n\n        for(i = 0; i &lt; input.length; i = i + 2) {\n            output += String.fromCharCode(parseInt(input.charAt(i) + input.charAt(i + 1), 16));\n        }\n\n        return output;\n    };\n\n    var encode = function (input) {\n        var output = \"\", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n\n        input = _utf8_encode(input);\n\n        while (i &lt; input.length) {\n\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 &gt;&gt; 2;\n            enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\n            enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\n            enc4 = chr3 &amp; 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            output += _keyStr.charAt(enc1);\n            output += _keyStr.charAt(enc2);\n            output += _keyStr.charAt(enc3);\n            output += _keyStr.charAt(enc4);\n\n        }\n\n        return output;\n    };\n\n    var decode = function (input) {\n        var output = \"\", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i &lt; input.length) {\n\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\n            chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\n            chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\n\n            output += String.fromCharCode(chr1);\n\n            if (enc3 !== 64) {\n                output += String.fromCharCode(chr2);\n            }\n            if (enc4 !== 64) {\n                output += String.fromCharCode(chr3);\n            }\n\n        }\n\n        return _utf8_decode(output);\n    };\n\n    var decodeToHex = function(input) {\n        return _hexEncode(decode(input));\n    };\n\n    var encodeFromHex = function(input) {\n        return encode(_hexDecode(input));\n    };\n\n    return {\n        'encode': encode,\n        'decode': decode,\n        'decodeToHex': decodeToHex,\n        'encodeFromHex': encodeFromHex\n    };\n}());\n</code>",
        "<code>btoa</code>",
        "<code>atob</code>",
        "<code>base64.encode(/* String */);\nbase64.decode(/* String */);\n\nutf8.encode(/* String */);\nutf8.decode(/* String */);\n</code>",
        "<code>// if this is your Base64 encoded string\nvar str = 'VGhpcyBpcyBhbiBhd2Vzb21lIHNjcmlwdA=='; \n\n// make URL friendly:\nstr = str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n\n// reverse to original encoding\nstr = (str + '===').slice(0, str.length + (str.length % 4));\nstr = str.replace(/-/g, '+').replace(/_/g, '/');\n</code>",
        "<code>encodeURIComponent</code>",
        "<code>function getBase64Image(img) {  \n  var canvas = document.createElement(\"canvas\");  \n  canvas.width = img.width;  \n  canvas.height = img.height;  \n  var ctx = canvas.getContext(\"2d\");  \n  ctx.drawImage(img, 0, 0);  \n  var dataURL = canvas.toDataURL(\"image/png\");  \n  // escape data:image prefix\n  return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");  \n  // or just return dataURL\n  // return dataURL\n}  \n</code>",
        "<code>function getBase64ImageById(id){  \n  return getBase64Image(document.getElementById(id));  \n} \n</code>",
        "<code>var encodedData = window.btoa(stringToEncode);</code>",
        "<code>var decodedData = window.atob(encodedData);</code>",
        "<code>str = \"The quick brown fox jumps over the lazy dog\";\nb64 = btoa(unescape(encodeURIComponent(str)));\nstr = decodeURIComponent(escape(window.atob(b64)));\n</code>",
        "<code>str = \"The quick brown fox jumps over the lazy dog\";\r\n\r\n$('input').val(str);\r\n\r\n$('#btnConv').click(function(){\r\n  var txt = $('input').val();\r\n  var b64 = btoa(unescape(encodeURIComponent(txt)));\r\n  $('input').val(b64);\r\n  $('#btnDeConv').show();\r\n});\r\n$('#btnDeConv').click(function(){\r\n  var b64 = $('input').val();\r\n  var txt = decodeURIComponent(escape(window.atob(b64)));\r\n  $('input').val(txt);\r\n});</code>",
        "<code>#btnDeConv{display:none;}</code>",
        "<code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;input type=\"text\" /&gt;\r\n&lt;button id=\"btnConv\"&gt;Convert&lt;/button&gt;\r\n&lt;button id=\"btnDeConv\"&gt;DeConvert&lt;/button&gt;</code>",
        "<code>function b64EncodeUnicode(str) {\n    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {\n        return String.fromCharCode('0x' + p1);\n    }));\n}\n\nb64EncodeUnicode('✓ à la mode'); // \"4pyTIMOgIGxhIG1vZGU=\"\nb64EncodeUnicode('\\n'); // \"Cg==\"\n\n\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n\nb64DecodeUnicode('4pyTIMOgIGxhIG1vZGU='); // \"✓ à la mode\"\nb64DecodeUnicode('Cg=='); // \"\\n\"\n</code>",
        "<code>window.atob</code>",
        "<code>window.btoa</code>",
        "<code>(function(){function t(t){this.message=t}var e=\"undefined\"!=typeof exports?exports:this,r=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";t.prototype=Error(),t.prototype.name=\"InvalidCharacterError\",e.btoa||(e.btoa=function(e){for(var o,n,a=0,i=r,c=\"\";e.charAt(0|a)||(i=\"=\",a%1);c+=i.charAt(63&amp;o&gt;&gt;8-8*(a%1))){if(n=e.charCodeAt(a+=.75),n&gt;255)throw new t(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");o=o&lt;&lt;8|n}return c}),e.atob||(e.atob=function(e){if(e=e.replace(/=+$/,\"\"),1==e.length%4)throw new t(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var o,n,a=0,i=0,c=\"\";n=e.charAt(i++);~n&amp;&amp;(o=a%4?64*o+n:n,a++%4)?c+=String.fromCharCode(255&amp;o&gt;&gt;(6&amp;-2*a)):0)n=r.indexOf(n);return c})})();\n</code>",
        "<code>'use strict';\n\nvar ProjectNameBase64Factory = angular.module('project_name.factories.base64', []);\n\nProjectNameBase64Factory.factory('Base64', function () {\n    var Base64 = {\n        // private property\n        _keyStr: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n        // public method for encoding\n        encode: function (input) {\n            var output = \"\";\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n\n            input = Base64._utf8_encode(input);\n\n            while (i &lt; input.length) {\n\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 &gt;&gt; 2;\n                enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\n                enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\n                enc4 = chr3 &amp; 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                         Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\n                         Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\n\n            }\n\n            return output;\n        },\n\n        // public method for decoding\n        decode: function (input) {\n            var output = \"\";\n            var chr1, chr2, chr3;\n            var enc1, enc2, enc3, enc4;\n            var i = 0;\n\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n            while (i &lt; input.length) {\n\n                enc1 = Base64._keyStr.indexOf(input.charAt(i++));\n                enc2 = Base64._keyStr.indexOf(input.charAt(i++));\n                enc3 = Base64._keyStr.indexOf(input.charAt(i++));\n                enc4 = Base64._keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);\n                chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);\n                chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 != 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 != 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n\n            }\n\n            output = Base64._utf8_decode(output);\n\n            return output;\n\n        },\n\n        // private method for UTF-8 encoding\n        _utf8_encode: function (string) {\n            string = string.replace(/\\r\\n/g, \"\\n\");\n            var utftext = \"\";\n\n            for (var n = 0; n &lt; string.length; n++) {\n\n                var c = string.charCodeAt(n);\n\n                if (c &lt; 128) {\n                    utftext += String.fromCharCode(c);\n                }\n                else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\n                    utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\n                    utftext += String.fromCharCode((c &amp; 63) | 128);\n                }\n                else {\n                    utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\n                    utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\n                    utftext += String.fromCharCode((c &amp; 63) | 128);\n                }\n\n            }\n\n            return utftext;\n        },\n\n        // private method for UTF-8 decoding\n        _utf8_decode: function (utftext) {\n            var string = \"\";\n            var i = 0;\n            var c = 0, c2 = 0, c3 = 0;\n\n            while (i &lt; utftext.length) {\n\n                c = utftext.charCodeAt(i);\n\n                if (c &lt; 128) {\n                    string += String.fromCharCode(c);\n                    i++;\n                }\n                else if ((c &gt; 191) &amp;&amp; (c &lt; 224)) {\n                    c2 = utftext.charCodeAt(i + 1);\n                    string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));\n                    i += 2;\n                }\n                else {\n                    c2 = utftext.charCodeAt(i + 1);\n                    c3 = utftext.charCodeAt(i + 2);\n                    string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));\n                    i += 3;\n                }\n\n            }\n            return string;\n        }\n    };\n    return Base64;\n});\n</code>",
        "<code>function strToUTF8Base64(str) {\n\n    function decodeSurrogatePair(hi, lo) {\n        var resultChar = 0x010000;\n        resultChar += lo - 0xDC00;\n        resultChar += (hi - 0xD800) &lt;&lt; 10;\n        return resultChar;\n    }\n\n    var bytes = [0, 0, 0];\n    var byteIndex = 0;\n    var result = [];\n\n    function output(s) {\n        result.push(s);\n    }\n\n    function emitBase64() {\n\n        var digits =\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                'abcdefghijklmnopqrstuvwxyz' +\n                '0123456789+/';\n\n        function toDigit(value) {\n            return digits[value];\n        }\n\n        // --Byte 0--    --Byte 1--    --Byte 2--\n        // 1111  1122    2222  3333    3344  4444\n\n        var d1 = toDigit(bytes[0] &gt;&gt; 2);\n        var d2 = toDigit(\n            ((bytes[0] &amp; 0x03) &lt;&lt; 4) |\n            (bytes[1] &gt;&gt; 4));\n        var d3 = toDigit(\n            ((bytes[1] &amp; 0x0F) &lt;&lt; 2) |\n            (bytes[2] &gt;&gt; 6));\n        var d4 = toDigit(\n            bytes[2] &amp; 0x3F);\n\n        if (byteIndex === 1) {\n            output(d1 + d2 + '==');\n        }\n        else if (byteIndex === 2) {\n            output(d1 + d2 + d3 + '=');\n        }\n        else {\n            output(d1 + d2 + d3 + d4);\n        }\n    }\n\n    function emit(chr) {\n        bytes[byteIndex++] = chr;\n        if (byteIndex == 3) {\n            emitBase64();\n            bytes[0] = 0;\n            bytes[1] = 0;\n            bytes[2] = 0;\n            byteIndex = 0;\n        }\n    }\n\n    function emitLast() {\n        if (byteIndex &gt; 0) {\n            emitBase64();\n        }\n    }\n\n    // Converts the string to UTF8:\n\n    var i, chr;\n    var hi, lo;\n    for (i = 0; i &lt; str.length; i++) {\n        chr = str.charCodeAt(i);\n\n        // Test and decode surrogate pairs in the string\n        if (chr &gt;= 0xD800 &amp;&amp; chr &lt;= 0xDBFF) {\n            hi = chr;\n            lo = str.charCodeAt(i + 1);\n            if (lo &gt;= 0xDC00 &amp;&amp; lo &lt;= 0xDFFF) {\n                chr = decodeSurrogatePair(hi, lo);\n                i++;\n            }\n        }\n\n        // Encode the character as UTF-8.\n        if (chr &lt; 0x80) {\n            emit(chr);\n        }\n        else if (chr &lt; 0x0800) {\n            emit((chr &gt;&gt; 6) | 0xC0);\n            emit(((chr &gt;&gt; 0) &amp; 0x3F) | 0x80);\n        }\n        else if (chr &lt; 0x10000) {\n            emit((chr &gt;&gt; 12) | 0xE0);\n            emit(((chr &gt;&gt;  6) &amp; 0x3F) | 0x80);\n            emit(((chr &gt;&gt;  0) &amp; 0x3F) | 0x80);\n        }\n        else if (chr &lt; 0x110000) {\n            emit((chr &gt;&gt; 18) | 0xF0);\n            emit(((chr &gt;&gt; 12) &amp; 0x3F) | 0x80);\n            emit(((chr &gt;&gt;  6) &amp; 0x3F) | 0x80);\n            emit(((chr &gt;&gt;  0) &amp; 0x3F) | 0x80);\n        }\n    }\n\n    emitLast();\n\n    return result.join('');\n}\n</code>",
        "<code>strToUTF8Base64('衠衢蠩蠨')</code>",
        "<code>var encode = function (input) {\n    var output = [], chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n\n    input = _utf8_encode(input);\n\n    while (i &lt; input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 &gt;&gt; 2;\n        enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\n        enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\n        enc4 = chr3 &amp; 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output.push(_keyStr.charAt(enc1));\n        output.push(_keyStr.charAt(enc2));\n        output.push(_keyStr.charAt(enc3));\n        output.push(_keyStr.charAt(enc4));\n\n    }\n\n    return output.join(\"\");\n};\n</code>",
        "<code>var str = dojox.encoding.base64.encode(myByteArray);\n</code>",
        "<code>var bytes = dojox.encoding.base64.decode(str);\n</code>",
        "<code>Blob</code>",
        "<code>data://</code>",
        "<code>+</code>",
        "<code>data://</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs"
      ],
      "creation_date": 1377901712,
      "body_markdown": "How do you layout a folder structure for a large and scaleable AngularJS application?",
      "last_edit_date": 1385752946,
      "up_vote_count": 179,
      "link": "https://stackoverflow.com/questions/18542353/angularjs-folder-structure",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1377901712,
          "answer_id": 18542354,
          "path": "stack.bower.answer",
          "score": 235,
          "up_vote_count": 239,
          "is_accepted": true,
          "last_activity_date": 1456904149,
          "last_edit_date": 1456904149,
          "body_markdown": "![enter image description here][1]\r\n\r\n### Sort By Type\r\nOn the left we have the app organized by type. Not too bad for smaller apps, but even here you can start to see it gets more difficult to find what you are looking for. When I want to find a specific view and its controller, they are in different folders. It can be good to start here if you are not sure how else to organize the code as it is quite easy to shift to the technique on the right: structure by feature.\r\n\r\n### Sort By Feature (preferred)\r\nOn the right the project is organized by feature. All of the layout views and controllers go in the layout folder, the admin content goes in the admin folder, and the services that are used by all of the areas go in the services folder. The idea here is that when you are looking for the code that makes a feature work, it is located in one place. Services are a bit different as they “service” many features. I like this once my app starts to take shape as it becomes a lot easier to manage for me.\r\n\r\nA well written blog post: http://www.johnpapa.net/angular-growth-structure/\r\n\r\nExample App: https://github.com/angular-app/angular-app\r\n\r\n  [1]: http://i.stack.imgur.com/qDI2g.jpg\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1377903336,
          "answer_id": 18542606,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1434300480,
          "last_edit_date": 1434300480,
          "body_markdown": "I&#39;m on my third angularjs app and the folder structure has improved every time so far. I keep mine simple right now. \r\n\r\n    index.html (or .php)\r\n    /resources\r\n      /css\r\n      /fonts\r\n      /images\r\n      /js\r\n        /controllers\r\n        /directives\r\n        /filters\r\n        /services\r\n      /partials (views)\r\n\r\nI find that good for single apps. I haven&#39;t really had a project yet where I&#39;d need multiple."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1377903623,
          "answer_id": 18542643,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1377903623,
          "body_markdown": "There is also the approach of organizing the folders not by the structure of the framework, but by the structure of the application&#39;s function. There is a github starter Angular/Express application that illustrates this called [angular-app][1]. \r\n\r\n  [1]: https://github.com/angular-app/angular-app"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1377907707,
          "answer_id": 18543121,
          "path": "stack.bower.answer",
          "score": 31,
          "up_vote_count": 33,
          "is_accepted": false,
          "last_activity_date": 1398206271,
          "last_edit_date": 1398206271,
          "body_markdown": "After building a few applications, some in Symfony-PHP, some .NET MVC, some ROR, i&#39;ve found that the best way for me is to use [Yeoman.io][1] with the AngularJS generator.\r\n\r\nThat&#39;s the most popular and common structure and best maintained. \r\n\r\nAnd most importantly, by keeping that structure, it helps you separate your client side code and to make it agnostic to the server-side technology (all kinds of different folder structures and different server-side templating engines).\r\n\r\nThat way you can easily duplicate and reuse yours and others code.\r\n\r\nHere it is before grunt build: (but use the yeoman generator, don&#39;t just create it!)\r\n\r\n    /app\r\n        /scripts\r\n                /controllers\r\n                /directives\r\n                /services\r\n                /filters\r\n                app.js\r\n        /views\r\n        /styles\r\n        /img\r\n        /bower_components\r\n        index.html\r\n    bower.json\r\n\r\nAnd after grunt build (concat, uglify, rev, etc...):\r\n\r\n        /scripts\r\n            scripts.min.js (all JS concatenated, minified and grunt-rev)\r\n            vendor.min.js  (all bower components concatenated, minified and grunt-rev)\r\n        /views\r\n        /styles\r\n            mergedAndMinified.css  (grunt-cssmin)\r\n        /images\r\n        index.html  (grunt-htmlmin)\r\n\r\n  [1]: http://yeoman.io/"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1377908869,
          "answer_id": 18543230,
          "path": "stack.bower.answer",
          "score": 28,
          "up_vote_count": 30,
          "is_accepted": false,
          "last_activity_date": 1424164171,
          "last_edit_date": 1424164171,
          "body_markdown": "I like [this][1] entry about angularjs structure\r\n\r\nIt&#39;s written by one of the angularjs developers, so should give you a good insight \r\n\r\nHere&#39;s an excerpt:\r\n\r\n    root-app-folder\r\n    ├── index.html\r\n    ├── scripts\r\n    │   ├── controllers\r\n    │   │   └── main.js\r\n    │   │   └── ...\r\n    │   ├── directives\r\n    │   │   └── myDirective.js\r\n    │   │   └── ...\r\n    │   ├── filters\r\n    │   │   └── myFilter.js\r\n    │   │   └── ...\r\n    │   ├── services\r\n    │   │   └── myService.js\r\n    │   │   └── ...\r\n    │   ├── vendor\r\n    │   │   ├── angular.js\r\n    │   │   ├── angular.min.js\r\n    │   │   ├── es5-shim.min.js\r\n    │   │   └── json3.min.js\r\n    │   └── app.js\r\n    ├── styles\r\n    │   └── ...\r\n    └── views\r\n        ├── main.html\r\n        └── ...\r\n\r\n\r\n  [1]: http://briantford.com/blog/huuuuuge-angular-apps.html"
        }
      ],
      "title": "AngularJS Folder Structure",
      "view_count": 120505,
      "answer_count": 5,
      "code_snippet": [
        "<code>/app\n    /scripts\n            /controllers\n            /directives\n            /services\n            /filters\n            app.js\n    /views\n    /styles\n    /img\n    /bower_components\n    index.html\nbower.json\n</code>",
        "<code>    /scripts\n        scripts.min.js (all JS concatenated, minified and grunt-rev)\n        vendor.min.js  (all bower components concatenated, minified and grunt-rev)\n    /views\n    /styles\n        mergedAndMinified.css  (grunt-cssmin)\n    /images\n    index.html  (grunt-htmlmin)\n</code>",
        "<code>angular.module('myApp').config(function($routeProvider) { ... });</code>",
        "<code>root-app-folder\n├── index.html\n├── scripts\n│   ├── controllers\n│   │   └── main.js\n│   │   └── ...\n│   ├── directives\n│   │   └── myDirective.js\n│   │   └── ...\n│   ├── filters\n│   │   └── myFilter.js\n│   │   └── ...\n│   ├── services\n│   │   └── myService.js\n│   │   └── ...\n│   ├── vendor\n│   │   ├── angular.js\n│   │   ├── angular.min.js\n│   │   ├── es5-shim.min.js\n│   │   └── json3.min.js\n│   └── app.js\n├── styles\n│   └── ...\n└── views\n    ├── main.html\n    └── ...\n</code>",
        "<code>index.html (or .php)\n/resources\n  /css\n  /fonts\n  /images\n  /js\n    /controllers\n    /directives\n    /filters\n    /services\n  /partials (views)\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "json",
        "node.js",
        "npm"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1352905358,
          "answer_id": 13381344,
          "path": "stack.gulp.answer",
          "score": 148,
          "up_vote_count": 151,
          "is_accepted": false,
          "last_activity_date": 1352905358,
          "body_markdown": "I just wrote a simple script to collect the dependencies in ./node_modules. It fulfills my requirement at the moment. This may help some others, I post it here.\r\n\r\n    var fs = require(&quot;fs&quot;);\r\n\r\n    function main() {\r\n      fs.readdir(&quot;./node_modules&quot;, function (err, dirs) {\r\n        if (err) {\r\n          console.log(err);\r\n          return;\r\n        }\r\n        dirs.forEach(function(dir){\r\n          if (dir.indexOf(&quot;.&quot;) !== 0) {\r\n            var packageJsonFile = &quot;./node_modules/&quot; + dir + &quot;/package.json&quot;;\r\n            if (fs.existsSync(packageJsonFile)) {\r\n              fs.readFile(packageJsonFile, function (err, data) {\r\n                if (err) {\r\n                  console.log(err);\r\n                }\r\n                else {\r\n                  var json = JSON.parse(data);\r\n                  console.log(&#39;&quot;&#39;+json.name+&#39;&quot;: &quot;&#39; + json.version + &#39;&quot;,&#39;);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    \r\n      });\r\n    }\r\n    \r\n    main();\r\n\r\nIn my case, the above script outputs:\r\n\r\n    &quot;colors&quot;: &quot;0.6.0-1&quot;,\r\n    &quot;commander&quot;: &quot;1.0.5&quot;,\r\n    &quot;htmlparser&quot;: &quot;1.7.6&quot;,\r\n    &quot;optimist&quot;: &quot;0.3.5&quot;,\r\n    &quot;progress&quot;: &quot;0.1.0&quot;,\r\n    &quot;request&quot;: &quot;2.11.4&quot;,\r\n    &quot;soupselect&quot;: &quot;0.2.0&quot;,   // Remember: remove the comma character in the last line.\r\n\r\nNow, you can copy&amp;paste them. Have fun!"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1354728139,
          "answer_id": 13728837,
          "path": "stack.gulp.answer",
          "score": 540,
          "up_vote_count": 542,
          "is_accepted": false,
          "last_activity_date": 1502055514,
          "last_edit_date": 1502055514,
          "body_markdown": "The package.json file is used by **npm** to learn about your node.js project.\r\n\r\nUse `npm init` to generate package.json files for you!\r\n\r\nIt comes bundled with npm. Read its documentation here: https://docs.npmjs.com/cli/init\r\n\r\nAlso, there is a tool you can use in your own projects to generate this file programmatically (it&#39;s made by the maker of npm): https://github.com/isaacs/init-package-json"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1359921116,
          "answer_id": 14676564,
          "path": "stack.gulp.answer",
          "score": 187,
          "up_vote_count": 190,
          "is_accepted": false,
          "last_activity_date": 1402050244,
          "last_edit_date": 1402050244,
          "body_markdown": "First off, run\r\n\r\n    npm init\r\n\r\n...will ask you a few questions ([read this first](https://www.npmjs.org/doc/json.html)) about your project/package and then generate a package.json file for you.\r\n\r\nThen, once you have a package.json file, use\r\n\r\n    npm install &lt;pkg&gt; --save\r\n\r\nor\r\n\r\n    npm install &lt;pkg&gt; --save-dev\r\n\r\n...to install a dependency and automatically it to your `package.json`&#39;s `dependencies` list.\r\n\r\n(Note: You may need to manually tweak the version ranges for your dependencies.)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1389731366,
          "answer_id": 21123358,
          "path": "stack.gulp.answer",
          "score": 74,
          "up_vote_count": 74,
          "is_accepted": false,
          "last_activity_date": 1392327810,
          "last_edit_date": 1392327810,
          "body_markdown": "`npm init`\r\n\r\n to create the package.json file and then you use \r\n\r\n`ls node_modules/ |xargs npm install --save` \r\n\r\nto fill in the modules you have in the node_modules folder.\r\n\r\nEdit: @paldepind pointed out that the second command is redundant because `npm init` now automatically adds what you have in your node_modules/ folder. I don&#39;t know if this has always been the case, but now at least, it works without the second command."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1392555351,
          "answer_id": 21811398,
          "path": "stack.gulp.answer",
          "score": 23,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1392627332,
          "last_edit_date": 1392627332,
          "body_markdown": "**Command line**:\r\n\r\n    npm init\r\n\r\nwill create package.json file \r\n\r\nTo install , update and uninstall packages under dependencies into package.json file: \r\n \r\n**Command line** :\r\n\r\n    npm install &lt;pkg&gt;@* --save \r\n\r\nwill automatically add the latest version for the package under dependencies into           package.json file  \r\n\r\nEX: \r\n\r\n    npm install node-markdown@* --save\r\n\r\n**Command line**: \r\n\r\n    npm install &lt;pkg&gt; --save\r\n\r\n\r\nalso will automatically add the latest version for the package under dependencies into package.json file\r\n\r\n**if** you need specific version for a package use this **Command line**:\r\n\r\n    npm install &lt;pkg&gt;@&lt;version&gt; --save\r\n\r\nwill automatically add specific version of package under dependencies into package.json file\r\n\r\nEX:\r\n\r\n\r\n    npm install koa-views@1.0.0 --save\r\n\r\n \r\n**if** you need specific range of version for a package use this **Command line**:\r\n\r\n    npm install &lt;pkg&gt;@&lt;version range&gt;\r\n\r\nwill automatically add the latest version for the package between range of version under dependencies into package.json file\r\n\r\nEX:\r\n\r\n    npm install koa-views@&quot;&gt;1.0.0 &lt;1.2.0&quot; --save\r\n\r\n**For** more details about how to write version for package [npm Doc][1]  \r\n\r\n\r\n  [1]: https://www.npmjs.org/doc/files/package.json.html#dependencies\r\n\r\n**Command line**:\r\n\r\n    npm update --save\r\n\r\nwill update packages  into package.json file and will automatically add updated version for all packages under dependencies into package.json file\r\n\r\n**Command line**:\r\n\r\n    npm uninstall &lt;pkg&gt; --save\r\n\r\nwill automatically remove package from dependencies into package.json file and remove package from node_module folder "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413986849,
          "answer_id": 26509432,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1413986849,
          "body_markdown": "Based on Pylinux&#39;s answer, below is a solution for Windows OS,\r\n\r\n    dir node_modules &gt; abc.txt\r\n    FOR /F %k in (abc.txt) DO npm install --save\r\n\r\nHope it helps."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439650063,
          "answer_id": 32025833,
          "path": "stack.gulp.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1445411443,
          "last_edit_date": 1445411443,
          "body_markdown": "You can now use [Yeoman - Modern Web App Scaffolding Tool][1] on node terminal using 3 easy steps.\r\n\r\nFirst, you&#39;ll need to install yo and other required tools:\r\n\r\n    $ npm install -g yo bower grunt-cli gulp\r\n\r\nTo scaffold a web application, install the *generator-webapp* generator:\r\n\r\n    $ npm install -g generator-webapp  // create scaffolding \r\n\r\nRun yo and... you are all done: \r\n\r\n    $ yo webapp  // create scaffolding \r\n\r\n\r\nYeoman can write boilerplate code for your entire web application or Controllers and Models. It can fire up a live-preview web server for edits and compile; not just that you can also run your unit tests, minimize and concatenate your code, optimize images, and more...\r\n\r\n**[Yeoman (yo)][1]** - scaffolding tool that offers an ecosystem of framework-specific scaffolds, called generators, that can be used to perform some of the tedious tasks mentioned earlier.\r\n\r\n**[Grunt][2] / [gulp][3]** - used to build, preview, and test your project.\r\n\r\n**[Bower][4]** - is used for dependency management, so that you no longer have to manually download your front-end libraries.\r\n\r\n\r\n  [1]: http://yeoman.io/\r\n  [2]: http://gruntjs.com/\r\n  [3]: http://gulpjs.com/\r\n  [4]: http://bower.io/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444806960,
          "answer_id": 33118953,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1444806960,
          "body_markdown": "use command npm init -f to generate package.json file and after that use --save after each command so that each module will automatically get updated inside your package.json\r\nfor ex: npm install express --save\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467902387,
          "answer_id": 38248386,
          "path": "stack.gulp.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1467902387,
          "body_markdown": "Running `npm init -y` makes your `package.json` with all the defaults.\r\n&lt;br&gt;\r\nYou can then change `package.json` accordingly\r\n&lt;br&gt;\r\nThis saves time many a times by preventing pressing `enter` on every command in `npm init`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1519918242,
          "answer_id": 49053110,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1519918242,
          "body_markdown": "## 1. Choice\r\n\r\n**If** you git and GitHub user:\r\n\r\n    [**`generate-package`**](https://www.npmjs.com/package/generate-package) more simply, than `npm init`.\r\n\r\n**else**\r\n\r\n**and/or** you don&#39;t like `package.json` template, that generate-package or `npm init` generate:\r\n\r\n    you can generate your own template via scaffolding apps as [**generate**](https://www.npmjs.com/package/generate), [**sails**](https://sailsjs.com/) or [**yeoman**](http://yeoman.io/).\r\n\r\n---\r\n\r\n## 2. Relevance\r\n\r\nThis answer is relevant for March 2018. In the future, the data from this answer may be obsolete.\r\n\r\nAuthor of this answer personally used generate-package at March 2018.\r\n\r\n---\r\n\r\n## 3. Limitations\r\n\r\nYou need use git and GitHub for using generate-package.\r\n\r\n---\r\n\r\n## 4. Demonstration\r\n\r\nFor example, I create blank folder `sasha-npm-init-vs-generate-package`.\r\n\r\n### 4.1. generate-package\r\n\r\nCommand:\r\n\r\n&lt;!-- language: lang-node --&gt;\r\n\r\n    D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;gen package\r\n    [16:58:52] starting generate\r\n    [16:59:01] √ running tasks: [ &#39;package&#39; ]\r\n    [16:59:04] starting package\r\n    ? Project description? generate-package demo\r\n    ? Author&#39;s name? Sasha Chernykh\r\n    ? Author&#39;s URL? https://vk.com/hair_in_the_wind\r\n    [17:00:19] finished package √ 1m\r\n\r\n`package.json`:\r\n\r\n&lt;!-- language: lang-json --&gt;\r\n\r\n    {\r\n      &quot;name&quot;: &quot;sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;description&quot;: &quot;generate-package demo&quot;,\r\n      &quot;version&quot;: &quot;0.1.0&quot;,\r\n      &quot;homepage&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;author&quot;: &quot;Sasha Chernykh (https://vk.com/hair_in_the_wind)&quot;,\r\n      &quot;repository&quot;: &quot;Kristinita/sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;bugs&quot;: {\r\n        &quot;url&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues&quot;\r\n      },\r\n      &quot;license&quot;: &quot;MIT&quot;,\r\n      &quot;engines&quot;: {\r\n        &quot;node&quot;: &quot;&gt;=4&quot;\r\n      },\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;mocha&quot;\r\n      },\r\n      &quot;keywords&quot;: [\r\n        &quot;generate&quot;,\r\n        &quot;init&quot;,\r\n        &quot;npm&quot;,\r\n        &quot;package&quot;,\r\n        &quot;sasha&quot;,\r\n        &quot;vs&quot;\r\n      ]\r\n    }\r\n\r\n### 4.2. npm init\r\n\r\n&lt;!-- language: lang-json --&gt;\r\n\r\n    D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;npm init\r\n    This utility will walk you through creating a package.json file.\r\n    It only covers the most common items, and tries to guess sensible defaults.\r\n\r\n    See `npm help json` for definitive documentation on these fields\r\n    and exactly what they do.\r\n\r\n    Use `npm install &lt;pkg&gt;` afterwards to install a package and\r\n    save it as a dependency in the package.json file.\r\n\r\n    Press ^C at any time to quit.\r\n    package name: (sasha-npm-init-vs-generate-package)\r\n    version: (1.0.0) 0.1.0\r\n    description: npm init demo\r\n    entry point: (index.js)\r\n    test command: mocha\r\n    git repository: https://github.com/Kristinita/sasha-npm-init-vs-generate-package\r\n    keywords: generate, package, npm, package, sasha, vs\r\n    author: Sasha Chernykh\r\n    license: (ISC) MIT\r\n    About to write to D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package\\package.json:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;version&quot;: &quot;0.1.0&quot;,\r\n      &quot;description&quot;: &quot;npm init demo&quot;,\r\n      &quot;main&quot;: &quot;index.js&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;mocha&quot;\r\n      },\r\n      &quot;repository&quot;: {\r\n        &quot;type&quot;: &quot;git&quot;,\r\n        &quot;url&quot;: &quot;git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git&quot;\r\n      },\r\n      &quot;keywords&quot;: [\r\n        &quot;generate&quot;,\r\n        &quot;package&quot;,\r\n        &quot;npm&quot;,\r\n        &quot;package&quot;,\r\n        &quot;sasha&quot;,\r\n        &quot;vs&quot;\r\n      ],\r\n      &quot;author&quot;: &quot;Sasha Chernykh&quot;,\r\n      &quot;license&quot;: &quot;MIT&quot;,\r\n      &quot;bugs&quot;: {\r\n        &quot;url&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues&quot;\r\n      },\r\n      &quot;homepage&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme&quot;\r\n    }\r\n\r\n\r\n    Is this ok? (yes) y\r\n\r\n&lt;!-- language: lang-json --&gt;\r\n\r\n    {\r\n      &quot;name&quot;: &quot;sasha-npm-init-vs-generate-package&quot;,\r\n      &quot;version&quot;: &quot;0.1.0&quot;,\r\n      &quot;description&quot;: &quot;npm init demo&quot;,\r\n      &quot;main&quot;: &quot;index.js&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;mocha&quot;\r\n      },\r\n      &quot;repository&quot;: {\r\n        &quot;type&quot;: &quot;git&quot;,\r\n        &quot;url&quot;: &quot;git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git&quot;\r\n      },\r\n      &quot;keywords&quot;: [\r\n        &quot;generate&quot;,\r\n        &quot;package&quot;,\r\n        &quot;npm&quot;,\r\n        &quot;package&quot;,\r\n        &quot;sasha&quot;,\r\n        &quot;vs&quot;\r\n      ],\r\n      &quot;author&quot;: &quot;Sasha Chernykh&quot;,\r\n      &quot;license&quot;: &quot;MIT&quot;,\r\n      &quot;bugs&quot;: {\r\n        &quot;url&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues&quot;\r\n      },\r\n      &quot;homepage&quot;: &quot;https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme&quot;\r\n    }\r\n\r\nI think, that `generate-package` more simply, that `npm init`.\r\n\r\n---\r\n\r\n## 5. Customizing\r\n\r\nThat create your own `package.json` template, see [**generate**](https://github.com/generate/generate-package/blob/master/templates/%24package.json) and [**yeoman**](https://github.com/cajacko/generator-package-json/blob/develop/generators/app/index.js) examples."
        }
      ],
      "creation_date": 1333248356,
      "body_markdown": "Is package.json supposed to be manually edited? Couldn&#39;t a program like npm just look through the files, see the &quot;require&quot; statements, and then use that to put the necessary entries in the package.json file? Are there any programs like that?",
      "title": "Is there a way to automatically build the package.json file for Node.js projects",
      "view_count": 199537,
      "up_vote_count": 346,
      "answer_count": 10,
      "link": "https://stackoverflow.com/questions/9961502/is-there-a-way-to-automatically-build-the-package-json-file-for-node-js-projects",
      "code_snippet": [
        "<code>npm link</code>",
        "<code>npm init</code>",
        "<code>npm init</code>",
        "<code>npm shrinkwrap</code>",
        "<code>npm-shrinkwrap.json</code>",
        "<code>npm init</code>",
        "<code>npm install &lt;pkg&gt; --save</code>",
        "<code>npm init</code>",
        "<code>[...] Press ^C at any time to quit.</code>",
        "<code>npm init\n</code>",
        "<code>npm install &lt;pkg&gt; --save\n</code>",
        "<code>npm install &lt;pkg&gt; --save-dev\n</code>",
        "<code>package.json</code>",
        "<code>dependencies</code>",
        "<code>npm uninstall &lt;pkg&gt; --save</code>",
        "<code>package.json</code>",
        "<code>var fs = require(\"fs\");\n\nfunction main() {\n  fs.readdir(\"./node_modules\", function (err, dirs) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    dirs.forEach(function(dir){\n      if (dir.indexOf(\".\") !== 0) {\n        var packageJsonFile = \"./node_modules/\" + dir + \"/package.json\";\n        if (fs.existsSync(packageJsonFile)) {\n          fs.readFile(packageJsonFile, function (err, data) {\n            if (err) {\n              console.log(err);\n            }\n            else {\n              var json = JSON.parse(data);\n              console.log('\"'+json.name+'\": \"' + json.version + '\",');\n            }\n          });\n        }\n      }\n    });\n\n  });\n}\n\nmain();\n</code>",
        "<code>\"colors\": \"0.6.0-1\",\n\"commander\": \"1.0.5\",\n\"htmlparser\": \"1.7.6\",\n\"optimist\": \"0.3.5\",\n\"progress\": \"0.1.0\",\n\"request\": \"2.11.4\",\n\"soupselect\": \"0.2.0\",   // Remember: remove the comma character in the last line.\n</code>",
        "<code>npm ls --depth=0</code>",
        "<code>a</code>",
        "<code>a</code>",
        "<code>b</code>",
        "<code>c</code>",
        "<code>a</code>",
        "<code>b</code>",
        "<code>c</code>",
        "<code>a</code>",
        "<code>npm init</code>",
        "<code>ls node_modules/ |xargs npm install --save</code>",
        "<code>npm init</code>",
        "<code>npm init</code>",
        "<code>npm dedupe</code>",
        "<code>node_modules</code>",
        "<code>package.json</code>",
        "<code>npm init\n</code>",
        "<code>npm install &lt;pkg&gt;@* --save \n</code>",
        "<code>npm install node-markdown@* --save\n</code>",
        "<code>npm install &lt;pkg&gt; --save\n</code>",
        "<code>npm install &lt;pkg&gt;@&lt;version&gt; --save\n</code>",
        "<code>npm install koa-views@1.0.0 --save\n</code>",
        "<code>npm install &lt;pkg&gt;@&lt;version range&gt;\n</code>",
        "<code>npm install koa-views@\"&gt;1.0.0 &lt;1.2.0\" --save\n</code>",
        "<code>npm update --save\n</code>",
        "<code>npm uninstall &lt;pkg&gt; --save\n</code>",
        "<code>npm init -y</code>",
        "<code>package.json</code>",
        "<code>package.json</code>",
        "<code>enter</code>",
        "<code>npm init</code>",
        "<code>$ npm install -g yo bower grunt-cli gulp\n</code>",
        "<code>$ npm install -g generator-webapp  // create scaffolding \n</code>",
        "<code>$ yo webapp  // create scaffolding \n</code>",
        "<code>dir node_modules &gt; abc.txt\nFOR /F %k in (abc.txt) DO npm install --save\n</code>",
        "<code>generate-package</code>",
        "<code>npm init</code>",
        "<code>package.json</code>",
        "<code>npm init</code>",
        "<code>sasha-npm-init-vs-generate-package</code>",
        "<code>D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;gen package\n[16:58:52] starting generate\n[16:59:01] √ running tasks: [ 'package' ]\n[16:59:04] starting package\n? Project description? generate-package demo\n? Author's name? Sasha Chernykh\n? Author's URL? https://vk.com/hair_in_the_wind\n[17:00:19] finished package √ 1m\n</code>",
        "<code>package.json</code>",
        "<code>{\n  \"name\": \"sasha-npm-init-vs-generate-package\",\n  \"description\": \"generate-package demo\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package\",\n  \"author\": \"Sasha Chernykh (https://vk.com/hair_in_the_wind)\",\n  \"repository\": \"Kristinita/sasha-npm-init-vs-generate-package\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues\"\n  },\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \"&gt;=4\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"keywords\": [\n    \"generate\",\n    \"init\",\n    \"npm\",\n    \"package\",\n    \"sasha\",\n    \"vs\"\n  ]\n}\n</code>",
        "<code>D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package&gt;npm init\nThis utility will walk you through creating a package.json file.\nIt only covers the most common items, and tries to guess sensible defaults.\n\nSee `npm help json` for definitive documentation on these fields\nand exactly what they do.\n\nUse `npm install &lt;pkg&gt;` afterwards to install a package and\nsave it as a dependency in the package.json file.\n\nPress ^C at any time to quit.\npackage name: (sasha-npm-init-vs-generate-package)\nversion: (1.0.0) 0.1.0\ndescription: npm init demo\nentry point: (index.js)\ntest command: mocha\ngit repository: https://github.com/Kristinita/sasha-npm-init-vs-generate-package\nkeywords: generate, package, npm, package, sasha, vs\nauthor: Sasha Chernykh\nlicense: (ISC) MIT\nAbout to write to D:\\SashaDemoRepositories\\sasha-npm-init-vs-generate-package\\package.json:\n\n{\n  \"name\": \"sasha-npm-init-vs-generate-package\",\n  \"version\": \"0.1.0\",\n  \"description\": \"npm init demo\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git\"\n  },\n  \"keywords\": [\n    \"generate\",\n    \"package\",\n    \"npm\",\n    \"package\",\n    \"sasha\",\n    \"vs\"\n  ],\n  \"author\": \"Sasha Chernykh\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues\"\n  },\n  \"homepage\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme\"\n}\n\n\nIs this ok? (yes) y\n</code>",
        "<code>{\n  \"name\": \"sasha-npm-init-vs-generate-package\",\n  \"version\": \"0.1.0\",\n  \"description\": \"npm init demo\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Kristinita/sasha-npm-init-vs-generate-package.git\"\n  },\n  \"keywords\": [\n    \"generate\",\n    \"package\",\n    \"npm\",\n    \"package\",\n    \"sasha\",\n    \"vs\"\n  ],\n  \"author\": \"Sasha Chernykh\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package/issues\"\n  },\n  \"homepage\": \"https://github.com/Kristinita/sasha-npm-init-vs-generate-package#readme\"\n}\n</code>",
        "<code>generate-package</code>",
        "<code>npm init</code>",
        "<code>package.json</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "html5",
        "canvas",
        "image-resizing"
      ],
      "creation_date": 1266699509,
      "body_markdown": "I&#39;m trying to create a thumbnail image on the client side using javascript and a canvas element, but when I shrink the image down, it looks terrible.  It looks as if it was downsized in photoshop with the resampling set to &#39;Nearest Neighbor&#39; instead of Bicubic.  I know its possible to get this to look right, because [this site][1] can do it just fine using a canvas as well.  I&#39;ve tried using the same code they do as shown in the &quot;[Source]&quot; link, but it still looks terrible.  Is there something I&#39;m missing, some setting that needs to be set or something?\r\n\r\nEDIT:\r\n\r\nI&#39;m trying to resize a jpg.  I have tried resizing the same jpg on the linked site and in photoshop, and it looks fine when downsized.\r\n\r\nHere is the relevant code:\r\n\r\n    reader.onloadend = function(e)\r\n\t{\r\n\t\tvar img = new Image();\r\n\t\tvar ctx = canvas.getContext(&quot;2d&quot;);\r\n\t\tvar canvasCopy = document.createElement(&quot;canvas&quot;);\r\n\t\tvar copyContext = canvasCopy.getContext(&quot;2d&quot;);\r\n\t\t\r\n\t\timg.onload = function()\r\n\t\t{\r\n\t\t\tvar ratio = 1;\r\n\t\t\t\r\n\t\t\tif(img.width &gt; maxWidth)\r\n\t\t\t\tratio = maxWidth / img.width;\r\n\t\t\telse if(img.height &gt; maxHeight)\r\n\t\t\t\tratio = maxHeight / img.height;\r\n\t\t\t\t\r\n\t\t\tcanvasCopy.width = img.width;\r\n\t\t\tcanvasCopy.height = img.height;\r\n\t\t\tcopyContext.drawImage(img, 0, 0);\r\n\t\t\t\t\r\n\t\t\tcanvas.width = img.width * ratio;\r\n\t\t\tcanvas.height = img.height * ratio;\r\n\t\t\tctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\r\n\t\t};\r\n\r\n\t\timg.src = reader.result;\r\n\t}\r\n\r\nEDIT2:\r\n\r\nSeems I was mistaken, the linked website wasn&#39;t doing any better of a job of downsizing the image.  I tried the other methods suggested and none of them look any better.  This is what the different methods resulted in:\r\n\r\nPhotoshop:\r\n\r\n![alt text][2]\r\n\r\nCanvas:\r\n\r\n![alt text][3]\r\n\r\nImage with image-rendering: optimizeQuality set and scaled with width/height:\r\n\r\n![alt text][4]\r\n\r\nImage with image-rendering: optimizeQuality set and scaled with -moz-transform:\r\n\r\n![alt text][5]\r\n\r\nCanvas resize on pixastic:\r\n\r\n![alt text][6]\r\n\r\nI guess this means firefox isn&#39;t using bicubic sampling like its supposed to.  I&#39;ll just have to wait until they actually add it.\r\n\r\nEDIT3:\r\n\r\n[Original Image][7]\r\n\r\n\r\n  [1]: http://editor.pixastic.com/\r\n  [2]: http://i.stack.imgur.com/K6ztq.png\r\n  [3]: http://i.stack.imgur.com/nD3FJ.png\r\n  [4]: http://i.stack.imgur.com/I6RkV.png\r\n  [5]: http://i.stack.imgur.com/ZWiVC.png\r\n  [6]: http://i.stack.imgur.com/PEsYM.png\r\n  [7]: http://i.stack.imgur.com/5x1UP.jpg",
      "last_edit_date": 1419043876,
      "up_vote_count": 288,
      "link": "https://stackoverflow.com/questions/2303690/resizing-an-image-in-an-html5-canvas",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1266852870,
          "answer_id": 2311926,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1267918872,
          "last_edit_date": 1495540965,
          "body_markdown": "If you&#39;re simply trying to resize an image, I&#39;d recommend setting `width` and `height` of the image with CSS.  Here&#39;s a quick example:\r\n\r\n    .small-image {\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n\r\nNote that the `height` and `width` can also be set using JavaScript.  Here&#39;s quick code sample:\r\n\r\n    var img = document.getElement(&quot;my-image&quot;);\r\n    img.style.width = 100 + &quot;px&quot;;  // Make sure you add the &quot;px&quot; to the end,\r\n    img.style.height = 100 + &quot;px&quot;; // otherwise you&#39;ll confuse IE\r\n\r\nAlso, to ensure that the resized image looks good, add the following css rules to image selector:\r\n\r\n* [`-ms-interpolation-mode: bicubic`](http://msdn.microsoft.com/en-us/library/ms530822%28VS.85%29.aspx): introduce in IE7\r\n* [`image-rendering: optimizeQuality`](https://developer.mozilla.org/En/CSS/Image-rendering): introduced in FireFox 3.6\r\n\r\nAs far as I can tell, all browsers except IE using an bicubic algorithm to resize images by default, so your resized images should look good in Firefox and Chrome.\r\n\r\nIf setting the css `width` and `height` doesn&#39;t work, you may want to play with a css `transform`:\r\n\r\n* [`-moz-transform: scale(sx[, sy])`](https://developer.mozilla.org/en/CSS/-moz-transform#scale)\r\n* [`-webkit-transform:scale(sx[, sy])`](http://developer.apple.com/safari/library/documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Transforms/Transforms.html)\r\n\r\nIf for whatever reason you *need* to use a canvas, please note that there are two ways an image can be resize: by resizing the canvas with css or by drawing the image at a smaller size.\r\n\r\nSee [this question](https://stackoverflow.com/questions/1977741/resizable-canvas-jquery-ui/) for more details.\r\n\r\nHope this helps!"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1268169173,
          "answer_id": 2412606,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1416885870,
          "last_edit_date": 1416885870,
          "body_markdown": "i got this image by right clicking the canvas element in firefox and saving as.\r\n\r\n![alt text][1]\r\n\r\n\r\n    var img = new Image();\r\n    img.onload = function () {\r\n    \tconsole.debug(this.width,this.height);\r\n    \tvar canvas = document.createElement(&#39;canvas&#39;), ctx;\r\n    \tcanvas.width = 188;\r\n    \tcanvas.height = 150;\r\n    \tdocument.body.appendChild(canvas);\r\n    \tctx = canvas.getContext(&#39;2d&#39;);\r\n    \tctx.drawImage(img,0,0,188,150);\r\n    };\r\n    img.src = &#39;original.jpg&#39;;\r\n\r\n\r\n\r\nso anyway, here is a &#39;fixed&#39; version of your example:\r\n\r\n    var img = new Image();\r\n    // added cause it wasnt defined\r\n    var canvas = document.createElement(&quot;canvas&quot;);\r\n    document.body.appendChild(canvas);\r\n    \r\n    var ctx = canvas.getContext(&quot;2d&quot;);\r\n    var canvasCopy = document.createElement(&quot;canvas&quot;);\r\n    // adding it to the body\r\n    \r\n    document.body.appendChild(canvasCopy);\r\n    \r\n    var copyContext = canvasCopy.getContext(&quot;2d&quot;);\r\n    \r\n    img.onload = function()\r\n    {\r\n    \t\tvar ratio = 1;\r\n    \r\n    \t\t// defining cause it wasnt\r\n    \t\tvar maxWidth = 188,\r\n    \t\t\tmaxHeight = 150;\r\n    \r\n    \t\tif(img.width &gt; maxWidth)\r\n    \t\t\t\tratio = maxWidth / img.width;\r\n    \t\telse if(img.height &gt; maxHeight)\r\n    \t\t\t\tratio = maxHeight / img.height;\r\n    \r\n    \t\tcanvasCopy.width = img.width;\r\n    \t\tcanvasCopy.height = img.height;\r\n    \t\tcopyContext.drawImage(img, 0, 0);\r\n    \r\n    \t\tcanvas.width = img.width * ratio;\r\n    \t\tcanvas.height = img.height * ratio;\r\n    \t\t// the line to change\r\n    \t\t// ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\r\n    \t\t// the method signature you are using is for slicing\r\n    \t\tctx.drawImage(canvasCopy, 0, 0, canvas.width, canvas.height);\r\n    };\r\n    \r\n    // changed for example\r\n    img.src = &#39;original.jpg&#39;;\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/E5GfF.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1278401993,
          "answer_id": 3184362,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1278401993,
          "body_markdown": "So something interesting that I found a while ago while working with canvas that might be helpful:\r\n\r\nTo resize the canvas control on its own, you need to use the `height=&quot;&quot;` and `width=&quot;&quot;` attributes (or `canvas.width`/`canvas.height` elements). If you use CSS to resize the canvas, it will actually stretch (i.e.: resize) the content of the canvas to fit the full canvas (rather than simply increasing or decreasing the area of the canvas.\r\n\r\nIt&#39;d be worth a shot to try drawing the image into a canvas control with the height and width attributes set to the size of the image and then using CSS to resize the canvas to the size you&#39;re looking for. Perhaps this would use a different resizing algorithm.\r\n\r\nIt should also be noted that canvas has different effects in different browsers (and even different versions of different browsers). The algorithms and techniques used in the browsers is likely to change over time (especially with Firefox 4 and Chrome 6 coming out so soon, which will place heavy emphasis on canvas rendering performance).\r\n\r\nIn addition, you may want to give SVG a shot, too, as it likely uses a different algorithm as well.\r\n\r\nBest of luck!"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1278860270,
          "answer_id": 3223466,
          "path": "stack.bower.answer",
          "score": 373,
          "up_vote_count": 375,
          "is_accepted": true,
          "last_activity_date": 1426607010,
          "last_edit_date": 1426607010,
          "body_markdown": "So what do you do if all the browsers (actually, Chrome 5 gave me quite good one) won&#39;t give you good enough resampling quality? You implement them yourself then! Oh come on, we&#39;re entering the new age of Web 3.0, HTML5 compliant browsers, super optimized JIT javascript compilers, multi-core(†) machines, with tons of memory, what are you afraid of? Hey, there&#39;s the word java in javascript, so that should guarantee the performance, right? Behold, the thumbnail generating code:\r\n\r\n    // returns a function that calculates lanczos weight\r\n    function lanczosCreate(lobes) {\r\n    \treturn function(x) {\r\n    \t\tif (x &gt; lobes)\r\n    \t\t\treturn 0;\r\n    \t\tx *= Math.PI;\r\n    \t\tif (Math.abs(x) &lt; 1e-16)\r\n    \t\t\treturn 1;\r\n    \t\tvar xx = x / lobes;\r\n    \t\treturn Math.sin(x) * Math.sin(xx) / x / xx;\r\n    \t};\r\n    }\r\n    \r\n    // elem: canvas element, img: image element, sx: scaled width, lobes: kernel radius\r\n    function thumbnailer(elem, img, sx, lobes) {\r\n    \tthis.canvas = elem;\r\n    \telem.width = img.width;\r\n    \telem.height = img.height;\r\n    \telem.style.display = &quot;none&quot;;\r\n    \tthis.ctx = elem.getContext(&quot;2d&quot;);\r\n    \tthis.ctx.drawImage(img, 0, 0);\r\n    \tthis.img = img;\r\n    \tthis.src = this.ctx.getImageData(0, 0, img.width, img.height);\r\n    \tthis.dest = {\r\n    \t    width : sx,\r\n    \t    height : Math.round(img.height * sx / img.width),\r\n    \t};\r\n    \tthis.dest.data = new Array(this.dest.width * this.dest.height * 3);\r\n    \tthis.lanczos = lanczosCreate(lobes);\r\n    \tthis.ratio = img.width / sx;\r\n    \tthis.rcp_ratio = 2 / this.ratio;\r\n    \tthis.range2 = Math.ceil(this.ratio * lobes / 2);\r\n    \tthis.cacheLanc = {};\r\n    \tthis.center = {};\r\n    \tthis.icenter = {};\r\n    \tsetTimeout(this.process1, 0, this, 0);\r\n    }\r\n    \r\n    thumbnailer.prototype.process1 = function(self, u) {\r\n    \tself.center.x = (u + 0.5) * self.ratio;\r\n    \tself.icenter.x = Math.floor(self.center.x);\r\n    \tfor (var v = 0; v &lt; self.dest.height; v++) {\r\n    \t\tself.center.y = (v + 0.5) * self.ratio;\r\n    \t\tself.icenter.y = Math.floor(self.center.y);\r\n    \t\tvar a, r, g, b;\r\n    \t\ta = r = g = b = 0;\r\n    \t\tfor (var i = self.icenter.x - self.range2; i &lt;= self.icenter.x + self.range2; i++) {\r\n    \t\t\tif (i &lt; 0 || i &gt;= self.src.width)\r\n    \t\t\t\tcontinue;\r\n    \t\t\tvar f_x = Math.floor(1000 * Math.abs(i - self.center.x));\r\n    \t\t\tif (!self.cacheLanc[f_x])\r\n    \t\t\t\tself.cacheLanc[f_x] = {};\r\n    \t\t\tfor (var j = self.icenter.y - self.range2; j &lt;= self.icenter.y + self.range2; j++) {\r\n    \t\t\t\tif (j &lt; 0 || j &gt;= self.src.height)\r\n    \t\t\t\t\tcontinue;\r\n    \t\t\t\tvar f_y = Math.floor(1000 * Math.abs(j - self.center.y));\r\n    \t\t\t\tif (self.cacheLanc[f_x][f_y] == undefined)\r\n    \t\t\t\t\tself.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2)\r\n    \t\t\t\t\t        + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);\r\n    \t\t\t\tweight = self.cacheLanc[f_x][f_y];\r\n    \t\t\t\tif (weight &gt; 0) {\r\n    \t\t\t\t\tvar idx = (j * self.src.width + i) * 4;\r\n    \t\t\t\t\ta += weight;\r\n    \t\t\t\t\tr += weight * self.src.data[idx];\r\n    \t\t\t\t\tg += weight * self.src.data[idx + 1];\r\n    \t\t\t\t\tb += weight * self.src.data[idx + 2];\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\tvar idx = (v * self.dest.width + u) * 3;\r\n    \t\tself.dest.data[idx] = r / a;\r\n    \t\tself.dest.data[idx + 1] = g / a;\r\n    \t\tself.dest.data[idx + 2] = b / a;\r\n    \t}\r\n    \r\n    \tif (++u &lt; self.dest.width)\r\n    \t\tsetTimeout(self.process1, 0, self, u);\r\n    \telse\r\n    \t\tsetTimeout(self.process2, 0, self);\r\n    };\r\n    thumbnailer.prototype.process2 = function(self) {\r\n    \tself.canvas.width = self.dest.width;\r\n    \tself.canvas.height = self.dest.height;\r\n    \tself.ctx.drawImage(self.img, 0, 0, self.dest.width, self.dest.height);\r\n    \tself.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);\r\n    \tvar idx, idx2;\r\n    \tfor (var i = 0; i &lt; self.dest.width; i++) {\r\n    \t\tfor (var j = 0; j &lt; self.dest.height; j++) {\r\n    \t\t\tidx = (j * self.dest.width + i) * 3;\r\n    \t\t\tidx2 = (j * self.dest.width + i) * 4;\r\n    \t\t\tself.src.data[idx2] = self.dest.data[idx];\r\n    \t\t\tself.src.data[idx2 + 1] = self.dest.data[idx + 1];\r\n    \t\t\tself.src.data[idx2 + 2] = self.dest.data[idx + 2];\r\n    \t\t}\r\n    \t}\r\n    \tself.ctx.putImageData(self.src, 0, 0);\r\n    \tself.canvas.style.display = &quot;block&quot;;\r\n    };\r\n\r\n...with which you can produce results like these!\r\n\r\n ![img717.imageshack.us/img717/8910/lanczos358.png][1]\r\n\r\nso anyway, here is a &#39;fixed&#39; version of your example:\r\n\r\n    img.onload = function() {\r\n        var canvas = document.createElement(&quot;canvas&quot;);\r\n        new thumbnailer(canvas, img, 188, 3); //this produces lanczos3\r\n        // but feel free to raise it up to 8. Your client will appreciate\r\n        // that the program makes full use of his machine.\r\n        document.body.appendChild(canvas);\r\n    };\r\n\r\nNow it&#39;s time to pit your best browsers out there and see which one will least likely increase your client&#39;s blood pressure!\r\n\r\nUmm, where&#39;s my sarcasm tag?\r\n\r\n*(since many parts of the code is based on [Anrieff Gallery Generator][2] is it also covered under GPL2? I dunno)*\r\n\r\n† *actually due to limitation of javascript, multi-core is not supported.*\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/dpATi.png\r\n  [2]: http://aggen.sourceforge.net/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1279040579,
          "answer_id": 3239530,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1279040579,
          "body_markdown": "I&#39;d highly suggest you check out [this link](https://developer.mozilla.org/en/Canvas_tutorial/Using_images#Controlling_image_scaling_behavior) and make sure it is set to true.\r\n\r\n&gt; Controlling image scaling behavior\r\n&gt; \r\n&gt; Introduced in Gecko 1.9.2 (Firefox 3.6\r\n&gt; / Thunderbird 3.1 / Fennec 1.0)\r\n&gt; \r\n&gt; Gecko 1.9.2 introduced the\r\n&gt; mozImageSmoothingEnabled property to\r\n&gt; the canvas element; if this Boolean\r\n&gt; value is false, images won&#39;t be\r\n&gt; smoothed when scaled. This property is\r\n&gt; true by default. view plainprint?\r\n&gt; \r\n&gt;    1. cx.mozImageSmoothingEnabled = false;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1287006566,
          "answer_id": 3928335,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1470553660,
          "last_edit_date": 1470553660,
          "body_markdown": "I know this is an old thread but it might be useful for some people such as myself that months after are hitting this issue for the first time.\r\n\r\nHere is some code that resizes the image every time you reload the image. I am aware this is not optimal at all, but I provide it as a proof of concept. \r\n\r\nAlso, sorry for using jQuery for simple selectors but I just feel too comfortable with the syntax.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $(document).on(&#39;ready&#39;, createImage);\r\n    $(window).on(&#39;resize&#39;, createImage);\r\n\r\n    var createImage = function(){\r\n      var canvas = document.getElementById(&#39;myCanvas&#39;);\r\n      canvas.width = window.innerWidth || $(window).width();\r\n      canvas.height = window.innerHeight || $(window).height();\r\n      var ctx = canvas.getContext(&#39;2d&#39;);\r\n      img = new Image();\r\n      img.addEventListener(&#39;load&#39;, function () {\r\n        ctx.drawImage(this, 0, 0, w, h);\r\n      });\r\n      img.src = &#39;http://www.ruinvalor.com/Telanor/images/original.jpg&#39;;\r\n    };\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    html, body{\r\n      height: 100%;\r\n      width: 100%;\r\n      margin: 0;\r\n      padding: 0;\r\n      background: #000;\r\n    }\r\n    canvas{\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: 0;\r\n    }\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;html&gt;\r\n      &lt;head&gt;\r\n        &lt;meta charset=&quot;utf-8&quot; /&gt;\r\n        &lt;title&gt;Canvas Resize&lt;/title&gt;\r\n      &lt;/head&gt;\r\n      &lt;body&gt;\r\n        &lt;canvas id=&quot;myCanvas&quot;&gt;&lt;/canvas&gt;\r\n      &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nMy createImage function is called once when the document is loaded and after that it is called every time the window receives a resize event.\r\n\r\nI tested it in Chrome 6 and Firefox 3.6, both on the Mac. This &quot;technique&quot; eats processor as it if was ice cream in the summer, but it does the trick.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1300904846,
          "answer_id": 5409868,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1300904846,
          "body_markdown": "For resizing to image with width less that original, i use:\r\n\r\n        function resize2(i) {\r\n          var cc = document.createElement(&quot;canvas&quot;);\r\n          cc.width = i.width / 2;\r\n          cc.height = i.height / 2;\r\n          var ctx = cc.getContext(&quot;2d&quot;);\r\n          ctx.drawImage(i, 0, 0, cc.width, cc.height);\r\n          return cc;\r\n        }\r\n        var cc = img;\r\n        while (cc.width &gt; 64 * 2) {\r\n          cc = resize2(cc);\r\n        }\r\n        // .. than drawImage(cc, .... )\r\n\r\nand it works =).\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1314214853,
          "answer_id": 7181288,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1314214853,
          "body_markdown": "I just ran a page of side by sides comparisons and unless something has changed recently, I could see no better downsizing (scaling) using canvas vs. simple css. I tested in FF6 Mac OSX 10.7. Still slightly soft vs. the original.\r\n\r\nI did however stumble upon something that did make a huge difference and that was using image filters in browsers that support canvas. You can actually manipulate images much like you can in Photoshop with blur, sharpen, saturation, ripple, grayscale, etc.\r\n\r\nI then found an awesome jQuery plug-in which makes application of these filters a snap:\r\nhttp://codecanyon.net/item/jsmanipulate-jquery-image-manipulation-plugin/428234\r\n\r\nI simply apply the sharpen filter right after resizing the image which should give you the desired effect. I didn&#39;t even have to use a canvas element.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1319660950,
          "answer_id": 7908517,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1319660950,
          "body_markdown": "I&#39;ve put up some algorithms to do image interpolation on html canvas pixel arrays that might be useful here:\r\n\r\nhttp://jsperf.com/pixel-interpolation/2\r\n\r\nThese can be copy/pasted and can be used inside of web workers to resize images (or any other operation that requires interpolation - I&#39;m using them to defish images at the moment).\r\n\r\nI haven&#39;t added the lanczos stuff above, so feel free to add that as a comparison if you&#39;d like."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1360725122,
          "answer_id": 14845805,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1360725122,
          "body_markdown": "This is a javascript function adapted from @Telanor&#39;s code. When passing a image base64 as first argument to the function, it returns the base64 of the resized image. maxWidth and maxHeight are optional.\r\n\r\n    function thumbnail(base64, maxWidth, maxHeight) {\r\n\r\n      // Max size for thumbnail\r\n      if(typeof(maxWidth) === &#39;undefined&#39;) var maxWidth = 500;\r\n      if(typeof(maxHeight) === &#39;undefined&#39;) var maxHeight = 500;\r\n\r\n      // Create and initialize two canvas\r\n      var canvas = document.createElement(&quot;canvas&quot;);\r\n      var ctx = canvas.getContext(&quot;2d&quot;);\r\n      var canvasCopy = document.createElement(&quot;canvas&quot;);\r\n      var copyContext = canvasCopy.getContext(&quot;2d&quot;);\r\n          \r\n      // Create original image\r\n      var img = new Image();\r\n      img.src = base64;\r\n\r\n      // Determine new ratio based on max size\r\n      var ratio = 1;\r\n      if(img.width &gt; maxWidth)\r\n        ratio = maxWidth / img.width;\r\n      else if(img.height &gt; maxHeight)\r\n        ratio = maxHeight / img.height;\r\n\r\n      // Draw original image in second canvas\r\n      canvasCopy.width = img.width;\r\n      canvasCopy.height = img.height;\r\n      copyContext.drawImage(img, 0, 0);\r\n\r\n      // Copy and resize second canvas to first canvas\r\n      canvas.width = img.width * ratio;\r\n      canvas.height = img.height * ratio;\r\n      ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\r\n      \r\n      return canvas.toDataURL();\r\n      \r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1376441496,
          "answer_id": 18221537,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1517690104,
          "last_edit_date": 1517690104,
          "body_markdown": "Thanks @syockit for an awesome answer. however, I had to reformat a little as follows to make it work. Perhaps due to DOM scanning issues:\r\n\r\n    $(document).ready(function () {\r\n\r\n    $(&#39;img&#39;).on(&quot;load&quot;, clickA);\r\n    function clickA() {\r\n        var img = this;\r\n        var canvas = document.createElement(&quot;canvas&quot;);\r\n        new thumbnailer(canvas, img, 50, 3);\r\n        document.body.appendChild(canvas);\r\n    }\r\n\r\n    function thumbnailer(elem, img, sx, lobes) {\r\n        this.canvas = elem;\r\n        elem.width = img.width;\r\n        elem.height = img.height;\r\n        elem.style.display = &quot;none&quot;;\r\n        this.ctx = elem.getContext(&quot;2d&quot;);\r\n        this.ctx.drawImage(img, 0, 0);\r\n        this.img = img;\r\n        this.src = this.ctx.getImageData(0, 0, img.width, img.height);\r\n        this.dest = {\r\n            width: sx,\r\n            height: Math.round(img.height * sx / img.width)\r\n        };\r\n        this.dest.data = new Array(this.dest.width * this.dest.height * 3);\r\n        this.lanczos = lanczosCreate(lobes);\r\n        this.ratio = img.width / sx;\r\n        this.rcp_ratio = 2 / this.ratio;\r\n        this.range2 = Math.ceil(this.ratio * lobes / 2);\r\n        this.cacheLanc = {};\r\n        this.center = {};\r\n        this.icenter = {};\r\n        setTimeout(process1, 0, this, 0);\r\n    }\r\n\r\n    //returns a function that calculates lanczos weight\r\n    function lanczosCreate(lobes) {\r\n        return function (x) {\r\n            if (x &gt; lobes)\r\n                return 0;\r\n            x *= Math.PI;\r\n            if (Math.abs(x) &lt; 1e-16)\r\n                return 1\r\n            var xx = x / lobes;\r\n            return Math.sin(x) * Math.sin(xx) / x / xx;\r\n        }\r\n    }\r\n\r\n    process1 = function (self, u) {\r\n        self.center.x = (u + 0.5) * self.ratio;\r\n        self.icenter.x = Math.floor(self.center.x);\r\n        for (var v = 0; v &lt; self.dest.height; v++) {\r\n            self.center.y = (v + 0.5) * self.ratio;\r\n            self.icenter.y = Math.floor(self.center.y);\r\n            var a, r, g, b;\r\n            a = r = g = b = 0;\r\n            for (var i = self.icenter.x - self.range2; i &lt;= self.icenter.x + self.range2; i++) {\r\n                if (i &lt; 0 || i &gt;= self.src.width)\r\n                    continue;\r\n                var f_x = Math.floor(1000 * Math.abs(i - self.center.x));\r\n                if (!self.cacheLanc[f_x])\r\n                    self.cacheLanc[f_x] = {};\r\n                for (var j = self.icenter.y - self.range2; j &lt;= self.icenter.y + self.range2; j++) {\r\n                    if (j &lt; 0 || j &gt;= self.src.height)\r\n                        continue;\r\n                    var f_y = Math.floor(1000 * Math.abs(j - self.center.y));\r\n                    if (self.cacheLanc[f_x][f_y] == undefined)\r\n                        self.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2) + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);\r\n                    weight = self.cacheLanc[f_x][f_y];\r\n                    if (weight &gt; 0) {\r\n                        var idx = (j * self.src.width + i) * 4;\r\n                        a += weight;\r\n                        r += weight * self.src.data[idx];\r\n                        g += weight * self.src.data[idx + 1];\r\n                        b += weight * self.src.data[idx + 2];\r\n                    }\r\n                }\r\n            }\r\n            var idx = (v * self.dest.width + u) * 3;\r\n            self.dest.data[idx] = r / a;\r\n            self.dest.data[idx + 1] = g / a;\r\n            self.dest.data[idx + 2] = b / a;\r\n        }\r\n\r\n        if (++u &lt; self.dest.width)\r\n            setTimeout(process1, 0, self, u);\r\n        else\r\n            setTimeout(process2, 0, self);\r\n    };\r\n\r\n    process2 = function (self) {\r\n        self.canvas.width = self.dest.width;\r\n        self.canvas.height = self.dest.height;\r\n        self.ctx.drawImage(self.img, 0, 0);\r\n        self.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);\r\n        var idx, idx2;\r\n        for (var i = 0; i &lt; self.dest.width; i++) {\r\n            for (var j = 0; j &lt; self.dest.height; j++) {\r\n                idx = (j * self.dest.width + i) * 3;\r\n                idx2 = (j * self.dest.width + i) * 4;\r\n                self.src.data[idx2] = self.dest.data[idx];\r\n                self.src.data[idx2 + 1] = self.dest.data[idx + 1];\r\n                self.src.data[idx2 + 2] = self.dest.data[idx + 2];\r\n            }\r\n        }\r\n        self.ctx.putImageData(self.src, 0, 0);\r\n        self.canvas.style.display = &quot;block&quot;;\r\n    }\r\n    });\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1376937191,
          "answer_id": 18320662,
          "path": "stack.bower.answer",
          "score": 37,
          "up_vote_count": 37,
          "is_accepted": false,
          "last_activity_date": 1505217008,
          "last_edit_date": 1505217008,
          "body_markdown": "Fast image resize/resample algorithm using **Hermite** filter with JavaScript. Support transparency, gives good quality. Preview: \r\n&lt;br /&gt;&lt;br /&gt;![enter image description here][1]&lt;br /&gt;\r\n\r\n**Update**: version 2.0 added on GitHub (faster, web workers + transferable objects). Finally i got it working!  \r\n\r\nGit: https://github.com/viliusle/Hermite-resize&lt;br /&gt;\r\nDemo: http://viliusle.github.io/miniPaint/\r\n\r\n    /**\r\n     * Hermite resize - fast image resize/resample using Hermite filter. 1 cpu version!\r\n     * \r\n     * @param {HtmlElement} canvas\r\n     * @param {int} width\r\n     * @param {int} height\r\n     * @param {boolean} resize_canvas if true, canvas will be resized. Optional.\r\n     */\r\n    function resample_single(canvas, width, height, resize_canvas) {\r\n    \tvar width_source = canvas.width;\r\n    \tvar height_source = canvas.height;\r\n    \twidth = Math.round(width);\r\n    \theight = Math.round(height);\r\n    \r\n    \tvar ratio_w = width_source / width;\r\n    \tvar ratio_h = height_source / height;\r\n    \tvar ratio_w_half = Math.ceil(ratio_w / 2);\r\n    \tvar ratio_h_half = Math.ceil(ratio_h / 2);\r\n    \r\n    \tvar ctx = canvas.getContext(&quot;2d&quot;);\r\n    \tvar img = ctx.getImageData(0, 0, width_source, height_source);\r\n    \tvar img2 = ctx.createImageData(width, height);\r\n    \tvar data = img.data;\r\n    \tvar data2 = img2.data;\r\n    \r\n    \tfor (var j = 0; j &lt; height; j++) {\r\n    \t\tfor (var i = 0; i &lt; width; i++) {\r\n    \t\t\tvar x2 = (i + j * width) * 4;\r\n    \t\t\tvar weight = 0;\r\n    \t\t\tvar weights = 0;\r\n    \t\t\tvar weights_alpha = 0;\r\n    \t\t\tvar gx_r = 0;\r\n    \t\t\tvar gx_g = 0;\r\n    \t\t\tvar gx_b = 0;\r\n    \t\t\tvar gx_a = 0;\r\n    \t\t\tvar center_y = (j + 0.5) * ratio_h;\r\n    \t\t\tvar yy_start = Math.floor(j * ratio_h);\r\n    \t\t\tvar yy_stop = Math.ceil((j + 1) * ratio_h);\r\n    \t\t\tfor (var yy = yy_start; yy &lt; yy_stop; yy++) {\r\n    \t\t\t\tvar dy = Math.abs(center_y - (yy + 0.5)) / ratio_h_half;\r\n    \t\t\t\tvar center_x = (i + 0.5) * ratio_w;\r\n    \t\t\t\tvar w0 = dy * dy; //pre-calc part of w\r\n    \t\t\t\tvar xx_start = Math.floor(i * ratio_w);\r\n    \t\t\t\tvar xx_stop = Math.ceil((i + 1) * ratio_w);\r\n    \t\t\t\tfor (var xx = xx_start; xx &lt; xx_stop; xx++) {\r\n    \t\t\t\t\tvar dx = Math.abs(center_x - (xx + 0.5)) / ratio_w_half;\r\n    \t\t\t\t\tvar w = Math.sqrt(w0 + dx * dx);\r\n    \t\t\t\t\tif (w &gt;= 1) {\r\n    \t\t\t\t\t\t//pixel too far\r\n    \t\t\t\t\t\tcontinue;\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\t//hermite filter\r\n    \t\t\t\t\tweight = 2 * w * w * w - 3 * w * w + 1;\r\n    \t\t\t\t\tvar pos_x = 4 * (xx + yy * width_source);\r\n    \t\t\t\t\t//alpha\r\n    \t\t\t\t\tgx_a += weight * data[pos_x + 3];\r\n    \t\t\t\t\tweights_alpha += weight;\r\n    \t\t\t\t\t//colors\r\n    \t\t\t\t\tif (data[pos_x + 3] &lt; 255)\r\n    \t\t\t\t\t\tweight = weight * data[pos_x + 3] / 250;\r\n    \t\t\t\t\tgx_r += weight * data[pos_x];\r\n    \t\t\t\t\tgx_g += weight * data[pos_x + 1];\r\n    \t\t\t\t\tgx_b += weight * data[pos_x + 2];\r\n    \t\t\t\t\tweights += weight;\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tdata2[x2] = gx_r / weights;\r\n    \t\t\tdata2[x2 + 1] = gx_g / weights;\r\n    \t\t\tdata2[x2 + 2] = gx_b / weights;\r\n    \t\t\tdata2[x2 + 3] = gx_a / weights_alpha;\r\n    \t\t}\r\n    \t}\r\n    \t//clear and resize canvas\r\n    \tif (resize_canvas === true) {\r\n    \t\tcanvas.width = width;\r\n    \t\tcanvas.height = height;\r\n    \t} else {\r\n    \t\tctx.clearRect(0, 0, width_source, height_source);\r\n    \t}\r\n    \r\n    \t//draw\r\n    \tctx.putImageData(img2, 0, 0);\r\n    }\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/oek4l.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1406750600,
          "answer_id": 25045895,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1406750600,
          "body_markdown": "I have a feeling the module I wrote will produce similar results to photoshop, as it preserves color data by averaging them, not applying an algorithm.  It&#39;s kind of slow, but to me it is the best, because it preserves all the color data.\r\n\r\nhttps://github.com/danschumann/limby-resize/blob/master/lib/canvas_resize.js\r\n\r\nIt doesn&#39;t take the nearest neighbor and drop other pixels, or sample a group and take a random average.  It takes the exact proportion each source pixel should output into the destination pixel.  The average pixel color in the source will be the average pixel color in the destination, which these other formulas, I think they will not be.\r\n\r\nan example of how to use is at the bottom of \r\nhttps://github.com/danschumann/limby-resize"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1408511517,
          "answer_id": 25397098,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1408511517,
          "body_markdown": "Looking for another great simple solution?\r\n\r\n    var img=document.createElement(&#39;img&#39;);\r\n    img.src=canvas.toDataURL();\r\n    $(img).css(&quot;background&quot;, backgroundColor);\r\n    $(img).width(settings.width);\r\n    $(img).height(settings.height);\r\n\r\nThis solution will use the resize algorith of browser! :)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1409148386,
          "answer_id": 25529319,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1409148386,
          "body_markdown": "The problem with some of this solutions is that they access directly the pixel data and loop through it to perform the downsampling. Depending on the size of the image this can be very resource intensive, and it would be better to use the browser&#39;s internal algorithms.\r\n\r\nThe **drawImage()** function is using a linear-interpolation, nearest-neighbor resampling method. That **works well when you are not resizing down more than half the original size**.\r\n\r\nIf you loop to only resize max one half at a time, the results would be quite good, and much faster than accessing pixel data.\r\n\r\nThis function downsample to half at a time until reaching the desired size:\r\n\r\n      function resize_image( src, dst, type, quality ) {\r\n         var tmp = new Image(),\r\n             canvas, context, cW, cH;\r\n       \r\n         type = type || &#39;image/jpeg&#39;;\r\n         quality = quality || 0.92;\r\n       \r\n         cW = src.naturalWidth;\r\n         cH = src.naturalHeight;\r\n       \r\n         tmp.src = src.src;\r\n         tmp.onload = function() {\r\n       \r\n            canvas = document.createElement( &#39;canvas&#39; );\r\n       \r\n            cW /= 2;\r\n            cH /= 2;\r\n       \r\n            if ( cW &lt; src.width ) cW = src.width;\r\n            if ( cH &lt; src.height ) cH = src.height;\r\n       \r\n            canvas.width = cW;\r\n            canvas.height = cH;\r\n            context = canvas.getContext( &#39;2d&#39; );\r\n            context.drawImage( tmp, 0, 0, cW, cH );\r\n       \r\n            dst.src = canvas.toDataURL( type, quality );\r\n       \r\n            if ( cW &lt;= src.width || cH &lt;= src.height )\r\n               return;\r\n       \r\n            tmp.src = dst.src;\r\n         }\r\n       \r\n      }\r\n      // The images sent as parameters can be in the DOM or be image objects\r\n      resize_image( $( &#39;#original&#39; )[0], $( &#39;#smaller&#39; )[0] );\r\n\r\nCredits to [this post][1]\r\n\r\n\r\n  [1]: http://www.benknowscode.com/2014/01/resizing-images-in-browser-using-canvas.html"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410909471,
          "answer_id": 25879861,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1410910792,
          "last_edit_date": 1410910792,
          "body_markdown": "I converted @syockit&#39;s answer as well as the step-down approach into a reusable Angular service for anyone who&#39;s interested:  https://gist.github.com/fisch0920/37bac5e741eaec60e983\r\n\r\nI included both solutions because they both have their own pros / cons.  The lanczos convolution approach is higher quality at the cost of being slower, whereas the step-wise downscaling approach produces reasonably antialiased results and is significantly faster.\r\n\r\nExample usage:\r\n\r\n    angular.module(&#39;demo&#39;).controller(&#39;ExampleCtrl&#39;, function (imageService) {\r\n      // EXAMPLE USAGE\r\n      // NOTE: it&#39;s bad practice to access the DOM inside a controller, \r\n      // but this is just to show the example usage.\r\n      \r\n      // resize by lanczos-sinc filter\r\n      imageService.resize($(&#39;#myimg&#39;)[0], 256, 256)\r\n        .then(function (resizedImage) {\r\n          // do something with resized image\r\n        })\r\n      \r\n      // resize by stepping down image size in increments of 2x\r\n      imageService.resizeStep($(&#39;#myimg&#39;)[0], 256, 256)\r\n        .then(function (resizedImage) {\r\n          // do something with resized image\r\n        })\r\n    })"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1411556640,
          "answer_id": 26015296,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1411556640,
          "body_markdown": "Try [pica](https://github.com/nodeca/pica) - that&#39;s a highly optimized resizer with selectable algorythms. See [demo](http://nodeca.github.io/pica/demo/). \r\n\r\nFor example, original image from first post is resized in 120ms with Lanczos filter and 3px window or 60ms with Box filter and 0.5px window. For huge 17mb image 5000x3000px resize takes ~1s on desktop and 3s on mobile.\r\n\r\nAll resize principles were described very well in this thread, and pica does not add rocket science. But it&#39;s optimized very well for modern JIT-s, and is ready to use out of box (via npm or bower). Also, it use webworkers when available to avoid interface freezes.\r\n\r\nI also plan to add unsharp mask support soon, because it&#39;s very useful after downscale.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1449767778,
          "answer_id": 34207896,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1449992306,
          "last_edit_date": 1449992306,
          "body_markdown": "Fast and simple Javascript image resizer:\r\n\r\nhttps://github.com/calvintwr/Hermite-resize\r\n\r\nUse:\r\n\r\n    h.resize({\r\n        source: document.getElementById(&#39;image&#39;), // any canvas or image elements, jQuery or native\r\n        width: 400,\r\n        height: 600,\r\n        output: &#39;image&#39;, // [optional] `image` or `canvas`. If not entered output is same as input element.\r\n        quality: 0.7, // [optional] applicable for `image` output only\r\n    }, function(output) {\r\n        //your callback\r\n    });\r\n\r\n###History\r\nThis is really after many rounds of research, reading and trying. \r\n\r\nThe resizer algorithm uses @ViliusL&#39;s Hermite script (Hermite resizer is really the fastest and gives reasonably good output). Extended with features you need. \r\n\r\nForks 1 worker to do the resizing so that it doesn&#39;t freeze your browser when resizing, unlike all other JS resizers out there."
        }
      ],
      "title": "Resizing an image in an HTML5 canvas",
      "view_count": 231786,
      "answer_count": 18,
      "code_snippet": [
        "<code>reader.onloadend = function(e)\n{\n    var img = new Image();\n    var ctx = canvas.getContext(\"2d\");\n    var canvasCopy = document.createElement(\"canvas\");\n    var copyContext = canvasCopy.getContext(\"2d\");\n\n    img.onload = function()\n    {\n        var ratio = 1;\n\n        if(img.width &gt; maxWidth)\n            ratio = maxWidth / img.width;\n        else if(img.height &gt; maxHeight)\n            ratio = maxHeight / img.height;\n\n        canvasCopy.width = img.width;\n        canvasCopy.height = img.height;\n        copyContext.drawImage(img, 0, 0);\n\n        canvas.width = img.width * ratio;\n        canvas.height = img.height * ratio;\n        ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\n    };\n\n    img.src = reader.result;\n}\n</code>",
        "<code>// returns a function that calculates lanczos weight\nfunction lanczosCreate(lobes) {\n    return function(x) {\n        if (x &gt; lobes)\n            return 0;\n        x *= Math.PI;\n        if (Math.abs(x) &lt; 1e-16)\n            return 1;\n        var xx = x / lobes;\n        return Math.sin(x) * Math.sin(xx) / x / xx;\n    };\n}\n\n// elem: canvas element, img: image element, sx: scaled width, lobes: kernel radius\nfunction thumbnailer(elem, img, sx, lobes) {\n    this.canvas = elem;\n    elem.width = img.width;\n    elem.height = img.height;\n    elem.style.display = \"none\";\n    this.ctx = elem.getContext(\"2d\");\n    this.ctx.drawImage(img, 0, 0);\n    this.img = img;\n    this.src = this.ctx.getImageData(0, 0, img.width, img.height);\n    this.dest = {\n        width : sx,\n        height : Math.round(img.height * sx / img.width),\n    };\n    this.dest.data = new Array(this.dest.width * this.dest.height * 3);\n    this.lanczos = lanczosCreate(lobes);\n    this.ratio = img.width / sx;\n    this.rcp_ratio = 2 / this.ratio;\n    this.range2 = Math.ceil(this.ratio * lobes / 2);\n    this.cacheLanc = {};\n    this.center = {};\n    this.icenter = {};\n    setTimeout(this.process1, 0, this, 0);\n}\n\nthumbnailer.prototype.process1 = function(self, u) {\n    self.center.x = (u + 0.5) * self.ratio;\n    self.icenter.x = Math.floor(self.center.x);\n    for (var v = 0; v &lt; self.dest.height; v++) {\n        self.center.y = (v + 0.5) * self.ratio;\n        self.icenter.y = Math.floor(self.center.y);\n        var a, r, g, b;\n        a = r = g = b = 0;\n        for (var i = self.icenter.x - self.range2; i &lt;= self.icenter.x + self.range2; i++) {\n            if (i &lt; 0 || i &gt;= self.src.width)\n                continue;\n            var f_x = Math.floor(1000 * Math.abs(i - self.center.x));\n            if (!self.cacheLanc[f_x])\n                self.cacheLanc[f_x] = {};\n            for (var j = self.icenter.y - self.range2; j &lt;= self.icenter.y + self.range2; j++) {\n                if (j &lt; 0 || j &gt;= self.src.height)\n                    continue;\n                var f_y = Math.floor(1000 * Math.abs(j - self.center.y));\n                if (self.cacheLanc[f_x][f_y] == undefined)\n                    self.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2)\n                            + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);\n                weight = self.cacheLanc[f_x][f_y];\n                if (weight &gt; 0) {\n                    var idx = (j * self.src.width + i) * 4;\n                    a += weight;\n                    r += weight * self.src.data[idx];\n                    g += weight * self.src.data[idx + 1];\n                    b += weight * self.src.data[idx + 2];\n                }\n            }\n        }\n        var idx = (v * self.dest.width + u) * 3;\n        self.dest.data[idx] = r / a;\n        self.dest.data[idx + 1] = g / a;\n        self.dest.data[idx + 2] = b / a;\n    }\n\n    if (++u &lt; self.dest.width)\n        setTimeout(self.process1, 0, self, u);\n    else\n        setTimeout(self.process2, 0, self);\n};\nthumbnailer.prototype.process2 = function(self) {\n    self.canvas.width = self.dest.width;\n    self.canvas.height = self.dest.height;\n    self.ctx.drawImage(self.img, 0, 0, self.dest.width, self.dest.height);\n    self.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);\n    var idx, idx2;\n    for (var i = 0; i &lt; self.dest.width; i++) {\n        for (var j = 0; j &lt; self.dest.height; j++) {\n            idx = (j * self.dest.width + i) * 3;\n            idx2 = (j * self.dest.width + i) * 4;\n            self.src.data[idx2] = self.dest.data[idx];\n            self.src.data[idx2 + 1] = self.dest.data[idx + 1];\n            self.src.data[idx2 + 2] = self.dest.data[idx + 2];\n        }\n    }\n    self.ctx.putImageData(self.src, 0, 0);\n    self.canvas.style.display = \"block\";\n};\n</code>",
        "<code>img.onload = function() {\n    var canvas = document.createElement(\"canvas\");\n    new thumbnailer(canvas, img, 188, 3); //this produces lanczos3\n    // but feel free to raise it up to 8. Your client will appreciate\n    // that the program makes full use of his machine.\n    document.body.appendChild(canvas);\n};\n</code>",
        "<code>/**\n * Hermite resize - fast image resize/resample using Hermite filter. 1 cpu version!\n * \n * @param {HtmlElement} canvas\n * @param {int} width\n * @param {int} height\n * @param {boolean} resize_canvas if true, canvas will be resized. Optional.\n */\nfunction resample_single(canvas, width, height, resize_canvas) {\n    var width_source = canvas.width;\n    var height_source = canvas.height;\n    width = Math.round(width);\n    height = Math.round(height);\n\n    var ratio_w = width_source / width;\n    var ratio_h = height_source / height;\n    var ratio_w_half = Math.ceil(ratio_w / 2);\n    var ratio_h_half = Math.ceil(ratio_h / 2);\n\n    var ctx = canvas.getContext(\"2d\");\n    var img = ctx.getImageData(0, 0, width_source, height_source);\n    var img2 = ctx.createImageData(width, height);\n    var data = img.data;\n    var data2 = img2.data;\n\n    for (var j = 0; j &lt; height; j++) {\n        for (var i = 0; i &lt; width; i++) {\n            var x2 = (i + j * width) * 4;\n            var weight = 0;\n            var weights = 0;\n            var weights_alpha = 0;\n            var gx_r = 0;\n            var gx_g = 0;\n            var gx_b = 0;\n            var gx_a = 0;\n            var center_y = (j + 0.5) * ratio_h;\n            var yy_start = Math.floor(j * ratio_h);\n            var yy_stop = Math.ceil((j + 1) * ratio_h);\n            for (var yy = yy_start; yy &lt; yy_stop; yy++) {\n                var dy = Math.abs(center_y - (yy + 0.5)) / ratio_h_half;\n                var center_x = (i + 0.5) * ratio_w;\n                var w0 = dy * dy; //pre-calc part of w\n                var xx_start = Math.floor(i * ratio_w);\n                var xx_stop = Math.ceil((i + 1) * ratio_w);\n                for (var xx = xx_start; xx &lt; xx_stop; xx++) {\n                    var dx = Math.abs(center_x - (xx + 0.5)) / ratio_w_half;\n                    var w = Math.sqrt(w0 + dx * dx);\n                    if (w &gt;= 1) {\n                        //pixel too far\n                        continue;\n                    }\n                    //hermite filter\n                    weight = 2 * w * w * w - 3 * w * w + 1;\n                    var pos_x = 4 * (xx + yy * width_source);\n                    //alpha\n                    gx_a += weight * data[pos_x + 3];\n                    weights_alpha += weight;\n                    //colors\n                    if (data[pos_x + 3] &lt; 255)\n                        weight = weight * data[pos_x + 3] / 250;\n                    gx_r += weight * data[pos_x];\n                    gx_g += weight * data[pos_x + 1];\n                    gx_b += weight * data[pos_x + 2];\n                    weights += weight;\n                }\n            }\n            data2[x2] = gx_r / weights;\n            data2[x2 + 1] = gx_g / weights;\n            data2[x2 + 2] = gx_b / weights;\n            data2[x2 + 3] = gx_a / weights_alpha;\n        }\n    }\n    //clear and resize canvas\n    if (resize_canvas === true) {\n        canvas.width = width;\n        canvas.height = height;\n    } else {\n        ctx.clearRect(0, 0, width_source, height_source);\n    }\n\n    //draw\n    ctx.putImageData(img2, 0, 0);\n}\n</code>",
        "<code>$(document).on('ready', createImage);\r\n$(window).on('resize', createImage);\r\n\r\nvar createImage = function(){\r\n  var canvas = document.getElementById('myCanvas');\r\n  canvas.width = window.innerWidth || $(window).width();\r\n  canvas.height = window.innerHeight || $(window).height();\r\n  var ctx = canvas.getContext('2d');\r\n  img = new Image();\r\n  img.addEventListener('load', function () {\r\n    ctx.drawImage(this, 0, 0, w, h);\r\n  });\r\n  img.src = 'http://www.ruinvalor.com/Telanor/images/original.jpg';\r\n};</code>",
        "<code>html, body{\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n}\r\ncanvas{\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 0;\r\n}</code>",
        "<code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"utf-8\" /&gt;\r\n    &lt;title&gt;Canvas Resize&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;canvas id=\"myCanvas\"&gt;&lt;/canvas&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code>",
        "<code>width</code>",
        "<code>height</code>",
        "<code>.small-image {\n    width: 100px;\n    height: 100px;\n}\n</code>",
        "<code>height</code>",
        "<code>width</code>",
        "<code>var img = document.getElement(\"my-image\");\nimg.style.width = 100 + \"px\";  // Make sure you add the \"px\" to the end,\nimg.style.height = 100 + \"px\"; // otherwise you'll confuse IE\n</code>",
        "<code>-ms-interpolation-mode: bicubic</code>",
        "<code>image-rendering: optimizeQuality</code>",
        "<code>width</code>",
        "<code>height</code>",
        "<code>transform</code>",
        "<code>-moz-transform: scale(sx[, sy])</code>",
        "<code>-webkit-transform:scale(sx[, sy])</code>",
        "<code>function thumbnail(base64, maxWidth, maxHeight) {\n\n  // Max size for thumbnail\n  if(typeof(maxWidth) === 'undefined') var maxWidth = 500;\n  if(typeof(maxHeight) === 'undefined') var maxHeight = 500;\n\n  // Create and initialize two canvas\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  var canvasCopy = document.createElement(\"canvas\");\n  var copyContext = canvasCopy.getContext(\"2d\");\n\n  // Create original image\n  var img = new Image();\n  img.src = base64;\n\n  // Determine new ratio based on max size\n  var ratio = 1;\n  if(img.width &gt; maxWidth)\n    ratio = maxWidth / img.width;\n  else if(img.height &gt; maxHeight)\n    ratio = maxHeight / img.height;\n\n  // Draw original image in second canvas\n  canvasCopy.width = img.width;\n  canvasCopy.height = img.height;\n  copyContext.drawImage(img, 0, 0);\n\n  // Copy and resize second canvas to first canvas\n  canvas.width = img.width * ratio;\n  canvas.height = img.height * ratio;\n  ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL();\n\n}\n</code>",
        "<code>    function resize2(i) {\n      var cc = document.createElement(\"canvas\");\n      cc.width = i.width / 2;\n      cc.height = i.height / 2;\n      var ctx = cc.getContext(\"2d\");\n      ctx.drawImage(i, 0, 0, cc.width, cc.height);\n      return cc;\n    }\n    var cc = img;\n    while (cc.width &gt; 64 * 2) {\n      cc = resize2(cc);\n    }\n    // .. than drawImage(cc, .... )\n</code>",
        "<code>var img = new Image();\nimg.onload = function () {\n    console.debug(this.width,this.height);\n    var canvas = document.createElement('canvas'), ctx;\n    canvas.width = 188;\n    canvas.height = 150;\n    document.body.appendChild(canvas);\n    ctx = canvas.getContext('2d');\n    ctx.drawImage(img,0,0,188,150);\n};\nimg.src = 'original.jpg';\n</code>",
        "<code>var img = new Image();\n// added cause it wasnt defined\nvar canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\n\nvar ctx = canvas.getContext(\"2d\");\nvar canvasCopy = document.createElement(\"canvas\");\n// adding it to the body\n\ndocument.body.appendChild(canvasCopy);\n\nvar copyContext = canvasCopy.getContext(\"2d\");\n\nimg.onload = function()\n{\n        var ratio = 1;\n\n        // defining cause it wasnt\n        var maxWidth = 188,\n            maxHeight = 150;\n\n        if(img.width &gt; maxWidth)\n                ratio = maxWidth / img.width;\n        else if(img.height &gt; maxHeight)\n                ratio = maxHeight / img.height;\n\n        canvasCopy.width = img.width;\n        canvasCopy.height = img.height;\n        copyContext.drawImage(img, 0, 0);\n\n        canvas.width = img.width * ratio;\n        canvas.height = img.height * ratio;\n        // the line to change\n        // ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\n        // the method signature you are using is for slicing\n        ctx.drawImage(canvasCopy, 0, 0, canvas.width, canvas.height);\n};\n\n// changed for example\nimg.src = 'original.jpg';\n</code>",
        "<code>height=\"\"</code>",
        "<code>width=\"\"</code>",
        "<code>canvas.width</code>",
        "<code>canvas.height</code>",
        "<code>  function resize_image( src, dst, type, quality ) {\n     var tmp = new Image(),\n         canvas, context, cW, cH;\n\n     type = type || 'image/jpeg';\n     quality = quality || 0.92;\n\n     cW = src.naturalWidth;\n     cH = src.naturalHeight;\n\n     tmp.src = src.src;\n     tmp.onload = function() {\n\n        canvas = document.createElement( 'canvas' );\n\n        cW /= 2;\n        cH /= 2;\n\n        if ( cW &lt; src.width ) cW = src.width;\n        if ( cH &lt; src.height ) cH = src.height;\n\n        canvas.width = cW;\n        canvas.height = cH;\n        context = canvas.getContext( '2d' );\n        context.drawImage( tmp, 0, 0, cW, cH );\n\n        dst.src = canvas.toDataURL( type, quality );\n\n        if ( cW &lt;= src.width || cH &lt;= src.height )\n           return;\n\n        tmp.src = dst.src;\n     }\n\n  }\n  // The images sent as parameters can be in the DOM or be image objects\n  resize_image( $( '#original' )[0], $( '#smaller' )[0] );\n</code>",
        "<code>angular.module('demo').controller('ExampleCtrl', function (imageService) {\n  // EXAMPLE USAGE\n  // NOTE: it's bad practice to access the DOM inside a controller, \n  // but this is just to show the example usage.\n\n  // resize by lanczos-sinc filter\n  imageService.resize($('#myimg')[0], 256, 256)\n    .then(function (resizedImage) {\n      // do something with resized image\n    })\n\n  // resize by stepping down image size in increments of 2x\n  imageService.resizeStep($('#myimg')[0], 256, 256)\n    .then(function (resizedImage) {\n      // do something with resized image\n    })\n})\n</code>",
        "<code>h.resize({\n    source: document.getElementById('image'), // any canvas or image elements, jQuery or native\n    width: 400,\n    height: 600,\n    output: 'image', // [optional] `image` or `canvas`. If not entered output is same as input element.\n    quality: 0.7, // [optional] applicable for `image` output only\n}, function(output) {\n    //your callback\n});\n</code>",
        "<code>var img=document.createElement('img');\nimg.src=canvas.toDataURL();\n$(img).css(\"background\", backgroundColor);\n$(img).width(settings.width);\n$(img).height(settings.height);\n</code>",
        "<code>$(document).ready(function () {\n\n$('img').on(\"load\", clickA);\nfunction clickA() {\n    var img = this;\n    var canvas = document.createElement(\"canvas\");\n    new thumbnailer(canvas, img, 50, 3);\n    document.body.appendChild(canvas);\n}\n\nfunction thumbnailer(elem, img, sx, lobes) {\n    this.canvas = elem;\n    elem.width = img.width;\n    elem.height = img.height;\n    elem.style.display = \"none\";\n    this.ctx = elem.getContext(\"2d\");\n    this.ctx.drawImage(img, 0, 0);\n    this.img = img;\n    this.src = this.ctx.getImageData(0, 0, img.width, img.height);\n    this.dest = {\n        width: sx,\n        height: Math.round(img.height * sx / img.width)\n    };\n    this.dest.data = new Array(this.dest.width * this.dest.height * 3);\n    this.lanczos = lanczosCreate(lobes);\n    this.ratio = img.width / sx;\n    this.rcp_ratio = 2 / this.ratio;\n    this.range2 = Math.ceil(this.ratio * lobes / 2);\n    this.cacheLanc = {};\n    this.center = {};\n    this.icenter = {};\n    setTimeout(process1, 0, this, 0);\n}\n\n//returns a function that calculates lanczos weight\nfunction lanczosCreate(lobes) {\n    return function (x) {\n        if (x &gt; lobes)\n            return 0;\n        x *= Math.PI;\n        if (Math.abs(x) &lt; 1e-16)\n            return 1\n        var xx = x / lobes;\n        return Math.sin(x) * Math.sin(xx) / x / xx;\n    }\n}\n\nprocess1 = function (self, u) {\n    self.center.x = (u + 0.5) * self.ratio;\n    self.icenter.x = Math.floor(self.center.x);\n    for (var v = 0; v &lt; self.dest.height; v++) {\n        self.center.y = (v + 0.5) * self.ratio;\n        self.icenter.y = Math.floor(self.center.y);\n        var a, r, g, b;\n        a = r = g = b = 0;\n        for (var i = self.icenter.x - self.range2; i &lt;= self.icenter.x + self.range2; i++) {\n            if (i &lt; 0 || i &gt;= self.src.width)\n                continue;\n            var f_x = Math.floor(1000 * Math.abs(i - self.center.x));\n            if (!self.cacheLanc[f_x])\n                self.cacheLanc[f_x] = {};\n            for (var j = self.icenter.y - self.range2; j &lt;= self.icenter.y + self.range2; j++) {\n                if (j &lt; 0 || j &gt;= self.src.height)\n                    continue;\n                var f_y = Math.floor(1000 * Math.abs(j - self.center.y));\n                if (self.cacheLanc[f_x][f_y] == undefined)\n                    self.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2) + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);\n                weight = self.cacheLanc[f_x][f_y];\n                if (weight &gt; 0) {\n                    var idx = (j * self.src.width + i) * 4;\n                    a += weight;\n                    r += weight * self.src.data[idx];\n                    g += weight * self.src.data[idx + 1];\n                    b += weight * self.src.data[idx + 2];\n                }\n            }\n        }\n        var idx = (v * self.dest.width + u) * 3;\n        self.dest.data[idx] = r / a;\n        self.dest.data[idx + 1] = g / a;\n        self.dest.data[idx + 2] = b / a;\n    }\n\n    if (++u &lt; self.dest.width)\n        setTimeout(process1, 0, self, u);\n    else\n        setTimeout(process2, 0, self);\n};\n\nprocess2 = function (self) {\n    self.canvas.width = self.dest.width;\n    self.canvas.height = self.dest.height;\n    self.ctx.drawImage(self.img, 0, 0);\n    self.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);\n    var idx, idx2;\n    for (var i = 0; i &lt; self.dest.width; i++) {\n        for (var j = 0; j &lt; self.dest.height; j++) {\n            idx = (j * self.dest.width + i) * 3;\n            idx2 = (j * self.dest.width + i) * 4;\n            self.src.data[idx2] = self.dest.data[idx];\n            self.src.data[idx2 + 1] = self.dest.data[idx + 1];\n            self.src.data[idx2 + 2] = self.dest.data[idx + 2];\n        }\n    }\n    self.ctx.putImageData(self.src, 0, 0);\n    self.canvas.style.display = \"block\";\n}\n});\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "jquery",
        "angular"
      ],
      "creation_date": 1433343693,
      "body_markdown": "Can anyone tell me, how to use **jQuery** with **Angular**?\r\n\r\n\r\n    class MyComponent {\r\n        constructor() {\r\n            // how to query the DOM element from here?\r\n        }\r\n    }\r\n\r\nI&#39;m aware there are workarounds like manipulating the *class* or *id* of the DOM element upfront, but I&#39;m hoping for a cleaner way of doing it.",
      "last_edit_date": 1501393472,
      "up_vote_count": 234,
      "link": "https://stackoverflow.com/questions/30623825/how-to-use-jquery-with-angular",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1433495793,
          "answer_id": 30662773,
          "path": "stack.bower.answer",
          "score": 257,
          "up_vote_count": 259,
          "is_accepted": true,
          "last_activity_date": 1465567602,
          "last_edit_date": 1465567602,
          "body_markdown": "Using jQuery from Angular2 is a breeze compared to ng1. If you are using TypeScript you could first reference jQuery typescript definition.\r\n\r\n    tsd install jquery --save\r\n    or\r\n    typings install dt~jquery --global --save\r\n\r\nTypescriptDefinitions are not required since you could just use &lt;code&gt;any&lt;/code&gt; as the type for &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;jQuery&lt;/code&gt;\r\n    \r\nIn your angular component you should reference a DOM element from the template using &lt;code&gt;@ViewChild()&lt;/code&gt; After the view has been initialized you can use the &lt;code&gt;nativeElement&lt;/code&gt; property of this object and pass to jQuery.\r\n\r\nDeclaring &lt;code&gt;$&lt;/code&gt; (or &lt;code&gt;jQuery&lt;/code&gt;) as JQueryStatic will give you a typed reference to jQuery. \r\n\r\n    import {bootstrap}    from &#39;@angular/platform-browser-dynamic&#39;;\r\n    import {Component, ViewChild, ElementRef, AfterViewInit} from &#39;@angular/core&#39;;\r\n    declare var $:JQueryStatic;\r\n    \r\n    @Component({\r\n        selector: &#39;ng-chosen&#39;,\r\n        template: `&lt;select #selectElem&gt;\r\n            &lt;option *ngFor=&quot;#item of items&quot; [value]=&quot;item&quot; [selected]=&quot;item === selectedValue&quot;&gt;{{item}} option&lt;/option&gt;\r\n            &lt;/select&gt;\r\n            &lt;h4&gt; {{selectedValue}}&lt;/h4&gt;`\r\n    })\r\n    export class NgChosenComponent implements AfterViewInit {\r\n        @ViewChild(&#39;selectElem&#39;) el:ElementRef;\r\n        items = [&#39;First&#39;, &#39;Second&#39;, &#39;Third&#39;];\r\n        selectedValue = &#39;Second&#39;;\r\n    \r\n        ngAfterViewInit() {\r\n            $(this.el.nativeElement)\r\n                .chosen()\r\n                .on(&#39;change&#39;, (e, args) =&gt; {\r\n                    this.selectedValue = args.selected;\r\n                });\r\n        }\r\n    }\r\n    \r\n    bootstrap(NgChosenComponent);\r\n\r\n\r\n\r\nThis example is available on plunker: http://plnkr.co/edit/Nq9LnK?p=preview\r\n\r\n\r\ntslint will complain about `chosen` not being a property on $, to fix this you can add a definition to the JQuery interface in your custom *.d.ts file\r\n\r\n\r\n    interface JQuery {\r\n        chosen(options?:any):JQuery;\r\n    }    "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1443984356,
          "answer_id": 32937045,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1450390840,
          "last_edit_date": 1450390840,
          "body_markdown": "You can implement the lifecycle hook **ngAfterViewInit()** to add some DOM manipulations\r\n\r\n    ngAfterViewInit() {\r\n                var el:any = elelemtRef.domElement.children[0];\r\n                $(el).chosen().on(&#39;change&#39;, (e, args) =&gt; {\r\n                    _this.selectedValue = args.selected;\r\n                });\r\n    }\r\n\r\nBe careful when using router because angular2 may recycle views .. so you have to be sure that the DOM elements manipulations are done only in the first call of afterViewInit .. ( You can use static boolean variables to do so )\r\n\r\n\r\n    class Component {\r\n    \tlet static chosenInitialized  : boolean = false;\r\n        ngAfterViewInit() {\r\n        \tif (!Component.chosenInitialized) {\r\n                var el:any = elelemtRef.domElement.children[0];\r\n                $(el).chosen().on(&#39;change&#39;, (e, args) =&gt; {\r\n                    _this.selectedValue = args.selected;\r\n                });\r\n                Component.chosenInitialized = true;\r\n        \t}\r\n        }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1459950991,
          "answer_id": 36453332,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1459950991,
          "body_markdown": "The most effective way that I have found is to use setTimeout with time of 0 inside of the page/component constructor. This let&#39;s the jQuery run in the next execution cycle after Angular has finished loading all the child components. A few other component methods could be used but all I have tried work best when run inside a setTimeout.\r\n\r\n    export class HomePage {\r\n    \tconstructor() {\r\n            setTimeout(() =&gt; {\r\n                // run jQuery stuff here\r\n            }, 0);\r\n        }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1465305409,
          "answer_id": 37680522,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1465305771,
          "last_edit_date": 1465305771,
          "body_markdown": "&lt;br/&gt;\r\n1) To access DOM in component.\r\n\r\n    import {BrowserDomAdapter } from &#39;@angular/platform-browser/src/browser/browser_adapter&#39;;\r\n    constructor(el: ElementRef,public zone:NgZone) {\r\n\t     this.el = el.nativeElement;\r\n\t     this.dom = new BrowserDomAdapter();\r\n     }\r\n     ngOnInit() {\r\n       this.dom.setValue(this.el,&quot;Adding some content from ngOnInit&quot;); \r\n     }\r\n\r\n\r\nYou can include jQuery in following way. \r\n2) Include you jquery file in index.html before angular2 loads\r\n\r\n          &lt;head&gt;\r\n        &lt;title&gt;Angular 2 QuickStart&lt;/title&gt;\r\n        &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n        &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;\r\n    \r\n        &lt;!-- jquery file --&gt;\r\n    \t&lt;script src=&quot;js/jquery-2.0.3.min.js&quot;&gt;&lt;/script&gt;\r\n    \t&lt;script src=&quot;js/jquery-ui.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/es6-shim/es6-shim.min.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/zone.js/dist/zone.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/reflect-metadata/Reflect.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;node_modules/systemjs/dist/system.src.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;systemjs.config.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script&gt;\r\n          System.import(&#39;app&#39;).catch(function(err){ console.error(err); });\r\n        &lt;/script&gt;\r\n      &lt;/head&gt;\r\n\r\nYou can use Jquery in following way, Here i am using JQuery Ui date picker.\r\n\r\n        import { Directive, ElementRef} from &#39;@angular/core&#39;;\r\n        declare  var $:any;\r\n        @Directive({\r\n          selector: &#39;[uiDatePicker]&#39;,\r\n         })\r\n        export class UiDatePickerDirective {\r\n          private el: HTMLElement;\r\n          constructor(el: ElementRef) {\r\n        \tthis.el = el.nativeElement;\r\n\t        \r\n         }\r\n          \r\n        ngOnInit() {\r\n        \t$(this.el).datepicker({\r\n        \t onSelect: function(dateText:string) {\r\n\t\t        //do something on select\r\n        \t }\r\n        \t});\r\n        }\r\n    }\r\n\r\nThis work for me."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467203845,
          "answer_id": 38099800,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1486297464,
          "last_edit_date": 1486297464,
          "body_markdown": "I do it in simpler way - first install jquery by npm in console: `npm install jquery -S` and then in component file I just write: `let $ = require(&#39;.../jquery.min.js&#39;)` and it works! Here full example from some my code:\r\n\r\n    import { Component, Input, ElementRef, OnInit } from &#39;@angular/core&#39;;\r\n    let $ = require(&#39;../../../../../node_modules/jquery/dist/jquery.min.js&#39;);\r\n\r\n    @Component({\r\n        selector: &#39;departments-connections-graph&#39;,\r\n        templateUrl: &#39;./departmentsConnectionsGraph.template.html&#39;,\r\n    })\r\n    \r\n    export class DepartmentsConnectionsGraph implements OnInit {\r\n        rootNode : any;\r\n        container: any;\r\n    \r\n        constructor(rootNode: ElementRef) {\r\n          this.rootNode = rootNode; \r\n        }\r\n    \r\n        ngOnInit() {\r\n          this.container = $(this.rootNode.nativeElement).find(&#39;.departments-connections-graph&#39;)[0];\r\n          console.log({ container : this.container});\r\n          ...\r\n        }\r\n    }\r\n\r\nIn teplate I have for instance:\r\n\r\n    &lt;div class=&quot;departments-connections-graph&quot;&gt;something...&lt;/div&gt;\r\n\r\n----\r\n\r\n**EDIT**\r\n\r\nAlternatively instead of using:\r\n\r\n    let $ = require(&#39;../../../../../node_modules/jquery/dist/jquery.min.js&#39;);\r\n\r\nuse\r\n\r\n    declare var $: any;\r\n\r\nand in your index.html put:\r\n\r\n    &lt;script src=&quot;assets/js/jquery-2.1.1.js&quot;&gt;&lt;/script&gt;\r\n\r\nThis will initialize jquery only once globaly - this is important for instance for use modal windows in bootstrap..."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1467896309,
          "answer_id": 38246116,
          "path": "stack.bower.answer",
          "score": 101,
          "up_vote_count": 102,
          "is_accepted": false,
          "last_activity_date": 1467896309,
          "body_markdown": "Why is everyone making it a rocket science?\r\nFor anyone else who needs to do some basic stuff on static elements, for example, `body` tag, just do this:\r\n\r\n 1. In index.html add `script` tag with the path to your jquery lib, doesn&#39;t matter where (this way you can also use IE conditional tags to load lower version of jquery for IE9 and less).\r\n 2. In your `export component` block have a function that calls your code: `$(&quot;body&quot;).addClass(&quot;done&quot;);` Normaly this causes declaration error, so just after all imports in this .ts file, add `declare var $:any;` and you are good to go!\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467996075,
          "answer_id": 38271712,
          "path": "stack.bower.answer",
          "score": 42,
          "up_vote_count": 42,
          "is_accepted": false,
          "last_activity_date": 1467998729,
          "last_edit_date": 1467998729,
          "body_markdown": "Now it has become very easy, You can do it by simply declaring jQuery variable with any type inside Angular2 controller.\r\n\r\n    declare var jQuery:any;\r\nAdd this just after import statements and before component decorator.\r\n\r\nTo access any element with id X or Class X you just have to do\r\n\r\n    jQuery(&quot;#X or .X&quot;).someFunc();\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1471012283,
          "answer_id": 38920469,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1471012283,
          "body_markdown": "\r\n//installing jquery`npm install jquery --save`\r\n\r\n\r\n//installing type defintion for the jquery`typings install dt~jquery --global --save`\r\n\r\n\r\n//adding jquery library into build configuration file as specified(in &quot;angular-cli-build.js&quot; file)\r\n\r\n    vendorNpmFiles: [\r\n      .........\r\n      .........\r\n\t  &#39;jquery/dist/jquery.min.js&#39;\r\n    ]\r\n\r\n\r\n//run the build to add the jquery library in the build   `ng build`\r\n\r\n//adding the relative path configuration(in system-config.js)\r\n `/** Map relative paths to URLs. */\r\n    const map: any = {\r\n    .....,\r\n    .......,\r\n\t&#39;jquery&#39;: &#39;vendor/jquery/dist&#39;\r\n   };`\r\n\r\n    /** User packages configuration. */\r\n    const packages: any = {\r\n    ......,\r\n\t&#39;jquery&#39;:{ main: &#39;jquery.min&#39;,\r\n    format: &#39;global&#39;,\r\n    defaultExtension: &#39;js&#39;}};\r\n\r\n//import the jquery library in your component file\r\n\r\n    import &#39;jquery&#39;;\r\n\r\nbelow is the code snipppet of my sample component\r\n\r\n    import { Component } from &#39;@angular/core&#39;;\r\n    import &#39;jquery&#39;;\r\n    @Component({\r\n\t  moduleId: module.id,\r\n\t  selector: &#39;app-root&#39;,\r\n\t  templateUrl: &#39;app.component.html&#39;,  \r\n\t  styleUrls: [&#39;app.component.css&#39;]\r\n\t})\r\n    export class AppComponent {\r\n\t  list:Array&lt;number&gt; = [90,98,56,90];\r\n\t  title = &#39;app works!&#39;;\r\n\t  isNumber:boolean = jQuery.isNumeric(89)  \r\n\t  constructor(){}\r\n\t}\r\n\r\n \r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1475534385,
          "answer_id": 39841516,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1475534385,
          "body_markdown": "Since I&#39;m a dunce, I thought it would be good to have some working code.  \r\n\r\nAlso, Angular2 typings version of [angular-protractor has issues with the jQuery][1] `$`, so the top accepted answer doesn&#39;t give me a clean compile. \r\n\r\nHere are the steps that I got to be working:  \r\n\r\nindex.html\r\n\r\n    &lt;head&gt;\r\n    ...\r\n        &lt;script   src=&quot;https://code.jquery.com/jquery-3.1.1.min.js&quot;   integrity=&quot;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=&quot;   crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;\r\n    ...\r\n    &lt;/head&gt;\r\n\r\nInside my.component.ts\r\n\r\n    import {\r\n        Component,\r\n        EventEmitter,\r\n        Input,\r\n        OnInit,\r\n        Output,\r\n        NgZone,\r\n        AfterContentChecked,\r\n        ElementRef,\r\n        ViewChild\r\n    } from &quot;@angular/core&quot;;\r\n    import {Router} from &quot;@angular/router&quot;;\r\n     \r\n    declare var jQuery:any;\r\n    \r\n    @Component({\r\n        moduleId: module.id,\r\n        selector: &#39;mycomponent&#39;,\r\n        templateUrl: &#39;my.component.html&#39;,\r\n        styleUrls: [&#39;../../scss/my.component.css&#39;],\r\n    })\r\n    export class MyComponent implements OnInit, AfterContentChecked{\r\n    ...\r\n        scrollLeft() {\r\n            \r\n            jQuery(&#39;#myElement&#39;).animate({scrollLeft: 100}, 500);\r\n    \r\n        }\r\n    }\r\n\r\n  [1]: https://github.com/mgechev/angular2-seed/issues/1126\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1476530453,
          "answer_id": 40058384,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1476530453,
          "body_markdown": "just write \r\n\r\ndeclare var $:any; after all import section you can use jquery and include jquery library in index.html page\r\n\r\nit works for me "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1477984976,
          "answer_id": 40355691,
          "path": "stack.bower.answer",
          "score": 69,
          "up_vote_count": 69,
          "is_accepted": false,
          "last_activity_date": 1486519966,
          "last_edit_date": 1486519966,
          "body_markdown": "This is what worked for me.\r\n\r\n## STEP 1 - First things first\r\n\r\n    // In the console\r\n    // First install jQuery\r\n    npm install --save jquery\r\n    // and jQuery Definition\r\n    npm install -D @types/jquery\r\n\r\n\r\n## STEP 2 - IMPORT\r\n\r\n    // Now, within any of the app files (ES2015 style)\r\n    import * as $ from &#39;jquery&#39;;\r\n    //\r\n    $(&#39;#elemId&#39;).width();\r\n    \r\n    // OR\r\n        \r\n    // CommonJS style - working with &quot;require&quot;\r\n    import $ = require(&#39;jquery&#39;)\r\n    //\r\n    $(&#39;#elemId&#39;).width();\r\n\r\n## #UPDATE - `Feb - 2017`\r\nLately, I&#39;m writing code with `ES6` instead of `typescript` and am able to `import` without `* as $` in the `import statement`.   This is what it looks like now:\r\n\r\n    import $ from &#39;jquery&#39;;\r\n    //\r\n    $(&#39;#elemId&#39;).width();\r\n\r\n \r\nGood Luck.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1487327317,
          "answer_id": 42295505,
          "path": "stack.bower.answer",
          "score": 18,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1487335173,
          "last_edit_date": 1487335173,
          "body_markdown": "Please follow these simple steps. It worked for me. Lets start with a new angular 2 app to avoid any confusion. I&#39;m using Angular cli. So, install it if you don&#39;t have it already.\r\nhttps://cli.angular.io/\r\n\r\n**Step 1: Create a demo angular 2 app**\r\n\r\n    ng new jquery-demo\r\nyou can use any name. Now check if it is working by running below cmd.(Now, make sure that you are pointing to &#39;jquery-demo&#39; if not use cd command )\r\n\r\n    ng serve\r\nyou will see &quot;app works!&quot; on browser.\r\n\r\n**Step 2: Install Bower (A package manager for the web)**\r\n\r\nRun this command on cli (make sure that you are pointing to &#39;jquery-demo&#39; if not use cd command ):\r\n\r\n    npm i -g bower --save\r\n\r\nNow after successful installation of bower, Create a &#39;bower.json&#39; file by using below command:\r\n\r\n    bower init\r\nIt will ask for inputs, just press enter for all if you want default values and at the end type &quot;Yes&quot; when it&#39;ll ask &quot;Looks good?&quot;\r\n\r\nNow you can see a new file (bower.json) in folder &quot;jquery-demo&quot;. You can find more info on https://bower.io/\r\n\r\n**Step 3: Install jquery**\r\n\r\nRun this command\r\n\r\n    bower install jquery --save\r\nIt will create a new folder (bower_components) which will contain jquery installation folder. Now you have jquery installed in &#39;bower_components&#39; folder.\r\n\r\n**Step 4: Add jquery location in &#39;angular-cli.json&#39; file**\r\n\r\nOpen &#39;angular-cli.json&#39; file (present in &#39;jquery-demo&#39; folder) and add jquery location in &quot;scripts&quot;. It will look like this:\r\n\r\n    &quot;scripts&quot;: [&quot;../bower_components/jquery/dist/jquery.min.js&quot;\r\n                  ]\r\n\r\n**Step 5: Write simple jquery code for testing**\r\n\r\nOpen &#39;app.component.html&#39; file and add a simple code line, The file will look like this:\r\n\r\n    &lt;h1&gt;\r\n      {{title}}\r\n    &lt;/h1&gt;\r\n    &lt;p&gt;If you click on me, I will disappear.&lt;/p&gt;\r\n\r\nNow Open &#39;app.component.ts&#39; file and add jquery variable declaration and code for &#39;p&#39; tag. You should use lifecycle hook ngAfterViewInit() also. After making changes the file will look like this:\r\n\r\n    import { Component, AfterViewInit } from &#39;@angular/core&#39;;\r\n    declare var $:any;\r\n\r\n    @Component({\r\n         selector: &#39;app-root&#39;,\r\n         templateUrl: &#39;./app.component.html&#39;,\r\n         styleUrls: [&#39;./app.component.css&#39;]\r\n    })\r\n    export class AppComponent {\r\n         title = &#39;app works!&#39;;\r\n\r\n         ngAfterViewInit(){\r\n  \t           $(document).ready(function(){\r\n                 $(&quot;p&quot;).click(function(){\r\n                 $(this).hide();\r\n                 });\r\n               });\r\n         }\r\n    }\r\n\r\nNow run your angular 2 app by using &#39;ng serve&#39; command and test it. It should work.\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1493795130,
          "answer_id": 43753324,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1493795130,
          "body_markdown": "**Here is what worked for me - Angular 2 with webpack**\r\n\r\nI tried declaring `$` as type `any` but whenever I tried to use any JQuery module I was getting (for example) `$(..).datepicker()` is not a function\r\n\r\nSince I have Jquery included in my vendor.ts file I simply imported it into my component using \r\n\r\n`import * as $ from &#39;jquery&#39;;`\r\n\r\nI am able to use Jquery plugins (like bootstrap-datetimepicker) now"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1494946496,
          "answer_id": 44004900,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1494946496,
          "body_markdown": "You could also try to import it with the &quot;InjectionToken&quot;. \r\nAs described here: [Use jQuery in Angular/Typescript without a type definition][1]\r\n\r\nYou can simply inject the jQuery global instance and use it. For this you won&#39;t be needing any type definitions or typings.\r\n\r\n    import { InjectionToken } from &#39;@angular/core&#39;;\r\n    \r\n    export const JQ_TOKEN = new InjectionToken(&#39;jQuery&#39;);\r\n    \r\n    export function jQueryFactory() {\r\n        return window[&#39;jQuery&#39;];\r\n    }\r\n    \r\n    export const JQUERY_PROVIDER = [\r\n        { provide: JQ_TOKEN, useFactory: jQueryFactory },\r\n    ];\r\n\r\n\r\nWhen set correctly in your app.module.ts:\r\n\r\n    import { NgModule } from &#39;@angular/core&#39;;\r\n    import { BrowserModule } from &#39;@angular/platform-browser&#39;;\r\n    \r\n    import { AppComponent } from &#39;./app.component&#39;;\r\n    \r\n    import { JQ_TOKEN } from &#39;./jQuery.service&#39;;\r\n    \r\n    declare let jQuery: Object;\r\n    \r\n    @NgModule({\r\n        imports: [\r\n            BrowserModule\r\n        ],\r\n        declarations: [\r\n            AppComponent\r\n        ],\r\n        providers: [\r\n            { provide: JQ_TOKEN, useValue: jQuery }\r\n        ],\r\n        bootstrap: [AppComponent]\r\n    })\r\n    export class AppModule { }\r\n\r\n    \r\nYou can start using it in your components:\r\n\r\n    import { Component, Inject } from &#39;@angular/core&#39;;\r\n    import { JQ_TOKEN } from &#39;./jQuery.service&#39;;\r\n    \r\n    @Component({\r\n        selector: &quot;selector&quot;,\r\n        templateUrl: &#39;somefile.html&#39;\r\n    })\r\n    export class SomeComponent {\r\n        constructor( @Inject(JQ_TOKEN) private $: any) { }\r\n    \r\n        somefunction() {\r\n            this.$(&#39;...&#39;).doSomething();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n  [1]: https://thecodegarden.net/jquery-in-angular-typescript-without-type-definition/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1497019956,
          "answer_id": 44460842,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1497019956,
          "body_markdown": "To Use Jquery in Angular2(4) \r\n\r\nFollow these setps\r\n\r\ninstall the Jquery and Juqry type defination \r\n\r\nFor Jquery Installation `npm install jquery --save`\r\n\r\nFor Jquery Type defination Installation  ` npm install @types/jquery --save-dev`\r\n\r\nand then simply import the jquery \r\n  \r\n\r\n    import { Component } from &#39;@angular/core&#39;;\r\n    import * as $ from &#39;jquery&#39;;\r\n    \r\n    @Component({\r\n      selector: &#39;app-root&#39;,\r\n      templateUrl: &#39;./app.component.html&#39;,\r\n      styleUrls: [&#39;./app.component.css&#39;]\r\n    })\r\n    export class AppComponent { \r\n      console.log($(window)); // jquery is accessible \r\n    }\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1498114895,
          "answer_id": 44692322,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1498114895,
          "body_markdown": "A simple way:\r\n\r\n**1. include script**\r\n\r\nindex.html\r\n\r\n    &lt;script type=&quot;text/javascript&quot; src=&quot;assets/js/jquery-2.1.1.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n**2. declare**\r\n\r\nmy.component.ts\r\n\r\n    declare var $: any;\r\n\r\n**3. use**\r\n\r\n    @Component({\r\n      selector: &#39;home&#39;,\r\n      templateUrl: &#39;./my.component.html&#39;,\r\n    })\r\n    export class MyComponent implements OnInit {\r\n     ...\r\n      $(&quot;#myselector&quot;).style=&quot;display: none;&quot;;\r\n    }\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1502270929,
          "answer_id": 45586736,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1502270929,
          "body_markdown": "If you use angular-cli you can do : \r\n\r\n 1. **Install the dependency** : \r\n\r\n    npm install jquery --save\r\n\r\n    npm install @types/jquery --save-dev\r\n\r\n 2. **Import the file** : \r\n\r\n      Add &quot;../node_modules/jquery/dist/jquery.min.js&quot; to the &quot;script&quot; section in .angular-cli.json file\r\n\r\n\r\n 3. **Declare jquery** :\r\n\r\n      Add &quot;$&quot; to the &quot;types&quot; section of tsconfig.app.json\r\n\r\nYou can find more details on [official angular cli doc][1]\r\n\r\n\r\n  [1]: https://github.com/angular/angular-cli/wiki/stories-third-party-lib"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1507550122,
          "answer_id": 46645859,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1507550122,
          "body_markdown": "step 1: use the command : npm install jquery --save \r\n\r\nstep 2: you can simply import angular as :\r\n\r\nimport $ from &#39;jquery&#39;;\r\n\r\nthat&#39;s all .\r\n\r\nAn example would be :\r\n\r\n    import { Component } from &#39;@angular/core&#39;;\r\n    import  $ from &#39;jquery&#39;;\r\n    @Component({\r\n      selector: &#39;app-root&#39;,\r\n      templateUrl: &#39;./app.component.html&#39;,\r\n      styleUrls: [&#39;./app.component.css&#39;]\r\n    })\r\n\r\n    export class AppComponent {\r\n      title = &#39;app&#39;;\r\n      constructor(){\r\n        console.log($(&#39;body&#39;));\r\n      }\r\n      \r\n  \r\n    }\r\n"
        }
      ],
      "title": "How to use jQuery with Angular?",
      "view_count": 244825,
      "answer_count": 18,
      "code_snippet": [
        "<code>class MyComponent {\n    constructor() {\n        // how to query the DOM element from here?\n    }\n}\n</code>",
        "<code>tsd install jquery --save\nor\ntypings install dt~jquery --global --save\n</code>",
        "<code>any</code>",
        "<code>$</code>",
        "<code>jQuery</code>",
        "<code>@ViewChild()</code>",
        "<code>nativeElement</code>",
        "<code>$</code>",
        "<code>jQuery</code>",
        "<code>import {bootstrap}    from '@angular/platform-browser-dynamic';\nimport {Component, ViewChild, ElementRef, AfterViewInit} from '@angular/core';\ndeclare var $:JQueryStatic;\n\n@Component({\n    selector: 'ng-chosen',\n    template: `&lt;select #selectElem&gt;\n        &lt;option *ngFor=\"#item of items\" [value]=\"item\" [selected]=\"item === selectedValue\"&gt;{{item}} option&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;h4&gt; {{selectedValue}}&lt;/h4&gt;`\n})\nexport class NgChosenComponent implements AfterViewInit {\n    @ViewChild('selectElem') el:ElementRef;\n    items = ['First', 'Second', 'Third'];\n    selectedValue = 'Second';\n\n    ngAfterViewInit() {\n        $(this.el.nativeElement)\n            .chosen()\n            .on('change', (e, args) =&gt; {\n                this.selectedValue = args.selected;\n            });\n    }\n}\n\nbootstrap(NgChosenComponent);\n</code>",
        "<code>chosen</code>",
        "<code>interface JQuery {\n    chosen(options?:any):JQuery;\n}    \n</code>",
        "<code>setTimeout</code>",
        "<code>body</code>",
        "<code>script</code>",
        "<code>export component</code>",
        "<code>$(\"body\").addClass(\"done\");</code>",
        "<code>declare var $:any;</code>",
        "<code>declare var $:any;</code>",
        "<code>// In the console\n// First install jQuery\nnpm install --save jquery\n// and jQuery Definition\nnpm install -D @types/jquery\n</code>",
        "<code>// Now, within any of the app files (ES2015 style)\nimport * as $ from 'jquery';\n//\n$('#elemId').width();\n\n// OR\n\n// CommonJS style - working with \"require\"\nimport $ = require('jquery')\n//\n$('#elemId').width();\n</code>",
        "<code>Feb - 2017</code>",
        "<code>ES6</code>",
        "<code>typescript</code>",
        "<code>import</code>",
        "<code>* as $</code>",
        "<code>import statement</code>",
        "<code>import $ from 'jquery';\n//\n$('#elemId').width();\n</code>",
        "<code>import * as $ from 'jquery';</code>",
        "<code>import $ from 'jquery';</code>",
        "<code>declare var jQuery:any;\n</code>",
        "<code>jQuery(\"#X or .X\").someFunc();\n</code>",
        "<code>ng new jquery-demo\n</code>",
        "<code>ng serve\n</code>",
        "<code>npm i -g bower --save\n</code>",
        "<code>bower init\n</code>",
        "<code>bower install jquery --save\n</code>",
        "<code>\"scripts\": [\"../bower_components/jquery/dist/jquery.min.js\"\n              ]\n</code>",
        "<code>&lt;h1&gt;\n  {{title}}\n&lt;/h1&gt;\n&lt;p&gt;If you click on me, I will disappear.&lt;/p&gt;\n</code>",
        "<code>import { Component, AfterViewInit } from '@angular/core';\ndeclare var $:any;\n\n@Component({\n     selector: 'app-root',\n     templateUrl: './app.component.html',\n     styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n     title = 'app works!';\n\n     ngAfterViewInit(){\n           $(document).ready(function(){\n             $(\"p\").click(function(){\n             $(this).hide();\n             });\n           });\n     }\n}\n</code>",
        "<code>npm install jquery --save</code>",
        "<code>\"scripts\":[\"../node_modules/jquery/dist/jquery.js\"]</code>",
        "<code>import $ from 'jquery';</code>",
        "<code>npm install bower</code>",
        "<code>npm WARN deprecated bower@1.8.0:</code>",
        "<code>&lt;script type=\"text/javascript\" src=\"assets/js/jquery-2.1.1.min.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>declare var $: any;\n</code>",
        "<code>@Component({\n  selector: 'home',\n  templateUrl: './my.component.html',\n})\nexport class MyComponent implements OnInit {\n ...\n  $(\"#myselector\").style=\"display: none;\";\n}\n</code>",
        "<code>ngAfterViewInit() {\n            var el:any = elelemtRef.domElement.children[0];\n            $(el).chosen().on('change', (e, args) =&gt; {\n                _this.selectedValue = args.selected;\n            });\n}\n</code>",
        "<code>class Component {\n    let static chosenInitialized  : boolean = false;\n    ngAfterViewInit() {\n        if (!Component.chosenInitialized) {\n            var el:any = elelemtRef.domElement.children[0];\n            $(el).chosen().on('change', (e, args) =&gt; {\n                _this.selectedValue = args.selected;\n            });\n            Component.chosenInitialized = true;\n        }\n    }\n}\n</code>",
        "<code>Property 'domElement' does not exist on type ElementRef</code>",
        "<code>npm install jquery -S</code>",
        "<code>let $ = require('.../jquery.min.js')</code>",
        "<code>import { Component, Input, ElementRef, OnInit } from '@angular/core';\nlet $ = require('../../../../../node_modules/jquery/dist/jquery.min.js');\n\n@Component({\n    selector: 'departments-connections-graph',\n    templateUrl: './departmentsConnectionsGraph.template.html',\n})\n\nexport class DepartmentsConnectionsGraph implements OnInit {\n    rootNode : any;\n    container: any;\n\n    constructor(rootNode: ElementRef) {\n      this.rootNode = rootNode; \n    }\n\n    ngOnInit() {\n      this.container = $(this.rootNode.nativeElement).find('.departments-connections-graph')[0];\n      console.log({ container : this.container});\n      ...\n    }\n}\n</code>",
        "<code>&lt;div class=\"departments-connections-graph\"&gt;something...&lt;/div&gt;\n</code>",
        "<code>let $ = require('../../../../../node_modules/jquery/dist/jquery.min.js');\n</code>",
        "<code>declare var $: any;\n</code>",
        "<code>&lt;script src=\"assets/js/jquery-2.1.1.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>console.log({ conatiner : this.container});</code>",
        "<code>console.log({ container: this.container}); </code>",
        "<code>npm install jquery --save</code>",
        "<code>typings install dt~jquery --global --save</code>",
        "<code>vendorNpmFiles: [\n  .........\n  .........\n  'jquery/dist/jquery.min.js'\n]\n</code>",
        "<code>ng build</code>",
        "<code>/** Map relative paths to URLs. */\n    const map: any = {\n    .....,\n    .......,\n    'jquery': 'vendor/jquery/dist'\n   };</code>",
        "<code>/** User packages configuration. */\nconst packages: any = {\n......,\n'jquery':{ main: 'jquery.min',\nformat: 'global',\ndefaultExtension: 'js'}};\n</code>",
        "<code>import 'jquery';\n</code>",
        "<code>import { Component } from '@angular/core';\nimport 'jquery';\n@Component({\n  moduleId: module.id,\n  selector: 'app-root',\n  templateUrl: 'app.component.html',  \n  styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n  list:Array&lt;number&gt; = [90,98,56,90];\n  title = 'app works!';\n  isNumber:boolean = jQuery.isNumeric(89)  \n  constructor(){}\n}\n</code>",
        "<code>npm install jquery --save</code>",
        "<code>npm install @types/jquery --save-dev</code>",
        "<code>import { Component } from '@angular/core';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { \n  console.log($(window)); // jquery is accessible \n}\n</code>",
        "<code>$</code>",
        "<code>&lt;head&gt;\n...\n    &lt;script   src=\"https://code.jquery.com/jquery-3.1.1.min.js\"   integrity=\"sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\"   crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n...\n&lt;/head&gt;\n</code>",
        "<code>import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    NgZone,\n    AfterContentChecked,\n    ElementRef,\n    ViewChild\n} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\ndeclare var jQuery:any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'mycomponent',\n    templateUrl: 'my.component.html',\n    styleUrls: ['../../scss/my.component.css'],\n})\nexport class MyComponent implements OnInit, AfterContentChecked{\n...\n    scrollLeft() {\n\n        jQuery('#myElement').animate({scrollLeft: 100}, 500);\n\n    }\n}\n</code>",
        "<code>import { Component } from '@angular/core';\nimport  $ from 'jquery';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n  constructor(){\n    console.log($('body'));\n  }\n\n\n}\n</code>",
        "<code>import {BrowserDomAdapter } from '@angular/platform-browser/src/browser/browser_adapter';\nconstructor(el: ElementRef,public zone:NgZone) {\n     this.el = el.nativeElement;\n     this.dom = new BrowserDomAdapter();\n }\n ngOnInit() {\n   this.dom.setValue(this.el,\"Adding some content from ngOnInit\"); \n }\n</code>",
        "<code>      &lt;head&gt;\n    &lt;title&gt;Angular 2 QuickStart&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n\n    &lt;!-- jquery file --&gt;\n    &lt;script src=\"js/jquery-2.0.3.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"js/jquery-ui.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/es6-shim/es6-shim.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/zone.js/dist/zone.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/reflect-metadata/Reflect.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"node_modules/systemjs/dist/system.src.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"systemjs.config.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n      System.import('app').catch(function(err){ console.error(err); });\n    &lt;/script&gt;\n  &lt;/head&gt;\n</code>",
        "<code>    import { Directive, ElementRef} from '@angular/core';\n    declare  var $:any;\n    @Directive({\n      selector: '[uiDatePicker]',\n     })\n    export class UiDatePickerDirective {\n      private el: HTMLElement;\n      constructor(el: ElementRef) {\n        this.el = el.nativeElement;\n\n     }\n\n    ngOnInit() {\n        $(this.el).datepicker({\n         onSelect: function(dateText:string) {\n            //do something on select\n         }\n        });\n    }\n}\n</code>",
        "<code>export class HomePage {\n    constructor() {\n        setTimeout(() =&gt; {\n            // run jQuery stuff here\n        }, 0);\n    }\n}\n</code>",
        "<code>ngOnInit()</code>",
        "<code>setTimeout</code>",
        "<code>*ngFor</code>",
        "<code>$</code>",
        "<code>any</code>",
        "<code>$(..).datepicker()</code>",
        "<code>import * as $ from 'jquery';</code>",
        "<code>import { InjectionToken } from '@angular/core';\n\nexport const JQ_TOKEN = new InjectionToken('jQuery');\n\nexport function jQueryFactory() {\n    return window['jQuery'];\n}\n\nexport const JQUERY_PROVIDER = [\n    { provide: JQ_TOKEN, useFactory: jQueryFactory },\n];\n</code>",
        "<code>import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nimport { JQ_TOKEN } from './jQuery.service';\n\ndeclare let jQuery: Object;\n\n@NgModule({\n    imports: [\n        BrowserModule\n    ],\n    declarations: [\n        AppComponent\n    ],\n    providers: [\n        { provide: JQ_TOKEN, useValue: jQuery }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code>",
        "<code>import { Component, Inject } from '@angular/core';\nimport { JQ_TOKEN } from './jQuery.service';\n\n@Component({\n    selector: \"selector\",\n    templateUrl: 'somefile.html'\n})\nexport class SomeComponent {\n    constructor( @Inject(JQ_TOKEN) private $: any) { }\n\n    somefunction() {\n        this.$('...').doSomething();\n    }\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "git",
        "gitignore"
      ],
      "creation_date": 1244819089,
      "body_markdown": "I understand that a .gitignore file cloaks specified files from Git&#39;s version\r\ncontrol. I have a project (LaTeX) that generates lots of extra files (.auth,\r\n.dvi, .pdf, logs, etc) as it runs, but I don&#39;t want those to be tracked.\r\n\r\nI&#39;m aware that I could (maybe should) make it so all those files are put in an\r\nseparate subfolder in the project, since I could then just ignore the folder.\r\n\r\nHowever, is there any feasible way to keep the output files in the root of the\r\nproject tree and use .gitignore to ignore everything except the files I&#39;m\r\ntracking with Git? Something like\r\n\r\n&lt;!-- language: sh --&gt;\r\n\r\n    # Ignore everything\r\n    *\r\n    \r\n    # But not these files...\r\n    script.pl\r\n    template.latex\r\n    # etc...",
      "last_edit_date": 1447567737,
      "up_vote_count": 1066,
      "link": "https://stackoverflow.com/questions/987142/make-gitignore-ignore-everything-except-a-few-files",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1244819178,
          "answer_id": 987153,
          "path": "stack.bower.answer",
          "score": 49,
          "up_vote_count": 51,
          "is_accepted": false,
          "last_activity_date": 1244819178,
          "body_markdown": "    # ignore these\r\n    *\r\n    # except foo\r\n    !foo"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1244819258,
          "answer_id": 987162,
          "path": "stack.bower.answer",
          "score": 1537,
          "up_vote_count": 1537,
          "is_accepted": true,
          "last_activity_date": 1513246355,
          "last_edit_date": 1513246355,
          "body_markdown": "&gt; An optional prefix `!` which negates the pattern; any matching file excluded by\r\n&gt; a previous pattern will become included again. If a negated pattern matches,\r\n&gt; this will override lower precedence patterns sources.\r\n\r\n&lt;!-- language: sh --&gt;\r\n\r\n    # Ignore everything\r\n    *\r\n    \r\n    # But not these files...\r\n    !.gitignore\r\n    !script.pl\r\n    !template.latex\r\n    # etc...\r\n\r\n    # ...even if they are in subdirectories\r\n    !*/\r\n    \r\n    # if the files to be tracked are in subdirectories\r\n    !*/a/b/file1.txt\r\n    !*/a/b/c/*\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1244820038,
          "answer_id": 987245,
          "path": "stack.bower.answer",
          "score": 19,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1244820038,
          "body_markdown": "You can use `git config status.showUntrackedFiles no` and all untracked files will be hidden from you. See `man git-config` for details."
        },
        {
          "tags": [],
          "down_vote_count": 17,
          "creation_date": 1344501547,
          "answer_id": 11879626,
          "path": "stack.bower.answer",
          "score": 22,
          "up_vote_count": 39,
          "is_accepted": false,
          "last_activity_date": 1344501547,
          "body_markdown": "To ignore some files in a directory, you have to do this in the **correct order**:\r\n\r\nFor example, ignore everything in folder &quot;application&quot; except index.php and folder &quot;config&quot; ***pay attention to the order***. \r\n\r\nYou must negate want you want first.\r\n\r\n**FAILS**\r\n\r\n`application/*`\r\n\r\n`!application/config/*`\r\n\r\n`!application/index.php`\r\n\r\n**WORKS**\r\n\r\n`!application/config/*`\r\n\r\n`!application/index.php`\r\n\r\n`application/*`"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1367411486,
          "answer_id": 16318111,
          "path": "stack.bower.answer",
          "score": 452,
          "up_vote_count": 453,
          "is_accepted": false,
          "last_activity_date": 1367411486,
          "body_markdown": "If you want to ignore the whole content of a directory except one file inside it, you could write a pair of rules for each directory in the file path.\r\nEg .gitignore to ignore the pippo folder except from pippo/pluto/paperino.xml\r\n\r\n.gitignore\r\n----------\r\n\r\n    pippo/*\r\n    !pippo/pluto\r\n    pippo/pluto/*\r\n    !pippo/pluto/paperino.xml\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1376400196,
          "answer_id": 18210351,
          "path": "stack.bower.answer",
          "score": 54,
          "up_vote_count": 54,
          "is_accepted": false,
          "last_activity_date": 1455482310,
          "last_edit_date": 1455482310,
          "body_markdown": "A little more specific: \r\n\r\nExample: Ignore everything in `webroot/cache` - but keep `webroot/cache/.htaccess`. \r\n\r\n&lt;b&gt;Notice the slash (/) after the `cache` folder:&lt;/b&gt;\r\n\r\n**FAILS**\r\n\r\n    webroot/cache*\r\n    !webroot/cache/.htaccess\r\n\r\n**WORKS**\r\n\r\n    webroot/cache/*\r\n    !webroot/cache/.htaccess\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1422392224,
          "answer_id": 28179854,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1422392224,
          "body_markdown": "I have Jquery and Angular from bower. Bower installed them in \r\n\r\n    /public_html/bower_components/jquery/dist/bunch-of-jquery-files\r\n    /public_html/bower_components/jquery/src/bunch-of-jquery-source-files\r\n    /public_html/bower_components/angular/angular-files\r\n\r\nThe minimized jquery is inside the `dist` directory and angular is inside `angular` directory. I only needed minimized files to be commited to github. Some tampering with .gitignore and this is what I managed to conjure...\r\n\r\n    /public_html/bower_components/jquery/*\r\n    !public_html/bower_components/jquery/dist\r\n    /public_html/bower_components/jquery/dist/*\r\n    !public_html/bower_components/jquery/dist/jquery.min.js\r\n    /public_html/bower_components/angular/*\r\n    !public_html/bower_components/angular/angular.min.js\r\n\r\nHope someone could find this useful."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1430267513,
          "answer_id": 29932318,
          "path": "stack.bower.answer",
          "score": 118,
          "up_vote_count": 119,
          "is_accepted": false,
          "last_activity_date": 1506367766,
          "last_edit_date": 1506367766,
          "body_markdown": "**You want to use `/*` instead of `*` or `*/` in most cases**\r\n\r\nUsing `*` is valid, but it works recursively.  It won&#39;t look into directories from then on out.  People recommend using `!*/` to whitelist directories again, but it&#39;s actually better to blacklist the highest level folder with `/*`\r\n\r\n    # Blacklist files/folders in same directory as the .gitignore file\r\n    /*\r\n\r\n    # Whitelist some files\r\n    !.gitignore\r\n    !README.md\r\n\r\n    # Ignore all files named .DS_Store or ending with .log\r\n    **/.DS_Store\r\n    **.log\r\n\r\n    # Whitelist folder/a/b1/ and folder/a/b2/\r\n    # trailing &quot;/&quot; is optional for folders, may match file though.\r\n    # &quot;/&quot; is NOT optional when followed by a *\r\n    !folder/\r\n    folder/*\r\n    !folder/a/\r\n    folder/a/*\r\n    !folder/a/b1/\r\n    !folder/a/b2/\r\n\r\nThe above code would ignore all files except for `.gitignore`, `README.md`, `folder/a/b1/` and `folder/a/b2/` and everything contained in those two folders. (And `.DS_Store` and `*.log` files would be ignored in those folders.)\r\n\r\nObviously I could do e.g. `!/folder` or `!/.gitignore` too.\r\n\r\nMore info: http://git-scm.com/docs/gitignore"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430350805,
          "answer_id": 29956527,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1430350805,
          "last_edit_date": 1495540501,
          "body_markdown": "There are a bunch of similar questions about this, so I&#39;ll post what I wrote before:\r\n\r\nThe only way I got this to work on my machine was to do it this way:\r\n\r\n    # Ignore all directories, and all sub-directories, and it&#39;s contents:\r\n    */*\r\n    \r\n    #Now ignore all files in the current directory \r\n    #(This fails to ignore files without a &quot;.&quot;, for example \r\n    #&#39;file.txt&#39; works, but \r\n    #&#39;file&#39; doesn&#39;t):\r\n    *.*\r\n    \r\n    #Only Include these specific directories and subdirectories and files if you wish:\r\n    !wordpress/somefile.jpg\r\n    !wordpress/\r\n    !wordpress/*/\r\n    !wordpress/*/wp-content/\r\n    !wordpress/*/wp-content/themes/\r\n    !wordpress/*/wp-content/themes/*\r\n    !wordpress/*/wp-content/themes/*/*\r\n    !wordpress/*/wp-content/themes/*/*/*\r\n    !wordpress/*/wp-content/themes/*/*/*/*\r\n    !wordpress/*/wp-content/themes/*/*/*/*/*\r\n\r\nNotice how you have to explicitly allow content for each level you want to include. So if I have subdirectories 5 deep under themes, I still need to spell that out.\r\n\r\nThis is from @Yarin&#39;s comment here: https://stackoverflow.com/a/5250314/1696153\r\n\r\nThese were useful topics:\r\n\r\n - https://stackoverflow.com/questions/2820255/how-do-negated-patterns-work-in-gitignore/2820310#2820310\r\n - https://stackoverflow.com/questions/3001888/how-do-gitignore-exclusion-rules-actually-work\r\n\r\nI also tried \r\n\r\n    *\r\n    */*\r\n    **/**\r\n\r\nand `**/wp-content/themes/**`\r\n\r\nor `/wp-content/themes/**/*`\r\n\r\nNone of that worked for me, either. Lots of trail and error!\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1462042701,
          "answer_id": 36958939,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1462042701,
          "body_markdown": "That&#39;s what have worked for me, I wanted to commit only one Cordova plugin to the repo:\r\n\r\n    ...\r\n    plugins/*\r\n    !plugins/cordova-plugin-app-customization"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1478787711,
          "answer_id": 40529855,
          "path": "stack.bower.answer",
          "score": 11,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1489504005,
          "last_edit_date": 1489504005,
          "body_markdown": "To exclude folder from .gitignore, the following can be done.\r\n\r\n    !app/\r\n    \r\n    app/*\r\n    !app/bower_components/\r\n    \r\n    app/bower_components/*\r\n    !app/bower_components/highcharts/\r\n\r\nThis will ignore all files/subfolders inside `bower_components` except for `/highcharts`."
        }
      ],
      "title": "Make .gitignore ignore everything except a few files",
      "view_count": 260138,
      "answer_count": 11,
      "code_snippet": [
        "<code># Ignore everything\n*\n\n# But not these files...\nscript.pl\ntemplate.latex\n# etc...\n</code>",
        "<code>!</code>",
        "<code># Ignore everything\n*\n\n# But not these files...\n!.gitignore\n!script.pl\n!template.latex\n# etc...\n\n# ...even if they are in subdirectories\n!*/\n\n# if the files to be tracked are in subdirectories\n!*/a/b/file1.txt\n!*/a/b/c/*\n</code>",
        "<code>wp/</code>",
        "<code>wp/path/to/some/location/*</code>",
        "<code>git add -f wp/path/to/some/location/*</code>",
        "<code>!*/</code>",
        "<code>!*/</code>",
        "<code>.gitignore</code>",
        "<code>pippo/*\n!pippo/pluto\npippo/pluto/*\n!pippo/pluto/paperino.xml\n</code>",
        "<code>foo</code>",
        "<code>foo/*</code>",
        "<code>foo/*</code>",
        "<code>/*</code>",
        "<code>*</code>",
        "<code>*/</code>",
        "<code>*</code>",
        "<code>!*/</code>",
        "<code>/*</code>",
        "<code># Blacklist files/folders in same directory as the .gitignore file\n/*\n\n# Whitelist some files\n!.gitignore\n!README.md\n\n# Ignore all files named .DS_Store or ending with .log\n**/.DS_Store\n**.log\n\n# Whitelist folder/a/b1/ and folder/a/b2/\n# trailing \"/\" is optional for folders, may match file though.\n# \"/\" is NOT optional when followed by a *\n!folder/\nfolder/*\n!folder/a/\nfolder/a/*\n!folder/a/b1/\n!folder/a/b2/\n</code>",
        "<code>.gitignore</code>",
        "<code>README.md</code>",
        "<code>folder/a/b1/</code>",
        "<code>folder/a/b2/</code>",
        "<code>.DS_Store</code>",
        "<code>*.log</code>",
        "<code>!/folder</code>",
        "<code>!/.gitignore</code>",
        "<code>.DS_Store</code>",
        "<code>**/.DS_Store</code>",
        "<code>webroot/cache</code>",
        "<code>webroot/cache/.htaccess</code>",
        "<code>cache</code>",
        "<code>webroot/cache*\n!webroot/cache/.htaccess\n</code>",
        "<code>webroot/cache/*\n!webroot/cache/.htaccess\n</code>",
        "<code># ignore these\n*\n# except foo\n!foo\n</code>",
        "<code>application/*</code>",
        "<code>!application/config/*</code>",
        "<code>!application/index.php</code>",
        "<code>!application/config/*</code>",
        "<code>!application/index.php</code>",
        "<code>application/*</code>",
        "<code>git status</code>",
        "<code>.gitignore</code>",
        "<code>git status</code>",
        "<code>git config status.showUntrackedFiles no</code>",
        "<code>man git-config</code>",
        "<code>!app/\n\napp/*\n!app/bower_components/\n\napp/bower_components/*\n!app/bower_components/highcharts/\n</code>",
        "<code>bower_components</code>",
        "<code>/highcharts</code>",
        "<code># Ignore all directories, and all sub-directories, and it's contents:\n*/*\n\n#Now ignore all files in the current directory \n#(This fails to ignore files without a \".\", for example \n#'file.txt' works, but \n#'file' doesn't):\n*.*\n\n#Only Include these specific directories and subdirectories and files if you wish:\n!wordpress/somefile.jpg\n!wordpress/\n!wordpress/*/\n!wordpress/*/wp-content/\n!wordpress/*/wp-content/themes/\n!wordpress/*/wp-content/themes/*\n!wordpress/*/wp-content/themes/*/*\n!wordpress/*/wp-content/themes/*/*/*\n!wordpress/*/wp-content/themes/*/*/*/*\n!wordpress/*/wp-content/themes/*/*/*/*/*\n</code>",
        "<code>*\n*/*\n**/**\n</code>",
        "<code>**/wp-content/themes/**</code>",
        "<code>/wp-content/themes/**/*</code>",
        "<code>/public_html/bower_components/jquery/dist/bunch-of-jquery-files\n/public_html/bower_components/jquery/src/bunch-of-jquery-source-files\n/public_html/bower_components/angular/angular-files\n</code>",
        "<code>dist</code>",
        "<code>angular</code>",
        "<code>/public_html/bower_components/jquery/*\n!public_html/bower_components/jquery/dist\n/public_html/bower_components/jquery/dist/*\n!public_html/bower_components/jquery/dist/jquery.min.js\n/public_html/bower_components/angular/*\n!public_html/bower_components/angular/angular.min.js\n</code>",
        "<code>...\nplugins/*\n!plugins/cordova-plugin-app-customization\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "angularjs",
        "asynchronous",
        "service",
        "angular-promise"
      ],
      "creation_date": 1367263507,
      "body_markdown": "I have an AngularJS service that I want to initialize with some asynchronous data. Something like this:\r\n\r\n    myModule.service(&#39;MyService&#39;, function($http) {\r\n    \tvar myData = null;\r\n    \t\r\n    \t$http.get(&#39;data.json&#39;).success(function (data) {\r\n    \t\tmyData = data;\r\n    \t});\r\n    \t\r\n    \treturn {\r\n    \t\tsetData: function (data) {\r\n    \t\t\tmyData = data;\r\n    \t\t},\r\n    \t\tdoStuff: function () {\r\n    \t\t\treturn myData.getSomeData();\r\n    \t\t}\r\n    \t};\r\n    });\r\n\r\nObviously this won&#39;t work because if something tries to call `doStuff()` before `myData` gets back I will get a null pointer exception. As far as I can tell from reading some of the other questions asked [here][1] and [here][2] I have a few options, but none of them seem very clean (perhaps I am missing something):\r\n\r\n**Setup Service with &quot;run&quot;**\r\n\r\nWhen setting up my app do this:\r\n\r\n    myApp.run(function ($http, MyService) {\r\n    \t$http.get(&#39;data.json&#39;).success(function (data) {\r\n    \t\tMyService.setData(data);\r\n    \t});\r\n    });\r\nThen my service would look like this:\r\n\r\n    myModule.service(&#39;MyService&#39;, function() {\r\n    \tvar myData = null;\r\n    \treturn {\r\n    \t\tsetData: function (data) {\r\n    \t\t\tmyData = data;\r\n    \t\t},\r\n    \t\tdoStuff: function () {\r\n    \t\t\treturn myData.getSomeData();\r\n    \t\t}\r\n    \t};\r\n    });\r\n\r\nThis works some of the time but if the asynchronous data happens to take longer than it takes for everything to get initialized I get a null pointer exception when I call `doStuff()`\r\n\r\n**Use promise objects**\r\n\r\nThis would probably work. The only downside it everywhere I call MyService I will have to know that doStuff() returns a promise and all the code will have to us `then` to interact with the promise. I would rather just wait until myData is back before loading the my application.\r\n\r\n**Manual Bootstrap** \r\n\r\n    angular.element(document).ready(function() {\r\n        $.getJSON(&quot;data.json&quot;, function (data) {\r\n           // can&#39;t initialize the data here because the service doesn&#39;t exist yet\r\n           angular.bootstrap(document);\r\n           // too late to initialize here because something may have already\r\n           // tried to call doStuff() and would have got a null pointer exception\r\n        });\r\n    });\r\n\r\n**Global Javascript Var**\r\nI could send my JSON directly to a global Javascript variable:\r\n\r\nHTML:\r\n\r\n    &lt;script type=&quot;text/javascript&quot; src=&quot;data.js&quot;&gt;&lt;/script&gt;\r\n\r\ndata.js:\r\n\r\n    var dataForMyService = { \r\n    // myData here\r\n    };\r\n\r\nThen it would be available when initializing `MyService`:\r\n\r\n    myModule.service(&#39;MyService&#39;, function() {\r\n    \tvar myData = dataForMyService;\r\n    \treturn {\r\n    \t\tdoStuff: function () {\r\n    \t\t\treturn myData.getSomeData();\r\n    \t\t}\r\n    \t};\r\n    });\r\n\r\nThis would work too, but then I have a global javascript variable which smells bad.\r\n\r\nAre these my only options? Are one of these options better than the others? I know this is a pretty long question, but I wanted to show that I have tried to explore all my options. Any guidance would greatly be appreciated. \r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/12657389/angularjs-load-service-then-call-controller-and-render\r\n  [2]: https://stackoverflow.com/questions/15164013/json-to-initialize-data-in-service",
      "last_edit_date": 1495542877,
      "up_vote_count": 434,
      "link": "https://stackoverflow.com/questions/16286605/angularjs-initialize-service-with-asynchronous-data",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1367270607,
          "answer_id": 16288468,
          "path": "stack.bower.answer",
          "score": 311,
          "up_vote_count": 311,
          "is_accepted": true,
          "last_activity_date": 1403864757,
          "last_edit_date": 1403864757,
          "body_markdown": "Have you had a look at [`$routeProvider.when(&#39;/path&#39;,{ resolve:{...}`][1]? It can make the promise approach a bit cleaner:\r\n\r\nExpose a promise in your service:\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    app.service(&#39;MyService&#39;, function($http) {\r\n        var myData = null;\r\n    \r\n        var promise = $http.get(&#39;data.json&#39;).success(function (data) {\r\n          myData = data;\r\n        });\r\n    \r\n        return {\r\n          promise:promise,\r\n          setData: function (data) {\r\n              myData = data;\r\n          },\r\n          doStuff: function () {\r\n              return myData;//.getSomeData();\r\n          }\r\n        };\r\n    });\r\n\r\nAdd `resolve` to your route config:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    app.config(function($routeProvider){\r\n      $routeProvider\r\n        .when(&#39;/&#39;,{controller:&#39;MainCtrl&#39;,\r\n        template:&#39;&lt;div&gt;From MyService:&lt;pre&gt;{{data | json}}&lt;/pre&gt;&lt;/div&gt;&#39;,\r\n        resolve:{\r\n          &#39;MyServiceData&#39;:function(MyService){\r\n            // MyServiceData will also be injectable in your controller, if you don&#39;t want this you could create a new promise with the $q service\r\n            return MyService.promise;\r\n          }\r\n        }})\r\n      }):\r\n\r\nYour controller won&#39;t get instantiated before all dependencies are resolved:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    app.controller(&#39;MainCtrl&#39;, function($scope,MyService) {\r\n      console.log(&#39;Promise is now resolved: &#39;+MyService.doStuff().data)\r\n      $scope.data = MyService.doStuff();\r\n    });\r\n\r\nI&#39;ve made an example at plnkr: http://plnkr.co/edit/GKg21XH0RwCMEQGUdZKH?p=preview\r\n\r\n\r\n  [1]: https://docs.angularjs.org/api/ngRoute/provider/$routeProvider"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1367504120,
          "answer_id": 16340429,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1367504120,
          "body_markdown": "So I found a solution. I created an angularJS service, we&#39;ll call it MyDataRepository and I  created a module for it. I then serve up this javascript file from my server-side controller:\r\n\r\n**HTML:**\r\n\r\n    &lt;script src=&quot;path/myData.js&quot;&gt;&lt;/script&gt;\r\n\r\n**Server-side:**\r\n\r\n    @RequestMapping(value=&quot;path/myData.js&quot;, method=RequestMethod.GET)\r\n    public ResponseEntity&lt;String&gt; getMyDataRepositoryJS()\r\n    {\r\n    \t// Populate data that I need into a Map\r\n    \tMap&lt;String, String&gt; myData = new HashMap&lt;String,String&gt;();\r\n    \t...\r\n    \t// Use Jackson to convert it to JSON\r\n    \tObjectMapper mapper = new ObjectMapper();\r\n    \tString myDataStr = mapper.writeValueAsString(myData);\r\n\t\r\n    \t// Then create a String that is my javascript file\r\n    \tString myJS = &quot;&#39;use strict&#39;;&quot; +\r\n    \t&quot;(function() {&quot; +\r\n    \t&quot;var myDataModule = angular.module(&#39;myApp.myData&#39;, []);&quot; +\r\n    \t&quot;myDataModule.service(&#39;MyDataRepository&#39;, function() {&quot; +\r\n    \t\t&quot;var myData = &quot;+myDataStr+&quot;;&quot; +\r\n    \t\t&quot;return {&quot; +\r\n    \t\t\t&quot;getData: function () {&quot; +\r\n    \t\t\t\t&quot;return myData;&quot; +\r\n    \t\t\t&quot;}&quot; +\r\n    \t\t&quot;}&quot; +\r\n    \t&quot;});&quot; +\r\n    \t&quot;})();&quot;\r\n\r\n    \t// Now send it to the client:\r\n    \tHttpHeaders responseHeaders = new HttpHeaders();\r\n    \tresponseHeaders.add(&quot;Content-Type&quot;, &quot;text/javascript&quot;);\r\n    \treturn new ResponseEntity&lt;String&gt;(myJS , responseHeaders, HttpStatus.OK);\r\n    }\r\n\r\nI can then inject MyDataRepository where ever I need it:\r\n\r\n    someOtherModule.service(&#39;MyOtherService&#39;, function(MyDataRepository) {\r\n    \tvar myData = MyDataRepository.getData();\r\n    \t// Do what you have to do...\r\n    }\r\n\r\nThis worked great for me, but I am open to any feedback if anyone has any.\r\n}"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1369518080,
          "answer_id": 16754186,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1369518733,
          "last_edit_date": 1369518733,
          "body_markdown": "What you can do is in your .config for the app is create the resolve object for the route and in the function pass in $q (promise object) and the name of the service you&#39;re depending on, and resolve the promise in the callback function for the $http in the service like so:\r\n\r\nROUTE CONFIG\r\n\r\n    app.config(function($routeProvider){\r\n        $routeProvider\r\n         .when(&#39;/&#39;,{\r\n              templateUrl: &#39;home.html&#39;,\r\n              controller: &#39;homeCtrl&#39;,\r\n              resolve:function($q,MyService) {\r\n                    //create the defer variable and pass it to our service\r\n                    var defer = $q.defer();\r\n                    MyService.fetchData(defer);\r\n                    //this will only return when the promise\r\n                    //has been resolved. MyService is going to\r\n                    //do that for us\r\n                    return defer.promise;\r\n              }\r\n          })\r\n    }\r\n\r\nAngular won&#39;t render the template or make the controller available until defer.resolve() has been called. We can do that in our service:\r\n\r\nSERVICE\r\n\r\n    app.service(&#39;MyService&#39;,function($http){\r\n           var MyService = {};\r\n           //our service accepts a promise object which \r\n           //it will resolve on behalf of the calling function\r\n           MyService.fetchData = function(q) {\r\n                 $http({method:&#39;GET&#39;,url:&#39;data.php&#39;}).success(function(data){\r\n                     MyService.data = data;\r\n                     //when the following is called it will\r\n                     //release the calling function. in this\r\n                     //case it&#39;s the resolve function in our\r\n                     //route config\r\n                     q.resolve();\r\n                 }\r\n           }\r\n\r\n           return MyService;\r\n    });\r\n\r\nNow that MyService has the data assigned to it&#39;s data property, and the promise in the route resolve object has been resolved, our controller for the route kicks into life, and we can assign the data from the service to our controller object.\r\n\r\n\r\nCONTROLLER\r\n\r\n      app.controller(&#39;homeCtrl&#39;,function($scope,MyService){\r\n           $scope.servicedata = MyService.data;\r\n      });\r\n\r\nNow all our binding in the scope of the controller will be able to use the data which originated from MyService."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1377005593,
          "answer_id": 18336414,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1377005593,
          "last_edit_date": 1495540971,
          "body_markdown": "I had the same problem: I love the `resolve` object, but that only works for the content of ng-view. What if you have controllers (for top-level nav, let&#39;s say) that exist outside of ng-view and which need to be initialized with data before the routing even begins to happen? How do we avoid mucking around on the server-side just to make that work?\r\n\r\n**Use manual bootstrap and an angular constant**. A naiive XHR gets you your data, and you bootstrap angular in its callback, which deals with your async issues. In the example below, you don&#39;t even need to create a global variable. The returned data exists only in angular scope as an injectable, and isn&#39;t even present inside of controllers, services, etc. unless you inject it. (Much as you would inject the output of your `resolve` object into the controller for a routed view.) If you prefer to thereafter interact with that data as a service, you can create a service, inject the data, and nobody will ever be the wiser.\r\n\r\nExample:\r\n\r\n    //First, we have to create the angular module, because all the other JS files are going to load while we&#39;re getting data and bootstrapping, and they need to be able to attach to it.\r\n    var MyApp = angular.module(&#39;MyApp&#39;, [&#39;dependency1&#39;, &#39;dependency2&#39;]);\r\n    \r\n    // Use angular&#39;s version of document.ready() just to make extra-sure DOM is fully \r\n    // loaded before you bootstrap. This is probably optional, given that the async \r\n    // data call will probably take significantly longer than DOM load. YMMV.\r\n    // Has the added virtue of keeping your XHR junk out of global scope. \r\n    angular.element(document).ready(function() {\r\n\r\n        //first, we create the callback that will fire after the data is down\r\n        function xhrCallback() {\r\n            var myData = this.responseText; // the XHR output\r\n\r\n            // here&#39;s where we attach a constant containing the API data to our app \r\n            // module. Don&#39;t forget to parse JSON, which `$http` normally does for you.\r\n            MyApp.constant(&#39;NavData&#39;, JSON.parse(myData));\r\n\r\n            // now, perform any other final configuration of your angular module.\r\n            MyApp.config([&#39;$routeProvider&#39;, function ($routeProvider) {\r\n                $routeProvider\r\n                  .when(&#39;/someroute&#39;, {configs})\r\n                  .otherwise({redirectTo: &#39;/someroute&#39;});\r\n              }]);\r\n\r\n            // And last, bootstrap the app. Be sure to remove `ng-app` from your index.html.\r\n            angular.bootstrap(document, [&#39;NYSP&#39;]);\r\n        };\r\n\r\n        //here, the basic mechanics of the XHR, which you can customize.\r\n        var oReq = new XMLHttpRequest();\r\n        oReq.onload = xhrCallback;\r\n        oReq.open(&quot;get&quot;, &quot;/api/overview&quot;, true); // your specific API URL\r\n        oReq.send();\r\n    })\r\n\r\nNow, your `NavData` constant exists. Go ahead and inject it into a controller or service: \r\n\r\n    angular.module(&#39;MyApp&#39;)\r\n        .controller(&#39;NavCtrl&#39;, [&#39;NavData&#39;, function (NavData) {\r\n            $scope.localObject = NavData; //now it&#39;s addressable in your templates \r\n    }]);\r\n\r\nOf course, using a bare XHR object strips away a number of the niceties that `$http` or JQuery would take care of for you, but this example works with no special dependencies, at least for a simple `get`. If you want a little more power for your request, load up an external library to help you out. But I don&#39;t think it&#39;s possible to access angular&#39;s `$http` or other tools in this context. \r\n\r\n(SO [related post][1])\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/16537783/which-method-should-i-use-to-manually-bootstrap-my-angularjs"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1383960457,
          "answer_id": 19871327,
          "path": "stack.bower.answer",
          "score": 48,
          "up_vote_count": 48,
          "is_accepted": false,
          "last_activity_date": 1395127926,
          "last_edit_date": 1395127926,
          "body_markdown": "I used a similar approach to the one described by @XMLilley but wanted to have the ability to use AngularJS services like `$http` to load the configuration and do further initialization without the use of low level APIs or jQuery.\r\n\r\nUsing `resolve` on routes was also not an option because I needed the values to be available as constants when my app is started, even in `module.config()` blocks.\r\n\r\nI created a small AngularJS app that loads the config, sets them as constants on the actual app and bootstraps it.\r\n\r\n    // define the module of your app\r\n    angular.module(&#39;MyApp&#39;, []);\r\n    \r\n    // define the module of the bootstrap app\r\n    var bootstrapModule = angular.module(&#39;bootstrapModule&#39;, []);\r\n    \r\n    // the bootstrapper service loads the config and bootstraps the specified app\r\n    bootstrapModule.factory(&#39;bootstrapper&#39;, function ($http, $log, $q) {\r\n      return {\r\n        bootstrap: function (appName) {\r\n          var deferred = $q.defer();\r\n    \r\n          $http.get(&#39;/some/url&#39;)\r\n            .success(function (config) {\r\n              // set all returned values as constants on the app...\r\n              var myApp = angular.module(appName);\r\n              angular.forEach(config, function(value, key){\r\n                myApp.constant(key, value);\r\n              });\r\n              // ...and bootstrap the actual app.\r\n              angular.bootstrap(document, [appName]);\r\n              deferred.resolve();\r\n            })\r\n            .error(function () {\r\n              $log.warn(&#39;Could not initialize application, configuration could not be loaded.&#39;);\r\n              deferred.reject();\r\n            });\r\n    \r\n          return deferred.promise;\r\n        }\r\n      };\r\n    });\r\n    \r\n    // create a div which is used as the root of the bootstrap app\r\n    var appContainer = document.createElement(&#39;div&#39;);\r\n    \r\n    // in run() function you can now use the bootstrapper service and shutdown the bootstrapping app after initialization of your actual app\r\n    bootstrapModule.run(function (bootstrapper) {\r\n    \r\n      bootstrapper.bootstrap(&#39;MyApp&#39;).then(function () {\r\n        // removing the container will destroy the bootstrap app\r\n        appContainer.remove();\r\n      });\r\n    \r\n    });\r\n    \r\n    // make sure the DOM is fully loaded before bootstrapping.\r\n    angular.element(document).ready(function() {\r\n      angular.bootstrap(appContainer, [&#39;bootstrapModule&#39;]);\r\n    });\r\n\r\nSee it in action (using `$timeout` instead of `$http`) here: http://plnkr.co/edit/FYznxP3xe8dxzwxs37hi?p=preview\r\n\r\n\r\n**UPDATE**\r\n\r\nI would recommend to use the approach described below by Martin Atkins and JBCP.\r\n\r\n**UPDATE 2**\r\n\r\nBecause I needed it in multiple projects, I just released a bower module that takes care of this: https://github.com/philippd/angular-deferred-bootstrap\r\n\r\nExample that loads data from the back-end and sets a constant called APP_CONFIG on the AngularJS module:\r\n\r\n    deferredBootstrapper.bootstrap({\r\n      element: document.body,\r\n      module: &#39;MyApp&#39;,\r\n      resolve: {\r\n        APP_CONFIG: function ($http) {\r\n          return $http.get(&#39;/api/demo-config&#39;);\r\n        }\r\n      }\r\n    });\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1386465206,
          "answer_id": 20448708,
          "path": "stack.bower.answer",
          "score": 41,
          "up_vote_count": 42,
          "is_accepted": false,
          "last_activity_date": 1386465206,
          "body_markdown": "The &quot;manual bootstrap&quot; case can gain access to Angular services by manually creating an injector before bootstrap. This initial injector will stand alone (not be attached to any elements) and include only a subset of the modules that are loaded. If all you need is core Angular services, it&#39;s sufficient to just load ``ng``, like this:\r\n\r\n    angular.element(document).ready(\r\n        function() {\r\n            var initInjector = angular.injector([&#39;ng&#39;]);\r\n            var $http = initInjector.get(&#39;$http&#39;);\r\n            $http.get(&#39;/config.json&#39;).then(\r\n                function (response) {\r\n                   var config = response.data;\r\n                   // Add additional services/constants/variables to your app,\r\n                   // and then finally bootstrap it:\r\n                   angular.bootstrap(document, [&#39;myApp&#39;]);\r\n                }\r\n            );\r\n        }\r\n    );\r\n\r\nYou can, for example, use the ``module.constant`` mechanism to make data available to your app:\r\n\r\n    myApp.constant(&#39;myAppConfig&#39;, data);\r\n\r\nThis ``myAppConfig`` can now be injected just like any other service, and in particular it&#39;s available during the configuration phase:\r\n\r\n    myApp.config(\r\n        function (myAppConfig, someService) {\r\n            someService.config(myAppConfig.someServiceConfig);\r\n        }\r\n    );\r\n\r\nor, for a smaller app, you could just inject the global config directly into your service, at the expense of spreading knowledge about the configuration format throughout the application.\r\n\r\nOf course, since the async operations here will block the bootstrap of the application, and thus block the compilation/linking of the template, it&#39;s wise to use the ``ng-cloak`` directive to prevent the unparsed template from showing up during the work. You could also provide some sort of loading indication in the DOM , by providing some HTML that gets shown only until AngularJS initializes:\r\n\r\n    &lt;div ng-if=&quot;initialLoad&quot;&gt;\r\n        &lt;!-- initialLoad never gets set, so this div vanishes as soon as Angular is done compiling --&gt;\r\n        &lt;p&gt;Loading the app.....&lt;/p&gt;\r\n    &lt;/div&gt;\r\n    &lt;div ng-cloak&gt;\r\n        &lt;!-- ng-cloak attribute is removed once the app is done bootstrapping --&gt;\r\n        &lt;p&gt;Done loading the app!&lt;/p&gt;\r\n    &lt;/div&gt;\r\n\r\nI created [a complete, working example][1] of this approach on Plunker, loading the configuration from a static JSON file as an example.\r\n\r\n  [1]: http://plnkr.co/edit/tVbq24"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1389971061,
          "answer_id": 21189057,
          "path": "stack.bower.answer",
          "score": 85,
          "up_vote_count": 85,
          "is_accepted": false,
          "last_activity_date": 1394214453,
          "last_edit_date": 1394214453,
          "body_markdown": "Based on Martin Atkins&#39; solution, here is a complete, concise pure-Angular solution:\r\n\r\n    (function() {\r\n      var initInjector = angular.injector([&#39;ng&#39;]);\r\n      var $http = initInjector.get(&#39;$http&#39;);\r\n      $http.get(&#39;/config.json&#39;).then(\r\n        function (response) {\r\n          angular.module(&#39;config&#39;, []).constant(&#39;CONFIG&#39;, response.data);\r\n\r\n          angular.element(document).ready(function() {\r\n              angular.bootstrap(document, [&#39;myApp&#39;]);\r\n            });\r\n        }\r\n      );\r\n    })();\r\n\r\nThis solution uses a self-executing anonymous function to get the $http service, request the config, and inject it into a constant called CONFIG when it becomes available. \r\n\r\nOnce completely, we wait until the document is ready and then bootstrap the Angular app. \r\n\r\nThis is a slight enhancement over Martin&#39;s solution, which deferred fetching the config until after the document is ready. As far as I know, there is no reason to delay the $http call for that. \r\n\r\n**Unit Testing**\r\n\r\nNote: I have discovered this solution does not work well when unit-testing when the code is included in your `app.js` file. The reason for this is that the above code runs immediately when the JS file is loaded. This means the test framework (Jasmine in my case) doesn&#39;t have a chance to provide a mock implementation of `$http`. \r\n\r\nMy solution, which I&#39;m not completely satisfied with, was to move this code to our `index.html` file, so the Grunt/Karma/Jasmine unit test infrastructure does not see it."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1416928888,
          "answer_id": 27130482,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1416928888,
          "last_edit_date": 1495535471,
          "body_markdown": "Also, you can use the following techniques to provision your service globally, before actual controllers are executed: https://stackoverflow.com/a/27050497/1056679. Just resolve your data globally and then pass it to your service in `run` block for example."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1458136786,
          "answer_id": 36037857,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1458136786,
          "body_markdown": "Easiest way to fetch any initialize use ng-init directory.\r\n\r\nJust put ng-init div scope where you want to fetch init data\r\n\r\n**index.html**\r\n\r\n    &lt;div class=&quot;frame&quot; ng-init=&quot;init()&quot;&gt;\r\n        &lt;div class=&quot;bit-1&quot;&gt;\r\n          &lt;div class=&quot;field p-r&quot;&gt;\r\n            &lt;label ng-show=&quot;regi_step2.address&quot; class=&quot;show-hide c-t-1 ng-hide&quot; style=&quot;&quot;&gt;Country&lt;/label&gt;\r\n            &lt;select class=&quot;form-control w-100&quot; ng-model=&quot;country&quot; name=&quot;country&quot; id=&quot;country&quot; ng-options=&quot;item.name for item in countries&quot; ng-change=&quot;stateChanged()&quot; &gt;\r\n            &lt;/select&gt;\r\n            &lt;textarea class=&quot;form-control w-100&quot; ng-model=&quot;regi_step2.address&quot; placeholder=&quot;Address&quot; name=&quot;address&quot; id=&quot;address&quot; ng-required=&quot;true&quot; style=&quot;&quot;&gt;&lt;/textarea&gt;\r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n\r\n\r\n**index.js**\r\n\r\n    $scope.init=function(){\r\n        $http({method:&#39;GET&#39;,url:&#39;/countries/countries.json&#39;}).success(function(data){\r\n          alert();\r\n               $scope.countries = data;\r\n        });\r\n      };\r\n\r\n&gt; **NOTE:** you can use this methodology if you do not have same code more then one place."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467813313,
          "answer_id": 38225817,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1467813313,
          "body_markdown": "You can use `JSONP` to asynchronously load service data.\r\nThe JSONP request will be made during the initial page load and the results will be available before your application starts. This way you won&#39;t have to bloat your routing with redundant resolves.\r\n\r\nYou html would look like this:\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script&gt;\r\n\r\n    function MyService {\r\n      this.getData = function(){\r\n        return   MyService.data;\r\n      }\r\n    }\r\n    MyService.setData = function(data) {\r\n      MyService.data = data;\r\n    }\r\n      \r\n    angular.module(&#39;main&#39;)\r\n    .service(&#39;MyService&#39;, MyService)\r\n\r\n    &lt;/script&gt;\r\n    &lt;script src=&quot;/some_data.php?jsonp=MyService.setData&quot;&gt;&lt;/script&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        }
      ],
      "title": "AngularJS : Initialize service with asynchronous data",
      "view_count": 192674,
      "answer_count": 10,
      "code_snippet": [
        "<code>myModule.service('MyService', function($http) {\n    var myData = null;\n\n    $http.get('data.json').success(function (data) {\n        myData = data;\n    });\n\n    return {\n        setData: function (data) {\n            myData = data;\n        },\n        doStuff: function () {\n            return myData.getSomeData();\n        }\n    };\n});\n</code>",
        "<code>doStuff()</code>",
        "<code>myData</code>",
        "<code>myApp.run(function ($http, MyService) {\n    $http.get('data.json').success(function (data) {\n        MyService.setData(data);\n    });\n});\n</code>",
        "<code>myModule.service('MyService', function() {\n    var myData = null;\n    return {\n        setData: function (data) {\n            myData = data;\n        },\n        doStuff: function () {\n            return myData.getSomeData();\n        }\n    };\n});\n</code>",
        "<code>doStuff()</code>",
        "<code>then</code>",
        "<code>angular.element(document).ready(function() {\n    $.getJSON(\"data.json\", function (data) {\n       // can't initialize the data here because the service doesn't exist yet\n       angular.bootstrap(document);\n       // too late to initialize here because something may have already\n       // tried to call doStuff() and would have got a null pointer exception\n    });\n});\n</code>",
        "<code>&lt;script type=\"text/javascript\" src=\"data.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>var dataForMyService = { \n// myData here\n};\n</code>",
        "<code>MyService</code>",
        "<code>myModule.service('MyService', function() {\n    var myData = dataForMyService;\n    return {\n        doStuff: function () {\n            return myData.getSomeData();\n        }\n    };\n});\n</code>",
        "<code>$http</code>",
        "<code>$routeProvider.when('/path',{ resolve:{...}</code>",
        "<code>app.service('MyService', function($http) {\n    var myData = null;\n\n    var promise = $http.get('data.json').success(function (data) {\n      myData = data;\n    });\n\n    return {\n      promise:promise,\n      setData: function (data) {\n          myData = data;\n      },\n      doStuff: function () {\n          return myData;//.getSomeData();\n      }\n    };\n});\n</code>",
        "<code>resolve</code>",
        "<code>app.config(function($routeProvider){\n  $routeProvider\n    .when('/',{controller:'MainCtrl',\n    template:'&lt;div&gt;From MyService:&lt;pre&gt;{{data | json}}&lt;/pre&gt;&lt;/div&gt;',\n    resolve:{\n      'MyServiceData':function(MyService){\n        // MyServiceData will also be injectable in your controller, if you don't want this you could create a new promise with the $q service\n        return MyService.promise;\n      }\n    }})\n  }):\n</code>",
        "<code>app.controller('MainCtrl', function($scope,MyService) {\n  console.log('Promise is now resolved: '+MyService.doStuff().data)\n  $scope.data = MyService.doStuff();\n});\n</code>",
        "<code>resolve</code>",
        "<code>$routeProvider</code>",
        "<code>&lt;div ng-controller=\"IndexCtrl\"&gt;&lt;/div&gt;</code>",
        "<code>(function() {\n  var initInjector = angular.injector(['ng']);\n  var $http = initInjector.get('$http');\n  $http.get('/config.json').then(\n    function (response) {\n      angular.module('config', []).constant('CONFIG', response.data);\n\n      angular.element(document).ready(function() {\n          angular.bootstrap(document, ['myApp']);\n        });\n    }\n  );\n})();\n</code>",
        "<code>app.js</code>",
        "<code>$http</code>",
        "<code>index.html</code>",
        "<code>$http</code>",
        "<code>resolve</code>",
        "<code>module.config()</code>",
        "<code>// define the module of your app\nangular.module('MyApp', []);\n\n// define the module of the bootstrap app\nvar bootstrapModule = angular.module('bootstrapModule', []);\n\n// the bootstrapper service loads the config and bootstraps the specified app\nbootstrapModule.factory('bootstrapper', function ($http, $log, $q) {\n  return {\n    bootstrap: function (appName) {\n      var deferred = $q.defer();\n\n      $http.get('/some/url')\n        .success(function (config) {\n          // set all returned values as constants on the app...\n          var myApp = angular.module(appName);\n          angular.forEach(config, function(value, key){\n            myApp.constant(key, value);\n          });\n          // ...and bootstrap the actual app.\n          angular.bootstrap(document, [appName]);\n          deferred.resolve();\n        })\n        .error(function () {\n          $log.warn('Could not initialize application, configuration could not be loaded.');\n          deferred.reject();\n        });\n\n      return deferred.promise;\n    }\n  };\n});\n\n// create a div which is used as the root of the bootstrap app\nvar appContainer = document.createElement('div');\n\n// in run() function you can now use the bootstrapper service and shutdown the bootstrapping app after initialization of your actual app\nbootstrapModule.run(function (bootstrapper) {\n\n  bootstrapper.bootstrap('MyApp').then(function () {\n    // removing the container will destroy the bootstrap app\n    appContainer.remove();\n  });\n\n});\n\n// make sure the DOM is fully loaded before bootstrapping.\nangular.element(document).ready(function() {\n  angular.bootstrap(appContainer, ['bootstrapModule']);\n});\n</code>",
        "<code>$timeout</code>",
        "<code>$http</code>",
        "<code>deferredBootstrapper.bootstrap({\n  element: document.body,\n  module: 'MyApp',\n  resolve: {\n    APP_CONFIG: function ($http) {\n      return $http.get('/api/demo-config');\n    }\n  }\n});\n</code>",
        "<code>ng</code>",
        "<code>angular.element(document).ready(\n    function() {\n        var initInjector = angular.injector(['ng']);\n        var $http = initInjector.get('$http');\n        $http.get('/config.json').then(\n            function (response) {\n               var config = response.data;\n               // Add additional services/constants/variables to your app,\n               // and then finally bootstrap it:\n               angular.bootstrap(document, ['myApp']);\n            }\n        );\n    }\n);\n</code>",
        "<code>module.constant</code>",
        "<code>myApp.constant('myAppConfig', data);\n</code>",
        "<code>myAppConfig</code>",
        "<code>myApp.config(\n    function (myAppConfig, someService) {\n        someService.config(myAppConfig.someServiceConfig);\n    }\n);\n</code>",
        "<code>ng-cloak</code>",
        "<code>&lt;div ng-if=\"initialLoad\"&gt;\n    &lt;!-- initialLoad never gets set, so this div vanishes as soon as Angular is done compiling --&gt;\n    &lt;p&gt;Loading the app.....&lt;/p&gt;\n&lt;/div&gt;\n&lt;div ng-cloak&gt;\n    &lt;!-- ng-cloak attribute is removed once the app is done bootstrapping --&gt;\n    &lt;p&gt;Done loading the app!&lt;/p&gt;\n&lt;/div&gt;\n</code>",
        "<code>resolve</code>",
        "<code>resolve</code>",
        "<code>//First, we have to create the angular module, because all the other JS files are going to load while we're getting data and bootstrapping, and they need to be able to attach to it.\nvar MyApp = angular.module('MyApp', ['dependency1', 'dependency2']);\n\n// Use angular's version of document.ready() just to make extra-sure DOM is fully \n// loaded before you bootstrap. This is probably optional, given that the async \n// data call will probably take significantly longer than DOM load. YMMV.\n// Has the added virtue of keeping your XHR junk out of global scope. \nangular.element(document).ready(function() {\n\n    //first, we create the callback that will fire after the data is down\n    function xhrCallback() {\n        var myData = this.responseText; // the XHR output\n\n        // here's where we attach a constant containing the API data to our app \n        // module. Don't forget to parse JSON, which `$http` normally does for you.\n        MyApp.constant('NavData', JSON.parse(myData));\n\n        // now, perform any other final configuration of your angular module.\n        MyApp.config(['$routeProvider', function ($routeProvider) {\n            $routeProvider\n              .when('/someroute', {configs})\n              .otherwise({redirectTo: '/someroute'});\n          }]);\n\n        // And last, bootstrap the app. Be sure to remove `ng-app` from your index.html.\n        angular.bootstrap(document, ['NYSP']);\n    };\n\n    //here, the basic mechanics of the XHR, which you can customize.\n    var oReq = new XMLHttpRequest();\n    oReq.onload = xhrCallback;\n    oReq.open(\"get\", \"/api/overview\", true); // your specific API URL\n    oReq.send();\n})\n</code>",
        "<code>NavData</code>",
        "<code>angular.module('MyApp')\n    .controller('NavCtrl', ['NavData', function (NavData) {\n        $scope.localObject = NavData; //now it's addressable in your templates \n}]);\n</code>",
        "<code>$http</code>",
        "<code>get</code>",
        "<code>$http</code>",
        "<code>app.config(function($routeProvider){\n    $routeProvider\n     .when('/',{\n          templateUrl: 'home.html',\n          controller: 'homeCtrl',\n          resolve:function($q,MyService) {\n                //create the defer variable and pass it to our service\n                var defer = $q.defer();\n                MyService.fetchData(defer);\n                //this will only return when the promise\n                //has been resolved. MyService is going to\n                //do that for us\n                return defer.promise;\n          }\n      })\n}\n</code>",
        "<code>app.service('MyService',function($http){\n       var MyService = {};\n       //our service accepts a promise object which \n       //it will resolve on behalf of the calling function\n       MyService.fetchData = function(q) {\n             $http({method:'GET',url:'data.php'}).success(function(data){\n                 MyService.data = data;\n                 //when the following is called it will\n                 //release the calling function. in this\n                 //case it's the resolve function in our\n                 //route config\n                 q.resolve();\n             }\n       }\n\n       return MyService;\n});\n</code>",
        "<code>  app.controller('homeCtrl',function($scope,MyService){\n       $scope.servicedata = MyService.data;\n  });\n</code>",
        "<code>resolve</code>",
        "<code>resolve:{ dataFetch: function(){ // call function here } }</code>",
        "<code>&lt;script src=\"path/myData.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>@RequestMapping(value=\"path/myData.js\", method=RequestMethod.GET)\npublic ResponseEntity&lt;String&gt; getMyDataRepositoryJS()\n{\n    // Populate data that I need into a Map\n    Map&lt;String, String&gt; myData = new HashMap&lt;String,String&gt;();\n    ...\n    // Use Jackson to convert it to JSON\n    ObjectMapper mapper = new ObjectMapper();\n    String myDataStr = mapper.writeValueAsString(myData);\n\n    // Then create a String that is my javascript file\n    String myJS = \"'use strict';\" +\n    \"(function() {\" +\n    \"var myDataModule = angular.module('myApp.myData', []);\" +\n    \"myDataModule.service('MyDataRepository', function() {\" +\n        \"var myData = \"+myDataStr+\";\" +\n        \"return {\" +\n            \"getData: function () {\" +\n                \"return myData;\" +\n            \"}\" +\n        \"}\" +\n    \"});\" +\n    \"})();\"\n\n    // Now send it to the client:\n    HttpHeaders responseHeaders = new HttpHeaders();\n    responseHeaders.add(\"Content-Type\", \"text/javascript\");\n    return new ResponseEntity&lt;String&gt;(myJS , responseHeaders, HttpStatus.OK);\n}\n</code>",
        "<code>someOtherModule.service('MyOtherService', function(MyDataRepository) {\n    var myData = MyDataRepository.getData();\n    // Do what you have to do...\n}\n</code>",
        "<code>run</code>",
        "<code>JSONP</code>",
        "<code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n\nfunction MyService {\n  this.getData = function(){\n    return   MyService.data;\n  }\n}\nMyService.setData = function(data) {\n  MyService.data = data;\n}\n\nangular.module('main')\n.service('MyService', MyService)\n\n&lt;/script&gt;\n&lt;script src=\"/some_data.php?jsonp=MyService.setData\"&gt;&lt;/script&gt;\n</code>",
        "<code>&lt;div class=\"frame\" ng-init=\"init()\"&gt;\n    &lt;div class=\"bit-1\"&gt;\n      &lt;div class=\"field p-r\"&gt;\n        &lt;label ng-show=\"regi_step2.address\" class=\"show-hide c-t-1 ng-hide\" style=\"\"&gt;Country&lt;/label&gt;\n        &lt;select class=\"form-control w-100\" ng-model=\"country\" name=\"country\" id=\"country\" ng-options=\"item.name for item in countries\" ng-change=\"stateChanged()\" &gt;\n        &lt;/select&gt;\n        &lt;textarea class=\"form-control w-100\" ng-model=\"regi_step2.address\" placeholder=\"Address\" name=\"address\" id=\"address\" ng-required=\"true\" style=\"\"&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code>",
        "<code>$scope.init=function(){\n    $http({method:'GET',url:'/countries/countries.json'}).success(function(data){\n      alert();\n           $scope.countries = data;\n    });\n  };\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "debugging",
        "console"
      ],
      "creation_date": 1249084231,
      "body_markdown": "Is there any way to turn off all `console.log` statements in my JavaScript code, for testing purposes?",
      "last_edit_date": 1488269771,
      "up_vote_count": 173,
      "link": "https://stackoverflow.com/questions/1215392/how-to-quickly-and-conveniently-disable-all-console-log-statements-in-my-code",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1249084480,
          "answer_id": 1215400,
          "path": "stack.bower.answer",
          "score": 298,
          "up_vote_count": 299,
          "is_accepted": true,
          "last_activity_date": 1505306871,
          "last_edit_date": 1505306871,
          "body_markdown": "Redefine the console.log function in your script. \r\n\r\n    console.log = function() {}\r\n\r\nThat&#39;s it, no more messages to console.\r\n\r\n**EDIT:**\r\n\r\nExpanding on Cide&#39;s idea. A custom logger which you can use to toggle logging on/off from your code.\r\n\r\nFrom my Firefox console:\r\n\r\n&lt;img src=&quot;http://imgur.com/JXLvK.png&quot; /&gt;\r\n\r\n    var logger = function()\r\n    {\r\n        var oldConsoleLog = null;\r\n        var pub = {};\r\n\r\n        pub.enableLogger =  function enableLogger() \r\n                            {\r\n                                if(oldConsoleLog == null)\r\n                                    return;\r\n\r\n                                window[&#39;console&#39;][&#39;log&#39;] = oldConsoleLog;\r\n                            };\r\n                \r\n        pub.disableLogger = function disableLogger()\r\n                            {\r\n                                oldConsoleLog = console.log;\r\n                                window[&#39;console&#39;][&#39;log&#39;] = function() {};\r\n                            };\r\n\r\n        return pub;\r\n    }();\r\n\r\n    $(document).ready(\r\n        function()\r\n        {\r\n            console.log(&#39;hello&#39;);\r\n\r\n            logger.disableLogger();\r\n            console.log(&#39;hi&#39;, &#39;hiya&#39;);\r\n            console.log(&#39;this wont show up in console&#39;);\r\n            \r\n            logger.enableLogger();\r\n            console.log(&#39;This will show up!&#39;);\r\n        }\r\n     );\r\n\r\n\r\n\r\nHow to use the above &#39;logger&#39;? In your ready event, call logger.disableLogger so that console messages are not logged. Add calls to logger.enableLogger and logger.disableLogger inside the method for which you want to log messages to the console. "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1249084506,
          "answer_id": 1215401,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1249085408,
          "last_edit_date": 1249085408,
          "body_markdown": "As far as I can tell from the [documentation](http://getfirebug.com/console.html), Firebug doesn&#39;t supply any variable to toggle debug state. Instead, wrap console.log() in a wrapper that conditionally calls it, i.e.:\r\n\r\n    DEBUG = true; // set to false to disable debugging\r\n    function debug_log() {\r\n        if ( DEBUG ) {\r\n            console.log.apply(this, arguments);\r\n        }\r\n    }\r\n\r\nTo not have to change all the existing calls, you can use this instead:\r\n\r\n    DEBUG = true; // set to false to disable debugging\r\n    old_console_log = console.log;\r\n    console.log = function() {\r\n        if ( DEBUG ) {\r\n            old_console_log.apply(this, arguments);\r\n        }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1249138371,
          "answer_id": 1216743,
          "path": "stack.bower.answer",
          "score": 47,
          "up_vote_count": 47,
          "is_accepted": false,
          "last_activity_date": 1249138371,
          "body_markdown": "The following is more thorough:\r\n\r\n    var DEBUG = false;\r\n    if(!DEBUG){\r\n    \tif(!window.console) window.console = {};\r\n    \tvar methods = [&quot;log&quot;, &quot;debug&quot;, &quot;warn&quot;, &quot;info&quot;];\r\n    \tfor(var i=0;i&lt;methods.length;i++){\r\n    \t\tconsole[methods[i]] = function(){};\r\n    \t}\r\n    }\r\n\r\nThis will zero out the common methods in the console if it exists, and they can be called without error and virtually no performance overhead. In the case of a browser like IE6 with no console, the dummy methods will be created to prevent errors. Of course there are many more functions in Firebug, like trace, profile, time, etc. They can be added to the list if you use them in your code. \r\n\r\nYou can also check if the debugger has those special methods or not (ie, IE) and zero out the ones it does not support:\r\n\r\n    if(window.console &amp;&amp; !console.dir){\r\n    var methods = [&quot;dir&quot;, &quot;dirxml&quot;, &quot;trace&quot;, &quot;profile&quot;]; //etc etc\r\n    \tfor(var i=0;i&lt;methods.length;i++){\r\n    \t\tconsole[methods[i]] = function(){};\r\n    \t}\r\n    }\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1305916838,
          "answer_id": 6076286,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1305916838,
          "body_markdown": "If you&#39;re using IE7, console won&#39;t be defined. So a more IE friendly version would be:\r\n\r\n    if (typeof console == &quot;undefined&quot; || typeof console.log == &quot;undefined&quot;) \r\n    {\r\n       var console = { log: function() {} }; \r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1316701899,
          "answer_id": 7516523,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1316701899,
          "body_markdown": "I know you asked how to disable console.log, but this might be what you&#39;re really after.  This way you don&#39;t have to explicitly enable or disable the console.  It simply prevents those pesky console errors for people who don&#39;t have it open or installed.\r\n\r\n    if(typeof(console) === &#39;undefined&#39;) {\r\n        var console = {};\r\n        console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time = console.timeEnd = console.assert = console.profile = function() {};\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1330701309,
          "answer_id": 9535640,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1330701309,
          "body_markdown": "Warning: Shameless plug!\r\n\r\nYou could also use something like my JsTrace object to have modular tracing with module-level &quot;switching&quot; capability to only turn on what you want to see at the time.\r\n\r\nhttp://jstrace.codeplex.com\r\n\r\n(Also has a NuGet package, for those who care)\r\n\r\nAll levels default to &quot;error&quot;, though you can shut them &quot;off&quot;.\r\nThough, I can&#39;t think of why you would NOT want to see errors\r\n\r\nYou can change them like this:\r\n\r\n    Trace.traceLevel(&#39;ModuleName1&#39;, Trace.Levels.log);\r\n    Trace.traceLevel(&#39;ModuleName2&#39;, Trace.Levels.info);\r\n\r\nFore more docs, check out [the Documentation](http://jstrace.codeplex.com/documentation)\r\n\r\nT"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1338474949,
          "answer_id": 10835722,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1338474949,
          "body_markdown": "You could use javascript AOP (e.g. [jquery-aop][1]) to intercept all calls to console.debug/log (around) and do not proceed with the actual invocation if some global variable is set to false. \r\n\r\nYou could even do an ajax call (now and then) so you can change the log enabled/disabled behavior on the server which can be very interesting to enable debugging when facing an issue in a staging environment or such.\r\n\r\n\r\n  [1]: http://code.google.com/p/jquery-aop/wiki/Reference#Add_an_advice_around_a_method"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1357678923,
          "answer_id": 14223953,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1395252392,
          "last_edit_date": 1395252392,
          "body_markdown": "This a hybrid of answers from *SolutionYogi* and *Chris S.* It maintains the console.log line numbers and file name. [Example jsFiddle][1]. \r\n    \r\n    // Avoid global functions via a self calling anonymous one (uses jQuery)\r\n    (function(MYAPP, $, undefined) {\r\n        // Prevent errors in browsers without console.log\r\n        if (!window.console) window.console = {};\r\n        if (!window.console.log) window.console.log = function(){};\r\n\r\n        //Private var\r\n        var console_log = console.log;\t\r\n        \r\n        //Public methods\r\n        MYAPP.enableLog = function enableLogger() { console.log = console_log; };\t\r\n        MYAPP.disableLog = function disableLogger() { console.log = function() {}; };\r\n\r\n    }(window.MYAPP = window.MYAPP || {}, jQuery));\r\n \r\n\r\n    // Example Usage:\r\n    $(function() {    \r\n        MYAPP.disableLog();    \r\n        console.log(&#39;this should not show&#39;);\r\n    \r\n        MYAPP.enableLog();\r\n        console.log(&#39;This will show&#39;);\r\n    });\r\n\r\n\r\n  [1]: http://jsfiddle.net/ZggW9/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1360853382,
          "answer_id": 14877435,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1360853382,
          "body_markdown": "I found a little more advanced piece of code in this url [JavaScript Tip: Bust and Disable console.log][1]:\r\n\r\n    var DEBUG_MODE = true; // Set this value to false for production\r\n \r\n    if(typeof(console) === &#39;undefined&#39;) {\r\n       console = {}\r\n    }\r\n \r\n    if(!DEBUG_MODE || typeof(console.log) === &#39;undefined&#39;) {\r\n       // FYI: Firebug might get cranky...\r\n       console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time =    console.timeEnd = console.assert = console.profile = function() {};\r\n    }\r\n\r\n\r\n  [1]: http://digitalize.ca/2011/02/javascript-tip-bust-and-disable-console-log/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1378759891,
          "answer_id": 18706815,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1378759891,
          "body_markdown": "I realize this is an old post but it still pops up at the top of Google results, so here is a more elegant non-jQuery solution that works in the latest Chrome, FF, and IE.\r\n\r\n    (function (original) {\r\n        console.enableLogging = function () {\r\n            console.log = original;\r\n        };\r\n        console.disableLogging = function () {\r\n            console.log = function () {};\r\n        };\r\n    })(console.log);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413318889,
          "answer_id": 26369812,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1413318889,
          "body_markdown": "If you use Grunt you can add a task in order to remove/comment the console.log statements. Therefore the console.log are no longer called.\r\n\r\nhttps://www.npmjs.org/package/grunt-remove-logging-calls"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1418838004,
          "answer_id": 27531567,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1418838004,
          "body_markdown": "Just change the flag `DEBUG` to override the console.log function. This should do the trick. \r\n\r\n    var DEBUG = false;\r\n    // ENABLE/DISABLE Console Logs\r\n    if(!DEBUG){\r\n      console.log = function() {}\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1420543664,
          "answer_id": 27797684,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1420543664,
          "body_markdown": "###You should not!\r\n\r\nIt is not a good practice to overwrite built-in functions. There is also no guarantee that you will suppress all output, other libraries you use may revert your changes and there are other functions that may write to the console; `.dir()`, `.warning()`, `.error()`, `.debug()`, `.assert()` etc.\r\n\r\nAs some suggested, you could define a `DEBUG_MODE` variable and log conditionally. Depending on the complexity and nature of your code, it may be a good idea to write your own logger object/function that wraps around the console object and has this capability built-in. That would be the right place to do deal with **instrumentation**.\r\n\r\nThat said, for &#39;testing&#39; purposes you can write **tests** instead of printing to the console. If you are not doing any testing, and those `console.log()` lines were just an aid to write your code, **simply delete them**."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431079350,
          "answer_id": 30121077,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1431079737,
          "last_edit_date": 1431079737,
          "body_markdown": "I am surprised that of all those answers no one combines:\r\n\r\n- No jquery\r\n- Anonymous function to not pollute global namespace\r\n- Handle case where window.console not defined\r\n- Just modify the .log function of the console\r\n\r\nI&#39;d go for this:\r\n\r\n    (function () {\r\n        \r\n        var debug = false\r\n    \r\n        if (debug === false) {\r\n            if ( typeof(window.console) === &#39;undefined&#39;) { window.console = {}; }\r\n            window.console.log = function () {};\r\n        }\r\n    })()"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1465764281,
          "answer_id": 37778914,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1465764281,
          "body_markdown": "You can use [logeek][1], It allows you to control your log messages visibility. Here is how you do that:\r\n    \r\n    &lt;script src=&quot;bower_components/dist/logeek.js&quot;&gt;&lt;/script&gt;\r\n\r\n    logeek.show(&#39;security&#39;);\r\n\r\n    logeek(&#39;some message&#39;).at(&#39;copy&#39;);       //this won&#39;t be logged\r\n    logeek(&#39;other message&#39;).at(&#39;secturity&#39;); //this would be logged\r\n\r\nYou can also ```logeek.show(&#39;nothing&#39;)``` to totally disable every log message.\r\n\r\n  [1]: https://github.com/ImanMh/logeek"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1467624568,
          "answer_id": 38181236,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1467624568,
          "body_markdown": "I developed a library for this usecase: https://github.com/sunnykgupta/jsLogger\r\n\r\n**Features:**\r\n\r\n1. It safely overrides the console.log.\r\n2. Takes care if the console is not available (oh yes, you need to factor that too.)\r\n3. Stores all logs (even if they are suppressed) for later retrieval.\r\n4. Handles major console functions like `log`, `warn`, `error`, `info`.\r\n\r\nIs open for modifications and will be updated whenever new suggestions come up."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1469112222,
          "answer_id": 38507348,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1469112222,
          "body_markdown": "After I searched for this issue aswell and tried it within my cordova app, I just want to warn every developer for windows phone to not overwrite\r\n\r\n        console.log\r\nbecause the app will crash on startup.\r\n\r\nIt won&#39;t crash if you&#39;re developing local if you&#39;re lucky, but submitting in store it will result in crashing the app.\r\n\r\nJust overwrite \r\n\r\n        window.console.log \r\nif you need to.\r\n\r\nThis works in my app:\r\n\r\n       try {\r\n            if (typeof(window.console) != &quot;undefined&quot;) {\r\n                window.console = {};\r\n                window.console.log = function () {\r\n                };\r\n                window.console.info = function () {\r\n                };\r\n                window.console.warn = function () {\r\n                };\r\n                window.console.error = function () {\r\n                };\r\n            }\r\n    \r\n            if (typeof(alert) !== &quot;undefined&quot;) {\r\n                alert = function ()\r\n                {\r\n    \r\n                }\r\n            }\r\n    \r\n        } catch (ex) {\r\n    \r\n        }\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1478974678,
          "answer_id": 40566141,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1478974678,
          "body_markdown": "I wrote this:\r\n\r\n    //Make a copy of the old console.\r\n    var oldConsole = Object.assign({}, console);\r\n\r\n    //This function redefine the caller with the original one. (well, at least i expect this to work in chrome, not tested in others)\r\n    function setEnabled(bool) {\r\n        if (bool) {\r\n            //Rewrites the disable function with the original one.\r\n            console[this.name] = oldConsole[this.name];\r\n            //Make sure the setEnable will be callable from original one.\r\n            console[this.name].setEnabled = setEnabled;\r\n        } else {\r\n            //Rewrites the original.\r\n            var fn = function () {/*function disabled, to enable call console.fn.setEnabled(true)*/};\r\n            //Defines the name, to remember.\r\n            Object.defineProperty(fn, &quot;name&quot;, {value: this.name});\r\n            //replace the original with the empty one.\r\n            console[this.name] = fn;\r\n            //set the enable function\r\n            console[this.name].setEnabled = setEnabled\r\n\r\n        }\r\n    }\r\n\r\n**Unfortunately it doesn&#39;t work on use strict mode.**\r\n\r\nSo using `console.fn.setEnabled = setEnabled` and then `console.fn.setEnabled(false)` where `fn` could be almost any console function.\r\nFor your case would be:\r\n \r\n    console.log.setEnabled = setEnabled;\r\n    console.log.setEnabled(false);\r\n\r\nI wrote this too:\r\n\r\n    var FLAGS = {};\r\n        FLAGS.DEBUG = true;\r\n        FLAGS.INFO = false;\r\n        FLAGS.LOG = false;\r\n        //Adding dir, table, or other would put the setEnabled on the respective console functions.\r\n\r\n    function makeThemSwitchable(opt) {\r\n        var keysArr = Object.keys(opt);\r\n        //its better use this type of for.\r\n        for (var x = 0; x &lt; keysArr.length; x++) {\r\n            var key = keysArr[x];\r\n            var lowerKey = key.toLowerCase();\r\n            //Only if the key exists\r\n            if (console[lowerKey]) {\r\n                //define the function\r\n                console[lowerKey].setEnabled = setEnabled;\r\n                //Make it enabled/disabled by key.\r\n                console[lowerKey].setEnabled(opt[key]);\r\n            }\r\n        }\r\n    }\r\n    //Put the set enabled function on the original console using the defined flags and set them.\r\n    makeThemSwitchable(FLAGS);\r\n\r\nso then you just need to put in the `FLAGS` the default value (before execute the above code), like `FLAGS.LOG = false` and the log function would be disabled by default, and still you could enabled it calling `console.log.setEnabled(true)`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1493158261,
          "answer_id": 43621848,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1493158261,
          "body_markdown": "This should override all methods of window.console. You can put it on the very top of your scripts section, and if you are on a PHP framework you can only print this code when your app environment is production, or if some kind of debug flag is disabled. Then you would have all your logs in your code working on development environments or in debug mode.\r\n\r\n    window.console = (function(originalConsole){\r\n        var api = {};\r\n        var props = Object.keys(originalConsole);\r\n        for (var i=0; i&lt;props.length; i++) {\r\n            api[props[i]] = function(){};\r\n        }\r\n        return api;\r\n    })(window.console);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1494258135,
          "answer_id": 43851859,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1494258135,
          "body_markdown": "Ive been using the following to deal with he problem:-\r\n\r\n    var debug = 1;\r\n    var logger = function(a,b){ if ( debug == 1 ) console.log(a, b || &quot;&quot;);};\r\n\r\nSet debug to 1 to enable debugging. Then use the logger function when outputting debug text. It&#39;s also set up to accept two parameters.\r\n\r\nSo, instead of\r\n\r\n    console.log(&quot;my&quot;,&quot;log&quot;);\r\n\r\nuse\r\n\r\n    logger(&quot;my&quot;,&quot;log&quot;);\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1505281911,
          "answer_id": 46189791,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1505281911,
          "body_markdown": "I have used [winston][1] logger earlier.  \r\n\r\nNowadays I am using below simpler code from experience:\r\n\r\n 1. Set the environment variable (example, on Windows):\r\n\r\n        setx LOG_LEVEL info\r\n\r\nOf course, this could be a variable in your code if you like.\r\n    \r\n 2. Restart command line, or, IDE/ editor like Netbeans\r\n    \r\n 3. Have below like code:\r\n\r\n\r\n\t\tconsole.debug = console.log;   // define debug function\r\n\t\tconsole.silly = console.log;   // define silly function\r\n\r\n\t\tswitch (process.env.LOG_LEVEL) {\r\n\t\t\tcase &#39;debug&#39;:\r\n\t\t\tcase &#39;silly&#39;:\r\n\t\t\t\t// print everything\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase &#39;dir&#39;:\r\n\t\t\tcase &#39;log&#39;:\r\n\t\t\t\tconsole.debug = function () {};\r\n\t\t\t\tconsole.silly = function () {};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase &#39;info&#39;:\r\n\t\t\t\tconsole.debug = function () {};\r\n\t\t\t\tconsole.silly = function () {};\r\n\t\t\t\tconsole.dir = function () {};\r\n\t\t\t\tconsole.log = function () {};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase &#39;trace&#39;:   // similar to error, both may print stack trace/ frames\r\n\t\t\tcase &#39;warn&#39;:    // since warn() function is an alias for error()\r\n\t\t\tcase &#39;error&#39;:\r\n\t\t\t\tconsole.debug = function () {};\r\n\t\t\t\tconsole.silly = function () {};\r\n\t\t\t\tconsole.dir = function () {};\r\n\t\t\t\tconsole.log = function () {};\r\n\t\t\t\tconsole.info = function () {};\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n 4. Now use all console.* as below:\r\n\r\n\t\tconsole.error(&#39; this is a error message &#39;); // will print\r\n\t\tconsole.warn(&#39; this is a warn message &#39;); // will print\r\n\t\tconsole.trace(&#39; this is a trace message &#39;); // will print\r\n\t\tconsole.info(&#39; this is a info message &#39;); // will print, LOG_LEVEL is set to this\r\n\r\n\t\tconsole.log(&#39; this is a log message &#39;); // will NOT print\r\n\t\tconsole.dir(&#39; this is a dir message &#39;); // will NOT print\r\n\t\tconsole.silly(&#39; this is a silly message &#39;); // will NOT print\r\n\t\tconsole.debug(&#39; this is a debug message &#39;); // will NOT print\r\n\r\nNow, based on your LOG_LEVEL settings made in the point 1, some of the above will print, others won&#39;t print\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/winston"
        }
      ],
      "title": "How to quickly and conveniently disable all console.log statements in my code?",
      "view_count": 130205,
      "answer_count": 21,
      "code_snippet": [
        "<code>console.log</code>",
        "<code>PICOLOG_LEVEL</code>",
        "<code>console</code>",
        "<code>console.log = function() {}\n</code>",
        "<code>var logger = function()\n{\n    var oldConsoleLog = null;\n    var pub = {};\n\n    pub.enableLogger =  function enableLogger() \n                        {\n                            if(oldConsoleLog == null)\n                                return;\n\n                            window['console']['log'] = oldConsoleLog;\n                        };\n\n    pub.disableLogger = function disableLogger()\n                        {\n                            oldConsoleLog = console.log;\n                            window['console']['log'] = function() {};\n                        };\n\n    return pub;\n}();\n\n$(document).ready(\n    function()\n    {\n        console.log('hello');\n\n        logger.disableLogger();\n        console.log('hi', 'hiya');\n        console.log('this wont show up in console');\n\n        logger.enableLogger();\n        console.log('This will show up!');\n    }\n );\n</code>",
        "<code>var DEBUG = false;\nif(!DEBUG){\n    if(!window.console) window.console = {};\n    var methods = [\"log\", \"debug\", \"warn\", \"info\"];\n    for(var i=0;i&lt;methods.length;i++){\n        console[methods[i]] = function(){};\n    }\n}\n</code>",
        "<code>if(window.console &amp;&amp; !console.dir){\nvar methods = [\"dir\", \"dirxml\", \"trace\", \"profile\"]; //etc etc\n    for(var i=0;i&lt;methods.length;i++){\n        console[methods[i]] = function(){};\n    }\n}\n</code>",
        "<code>DEBUG = true; // set to false to disable debugging\nfunction debug_log() {\n    if ( DEBUG ) {\n        console.log.apply(this, arguments);\n    }\n}\n</code>",
        "<code>DEBUG = true; // set to false to disable debugging\nold_console_log = console.log;\nconsole.log = function() {\n    if ( DEBUG ) {\n        old_console_log.apply(this, arguments);\n    }\n}\n</code>",
        "<code>if(typeof(console) === 'undefined') {\n    var console = {};\n    console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time = console.timeEnd = console.assert = console.profile = function() {};\n}\n</code>",
        "<code>(function (original) {\n    console.enableLogging = function () {\n        console.log = original;\n    };\n    console.disableLogging = function () {\n        console.log = function () {};\n    };\n})(console.log);\n</code>",
        "<code>if (typeof console == \"undefined\" || typeof console.log == \"undefined\") \n{\n   var console = { log: function() {} }; \n}\n</code>",
        "<code>.dir()</code>",
        "<code>.warning()</code>",
        "<code>.error()</code>",
        "<code>.debug()</code>",
        "<code>.assert()</code>",
        "<code>DEBUG_MODE</code>",
        "<code>console.log()</code>",
        "<code>\"other libraries you use may revert your changes\"</code>",
        "<code>console.log</code>",
        "<code>console.log</code>",
        "<code>\"it may be a good idea to write your own logger object/function that wraps around the console object\"</code>",
        "<code>console.log('Look ma, it reaches this point');</code>",
        "<code>debugger;</code>",
        "<code>\"the code is coupled to that infrastructure\"</code>",
        "<code>\"the later shouldn't be browser-aware\"</code>",
        "<code>DEBUG</code>",
        "<code>var DEBUG = false;\n// ENABLE/DISABLE Console Logs\nif(!DEBUG){\n  console.log = function() {}\n}\n</code>",
        "<code>function myLog(msg) { if (debug) { console.log(msg); } }</code>",
        "<code>(function () {\n\n    var debug = false\n\n    if (debug === false) {\n        if ( typeof(window.console) === 'undefined') { window.console = {}; }\n        window.console.log = function () {};\n    }\n})()\n</code>",
        "<code>    console.log\n</code>",
        "<code>    window.console.log \n</code>",
        "<code>   try {\n        if (typeof(window.console) != \"undefined\") {\n            window.console = {};\n            window.console.log = function () {\n            };\n            window.console.info = function () {\n            };\n            window.console.warn = function () {\n            };\n            window.console.error = function () {\n            };\n        }\n\n        if (typeof(alert) !== \"undefined\") {\n            alert = function ()\n            {\n\n            }\n        }\n\n    } catch (ex) {\n\n    }\n</code>",
        "<code>// Avoid global functions via a self calling anonymous one (uses jQuery)\n(function(MYAPP, $, undefined) {\n    // Prevent errors in browsers without console.log\n    if (!window.console) window.console = {};\n    if (!window.console.log) window.console.log = function(){};\n\n    //Private var\n    var console_log = console.log;  \n\n    //Public methods\n    MYAPP.enableLog = function enableLogger() { console.log = console_log; };   \n    MYAPP.disableLog = function disableLogger() { console.log = function() {}; };\n\n}(window.MYAPP = window.MYAPP || {}, jQuery));\n\n\n// Example Usage:\n$(function() {    \n    MYAPP.disableLog();    \n    console.log('this should not show');\n\n    MYAPP.enableLog();\n    console.log('This will show');\n});\n</code>",
        "<code>Trace.traceLevel('ModuleName1', Trace.Levels.log);\nTrace.traceLevel('ModuleName2', Trace.Levels.info);\n</code>",
        "<code>var DEBUG_MODE = true; // Set this value to false for production\n\nif(typeof(console) === 'undefined') {\n   console = {}\n}\n\nif(!DEBUG_MODE || typeof(console.log) === 'undefined') {\n   // FYI: Firebug might get cranky...\n   console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time =    console.timeEnd = console.assert = console.profile = function() {};\n}\n</code>",
        "<code>var debug = 1;\nvar logger = function(a,b){ if ( debug == 1 ) console.log(a, b || \"\");};\n</code>",
        "<code>console.log(\"my\",\"log\");\n</code>",
        "<code>logger(\"my\",\"log\");\n</code>",
        "<code>&lt;script src=\"bower_components/dist/logeek.js\"&gt;&lt;/script&gt;\n\nlogeek.show('security');\n\nlogeek('some message').at('copy');       //this won't be logged\nlogeek('other message').at('secturity'); //this would be logged\n</code>",
        "<code>logeek.show('nothing')</code>",
        "<code>log</code>",
        "<code>warn</code>",
        "<code>error</code>",
        "<code>info</code>",
        "<code>//Make a copy of the old console.\nvar oldConsole = Object.assign({}, console);\n\n//This function redefine the caller with the original one. (well, at least i expect this to work in chrome, not tested in others)\nfunction setEnabled(bool) {\n    if (bool) {\n        //Rewrites the disable function with the original one.\n        console[this.name] = oldConsole[this.name];\n        //Make sure the setEnable will be callable from original one.\n        console[this.name].setEnabled = setEnabled;\n    } else {\n        //Rewrites the original.\n        var fn = function () {/*function disabled, to enable call console.fn.setEnabled(true)*/};\n        //Defines the name, to remember.\n        Object.defineProperty(fn, \"name\", {value: this.name});\n        //replace the original with the empty one.\n        console[this.name] = fn;\n        //set the enable function\n        console[this.name].setEnabled = setEnabled\n\n    }\n}\n</code>",
        "<code>console.fn.setEnabled = setEnabled</code>",
        "<code>console.fn.setEnabled(false)</code>",
        "<code>fn</code>",
        "<code>console.log.setEnabled = setEnabled;\nconsole.log.setEnabled(false);\n</code>",
        "<code>var FLAGS = {};\n    FLAGS.DEBUG = true;\n    FLAGS.INFO = false;\n    FLAGS.LOG = false;\n    //Adding dir, table, or other would put the setEnabled on the respective console functions.\n\nfunction makeThemSwitchable(opt) {\n    var keysArr = Object.keys(opt);\n    //its better use this type of for.\n    for (var x = 0; x &lt; keysArr.length; x++) {\n        var key = keysArr[x];\n        var lowerKey = key.toLowerCase();\n        //Only if the key exists\n        if (console[lowerKey]) {\n            //define the function\n            console[lowerKey].setEnabled = setEnabled;\n            //Make it enabled/disabled by key.\n            console[lowerKey].setEnabled(opt[key]);\n        }\n    }\n}\n//Put the set enabled function on the original console using the defined flags and set them.\nmakeThemSwitchable(FLAGS);\n</code>",
        "<code>FLAGS</code>",
        "<code>FLAGS.LOG = false</code>",
        "<code>console.log.setEnabled(true)</code>",
        "<code>console.log.setEnabled(true)</code>",
        "<code>var debug = false; debug &amp;&amp; console.log(1/3)</code>",
        "<code>1/3</code>",
        "<code>window.console = (function(originalConsole){\n    var api = {};\n    var props = Object.keys(originalConsole);\n    for (var i=0; i&lt;props.length; i++) {\n        api[props[i]] = function(){};\n    }\n    return api;\n})(window.console);\n</code>",
        "<code>setx LOG_LEVEL info\n</code>",
        "<code>console.debug = console.log;   // define debug function\nconsole.silly = console.log;   // define silly function\n\nswitch (process.env.LOG_LEVEL) {\n    case 'debug':\n    case 'silly':\n        // print everything\n        break;\n\n    case 'dir':\n    case 'log':\n        console.debug = function () {};\n        console.silly = function () {};\n        break;\n\n    case 'info':\n        console.debug = function () {};\n        console.silly = function () {};\n        console.dir = function () {};\n        console.log = function () {};\n        break;\n\n    case 'trace':   // similar to error, both may print stack trace/ frames\n    case 'warn':    // since warn() function is an alias for error()\n    case 'error':\n        console.debug = function () {};\n        console.silly = function () {};\n        console.dir = function () {};\n        console.log = function () {};\n        console.info = function () {};\n        break;\n}\n</code>",
        "<code>console.error(' this is a error message '); // will print\nconsole.warn(' this is a warn message '); // will print\nconsole.trace(' this is a trace message '); // will print\nconsole.info(' this is a info message '); // will print, LOG_LEVEL is set to this\n\nconsole.log(' this is a log message '); // will NOT print\nconsole.dir(' this is a dir message '); // will NOT print\nconsole.silly(' this is a silly message '); // will NOT print\nconsole.debug(' this is a debug message '); // will NOT print\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs",
        "html5",
        "angular-routing"
      ],
      "creation_date": 1368633622,
      "body_markdown": "I want to enable HTML5 mode for my app. I have put the following code for the configuration, as shown [here](http://docs.angularjs.org/guide/dev_guide.services.$location):\r\n\r\n    return app.config([&#39;$routeProvider&#39;,&#39;$locationProvider&#39;, function($routeProvider,$locationProvider) {\r\n\r\n\t\t$locationProvider.html5Mode(true);\r\n\t\t$locationProvider.hashPrefix = &#39;!&#39;;\r\n\r\n\t\t$routeProvider.when(&#39;/&#39;, {\r\n\t\t\ttemplateUrl: &#39;/views/index.html&#39;,\r\n\t\t\tcontroller: &#39;indexCtrl&#39;\r\n\t\t});\r\n\t\t$routeProvider.when(&#39;/about&#39;,{\r\n\t\t\ttemplateUrl: &#39;/views/about.html&#39;,\r\n\t\t\tcontroller: &#39;AboutCtrl&#39;\r\n\t\t});\r\n\r\nAs you can see, I used the `$locationProvider.html5mode` and I changed all my links at the ng-ref to exclude the `/#/`.\r\n\r\nThe Problem\r\n-------------------\r\n\r\nAt the moment, I can go to `localhost:9000/` and see the index page and navigate to the other pages like `localhost:9000/about`. \r\n\r\nHowever, the problem occurs when I refresh the `localhost:9000/about` page. I get the following output: `Cannot GET /about`\r\n\r\nIf I look at the network calls:\r\n\r\n    Request URL:localhost:9000/about\r\n    Request Method:GET\r\n\r\nWhile if I first go to `localhost:9000/` and then click on a button that navigates to `/about` I get:\r\n\r\n    Request URL:http://localhost:9000/views/about.html\r\n\r\nWhich renders the page perfectly. \r\n\r\n**How can I enable angular to get the correct page when I refresh?**\r\n",
      "last_edit_date": 1514214544,
      "up_vote_count": 181,
      "link": "https://stackoverflow.com/questions/16569841/reloading-the-page-gives-wrong-get-request-with-angularjs-html5-mode",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1368635739,
          "answer_id": 16570499,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1368635739,
          "body_markdown": "I believe your issue is with regards to the server.  The angular documentation with regards to HTML5 mode (at the link in your question) states:\r\n\r\nServer side\r\nUsing this mode requires URL rewriting on server side, basically you have to rewrite all your links to entry point of your application (e.g. index.html)\r\n\r\nI believe you&#39;ll need to setup a url rewrite from /about to /."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1368635863,
          "answer_id": 16570533,
          "path": "stack.gulp.answer",
          "score": 95,
          "up_vote_count": 96,
          "is_accepted": true,
          "last_activity_date": 1457367402,
          "last_edit_date": 1457367402,
          "body_markdown": "From the [angular docs](https://docs.angularjs.org/guide/$location)\r\n\r\n&gt; **Server side**  \r\n&gt; Using this mode requires URL rewriting on server side, basically you have to rewrite all your links to entry point of your application (e.g. index.html)\r\n\r\nThe reason for this is that when you first visit the page (`/about`), e.g. after a refresh, the browser has no way of knowing that this isn&#39;t a real URL, so it goes ahead and loads it. However if you have loaded up the root page first, and all the javascript code, then when you navigate to `/about ` Angular can get in there before the browser tries to hit the server and handle it accordingly"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1371546526,
          "answer_id": 17164877,
          "path": "stack.gulp.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1371546526,
          "body_markdown": "I wrote a simple connect middleware for simulating url-rewriting on grunt projects. https://gist.github.com/muratcorlu/5803655\r\n\r\nYou can use like that:\r\n\r\n    module.exports = function(grunt) {\r\n      var urlRewrite = require(&#39;grunt-connect-rewrite&#39;);\r\n    \r\n      // Project configuration.\r\n      grunt.initConfig({\r\n        connect: {\r\n          server: {\r\n            options: {\r\n              port: 9001,\r\n              base: &#39;build&#39;,\r\n              middleware: function(connect, options) {\r\n                // Return array of whatever middlewares you want\r\n                return [\r\n                  // redirect all urls to index.html in build folder\r\n                  urlRewrite(&#39;build&#39;, &#39;index.html&#39;),\r\n    \r\n                  // Serve static files.\r\n                  connect.static(options.base),\r\n    \r\n                  // Make empty directories browsable.\r\n                  connect.directory(options.base)\r\n                ];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1376411731,
          "answer_id": 18214539,
          "path": "stack.gulp.answer",
          "score": 32,
          "up_vote_count": 32,
          "is_accepted": false,
          "last_activity_date": 1376439666,
          "last_edit_date": 1376439666,
          "body_markdown": "I had a similar problem and I solved it by: \r\n\r\n - Using `&lt;base href=&quot;/index.html&quot;&gt;` in the index page\r\n\r\n - Using a catch all route middleware in my node/Express server as follows (put it after the router):\r\n\r\n&lt;!-- language: lang-js--&gt;\r\n\r\n    app.use(function(req, res) {\r\n        res.sendfile(__dirname + &#39;/Public/index.html&#39;);\r\n    });\r\n\r\n\r\nI think that should get you up and running.\r\n\r\nIf you use an apache server, you might want to mod_rewrite your links. It is not difficult to do. Just a few changes in the config files.\r\n\r\nAll that is assuming you have html5mode enabled on angularjs.\r\nNow. note that in angular 1.2, declaring a base url is not recommended anymore actually."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1389695275,
          "answer_id": 21111163,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1389695275,
          "body_markdown": "I have found even better Grunt plugin, that works if you have your index.html and Gruntfile.js in the same directory;\r\n\r\n    https://npmjs.org/package/grunt-connect-pushstate\r\n\r\nAfter that in your Gruntfile:\r\n\r\n     var pushState = require(&#39;grunt-connect-pushstate/lib/utils&#39;).pushState;\r\n\r\n\r\n        connect: {\r\n        server: {\r\n          options: {\r\n            port: 1337,\r\n            base: &#39;&#39;,\r\n            logger: &#39;dev&#39;,\r\n            hostname: &#39;*&#39;,\r\n            open: true,\r\n            middleware: function (connect, options) {\r\n              return [\r\n                // Rewrite requests to root so they may be handled by router\r\n                pushState(),\r\n                // Serve static files\r\n                connect.static(options.base)\r\n              ];\r\n            }\r\n          },\r\n        }\r\n    },"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1391032822,
          "answer_id": 21443576,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1391032822,
          "body_markdown": "We had a server redirect in Express:\r\n\r\n    app.get(&#39;*&#39;, function(req, res){\r\n        res.render(&#39;index&#39;);\r\n    });\r\n    \r\nand we were still getting page-refresh issues, even after we added the `&lt;base href=&quot;/&quot; /&gt;`.\r\n\r\nSolution: make sure you&#39;re using real links in you page to navigate; don&#39;t type in the route in the URL or you&#39;ll get a page-refresh. (silly mistake, I know)\r\n\r\n:-P"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394656406,
          "answer_id": 22363166,
          "path": "stack.gulp.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1394656406,
          "body_markdown": "You need to configure your server to rewrite everything to index.html to load the app:\r\n\r\nhttps://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#wiki-how-to-configure-your-server-to-work-with-html5mode"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1396283859,
          "answer_id": 22767248,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1396283859,
          "body_markdown": "I&#39;ve had the same issue before, on refreshing the pages, the browser would send its adress bar&#39;s value to the server, which would obviously fail (ever since it`s a rewritten adress.)\r\n\r\nYou should complete your URL reqwritting logic on the server side also. See the link below, it&#39;s the best example I found on how to do this and it worked fine for me : &lt;br/&gt;&lt;br/&gt;\r\nhttps://github.com/bdunklau/LittleBlueBird/wiki/URL-Rewriting-and-HTML5-in-AngularJS\r\n\r\nBasically you just have to refirect all request to your main page contents container (index.html in most cases). "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1404266138,
          "answer_id": 24521746,
          "path": "stack.gulp.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1404266138,
          "body_markdown": "As others have mentioned, you need to rewrite routes on the server and set `&lt;base href=&quot;/&quot;/&gt;`.\r\n\r\nFor `gulp-connect`:\r\n\r\n`npm install connect-pushstate`\r\n\r\n    var gulp = require(&#39;gulp&#39;),\r\n      connect = require(&#39;gulp-connect&#39;),\r\n      pushState = require(&#39;connect-pushstate/lib/pushstate&#39;).pushState;\r\n    ...\r\n    connect.server({\r\n      ...\r\n      middleware: function (connect, options) {\r\n        return [\r\n          pushState()\r\n        ];\r\n      }\r\n      ...\r\n    })\r\n    ...."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1411316761,
          "answer_id": 25961313,
          "path": "stack.gulp.answer",
          "score": 58,
          "up_vote_count": 58,
          "is_accepted": false,
          "last_activity_date": 1411316761,
          "last_edit_date": 1495540968,
          "body_markdown": "There are few things to set up so your link in the browser will look like `http://yourdomain.com/path` and these are your angular config + server side\r\n\r\n**1) AngularJS**\r\n\r\n    $routeProvider\r\n      .when(&#39;/path&#39;, {\r\n        templateUrl: &#39;path.html&#39;,\r\n      });\r\n    $locationProvider\r\n      .html5Mode(true);\r\n\r\n**2) server side,** just put `.htaccess` inside your root folder and paste this\r\n\r\n    RewriteEngine On \r\n    Options FollowSymLinks\r\n    \r\n    RewriteBase /\r\n    \r\n    RewriteCond %{REQUEST_FILENAME} !-f\r\n    RewriteCond %{REQUEST_FILENAME} !-d\r\n    RewriteRule ^(.*)$ /#/$1 [L]\r\n\r\nMore interesting stuff to read about html5 mode in angularjs and the configuration required per different environment https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-configure-your-server-to-work-with-html5mode\r\nAlso this question might help you https://stackoverflow.com/questions/16677528/location-switching-between-html5-and-hashbang-mode-link-rewriting\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1417709523,
          "answer_id": 27298679,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1417709523,
          "body_markdown": "If you are working locally, you can use: connect-modrewrite\r\n\r\nSee this tutorial:\r\nhttp://ericduran.io/2013/05/31/angular-html5Mode-with-yeoman/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1424335818,
          "answer_id": 28601954,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1424335818,
          "body_markdown": "I solved to \r\n\r\n    test: {\r\n            options: {\r\n              port: 9000,\r\n              base: [\r\n                &#39;.tmp&#39;,\r\n                &#39;test&#39;,\r\n                &#39;&lt;%= yeoman.app %&gt;&#39;\r\n              ],\r\n             middleware: function (connect) {\r\n                      return [\r\n                          modRewrite([&#39;^[^\\\\.]*$ /index.html [L]&#39;]),\r\n                          connect.static(&#39;.tmp&#39;),\r\n                          connect().use(\r\n                              &#39;/bower_components&#39;,\r\n                              connect.static(&#39;./bower_components&#39;)\r\n                          ),\r\n                          connect.static(&#39;app&#39;)\r\n                      ];\r\n                  }\r\n            }\r\n          },"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1424526499,
          "answer_id": 28646534,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1424526499,
          "body_markdown": "    I solved same problem using modRewrite.  \r\n    AngularJS is reload page when after # changes.  \r\n    But HTML5 mode remove # and invalid the reload.  \r\n    So we should reload manually.\r\n    # install connect-modrewrite\r\n        $ sudo npm install connect-modrewrite --save\r\n    \r\n    # gulp/build.js\r\n        &#39;use strict&#39;;\r\n        var gulp = require(&#39;gulp&#39;);\r\n        var paths = gulp.paths;\r\n        var util = require(&#39;util&#39;);\r\n        var browserSync = require(&#39;browser-sync&#39;);\r\n        var modRewrite  = require(&#39;connect-modrewrite&#39;);\r\n        function browserSyncInit(baseDir, files, browser) {\r\n            browser = browser === undefined ? &#39;default&#39; : browser;\r\n            var routes = null;\r\n            if(baseDir === paths.src || (util.isArray(baseDir) &amp;&amp; baseDir.indexOf(paths.src) !== -1)) {\r\n                routes = {\r\n                    &#39;/bower_components&#39;: &#39;bower_components&#39;\r\n                };\r\n            }\r\n        \r\n            browserSync.instance = browserSync.init(files, {\r\n                startPath: &#39;/&#39;,\r\n                server: {\r\n                baseDir: baseDir,\r\n                middleware: [\r\n                    modRewrite([\r\n                        &#39;!\\\\.\\\\w+$ /index.html [L]&#39;\r\n                    ])\r\n                ],\r\n                routes: routes\r\n                },\r\n                browser: browser\r\n            });\r\n        }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431693139,
          "answer_id": 30259643,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1431693139,
          "body_markdown": "I am using apache (xampp) on my dev environment and apache on the production,\r\nadd:\r\n\r\n    errorDocument 404 /index.html\r\nto the .htaccess solve for me this issue."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1433773069,
          "answer_id": 30711626,
          "path": "stack.gulp.answer",
          "score": 26,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1433773069,
          "body_markdown": "Solution for BrowserSync and Gulp.\r\n\r\nFrom https://github.com/BrowserSync/browser-sync/issues/204#issuecomment-102623643\r\n\r\nFirst install `connect-history-api-fallback`:\r\n\r\n    npm --save-dev install connect-history-api-fallback\r\n\r\nThen add it to your gulpfile.js:\r\n\r\n    var historyApiFallback = require(&#39;connect-history-api-fallback&#39;);\r\n\r\n    gulp.task(&#39;serve&#39;, function() {\r\n      browserSync.init({\r\n        server: {\r\n          baseDir: &quot;app&quot;,\r\n          middleware: [ historyApiFallback() ]\r\n        }\r\n      });\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1442963081,
          "answer_id": 32728430,
          "path": "stack.gulp.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1462371203,
          "last_edit_date": 1462371203,
          "body_markdown": "If you are in .NET stack with MVC with AngularJS, this is what you have to do to remove the &#39;#&#39;  from url: \r\n\r\n 1. Set up your base href in your _Layout page: `&lt;head&gt; &lt;base href=&quot;/&quot;&gt; &lt;/head&gt;`\r\n\r\n 2. Then, add following in your angular app config : `$locationProvider.html5Mode(true)`\r\n\r\n 3. Above will remove &#39;#&#39; from url but page refresh won&#39;t work e.g. if you are in &quot;yoursite.com/about&quot; page refresh will give you a 404. This is because MVC does not know about angular routing and by MVC pattern it will look for a MVC page for &#39;about&#39; which does not exists in MVC routing path. Workaround for this is to send all MVC page request to a single MVC view and you can do that by adding a route that catches all url\r\n\r\n\r\n----------\r\n\r\n\r\n    routes.MapRoute(\r\n    \t\tname: &quot;App&quot;,\r\n    \t\turl: &quot;{*url}&quot;,\r\n    \t\tdefaults: new { controller = &quot;Home&quot;, action = &quot;Index&quot; }\r\n    \t);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1446041175,
          "answer_id": 33393230,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1446041175,
          "body_markdown": "I had the same problem with **java** + angular app generated with **JHipster**. \r\nI solved it with Filter and list of all angular pages in properties:  \r\n  \r\n**application.yml:**\r\n\r\n    angular-pages:\r\n      - login\r\n      - settings\r\n    ...\r\n\r\n**AngularPageReloadFilter.java**\r\n \r\n    public class AngularPageReloadFilter implements Filter {\r\n    \t@Override\r\n    \tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\r\n    \t\trequest.getRequestDispatcher(&quot;index.html&quot;).forward(request, response);\r\n    \t}\r\n    }\r\n\r\n**WebConfigurer.java**\r\n\r\n    private void initAngularNonRootRedirectFilter(ServletContext servletContext,\r\n                                                  EnumSet&lt;DispatcherType&gt; disps) {\r\n        log.debug(&quot;Registering angular page reload Filter&quot;);\r\n        FilterRegistration.Dynamic angularRedirectFilter =\r\n                servletContext.addFilter(&quot;angularPageReloadFilter&quot;,\r\n                        new AngularPageReloadFilter());\r\n        int index = 0;\r\n        while (env.getProperty(&quot;angular-pages[&quot; + index + &quot;]&quot;) != null) {\r\n            angularRedirectFilter.addMappingForUrlPatterns(disps, true, &quot;/&quot; + env.getProperty(&quot;angular-pages[&quot; + index + &quot;]&quot;));\r\n            index++;\r\n        }\r\n        angularRedirectFilter.setAsyncSupported(true);\r\n    }\r\n\r\nHope, it will be helpful for somebody."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453689501,
          "answer_id": 34984284,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1453689501,
          "body_markdown": "**Gulp + browserSync:**\r\n\r\nInstall connect-history-api-fallback via npm, later config your serve gulp task\r\n\r\n    var historyApiFallback = require(&#39;connect-history-api-fallback&#39;);\r\n    \r\n    gulp.task(&#39;serve&#39;, function() {\r\n      browserSync.init({\r\n        proxy: {\r\n                target: &#39;localhost:&#39; + port,\r\n                middleware: [ historyApiFallback() ]\r\n            }\r\n      });\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1455934364,
          "answer_id": 35518312,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1456068154,
          "last_edit_date": 1456068154,
          "body_markdown": "I&#39;m answering this question from the larger question:\r\n&gt;When I add $locationProvider.html5Mode(true), my site will not allow pasting of urls. How do I configure my server to work when html5Mode is true?\r\n\r\nWhen you have html5Mode enabled, the # character will no longer be used in your urls. The # symbol is useful because it requires no server side configuration. Without #, the url looks much nicer, but it also requires server side rewrites. Here are some examples:\r\n\r\nFor Express Rewrites with AngularJS, you can solve this with the following updates:\r\n\r\n    app.get(&#39;/*&#39;, function(req, res) {\r\n\tres.sendFile(path.join(__dirname + &#39;/public/app/views/index.html&#39;));\r\n    });\r\n\r\nand \r\n\r\n    &lt;!-- FOR ANGULAR ROUTING --&gt;\r\n    &lt;base href=&quot;/&quot;&gt;\r\nand\r\n\r\n    app.use(&#39;/&#39;,express.static(__dirname + &#39;/public&#39;));\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1469497949,
          "answer_id": 38579920,
          "path": "stack.gulp.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1469497949,
          "body_markdown": "**IIS URL Rewrite Rule to prevent 404 error after page refresh in html5mode**\r\n\r\nFor angular running under IIS on Windows\r\n\r\n\t&lt;rewrite&gt;\r\n\t  &lt;rules&gt;\r\n\t\t&lt;rule name=&quot;AngularJS&quot; stopProcessing=&quot;true&quot;&gt;\r\n\t\t  &lt;match url=&quot;.*&quot; /&gt;\r\n\t\t  &lt;conditions logicalGrouping=&quot;MatchAll&quot;&gt;\r\n\t\t\t&lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsFile&quot; negate=&quot;true&quot; /&gt;\r\n\t\t\t&lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsDirectory&quot; negate=&quot;true&quot; /&gt;\r\n\t\t  &lt;/conditions&gt;\r\n\t\t  &lt;action type=&quot;Rewrite&quot; url=&quot;/&quot; /&gt;\r\n\t\t&lt;/rule&gt;\r\n\t  &lt;/rules&gt;\r\n\t&lt;/rewrite&gt;\r\n\r\n**NodeJS / ExpressJS Routes to prevent 404 error after page refresh in html5mode**\r\n\r\nFor angular running under Node/Express\r\n\r\n\tvar express = require(&#39;express&#39;);\r\n\tvar path = require(&#39;path&#39;);\r\n\tvar router = express.Router();\r\n\r\n\t// serve angular front end files from root path\r\n\trouter.use(&#39;/&#39;, express.static(&#39;app&#39;, { redirect: false }));\r\n\r\n\t// rewrite virtual urls to angular app to enable refreshing of internal pages\r\n\trouter.get(&#39;*&#39;, function (req, res, next) {\r\n\t\tres.sendFile(path.resolve(&#39;app/index.html&#39;));\r\n\t});\r\n\r\n\tmodule.exports = router;\r\n\r\nMore info at: [AngularJS - Enable HTML5 Mode Page Refresh Without 404 Errors in NodeJS and IIS][1]\r\n\r\n\r\n  [1]: http://jasonwatmore.com/post/2016/07/26/AngularJS-enable-html5mode-page-refresh-without-404-error-in-NodeJS-and-IIS.aspx"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1471859237,
          "answer_id": 39076277,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1471960899,
          "last_edit_date": 1471960899,
          "body_markdown": "For Grunt and Browsersync use connect-modrewrite[ here][1]\r\n\r\n\r\n    var modRewrite = require(&#39;connect-modrewrite&#39;);    \r\n\r\n\r\n    browserSync: {\r\n                dev: {\r\n                    bsFiles: {\r\n    \r\n                        src: [\r\n                            &#39;app/assets/css/*.css&#39;,\r\n                            &#39;app/*.js&#39;,\r\n                            &#39;app/controllers/*.js&#39;,\r\n                            &#39;**/*.php&#39;,\r\n                            &#39;*.html&#39;,\r\n                            &#39;app/jade/includes/*.jade&#39;,\r\n                            &#39;app/views/*.html&#39;,\r\n                   ],\r\n                },\r\n            options: {\r\n                watchTask: true,\r\n                debugInfo: true,\r\n                logConnections: true,\r\n                server: {\r\n                    baseDir :&#39;./&#39;,\r\n                    middleware: [\r\n                           modRewrite([&#39;!\\.html|\\.js|\\.jpg|\\.mp4|\\.mp3|\\.gif|\\.svg\\|.css|\\.png$ /index.html [L]&#39;])\r\n                    ]\r\n                },\r\n    \r\n                ghostMode: {\r\n                    scroll: true,\r\n                    links: true,\r\n                    forms: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/connect-modrewrite"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1472036203,
          "answer_id": 39121394,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1472709821,
          "last_edit_date": 1472709821,
          "body_markdown": "Your server side code is JAVA then Follow this below steps\r\n\r\nstep 1 : Download urlrewritefilter JAR [Click Here][1]\r\n  [1]: https://mvnrepository.com/artifact/org.tuckey/urlrewritefilter/4.0.3\r\n   and save to build path  WEB-INF/lib\r\n\r\nstep 2 : Enable HTML5 Mode $locationProvider.html5Mode(true);\r\n\r\nstep 3 : set base URL  `&lt;base href=&quot;/example.com/&quot;/&gt;`\r\n\r\nstep 4 : copy and paste to your WEB.XML     \r\n \r\n\r\n     &lt;filter&gt;\r\n         &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\r\n     &lt;filter-class&gt;org.tuckey.web.filters.urlrewrite.UrlRewriteFilter&lt;/filter-class&gt;\r\n    &lt;/filter&gt;\r\n\r\n    &lt;filter-mapping&gt;\r\n        &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\r\n        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\r\n        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;\r\n        &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;\r\n    &lt;/filter-mapping&gt;\r\n\r\n \r\n\r\nstep 5 : create file in WEN-INF/urlrewrite.xml\r\n \r\n\r\n     &lt;urlrewrite default-match-type=&quot;wildcard&quot;&gt;\r\n    \t\r\n    \r\n        &lt;rule&gt;\r\n        \t\t&lt;from&gt;/&lt;/from&gt;\r\n        \t\t&lt;to&gt;/index.html&lt;/to&gt;\r\n        \t&lt;/rule&gt;\r\n    \r\n        &lt;!--Write every state dependent on your project url--&gt;\r\n        &lt;rule&gt;\r\n        \t\t&lt;from&gt;/example&lt;/from&gt;\r\n        \t\t&lt;to&gt;/index.html&lt;/to&gt;\r\n        \t&lt;/rule&gt;\r\n        &lt;/urlrewrite&gt;\r\n          \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1486927089,
          "answer_id": 42192063,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1486927089,
          "body_markdown": "Finally I got a way to to solve this issue by server side as it&#39;s more like an issue with AngularJs itself I am using 1.5 Angularjs and I got same issue on reload the page.\r\nBut after adding below code in my `server.js` file it is save my day ***but it&#39;s not a proper solution or not a good way .***\r\n\r\n    app.use(function(req, res, next){\r\n      var d = res.status(404);\r\n         if(d){\r\n         \tres.sendfile(&#39;index.html&#39;);\r\n         }\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1488901386,
          "answer_id": 42652450,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1488901386,
          "body_markdown": "I have this simple solution I have been using and its works.\r\n\r\n**In App/Exceptions/Handler.php**\r\n\r\nAdd this at top:\r\n\r\n    use Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\r\n\r\n\r\n**Then inside the render method**\r\n\r\n    public function render($request, Exception $exception)\r\n    {\r\n        .......\r\n\r\n           if ($exception instanceof NotFoundHttpException){\r\n\r\n            $segment = $request-&gt;segments();\r\n\r\n            //eg. http://site.dev/member/profile\r\n            //module =&gt; member\r\n            // view =&gt; member.index\r\n            //where member.index is the root of your angular app could be anything :)\r\n            if(head($segment) != &#39;api&#39; &amp;&amp; $module = $segment[0]){\r\n                return response(view(&quot;$module.index&quot;), 404);\r\n            }\r\n\r\n            return response()-&gt;fail(&#39;not_found&#39;, $exception-&gt;getCode());\r\n\r\n        }\r\n        .......\r\n\r\n         return parent::render($request, $exception);\r\n    }\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1501349474,
          "answer_id": 45392112,
          "path": "stack.gulp.answer",
          "score": -2,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1519754013,
          "last_edit_date": 1519754013,
          "body_markdown": "Just write out a rule in web.config\r\n\r\n    &lt;system.webServer&gt;\r\n      &lt;rewrite&gt;\r\n        &lt;rules&gt;\r\n        &lt;rule name=&quot;AngularJS Routes&quot; stopProcessing=&quot;true&quot;&gt;\r\n          &lt;match url=&quot;.*&quot; /&gt;\r\n          &lt;conditions logicalGrouping=&quot;MatchAll&quot;&gt;\r\n            &lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsFile&quot; negate=&quot;true&quot; /&gt;\r\n            &lt;add input=&quot;{REQUEST_FILENAME}&quot; matchType=&quot;IsDirectory&quot; negate=&quot;true&quot; /&gt;\r\n            &lt;add input=&quot;{REQUEST_URI}&quot; pattern=&quot;^/(api)&quot; negate=&quot;true&quot; /&gt;\r\n          &lt;/conditions&gt;\r\n          &lt;action type=&quot;Rewrite&quot; url=&quot;/&quot; /&gt;\r\n        &lt;/rule&gt;\r\n           &lt;/rules&gt;\r\n        &lt;/rewrite&gt;\r\n    &lt;/system.webServer&gt;\r\n\r\nIn the index add this\r\n    \r\n    &lt;base href=&quot;/&quot;&gt;\r\n\r\nit works for me maybe you&#39;ve forgotten to set Html5Mode app.config\r\n    \r\n    app.config(function ($stateProvider, $urlRouterProvider, $locationProvider){\r\n        $locationProvider.html5Mode({ enabled: true, requireBase: true });\r\n        $locationProvider.hashPrefix(&#39;!&#39;);\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1519199299,
          "answer_id": 48900595,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1519199299,
          "body_markdown": "I have resolved the issue by adding below code snippet into node.js file.\r\n\r\n\r\n    app.get(&quot;/*&quot;, function (request, response) {\r\n        console.log(&#39;Unknown API called&#39;);\r\n        response.redirect(&#39;/#&#39; + request.url);\r\n    });\r\n\r\nNote : when we refresh the page, it will look for the API instead of Angular page (Because of no # tag in URL.) . Using the above code, I am redirecting to the url with #"
        }
      ],
      "title": "Reloading the page gives wrong GET request with AngularJS HTML5 mode",
      "view_count": 131275,
      "answer_count": 26,
      "code_snippet": [
        "<code>return app.config(['$routeProvider','$locationProvider', function($routeProvider,$locationProvider) {\n\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix = '!';\n\n    $routeProvider.when('/', {\n        templateUrl: '/views/index.html',\n        controller: 'indexCtrl'\n    });\n    $routeProvider.when('/about',{\n        templateUrl: '/views/about.html',\n        controller: 'AboutCtrl'\n    });\n</code>",
        "<code>$locationProvider.html5mode</code>",
        "<code>/#/</code>",
        "<code>localhost:9000/</code>",
        "<code>localhost:9000/about</code>",
        "<code>localhost:9000/about</code>",
        "<code>Cannot GET /about</code>",
        "<code>Request URL:localhost:9000/about\nRequest Method:GET\n</code>",
        "<code>localhost:9000/</code>",
        "<code>/about</code>",
        "<code>Request URL:http://localhost:9000/views/about.html\n</code>",
        "<code>/about</code>",
        "<code>/about</code>",
        "<code>$routeProvider</code>",
        "<code>templateUrl</code>",
        "<code>templateUrl : '/views/about.html',</code>",
        "<code>templateUrl : 'example.com/views/about.html',</code>",
        "<code>http://yourdomain.com/path</code>",
        "<code>$routeProvider\n  .when('/path', {\n    templateUrl: 'path.html',\n  });\n$locationProvider\n  .html5Mode(true);\n</code>",
        "<code>.htaccess</code>",
        "<code>RewriteEngine On \nOptions FollowSymLinks\n\nRewriteBase /\n\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ /#/$1 [L]\n</code>",
        "<code>&lt;base href=\"/index.html\"&gt;</code>",
        "<code>app.use(function(req, res) {\n    res.sendfile(__dirname + '/Public/index.html');\n});\n</code>",
        "<code>&lt;base href=\"/\"&gt;</code>",
        "<code>&lt;base href=\"/index.html\"&gt;</code>",
        "<code>connect-history-api-fallback</code>",
        "<code>npm --save-dev install connect-history-api-fallback\n</code>",
        "<code>var historyApiFallback = require('connect-history-api-fallback');\n\ngulp.task('serve', function() {\n  browserSync.init({\n    server: {\n      baseDir: \"app\",\n      middleware: [ historyApiFallback() ]\n    }\n  });\n});\n</code>",
        "<code>server: { ... }, port: 8100</code>",
        "<code>serve</code>",
        "<code>gulp.task('default', ['sass', 'serve']);</code>",
        "<code>Cannot GET ...</code>",
        "<code>gulp</code>",
        "<code>ionic serve</code>",
        "<code>try_files $uri $uri/ /index.php?...</code>",
        "<code>index.html</code>",
        "<code>module.exports = function(grunt) {\n  var urlRewrite = require('grunt-connect-rewrite');\n\n  // Project configuration.\n  grunt.initConfig({\n    connect: {\n      server: {\n        options: {\n          port: 9001,\n          base: 'build',\n          middleware: function(connect, options) {\n            // Return array of whatever middlewares you want\n            return [\n              // redirect all urls to index.html in build folder\n              urlRewrite('build', 'index.html'),\n\n              // Serve static files.\n              connect.static(options.base),\n\n              // Make empty directories browsable.\n              connect.directory(options.base)\n            ];\n          }\n        }\n      }\n    }\n  })\n};\n</code>",
        "<code>$routeProvider</code>",
        "<code>urlRewrite</code>",
        "<code>&lt;head&gt; &lt;base href=\"/\"&gt; &lt;/head&gt;</code>",
        "<code>$locationProvider.html5Mode(true)</code>",
        "<code>routes.MapRoute(\n        name: \"App\",\n        url: \"{*url}\",\n        defaults: new { controller = \"Home\", action = \"Index\" }\n    );\n</code>",
        "<code>&lt;rewrite&gt;\n  &lt;rules&gt;\n    &lt;rule name=\"AngularJS\" stopProcessing=\"true\"&gt;\n      &lt;match url=\".*\" /&gt;\n      &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" /&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" /&gt;\n      &lt;/conditions&gt;\n      &lt;action type=\"Rewrite\" url=\"/\" /&gt;\n    &lt;/rule&gt;\n  &lt;/rules&gt;\n&lt;/rewrite&gt;\n</code>",
        "<code>var express = require('express');\nvar path = require('path');\nvar router = express.Router();\n\n// serve angular front end files from root path\nrouter.use('/', express.static('app', { redirect: false }));\n\n// rewrite virtual urls to angular app to enable refreshing of internal pages\nrouter.get('*', function (req, res, next) {\n    res.sendFile(path.resolve('app/index.html'));\n});\n\nmodule.exports = router;\n</code>",
        "<code>&lt;base href=\"/\"/&gt;</code>",
        "<code>gulp-connect</code>",
        "<code>npm install connect-pushstate</code>",
        "<code>var gulp = require('gulp'),\n  connect = require('gulp-connect'),\n  pushState = require('connect-pushstate/lib/pushstate').pushState;\n...\nconnect.server({\n  ...\n  middleware: function (connect, options) {\n    return [\n      pushState()\n    ];\n  }\n  ...\n})\n....\n</code>",
        "<code>errorDocument 404 /index.html\n</code>",
        "<code>test: {\n        options: {\n          port: 9000,\n          base: [\n            '.tmp',\n            'test',\n            '&lt;%= yeoman.app %&gt;'\n          ],\n         middleware: function (connect) {\n                  return [\n                      modRewrite(['^[^\\\\.]*$ /index.html [L]']),\n                      connect.static('.tmp'),\n                      connect().use(\n                          '/bower_components',\n                          connect.static('./bower_components')\n                      ),\n                      connect.static('app')\n                  ];\n              }\n        }\n      },\n</code>",
        "<code>app.get('/*', function(req, res) {\nres.sendFile(path.join(__dirname + '/public/app/views/index.html'));\n});\n</code>",
        "<code>&lt;!-- FOR ANGULAR ROUTING --&gt;\n&lt;base href=\"/\"&gt;\n</code>",
        "<code>app.use('/',express.static(__dirname + '/public'));\n</code>",
        "<code>var modRewrite = require('connect-modrewrite');    \n\n\nbrowserSync: {\n            dev: {\n                bsFiles: {\n\n                    src: [\n                        'app/assets/css/*.css',\n                        'app/*.js',\n                        'app/controllers/*.js',\n                        '**/*.php',\n                        '*.html',\n                        'app/jade/includes/*.jade',\n                        'app/views/*.html',\n               ],\n            },\n        options: {\n            watchTask: true,\n            debugInfo: true,\n            logConnections: true,\n            server: {\n                baseDir :'./',\n                middleware: [\n                       modRewrite(['!\\.html|\\.js|\\.jpg|\\.mp4|\\.mp3|\\.gif|\\.svg\\|.css|\\.png$ /index.html [L]'])\n                ]\n            },\n\n            ghostMode: {\n                scroll: true,\n                links: true,\n                forms: true\n                    }\n                }\n            }\n        },\n</code>",
        "<code>npm install connect-modrewrite --save</code>",
        "<code>require in gruntfile</code>",
        "<code>app.get('*', function(req, res){\n    res.render('index');\n});\n</code>",
        "<code>&lt;base href=\"/\" /&gt;</code>",
        "<code>https://npmjs.org/package/grunt-connect-pushstate\n</code>",
        "<code> var pushState = require('grunt-connect-pushstate/lib/utils').pushState;\n\n\n    connect: {\n    server: {\n      options: {\n        port: 1337,\n        base: '',\n        logger: 'dev',\n        hostname: '*',\n        open: true,\n        middleware: function (connect, options) {\n          return [\n            // Rewrite requests to root so they may be handled by router\n            pushState(),\n            // Serve static files\n            connect.static(options.base)\n          ];\n        }\n      },\n    }\n},\n</code>",
        "<code>I solved same problem using modRewrite.  \nAngularJS is reload page when after # changes.  \nBut HTML5 mode remove # and invalid the reload.  \nSo we should reload manually.\n# install connect-modrewrite\n    $ sudo npm install connect-modrewrite --save\n\n# gulp/build.js\n    'use strict';\n    var gulp = require('gulp');\n    var paths = gulp.paths;\n    var util = require('util');\n    var browserSync = require('browser-sync');\n    var modRewrite  = require('connect-modrewrite');\n    function browserSyncInit(baseDir, files, browser) {\n        browser = browser === undefined ? 'default' : browser;\n        var routes = null;\n        if(baseDir === paths.src || (util.isArray(baseDir) &amp;&amp; baseDir.indexOf(paths.src) !== -1)) {\n            routes = {\n                '/bower_components': 'bower_components'\n            };\n        }\n\n        browserSync.instance = browserSync.init(files, {\n            startPath: '/',\n            server: {\n            baseDir: baseDir,\n            middleware: [\n                modRewrite([\n                    '!\\\\.\\\\w+$ /index.html [L]'\n                ])\n            ],\n            routes: routes\n            },\n            browser: browser\n        });\n    }\n</code>",
        "<code>angular-pages:\n  - login\n  - settings\n...\n</code>",
        "<code>public class AngularPageReloadFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        request.getRequestDispatcher(\"index.html\").forward(request, response);\n    }\n}\n</code>",
        "<code>private void initAngularNonRootRedirectFilter(ServletContext servletContext,\n                                              EnumSet&lt;DispatcherType&gt; disps) {\n    log.debug(\"Registering angular page reload Filter\");\n    FilterRegistration.Dynamic angularRedirectFilter =\n            servletContext.addFilter(\"angularPageReloadFilter\",\n                    new AngularPageReloadFilter());\n    int index = 0;\n    while (env.getProperty(\"angular-pages[\" + index + \"]\") != null) {\n        angularRedirectFilter.addMappingForUrlPatterns(disps, true, \"/\" + env.getProperty(\"angular-pages[\" + index + \"]\"));\n        index++;\n    }\n    angularRedirectFilter.setAsyncSupported(true);\n}\n</code>",
        "<code>var historyApiFallback = require('connect-history-api-fallback');\n\ngulp.task('serve', function() {\n  browserSync.init({\n    proxy: {\n            target: 'localhost:' + port,\n            middleware: [ historyApiFallback() ]\n        }\n  });\n});\n</code>",
        "<code>&lt;base href=\"/example.com/\"/&gt;</code>",
        "<code> &lt;filter&gt;\n     &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\n &lt;filter-class&gt;org.tuckey.web.filters.urlrewrite.UrlRewriteFilter&lt;/filter-class&gt;\n&lt;/filter&gt;\n\n&lt;filter-mapping&gt;\n    &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;\n    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;\n    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;\n&lt;/filter-mapping&gt;\n</code>",
        "<code> &lt;urlrewrite default-match-type=\"wildcard\"&gt;\n\n\n    &lt;rule&gt;\n            &lt;from&gt;/&lt;/from&gt;\n            &lt;to&gt;/index.html&lt;/to&gt;\n        &lt;/rule&gt;\n\n    &lt;!--Write every state dependent on your project url--&gt;\n    &lt;rule&gt;\n            &lt;from&gt;/example&lt;/from&gt;\n            &lt;to&gt;/index.html&lt;/to&gt;\n        &lt;/rule&gt;\n    &lt;/urlrewrite&gt;\n</code>",
        "<code>server.js</code>",
        "<code>app.use(function(req, res, next){\n  var d = res.status(404);\n     if(d){\n        res.sendfile('index.html');\n     }\n});\n</code>",
        "<code>use Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\n</code>",
        "<code>public function render($request, Exception $exception)\n{\n    .......\n\n       if ($exception instanceof NotFoundHttpException){\n\n        $segment = $request-&gt;segments();\n\n        //eg. http://site.dev/member/profile\n        //module =&gt; member\n        // view =&gt; member.index\n        //where member.index is the root of your angular app could be anything :)\n        if(head($segment) != 'api' &amp;&amp; $module = $segment[0]){\n            return response(view(\"$module.index\"), 404);\n        }\n\n        return response()-&gt;fail('not_found', $exception-&gt;getCode());\n\n    }\n    .......\n\n     return parent::render($request, $exception);\n}\n</code>",
        "<code>app.get(\"/*\", function (request, response) {\n    console.log('Unknown API called');\n    response.redirect('/#' + request.url);\n});\n</code>",
        "<code>&lt;system.webServer&gt;\n  &lt;rewrite&gt;\n    &lt;rules&gt;\n    &lt;rule name=\"AngularJS Routes\" stopProcessing=\"true\"&gt;\n      &lt;match url=\".*\" /&gt;\n      &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" /&gt;\n        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" /&gt;\n        &lt;add input=\"{REQUEST_URI}\" pattern=\"^/(api)\" negate=\"true\" /&gt;\n      &lt;/conditions&gt;\n      &lt;action type=\"Rewrite\" url=\"/\" /&gt;\n    &lt;/rule&gt;\n       &lt;/rules&gt;\n    &lt;/rewrite&gt;\n&lt;/system.webServer&gt;\n</code>",
        "<code>&lt;base href=\"/\"&gt;\n</code>",
        "<code>app.config(function ($stateProvider, $urlRouterProvider, $locationProvider){\n    $locationProvider.html5Mode({ enabled: true, requireBase: true });\n    $locationProvider.hashPrefix('!');\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "npm"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1329250375,
          "answer_id": 9283530,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1329250735,
          "last_edit_date": 1329250735,
          "body_markdown": "If you would like to remove all the packages that you have installed, you can use the `npm -g ls` command to find them, and then `npm -g rm` to remove them."
        },
        {
          "tags": [],
          "down_vote_count": 7,
          "creation_date": 1329250975,
          "answer_id": 9283646,
          "path": "stack.bower.answer",
          "score": 365,
          "up_vote_count": 372,
          "is_accepted": true,
          "last_activity_date": 1464357131,
          "last_edit_date": 1495541902,
          "body_markdown": "The following command removes all global npm modules. Note: this does not work on Windows. For a working Windows version, see [Ollie Bennett&#39;s Answer](https://stackoverflow.com/a/15597395/1688034).\r\n\r\n    npm ls -gp --depth=0 | awk -F/ &#39;/node_modules/ &amp;&amp; !/\\/npm$/ {print $NF}&#39; | xargs npm -g rm\r\n\r\nHere is how it works:\r\n\r\n- `npm ls -gp --depth=0` lists all global top level modules (see the [cli documentation for ls][1]) \r\n- `awk -F/ &#39;/node_modules/ &amp;&amp; !/\\/npm$/ {print $NF}&#39;` prints all modules that are not actually npm itself (does not end with `/npm`)\r\n- `xargs npm -g rm` removes all modules globally that come over the previous pipe\r\n\r\n\r\n  [1]: https://docs.npmjs.com/cli/ls"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1364121185,
          "answer_id": 15597395,
          "path": "stack.bower.answer",
          "score": 176,
          "up_vote_count": 176,
          "is_accepted": false,
          "last_activity_date": 1364121185,
          "body_markdown": "For those using **Windows**, the easiest way to remove all globally installed npm packages is to delete the contents of:\r\n\r\n`C:\\Users\\username\\AppData\\Roaming\\npm`\r\n\r\nYou can get here quickly by typing `%appdata%` (either in explorer, run prompt, or start menu)."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1381741264,
          "answer_id": 19356750,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1398896604,
          "last_edit_date": 1398896604,
          "body_markdown": "Use this code to uninstall any package:\r\n\r\n    npm rm -g &lt;package_name&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1381745273,
          "answer_id": 19357869,
          "path": "stack.bower.answer",
          "score": 167,
          "up_vote_count": 168,
          "is_accepted": false,
          "last_activity_date": 1434121563,
          "last_edit_date": 1495541902,
          "body_markdown": "I tried [**Kai Sternad**&#39;s solution](https://stackoverflow.com/a/9283646/1202461) but it seemed imperfect to me. There was a lot of special symbols left after the last `awk` from the deps tree itself.\r\n\r\nSo, I came up with my own modification of **Kai Sternad**&#39;s solution (with a little help from [cashmere&#39;s idea][1]):\r\n\r\n    npm ls -gp --depth=0 | awk -F/node_modules/ &#39;{print $2}&#39; | grep -vE &#39;^(npm|)$&#39; | xargs -r npm -g rm\r\n\r\n`npm ls -gp --depth=0` lists all globally-installed npm modules in **parsable** format:\r\n\r\n    /home/leonid/local/lib\r\n    /home/leonid/local/lib/node_modules/bower\r\n    /home/leonid/local/lib/node_modules/coffee-script\r\n    ...\r\n\r\n`awk -F/node_modules/ &#39;{print $2}&#39;` extracts module names from paths, forming the list of all globally-installed modules.\r\n\r\n`grep -vE &#39;^(npm|)$&#39;` removes npm itself and blank lines.\r\n\r\n`xargs -r npm -g rm` calls `npm -g rm` for each module in the list.\r\n\r\nLike **Kai Sternad**&#39;s solution, it&#39;ll only work under *nix.\r\n\r\n  [1]: https://stackoverflow.com/a/22290968/1202461"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1385361976,
          "answer_id": 20186288,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1385361976,
          "body_markdown": "    npm ls -gp | awk -F/ &#39;/node_modules/&amp;&amp;!/node_modules.*node_modules/&amp;&amp;!/npm/{print $NF}&#39; | xargs npm rm -g"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386259495,
          "answer_id": 20404837,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1386259495,
          "body_markdown": "sed solution\r\n\r\n    npm -gp ls | sed -r &#39;/npm$|(node_modules.*){2,}/d; s:.*/([^/]+)$:\\1:g&#39; | xargs npm rm -g"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394417388,
          "answer_id": 22290968,
          "path": "stack.bower.answer",
          "score": 44,
          "up_vote_count": 44,
          "is_accepted": false,
          "last_activity_date": 1394417388,
          "body_markdown": "    sudo npm list -g --depth=0. | awk -F &#39; &#39; &#39;{print $2}&#39; | awk -F &#39;@&#39; &#39;{print $1}&#39;  | sudo xargs npm remove -g\r\n\r\n\r\nworked for me\r\n\r\n - `sudo npm list -g --depth=0.`  lists all top level installed\r\n - `awk -F &#39; &#39; &#39;{print $2}&#39;` gets rid of ├──\r\n - `awk -F &#39;@&#39; &#39;{print $1}&#39;` gets the part before &#39;@&#39;\r\n - `sudo xargs npm remove -g` removes the package globally"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1398772306,
          "answer_id": 23363906,
          "path": "stack.bower.answer",
          "score": -4,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1398772306,
          "body_markdown": "It&#39;s as simple as: `rm -rf ~/.npm`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1403643570,
          "answer_id": 24396172,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1446244053,
          "last_edit_date": 1495540046,
          "body_markdown": "Just switch into your `%appdata%/npm` directory and run the following...\r\n\r\n    for package in `ls node_modules`; do npm uninstall $package; done;\r\n\r\n***EDIT: This command breaks with npm 3.3.6 (Node 5.0). I&#39;m now using the following Bash command, which I&#39;ve mapped to npm_uninstall_all in my .bashrc file:***\r\n\r\n    npm uninstall `ls -1 node_modules | tr &#39;/\\n&#39; &#39; &#39;`\r\n\r\nAdded bonus? it&#39;s way faster!\r\n\r\nhttps://github.com/npm/npm/issues/10187\r\n\r\nhttps://stackoverflow.com/questions/19106284/how-do-you-uninstall-all-dependencies-listed-in-package-json-npm/24396148#24396148"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1428751273,
          "answer_id": 29577281,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1428751273,
          "body_markdown": "Well if you are on windows, and want to remove/uninstall all node_modules then you need to do following steps.\r\n\r\n 1. Go to windows command prompt\r\n 2. Navigate to node_modules directory (**Not inside node_modules folder**)\r\n 3. Type below command and give it for 1-2 minutes it will uninstall all  directories inside node_module\r\n      \r\n         rmdir /s /q node_modules\r\n\r\n\r\nHope this will help some one on windows "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1432553915,
          "answer_id": 30437507,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1483517304,
          "last_edit_date": 1483517304,
          "body_markdown": "If you have [jq][jq] installed, you can go even without grep/awk/sed:\r\n\r\n    npm ls -g --json --depth=0 |\r\n      jq -r &#39;.dependencies|keys-[&quot;npm&quot;]|join(&quot;\\n&quot;)&#39; |\r\n      xargs npm rm -g\r\n\r\n[jq]: https://stedolan.github.com/jq\r\n\r\nOn Debian and derived you can install [jq] with:\r\n\r\n    sudo apt-get install jq"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1435414945,
          "answer_id": 31089757,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1435414945,
          "body_markdown": "For those using **Powershell**: \r\n\r\n    npm -gp ls --depth=0 | ForEach-Object { Get-Item $_ } | Where { $_.Name -ne &#39;npm&#39; } | ForEach-Object { npm rm -g $_.Name }\r\n\r\nTo clear the cache: \r\n\r\n    npm cache clear\r\n    "
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1459805517,
          "answer_id": 36413262,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1459805517,
          "body_markdown": "Just put in your console:\r\n\r\nsudo npm list -g --depth=0. | awk -F &#39; &#39; &#39;{print $2}&#39; | awk -F &#39;@&#39; &#39;{print $1}&#39;  | sudo xargs npm remove -g\r\n\r\nIts work for me...\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1491777042,
          "answer_id": 43312629,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1491777042,
          "body_markdown": "OS not specified by OP. For **Windows**, this script can be used to nuke the local and the user&#39;s global modules and cache. \r\n\r\nI noticed on **linux** that the global root is truly global to the system instead of the given user. So deleting the global root might not be a good idea for a shared system. That aside, I can port the script to *bash* if interested.\r\n\r\nFor **Windows**, save to a cmd file to run.\r\n\r\n    @ECHO OFF\r\n    SETLOCAL EnableDelayedExpansion \r\n    SETLOCAL EnableExtensions\r\n    \r\n    SET /A ecode=0\r\n    \r\n    :: verify\r\n    SET /P conf=&quot;About to delete all global and local npm modules and clear the npm cache. Continue (y/[n])?\r\n    IF /I NOT &quot;%conf%&quot;==&quot;y&quot; (\r\n      ECHO operation aborted\r\n      SET /A ecode=!ecode!+1\r\n      GOTO END\r\n    )\r\n    \r\n    :: wipe global and local npm root\r\n    FOR %%a IN (&quot;&quot; &quot;-g&quot;) DO (\r\n    \r\n      :: get root path into var\r\n      SET cmd=npm root %%~a\r\n      FOR /f &quot;usebackq tokens=*&quot; %%r IN (`!cmd!`) DO (SET npm_root=%%r)\r\n      \r\n      :: paranoid\r\n      ECHO validating module path &quot;!npm_root!&quot;\r\n      IF &quot;!npm_root:~-12!&quot;==&quot;node_modules&quot; (\r\n        IF NOT EXIST &quot;!npm_root!&quot; (\r\n          ECHO npm root does not exist &quot;!npm_root!&quot;\r\n        ) ELSE (\r\n          ECHO deleting &quot;!npm_root!&quot; ...\r\n          :: delete\r\n          RMDIR /S /Q &quot;!npm_root!&quot;\r\n        )\r\n      ) ELSE (\r\n          ECHO suspicious npm root, ignoring &quot;!npm_root!&quot;\r\n      )\r\n    )\r\n    \r\n    :: clear the cache\r\n    ECHO clearing the npm cache ...\r\n    call npm cache clean\r\n    \r\n    :: done\r\n    ECHO done\r\n    \r\n    :END\r\n    \r\n    ENDLOCAL &amp; EXIT /b %ecode%\r\n\r\n"
        }
      ],
      "creation_date": 1329250056,
      "body_markdown": "Is there a command to remove all global npm modules? If not, what do you suggest?",
      "title": "Command to remove all npm modules globally?",
      "view_count": 235215,
      "up_vote_count": 260,
      "answer_count": 15,
      "link": "https://stackoverflow.com/questions/9283472/command-to-remove-all-npm-modules-globally",
      "code_snippet": [
        "<code>npm ls -gp --depth=0 | awk -F/ '/node_modules/ &amp;&amp; !/\\/npm$/ {print $NF}' | xargs npm -g rm\n</code>",
        "<code>npm ls -gp --depth=0</code>",
        "<code>awk -F/ '/node_modules/ &amp;&amp; !/\\/npm$/ {print $NF}'</code>",
        "<code>/npm</code>",
        "<code>xargs npm -g rm</code>",
        "<code>awk -F' |@' '/@/ {if ($(NF-1) != \"npm\") {print $(NF-1)}}'</code>",
        "<code>$(NF-1)</code>",
        "<code>npm</code>",
        "<code>C:\\Users\\username\\AppData\\Roaming\\npm</code>",
        "<code>%appdata%</code>",
        "<code>npm cache clear</code>",
        "<code>npm cache clear --force</code>",
        "<code>awk</code>",
        "<code>npm ls -gp --depth=0 | awk -F/node_modules/ '{print $2}' | grep -vE '^(npm|)$' | xargs -r npm -g rm\n</code>",
        "<code>npm ls -gp --depth=0</code>",
        "<code>/home/leonid/local/lib\n/home/leonid/local/lib/node_modules/bower\n/home/leonid/local/lib/node_modules/coffee-script\n...\n</code>",
        "<code>awk -F/node_modules/ '{print $2}'</code>",
        "<code>grep -vE '^(npm|)$'</code>",
        "<code>xargs -r npm -g rm</code>",
        "<code>npm -g rm</code>",
        "<code>npm</code>",
        "<code>/usr/local/lib/node_modules</code>",
        "<code>npm ls -gp --depth=0 | awk -F/node_modules/ '{print $2}' | grep -vE '^(npm)$' | xargs npm -g rm</code>",
        "<code>sudo npm list -g --depth=0. | awk -F ' ' '{print $2}' | awk -F '@' '{print $1}'  | sudo xargs npm remove -g\n</code>",
        "<code>sudo npm list -g --depth=0.</code>",
        "<code>awk -F ' ' '{print $2}'</code>",
        "<code>awk -F '@' '{print $1}'</code>",
        "<code>sudo xargs npm remove -g</code>",
        "<code>npm remove UNMET</code>",
        "<code>grep -v npm</code>",
        "<code>sudo npm list -g --depth=0. | grep -v npm | awk -F ' ' '{print $2}' | awk -F '@' '{print $1}'  | sudo xargs npm remove -g</code>",
        "<code>%appdata%/npm</code>",
        "<code>for package in `ls node_modules`; do npm uninstall $package; done;\n</code>",
        "<code>npm uninstall `ls -1 node_modules | tr '/\\n' ' '`\n</code>",
        "<code>npm</code>",
        "<code>n</code>",
        "<code>tr</code>",
        "<code>npm -gp ls --depth=0 | ForEach-Object { Get-Item $_ } | Where { $_.Name -ne 'npm' } | ForEach-Object { npm rm -g $_.Name }\n</code>",
        "<code>npm cache clear\n</code>",
        "<code>npm -g ls</code>",
        "<code>npm -g rm</code>",
        "<code>npm ls -g --json --depth=0 |\n  jq -r '.dependencies|keys-[\"npm\"]|join(\"\\n\")' |\n  xargs npm rm -g\n</code>",
        "<code>sudo apt-get install jq\n</code>",
        "<code>json</code>",
        "<code>@ECHO OFF\nSETLOCAL EnableDelayedExpansion \nSETLOCAL EnableExtensions\n\nSET /A ecode=0\n\n:: verify\nSET /P conf=\"About to delete all global and local npm modules and clear the npm cache. Continue (y/[n])?\nIF /I NOT \"%conf%\"==\"y\" (\n  ECHO operation aborted\n  SET /A ecode=!ecode!+1\n  GOTO END\n)\n\n:: wipe global and local npm root\nFOR %%a IN (\"\" \"-g\") DO (\n\n  :: get root path into var\n  SET cmd=npm root %%~a\n  FOR /f \"usebackq tokens=*\" %%r IN (`!cmd!`) DO (SET npm_root=%%r)\n\n  :: paranoid\n  ECHO validating module path \"!npm_root!\"\n  IF \"!npm_root:~-12!\"==\"node_modules\" (\n    IF NOT EXIST \"!npm_root!\" (\n      ECHO npm root does not exist \"!npm_root!\"\n    ) ELSE (\n      ECHO deleting \"!npm_root!\" ...\n      :: delete\n      RMDIR /S /Q \"!npm_root!\"\n    )\n  ) ELSE (\n      ECHO suspicious npm root, ignoring \"!npm_root!\"\n  )\n)\n\n:: clear the cache\nECHO clearing the npm cache ...\ncall npm cache clean\n\n:: done\nECHO done\n\n:END\n\nENDLOCAL &amp; EXIT /b %ecode%\n</code>",
        "<code>npm rm -g &lt;package_name&gt;\n</code>",
        "<code>npm -g ls</code>",
        "<code> rmdir /s /q node_modules\n</code>",
        "<code>npm ls -gp | awk -F/ '/node_modules/&amp;&amp;!/node_modules.*node_modules/&amp;&amp;!/npm/{print $NF}' | xargs npm rm -g\n</code>",
        "<code>npm -gp ls | sed -r '/npm$|(node_modules.*){2,}/d; s:.*/([^/]+)$:\\1:g' | xargs npm rm -g\n</code>",
        "<code>rm -rf ~/.npm</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "localization",
        "internationalization"
      ],
      "creation_date": 1245928091,
      "body_markdown": "I have been trying to detect the browser language preference using JavaScript.\r\n\r\nIf I set the browser language in IE in `Tools&gt;Internet Options&gt;General&gt;Languages`, how do I read this value using JavaScript?\r\n\r\nSame problem for Firefox. I&#39;m not able to detect the setting for `tools&gt;options&gt;content&gt;languages` using `navigator.language`.\r\n\r\nUsing  `navigator.userLanguage`  , it detects the setting done thru\r\n`Start&gt;ControlPanel&gt;RegionalandLanguageOptions&gt;Regional Options` tab.\r\n\r\nI have tested with `navigator.browserLanguage` and `navigator.systemLanguage` but neither  returns the value for the first setting(`Tools&gt;InternetOptions&gt;General&gt;Languages`)\r\n\r\nI found a &lt;a href=&quot;http://www.velocityreviews.com/forums/t99655-save-way-to-detect-browser-language.html&quot;&gt;link&lt;/a&gt; which discusses this in detail, but the question remains unanswered :(\r\n",
      "last_edit_date": 1245930630,
      "up_vote_count": 350,
      "link": "https://stackoverflow.com/questions/1043339/javascript-for-detecting-browser-language-preference",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1245930021,
          "answer_id": 1043451,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1405051369,
          "last_edit_date": 1405051369,
          "body_markdown": "`navigator.userLanguage` for IE\r\n\r\n`window.navigator.language` for firefox/opera/safari"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1245930401,
          "answer_id": 1043479,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1363358573,
          "last_edit_date": 1363358573,
          "body_markdown": "I can&#39;t find a single reference that state that it&#39;s possible without involving the serverside.\r\n\r\nMSDN on:\r\n\r\n - navigator.[browserLanguage][1]\r\n - navigator.[systemLanguage][2]\r\n - navigator.[userLanguage][3]\r\n\r\nFrom browserLanguage:\r\n\r\n&gt; In Microsoft Internet Explorer 4.0 and\r\n&gt; earlier, the browserLanguage property\r\n&gt; reflects the language of the installed\r\n&gt; browser&#39;s user interface. For example,\r\n&gt; if you install a Japanese version of\r\n&gt; Windows Internet Explorer on an\r\n&gt; English operating system,\r\n&gt; browserLanguage would be ja.\r\n&gt; \r\n&gt; In Internet Explorer 5 and later,\r\n&gt; however, the browserLanguage property\r\n&gt; reflects the language of the operating\r\n&gt; system regardless of the installed\r\n&gt; language version of Internet Explorer.\r\n&gt; However, if Microsoft Windows 2000\r\n&gt; MultiLanguage version is installed,\r\n&gt; the browserLanguage property indicates\r\n&gt; the language set in the operating\r\n&gt; system&#39;s current menus and dialogs, as\r\n&gt; found in the Regional Options of the\r\n&gt; Control Panel. For example, if you\r\n&gt; install a Japanese version of Internet\r\n&gt; Explorer 5 on an English (United\r\n&gt; Kingdom) operating system,\r\n&gt; browserLanguage would be en-gb. If you\r\n&gt; install Windows 2000 MultiLanguage\r\n&gt; version and set the language of the\r\n&gt; menus and dialogs to French,\r\n&gt; browserLanguage would be fr, even\r\n&gt; though you have a Japanese version of\r\n&gt; Internet Explorer.\r\n&gt; \r\n&gt; \r\n&gt;&gt; Note  This property does not indicate\r\n&gt;&gt; the language or languages set by the\r\n&gt;&gt; user in Language Preferences, located\r\n&gt;&gt; in the Internet Options dialog box.\r\n\r\nFurthermore, it looks like `browserLanguage` is deprecated cause IE8 doesn&#39;t list it\r\n\r\n  [1]: http://msdn.microsoft.com/en-us/library/ms533542(VS.85).aspx\r\n  [2]: http://msdn.microsoft.com/en-us/library/ms534653(VS.85).aspx\r\n  [3]: http://msdn.microsoft.com/en-us/library/ms534713(VS.85).aspx"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1257849387,
          "answer_id": 1707001,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1257849387,
          "body_markdown": "There is no decent way to get that setting, at least not something browser independent.\r\n\r\nBut the server has that info, because it is part of the HTTP request header (the Accept-Language field, see [http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4][1])\r\n\r\nSo the only reliable way is to get an answer back from the server. You will need something that runs on the server (like .asp, .jsp, .php, CGI) and that &quot;thing&quot; can return that info.\r\nGood examples here: [http://www.developershome.com/wap/detection/detection.asp?page=readHeader][2]\r\n\r\n\r\n  [1]: http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\r\n  [2]: http://www.developershome.com/wap/detection/detection.asp?page=readHeader"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1280152331,
          "answer_id": 3335420,
          "path": "stack.bower.answer",
          "score": 241,
          "up_vote_count": 245,
          "is_accepted": true,
          "last_activity_date": 1438680564,
          "last_edit_date": 1438680564,
          "body_markdown": "I think the main problem here is that the browser settings don&#39;t actually affect the `navigator.language` property that is obtained via javascript. \r\n\r\nWhat they do affect is the HTTP &#39;Accept-Language&#39; header, but it appears this value is not available through javascript at all. (Probably why @anddoutoi states he can&#39;t find a reference for it that doesn&#39;t involve server side.)\r\n\r\nI have coded a workaround: I&#39;ve knocked up a google app engine script at http://ajaxhttpheaders.appspot.com that will return you the HTTP request headers via JSONP.\r\n\r\n(Note: this is a hack only to be used if you do not have a back end available that can do this for you. In general you should not be making calls to  third party hosted javascript files in your pages unless you have a very high level of trust in the host.)\r\n\r\nI intend to leave it there in perpetuity so feel free to use it in your code.\r\n\r\nHere&#39;s some example code (in jQuery) for how you might use it\r\n\r\n    $.ajax({ \r\n        url: &quot;http://ajaxhttpheaders.appspot.com&quot;, \r\n        dataType: &#39;jsonp&#39;, \r\n        success: function(headers) {\r\n            language = headers[&#39;Accept-Language&#39;];\r\n            nowDoSomethingWithIt(language);\r\n        }\r\n    });\r\n\r\nHope someone finds this useful.\r\n\r\nEdit: I have written a small jQuery plugin on github that wraps this functionality: https://github.com/dansingerman/jQuery-Browser-Language\r\n\r\nEdit 2: As requested here is the code that is running on AppEngine (super trivial really):\r\n\r\n\r\n    class MainPage(webapp.RequestHandler):\r\n        def get(self):\r\n            headers = self.request.headers\r\n            callback = self.request.get(&#39;callback&#39;)\r\n    \r\n            if callback:\r\n              self.response.headers[&#39;Content-Type&#39;] = &#39;application/javascript&#39;\r\n              self.response.out.write(callback + &quot;(&quot;)\r\n              self.response.out.write(headers)\r\n              self.response.out.write(&quot;)&quot;)\r\n            else:\r\n              self.response.headers[&#39;Content-Type&#39;] = &#39;text/plain&#39;\r\n              self.response.out.write(&quot;I need a callback=&quot;)\r\n    \r\n    application = webapp.WSGIApplication(\r\n                                         [(&#39;/&#39;, MainPage)],\r\n                                         debug=False)\r\n    \r\n    def main():\r\n        run_wsgi_app(application)\r\n    \r\n    if __name__ == &quot;__main__&quot;:\r\n        main()\r\n\r\nEdit3: Have open sourced the app engine code here: https://github.com/dansingerman/app-engine-headers"
        },
        {
          "tags": [],
          "down_vote_count": 9,
          "creation_date": 1288715158,
          "answer_id": 4079798,
          "path": "stack.bower.answer",
          "score": 210,
          "up_vote_count": 219,
          "is_accepted": false,
          "last_activity_date": 1420549263,
          "last_edit_date": 1420549263,
          "body_markdown": "    var language = window.navigator.userLanguage || window.navigator.language;\r\n    alert(language); //works IE/SAFARI/CHROME/FF\r\n\r\n`window.navigator.userLanguage` is IE only and it&#39;s the language set in **Windows Control Panel - Regional Options** and NOT browser language, but you could suppose that a user using a machine with Window Regional settings set to France is probably a French user.\r\n\r\n`navigator.language` is FireFox and all other browser.\r\n\r\nSome language code: `&#39;it&#39;` = italy, `&#39;en-US&#39;` = english US, etc.\r\n\r\n---\r\n\r\nAs pointed out by *rcoup* and *The WebMacheter* in comments below, this workaround won&#39;t let you discriminate among English dialects when users are viewing website in browsers other than IE.\r\n\r\n*`window.navigator.language` (Chrome/FF/Safari) returns always browser language and not browser&#39;s preferred language, but: &quot;it&#39;s pretty common for English speakers (gb, au, nz, etc) to have an en-us version of Firefox/Chrome/Safari.&quot; Hence `window.navigator.language` will still return `en-US` even if the user preferred language is `en-GB`.*"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1320482396,
          "answer_id": 8019086,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1320482396,
          "body_markdown": "DanSingerman has a very good solution for this question.\r\n\r\nThe only reliable source for the language is in the HTTP-request header.\r\nSo you need a server-side script to reply the request-header or at least the `Accept-Language` field back to you.\r\n\r\nHere is a very simple Node.js server which should be compatible with DanSingermans jQuery plugin.\r\n\r\n    var http = require(&#39;http&#39;);\r\n    http.createServer(function (req, res) {\r\n      res.writeHead(200, {&#39;Content-Type&#39;: &#39;text/plain&#39;});\r\n      res.end(JSON.stringify(req.headers));\r\n    }).listen(80,&#39;0.0.0.0&#39;);\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1352967597,
          "answer_id": 13393716,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1352967597,
          "body_markdown": "For what it&#39;s worth, Wikimedia&#39;s Universal Language Selector library has hooks for doing this:\r\nhttps://www.mediawiki.org/wiki/Extension:UniversalLanguageSelector\r\n\r\nSee the function getFrequentLanguageList in resources/js/ext.uls.init.js . Direct link:\r\nhttps://gerrit.wikimedia.org/r/gitweb?p=mediawiki/extensions/UniversalLanguageSelector.git;a=blob;f=resources/js/ext.uls.init.js;hb=HEAD\r\n\r\nIt still depends on the server, or more specifically, the MediaWiki API. The reason I&#39;m showing it is that it may provide a good example of getting all the useful information about the user&#39;s language: browser language, Accept-Language, geolocation (with getting country/language info from the CLDR), and of course, user&#39;s own site preferences."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1391642730,
          "answer_id": 21590840,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1402977864,
          "last_edit_date": 1402977864,
          "body_markdown": "Dan Singerman&#39;s answer has an issue that the header fetched has to be used right away, due to the asynchronous nature of jQuery&#39;s ajax.  However, with his google app server, I wrote the following, such that the header is set as part of the initial set up and can be used at later time.\r\n\r\n\r\n    &lt;html&gt;\r\n    &lt;head&gt;\r\n    &lt;script&gt;\r\n    \r\n        var bLocale=&#39;raw&#39;; // can be used at any other place\r\n    \r\n        function processHeaders(headers){\r\n            bLocale=headers[&#39;Accept-Language&#39;];\r\n            comma=bLocale.indexOf(&#39;,&#39;);\r\n            if(comma&gt;0) bLocale=bLocale.substring(0, comma);\r\n        }\r\n    \r\n    &lt;/script&gt;\r\n    \r\n    &lt;script src=&quot;jquery-1.11.0.js&quot;&gt;&lt;/script&gt;\r\n    \r\n    &lt;script type=&quot;application/javascript&quot; src=&quot;http://ajaxhttpheaders.appspot.com?callback=processHeaders&quot;&gt;&lt;/script&gt;\r\n    \r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n    \r\n    &lt;h1 id=&quot;bLocale&quot;&gt;Should be the browser locale here&lt;/h1&gt;\r\n    \r\n    &lt;/body&gt;\r\n    \r\n    &lt;script&gt;\r\n    \r\n        $(&quot;#bLocale&quot;).text(bLocale);\r\n    \r\n    &lt;/script&gt;\r\n    &lt;/html&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1409566823,
          "answer_id": 25603630,
          "path": "stack.bower.answer",
          "score": 167,
          "up_vote_count": 169,
          "is_accepted": false,
          "last_activity_date": 1457468687,
          "last_edit_date": 1457468687,
          "body_markdown": "Update of year 2014.\r\n\r\nNow there is a way to get Accept-Languages in Firefox and Chrome using **&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage.languages&quot;&gt;navigator.languages&lt;/a&gt;**  (works in Chrome &gt;= 32 and Firefox &gt;= 32)\r\n\r\nAlso, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage.language&quot;&gt;navigator.language&lt;/a&gt; in Firefox these years reflects most preferred language of content, not language of UI. But since this notion is yet to be supported by other browsers, it is not very useful.\r\n\r\nSo, to get most preferred content language when possible, and use UI language as fallback:\r\n\r\n    navigator.languages\r\n        ? navigator.languages[0]\r\n        : (navigator.language || navigator.userLanguage)\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1411139146,
          "answer_id": 25936993,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1411139146,
          "body_markdown": "If you only need to support certain modern browsers then you can now use:\r\n\r\n    navigator.languages\r\n\r\nwhich returns an array of the user&#39;s language preferences in the order specified by the user.\r\n\r\nAs of now (Sep 2014) this works on:\r\nChrome (v37), \r\nFirefox (v32) and \r\nOpera (v24)\r\n\r\nBut not on:\r\nIE (v11)\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413356018,
          "answer_id": 26376233,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1413356018,
          "body_markdown": "If you have control of a backend and are using django, a 4 line implementation of Dan&#39;s idea is:\r\n\r\n    def get_browser_lang(request):\r\n    if request.META.has_key(&#39;HTTP_ACCEPT_LANGUAGE&#39;):\r\n        return JsonResponse({&#39;response&#39;: request.META[&#39;HTTP_ACCEPT_LANGUAGE&#39;]})\r\n    else:\r\n        return JsonResponse({&#39;response&#39;: settings.DEFAULT_LANG})\r\n\r\nthen in urls.py:\r\n\r\n    url(r&#39;^browserlang/$&#39;, views.get_browser_lang, name=&#39;get_browser_lang&#39;),\r\n\r\nand on the front end:\r\n\r\n    $.get(lg(&#39;SERVER&#39;) + &#39;browserlang/&#39;, function(data){\r\n        var lang_code = data.response.split(&#39;,&#39;)[0].split(&#39;;&#39;)[0].split(&#39;-&#39;)[0];\r\n    });\r\n\r\n(you have to set DEFAULT_LANG in settings.py of course)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1415801781,
          "answer_id": 26889118,
          "path": "stack.bower.answer",
          "score": 27,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1415801781,
          "body_markdown": "    &lt;script type=&quot;text/javascript&quot;&gt;\r\n    var lang = window.navigator.languages ? window.navigator.languages[0] : null;\r\n        lang = lang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\r\n    if (lang.indexOf(&#39;-&#39;) !== -1)\r\n        lang = lang.split(&#39;-&#39;)[0];\r\n    \r\n    if (lang.indexOf(&#39;_&#39;) !== -1)\r\n        lang = lang.split(&#39;_&#39;)[0];\r\n    &lt;/script&gt;\r\n\r\nI only needed the primary component for my needs, but you can easily just use the full string. Works with latest Chrome, Firefox, Safari and IE10+."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1416214107,
          "answer_id": 26968718,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1416214107,
          "last_edit_date": 1495541454,
          "body_markdown": "Based on the answer here https://stackoverflow.com/questions/220231/accessing-the-web-pages-http-headers-in-javascript I built the following script to get the browser language:\r\n\r\n    var req = new XMLHttpRequest();\r\n    req.open(&#39;GET&#39;, document.location, false);\r\n    req.send(null);\r\n    var headers = req.getAllResponseHeaders().toLowerCase();\r\n    var contentLanguage = headers.match( /^content-language\\:(.*)$/gm );\r\n    if(contentLanguage[0]) {\r\n        return contentLanguage[0].split(&quot;:&quot;)[1].trim().toUpperCase();\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1424699101,
          "answer_id": 28675190,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1424699101,
          "body_markdown": "If you don&#39;t want to rely on an external server and you have one of your own you can use a simple PHP script to achieve the same behavior as @DanSingerman answer.\r\n\r\n**languageDetector.php**:\r\n\r\n    &lt;?php\r\n    $lang = substr($_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;], 0, 2);\r\n    echo json_encode($lang);\r\n    ?&gt;\r\n\r\nAnd just change this lines from the jQuery script:\r\n\r\n    url: &quot;languageDetector.php&quot;,\r\n    dataType: &#39;json&#39;,\r\n    success: function(language) {\r\n        nowDoSomethingWithIt(language);\r\n    }\r\n\r\n "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1426614260,
          "answer_id": 29106129,
          "path": "stack.bower.answer",
          "score": 38,
          "up_vote_count": 38,
          "is_accepted": false,
          "last_activity_date": 1495047281,
          "last_edit_date": 1495047281,
          "body_markdown": "I came across this piece of code to detect browser&#39;s language in [Angular Translate module][1], which you can find the source [here][2]. I slightly modified the code by replacing angular.isArray with Array.isArray to make it independent of Angular library.\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\nvar getFirstBrowserLanguage = function () {\r\n        var nav = window.navigator,\r\n        browserLanguagePropertyKeys = [&#39;language&#39;, &#39;browserLanguage&#39;, &#39;systemLanguage&#39;, &#39;userLanguage&#39;],\r\n        i,\r\n        language;\r\n    \r\n        // support for HTML 5.1 &quot;navigator.languages&quot;\r\n        if (Array.isArray(nav.languages)) {\r\n          for (i = 0; i &lt; nav.languages.length; i++) {\r\n            language = nav.languages[i];\r\n            if (language &amp;&amp; language.length) {\r\n              return language;\r\n            }\r\n          }\r\n        }\r\n    \r\n        // support for other well known properties in browsers\r\n        for (i = 0; i &lt; browserLanguagePropertyKeys.length; i++) {\r\n          language = nav[browserLanguagePropertyKeys[i]];\r\n          if (language &amp;&amp; language.length) {\r\n            return language;\r\n          }\r\n        }\r\n    \r\n        return null;\r\n      };\r\n\r\n    console.log(getFirstBrowserLanguage());\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n      \r\n\r\n  [1]: http://angular-translate.github.io/\r\n  [2]: http://rawgit.com/angular-translate/bower-angular-translate/master/angular-translate.js"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1427967935,
          "answer_id": 29409813,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1427967935,
          "body_markdown": "Javascript way:\r\n\r\n    var language = window.navigator.userLanguage || window.navigator.language;//returns value like &#39;en-us&#39;\r\n\r\nIf you are using [jQuery.i18n plugin][1], you can use:\r\n\r\n    jQuery.i18n.browserLang();//returns value like &#39;&quot;en-US&quot;&#39;\r\n\r\n\r\n  [1]: https://github.com/jquery-i18n-properties/jquery-i18n-properties"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1430876257,
          "answer_id": 30066021,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1430876257,
          "body_markdown": "If you are developing a Chrome App / Extension use the [chrome.i18n API][1].\r\n\r\n    chrome.i18n.getAcceptLanguages(function(languages) {\r\n      console.log(languages);\r\n      // [&quot;en-AU&quot;, &quot;en&quot;, &quot;en-US&quot;]\r\n    });\r\n\r\n  [1]: https://developer.chrome.com/extensions/i18n#method-getAcceptLanguages"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437457790,
          "answer_id": 31531274,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1437486774,
          "last_edit_date": 1437486774,
          "body_markdown": "I had the same problem, and I wrote the following front-end only library that wraps up the code for multiple browsers. It&#39;s not much code, but nice to not have to copy and paste the same code across multiple websites.\r\n\r\nGet it: [acceptedlanguages.js](https://github.com/leighmcculloch/acceptedlanguages.js)\r\n\r\nUse it:\r\n\r\n    &lt;script src=&quot;acceptedlanguages.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n      console.log(&#39;Accepted Languages:  &#39; + acceptedlanguages.accepted);\r\n    &lt;/script&gt;\r\n\r\nIt always returns an array, ordered by users preference. In Safari &amp; IE the array is always single length. In FF and Chrome it may be more than one language."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439556278,
          "answer_id": 32010455,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1439556278,
          "body_markdown": "If you are using ASP .NET MVC and you want to get the **Accepted-Languages** header from JavaScript then here is a workaround example that does not involve any asynchronous requests.\r\n\r\nIn your .cshtml file, store the header securely in a div&#39;s data- attribute:\r\n\r\n    &lt;div data-languages=&quot;@Json.Encode(HttpContext.Current.Request.UserLanguages)&quot;&gt;&lt;/div&gt;\r\n\r\nThen your JavaScript code can access the info, e.g. using JQuery:\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n    $(&#39;[data-languages]&#39;).each(function () {\r\n        var languages = $(this).data(&quot;languages&quot;);\r\n        for (var i = 0; i &lt; languages.length; i++) {\r\n            var regex = /[-;]/;\r\n            console.log(languages[i].split(regex)[0]);\r\n        }\r\n    });\r\n    &lt;/script&gt;\r\n\r\nOf course you can use a similar approach with other server technologies as others have mentioned.\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1450756038,
          "answer_id": 34408120,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1450756974,
          "last_edit_date": 1450756974,
          "body_markdown": "For who are looking for Java Server solution\r\n\r\nHere is RestEasy\r\n\r\n    @GET\r\n    @Path(&quot;/preference-language&quot;)\r\n    @Consumes({&quot;application/json&quot;, &quot;application/xml&quot;})\r\n    @Produces({&quot;application/json&quot;, &quot;application/xml&quot;})\r\n    public Response getUserLanguagePreference(@Context HttpHeaders headers) {\r\n        return Response.status(200)\r\n                .entity(headers.getAcceptableLanguages().get(0))\r\n                .build();\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458559335,
          "answer_id": 36129715,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1458559335,
          "body_markdown": "i had a diffrent approach, this might help someone in the future:\r\n\r\nthe customer wanted a page where you can swap languages.\r\ni needed to format numbers by that setting (not the browser setting / not by any predefined setting)\r\n\r\nso i set an initial setting depending on the config settings (i18n)\r\n\r\n    $clang = $this-&gt;Session-&gt;read(&#39;Config.language&#39;);\r\n\techo &quot;&lt;script type=&#39;text/javascript&#39;&gt;var clang = &#39;$clang&#39;&lt;/script&gt;&quot;;\r\n\r\nlater in the script i used a function to determine what numberformating i need\r\n\r\n    function getLangsettings(){\r\n\t  if(typeof clang === &#39;undefined&#39;) clang = navigator.language;\r\n\t  //console.log(clang);\r\n\t  switch(clang){\r\n\t\tcase &#39;de&#39;:\r\n\t\tcase &#39;de-de&#39;:\r\n\t\t\treturn {precision : 2, thousand : &quot;.&quot;, decimal : &quot;,&quot;}\r\n\t\tcase &#39;en&#39;:\r\n\t\tcase &#39;en-gb&#39;:\r\n\t\tdefault:\r\n\t\t\treturn {precision : 2, thousand : &quot;,&quot;, decimal : &quot;.&quot;}\r\n\t  }\r\n    }\r\n\t\t\r\n\r\nso i used the set language of the page and as a fallback i used the browser settings.\r\n\r\nwhich should be helpfull for testing purposes aswell.\r\n\r\ndepending on your customers you might not need that settings."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1467392453,
          "answer_id": 38150585,
          "path": "stack.bower.answer",
          "score": 22,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1467452453,
          "last_edit_date": 1467452453,
          "body_markdown": "\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var language = navigator.languages &amp;&amp; navigator.languages[0] || // Chrome / Firefox\r\n                   navigator.language ||   // All browsers\r\n                   navigator.userLanguage; // IE &lt;= 10\r\n\r\n    console.log(language);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n- https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/languages\r\n- https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/language\r\n\r\nTry PWA Template https://github.com/StartPolymer/progressive-web-app-template\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1485274718,
          "answer_id": 41833124,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1485276404,
          "last_edit_date": 1485276404,
          "body_markdown": "I have a hack that I think uses very little code and is quite reliable.\r\n\r\nPut your site&#39;s files in a subdirectory. SSL into your server and create symlinks to that subdirectory where your files are stored that indicate your languages.\r\n\r\nSomething like this:\r\n\r\n    ln -s /var/www/yourhtml /var/www/en\r\n    ln -s /var/www/yourhtml /var/www/sp\r\n    ln -s /var/www/yourhtml /var/www/it\r\n\r\nUse your web server to read HTTP_ACCEPT_LANGUAGE and redirect to these &quot;different subdirectories&quot; according to the language value it provides.\r\n\r\nNow you can use Javascript&#39;s window.location.href to get your url and use it in conditionals to reliably identify the preferred language.\r\n\r\n    url_string = window.location.href;\r\n    if (url_string = &quot;http://yoursite.com/it/index.html&quot;) {\r\n    \tdocument.getElementById(&quot;page-wrapper&quot;).className = &quot;italian&quot;;\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1488894359,
          "answer_id": 42649975,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1488894359,
          "body_markdown": "I&#39;ve just come up with this. It combines newer JS destructuring syntax with a few standard operations to retrieve the language and locale.\r\n\r\n    var [lang, locale] = (((navigator.userLanguage || navigator.language).replace(&#39;-&#39;, &#39;_&#39;)).toLowerCase()).split(&#39;_&#39;);\r\n\r\nHope it helps someone"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1495459473,
          "answer_id": 44114093,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1495459473,
          "body_markdown": "First of all, excuse me for my English.\r\nI would like to share my code, because it works and it is different than the others given anwers. \r\nIn this exemple,if you speak French (France, Belgium or other french language) you are redirected on the french page, otherwise on the english page, depending on the browser configuration :\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n            $(document).ready(function () {\r\n                var userLang = navigator.language || navigator.userLanguage;\r\n                if (userLang.startsWith(&quot;fr&quot;)) {\r\n                        window.location.href = &#39;../fr/index.html&#39;;\r\n                    }\r\n                else {\r\n                        window.location.href = &#39;../en/index.html&#39;;\r\n                    }\r\n                });\r\n        &lt;/script&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1506874029,
          "answer_id": 46514247,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1506874029,
          "body_markdown": "I&#39;ve been using Hamid&#39;s answer for a while, but it in cases where the languages array is like [&quot;en&quot;, &quot;en-GB&quot;, &quot;en-US&quot;, &quot;fr-FR&quot;, &quot;fr&quot;, &quot;en-ZA&quot;] it will return &quot;en&quot;, when &quot;en-GB&quot; would be a better match.\r\n\r\nMy update (below) will return the first long format code e.g. &quot;en-GB&quot;, otherwise it will return the first short code e.g. &quot;en&quot;, otherwise it will return null.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function getFirstBrowserLanguage() {\r\n            var nav = window.navigator,\r\n                browserLanguagePropertyKeys = [&#39;language&#39;, &#39;browserLanguage&#39;, &#39;systemLanguage&#39;, &#39;userLanguage&#39;],\r\n                i,\r\n                language,\r\n                len,\r\n                shortLanguage = null;\r\n\r\n            // support for HTML 5.1 &quot;navigator.languages&quot;\r\n            if (Array.isArray(nav.languages)) {\r\n                for (i = 0; i &lt; nav.languages.length; i++) {\r\n                    language = nav.languages[i];\r\n                    len = language.length;\r\n                    if (!shortLanguage &amp;&amp; len) {\r\n                        shortLanguage = language;\r\n                    }\r\n                    if (language &amp;&amp; len&gt;2) {\r\n                        return language;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // support for other well known properties in browsers\r\n            for (i = 0; i &lt; browserLanguagePropertyKeys.length; i++) {\r\n                language = nav[browserLanguagePropertyKeys[i]];\r\n                len = language.length;\r\n                if (!shortLanguage &amp;&amp; len) {\r\n                    shortLanguage = language;\r\n                }\r\n                if (language &amp;&amp; len &gt; 2) {\r\n                    return language;\r\n                }\r\n            }\r\n\r\n            return shortLanguage;\r\n        }\r\n\r\n    console.log(getFirstBrowserLanguage());\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        }
      ],
      "title": "JavaScript for detecting browser language preference",
      "view_count": 362247,
      "answer_count": 26,
      "code_snippet": [
        "<code>Tools&gt;Internet Options&gt;General&gt;Languages</code>",
        "<code>tools&gt;options&gt;content&gt;languages</code>",
        "<code>navigator.language</code>",
        "<code>navigator.userLanguage</code>",
        "<code>Start&gt;ControlPanel&gt;RegionalandLanguageOptions&gt;Regional Options</code>",
        "<code>navigator.browserLanguage</code>",
        "<code>navigator.systemLanguage</code>",
        "<code>Tools&gt;InternetOptions&gt;General&gt;Languages</code>",
        "<code>navigator.language</code>",
        "<code>$.ajax({ \n    url: \"http://ajaxhttpheaders.appspot.com\", \n    dataType: 'jsonp', \n    success: function(headers) {\n        language = headers['Accept-Language'];\n        nowDoSomethingWithIt(language);\n    }\n});\n</code>",
        "<code>class MainPage(webapp.RequestHandler):\n    def get(self):\n        headers = self.request.headers\n        callback = self.request.get('callback')\n\n        if callback:\n          self.response.headers['Content-Type'] = 'application/javascript'\n          self.response.out.write(callback + \"(\")\n          self.response.out.write(headers)\n          self.response.out.write(\")\")\n        else:\n          self.response.headers['Content-Type'] = 'text/plain'\n          self.response.out.write(\"I need a callback=\")\n\napplication = webapp.WSGIApplication(\n                                     [('/', MainPage)],\n                                     debug=False)\n\ndef main():\n    run_wsgi_app(application)\n\nif __name__ == \"__main__\":\n    main()\n</code>",
        "<code>var language = window.navigator.userLanguage || window.navigator.language;\nalert(language); //works IE/SAFARI/CHROME/FF\n</code>",
        "<code>window.navigator.userLanguage</code>",
        "<code>navigator.language</code>",
        "<code>'it'</code>",
        "<code>'en-US'</code>",
        "<code>window.navigator.language</code>",
        "<code>window.navigator.language</code>",
        "<code>en-US</code>",
        "<code>en-GB</code>",
        "<code>navigator.language</code>",
        "<code>navigator.languages\n    ? navigator.languages[0]\n    : (navigator.language || navigator.userLanguage)\n</code>",
        "<code>window.navigator.languages || [window.navigator.language || window.navigator.userLanguage]</code>",
        "<code>navigator.languages[0]</code>",
        "<code>navigator.language</code>",
        "<code>navigator.languages</code>",
        "<code>[\"en-US\", \"en\", \"ru\", \"uk\"]</code>",
        "<code>navigator.languages</code>",
        "<code>var getFirstBrowserLanguage = function () {\r\n    var nav = window.navigator,\r\n    browserLanguagePropertyKeys = ['language', 'browserLanguage', 'systemLanguage', 'userLanguage'],\r\n    i,\r\n    language;\r\n\r\n    // support for HTML 5.1 \"navigator.languages\"\r\n    if (Array.isArray(nav.languages)) {\r\n      for (i = 0; i &lt; nav.languages.length; i++) {\r\n        language = nav.languages[i];\r\n        if (language &amp;&amp; language.length) {\r\n          return language;\r\n        }\r\n      }\r\n    }\r\n\r\n    // support for other well known properties in browsers\r\n    for (i = 0; i &lt; browserLanguagePropertyKeys.length; i++) {\r\n      language = nav[browserLanguagePropertyKeys[i]];\r\n      if (language &amp;&amp; language.length) {\r\n        return language;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\nconsole.log(getFirstBrowserLanguage());</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\nvar lang = window.navigator.languages ? window.navigator.languages[0] : null;\n    lang = lang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\nif (lang.indexOf('-') !== -1)\n    lang = lang.split('-')[0];\n\nif (lang.indexOf('_') !== -1)\n    lang = lang.split('_')[0];\n&lt;/script&gt;\n</code>",
        "<code>var language = navigator.languages &amp;&amp; navigator.languages[0] || // Chrome / Firefox\r\n               navigator.language ||   // All browsers\r\n               navigator.userLanguage; // IE &lt;= 10\r\n\r\nconsole.log(language);</code>",
        "<code>en-US</code>",
        "<code>navigator.languages[0]</code>",
        "<code>navigator.userLanguage</code>",
        "<code>window.navigator.language</code>",
        "<code>var language = window.navigator.userLanguage || window.navigator.language;//returns value like 'en-us'\n</code>",
        "<code>jQuery.i18n.browserLang();//returns value like '\"en-US\"'\n</code>",
        "<code>browserLanguage</code>",
        "<code>navigator.browserLanguage</code>",
        "<code>chrome.i18n.getAcceptLanguages(function(languages) {\n  console.log(languages);\n  // [\"en-AU\", \"en\", \"en-US\"]\n});\n</code>",
        "<code>Accept-Language</code>",
        "<code>var http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end(JSON.stringify(req.headers));\n}).listen(80,'0.0.0.0');\n</code>",
        "<code>navigator.languages\n</code>",
        "<code>&lt;script src=\"acceptedlanguages.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  console.log('Accepted Languages:  ' + acceptedlanguages.accepted);\n&lt;/script&gt;\n</code>",
        "<code>function getFirstBrowserLanguage() {\r\n        var nav = window.navigator,\r\n            browserLanguagePropertyKeys = ['language', 'browserLanguage', 'systemLanguage', 'userLanguage'],\r\n            i,\r\n            language,\r\n            len,\r\n            shortLanguage = null;\r\n\r\n        // support for HTML 5.1 \"navigator.languages\"\r\n        if (Array.isArray(nav.languages)) {\r\n            for (i = 0; i &lt; nav.languages.length; i++) {\r\n                language = nav.languages[i];\r\n                len = language.length;\r\n                if (!shortLanguage &amp;&amp; len) {\r\n                    shortLanguage = language;\r\n                }\r\n                if (language &amp;&amp; len&gt;2) {\r\n                    return language;\r\n                }\r\n            }\r\n        }\r\n\r\n        // support for other well known properties in browsers\r\n        for (i = 0; i &lt; browserLanguagePropertyKeys.length; i++) {\r\n            language = nav[browserLanguagePropertyKeys[i]];\r\n            len = language.length;\r\n            if (!shortLanguage &amp;&amp; len) {\r\n                shortLanguage = language;\r\n            }\r\n            if (language &amp;&amp; len &gt; 2) {\r\n                return language;\r\n            }\r\n        }\r\n\r\n        return shortLanguage;\r\n    }\r\n\r\nconsole.log(getFirstBrowserLanguage());</code>",
        "<code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\n\n    var bLocale='raw'; // can be used at any other place\n\n    function processHeaders(headers){\n        bLocale=headers['Accept-Language'];\n        comma=bLocale.indexOf(',');\n        if(comma&gt;0) bLocale=bLocale.substring(0, comma);\n    }\n\n&lt;/script&gt;\n\n&lt;script src=\"jquery-1.11.0.js\"&gt;&lt;/script&gt;\n\n&lt;script type=\"application/javascript\" src=\"http://ajaxhttpheaders.appspot.com?callback=processHeaders\"&gt;&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h1 id=\"bLocale\"&gt;Should be the browser locale here&lt;/h1&gt;\n\n&lt;/body&gt;\n\n&lt;script&gt;\n\n    $(\"#bLocale\").text(bLocale);\n\n&lt;/script&gt;\n&lt;/html&gt;\n</code>",
        "<code>var [lang, locale] = (((navigator.userLanguage || navigator.language).replace('-', '_')).toLowerCase()).split('_');\n</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\r\n        $(document).ready(function () {\r\n            var userLang = navigator.language || navigator.userLanguage;\r\n            if (userLang.startsWith(\"fr\")) {\r\n                    window.location.href = '../fr/index.html';\r\n                }\r\n            else {\r\n                    window.location.href = '../en/index.html';\r\n                }\r\n            });\r\n    &lt;/script&gt;</code>",
        "<code>def get_browser_lang(request):\nif request.META.has_key('HTTP_ACCEPT_LANGUAGE'):\n    return JsonResponse({'response': request.META['HTTP_ACCEPT_LANGUAGE']})\nelse:\n    return JsonResponse({'response': settings.DEFAULT_LANG})\n</code>",
        "<code>url(r'^browserlang/$', views.get_browser_lang, name='get_browser_lang'),\n</code>",
        "<code>$.get(lg('SERVER') + 'browserlang/', function(data){\n    var lang_code = data.response.split(',')[0].split(';')[0].split('-')[0];\n});\n</code>",
        "<code>var req = new XMLHttpRequest();\nreq.open('GET', document.location, false);\nreq.send(null);\nvar headers = req.getAllResponseHeaders().toLowerCase();\nvar contentLanguage = headers.match( /^content-language\\:(.*)$/gm );\nif(contentLanguage[0]) {\n    return contentLanguage[0].split(\":\")[1].trim().toUpperCase();\n}\n</code>",
        "<code>&lt;?php\n$lang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);\necho json_encode($lang);\n?&gt;\n</code>",
        "<code>url: \"languageDetector.php\",\ndataType: 'json',\nsuccess: function(language) {\n    nowDoSomethingWithIt(language);\n}\n</code>",
        "<code>&lt;div data-languages=\"@Json.Encode(HttpContext.Current.Request.UserLanguages)\"&gt;&lt;/div&gt;\n</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\n$('[data-languages]').each(function () {\n    var languages = $(this).data(\"languages\");\n    for (var i = 0; i &lt; languages.length; i++) {\n        var regex = /[-;]/;\n        console.log(languages[i].split(regex)[0]);\n    }\n});\n&lt;/script&gt;\n</code>",
        "<code>@GET\n@Path(\"/preference-language\")\n@Consumes({\"application/json\", \"application/xml\"})\n@Produces({\"application/json\", \"application/xml\"})\npublic Response getUserLanguagePreference(@Context HttpHeaders headers) {\n    return Response.status(200)\n            .entity(headers.getAcceptableLanguages().get(0))\n            .build();\n}\n</code>",
        "<code>$clang = $this-&gt;Session-&gt;read('Config.language');\necho \"&lt;script type='text/javascript'&gt;var clang = '$clang'&lt;/script&gt;\";\n</code>",
        "<code>function getLangsettings(){\n  if(typeof clang === 'undefined') clang = navigator.language;\n  //console.log(clang);\n  switch(clang){\n    case 'de':\n    case 'de-de':\n        return {precision : 2, thousand : \".\", decimal : \",\"}\n    case 'en':\n    case 'en-gb':\n    default:\n        return {precision : 2, thousand : \",\", decimal : \".\"}\n  }\n}\n</code>",
        "<code>ln -s /var/www/yourhtml /var/www/en\nln -s /var/www/yourhtml /var/www/sp\nln -s /var/www/yourhtml /var/www/it\n</code>",
        "<code>url_string = window.location.href;\nif (url_string = \"http://yoursite.com/it/index.html\") {\n    document.getElementById(\"page-wrapper\").className = \"italian\";\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "jquery",
        "date"
      ],
      "creation_date": 1285724000,
      "body_markdown": "I need to be able to add 1, 2 , 5 or 10 days to today&#39;s date using jQuery.\r\n",
      "last_edit_date": 1387602479,
      "up_vote_count": 237,
      "link": "https://stackoverflow.com/questions/3818193/how-to-add-number-of-days-to-todays-date",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1285724240,
          "answer_id": 3818198,
          "path": "stack.bower.answer",
          "score": 393,
          "up_vote_count": 399,
          "is_accepted": false,
          "last_activity_date": 1285727627,
          "last_edit_date": 1285727627,
          "body_markdown": "You can use JavaScript, no jQuery required:\r\n\r\n    var someDate = new Date();\r\n    var numberOfDaysToAdd = 6;\r\n    someDate.setDate(someDate.getDate() + numberOfDaysToAdd); \r\n\r\nFormatting to `dd/mm/yyyy` :\r\n\r\n    var dd = someDate.getDate();\r\n    var mm = someDate.getMonth() + 1;\r\n    var y = someDate.getFullYear();\r\n    \r\n    var someFormattedDate = dd + &#39;/&#39;+ mm + &#39;/&#39;+ y;"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1285727004,
          "answer_id": 3818324,
          "path": "stack.bower.answer",
          "score": 81,
          "up_vote_count": 86,
          "is_accepted": false,
          "last_activity_date": 1428930427,
          "last_edit_date": 1428930427,
          "body_markdown": "You could extend the javascript Date object like this\r\n\r\n    Date.prototype.addDays = function(days) {\r\n        this.setDate(this.getDate() + parseInt(days));\r\n        return this;\r\n    };\r\n\r\nand in your javascript code you could call\r\n\r\n    var currentDate = new Date();\r\n    // to add 4 days to current date\r\n    currentDate.addDays(4);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1285727615,
          "answer_id": 3818376,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1285727615,
          "body_markdown": "You can use this library &quot;[Datejs][1]  open-source JavaScript Date Library&quot;.\r\n\r\n\r\n  [1]: http://www.datejs.com/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1300104617,
          "answer_id": 5298374,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1406823202,
          "last_edit_date": 1406823202,
          "body_markdown": "I&#39;ve found this to be a pain in javascript.  Check out this link that helped me.  Have you ever thought of extending the date object.  \r\n\r\n\r\n[http://pristinecoder.com/Blog/post/javascript-formatting-date-in-javascript][1]\r\n\r\n\r\n    /*\r\n     * Date Format 1.2.3\r\n     * (c) 2007-2009 Steven Levithan &lt;stevenlevithan.com&gt;\r\n     * MIT license\r\n     *\r\n     * Includes enhancements by Scott Trenda &lt;scott.trenda.net&gt;\r\n     * and Kris Kowal &lt;cixar.com/~kris.kowal/&gt;\r\n     *\r\n     * Accepts a date, a mask, or a date and a mask.\r\n     * Returns a formatted version of the given date.\r\n     * The date defaults to the current date/time.\r\n     * The mask defaults to dateFormat.masks.default.\r\n     */\r\n     \r\n    var dateFormat = function () {\r\n        var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;/g,\r\n            timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n            timezoneClip = /[^-+\\dA-Z]/g,\r\n            pad = function (val, len) {\r\n                val = String(val);\r\n                len = len || 2;\r\n                while (val.length &lt; len) val = &quot;0&quot; + val;\r\n                return val;\r\n            };\r\n     \r\n        // Regexes and supporting functions are cached through closure\r\n        return function (date, mask, utc) {\r\n            var dF = dateFormat;\r\n     \r\n            // You can&#39;t provide utc if you skip other args (use the &quot;UTC:&quot; mask prefix)\r\n            if (arguments.length == 1 &amp;&amp; Object.prototype.toString.call(date) == &quot;[object String]&quot; &amp;&amp; !/\\d/.test(date)) {\r\n                mask = date;\r\n                date = undefined;\r\n            }\r\n     \r\n            // Passing date through Date applies Date.parse, if necessary\r\n            date = date ? new Date(date) : new Date;\r\n            if (isNaN(date)) throw SyntaxError(&quot;invalid date&quot;);\r\n     \r\n            mask = String(dF.masks[mask] || mask || dF.masks[&quot;default&quot;]);\r\n     \r\n            // Allow setting the utc argument via the mask\r\n            if (mask.slice(0, 4) == &quot;UTC:&quot;) {\r\n                mask = mask.slice(4);\r\n                utc = true;\r\n            }\r\n     \r\n            var _ = utc ? &quot;getUTC&quot; : &quot;get&quot;,\r\n                d = date[_ + &quot;Date&quot;](),\r\n                D = date[_ + &quot;Day&quot;](),\r\n                m = date[_ + &quot;Month&quot;](),\r\n                y = date[_ + &quot;FullYear&quot;](),\r\n                H = date[_ + &quot;Hours&quot;](),\r\n                M = date[_ + &quot;Minutes&quot;](),\r\n                s = date[_ + &quot;Seconds&quot;](),\r\n                L = date[_ + &quot;Milliseconds&quot;](),\r\n                o = utc ? 0 : date.getTimezoneOffset(),\r\n                flags = {\r\n                    d:    d,\r\n                    dd:   pad(d),\r\n                    ddd:  dF.i18n.dayNames[D],\r\n                    dddd: dF.i18n.dayNames[D + 7],\r\n                    m:    m + 1,\r\n                    mm:   pad(m + 1),\r\n                    mmm:  dF.i18n.monthNames[m],\r\n                    mmmm: dF.i18n.monthNames[m + 12],\r\n                    yy:   String(y).slice(2),\r\n                    yyyy: y,\r\n                    h:    H % 12 || 12,\r\n                    hh:   pad(H % 12 || 12),\r\n                    H:    H,\r\n                    HH:   pad(H),\r\n                    M:    M,\r\n                    MM:   pad(M),\r\n                    s:    s,\r\n                    ss:   pad(s),\r\n                    l:    pad(L, 3),\r\n                    L:    pad(L &gt; 99 ? Math.round(L / 10) : L),\r\n                    t:    H &lt; 12 ? &quot;a&quot;  : &quot;p&quot;,\r\n                    tt:   H &lt; 12 ? &quot;am&quot; : &quot;pm&quot;,\r\n                    T:    H &lt; 12 ? &quot;A&quot;  : &quot;P&quot;,\r\n                    TT:   H &lt; 12 ? &quot;AM&quot; : &quot;PM&quot;,\r\n                    Z:    utc ? &quot;UTC&quot; : (String(date).match(timezone) || [&quot;&quot;]).pop().replace(timezoneClip, &quot;&quot;),\r\n                    o:    (o &gt; 0 ? &quot;-&quot; : &quot;+&quot;) + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n                    S:    [&quot;th&quot;, &quot;st&quot;, &quot;nd&quot;, &quot;rd&quot;][d % 10 &gt; 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n                };\r\n     \r\n            return mask.replace(token, function ($0) {\r\n                return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n            });\r\n        };\r\n    }();\r\n     \r\n    // Some common format strings\r\n    dateFormat.masks = {\r\n        &quot;default&quot;:      &quot;ddd mmm dd yyyy HH:MM:ss&quot;,\r\n        shortDate:      &quot;m/d/yy&quot;,\r\n        mediumDate:     &quot;mmm d, yyyy&quot;,\r\n        longDate:       &quot;mmmm d, yyyy&quot;,\r\n        fullDate:       &quot;dddd, mmmm d, yyyy&quot;,\r\n        shortTime:      &quot;h:MM TT&quot;,\r\n        mediumTime:     &quot;h:MM:ss TT&quot;,\r\n        longTime:       &quot;h:MM:ss TT Z&quot;,\r\n        isoDate:        &quot;yyyy-mm-dd&quot;,\r\n        isoTime:        &quot;HH:MM:ss&quot;,\r\n        isoDateTime:    &quot;yyyy-mm-dd&#39;T&#39;HH:MM:ss&quot;,\r\n        isoUtcDateTime: &quot;UTC:yyyy-mm-dd&#39;T&#39;HH:MM:ss&#39;Z&#39;&quot;\r\n    };\r\n     \r\n    // Internationalization strings\r\n    dateFormat.i18n = {\r\n        dayNames: [\r\n            &quot;Sun&quot;, &quot;Mon&quot;, &quot;Tue&quot;, &quot;Wed&quot;, &quot;Thu&quot;, &quot;Fri&quot;, &quot;Sat&quot;,\r\n            &quot;Sunday&quot;, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;\r\n        ],\r\n        monthNames: [\r\n            &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;,\r\n            &quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;, &quot;December&quot;\r\n        ]\r\n    };\r\n     \r\n    // For convenience...\r\n    Date.prototype.format = function (mask, utc) {\r\n        return dateFormat(this, mask, utc);\r\n    };\r\n\r\n  [1]: http://www.stevenleath.com/blogengine.web/post/2011/03/09/How-do-I-add-subtract-days-in-javascript.aspx\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1323085133,
          "answer_id": 8384726,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1380489017,
          "last_edit_date": 1495540978,
          "body_markdown": "The accepted answer here gave me unpredictable results, sometimes weirdly adding months and years.\r\n\r\nThe most reliable way I could find was found here\r\nhttps://stackoverflow.com/questions/8081500/add-days-to-javascript-date-object-and-also-increment-month\r\n\r\n    var dayOffset = 20;\r\n    var millisecondOffset = dayOffset * 24 * 60 * 60 * 1000;\r\n    december.setTime(december.getTime() + millisecondOffset); \r\n\r\n\r\n*EDIT: Even though it has worked for some people, I don&#39;t think it is entirely correct. I would recommend going with a more popular answer or using something like http://momentjs.com/*\r\n\r\n---"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1349453979,
          "answer_id": 12750254,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1349455439,
          "last_edit_date": 1349455439,
          "body_markdown": "I found that JavaScript can return a correct date when you use `new Date(nYear, nMonth, nDate);` with the over days of that month.\r\nTry to see the result of a `dDate` variable when you use this:\r\n\r\n`var dDate = new Date(2012, 0, 34);   // the result is 3 Feb 2012`\r\n\r\n---\r\n\r\nI have a SkipDate function to share:\r\n\r\n\r\n        function DaysOfMonth(nYear, nMonth) {\r\n            switch (nMonth) {\r\n                case 0:     // January\r\n                    return 31; break;\r\n                case 1:     // February\r\n                    if ((nYear % 4) == 0) {\r\n                        return 29;\r\n                    }\r\n                    else {\r\n                        return 28;\r\n                    };\r\n                    break;\r\n                case 2:     // March\r\n                    return 31; break;\r\n                case 3:     // April\r\n                    return 30; break;\r\n                case 4:     // May\r\n                    return 31; break;\r\n                case 5:     // June\r\n                    return 30; break;\r\n                case 6:     // July\r\n                    return 31; break;\r\n                case 7:     // August\r\n                    return 31; break;\r\n                case 8:     // September\r\n                    return 30; break;\r\n                case 9:     // October\r\n                    return 31; break;\r\n                case 10:     // November\r\n                    return 30; break;\r\n                case 11:     // December\r\n                    return 31; break;\r\n            }\r\n        };\r\n\r\n        function SkipDate(dDate, skipDays) {\r\n            var nYear = dDate.getFullYear();\r\n            var nMonth = dDate.getMonth();\r\n            var nDate = dDate.getDate();\r\n            var remainDays = skipDays;\r\n            var dRunDate = dDate;\r\n\r\n            while (remainDays &gt; 0) {\r\n                remainDays_month = DaysOfMonth(nYear, nMonth) - nDate;\r\n                if (remainDays &gt; remainDays_month) {\r\n                    remainDays = remainDays - remainDays_month - 1;\r\n                    nDate = 1;\r\n                    if (nMonth &lt; 11) { nMonth = nMonth + 1; }\r\n                    else {\r\n                        nMonth = 0;\r\n                        nYear = nYear + 1;\r\n                    };\r\n                }\r\n                else {\r\n                    nDate = nDate + remainDays;\r\n                    remainDays = 0;\r\n                };\r\n                dRunDate = Date(nYear, nMonth, nDate);\r\n            }\r\n            return new Date(nYear, nMonth, nDate);\r\n        };\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386585291,
          "answer_id": 20468397,
          "path": "stack.bower.answer",
          "score": 25,
          "up_vote_count": 25,
          "is_accepted": false,
          "last_activity_date": 1386585291,
          "body_markdown": "The prototype-solution from Krishna Chytanya is very nice, but needs a minor but important improvement.\r\nThe days param must be parsed as Integer to avoid weird calculations when days is a String like &quot;1&quot;. (I needed several hours to find out, what went wrong in my application.)\r\n\r\n    Date.prototype.addDays = function(days) {\r\n        this.setDate(this.getDate() + parseInt(days));\r\n        return this;\r\n    };\r\n\r\nEven if you do not use this prototype function:\r\n**Always be sure to have an Integer when using setDate().**"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1388671817,
          "answer_id": 20884825,
          "path": "stack.bower.answer",
          "score": 58,
          "up_vote_count": 58,
          "is_accepted": false,
          "last_activity_date": 1388671817,
          "body_markdown": "Why not simply use\r\n\r\n    function addDays(theDate, days) {\r\n        return new Date(theDate.getTime() + days*24*60*60*1000);\r\n    }\r\n\r\n    var newDate = addDays(new Date(), 5);\r\n\r\nor -5 to remove 5 days"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1408137086,
          "answer_id": 25334277,
          "path": "stack.bower.answer",
          "score": 43,
          "up_vote_count": 43,
          "is_accepted": false,
          "last_activity_date": 1420796101,
          "last_edit_date": 1420796101,
          "body_markdown": "This is for 5 days:\r\n\r\n\r\n        var myDate = new Date(new Date().getTime()+(5*24*60*60*1000));\r\n\r\nYou not need JQuery, you can do it in Javascript, Hope you get it."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429794731,
          "answer_id": 29824519,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1429794731,
          "body_markdown": "\r\nPure JS solution, with date formatted YYYY-mm-dd format\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n\r\n    var someDate = new Date(&#39;2014-05-14&#39;);\r\n    someDate.setDate(someDate.getDate() + 15); //number  of days to add, e.x. 15 days\r\n    var dateFormated = someDate.toISOString().substr(0,10);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431691094,
          "answer_id": 30258978,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1431691094,
          "body_markdown": "    Date.prototype.addDays = function(days)\r\n    {\r\n        var dat = new Date(this.valueOf() + days * 24 * 60 * 60 * 1000 );\r\n        return dat;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1434464285,
          "answer_id": 30870311,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1518924145,
          "last_edit_date": 1518924145,
          "body_markdown": "If the times in the Date are not needed, then you can simply use the date object&#39;s methods to extract the Month,Year and Day and add &quot;n&quot; number of days to the Day part.\r\n\r\n    var n=5; //number of days to add. \r\n    var today=new Date(); //Today&#39;s Date\r\n    var requiredDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()+n)\r\n\r\nRef:[Mozilla Javascript GetDate](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate)\r\n\r\nEdit: Ref: [Mozilla JavaScript Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1442935787,
          "answer_id": 32720968,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1445584237,
          "last_edit_date": 1445584237,
          "body_markdown": "Here is a solution that worked for me.\r\n\r\n    function calduedate(ndays){\r\n\r\n        var newdt = new Date(); var chrday; var chrmnth;\r\n        newdt.setDate(newdt.getDate() + parseInt(ndays));\r\n\r\n        var newdate = newdt.getFullYear();\r\n        if(newdt.getMonth() &lt; 10){\r\n            newdate = newdate+&#39;-&#39;+&#39;0&#39;+newdt.getMonth();\r\n        }else{\r\n            newdate = newdate+&#39;-&#39;+newdt.getMonth();\r\n        }\r\n        if(newdt.getDate() &lt; 10){\r\n            newdate = newdate+&#39;-&#39;+&#39;0&#39;+newdt.getDate();\r\n        }else{\r\n            newdate = newdate+&#39;-&#39;+newdt.getDate();\r\n        }\r\n\r\n        alert(&quot;newdate=&quot;+newdate);\r\n\r\n    }\r\n\r\n\r\n  [1]: http://phptricks.info"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1454393472,
          "answer_id": 35146273,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1501586103,
          "last_edit_date": 1501586103,
          "body_markdown": "&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function addDays(n){\r\n        var t = new Date();\r\n        t.setDate(t.getDate() + n); \r\n        var month = &quot;0&quot;+(t.getMonth()+1);\r\n        var date = &quot;0&quot;+t.getDate();\r\n        month = month.slice(-2);\r\n        date = date.slice(-2);\r\n         var date = date +&quot;/&quot;+month +&quot;/&quot;+t.getFullYear();\r\n        alert(date);\r\n    }\r\n\r\n    addDays(5);\r\n\r\n&lt;!-- end snippet --&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1466065393,
          "answer_id": 37853715,
          "path": "stack.bower.answer",
          "score": 25,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1508762838,
          "last_edit_date": 1508762838,
          "body_markdown": "**Moment.js**\r\n\r\nInstall `moment.js` from [here][1]. \r\n\r\n**npm** : `$ npm i --save moment`\r\n \r\n**Bower** : $ `bower install --save moment`\r\n\r\nNext, \r\n\r\n    var date = moment()\r\n                .add(2,&#39;d&#39;) //replace 2 with number of days you want to add\r\n                .toDate(); //convert it to a Javascript Date Object if you like\r\n\r\nLink Ref : [http://momentjs.com/docs/#/manipulating/add/][2]\r\n\r\n`Moment.js` is an amazing Javascript library to manage Date objects and extremely light weight at `40kb`.\r\n\r\nGood Luck.\r\n  [1]: http://momentjs.com/\r\n  [2]: http://momentjs.com/docs/#/manipulating/add/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467442316,
          "answer_id": 38157381,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1467442316,
          "body_markdown": "you can try this and don&#39;t need JQuery: [timeSolver.js][1] \r\n\r\nFor example, add 5 day on today:\r\n\r\n  [1]: https://github.com/sean1093/timeSolver\r\n\r\n    var newDay = timeSolver.add(new Date(),5,&quot;day&quot;);\r\n\r\nYou also can add by hour, month...etc.\r\nplease see for more infomation."
        }
      ],
      "title": "How to add number of days to today&#39;s date?",
      "view_count": 449164,
      "answer_count": 16,
      "code_snippet": [
        "<code>var someDate = new Date();\nvar numberOfDaysToAdd = 6;\nsomeDate.setDate(someDate.getDate() + numberOfDaysToAdd); \n</code>",
        "<code>dd/mm/yyyy</code>",
        "<code>var dd = someDate.getDate();\nvar mm = someDate.getMonth() + 1;\nvar y = someDate.getFullYear();\n\nvar someFormattedDate = dd + '/'+ mm + '/'+ y;\n</code>",
        "<code>setDate()</code>",
        "<code>setDate</code>",
        "<code>Date.prototype.addDays = function(days) {\n    this.setDate(this.getDate() + parseInt(days));\n    return this;\n};\n</code>",
        "<code>var currentDate = new Date();\n// to add 4 days to current date\ncurrentDate.addDays(4);\n</code>",
        "<code>function addDays(theDate, days) {\n    return new Date(theDate.getTime() + days*24*60*60*1000);\n}\n\nvar newDate = addDays(new Date(), 5);\n</code>",
        "<code>    var myDate = new Date(new Date().getTime()+(5*24*60*60*1000));\n</code>",
        "<code>Date.prototype.addDays = function(days) {\n    this.setDate(this.getDate() + parseInt(days));\n    return this;\n};\n</code>",
        "<code>moment.js</code>",
        "<code>$ npm i --save moment</code>",
        "<code>bower install --save moment</code>",
        "<code>var date = moment()\n            .add(2,'d') //replace 2 with number of days you want to add\n            .toDate(); //convert it to a Javascript Date Object if you like\n</code>",
        "<code>Moment.js</code>",
        "<code>40kb</code>",
        "<code>var dayOffset = 20;\nvar millisecondOffset = dayOffset * 24 * 60 * 60 * 1000;\ndecember.setTime(december.getTime() + millisecondOffset); \n</code>",
        "<code>var someDate = new Date('2014-05-14');\r\nsomeDate.setDate(someDate.getDate() + 15); //number  of days to add, e.x. 15 days\r\nvar dateFormated = someDate.toISOString().substr(0,10);</code>",
        "<code>Date.prototype.addDays = function(days)\n{\n    var dat = new Date(this.valueOf() + days * 24 * 60 * 60 * 1000 );\n    return dat;\n}\n</code>",
        "<code>/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan &lt;stevenlevithan.com&gt;\n * MIT license\n *\n * Includes enhancements by Scott Trenda &lt;scott.trenda.net&gt;\n * and Kris Kowal &lt;cixar.com/~kris.kowal/&gt;\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nvar dateFormat = function () {\n    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n        timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n        timezoneClip = /[^-+\\dA-Z]/g,\n        pad = function (val, len) {\n            val = String(val);\n            len = len || 2;\n            while (val.length &lt; len) val = \"0\" + val;\n            return val;\n        };\n\n    // Regexes and supporting functions are cached through closure\n    return function (date, mask, utc) {\n        var dF = dateFormat;\n\n        // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n        if (arguments.length == 1 &amp;&amp; Object.prototype.toString.call(date) == \"[object String]\" &amp;&amp; !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        // Passing date through Date applies Date.parse, if necessary\n        date = date ? new Date(date) : new Date;\n        if (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n        mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n        // Allow setting the utc argument via the mask\n        if (mask.slice(0, 4) == \"UTC:\") {\n            mask = mask.slice(4);\n            utc = true;\n        }\n\n        var _ = utc ? \"getUTC\" : \"get\",\n            d = date[_ + \"Date\"](),\n            D = date[_ + \"Day\"](),\n            m = date[_ + \"Month\"](),\n            y = date[_ + \"FullYear\"](),\n            H = date[_ + \"Hours\"](),\n            M = date[_ + \"Minutes\"](),\n            s = date[_ + \"Seconds\"](),\n            L = date[_ + \"Milliseconds\"](),\n            o = utc ? 0 : date.getTimezoneOffset(),\n            flags = {\n                d:    d,\n                dd:   pad(d),\n                ddd:  dF.i18n.dayNames[D],\n                dddd: dF.i18n.dayNames[D + 7],\n                m:    m + 1,\n                mm:   pad(m + 1),\n                mmm:  dF.i18n.monthNames[m],\n                mmmm: dF.i18n.monthNames[m + 12],\n                yy:   String(y).slice(2),\n                yyyy: y,\n                h:    H % 12 || 12,\n                hh:   pad(H % 12 || 12),\n                H:    H,\n                HH:   pad(H),\n                M:    M,\n                MM:   pad(M),\n                s:    s,\n                ss:   pad(s),\n                l:    pad(L, 3),\n                L:    pad(L &gt; 99 ? Math.round(L / 10) : L),\n                t:    H &lt; 12 ? \"a\"  : \"p\",\n                tt:   H &lt; 12 ? \"am\" : \"pm\",\n                T:    H &lt; 12 ? \"A\"  : \"P\",\n                TT:   H &lt; 12 ? \"AM\" : \"PM\",\n                Z:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n                o:    (o &gt; 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n                S:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 &gt; 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\n            };\n\n        return mask.replace(token, function ($0) {\n            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n        });\n    };\n}();\n\n// Some common format strings\ndateFormat.masks = {\n    \"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n    shortDate:      \"m/d/yy\",\n    mediumDate:     \"mmm d, yyyy\",\n    longDate:       \"mmmm d, yyyy\",\n    fullDate:       \"dddd, mmmm d, yyyy\",\n    shortTime:      \"h:MM TT\",\n    mediumTime:     \"h:MM:ss TT\",\n    longTime:       \"h:MM:ss TT Z\",\n    isoDate:        \"yyyy-mm-dd\",\n    isoTime:        \"HH:MM:ss\",\n    isoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n    ],\n    monthNames: [\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ]\n};\n\n// For convenience...\nDate.prototype.format = function (mask, utc) {\n    return dateFormat(this, mask, utc);\n};\n</code>",
        "<code>function addDays(n){\r\n    var t = new Date();\r\n    t.setDate(t.getDate() + n); \r\n    var month = \"0\"+(t.getMonth()+1);\r\n    var date = \"0\"+t.getDate();\r\n    month = month.slice(-2);\r\n    date = date.slice(-2);\r\n     var date = date +\"/\"+month +\"/\"+t.getFullYear();\r\n    alert(date);\r\n}\r\n\r\naddDays(5);</code>",
        "<code>var n=5; //number of days to add. \nvar today=new Date(); //Today's Date\nvar requiredDate=new Date(today.getFullYear(),today.getMonth(),today.getDate()+n)\n</code>",
        "<code>new Date(nYear, nMonth, nDate);</code>",
        "<code>dDate</code>",
        "<code>var dDate = new Date(2012, 0, 34);   // the result is 3 Feb 2012</code>",
        "<code>    function DaysOfMonth(nYear, nMonth) {\n        switch (nMonth) {\n            case 0:     // January\n                return 31; break;\n            case 1:     // February\n                if ((nYear % 4) == 0) {\n                    return 29;\n                }\n                else {\n                    return 28;\n                };\n                break;\n            case 2:     // March\n                return 31; break;\n            case 3:     // April\n                return 30; break;\n            case 4:     // May\n                return 31; break;\n            case 5:     // June\n                return 30; break;\n            case 6:     // July\n                return 31; break;\n            case 7:     // August\n                return 31; break;\n            case 8:     // September\n                return 30; break;\n            case 9:     // October\n                return 31; break;\n            case 10:     // November\n                return 30; break;\n            case 11:     // December\n                return 31; break;\n        }\n    };\n\n    function SkipDate(dDate, skipDays) {\n        var nYear = dDate.getFullYear();\n        var nMonth = dDate.getMonth();\n        var nDate = dDate.getDate();\n        var remainDays = skipDays;\n        var dRunDate = dDate;\n\n        while (remainDays &gt; 0) {\n            remainDays_month = DaysOfMonth(nYear, nMonth) - nDate;\n            if (remainDays &gt; remainDays_month) {\n                remainDays = remainDays - remainDays_month - 1;\n                nDate = 1;\n                if (nMonth &lt; 11) { nMonth = nMonth + 1; }\n                else {\n                    nMonth = 0;\n                    nYear = nYear + 1;\n                };\n            }\n            else {\n                nDate = nDate + remainDays;\n                remainDays = 0;\n            };\n            dRunDate = Date(nYear, nMonth, nDate);\n        }\n        return new Date(nYear, nMonth, nDate);\n    };\n</code>",
        "<code>function calduedate(ndays){\n\n    var newdt = new Date(); var chrday; var chrmnth;\n    newdt.setDate(newdt.getDate() + parseInt(ndays));\n\n    var newdate = newdt.getFullYear();\n    if(newdt.getMonth() &lt; 10){\n        newdate = newdate+'-'+'0'+newdt.getMonth();\n    }else{\n        newdate = newdate+'-'+newdt.getMonth();\n    }\n    if(newdt.getDate() &lt; 10){\n        newdate = newdate+'-'+'0'+newdt.getDate();\n    }else{\n        newdate = newdate+'-'+newdt.getDate();\n    }\n\n    alert(\"newdate=\"+newdate);\n\n}\n</code>",
        "<code>var newDay = timeSolver.add(new Date(),5,\"day\");\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "bower",
        "semantic-versioning"
      ],
      "creation_date": 1380203437,
      "body_markdown": "Bower enables me to specify version requirements for packages using the following syntax:\r\n\r\n    &quot;dependencies&quot;: {\r\n      &quot;&lt;name&gt;&quot;: &quot;&lt;version&gt;&quot;,\r\n    },\r\n\r\nBut I have not been able to find what is the syntax to use for the `&lt;version&gt;`. I know that I can specify versions to be: \r\n\r\n* greater than a certain version with `&quot;&gt;1.0.0&quot;`\r\n* greater than or equal to a version: `&quot;&gt;=1.0.0&quot;`\r\n* or in some range: `&quot;1.0.0 - 2.0.0&quot;`. \r\n\r\nI also know that there is a common version syntax containing the tilde: `&quot;~1.0.0&quot;`. But I am not sure what it means and whether it is the same as `&quot;=1.0.0&quot;`.\r\n\r\nI am also interested to know whether I am able to specify multiple non-consecutive versions, such as exactly `1.0.3` plus versions greater than `1.5.0`, etc...",
      "last_edit_date": 1478226807,
      "up_vote_count": 252,
      "link": "https://stackoverflow.com/questions/19030170/what-is-the-bower-and-npm-version-syntax",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1386283600,
          "answer_id": 20412378,
          "path": "stack.bower.answer",
          "score": 319,
          "up_vote_count": 320,
          "is_accepted": true,
          "last_activity_date": 1461743183,
          "last_edit_date": 1461743183,
          "body_markdown": "In a nutshell, the syntax for Bower version numbers (and NPM&#39;s) is called SemVer, which is short for &#39;Semantic Versioning&#39;. You can find documentation for the detailed syntax of SemVer as used in Bower and NPM on the API for [the semver parser within Node/npm][1]. You can learn more about the underlying spec (which does *not* mention `~` or other syntax details) at [semver.org](http://semver.org/).\r\n\r\nThere&#39;s a [super-handy visual semver calculator][2] you can play with, making all of this much easier to grok and test.\r\n\r\nSemVer isn&#39;t just a syntax! It has some pretty interesting things to say about the right ways to publish API&#39;s, which will help to understand what the syntax means. Crucially: \r\n\r\n&gt; Once you identify your public API, you communicate changes to it with specific increments to your version number. **Consider a version format of X.Y.Z (Major.Minor.Patch)**. Bug fixes not affecting the API increment the patch version, backwards compatible API additions/changes increment the minor version, and backwards incompatible API changes increment the major version.\r\n\r\nSo, your specific question about `~` relates to that Major.Minor.Patch schema. (As does the related caret operator `^`.) You can use `~` to narrow the range of versions you&#39;re willing to accept to either:\r\n\r\n* subsequent **patch-level** changes to the same minor version (_&quot;bug fixes not affecting the API&quot;_), or:\r\n* subsequent **minor-level** changes to the same major version (_&quot;backwards compatible API additions/changes&quot;_)\r\n\r\nFor example: to indicate you&#39;ll take any subsequent patch-level changes on the 1.2.x tree, starting with 1.2.0, but less than 1.3.0, you could use:\r\n\r\n    &quot;angular&quot;: &quot;~1.2&quot;\r\n      or:\r\n    &quot;angular&quot;: &quot;~1.2.0&quot;\r\n\r\nThis also gets you the same results as using the `.x` syntax: \r\n\r\n    &quot;angular&quot;: &quot;1.2.x&quot;\r\n\r\nBut, you can use the tilde/`~` syntax to be even more specific: if you&#39;re only willing to accept patch-level changes _starting with 1.2.4_, but still less than 1.3.0, you&#39;d use:\r\n\r\n    &quot;angular&quot;: &quot;~1.2.4&quot;\r\n\r\nMoving left, towards the _major_ version, if you use...\r\n\r\n    &quot;angular&quot;: &quot;~1&quot;\r\n\r\n... it&#39;s the same as...\r\n\r\n    &quot;angular&quot;: &quot;1.x&quot;\r\n      or:\r\n    &quot;angular&quot;: &quot;^1.0.0&quot;\r\n\r\n...and matches any minor- or patch-level changes above 1.0.0, and less than 2.0:\r\n\r\nNote that last variation above: it&#39;s called a *&#39;caret range&#39;*. The caret looks an awful lot like a `&gt;`, so you&#39;d be excused for thinking it means &quot;any version _greater than_ 1.0.0&quot;. (I&#39;ve certainly slipped on that.) Nope!\r\n\r\nCaret ranges are basically used to say that you care _only_ about the left-most significant digit - usually the major version - and that you&#39;ll permit any minor- or patch-level changes that don&#39;t affect that left-most digit. Yet, unlike a tilde range that specifies a major version, caret ranges let you specify a precise minor/patch starting point. So, while `^1.0.0 === ~1`, a caret range such as `^1.2.3` lets you say you&#39;ll take any changes `&gt;=1.2.3 &amp;&amp; &lt;2.0.0`. You couldn&#39;t do that with a tilde range.\r\n\r\nThat all seems confusing at first, when you look at it up-close. But zoom out for a sec, and think about it this way: ***the caret simply lets you say that you&#39;re most concerned about whatever significant digit is left-most. The tilde lets you say you&#39;re most concerned about whichever digit is right-most.*** The rest is detail.\r\n\r\nIt&#39;s the expressive power of the tilde and the caret that explains why people use them much more than the simpler `.x` syntax: they simply let you do more. That&#39;s why you&#39;ll see the tilde used often even where `.x` would serve. As an example, see npm itself: its own package.json file includes lots of dependencies in `~2.4.0` format, rather than the `2.4.x` format it _could_ use. By sticking to `~`, the syntax is consistent all the way down a list of 70+ versioned dependencies, regardless of which beginning patch number is acceptable. \r\n\r\nAnyway, there&#39;s still more to SemVer, but I won&#39;t try to detail it all here. Check it out on the [node semver package&#39;s readme][1]. And **be sure to use the [semantic versioning calculator][2]** while you&#39;re practicing and trying to get your head around how SemVer works. \r\n\r\n******\r\n\r\nRE: Non-Consecutive Version Numbers: OP&#39;s final question seems to be about specifying non-consecutive version numbers/ranges (if I have edited it fairly). Yes, you can do that, using the common double-pipe &quot;or&quot; operator: `||`. Like so:\r\n\r\n    &quot;angular&quot;: &quot;1.2 &lt;= 1.2.9 || &gt;2.0.0&quot;\r\n\r\n\r\n  [1]: https://github.com/isaacs/node-semver/\r\n  [2]: http://semver.npmjs.com/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1402321336,
          "answer_id": 24121575,
          "path": "stack.bower.answer",
          "score": 72,
          "up_vote_count": 72,
          "is_accepted": false,
          "last_activity_date": 1402343623,
          "last_edit_date": 1402343623,
          "body_markdown": "Bower uses [semver syntax](https://github.com/isaacs/node-semver/), but here are a few quick examples:\r\n\r\nYou can install a specific version:\r\n\r\n    $ bower install jquery#1.11.1\r\n\r\nYou can use ~ to specify &#39;any version that starts with this&#39;:\r\n\r\n    $ bower install jquery#~1.11\r\n\r\nYou can specify multiple version requirements together:\r\n\r\n    $ bower install &quot;jquery#&lt;2.0 &gt;1.10&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438825764,
          "answer_id": 31845544,
          "path": "stack.bower.answer",
          "score": 125,
          "up_vote_count": 125,
          "is_accepted": false,
          "last_activity_date": 1438825764,
          "body_markdown": "Based on [semver](https://github.com/npm/node-semver), you can use\r\n\r\n - **Hyphen Ranges X.Y.Z - A.B.C**\r\n```\r\n1.2.3-2.3.4\r\n```\r\nIndicates *&gt;=1.2.3 &lt;=2.3.4*\r\n\r\n - **X-Ranges** \r\n```\r\n1.2.x\r\n1.X \r\n1.2.* \r\n```\r\n\r\n - **Tilde Ranges**\r\n```\r\n~1.2.3\r\n~1.2\r\n```\r\n*Indicates allowing patch-level changes or minor version changes.*\r\n\r\n - **Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4**\r\n\r\n  *Allows changes that do not modify the left-most non-zero digit in the [major, minor, patch] tuple*\r\n\r\n  - `^1.2.x` (means &gt;=1.2.0 &lt;2.0.0)\r\n  - `^0.0.x` (means &gt;=0.0.0 &lt;0.1.0)\r\n  - `^0.0` (means &gt;=0.0.0 &lt;0.1.0)\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1445886255,
          "answer_id": 33353607,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1445886255,
          "body_markdown": "You can also use the `latest` keyword to install the most recent version available:\r\n\r\n      &quot;dependencies&quot;: {\r\n        &quot;fontawesome&quot;: &quot;latest&quot;\r\n      }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1455211722,
          "answer_id": 35346099,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1455211722,
          "body_markdown": "If there is no patch number, `~` is equivalent to appending `.x` to the non-tilde version.  If there is a patch number, `~` allows all patch numbers &gt;= the specified one.\r\n\r\n    ~1     := 1.x\r\n    ~1.2   := 1.2.x\r\n    ~1.2.3 := (&gt;=1.2.3 &lt;1.3.0)\r\n\r\n\r\nI don&#39;t have enough points to comment on the accepted answer, but some of the tilde information is at odds with the linked semver documentation:  `&quot;angular&quot;: &quot;~1.2&quot;` will **not** match 1.3, 1.4, 1.4.9.  Also `&quot;angular&quot;: &quot;~1&quot;` and `&quot;angular&quot;: &quot;~1.0&quot;` are **not** equivalent.  This can be verified with the [npm semver calculator][1].\r\n\r\n  [1]: http://semver.npmjs.com/"
        }
      ],
      "title": "What is the bower (and npm) version syntax?",
      "view_count": 100438,
      "answer_count": 5,
      "code_snippet": [
        "<code>\"dependencies\": {\n  \"&lt;name&gt;\": \"&lt;version&gt;\",\n},\n</code>",
        "<code>&lt;version&gt;</code>",
        "<code>\"&gt;1.0.0\"</code>",
        "<code>\"&gt;=1.0.0\"</code>",
        "<code>\"1.0.0 - 2.0.0\"</code>",
        "<code>\"~1.0.0\"</code>",
        "<code>\"=1.0.0\"</code>",
        "<code>1.0.3</code>",
        "<code>1.5.0</code>",
        "<code>~</code>",
        "<code>~</code>",
        "<code>^</code>",
        "<code>~</code>",
        "<code>\"angular\": \"~1.2\"\n  or:\n\"angular\": \"~1.2.0\"\n</code>",
        "<code>.x</code>",
        "<code>\"angular\": \"1.2.x\"\n</code>",
        "<code>~</code>",
        "<code>\"angular\": \"~1.2.4\"\n</code>",
        "<code>\"angular\": \"~1\"\n</code>",
        "<code>\"angular\": \"1.x\"\n  or:\n\"angular\": \"^1.0.0\"\n</code>",
        "<code>&gt;</code>",
        "<code>^1.0.0 === ~1</code>",
        "<code>^1.2.3</code>",
        "<code>&gt;=1.2.3 &amp;&amp; &lt;2.0.0</code>",
        "<code>.x</code>",
        "<code>.x</code>",
        "<code>~2.4.0</code>",
        "<code>2.4.x</code>",
        "<code>~</code>",
        "<code>||</code>",
        "<code>\"angular\": \"1.2 &lt;= 1.2.9 || &gt;2.0.0\"\n</code>",
        "<code>~</code>",
        "<code>~1.2.3</code>",
        "<code>&gt;=1.2.3 &lt;1.3.0</code>",
        "<code>'1.1.x' === '&gt;=1.1.0' === '~1.1.0'</code>",
        "<code>'&gt;=1.1.4'</code>",
        "<code>'~1.1.4'</code>",
        "<code>'1.1.x'</code>",
        "<code>'~2.7.3'</code>",
        "<code>~</code>",
        "<code>\"angular\": \"~1.2\"</code>",
        "<code>\"angular\": \"~1\"</code>",
        "<code>\"angular\": \"~1.0\"</code>",
        "<code>\n1.2.3-2.3.4\n</code>",
        "<code>\n1.2.x\n1.X \n1.2.*\n</code>",
        "<code>\n~1.2.3\n~1.2\n</code>",
        "<code>^1.2.x</code>",
        "<code>^0.0.x</code>",
        "<code>^0.0</code>",
        "<code>$ bower install jquery#1.11.1\n</code>",
        "<code>$ bower install jquery#~1.11\n</code>",
        "<code>$ bower install \"jquery#&lt;2.0 &gt;1.10\"\n</code>",
        "<code>latest</code>",
        "<code>  \"dependencies\": {\n    \"fontawesome\": \"latest\"\n  }\n</code>",
        "<code>\"*\" := &gt;=0.0.0</code>",
        "<code>~</code>",
        "<code>.x</code>",
        "<code>~</code>",
        "<code>~1     := 1.x\n~1.2   := 1.2.x\n~1.2.3 := (&gt;=1.2.3 &lt;1.3.0)\n</code>",
        "<code>\"angular\": \"~1.2\"</code>",
        "<code>\"angular\": \"~1\"</code>",
        "<code>\"angular\": \"~1.0\"</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "jquery",
        "amd",
        "webpack"
      ],
      "creation_date": 1426007174,
      "body_markdown": "I&#39;m using Webpack in my application, in which I create two entry points - bundle.js for all my JavaScript files/codes, and vendors.js for all libraries like jQuery and React. What do I do in order to use plugins which have jQuery as their dependencies and I want to have them also in vendors.js? What if those plugins have multiple dependencies?\r\n\r\nCurrently I&#39;m trying to use this jQuery plugin here - https://github.com/mbklein/jquery-elastic. The Webpack documentation mentions providePlugin and imports-loader. I used providePlugin, but still the jQuery object is not available. Here is how my webpack.config.js looks like-\r\n\r\n    var webpack = require(&#39;webpack&#39;);\r\n    var bower_dir = __dirname + &#39;/bower_components&#39;;\r\n    var node_dir = __dirname + &#39;/node_modules&#39;;\r\n    var lib_dir = __dirname + &#39;/public/js/libs&#39;;\r\n\r\n    var config = {\r\n        addVendor: function (name, path) {\r\n            this.resolve.alias[name] = path;\r\n            this.module.noParse.push(new RegExp(path));\r\n        },\r\n        plugins: [\r\n            new webpack.ProvidePlugin({\r\n                $: &quot;jquery&quot;,\r\n                jquery: &quot;jQuery&quot;,\r\n                &quot;windows.jQuery&quot;: &quot;jquery&quot;\r\n            }),\r\n            new webpack.optimize.CommonsChunkPlugin(&#39;vendors&#39;, &#39;vendors.js&#39;, Infinity)\r\n        ],\r\n        entry: {\r\n            app: [&#39;./public/js/main.js&#39;],\r\n            vendors: [&#39;react&#39;,&#39;jquery&#39;]\r\n        },\r\n        resolve: {\r\n            alias: {\r\n                &#39;jquery&#39;: node_dir + &#39;/jquery/dist/jquery.js&#39;,\r\n                &#39;jquery.elastic&#39;: lib_dir + &#39;/jquery.elastic.source.js&#39;\r\n            }\r\n        },\r\n        output: {\r\n            path: &#39;./public/js&#39;,\r\n            filename: &#39;bundle.js&#39;\r\n        },\r\n        module: {\r\n            loaders: [\r\n                { test: /\\.js$/, loader: &#39;jsx-loader&#39; },\r\n                { test: /\\.jquery.elastic.js$/, loader: &#39;imports-loader&#39; }\r\n            ]\r\n        }\r\n    };\r\n    config.addVendor(&#39;react&#39;, bower_dir + &#39;/react/react.min.js&#39;);\r\n    config.addVendor(&#39;jquery&#39;, node_dir + &#39;/jquery/dist/jquery.js&#39;);\r\n    config.addVendor(&#39;jquery.elastic&#39;, lib_dir +&#39;/jquery.elastic.source.js&#39;);\r\n\r\n    module.exports = config;\r\n\r\nBut in spite of this, it still throws an error in the browser console:\r\n\r\n&gt; Uncaught ReferenceError: jQuery is not defined\r\n\r\nSimilarly, when I use the imports-loader, it throws an error,\r\n\r\n&gt; require is not defined&#39;\r\n\r\nin this line:\r\n\r\n    var jQuery = require(&quot;jquery&quot;)\r\n\r\nHowever, I could use the same plugin when I don&#39;t add it to my vendors.js file and instead required it in the normal AMD way as how I include my other JavaScript code files, like-\r\n\r\n    define(\r\n    [\r\n        &#39;jquery&#39;,\r\n        &#39;react&#39;,\r\n        &#39;../../common-functions&#39;,\r\n        &#39;../../libs/jquery.elastic.source&#39;\r\n    ],function($,React,commonFunctions){\r\n        $(&quot;#myInput&quot;).elastic() //It works\r\n\r\n    });\r\n\r\nBut this is not what I want to do, as this would mean that jquery.elastic.source.js is bundled along with my JavaScript code in bundle.js, and I want all my jQuery plugins to be in the vendors.js bundle. So how do I go about achieving this?\r\n",
      "last_edit_date": 1485097683,
      "up_vote_count": 305,
      "link": "https://stackoverflow.com/questions/28969861/managing-jquery-plugin-dependency-in-webpack",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1426084570,
          "answer_id": 28989476,
          "path": "stack.bower.answer",
          "score": 606,
          "up_vote_count": 610,
          "is_accepted": true,
          "last_activity_date": 1488177912,
          "last_edit_date": 1488177912,
          "body_markdown": "You&#39;ve mixed different approaches how to include legacy vendor modules. This is how I&#39;d tackle it:\r\n\r\n## 1. Prefer unminified CommonJS/AMD over `dist`\r\n\r\nMost modules link the `dist` version in the `main` field of their `package.json`. While this is useful for most developers, for webpack it is better to alias the `src` version because this way webpack is able to optimize dependencies better (e.g. when using the [`DedupePlugin`](http://webpack.github.io/docs/list-of-plugins.html#dedupeplugin)).\r\n\r\n    // webpack.config.js\r\n    \r\n    module.exports = {\r\n        ...\r\n        resolve: {\r\n            alias: {\r\n                jquery: &quot;jquery/src/jquery&quot;\r\n            }\r\n        }\r\n    };\r\n\r\nHowever, in most cases the `dist` version works just fine as well.\r\n\r\n---\r\n\r\n## 2. Use the `ProvidePlugin` to inject implicit globals\r\n\r\nMost legacy modules rely on the presence of specific globals, like jQuery plugins do on `$` or `jQuery`. In this scenario you can configure webpack, to prepend `var $ = require(&quot;jquery&quot;)` everytime it encounters the global `$` identifier.\r\n\r\n    var webpack = require(&quot;webpack&quot;);\r\n    \r\n        ...\r\n        \r\n        plugins: [\r\n            new webpack.ProvidePlugin({\r\n                $: &quot;jquery&quot;,\r\n                jQuery: &quot;jquery&quot;\r\n            })\r\n        ]\r\n\r\n---\r\n\r\n## 3. Use the [imports-loader](https://github.com/webpack/imports-loader) to configure `this`\r\n\r\nSome legacy modules rely on `this` being the `window` object. This becomes a problem when the module is executed in a CommonJS context where `this` equals `module.exports`. In this case you can override `this` with the [imports-loader](https://github.com/webpack/imports-loader).\r\n\r\nRun `npm i imports-loader --save-dev` and then\r\n\r\n    module: {\r\n        loaders: [\r\n            {\r\n                test: /[\\/\\\\]node_modules[\\/\\\\]some-module[\\/\\\\]index\\.js$/,\r\n                loader: &quot;imports-loader?this=&gt;window&quot;\r\n            }\r\n        ]\r\n    }\r\n\r\nThe imports-loader can also be used to manually inject variables of all kinds. But most of the time the `ProvidePlugin` is more useful when it comes to implicit globals.\r\n\r\n---\r\n\r\n## 4. Use the [imports-loader](https://github.com/webpack/imports-loader) to disable AMD\r\n\r\nThere are modules that support different module styles, like AMD, CommonJS and legacy. However, most of the time they first check for `define` and then use some quirky code to export properties. In these cases, it could help to force the CommonJS path by setting `define = false`.\r\n\r\n\r\n    module: {\r\n        loaders: [\r\n            {\r\n                test: /[\\/\\\\]node_modules[\\/\\\\]some-module[\\/\\\\]index\\.js$/,\r\n                loader: &quot;imports-loader?define=&gt;false&quot;\r\n            }\r\n        ]\r\n    }\r\n\r\n---\r\n\r\n## 5. Use the [script-loader](https://github.com/webpack/script-loader) to globally import scripts\r\n\r\nIf you don&#39;t care about global variables and just want legacy scripts to work, you can also use the script-loader. It executes the module in a global context, just as if you had included them via the `&lt;script&gt;` tag.\r\n\r\n---\r\n\r\n## 6. Use `noParse` to include large dists\r\n\r\nWhen there is no AMD/CommonJS version of the module and you want to include the `dist`, you can flag this module as `noParse`. Then webpack will just include the module without parsing it, which can be used to improve the build time. This means that any feature requiring the [AST](http://en.wikipedia.org/wiki/Abstract_syntax_tree), like the `ProvidePlugin`, will not work.\r\n\r\n\r\n    module: {\r\n        noParse: [\r\n            /[\\/\\\\]node_modules[\\/\\\\]angular[\\/\\\\]angular\\.js$/\r\n        ]\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1432055504,
          "answer_id": 30331983,
          "path": "stack.bower.answer",
          "score": 48,
          "up_vote_count": 51,
          "is_accepted": false,
          "last_activity_date": 1432055504,
          "body_markdown": "I don&#39;t know if I understand very well what you are trying to do, but I had to use jQuery plugins that required jQuery to be in the global context (window) and I put the following in my `entry.js`:\r\n\r\n    var $ = require(&#39;jquery&#39;);\r\n    window.jQuery = $;\r\n    window.$ = $;\r\n\r\n\r\nThe I just have to require wherever i want the `jqueryplugin.min.js` and `window.$` is extended with the plugin as expected."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1450437066,
          "answer_id": 34354301,
          "path": "stack.bower.answer",
          "score": 63,
          "up_vote_count": 65,
          "is_accepted": false,
          "last_activity_date": 1506962088,
          "last_edit_date": 1506962088,
          "body_markdown": "For global access to jquery then several options exist. In my most recent webpack project, I wanted global access to jquery so I added the following to my plugins declarations:\r\n\r\n     plugins: [\r\n        new webpack.ProvidePlugin({\r\n          $: &quot;jquery&quot;,\r\n          jQuery: &quot;jquery&quot;\r\n        })\r\n      ]\r\n\r\nThis then means that jquery is accessible from within the JavaScript source code via global references $ and jQuery.\r\n\r\nOf course, you need to have also installed jquery via npm:\r\n\r\n    $ npm i jquery --save\r\n\r\nFor a working example of this approach please feel free to fork my app on [github][1]\r\n\r\n\r\n  [1]: https://github.com/arcseldon/react-babel-webpack-starter-app"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1472139217,
          "answer_id": 39149318,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1475808051,
          "last_edit_date": 1475808051,
          "body_markdown": "Add this to your plugins array in webpack.config.js\r\n\r\n    new webpack.ProvidePlugin({\r\n        &#39;window.jQuery&#39;: &#39;jquery&#39;,\r\n        &#39;window.$&#39;: &#39;jquery&#39;,\r\n    })\r\n\r\nthen require jquery normally \r\n\r\n    require(&#39;jquery&#39;);\r\n\r\nIf pain persists getting other scripts to see it, try explicitly placing it in the global context via (in the entry js)\r\n\r\n    window.$ = jQuery;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1495565755,
          "answer_id": 44142944,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1495565755,
          "body_markdown": "The best solution I&#39;ve found was:\r\n\r\nhttps://github.com/angular/angular-cli/issues/5139#issuecomment-283634059\r\n\r\nBasically, you need to include a dummy variable on typings.d.ts, remove any &quot;import * as $ from &#39;jquery&quot; from your code, and then manually add a tag to jQuery script to your SPA html. This way, webpack won&#39;t be in your way, and you should be able to access the same global jQuery variable in all your scripts."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1501449161,
          "answer_id": 45404761,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1502218469,
          "last_edit_date": 1502218469,
          "body_markdown": "This works in **webpack 3:** \r\n\r\nin the webpack.config.babel.js file:\r\n\r\n    resolve: {\r\n    \talias: {\r\n    \t\t jquery: &quot;jquery/src/jquery&quot;\r\n    \t},\r\n     ....\r\n    }\r\n\r\nAnd use **ProvidePlugin**\r\n\r\n    new webpack.ProvidePlugin({\r\n    \t\t&#39;$&#39;: &#39;jquery&#39;,\r\n    \t\t&#39;jQuery&#39;: &#39;jquery&#39;,\r\n    \t})\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1504139205,
          "answer_id": 45971518,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1504139205,
          "body_markdown": "I tried some of the supplied answers but none of them seemed to work. Then I tried this: \r\n\r\n    new webpack.ProvidePlugin({\r\n        &#39;window.jQuery&#39;    : &#39;jquery&#39;,\r\n        &#39;window.$&#39;         : &#39;jquery&#39;,\r\n        &#39;jQuery&#39;           : &#39;jquery&#39;,\r\n        &#39;$&#39;                : &#39;jquery&#39;\r\n    });\r\n\r\n\r\nSeems to work no matter which version I&#39;m using"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1506751145,
          "answer_id": 46500027,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1506755018,
          "last_edit_date": 1506755018,
          "body_markdown": "Edit: Sometimes you want to use webpack simply as a module bundler for a simple web project - to keep your own code organized. The following solution is for those who just want an external library to work as expected inside their modules - without using a lot of time diving into webpack setups. (Edited after -1)\n\nQuick and simple (es6) solution if you’re still struggling or want to avoid externals config / additional webpack plugin config:\n\n    &lt;script src=&quot;cdn/jquery.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;cdn/underscore.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;etc.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;bundle.js&quot;&gt;&lt;/script&gt;\n\ninside a module:\n\n    const { jQuery: $, Underscore: _, etc } = window;\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1508949585,
          "answer_id": 46937798,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1512142728,
          "last_edit_date": 1512142728,
          "body_markdown": "I got things working nicely while exposing `$` and `jQuery` as global variables with Webpack 3.8.1 and the following.\r\n\r\nInstall jQuery as a project dependency. You can omit `@3.2.1` to install the latest version or specify another version.\r\n\r\n    npm install --save jquery@3.2.1\r\n\r\nInstall `expose-loader` as a development dependency if not installed already.\r\n\r\n    npm install expose-loader --save-dev\r\n\r\nConfigure Webpack to load and expose jQuery for us.\r\n\r\n    // webpack.config.js\r\n    const webpack = require(&#39;webpack&#39;)\r\n    \r\n    module.exports = {\r\n      entry: [\r\n        // entry bits\r\n      ],\r\n      output: {\r\n        // output bits\r\n      },\r\n      module: {\r\n        rules: [\r\n          // any other rules\r\n          {\r\n            // Exposes jQuery for use outside Webpack build\r\n            test: require.resolve(&#39;jquery&#39;),\r\n            use: [{\r\n              loader: &#39;expose-loader&#39;,\r\n              options: &#39;jQuery&#39;\r\n            },{\r\n              loader: &#39;expose-loader&#39;,\r\n              options: &#39;$&#39;\r\n            }]\r\n          }\r\n        ]\r\n      },\r\n      plugins: [\r\n        // Provides jQuery for other JS bundled with Webpack\r\n        new webpack.ProvidePlugin({\r\n          $: &#39;jquery&#39;,\r\n          jQuery: &#39;jquery&#39;\r\n        })\r\n      ]\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1510845324,
          "answer_id": 47333184,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1511216366,
          "last_edit_date": 1511216366,
          "body_markdown": "This works for me on the webpack.config.js\r\n\r\n        new webpack.ProvidePlugin({\r\n            $: &#39;jquery&#39;,\r\n            jQuery: &#39;jquery&#39;,\r\n            &#39;window.jQuery&#39;: &#39;jquery&#39;\r\n        }),\r\n\r\nin another javascript or into HTML add:\r\n\r\n    global.jQuery = require(&#39;jquery&#39;);\r\n\r\n"
        }
      ],
      "title": "Managing jQuery plugin dependency in webpack",
      "view_count": 194174,
      "answer_count": 10,
      "code_snippet": [
        "<code>var webpack = require('webpack');\nvar bower_dir = __dirname + '/bower_components';\nvar node_dir = __dirname + '/node_modules';\nvar lib_dir = __dirname + '/public/js/libs';\n\nvar config = {\n    addVendor: function (name, path) {\n        this.resolve.alias[name] = path;\n        this.module.noParse.push(new RegExp(path));\n    },\n    plugins: [\n        new webpack.ProvidePlugin({\n            $: \"jquery\",\n            jquery: \"jQuery\",\n            \"windows.jQuery\": \"jquery\"\n        }),\n        new webpack.optimize.CommonsChunkPlugin('vendors', 'vendors.js', Infinity)\n    ],\n    entry: {\n        app: ['./public/js/main.js'],\n        vendors: ['react','jquery']\n    },\n    resolve: {\n        alias: {\n            'jquery': node_dir + '/jquery/dist/jquery.js',\n            'jquery.elastic': lib_dir + '/jquery.elastic.source.js'\n        }\n    },\n    output: {\n        path: './public/js',\n        filename: 'bundle.js'\n    },\n    module: {\n        loaders: [\n            { test: /\\.js$/, loader: 'jsx-loader' },\n            { test: /\\.jquery.elastic.js$/, loader: 'imports-loader' }\n        ]\n    }\n};\nconfig.addVendor('react', bower_dir + '/react/react.min.js');\nconfig.addVendor('jquery', node_dir + '/jquery/dist/jquery.js');\nconfig.addVendor('jquery.elastic', lib_dir +'/jquery.elastic.source.js');\n\nmodule.exports = config;\n</code>",
        "<code>var jQuery = require(\"jquery\")\n</code>",
        "<code>define(\n[\n    'jquery',\n    'react',\n    '../../common-functions',\n    '../../libs/jquery.elastic.source'\n],function($,React,commonFunctions){\n    $(\"#myInput\").elastic() //It works\n\n});\n</code>",
        "<code>dist</code>",
        "<code>dist</code>",
        "<code>main</code>",
        "<code>package.json</code>",
        "<code>src</code>",
        "<code>DedupePlugin</code>",
        "<code>// webpack.config.js\n\nmodule.exports = {\n    ...\n    resolve: {\n        alias: {\n            jquery: \"jquery/src/jquery\"\n        }\n    }\n};\n</code>",
        "<code>dist</code>",
        "<code>ProvidePlugin</code>",
        "<code>$</code>",
        "<code>jQuery</code>",
        "<code>var $ = require(\"jquery\")</code>",
        "<code>$</code>",
        "<code>var webpack = require(\"webpack\");\n\n    ...\n\n    plugins: [\n        new webpack.ProvidePlugin({\n            $: \"jquery\",\n            jQuery: \"jquery\"\n        })\n    ]\n</code>",
        "<code>this</code>",
        "<code>this</code>",
        "<code>window</code>",
        "<code>this</code>",
        "<code>module.exports</code>",
        "<code>this</code>",
        "<code>npm i imports-loader --save-dev</code>",
        "<code>module: {\n    loaders: [\n        {\n            test: /[\\/\\\\]node_modules[\\/\\\\]some-module[\\/\\\\]index\\.js$/,\n            loader: \"imports-loader?this=&gt;window\"\n        }\n    ]\n}\n</code>",
        "<code>ProvidePlugin</code>",
        "<code>define</code>",
        "<code>define = false</code>",
        "<code>module: {\n    loaders: [\n        {\n            test: /[\\/\\\\]node_modules[\\/\\\\]some-module[\\/\\\\]index\\.js$/,\n            loader: \"imports-loader?define=&gt;false\"\n        }\n    ]\n}\n</code>",
        "<code>&lt;script&gt;</code>",
        "<code>noParse</code>",
        "<code>dist</code>",
        "<code>noParse</code>",
        "<code>ProvidePlugin</code>",
        "<code>module: {\n    noParse: [\n        /[\\/\\\\]node_modules[\\/\\\\]angular[\\/\\\\]angular\\.js$/\n    ]\n}\n</code>",
        "<code>ProvidePlugin</code>",
        "<code>imports-loader</code>",
        "<code>jQuery</code>",
        "<code>\"module\": {     \"loaders\": [         {             test: require.resolve(\"jquery\"),             loader: \"expose?$!expose?jQuery\"         },</code>",
        "<code> plugins: [\n    new webpack.ProvidePlugin({\n      $: \"jquery\",\n      jQuery: \"jquery\"\n    })\n  ]\n</code>",
        "<code>$ npm i jquery --save\n</code>",
        "<code>ProvidePlugin</code>",
        "<code>./~/jQuery/dist/jquery.js There is another module with an equal name when case is ignored.</code>",
        "<code>./~/jquery/dist/jquery.js</code>",
        "<code>'window.jQuery': 'jquery'</code>",
        "<code>'window.$': 'jquery'</code>",
        "<code>entry.js</code>",
        "<code>var $ = require('jquery');\nwindow.jQuery = $;\nwindow.$ = $;\n</code>",
        "<code>jqueryplugin.min.js</code>",
        "<code>window.$</code>",
        "<code>new webpack.ProvidePlugin({\n    'window.jQuery': 'jquery',\n    'window.$': 'jquery',\n})\n</code>",
        "<code>require('jquery');\n</code>",
        "<code>window.$ = jQuery;\n</code>",
        "<code>resolve: {\n    alias: {\n         jquery: \"jquery/src/jquery\"\n    },\n ....\n}\n</code>",
        "<code>new webpack.ProvidePlugin({\n        '$': 'jquery',\n        'jQuery': 'jquery',\n    })\n</code>",
        "<code>new webpack.ProvidePlugin({\n    'window.jQuery'    : 'jquery',\n    'window.$'         : 'jquery',\n    'jQuery'           : 'jquery',\n    '$'                : 'jquery'\n});\n</code>",
        "<code>$</code>",
        "<code>$</code>",
        "<code>jQuery</code>",
        "<code>@3.2.1</code>",
        "<code>npm install --save jquery@3.2.1\n</code>",
        "<code>expose-loader</code>",
        "<code>npm install expose-loader --save-dev\n</code>",
        "<code>// webpack.config.js\nconst webpack = require('webpack')\n\nmodule.exports = {\n  entry: [\n    // entry bits\n  ],\n  output: {\n    // output bits\n  },\n  module: {\n    rules: [\n      // any other rules\n      {\n        // Exposes jQuery for use outside Webpack build\n        test: require.resolve('jquery'),\n        use: [{\n          loader: 'expose-loader',\n          options: 'jQuery'\n        },{\n          loader: 'expose-loader',\n          options: '$'\n        }]\n      }\n    ]\n  },\n  plugins: [\n    // Provides jQuery for other JS bundled with Webpack\n    new webpack.ProvidePlugin({\n      $: 'jquery',\n      jQuery: 'jquery'\n    })\n  ]\n}\n</code>",
        "<code>expose-loader</code>",
        "<code>npm install expose-loader --save-dev</code>",
        "<code>    new webpack.ProvidePlugin({\n        $: 'jquery',\n        jQuery: 'jquery',\n        'window.jQuery': 'jquery'\n    }),\n</code>",
        "<code>global.jQuery = require('jquery');\n</code>",
        "<code>&lt;script src=\"cdn/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"cdn/underscore.js\"&gt;&lt;/script&gt;\n&lt;script src=\"etc.js\"&gt;&lt;/script&gt;\n&lt;script src=\"bundle.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>const { jQuery: $, Underscore: _, etc } = window;\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "windows",
        "node.js",
        "module",
        "require",
        "npm"
      ],
      "creation_date": 1331050879,
      "body_markdown": "I am learning nodejs at the moment on Windows. Several modules are installed globally with npm.cmd, and nodejs failed to find the installed modules. Take jade for example,\r\n\r\n    npm install jade -g\r\n\r\nJade is installed in directory `&quot;C:\\Program Files (x86)\\nodejs\\node_modules&quot;`, but the following code will fail with a `&quot;Cannot find module &#39;jade&#39;&quot;` error,\r\n\r\n    var jade = require(&#39;jade&#39;);\r\n\r\nHowever, the code will run successfully when jade is locally installed (without -g option in npm). I don&#39;t want to use locally-installed modules, it&#39;s a waste of disk space for me, can someone help me to make the globally-installed modules work on Windows?",
      "last_edit_date": 1354416872,
      "up_vote_count": 190,
      "link": "https://stackoverflow.com/questions/9587665/nodejs-cannot-find-installed-module-on-windows",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1331052236,
          "answer_id": 9588052,
          "path": "stack.gulp.answer",
          "score": 271,
          "up_vote_count": 271,
          "is_accepted": true,
          "last_activity_date": 1513255115,
          "last_edit_date": 1513255115,
          "body_markdown": "Add an environment variable called `NODE_PATH` and set it to `%USERPROFILE%\\Application Data\\npm\\node_modules` (Windows XP), `%AppData%\\npm\\node_modules` (Windows 7/8/10), or wherever npm ends up installing the modules on your Windows flavor. To be done with it once and for all, add this as a System variable in the Advanced tab of the System Properties dialog (run `control.exe sysdm.cpl,System,3`).\r\n\r\nQuick solution in Windows 7+ is to just run:\r\n\r\n    rem for future\r\n    setx NODE_PATH %AppData%\\npm\\node_modules\r\n    rem for current session\r\n    set NODE_PATH=%AppData%\\npm\\node_modules\r\n\r\nIt&#39;s worth to mention that `NODE_PATH` is only used when importing modules in Node apps. When you want to use globally installed modules&#39; binaries in your CLI you need to add it also to your `PATH`, but without `node_modules` part (for example `%AppData%\\npm` in Windows 7/8/10).\r\n\r\n---\r\n_Old story_\r\n\r\n\r\nI&#39;m pretty much new to node.js myself so I can be not entirely right but from my experience it&#39;s works this way:\r\n\r\n1. **-g** is not a way to install global libraries, it&#39;s only a way to place them on system path so you can call them from command line without writing the full path to them. It is useful, for example, then node app is converting local files, like **less** — if you install it globally you can use it in any directory.\r\n2. node.js itself didn&#39;t look at the npm global dir, it is using another algorithm to find required files: http://nodejs.org/api/modules.html#modules_file_modules (basically its scanning every folder in the path, starting from the current for **node_modules** folder and checks it).\r\n\r\nSee similar question for more details: https://stackoverflow.com/questions/5817874/node-js-npm-is-not-installing-module-in-the-default-path\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1331053623,
          "answer_id": 9588420,
          "path": "stack.gulp.answer",
          "score": 12,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1506585239,
          "last_edit_date": 1506585239,
          "body_markdown": "I&#39;ll just quote from this node&#39;s [blog post][1]...\r\n\r\n&gt; In general, the rule of thumb is:\r\n&gt; \r\n&gt; - If you’re installing something that you want to use in your program, using require(&#39;whatever&#39;), then install it locally, at the root of\r\n&gt; your project.\r\n&gt; - If you’re installing something that you want to use in your shell, on the command line or something, install it globally, so that its\r\n&gt; binaries end up in your PATH environment variable.\r\n&gt;  \r\n&gt; ...\r\n&gt; \r\n&gt; Of course, there are some cases where you want to do both.\r\n&gt; Coffee-script and Express both are good examples of apps that have a\r\n&gt; command line interface, as well as a library. In those cases, you can\r\n&gt; do one of the following:\r\n&gt; \r\n&gt; 1. Install it in both places. Seriously, are you that short on disk space? It’s fine, really. They’re tiny JavaScript programs.\r\n&gt; 2. Install it globally, and then npm link coffee-script or npm link express (if you’re on a platform that supports symbolic links.) Then\r\n&gt; you only need to update the global copy to update all the symlinks as\r\n&gt; well.\r\n\r\n\r\n  [1]: https://nodejs.org/en/blog/npm/npm-1-0-global-vs-local-installation/"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1331053768,
          "answer_id": 9588454,
          "path": "stack.gulp.answer",
          "score": 9,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1331053768,
          "body_markdown": "To make it short, use `npm link jade` in your app directory."
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1360761814,
          "answer_id": 14854596,
          "path": "stack.gulp.answer",
          "score": -3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1360761814,
          "body_markdown": "if you are using windows , it takes some steps ,\r\n1) create a file called package.json\r\n\r\n     {\r\n      &quot;name&quot;: &quot;hello&quot;\r\n    , &quot;version&quot;: &quot;0.0.1&quot;\r\n    , &quot;dependencies&quot;: {\r\n        &quot;express&quot;: &quot;*&quot;\r\n      }\r\n    }\r\nwhere hello is the name of the package   and * means the latest version of your dependency\r\n\r\n2) code to you project directory and run the following command\r\n   \r\nnpm install\r\n\r\nIt installs the dependencies "
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1364959622,
          "answer_id": 15778350,
          "path": "stack.gulp.answer",
          "score": 32,
          "up_vote_count": 33,
          "is_accepted": false,
          "last_activity_date": 1445010579,
          "last_edit_date": 1445010579,
          "body_markdown": "if you are in the windows7 platform maybe you should change the NODE_PATH like this:\r\n`%AppData%\\npm\\node_modules`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1392746929,
          "answer_id": 21861962,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1392746929,
          "body_markdown": "Alternatively you could add to `~/.npmrc` right [prefix](https://www.npmjs.org/doc/files/npmrc.html). I&#39;ve got `C:\\Program Files\\nodejs` for 64 Win7."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1401806970,
          "answer_id": 24018268,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1401806970,
          "body_markdown": "From my expierience with win8.1 npm installs modules on \r\n`C:\\Users\\[UserName]\\AppData\\Roaming\\npm\\node_modules` \r\n  but dumply searches them on\r\n`C:\\Users\\[UserName]\\node_modules`.\r\n\r\nOne simple solution reference module in application by full path:\r\n\r\n    var jsonminify = require(&quot;C:/Users/Saulius/AppData/Roaming/npm/node_modules/jsonminify&quot;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1428372527,
          "answer_id": 29482574,
          "path": "stack.gulp.answer",
          "score": 20,
          "up_vote_count": 20,
          "is_accepted": false,
          "last_activity_date": 1483345691,
          "last_edit_date": 1483345691,
          "body_markdown": "I know i can awake a zombie but i think this is still a problem, if you need global access to node modules on Windows 7  you need to add this to your global variable path: \r\n\r\n    C:\\Users\\{USER}\\AppData\\Roaming\\npm\r\n\r\nImportant: only this without the `node_modules` part, took me half hour to see this."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437942480,
          "answer_id": 31641615,
          "path": "stack.gulp.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1437942480,
          "body_markdown": "I ran into this issue on Windows 7, running\r\n\r\n    npm install -g gulp\r\n\r\nas administrator while being logged on as a normal user.\r\n\r\n**Solution:** When executing the same installation as normal user (not &quot;run as admin&quot; for cmd) all was fine. I guess it is related to the default install and search path."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452014207,
          "answer_id": 34617497,
          "path": "stack.gulp.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1452014207,
          "body_markdown": "Tried to add/edit environment variables and come to conclude that:\r\n\r\n 1. Edit/add `User variables` (of the upper box) instead of `System variables` (of the lower part); otherwise you have to &quot;run as administrator&quot; to get it work.\r\n 2. Append `;%AppData%\\npm` to `Path` in order to use it as a command line tool (if supported, like `jshint` and `grunt-cli`).\r\n 3. Create `NODE_PATH` and set it `%AppData%\\npm\\node_modules` in order to `require(&#39;&lt;pkg_name&gt;&#39;)` in scripts without install it in the project directory. (But [`npm link` is suggested][1] for this requirement if you&#39;re working on OS with `mklink` such as Vista and newer.)\r\n\r\nTest environment:\r\n\r\n - Win 7 (Ent., 64-bit, SP1), Node.js 4.2.4, npm 2.14.12\r\n - Win 8.1 (Ent., 64-bit), Node.js 0.10.30, npm 1.4.21\r\n\r\n\r\n  [1]: https://nodejs.org/en/blog/npm/npm-1-0-global-vs-local-installation/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452224311,
          "answer_id": 34669100,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1476006751,
          "last_edit_date": 1476006751,
          "body_markdown": "For windows, everybody said you should set environment variables for nodejs and npm modules, but do you know why?\r\nFor some modules, they have command line tool, after installed the module, there&#39;are **[module].cmd** file in **C:\\Program Files\\nodejs**, and it&#39;s used for launch in window command. So if you don&#39;t add the path containing the cmd file to environment variables **%PATH%** , you won&#39;t launch them successfully through command window."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453566130,
          "answer_id": 34965823,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1453566130,
          "body_markdown": "I stumbled on this question because I want to use node.js with visual studio 2015 on my new computer with windows 10. I used node.js on windows 7 and 8 and 8.1 Never a problem node.js finding a module. I use a legacy node.js 0.10.39 because I have to use this version  because of the serial and RFXCOM module.\r\n\r\nThe answer for windows 10 is to set the NODE_PATH in the enviroment variables with C:\\Users\\User\\node_modules."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1476278294,
          "answer_id": 39999651,
          "path": "stack.gulp.answer",
          "score": 14,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1476278294,
          "body_markdown": "For making it work on windows 10 I solved it by adding the folder `%USERPROFILE%\\AppData\\Roaming\\npm` to my PATH. Having `\\node_modules` appended like this: `%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\\` did not work for me.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1487525282,
          "answer_id": 42330431,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1487525282,
          "body_markdown": "For Windows 10, I had to locally install gulp in the folder:\r\n\r\nC:\\Users\\myaccount\\AppData\\Roaming\\npm\\node_modules\r\n\r\n    npm install gulp\r\n\r\nThis fixed my issue of &quot;gulp is not recognized&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1492950060,
          "answer_id": 43571088,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1492950060,
          "body_markdown": "I had a terrible time getting global modules to work. Eventually, I explicitly added `C:\\Users\\yourusername\\AppData\\Roaming\\npm` to the PATH variable under System Variables. I also needed to have this variable come before the nodejs path variable in the list.\r\n\r\nI am running Windows 10."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1505385062,
          "answer_id": 46216721,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1505385912,
          "last_edit_date": 1505385912,
          "body_markdown": "I had the same issue, trying to install bower with `npm install -g bower`\r\n\r\nI think this was because **node was installed by another user**, not me.\r\n\r\nI uninstalled node, and then I reinstalled it. During installation, I saw this text for the option *Add to PATH &gt; npm modules*:\r\n\r\nMessage in node installation\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\nAfter node installation, I executed `npm install -g bower` again. And now bower works.\r\n\r\nSure is not necessary reinstall node with own user, like me. Solution must be via *NODE_PATH* or *PATH* variables, as other users have explained.\r\n\r\nThis is only to remark that this problem occurs only if node has been installed by another user (or if during installation the option *Add to PATH &gt; npm modules* has not been marked).\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/QOSbC.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1506660467,
          "answer_id": 46481980,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1506660467,
          "body_markdown": "Just download and re-install the node from [this][1] and this will fix all the path issues. \r\n\r\nDon&#39;t forget to restart your command prompt or terminal.\r\n\r\n\r\n  [1]: https://nodejs.org/en/download/"
        }
      ],
      "title": "Nodejs cannot find installed module on Windows?",
      "view_count": 207668,
      "answer_count": 17,
      "code_snippet": [
        "<code>npm install jade -g\n</code>",
        "<code>\"C:\\Program Files (x86)\\nodejs\\node_modules\"</code>",
        "<code>\"Cannot find module 'jade'\"</code>",
        "<code>var jade = require('jade');\n</code>",
        "<code>NODE_PATH</code>",
        "<code>%USERPROFILE%\\Application Data\\npm\\node_modules</code>",
        "<code>%AppData%\\npm\\node_modules</code>",
        "<code>control.exe sysdm.cpl,System,3</code>",
        "<code>rem for future\nsetx NODE_PATH %AppData%\\npm\\node_modules\nrem for current session\nset NODE_PATH=%AppData%\\npm\\node_modules\n</code>",
        "<code>NODE_PATH</code>",
        "<code>PATH</code>",
        "<code>node_modules</code>",
        "<code>%AppData%\\npm</code>",
        "<code>set NODE_PATH=C:\\Documents and Settings\\DevUser\\Application Data\\npm\\node_modules</code>",
        "<code>C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules</code>",
        "<code>npm install -g express</code>",
        "<code>C:\\Documents and Settings\\swapnil\\Application Data\\npm\\node_modules</code>",
        "<code>%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules</code>",
        "<code>npm list -g</code>",
        "<code>{output}\\node_modules</code>",
        "<code>npm install --global {xyz}</code>",
        "<code>%AppData%\\npm\\node_modules</code>",
        "<code>C:\\Users\\{USER}\\AppData\\Roaming\\npm\n</code>",
        "<code>node_modules</code>",
        "<code>node_modules</code>",
        "<code>%USERPROFILE%\\AppData\\Roaming\\npm</code>",
        "<code>\\node_modules</code>",
        "<code>%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules\\</code>",
        "<code>path</code>",
        "<code>They’re tiny JavaScript programs.</code>",
        "<code>npm link jade</code>",
        "<code>npm link jade</code>",
        "<code>npm ERR! Error: npm link not supported on windows</code>",
        "<code>npm link</code>",
        "<code>User variables</code>",
        "<code>System variables</code>",
        "<code>;%AppData%\\npm</code>",
        "<code>Path</code>",
        "<code>jshint</code>",
        "<code>grunt-cli</code>",
        "<code>NODE_PATH</code>",
        "<code>%AppData%\\npm\\node_modules</code>",
        "<code>require('&lt;pkg_name&gt;')</code>",
        "<code>npm link</code>",
        "<code>mklink</code>",
        "<code>npm install -g gulp\n</code>",
        "<code>C:\\Users\\yourusername\\AppData\\Roaming\\npm</code>",
        "<code>C:\\Users\\[UserName]\\AppData\\Roaming\\npm\\node_modules</code>",
        "<code>C:\\Users\\[UserName]\\node_modules</code>",
        "<code>var jsonminify = require(\"C:/Users/Saulius/AppData/Roaming/npm/node_modules/jsonminify\");\n</code>",
        "<code>~/.npmrc</code>",
        "<code>C:\\Program Files\\nodejs</code>",
        "<code>C:\\Users\\User\\node_modules</code>",
        "<code>C:\\Users\\User\\AppData\\Roaming\\npm\\node_modules</code>",
        "<code>C:\\Users\\User\\node_modules</code>",
        "<code>C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\node_modules</code>",
        "<code>npm install -g bower</code>",
        "<code>npm install -g bower</code>",
        "<code>npm install gulp\n</code>",
        "<code> {\n  \"name\": \"hello\"\n, \"version\": \"0.0.1\"\n, \"dependencies\": {\n    \"express\": \"*\"\n  }\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs"
      ],
      "creation_date": 1371032286,
      "body_markdown": "I tried to use ng-model on input tag with type file:\r\n\r\n    &lt;input type=&quot;file&quot; ng-model=&quot;vm.uploadme&quot; /&gt;\r\n\r\nBut after selecting a file, in controller, $scope.vm.uploadme is still undefined.\r\n\r\nHow do I get the selected file in my controller?",
      "last_edit_date": 1400162491,
      "up_vote_count": 250,
      "link": "https://stackoverflow.com/questions/17063000/ng-model-for-input-type-file",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1371032448,
          "answer_id": 17063046,
          "path": "stack.bower.answer",
          "score": 297,
          "up_vote_count": 298,
          "is_accepted": true,
          "last_activity_date": 1389542022,
          "last_edit_date": 1389542022,
          "body_markdown": "I created a workaround with directive:\r\n\r\n    .directive(&quot;fileread&quot;, [function () {\r\n        return {\r\n            scope: {\r\n                fileread: &quot;=&quot;\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                element.bind(&quot;change&quot;, function (changeEvent) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (loadEvent) {\r\n                        scope.$apply(function () {\r\n                            scope.fileread = loadEvent.target.result;\r\n                        });\r\n                    }\r\n                    reader.readAsDataURL(changeEvent.target.files[0]);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\nAnd the input tag becomes:\r\n\r\n    &lt;input type=&quot;file&quot; fileread=&quot;vm.uploadme&quot; /&gt;\r\n\r\nOr if just the file definition is needed:\r\n\r\n    .directive(&quot;fileread&quot;, [function () {\r\n        return {\r\n            scope: {\r\n                fileread: &quot;=&quot;\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                element.bind(&quot;change&quot;, function (changeEvent) {\r\n                    scope.$apply(function () {\r\n                        scope.fileread = changeEvent.target.files[0];\r\n                        // or all selected files:\r\n                        // scope.fileread = changeEvent.target.files;\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1379662275,
          "answer_id": 18911235,
          "path": "stack.bower.answer",
          "score": 27,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1379752434,
          "last_edit_date": 1379752434,
          "body_markdown": "This is an addendum to @endy-tjahjono&#39;s solution. \r\n\r\nI ended up not being able to get the value of *uploadme* from the scope. Even though *uploadme* in the HTML was visibly updated by the directive, I could still not access its value by $scope.uploadme. I was able to set its value from the scope, though. Mysterious, right..?\r\n\r\nAs it turned out, a child scope was created by the directive, and the child scope had its own *uploadme*. \r\n\r\nThe solution was to use an object rather than a primitive to hold the value of *uploadme*.\r\n\r\nIn the controller I have: \r\n\r\n    $scope.uploadme = {};\r\n    $scope.uploadme.src = &quot;&quot;;\r\n\r\nand in the HTML:\r\n\r\n     &lt;input type=&quot;file&quot; fileread=&quot;uploadme.src&quot;/&gt;\r\n     &lt;input type=&quot;text&quot; ng-model=&quot;uploadme.src&quot;/&gt;\r\n\r\nThere are no changes to the directive. \r\n\r\nNow, it all works like expected. I can grab the value of *uploadme.src* from my controller using $scope.uploadme."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1380647080,
          "answer_id": 19121983,
          "path": "stack.bower.answer",
          "score": 51,
          "up_vote_count": 51,
          "is_accepted": false,
          "last_activity_date": 1426599028,
          "last_edit_date": 1426599028,
          "body_markdown": "I use this directive:\r\n\r\n    angular.module(&#39;appFilereader&#39;, []).directive(&#39;appFilereader&#39;, function($q) {\r\n        var slice = Array.prototype.slice;\r\n    \r\n        return {\r\n            restrict: &#39;A&#39;,\r\n            require: &#39;?ngModel&#39;,\r\n            link: function(scope, element, attrs, ngModel) {\r\n                    if (!ngModel) return;\r\n    \r\n                    ngModel.$render = function() {};\r\n    \r\n                    element.bind(&#39;change&#39;, function(e) {\r\n                        var element = e.target;\r\n    \r\n                        $q.all(slice.call(element.files, 0).map(readFile))\r\n                            .then(function(values) {\r\n                                if (element.multiple) ngModel.$setViewValue(values);\r\n                                else ngModel.$setViewValue(values.length ? values[0] : null);\r\n                            });\r\n    \r\n                        function readFile(file) {\r\n                            var deferred = $q.defer();\r\n    \r\n                            var reader = new FileReader();\r\n                            reader.onload = function(e) {\r\n                                deferred.resolve(e.target.result);\r\n                            };\r\n                            reader.onerror = function(e) {\r\n                                deferred.reject(e);\r\n                            };\r\n                            reader.readAsDataURL(file);\r\n    \r\n                            return deferred.promise;\r\n                        }\r\n    \r\n                    }); //change\r\n    \r\n                } //link\r\n        }; //return\r\n    });\r\n\r\nand invoke it like this:\r\n\r\n    &lt;input type=&quot;file&quot; ng-model=&quot;editItem._attachments_uri.image&quot; accept=&quot;image/*&quot; app-filereader /&gt;\r\n\r\nThe property (editItem.editItem._attachments_uri.image) will be populated with the contents of the file you select as a data-uri (!).\r\n\r\nPlease do note that this script will not upload anything. It will only populate your model with the contents of your file encoded ad a data-uri (base64).\r\n\r\nCheck out a working demo here:\r\nhttp://plnkr.co/CMiHKv2BEidM9SShm9Vv\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394316365,
          "answer_id": 22275659,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1394316365,
          "body_markdown": "I had to do same on multiple input, so i updated @Endy Tjahjono method.\r\nIt returns an array containing all readed files.\r\n\r\n      .directive(&quot;fileread&quot;, function () {\r\n        return {\r\n          scope: {\r\n            fileread: &quot;=&quot;\r\n          },\r\n          link: function (scope, element, attributes) {\r\n            element.bind(&quot;change&quot;, function (changeEvent) {\r\n              var readers = [] ,\r\n                  files = changeEvent.target.files ,\r\n                  datas = [] ;\r\n              for ( var i = 0 ; i &lt; files.length ; i++ ) {\r\n                readers[ i ] = new FileReader();\r\n                readers[ i ].onload = function (loadEvent) {\r\n                  datas.push( loadEvent.target.result );\r\n                  if ( datas.length === files.length ){\r\n                    scope.$apply(function () {\r\n                      scope.fileread = datas;\r\n                    });\r\n                  }\r\n                }\r\n                readers[ i ].readAsDataURL( files[i] );\r\n              }\r\n            });\r\n    \r\n          }\r\n        }\r\n      });\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1406805690,
          "answer_id": 25057643,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1407088521,
          "last_edit_date": 1407088521,
          "body_markdown": "This is a slightly modified version that lets you specify the name of the attribute in the scope, just as you would do with ng-model, usage: \r\n\r\n    \r\n        &lt;myUpload key=&quot;file&quot;&gt;&lt;/myUpload&gt;\r\n    \r\n\r\nDirective:\r\n\r\n    .directive(&#39;myUpload&#39;, function() {\r\n        return {\r\n            link: function postLink(scope, element, attrs) {\r\n                element.find(&quot;input&quot;).bind(&quot;change&quot;, function(changeEvent) {                        \r\n                    var reader = new FileReader();\r\n                    reader.onload = function(loadEvent) {\r\n                        scope.$apply(function() {\r\n                            scope[attrs.key] = loadEvent.target.result;                                \r\n                        });\r\n                    }\r\n                    if (typeof(changeEvent.target.files[0]) === &#39;object&#39;) {\r\n                        reader.readAsDataURL(changeEvent.target.files[0]);\r\n                    };\r\n                });\r\n    \r\n            },\r\n            controller: &#39;FileUploadCtrl&#39;,\r\n            template:\r\n                    &#39;&lt;span class=&quot;btn btn-success fileinput-button&quot;&gt;&#39; +\r\n                    &#39;&lt;i class=&quot;glyphicon glyphicon-plus&quot;&gt;&lt;/i&gt;&#39; +\r\n                    &#39;&lt;span&gt;Replace Image&lt;/span&gt;&#39; +\r\n                    &#39;&lt;input type=&quot;file&quot; accept=&quot;image/*&quot; name=&quot;files[]&quot; multiple=&quot;&quot;&gt;&#39; +\r\n                    &#39;&lt;/span&gt;&#39;,\r\n            restrict: &#39;E&#39;\r\n    \r\n        };\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1415828829,
          "answer_id": 26897245,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1415828829,
          "body_markdown": "\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function filesModelDirective(){\r\n      return {\r\n        controller: function($parse, $element, $attrs, $scope){\r\n          var exp = $parse($attrs.filesModel);\r\n          $element.on(&#39;change&#39;, function(){\r\n            exp.assign($scope, this.files[0]);\r\n            $scope.$apply();\r\n          });\r\n        }\r\n      };\r\n    }\r\n    app.directive(&#39;filesModel&#39;, filesModelDirective);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1426188974,
          "answer_id": 29018763,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1426189440,
          "last_edit_date": 1426189440,
          "body_markdown": "For multiple files input using lodash or underscore:\r\n\r\n    .directive(&quot;fileread&quot;, [function () {\r\n        return {\r\n            scope: {\r\n                fileread: &quot;=&quot;\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                element.bind(&quot;change&quot;, function (changeEvent) {\r\n                    return _.map(changeEvent.target.files, function(file){\r\n                      scope.fileread = [];\r\n                      var reader = new FileReader();\r\n                      reader.onload = function (loadEvent) {\r\n                          scope.$apply(function () {\r\n                              scope.fileread.push(loadEvent.target.result);\r\n                          });\r\n                      }\r\n                      reader.readAsDataURL(file);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }]);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1441906878,
          "answer_id": 32508421,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1441906878,
          "body_markdown": "Hi guys i create a directive and registered on bower.\r\n\r\nthis lib will help you modeling input file, not only return file data but also file dataurl or base 64.\r\n\r\n    {\r\n        &quot;lastModified&quot;: 1438583972000,\r\n        &quot;lastModifiedDate&quot;: &quot;2015-08-03T06:39:32.000Z&quot;,\r\n        &quot;name&quot;: &quot;gitignore_global.txt&quot;,\r\n        &quot;size&quot;: 236,\r\n        &quot;type&quot;: &quot;text/plain&quot;,\r\n        &quot;data&quot;: &quot;data:text/plain;base64,DQojaWdub3JlIHRodW1ibmFpbHMgY3JlYXRlZCBieSB3aW5kb3dz…xoDQoqLmJhaw0KKi5jYWNoZQ0KKi5pbGsNCioubG9nDQoqLmRsbA0KKi5saWINCiouc2JyDQo=&quot;\r\n    }\r\n\r\n[https://github.com/mistralworks/ng-file-model/][1]\r\n\r\n\r\nHope will help you\r\n\r\n  [1]: https://github.com/mistralworks/ng-file-model/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1490717419,
          "answer_id": 43074638,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1515361573,
          "last_edit_date": 1515361573,
          "body_markdown": "Working Demo of Directive that Works with `ng-model`\r\n---\r\nThis directive enables `&lt;input type=file&gt;` to automatically work with the `ng-change` and `ng-form` directives.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    angular.module(&quot;app&quot;,[]);\r\n\r\n    angular.module(&quot;app&quot;).directive(&quot;filesInput&quot;, function() {\r\n      return {\r\n        require: &quot;ngModel&quot;,\r\n        link: function postLink(scope,elem,attrs,ngModel) {\r\n          elem.on(&quot;change&quot;, function(e) {\r\n            var files = elem[0].files;\r\n            ngModel.$setViewValue(files);\r\n          })\r\n        }\r\n      }\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;//unpkg.com/angular/angular.js&quot;&gt;&lt;/script&gt;\r\n      &lt;body ng-app=&quot;app&quot;&gt;\r\n        &lt;h1&gt;AngularJS Input `type=file` Demo&lt;/h1&gt;\r\n        \r\n        &lt;input type=&quot;file&quot; files-input ng-model=&quot;fileArray&quot; multiple&gt;\r\n\r\n        &lt;code&gt;&lt;table ng-show=&quot;fileArray.length&quot;&gt;\r\n        &lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Date&lt;/td&gt;&lt;td&gt;Size&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;tr&gt;\r\n        &lt;tr ng-repeat=&quot;file in fileArray&quot;&gt;\r\n          &lt;td&gt;{{file.name}}&lt;/td&gt;\r\n          &lt;td&gt;{{file.lastModified | date  : &#39;MMMdd,yyyy&#39;}}&lt;/td&gt;\r\n          &lt;td&gt;{{file.size}}&lt;/td&gt;\r\n          &lt;td&gt;{{file.type}}&lt;/td&gt;\r\n        &lt;/tr&gt;\r\n        &lt;/table&gt;&lt;/code&gt;\r\n        \r\n      &lt;/body&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1496717323,
          "answer_id": 44380617,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1498619586,
          "last_edit_date": 1498619586,
          "body_markdown": "I had to modify Endy&#39;s directive so that I can get Last Modified, lastModifiedDate, name, size, type, and data as well as be able to get an array of files. For those of you that needed these extra features, here you go.\r\n\r\nUPDATE:\r\nI found a bug where if you select the file(s) and then go to select again but cancel instead, the files are never deselected like it appears. So I updated my code to fix that.\r\n\r\n   \r\n\r\n     .directive(&quot;fileread&quot;, function () {\r\n            return {\r\n                scope: {\r\n                    fileread: &quot;=&quot;\r\n                },\r\n                link: function (scope, element, attributes) {\r\n                    element.bind(&quot;change&quot;, function (changeEvent) {\r\n                        var readers = [] ,\r\n                            files = changeEvent.target.files ,\r\n                            datas = [] ;\r\n                        if(!files.length){\r\n                            scope.$apply(function () {\r\n                                scope.fileread = [];\r\n                            });\r\n                            return;\r\n                        }\r\n                        for ( var i = 0 ; i &lt; files.length ; i++ ) {\r\n                            readers[ i ] = new FileReader();\r\n                            readers[ i ].index = i;\r\n                            readers[ i ].onload = function (loadEvent) {\r\n                                var index = loadEvent.target.index;\r\n                                datas.push({\r\n                                    lastModified: files[index].lastModified,\r\n                                    lastModifiedDate: files[index].lastModifiedDate,\r\n                                    name: files[index].name,\r\n                                    size: files[index].size,\r\n                                    type: files[index].type,\r\n                                    data: loadEvent.target.result\r\n                                });\r\n                                if ( datas.length === files.length ){\r\n                                    scope.$apply(function () {\r\n                                        scope.fileread = datas;\r\n                                    });\r\n                                }\r\n                            };\r\n                            readers[ i ].readAsDataURL( files[i] );\r\n                        }\r\n                    });\r\n    \r\n                }\r\n            }\r\n        });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1513342241,
          "answer_id": 47832783,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1513342241,
          "body_markdown": "Try this,this is working for me in angular JS\r\n\r\n        let fileToUpload = `${documentLocation}/${documentType}.pdf`;\r\n        let absoluteFilePath = path.resolve(__dirname, fileToUpload);\r\n        console.log(`Uploading document ${absoluteFilePath}`);\r\n        element.all(by.css(&quot;input[type=&#39;file&#39;]&quot;)).sendKeys(absoluteFilePath);"
        }
      ],
      "title": "ng-model for &lt;input type=&quot;file&quot;/&gt;",
      "view_count": 243422,
      "answer_count": 11,
      "code_snippet": [
        "<code>&lt;input type=\"file\" ng-model=\"vm.uploadme\" /&gt;\n</code>",
        "<code>.directive(\"fileread\", [function () {\n    return {\n        scope: {\n            fileread: \"=\"\n        },\n        link: function (scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                var reader = new FileReader();\n                reader.onload = function (loadEvent) {\n                    scope.$apply(function () {\n                        scope.fileread = loadEvent.target.result;\n                    });\n                }\n                reader.readAsDataURL(changeEvent.target.files[0]);\n            });\n        }\n    }\n}]);\n</code>",
        "<code>&lt;input type=\"file\" fileread=\"vm.uploadme\" /&gt;\n</code>",
        "<code>.directive(\"fileread\", [function () {\n    return {\n        scope: {\n            fileread: \"=\"\n        },\n        link: function (scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                scope.$apply(function () {\n                    scope.fileread = changeEvent.target.files[0];\n                    // or all selected files:\n                    // scope.fileread = changeEvent.target.files;\n                });\n            });\n        }\n    }\n}]);\n</code>",
        "<code>angular.module('appFilereader', []).directive('appFilereader', function($q) {\n    var slice = Array.prototype.slice;\n\n    return {\n        restrict: 'A',\n        require: '?ngModel',\n        link: function(scope, element, attrs, ngModel) {\n                if (!ngModel) return;\n\n                ngModel.$render = function() {};\n\n                element.bind('change', function(e) {\n                    var element = e.target;\n\n                    $q.all(slice.call(element.files, 0).map(readFile))\n                        .then(function(values) {\n                            if (element.multiple) ngModel.$setViewValue(values);\n                            else ngModel.$setViewValue(values.length ? values[0] : null);\n                        });\n\n                    function readFile(file) {\n                        var deferred = $q.defer();\n\n                        var reader = new FileReader();\n                        reader.onload = function(e) {\n                            deferred.resolve(e.target.result);\n                        };\n                        reader.onerror = function(e) {\n                            deferred.reject(e);\n                        };\n                        reader.readAsDataURL(file);\n\n                        return deferred.promise;\n                    }\n\n                }); //change\n\n            } //link\n    }; //return\n});\n</code>",
        "<code>&lt;input type=\"file\" ng-model=\"editItem._attachments_uri.image\" accept=\"image/*\" app-filereader /&gt;\n</code>",
        "<code>ngModel</code>",
        "<code>$render</code>",
        "<code>$scope.uploadme = {};\n$scope.uploadme.src = \"\";\n</code>",
        "<code> &lt;input type=\"file\" fileread=\"uploadme.src\"/&gt;\n &lt;input type=\"text\" ng-model=\"uploadme.src\"/&gt;\n</code>",
        "<code>$scope.uploadme = { src: '' }</code>",
        "<code>{\n    \"lastModified\": 1438583972000,\n    \"lastModifiedDate\": \"2015-08-03T06:39:32.000Z\",\n    \"name\": \"gitignore_global.txt\",\n    \"size\": 236,\n    \"type\": \"text/plain\",\n    \"data\": \"data:text/plain;base64,DQojaWdub3JlIHRodW1ibmFpbHMgY3JlYXRlZCBieSB3aW5kb3dz…xoDQoqLmJhaw0KKi5jYWNoZQ0KKi5pbGsNCioubG9nDQoqLmRsbA0KKi5saWINCiouc2JyDQo=\"\n}\n</code>",
        "<code>ng-model</code>",
        "<code>&lt;input type=file&gt;</code>",
        "<code>ng-change</code>",
        "<code>ng-form</code>",
        "<code>angular.module(\"app\",[]);\r\n\r\nangular.module(\"app\").directive(\"filesInput\", function() {\r\n  return {\r\n    require: \"ngModel\",\r\n    link: function postLink(scope,elem,attrs,ngModel) {\r\n      elem.on(\"change\", function(e) {\r\n        var files = elem[0].files;\r\n        ngModel.$setViewValue(files);\r\n      })\r\n    }\r\n  }\r\n});</code>",
        "<code>&lt;script src=\"//unpkg.com/angular/angular.js\"&gt;&lt;/script&gt;\r\n  &lt;body ng-app=\"app\"&gt;\r\n    &lt;h1&gt;AngularJS Input `type=file` Demo&lt;/h1&gt;\r\n    \r\n    &lt;input type=\"file\" files-input ng-model=\"fileArray\" multiple&gt;\r\n\r\n    &lt;code&gt;&lt;table ng-show=\"fileArray.length\"&gt;\r\n    &lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Date&lt;/td&gt;&lt;td&gt;Size&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;tr&gt;\r\n    &lt;tr ng-repeat=\"file in fileArray\"&gt;\r\n      &lt;td&gt;{{file.name}}&lt;/td&gt;\r\n      &lt;td&gt;{{file.lastModified | date  : 'MMMdd,yyyy'}}&lt;/td&gt;\r\n      &lt;td&gt;{{file.size}}&lt;/td&gt;\r\n      &lt;td&gt;{{file.type}}&lt;/td&gt;\r\n    &lt;/tr&gt;\r\n    &lt;/table&gt;&lt;/code&gt;\r\n    \r\n  &lt;/body&gt;</code>",
        "<code>    &lt;myUpload key=\"file\"&gt;&lt;/myUpload&gt;\n</code>",
        "<code>.directive('myUpload', function() {\n    return {\n        link: function postLink(scope, element, attrs) {\n            element.find(\"input\").bind(\"change\", function(changeEvent) {                        \n                var reader = new FileReader();\n                reader.onload = function(loadEvent) {\n                    scope.$apply(function() {\n                        scope[attrs.key] = loadEvent.target.result;                                \n                    });\n                }\n                if (typeof(changeEvent.target.files[0]) === 'object') {\n                    reader.readAsDataURL(changeEvent.target.files[0]);\n                };\n            });\n\n        },\n        controller: 'FileUploadCtrl',\n        template:\n                '&lt;span class=\"btn btn-success fileinput-button\"&gt;' +\n                '&lt;i class=\"glyphicon glyphicon-plus\"&gt;&lt;/i&gt;' +\n                '&lt;span&gt;Replace Image&lt;/span&gt;' +\n                '&lt;input type=\"file\" accept=\"image/*\" name=\"files[]\" multiple=\"\"&gt;' +\n                '&lt;/span&gt;',\n        restrict: 'E'\n\n    };\n});\n</code>",
        "<code>.directive(\"fileread\", [function () {\n    return {\n        scope: {\n            fileread: \"=\"\n        },\n        link: function (scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                return _.map(changeEvent.target.files, function(file){\n                  scope.fileread = [];\n                  var reader = new FileReader();\n                  reader.onload = function (loadEvent) {\n                      scope.$apply(function () {\n                          scope.fileread.push(loadEvent.target.result);\n                      });\n                  }\n                  reader.readAsDataURL(file);\n                });\n            });\n        }\n    }\n}]);\n</code>",
        "<code>  .directive(\"fileread\", function () {\n    return {\n      scope: {\n        fileread: \"=\"\n      },\n      link: function (scope, element, attributes) {\n        element.bind(\"change\", function (changeEvent) {\n          var readers = [] ,\n              files = changeEvent.target.files ,\n              datas = [] ;\n          for ( var i = 0 ; i &lt; files.length ; i++ ) {\n            readers[ i ] = new FileReader();\n            readers[ i ].onload = function (loadEvent) {\n              datas.push( loadEvent.target.result );\n              if ( datas.length === files.length ){\n                scope.$apply(function () {\n                  scope.fileread = datas;\n                });\n              }\n            }\n            readers[ i ].readAsDataURL( files[i] );\n          }\n        });\n\n      }\n    }\n  });\n</code>",
        "<code>function filesModelDirective(){\r\n  return {\r\n    controller: function($parse, $element, $attrs, $scope){\r\n      var exp = $parse($attrs.filesModel);\r\n      $element.on('change', function(){\r\n        exp.assign($scope, this.files[0]);\r\n        $scope.$apply();\r\n      });\r\n    }\r\n  };\r\n}\r\napp.directive('filesModel', filesModelDirective);</code>",
        "<code> .directive(\"fileread\", function () {\n        return {\n            scope: {\n                fileread: \"=\"\n            },\n            link: function (scope, element, attributes) {\n                element.bind(\"change\", function (changeEvent) {\n                    var readers = [] ,\n                        files = changeEvent.target.files ,\n                        datas = [] ;\n                    if(!files.length){\n                        scope.$apply(function () {\n                            scope.fileread = [];\n                        });\n                        return;\n                    }\n                    for ( var i = 0 ; i &lt; files.length ; i++ ) {\n                        readers[ i ] = new FileReader();\n                        readers[ i ].index = i;\n                        readers[ i ].onload = function (loadEvent) {\n                            var index = loadEvent.target.index;\n                            datas.push({\n                                lastModified: files[index].lastModified,\n                                lastModifiedDate: files[index].lastModifiedDate,\n                                name: files[index].name,\n                                size: files[index].size,\n                                type: files[index].type,\n                                data: loadEvent.target.result\n                            });\n                            if ( datas.length === files.length ){\n                                scope.$apply(function () {\n                                    scope.fileread = datas;\n                                });\n                            }\n                        };\n                        readers[ i ].readAsDataURL( files[i] );\n                    }\n                });\n\n            }\n        }\n    });\n</code>",
        "<code>    let fileToUpload = `${documentLocation}/${documentType}.pdf`;\n    let absoluteFilePath = path.resolve(__dirname, fileToUpload);\n    console.log(`Uploading document ${absoluteFilePath}`);\n    element.all(by.css(\"input[type='file']\")).sendKeys(absoluteFilePath);\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "visual-studio-code"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 17,
          "creation_date": 1430410086,
          "answer_id": 29972668,
          "path": "stack.bower.answer",
          "score": 22,
          "up_vote_count": 39,
          "is_accepted": false,
          "last_activity_date": 1466179485,
          "last_edit_date": 1466179485,
          "body_markdown": "This answer is outdated\r\n------------------------------------\r\n\r\n\r\nIf these are folders you want to ignore in a certain workspace, you can go to:\r\n\r\n`AppMenu &gt; Preferences &gt; Workspace Settings`\r\n\r\nOtherwise, if you want these folders to be ignored in all your workspaces, go to:\r\n\r\n`AppMenu &gt; Preferences &gt; User Settings`\r\n\r\nand add the following to your configuration:\r\n\r\n\t//-------- Search configuration --------\r\n\r\n\t// The folders to exclude when doing a full text search in the workspace.\r\n\t&quot;search.excludeFolders&quot;: [\r\n\t\t&quot;.git&quot;,\r\n\t\t&quot;node_modules&quot;,\r\n\t\t&quot;bower_components&quot;,\r\n\t\t&quot;path/to/other/folder/to/exclude&quot;\r\n\t],\r\n\r\nThe difference between workspace and user settings is explained [in the customization docs][1]\r\n\r\n\r\n  [1]: https://code.visualstudio.com/Docs/customization#_settings"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1446133234,
          "answer_id": 33418660,
          "path": "stack.bower.answer",
          "score": 374,
          "up_vote_count": 375,
          "is_accepted": true,
          "last_activity_date": 1516380594,
          "last_edit_date": 1516380594,
          "body_markdown": "These preferences appear to have changed since @alex-dima&#39;s answer.\r\n\r\n**Changing settings**\r\n\r\nFrom menu choose: Preferences -&gt; Settings -&gt; User/Workspace Settings. Filter default settings to `search`.\r\n\r\nYou can modify the `search.exclude` setting (copy from default setting to your user or workspace settings). That will apply only to searches. Note that settings from `files.exclude` will be automatically applied.\r\n\r\n**If the settings don&#39;t work**:\r\n\r\n 1. Make sure you dind&#39;t turn the search exclusion off. In the search area, expand the &quot;files to exclude&quot; input box and make sure that the gear icon is selected.\r\n 2. You might also need to Clear Editor History (See: https://github.com/Microsoft/vscode/issues/6502).\r\n\r\n**Example settings**\r\n\r\nFor example, I am developing an EmberJS application which saves thousands of files under the **tmp** directory.\r\n\r\nIf you select `WORKSPACE SETTINGS` on the right side of the search field, the search exclusion will only be applied to this particular project. And a corresponding `.vscode` folder will be added to the root folder containing `settings.json`. \r\n\r\nThis is my example settings:\r\n\r\n    {\r\n        // ...\r\n    \t&quot;search.exclude&quot;: {\r\n    \t\t&quot;**/.git&quot;: true,\r\n    \t\t&quot;**/node_modules&quot;: true,\r\n    \t\t&quot;**/bower_components&quot;: true,\r\n    \t\t&quot;**/tmp&quot;: true\r\n    \t},\r\n        // ...\r\n    }\r\n\r\n**Note**: Include a ** at the beginning of any search exclusion to cover the search term over any folders and sub-folders.\r\n\r\n***Picture of search before updating settings***:\r\n\r\nBefore updating the settings the search results are a mess.\r\n\r\n[![Picture of search before updating settings][1]][1]\r\n\r\n\r\n***Picture of search after updating settings:***\r\n\r\nAfter updating the settings the search results are exactly what I want.\r\n\r\n[![Picture of search after updating settings.][2]][2]\r\n\r\n  [1]: http://i.stack.imgur.com/FrgRO.png\r\n  [2]: http://i.stack.imgur.com/PRsxF.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1499162589,
          "answer_id": 44902897,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1499162589,
          "body_markdown": "If I understand correctly you want to exclude files from the vscode \r\nfuzzy finder. If that is the case, I am guessing the above answers are for older versions of vscode.\r\nWhat worked for me is adding:\r\n    \r\n    &quot;files.exclude&quot;: {\r\n        &quot;**/directory-you-want-to-exclude&quot;: true,\r\n        &quot;**/.git&quot;: true,\r\n        &quot;**/.svn&quot;: true,\r\n        &quot;**/.hg&quot;: true,\r\n        &quot;**/CVS&quot;: true,\r\n        &quot;**/.DS_Store&quot;: true\r\n    }\r\n\r\nto my `settings.json`. This file can be opened through `File`&gt;`Preferences`&gt;`Settings`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1510932788,
          "answer_id": 47354157,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1511361971,
          "last_edit_date": 1511361971,
          "body_markdown": "After you setup the search.exclude and file.exclude mentioned on the previous answers, run the command  &quot;Clear Editor History&quot; (Use the Command Palette to do that - CTRL + SHIFT + P).\r\n\r\nOnly after that the excluded files will not appear on your quick open menu.\r\n\r\nUpdate: You can run the command &quot;Clear Command History&quot; too. I forgot about that."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1518912772,
          "answer_id": 48847197,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1518912772,
          "body_markdown": "Make sure the &#39;use excluded files&#39; cog is selected\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/5ep3L.png"
        }
      ],
      "creation_date": 1430407235,
      "body_markdown": "Right now when I use `⌘O` to search for files the fuzzy matching appears to operate over all files in the current project. Unfortunately this includes a number of less than completely obvious build and vendor directories. So, for instance, if I want to search from all javascript files and do `⌘O.js` the file and symbol results include around 1500 hits... all but two of which are complete noise.\r\n\r\nIs there a way to specify certain directories to be ignored for purpose of search?",
      "title": "How can I choose folders to be ignored during search?",
      "view_count": 43392,
      "up_vote_count": 179,
      "answer_count": 5,
      "link": "https://stackoverflow.com/questions/29971600/how-can-i-choose-folders-to-be-ignored-during-search",
      "code_snippet": [
        "<code>⌘O</code>",
        "<code>⌘O.js</code>",
        "<code>search</code>",
        "<code>search.exclude</code>",
        "<code>files.exclude</code>",
        "<code>WORKSPACE SETTINGS</code>",
        "<code>.vscode</code>",
        "<code>settings.json</code>",
        "<code>{\n    // ...\n    \"search.exclude\": {\n        \"**/.git\": true,\n        \"**/node_modules\": true,\n        \"**/bower_components\": true,\n        \"**/tmp\": true\n    },\n    // ...\n}\n</code>",
        "<code>AppMenu &gt; Preferences &gt; Workspace Settings</code>",
        "<code>AppMenu &gt; Preferences &gt; User Settings</code>",
        "<code>//-------- Search configuration --------\n\n// The folders to exclude when doing a full text search in the workspace.\n\"search.excludeFolders\": [\n    \".git\",\n    \"node_modules\",\n    \"bower_components\",\n    \"path/to/other/folder/to/exclude\"\n],\n</code>",
        "<code>\"files.exclude\": {\n    \"**/directory-you-want-to-exclude\": true,\n    \"**/.git\": true,\n    \"**/.svn\": true,\n    \"**/.hg\": true,\n    \"**/CVS\": true,\n    \"**/.DS_Store\": true\n}\n</code>",
        "<code>settings.json</code>",
        "<code>File</code>",
        "<code>Preferences</code>",
        "<code>Settings</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "sublimetext2",
        "sublimetext"
      ],
      "creation_date": 1354637061,
      "body_markdown": "In Sublime Text, I often use &lt;kbd&gt;Cmd&lt;/kbd&gt;+&lt;kbd&gt;P&lt;/kbd&gt;/&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;P&lt;/kbd&gt; to search and jump between files.\r\n\r\nOften, it would pick up temporary or cached files like .scssc or things in the /tmp folder.\r\n\r\nIs there a way that I can limit what is shown in the search result?",
      "last_edit_date": 1426003346,
      "up_vote_count": 232,
      "link": "https://stackoverflow.com/questions/13706965/limit-file-search-scope-in-sublime-text-2",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1354637228,
          "answer_id": 13707023,
          "path": "stack.bower.answer",
          "score": 316,
          "up_vote_count": 317,
          "is_accepted": true,
          "last_activity_date": 1354637228,
          "body_markdown": "Add and edit this in your `~/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings` file.\r\n\r\n    // These files will still show up in the side bar, but won&#39;t be included in\r\n    // Goto Anything or Find in Files\r\n    &quot;binary_file_patterns&quot;: [&quot;*.jpg&quot;, &quot;*.jpeg&quot;, &quot;*.png&quot;, &quot;*.gif&quot;, &quot;*.ttf&quot;, &quot;*.tga&quot;, &quot;*.dds&quot;, &quot;*.ico&quot;, &quot;*.eot&quot;, &quot;*.pdf&quot;, &quot;*.swf&quot;, &quot;*.jar&quot;, &quot;*.zip&quot;],\r\n\r\n    &quot;folder_exclude_patterns&quot;: [&quot;.svn&quot;, &quot;.git&quot;, &quot;.hg&quot;, &quot;CVS&quot;],"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1354637488,
          "answer_id": 13707087,
          "path": "stack.bower.answer",
          "score": 95,
          "up_vote_count": 96,
          "is_accepted": false,
          "last_activity_date": 1401795372,
          "last_edit_date": 1401795372,
          "body_markdown": "You can exclude certain file patterns and folders from your project by [modifying your project settings](http://css-tricks.com/exclude-compiled-css-from-sublime-text-2-projects/) like so:\r\n\r\n    {\r\n        &quot;folders&quot;:\r\n        [\r\n            {\r\n                &quot;path&quot;: &quot;src&quot;,\r\n                &quot;folder_exclude_patterns&quot;: [&quot;backup&quot;]\r\n            },\r\n            {\r\n                &quot;path&quot;: &quot;docs&quot;,\r\n                &quot;file_exclude_patterns&quot;: [&quot;*.css&quot;]\r\n            }\r\n        ]\r\n    }\r\n\r\nThis is described in the [projects documentation](http://www.sublimetext.com/docs/2/projects.html)."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1395680566,
          "answer_id": 22615885,
          "path": "stack.bower.answer",
          "score": 21,
          "up_vote_count": 21,
          "is_accepted": false,
          "last_activity_date": 1471926698,
          "last_edit_date": 1471926698,
          "body_markdown": "In sublime text 3 (BLD 3059 Windows) I needed to restrict the &quot;find in folder&quot; function to certain files / folders and maybe a single file,\r\n\r\nThe following works for me\r\nContents of the where: box\r\n\r\n    /C/path/2/project/folder,*.c,*.h,-*/path/not/to/look/in,/C/path/2/specific/file/file.h\r\n\r\nTaking it further without absolute paths, you can combine the above with the following symbolic locations\r\n\r\n`&lt;open folders&gt;, &lt;open files&gt;, &lt;current file&gt;`\r\n\r\n    &lt;open folders&gt;,*.c,*.h,-*/never_this_in_folder/*,&lt;open files&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1399316481,
          "answer_id": 23479797,
          "path": "stack.bower.answer",
          "score": 84,
          "up_vote_count": 85,
          "is_accepted": false,
          "last_activity_date": 1399316481,
          "body_markdown": "You can also exclude folders in the Find All pane by using the `-*/foldername/*` syntax in the `Where` field - eg:\r\n\r\n    -*/node_modules/*\r\n\r\nhttp://www.sublimetext.com/forum/viewtopic.php?f=2&amp;t=3847&amp;start=10"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410082435,
          "answer_id": 25708876,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1410082435,
          "last_edit_date": 1490004260,
          "body_markdown": "This solution works perfectly for me : https://superuser.com/a/601270\r\n\r\n    Find: &quot;something&quot; Where: &quot;&lt;open folders&gt;&quot; // &lt;open folders&gt;&quot; not include hidden folder in sidebar\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1411013992,
          "answer_id": 25904115,
          "path": "stack.bower.answer",
          "score": 144,
          "up_vote_count": 144,
          "is_accepted": false,
          "last_activity_date": 1441222080,
          "last_edit_date": 1441222080,
          "body_markdown": "For Sublime Text 3: To exclude from search and GoTo results, without removing from the sidebar, change the `&quot;binary_file_patterns&quot;` setting.  Matches files AND folders.\r\n\r\nFor example, to exclude files in &quot;dist&quot; and &quot;node_modules&quot; from GoTo indexing, add this to your User Settings file:\r\n\r\n    &quot;binary_file_patterns&quot;: [&quot;dist/*&quot;, &quot;node_modules/*&quot;, &quot;*.jpg&quot;, &quot;*.jpeg&quot;, &quot;*.png&quot;, &quot;*.gif&quot;, &quot;*.ttf&quot;, &quot;*.tga&quot;, &quot;*.dds&quot;, &quot;*.ico&quot;, &quot;*.eot&quot;, &quot;*.pdf&quot;, &quot;*.swf&quot;, &quot;*.jar&quot;, &quot;*.zip&quot;]\r\n\r\nI can&#39;t figure out how to implement this on a per-project basis :(. Most settings can be moved to a `project.sublime-project` file. &quot;Project &gt; Save Project As&quot;, save it the root of your project, and add `&quot;settings&quot;: {...}` to the json in the generated file. (from &lt;a href=&quot;https://www.sublimetext.com/docs/2/projects.html&quot;&gt;source&lt;/a&gt;, works as of ST3 build 3095). But does not work with &quot;binary_file_patterns&quot;."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429110305,
          "answer_id": 29653860,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1429110305,
          "body_markdown": "For those few times you need to limit the find (and replace) to the current directory only, do this:\r\n\r\n    c/Path/2/Project,-c/Path/2/Project/*/*\r\n\r\nThe important bit is `/*/*` in the path exclude pattern.  Using Sublime Text 3 build 3083 on Windows 7 64-bit.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1435693207,
          "answer_id": 31147040,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1435693207,
          "body_markdown": "Just note that if you want to add a subfolder of your project folder, you must to join the folders with `\\/`. Using the same example of @DavidP&#228;rsson:\r\n\r\n        {\r\n            &quot;folders&quot;:\r\n            [\r\n                {\r\n                    &quot;path&quot;: &quot;src&quot;,\r\n                    &quot;folder_exclude_patterns&quot;: [&quot;backup\\/src\\/log&quot;]\r\n                }\r\n            ]\r\n        }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444970361,
          "answer_id": 33162676,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1444970361,
          "body_markdown": "For SublimeText 2, this is working great for me.\r\n\r\nWhen you choose **Find in Files**, specify exclude folders in **Where** input;\r\n\r\n    -bower_components/**/*, -dist/**/*, -node_modules/**/*, -tmp/**/*\r\n\r\nSo, a **hyphen** followed by exclude pattern for folders you don&#39;t want to search in.\r\n\r\n    -folder1/**/*, -folder2/**/*\r\n\r\nThis will limit your searching scope.\r\n\r\n![See this][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/bHGJq.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1456108507,
          "answer_id": 35544933,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1456108507,
          "body_markdown": "You can also exclude folders from your search via the Where field:\r\n\r\nWhere: `&lt;open folders&gt;,-*/node_modules/*.*,-*/build/*.*`\r\n\r\nSo in my example above:\r\n\r\n 1. I am searching through all Open folders. \r\n 2. I am excluding the folder called &quot;node_modules&quot; which is a top-level folder right under the root directory for my project.\r\n 3. I am excluding the folder called &quot;build&quot; which is a top-level folder right under the root directory for my project.\r\n\r\nThis works for me in Sublime Text 3 and the folders continue to show in the SideBar. This is a search only exclusion via input (does not affect any behind the scenes indexing)."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1456513459,
          "answer_id": 35659708,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1456513459,
          "body_markdown": "I think many of these answers span a few different versions of Sublime Text, here&#39;s how I do this with **Sublime Text 3** on a Mac.\r\n\r\n1. Open the _Sublime Text &gt; Preferences &gt; Settings - User_ menu\r\n1. Edit the `file_exclude_patterns` and `folder_exclude_patterns` values to ignore files and/or folders from the **Find** tool\r\n\r\n**Example**\r\n\r\n    &quot;file_exclude_patterns&quot;:\r\n    [\r\n    \t&quot;.svn&quot;,\r\n    \t&quot;.git&quot;,\r\n    \t&quot;.hg&quot;,\r\n    \t&quot;.md&quot;,\r\n    \t&quot;.txt&quot;,\r\n    \t&quot;.DS_Store&quot;\r\n    ],\r\n    &quot;folder_exclude_patterns&quot;:\r\n    [\r\n    \t&quot;node_modules&quot;,\r\n    \t&quot;bower_components&quot;,\r\n    \t&quot;.svn&quot;,\r\n    \t&quot;.git&quot;,\r\n    \t&quot;.hg&quot;,\r\n    \t&quot;CVS&quot;,\r\n    \t&quot;deprecated&quot;,\r\n    \t&quot;cache&quot;\r\n    ],\r\n\r\n**Screenshot**\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/mMeUb.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1461557772,
          "answer_id": 36831933,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1461557772,
          "body_markdown": "I think the easiest way to make sure such files and folders are excluded on each project is to just add the following code in Sublime User Settings (Add and edit this in your `~/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings` file.)\r\n\r\n\r\n    {\r\n    \t// Remove certain files permanently from Sublime via Preferences.sublime-settings.\r\n    \t&quot;folder_exclude_patterns&quot;: [&quot;.svn&quot;, &quot;.git&quot;, &quot;.hg&quot;, &quot;CVS&quot;, &quot;node_modules&quot;]\t\r\n    }\r\nGist : https://gist.github.com/ahmadawais/690a816ca158067708ad4dbe17822841\r\n\r\nOR you can check my preferences file here\r\nhttps://github.com/ahmadawais/dotFiles/blob/master/SublimeText/User/Preferences.sublime-settings#L80-L81"
        }
      ],
      "title": "Limit File Search Scope in Sublime Text 2",
      "view_count": 59878,
      "answer_count": 12,
      "code_snippet": [
        "<code>~/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings</code>",
        "<code>// These files will still show up in the side bar, but won't be included in\n// Goto Anything or Find in Files\n\"binary_file_patterns\": [\"*.jpg\", \"*.jpeg\", \"*.png\", \"*.gif\", \"*.ttf\", \"*.tga\", \"*.dds\", \"*.ico\", \"*.eot\", \"*.pdf\", \"*.swf\", \"*.jar\", \"*.zip\"],\n\n\"folder_exclude_patterns\": [\".svn\", \".git\", \".hg\", \"CVS\"],\n</code>",
        "<code>binary_file_patterns</code>",
        "<code>\"file_exclude_patterns\": [\"*.log\"]</code>",
        "<code>\"binary_file_patterns\"</code>",
        "<code>\"binary_file_patterns\": [\"dist/*\", \"node_modules/*\", \"*.jpg\", \"*.jpeg\", \"*.png\", \"*.gif\", \"*.ttf\", \"*.tga\", \"*.dds\", \"*.ico\", \"*.eot\", \"*.pdf\", \"*.swf\", \"*.jar\", \"*.zip\"]\n</code>",
        "<code>project.sublime-project</code>",
        "<code>\"settings\": {...}</code>",
        "<code>folder/**</code>",
        "<code>\"unused/\"</code>",
        "<code>\"*/unused/*\"</code>",
        "<code>-*/unused/*,-*/_sgbak/*</code>",
        "<code>{\n    \"folders\":\n    [\n        {\n            \"path\": \"src\",\n            \"folder_exclude_patterns\": [\"backup\"]\n        },\n        {\n            \"path\": \"docs\",\n            \"file_exclude_patterns\": [\"*.css\"]\n        }\n    ]\n}\n</code>",
        "<code>-*/foldername/*</code>",
        "<code>Where</code>",
        "<code>-*/node_modules/*\n</code>",
        "<code>where</code>",
        "<code>C:\\Projects\\SearchThis,-*/but/not/this/*</code>",
        "<code>/C/path/2/project/folder,*.c,*.h,-*/path/not/to/look/in,/C/path/2/specific/file/file.h\n</code>",
        "<code>&lt;open folders&gt;, &lt;open files&gt;, &lt;current file&gt;</code>",
        "<code>&lt;open folders&gt;,*.c,*.h,-*/never_this_in_folder/*,&lt;open files&gt;\n</code>",
        "<code>folder_exclude_patterns</code>",
        "<code>file_exclude_patterns</code>",
        "<code>-bower_components/**/*, -dist/**/*, -node_modules/**/*, -tmp/**/*\n</code>",
        "<code>-folder1/**/*, -folder2/**/*\n</code>",
        "<code>file_exclude_patterns</code>",
        "<code>folder_exclude_patterns</code>",
        "<code>\"file_exclude_patterns\":\n[\n    \".svn\",\n    \".git\",\n    \".hg\",\n    \".md\",\n    \".txt\",\n    \".DS_Store\"\n],\n\"folder_exclude_patterns\":\n[\n    \"node_modules\",\n    \"bower_components\",\n    \".svn\",\n    \".git\",\n    \".hg\",\n    \"CVS\",\n    \"deprecated\",\n    \"cache\"\n],\n</code>",
        "<code>node_modules</code>",
        "<code>&lt;open folders&gt;,-*/node_modules/*.*,-*/build/*.*</code>",
        "<code>Find: \"something\" Where: \"&lt;open folders&gt;\" // &lt;open folders&gt;\" not include hidden folder in sidebar\n</code>",
        "<code>c/Path/2/Project,-c/Path/2/Project/*/*\n</code>",
        "<code>/*/*</code>",
        "<code>\\/</code>",
        "<code>    {\n        \"folders\":\n        [\n            {\n                \"path\": \"src\",\n                \"folder_exclude_patterns\": [\"backup\\/src\\/log\"]\n            }\n        ]\n    }\n</code>",
        "<code>~/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings</code>",
        "<code>{\n    // Remove certain files permanently from Sublime via Preferences.sublime-settings.\n    \"folder_exclude_patterns\": [\".svn\", \".git\", \".hg\", \"CVS\", \"node_modules\"]   \n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "gruntjs",
        "bower",
        "web-frontend"
      ],
      "creation_date": 1390008961,
      "body_markdown": "I&#39;m new to using npm and bower, building my first app in emberjs :).  \r\nI do have a bit of experience with rails, so I&#39;m familiar with the idea of files for listing dependencies (such as bundler Gemfile)\r\n\r\nQuestion: when I want to add a package (and check in the dependency into git), where does it belong - into `package.json` or into `bower.json`?\r\n\r\nFrom what I gather,  \r\nrunning `bower install` will fetch the package and put it in `/vendor` directory,  \r\nrunning `npm install` it will fetch it and put it into `/node_modules` directory. \r\n\r\n[This SO answer](https://stackoverflow.com/a/16493586/1592915) says bower is for front-end and npm is for backend stuff.  \r\n[Ember-app-kit](https://github.com/stefanpenner/ember-app-kit) seems to adhere to this distinction from the first glance... But instructions in gruntfile for [enabling some functionality](https://github.com/stefanpenner/ember-app-kit/blob/master/Gruntfile.js#L40-L42) give two explicit commands, so I&#39;m totally confused here.\r\n\r\nIntuitively I would guess that  \r\n\r\n1. **npm install --save-dev package-name** would be equivalent to adding the package-name to my package.json \r\n\r\n2. **bower install --save package-name** might be the same as adding the package to my *bower.json* and running **bower install**?  \r\n\r\n\r\nIf that is the case, when should I ever install packages explicitly like that without adding them to the file that manages dependencies (apart from installing command line tools globally)?",
      "last_edit_date": 1495542893,
      "up_vote_count": 543,
      "link": "https://stackoverflow.com/questions/21198977/difference-between-grunt-npm-and-bower-package-json-vs-bower-json",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1390009505,
          "answer_id": 21199026,
          "path": "stack.bower.answer",
          "score": 541,
          "up_vote_count": 543,
          "is_accepted": false,
          "last_activity_date": 1472665387,
          "last_edit_date": 1472665387,
          "body_markdown": "Npm and Bower are both dependency management tools. But the main difference between both is **npm is used for installing Node js modules but bower js is used for managing front end components like html, css, js etc**. \r\n\r\nA fact that makes this more confusing is that npm provides some packages which can be used in front-end development as well, like `grunt` and `jshint`.\r\n\r\nThese lines add more meaning\r\n&gt; Bower, unlike npm, can have multiple files (e.g. .js, .css, .html, .png, .ttf) which are considered the main file(s). Bower semantically considers these main files, when packaged together, a component.\r\n\r\n**Edit**: **Grunt** is quite different from Npm and Bower. Grunt is a javascript task runner tool. You can do a lot of things using grunt which you had to do manually otherwise. Highlighting some of the uses of Grunt:\r\n\r\n1. Zipping some files (e.g. zipup plugin)\r\n2. Linting on js files (jshint)\r\n3. Compiling less files (grunt-contrib-less)\r\n\r\nThere are grunt plugins for sass compilation, uglifying your javascript, copy files/folders, minifying javascript etc. \r\n\r\nPlease Note that grunt plugin is also an npm package.\r\n\r\n**Question-1**\r\n&gt; When I want to add a package (and check in the dependency into git), where does it belong - into package.json or into bower.json\r\n\r\nIt really depends where does this package belong to. If it is a node module(like grunt,request) then it will go in package.json otherwise into bower json.\r\n\r\n**Question-2**\r\n&gt; When should I ever install packages explicitly like that without adding them to the file that manages dependencies\r\n\r\nIt does not matter whether you are installing packages explicitly or mentioning the dependency in .json file. Suppose you are in the middle of working on a node project and you need another project, say `request`, then you have two options:\r\n\r\n- Edit the package.json file and add a dependency on &#39;request&#39;\r\n- npm install\r\n\r\nOR\r\n\r\n- Use commandline: `npm install --save request`\r\n\r\n`--save` options adds the dependency to package.json file as well. If you don&#39;t specify `--save` option, it will only download the package but the json file will be unaffected.\r\n\r\nYou can do this either way, there will not be a substantial difference."
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1472582237,
          "answer_id": 39234812,
          "path": "stack.bower.answer",
          "score": 126,
          "up_vote_count": 131,
          "is_accepted": true,
          "last_activity_date": 1472582237,
          "body_markdown": "**Update for mid 2016**:\r\n\r\nThe things are changing so fast that if it&#39;s late 2017 this answer might not be up to date anymore!\r\n\r\nBeginners can quickly get lost in choice of build tools and workflows, but what&#39;s most up to date in 2016 is not using Bower, Grunt or Gulp at all! With help of Webpack you can do everything directly in NPM!\r\n\r\n- Google &quot;npm as build tool&quot; result:\r\n  https://medium.com/@dabit3/introduction-to-using-npm-as-a-build-tool-b41076f488b0#.c33e74tsa\r\n\r\n- Webpack: https://webpack.github.io/docs/installation.html\r\n\r\n\r\nDon&#39;t get me wrong people use other workflows and I still use GULP in my legacy project(but slowly moving out of it), but this is how it&#39;s done in the best companies and developers working in this workflow make a LOT of money!\r\n\r\nLook at this template it&#39;s a very up-to-date setup consisting of a mixture of the best and the latest technologies:\r\nhttps://github.com/coryhouse/react-slingshot\r\n\r\n - Webpack\r\n - NPM as a build tool (no Gulp, Grunt or Bower)\r\n - React with Redux\r\n - ESLint\r\n - the list is long. Go and explore!\r\n\r\nYour questions:\r\n\r\n&gt; When I want to add a package (and check in the dependency into git),\r\n&gt; where does it belong - into package.json or into bower.json\r\n\r\n - Everything belongs in package.json now\r\n \r\n - Dependencies required for build are in &quot;devDependencies&quot; i.e. `npm install require-dir --save-dev` (--save-dev updates your package.json by adding an entry to devDependencies)\r\n - Dependencies required for your application during runtime are in &quot;dependencies&quot; i.e. `npm install lodash --save` (--save updates your package.json by adding an entry to dependencies)\r\n\r\n&gt; If that is the case, when should I ever install packages explicitly like that without adding them to the file that manages dependencies (apart from installing command line tools globally)?\r\n\r\n**Always**. Just because of comfort. When you add a flag (`--save-dev` or `--save`) the file that manages deps (package.json) gets updated automatically. Don&#39;t waste time by editing dependencies in it manually. Shortcut for `npm install --save-dev package-name` is `npm i -D package-name` and shortcut for `npm install --save package-name` is `npm i -S package-name`"
        }
      ],
      "title": "Difference between Grunt, NPM and Bower ( package.json vs bower.json )",
      "view_count": 158717,
      "answer_count": 2,
      "code_snippet": [
        "<code>package.json</code>",
        "<code>bower.json</code>",
        "<code>bower install</code>",
        "<code>/vendor</code>",
        "<code>npm install</code>",
        "<code>/node_modules</code>",
        "<code>npm install require-dir --save-dev</code>",
        "<code>npm install lodash --save</code>",
        "<code>--save-dev</code>",
        "<code>--save</code>",
        "<code>npm install --save-dev package-name</code>",
        "<code>npm i -D package-name</code>",
        "<code>npm install --save package-name</code>",
        "<code>npm i -S package-name</code>",
        "<code>With help of Webpack you can do everything directly in NPM!</code>",
        "<code>grunt</code>",
        "<code>jshint</code>",
        "<code>request</code>",
        "<code>npm install --save request</code>",
        "<code>--save</code>",
        "<code>--save</code>",
        "<code>npm</code>",
        "<code>package.json</code>",
        "<code>npm install</code>",
        "<code>node_modules</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "coffeescript",
        "npm",
        "node-modules"
      ],
      "creation_date": 1331623866,
      "body_markdown": "How do I use a local version of a module in `node.js`. For example, in my app, I installed coffee-script:\r\n\r\n    npm install coffee-script\r\n\r\nThis installs it in `./node_modules` and the coffee command is in `./node_modules/.bin/coffee`. Is there a way to run this command when I&#39;m in my project&#39;s main folder? I guess I&#39;m looking for something similar to `bundle exec` in bundler. Basically, I&#39;d like to specify a version of coffee-script that everyone involved with the project should use.\r\n\r\nI know I can add the `-g` flag to install it globally so coffee works fine anywhere, but what if I wanted to have different versions of coffee per project?\r\n",
      "last_edit_date": 1443516577,
      "up_vote_count": 301,
      "link": "https://stackoverflow.com/questions/9679932/how-to-use-package-installed-locally-in-node-modules",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 8,
          "creation_date": 1331625480,
          "answer_id": 9680221,
          "path": "stack.gulp.answer",
          "score": -8,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1331625480,
          "body_markdown": "Include coffee-script in package.json with the specific version required in each project, typically like this:\r\n\r\n    &quot;dependencies&quot;:{\r\n      &quot;coffee-script&quot;: &quot;&gt;= 1.2.0&quot;\r\n\r\nThen run npm install to install dependencies in each project. This will install the specified version of coffee-script which will be accessible locally to each project."
        },
        {
          "tags": [],
          "down_vote_count": 9,
          "creation_date": 1331639541,
          "answer_id": 9683472,
          "path": "stack.gulp.answer",
          "score": 38,
          "up_vote_count": 47,
          "is_accepted": false,
          "last_activity_date": 1444140131,
          "last_edit_date": 1444140131,
          "body_markdown": "**Update:** I no longer recommend this method, both for the mentioned security reasons and not the least the newer `npm bin` command. Original answer below:\r\n\r\nAs you have found out, any locally installed binaries are in `./node_modules/.bin`. In order to always run binaries in this directory rather than globally available binaries, if present, I suggest you put `./node_modules/.bin` first in your path:\r\n\r\n    export PATH=&quot;./node_modules/.bin:$PATH&quot;\r\n\r\nIf you put this in your `~/.profile`, `coffee` will always be `./node_modules/.bin/coffee` if available, otherwise `/usr/local/bin/coffee` (or whatever prefix you are installing node modules under)."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1362139563,
          "answer_id": 15157360,
          "path": "stack.gulp.answer",
          "score": 421,
          "up_vote_count": 423,
          "is_accepted": true,
          "last_activity_date": 1490830498,
          "last_edit_date": 1490830498,
          "body_markdown": "The problem with putting\r\n\r\n    ./node_modules/.bin\r\n\r\ninto your PATH is that it only works when your current working directory is the root of your project directory structure (i.e. the location of `node_modules`)\r\n\r\nIndependent of what your working directory is, you can get the path of locally installed binaries with\r\n\r\n    npm bin\r\n\r\nTo execute a locally installed `coffee` binary independent of where you are in the project directory hierarchy you can use this bash construct\r\n\r\n    PATH=$(npm bin):$PATH coffee\r\n\r\nI aliased this to npm-exec\r\n\r\n    alias npm-exec=&#39;PATH=$(npm bin):$PATH&#39;\r\n\r\nSo, now I can\r\n\r\n    npm-exec coffee\r\n\r\nto run the correct copy of coffee no matter of where I am\r\n\r\n    $ pwd\r\n    /Users/regular/project1\r\n    \r\n    $ npm-exec which coffee\r\n    /Users/regular/project1/node_modules/.bin/coffee\r\n\r\n    $ cd lib/\r\n    $ npm-exec which coffee\r\n    /Users/regular/project1/node_modules/.bin/coffee\r\n\r\n    $ cd ~/project2\r\n    $ npm-exec which coffee\r\n    /Users/regular/project2/node_modules/.bin/coffee\r\n    "
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1384150450,
          "answer_id": 19899975,
          "path": "stack.gulp.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1384150450,
          "body_markdown": "If you want your PATH variable to correctly update based on your current working directory, add this to the end of your `.bashrc`-equivalent (or after anything that defines `PATH`):\r\n\r\n    __OLD_PATH=$PATH\r\n    function updatePATHForNPM() {\r\n      export PATH=$(npm bin):$__OLD_PATH\r\n    }\r\n\r\n    function node-mode() {\r\n      PROMPT_COMMAND=updatePATHForNPM\r\n    }\r\n\r\n    function node-mode-off() {\r\n      unset PROMPT_COMMAND\r\n      PATH=$__OLD_PATH\r\n    }\r\n\r\n    # Uncomment to enable node-mode by default:\r\n    # node-mode\r\n\r\nThis may add a short delay every time the bash prompt gets rendered (depending on the size of your project, most likely), so it&#39;s disabled by default.\r\n\r\nYou can enable and disable it within your terminal by running `node-mode` and `node-mode-off`, respectively."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1418433535,
          "answer_id": 27454532,
          "path": "stack.gulp.answer",
          "score": 79,
          "up_vote_count": 80,
          "is_accepted": false,
          "last_activity_date": 1418433535,
          "body_markdown": "Use the `npm bin` command to get the node modules /bin directory of your project\r\n\r\n    $ $(npm bin)/&lt;binary-name&gt; [args]\r\n\r\ne.g.\r\n\r\n    $ $(npm bin)/bower install\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1419978043,
          "answer_id": 27713427,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1419978413,
          "last_edit_date": 1495540510,
          "body_markdown": "I encountered the same problem and I don&#39;t particularly like using aliases (as [regular][1]&#39;s suggested), and if you don&#39;t like them too then here&#39;s another workaround that I use, you first have to create a tiny executable bash script, say **setenv.sh**:\r\n\r\n    #!/bin/sh\r\n\r\n    # Add your local node_modules bin to the path\r\n    export PATH=&quot;$(npm bin):$PATH&quot;\r\n\r\n    # execute the rest of the command\r\n    exec &quot;$@&quot;\r\n\r\nand then you can then use any executables in your local `/bin` using this command:\r\n\r\n    ./setenv.sh &lt;command&gt;\r\n    ./setenv.sh 6to5-node server.js\r\n    ./setenv.sh grunt\r\n\r\nIf you&#39;re using `scripts` in package.json then:\r\n\r\n    ...,\r\n    scripts: {\r\n        &#39;start&#39;: &#39;./setenv.sh &lt;command&gt;&#39;\r\n    }\r\n\r\n\r\n\r\n  [1]: https://stackoverflow.com/users/1196043/regular"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1424117451,
          "answer_id": 28549523,
          "path": "stack.gulp.answer",
          "score": 61,
          "up_vote_count": 61,
          "is_accepted": false,
          "last_activity_date": 1424117451,
          "body_markdown": "Use `npm run[-script] &lt;script name&gt;`\r\n\r\nAfter using npm to install the bin package to your local ./node_modules directory, modify package.json to add &lt;script name&gt; like this:\r\n\r\n    $ npm install --save learnyounode\r\n    $ edit packages.json\r\n    &gt;&gt;&gt; in packages.json\r\n    ...\r\n    &quot;scripts&quot;: {\r\n        &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\r\n        &quot;learnyounode&quot;: &quot;learnyounode&quot;\r\n    },\r\n    ...\r\n    $ npm run learnyounode\r\n\r\n*It would be nice if npm install had a --add-script option or something or if npm run would work without adding to the scripts block.*"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439845782,
          "answer_id": 32059751,
          "path": "stack.gulp.answer",
          "score": 22,
          "up_vote_count": 22,
          "is_accepted": false,
          "last_activity_date": 1439845782,
          "body_markdown": "The PATH solution has the issue that if $(npm bin) is placed in your .profile/.bashrc/etc it is evaluated once and is forever set to whichever directory the path was first evaluated in. If instead you modify the current path then every time you run the script your path will grow. \r\n\r\nTo get around these issues, I create a function and used that. It doesn&#39;t modify your environment and is simple to use:\r\n\r\n    function npm-exec {\r\n       $(npm bin)/$@  \r\n    }\r\nThis can then be used like this without making any changes to your environment:\r\n\r\n    npm-exec r.js &lt;args&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1441723369,
          "answer_id": 32460731,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1486468698,
          "last_edit_date": 1486468698,
          "body_markdown": "Same @regular &#39;s accepted solution, but Fish shell flavour\r\n\r\n&lt;!-- language: fish --&gt;\r\n\r\n    if not contains (npm bin) $PATH\r\n        set PATH (npm bin) $PATH\r\n    end"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453154963,
          "answer_id": 34864975,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1453154963,
          "body_markdown": "[zxc][] is like &quot;bundle exec&quot; for nodejs. It is similar to using `PATH=$(npm bin):$PATH`:\r\n\r\n    $ npm install -g zxc\r\n    $ npm install gulp\r\n    $ zxc which gulp\r\n    /home/nathan/code/project1/node_modules/.bin/gulp\r\n    \r\n\r\n\r\n[zxc]: https://www.npmjs.com/package/zxc"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1468547312,
          "answer_id": 38386701,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1471930217,
          "last_edit_date": 1471930217,
          "body_markdown": "I&#39;d love to know if this is an insecure/bad idea, but after thinking about it a bit I don&#39;t see an issue here:\r\n\r\nModifying Linus&#39;s insecure solution to add it to the end, using `npm bin` to find the directory, and making the script only call `npm bin` when a `package.json` is present in a parent (for speed), this is what I came up with for `zsh`:\r\n\r\n    find-up () {\r\n      path=$(pwd)\r\n      while [[ &quot;$path&quot; != &quot;&quot; &amp;&amp; ! -e &quot;$path/$1&quot; ]]; do\r\n        path=${path%/*}\r\n      done\r\n      echo &quot;$path&quot;\r\n    }\r\n\r\n    precmd() {\r\n      if [ &quot;$(find-up package.json)&quot; != &quot;&quot; ]; then\r\n        new_bin=$(npm bin)\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;$new_bin&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\r\n          export NODE_MODULES_PATH=$new_bin\r\n        fi\r\n      else\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}\r\n          export NODE_MODULES_PATH=&quot;&quot;\r\n        fi\r\n      fi\r\n    }\r\n\r\nFor `bash`, instead of using the `precmd` hook, you can use the `$PROMPT_COMMAND` variable (I haven&#39;t tested this but you get the idea):\r\n\r\n    __add-node-to-path() {\r\n      if [ &quot;$(find-up package.json)&quot; != &quot;&quot; ]; then\r\n        new_bin=$(npm bin)\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;$new_bin&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\r\n          export NODE_MODULES_PATH=$new_bin\r\n        fi\r\n      else\r\n        if [ &quot;$NODE_MODULES_PATH&quot; != &quot;&quot; ]; then\r\n          export PATH=${PATH%:$NODE_MODULES_PATH}\r\n          export NODE_MODULES_PATH=&quot;&quot;\r\n        fi\r\n      fi   \r\n    }\r\n\r\n    export PROMPT_COMMAND=&quot;__add-node-to-path&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1470265209,
          "answer_id": 38754980,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1510745907,
          "last_edit_date": 1510745907,
          "body_markdown": "# For Windows\r\n\r\nStore the following in a file called `npm-exec.bat` and add it to your `%PATH%`\r\n\r\n    @echo off\r\n    set cmd=&quot;npm bin&quot;\r\n    FOR /F &quot;tokens=*&quot; %%i IN (&#39; %cmd% &#39;) DO SET modules=%%i\r\n    &quot;%modules%&quot;\\%*\r\n\r\n\r\n## Usage\r\nThen you can use it like \r\n`npm-exec &lt;command&gt; &lt;arg0&gt; &lt;arg1&gt; ...` \r\n\r\n**For example**\r\n\r\nTo execute `wdio` installed in local node_modules directory, do:\r\n\r\n    npm-exec wdio wdio.conf.js\r\n\r\n i.e. it will run  `.\\node_modules\\.bin\\wdio wdio.conf.js`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1477689646,
          "answer_id": 40313363,
          "path": "stack.gulp.answer",
          "score": 42,
          "up_vote_count": 42,
          "is_accepted": false,
          "last_activity_date": 1477689646,
          "body_markdown": "Use [`npm-run`](https://www.npmjs.com/package/npm-run).\r\n\r\nFrom the readme:\r\n\r\n# npm-run\r\n\r\n### Find &amp; run local executables from node_modules\r\n\r\nAny executable available to an npm lifecycle script is available to `npm-run`.\r\n\r\n## Usage\r\n\r\n    $ npm install mocha # mocha installed in ./node_modules\r\n    $ npm-run mocha test/* # uses locally installed mocha executable \r\n\r\n## Installation\r\n\r\n    $ npm install -g npm-run"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1479255743,
          "answer_id": 40622066,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1479255743,
          "body_markdown": "You can also use direnv and change the $PATH variable only in your working folder.\r\n\r\n    $ cat .envrc\r\n    &gt; export PATH=$(npm bin):$PATH"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1482166170,
          "answer_id": 41227356,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1485397548,
          "last_edit_date": 1485397548,
          "body_markdown": "Add this script to your `.bashrc`. Then you can call `coffee` or anyhting locally. This is handy for your laptop, but don&#39;t use it on your server.\r\n\r\n    DEFAULT_PATH=$PATH;\r\n    \r\n    add_local_node_modules_to_path(){\r\n      NODE_MODULES=&#39;./node_modules/.bin&#39;;\r\n      if [ -d $NODE_MODULES ]; then\r\n        PATH=$DEFAULT_PATH:$NODE_MODULES;\r\n      else\r\n        PATH=$DEFAULT_PATH;\r\n      fi\r\n    }\r\n    \r\n    cd () {\r\n      builtin cd &quot;$@&quot;;\r\n      add_local_node_modules_to_path;\r\n    }\r\n    \r\n    add_local_node_modules_to_path;\r\n\r\n*note*: this script makes aliase of `cd` command, and after each call of `cd` it checks `node_modules/.bin` and add it to your `$PATH`.\r\n\r\n*note2*: you can change the third line to `NODE_MODULES=$(npm bin);`. But that would make `cd` command too slow."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1485422862,
          "answer_id": 41870325,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1485422862,
          "body_markdown": "I am a `Windows` user and this is what worked for me:\r\n\r\n\r\n    // First set some variable - i.e. replace is with &quot;xo&quot;\r\n    D:\\project\\root&gt; set xo=&quot;./node_modules/.bin/&quot;\r\n    \r\n    // Next, work with it\r\n    D:\\project\\root&gt; %xo%/bower install\r\n\r\n\r\nGood Luck.\r\n "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1486040358,
          "answer_id": 42002907,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1487781308,
          "last_edit_date": 1487781308,
          "body_markdown": "For Windows use this:\r\n\r\n    /* cmd into &quot;node_modules&quot; folder */\r\n    &quot;%CD%\\.bin\\grunt&quot; --version"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1495211341,
          "answer_id": 44074849,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1495212351,
          "last_edit_date": 1495212351,
          "body_markdown": "In case you are using `fish shell` and do not want to add to `$path` for security reason. We can add the below function to run local node executables. \r\n\r\n    ### run executables in node_module/.bin directory\r\n    function n \r\n      set -l npmbin (npm bin)   \r\n      set -l argvCount (count $argv)\r\n      switch $argvCount\r\n        case 0\r\n          echo please specify the local node executable as 1st argument\r\n        case 1\r\n          # for one argument, we can eval directly \r\n          eval $npmbin/$argv\r\n        case &#39;*&#39;\r\n          set --local executable $argv[1]\r\n          # for 2 or more arguments we cannot append directly after the $npmbin/ since the fish will apply each array element after the the start string: $npmbin/arg1 $npmbin/arg2... \r\n          # This is just how fish interoperate array. \r\n          set --erase argv[1]\r\n          eval $npmbin/$executable $argv \r\n      end\r\n    end\r\n\r\nNow you can run thing like: \r\n\r\n`n coffee`\r\n\r\nor more arguments like:\r\n\r\n`n browser-sync --version`\r\n\r\nNote, if you are `bash` user, then @Bob9630 answers is the way to go by leveraging bash&#39;s `$@`, which is not available in `fishshell`. "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1500375581,
          "answer_id": 45164863,
          "path": "stack.gulp.answer",
          "score": 65,
          "up_vote_count": 65,
          "is_accepted": false,
          "last_activity_date": 1519874908,
          "last_edit_date": 1519874908,
          "body_markdown": "[![Nice example][2]][2]\r\n\r\nYou don&#39;t have to manipulate `$PATH` anymore!\r\n\r\n\r\nFrom [npm@5.2.0][1], **npm** ships with `npx` package which lets you run commands from a local `node_modules/.bin` or from a central cache.\r\n\r\nSimply run:\r\n\r\n\r\n    $ npx [options] &lt;command&gt;[@version] [command-arg]...\r\n\r\n\r\nBy default, `npx` will check whether `&lt;command&gt;` exists in `$PATH`, or in the local project binaries, and execute that.\r\n\r\nCalling `npx &lt;command&gt;` when `&lt;command&gt;` isn&#39;t already in your `$PATH` will automatically install a package with that name from the NPM registry for you, and invoke it. When it&#39;s done, the installed package won’t be anywhere in your globals, so you won’t have to worry about pollution in the long-term. You can prevent this behaviour by providing `--no-install` option.\r\n\r\n\r\nFor `npm &lt; 5.2.0`, you can install `npx` package manually by running the following command:\r\n\r\n    $ npm install -g npx\r\n\r\n\r\n  [1]: https://github.com/npm/npm/releases/tag/v5.2.0\r\n  [2]: https://i.stack.imgur.com/zyFua.gif"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1502448844,
          "answer_id": 45633460,
          "path": "stack.gulp.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1517842480,
          "last_edit_date": 1517842480,
          "body_markdown": "If you want to keep npm, then [npx](https://stackoverflow.com/a/45164863/457268) should do what you need.\r\n\r\n---\r\n\r\nIf switching to yarn (a npm replacement by facebook) is an option for you, then you can call:\r\n\r\n     yarn yourCmd\r\n\r\nscripts inside the package.json will take precedence, if none is found it will look inside the `./node_modules/.bin/` folder.\r\n\r\nIt also outputs what it ran:\r\n\r\n    $ yarn tsc\r\n    yarn tsc v0.27.5\r\n    $ &quot;/home/philipp/rate-pipeline/node_modules/.bin/tsc&quot;\r\n\r\nSo you don&#39;t have to setup scripts for each command in your `package.json`.\r\n\r\n\r\n---\r\n\r\nIf you had a script defined at `.scripts` inside your `package.json`:\r\n\r\n    &quot;tsc&quot;: &quot;tsc&quot; // each command defined in the scripts will be executed from `./node_modules/.bin/` first\r\n\r\n`yarn tsc` would be equivalent to `yarn run tsc` or `npm run tsc`:\r\n\r\n     yarn tsc\r\n     yarn tsc v0.27.5\r\n     $ tsc\r\n\r\n"
        }
      ],
      "title": "How to use package installed locally in node_modules?",
      "view_count": 135620,
      "answer_count": 20,
      "code_snippet": [
        "<code>node.js</code>",
        "<code>npm install coffee-script\n</code>",
        "<code>./node_modules</code>",
        "<code>./node_modules/.bin/coffee</code>",
        "<code>bundle exec</code>",
        "<code>-g</code>",
        "<code>npm install niftycommand</code>",
        "<code>niftycommand</code>",
        "<code>coffee</code>",
        "<code>npm scripts</code>",
        "<code>\"build\": \"coffee -co target/directory source/directoy\", so you can run </code>",
        "<code>./node_modules/.bin\n</code>",
        "<code>node_modules</code>",
        "<code>npm bin\n</code>",
        "<code>coffee</code>",
        "<code>PATH=$(npm bin):$PATH coffee\n</code>",
        "<code>alias npm-exec='PATH=$(npm bin):$PATH'\n</code>",
        "<code>npm-exec coffee\n</code>",
        "<code>$ pwd\n/Users/regular/project1\n\n$ npm-exec which coffee\n/Users/regular/project1/node_modules/.bin/coffee\n\n$ cd lib/\n$ npm-exec which coffee\n/Users/regular/project1/node_modules/.bin/coffee\n\n$ cd ~/project2\n$ npm-exec which coffee\n/Users/regular/project2/node_modules/.bin/coffee\n</code>",
        "<code>alias coffee=\"npm-exec coffee\"</code>",
        "<code>npm bin</code>",
        "<code>PATH</code>",
        "<code>npm bin</code>",
        "<code>$ $(npm bin)/&lt;binary-name&gt; [args]\n</code>",
        "<code>$ $(npm bin)/bower install\n</code>",
        "<code>export PATH=\"./node_modules/.bin:$PATH\"</code>",
        "<code>$(npm bin)/jasmine</code>",
        "<code>node $(npm bin)/jasmine</code>",
        "<code>$PATH</code>",
        "<code>npx</code>",
        "<code>node_modules/.bin</code>",
        "<code>$ npx [options] &lt;command&gt;[@version] [command-arg]...\n</code>",
        "<code>npx</code>",
        "<code>&lt;command&gt;</code>",
        "<code>$PATH</code>",
        "<code>npx &lt;command&gt;</code>",
        "<code>&lt;command&gt;</code>",
        "<code>$PATH</code>",
        "<code>--no-install</code>",
        "<code>npm &lt; 5.2.0</code>",
        "<code>npx</code>",
        "<code>$ npm install -g npx\n</code>",
        "<code>npm run[-script] &lt;script name&gt;</code>",
        "<code>$ npm install --save learnyounode\n$ edit packages.json\n&gt;&gt;&gt; in packages.json\n...\n\"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\",\n    \"learnyounode\": \"learnyounode\"\n},\n...\n$ npm run learnyounode\n</code>",
        "<code>npm install</code>",
        "<code>npm run eslint</code>",
        "<code>npm start</code>",
        "<code>--</code>",
        "<code>npm run learnyounode -- --normal-switches --watch -d *.js</code>",
        "<code>npm-run</code>",
        "<code>npm-run</code>",
        "<code>$ npm install mocha # mocha installed in ./node_modules\n$ npm-run mocha test/* # uses locally installed mocha executable \n</code>",
        "<code>$ npm install -g npm-run\n</code>",
        "<code>npm bin</code>",
        "<code>./node_modules/.bin</code>",
        "<code>./node_modules/.bin</code>",
        "<code>export PATH=\"./node_modules/.bin:$PATH\"\n</code>",
        "<code>~/.profile</code>",
        "<code>coffee</code>",
        "<code>./node_modules/.bin/coffee</code>",
        "<code>/usr/local/bin/coffee</code>",
        "<code>./node_modules/.bin/coffee --output lib/ --compile --bare --watch src</code>",
        "<code>/tmp</code>",
        "<code>ls</code>",
        "<code>cp</code>",
        "<code>alias npm-exec='PATH=$(npm bin):$PATH'</code>",
        "<code>PATH</code>",
        "<code>$(npm bin)</code>",
        "<code>npm bin</code>",
        "<code>PATH</code>",
        "<code>npm</code>",
        "<code>function npm-exec {\n   $(npm bin)/$@  \n}\n</code>",
        "<code>npm-exec r.js &lt;args&gt;\n</code>",
        "<code>n</code>",
        "<code> yarn yourCmd\n</code>",
        "<code>./node_modules/.bin/</code>",
        "<code>$ yarn tsc\nyarn tsc v0.27.5\n$ \"/home/philipp/rate-pipeline/node_modules/.bin/tsc\"\n</code>",
        "<code>package.json</code>",
        "<code>.scripts</code>",
        "<code>package.json</code>",
        "<code>\"tsc\": \"tsc\" // each command defined in the scripts will be executed from `./node_modules/.bin/` first\n</code>",
        "<code>yarn tsc</code>",
        "<code>yarn run tsc</code>",
        "<code>npm run tsc</code>",
        "<code> yarn tsc\n yarn tsc v0.27.5\n $ tsc\n</code>",
        "<code>.bashrc</code>",
        "<code>PATH</code>",
        "<code>__OLD_PATH=$PATH\nfunction updatePATHForNPM() {\n  export PATH=$(npm bin):$__OLD_PATH\n}\n\nfunction node-mode() {\n  PROMPT_COMMAND=updatePATHForNPM\n}\n\nfunction node-mode-off() {\n  unset PROMPT_COMMAND\n  PATH=$__OLD_PATH\n}\n\n# Uncomment to enable node-mode by default:\n# node-mode\n</code>",
        "<code>node-mode</code>",
        "<code>node-mode-off</code>",
        "<code>npm-exec.bat</code>",
        "<code>%PATH%</code>",
        "<code>@echo off\nset cmd=\"npm bin\"\nFOR /F \"tokens=*\" %%i IN (' %cmd% ') DO SET modules=%%i\n\"%modules%\"\\%*\n</code>",
        "<code>npm-exec &lt;command&gt; &lt;arg0&gt; &lt;arg1&gt; ...</code>",
        "<code>wdio</code>",
        "<code>npm-exec wdio wdio.conf.js\n</code>",
        "<code>.\\node_modules\\.bin\\wdio wdio.conf.js</code>",
        "<code>$ cat .envrc\n&gt; export PATH=$(npm bin):$PATH\n</code>",
        "<code>.bashrc</code>",
        "<code>coffee</code>",
        "<code>DEFAULT_PATH=$PATH;\n\nadd_local_node_modules_to_path(){\n  NODE_MODULES='./node_modules/.bin';\n  if [ -d $NODE_MODULES ]; then\n    PATH=$DEFAULT_PATH:$NODE_MODULES;\n  else\n    PATH=$DEFAULT_PATH;\n  fi\n}\n\ncd () {\n  builtin cd \"$@\";\n  add_local_node_modules_to_path;\n}\n\nadd_local_node_modules_to_path;\n</code>",
        "<code>cd</code>",
        "<code>cd</code>",
        "<code>node_modules/.bin</code>",
        "<code>$PATH</code>",
        "<code>NODE_MODULES=$(npm bin);</code>",
        "<code>cd</code>",
        "<code>$(npm bin)</code>",
        "<code>./node_modules/.bin</code>",
        "<code>$(npm bin)</code>",
        "<code>cd</code>",
        "<code>if not contains (npm bin) $PATH\n    set PATH (npm bin) $PATH\nend\n</code>",
        "<code>/* cmd into \"node_modules\" folder */\n\"%CD%\\.bin\\grunt\" --version\n</code>",
        "<code>PATH=$(npm bin):$PATH</code>",
        "<code>$ npm install -g zxc\n$ npm install gulp\n$ zxc which gulp\n/home/nathan/code/project1/node_modules/.bin/gulp\n</code>",
        "<code>npm bin</code>",
        "<code>npm bin</code>",
        "<code>package.json</code>",
        "<code>zsh</code>",
        "<code>find-up () {\n  path=$(pwd)\n  while [[ \"$path\" != \"\" &amp;&amp; ! -e \"$path/$1\" ]]; do\n    path=${path%/*}\n  done\n  echo \"$path\"\n}\n\nprecmd() {\n  if [ \"$(find-up package.json)\" != \"\" ]; then\n    new_bin=$(npm bin)\n    if [ \"$NODE_MODULES_PATH\" != \"$new_bin\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\n      export NODE_MODULES_PATH=$new_bin\n    fi\n  else\n    if [ \"$NODE_MODULES_PATH\" != \"\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}\n      export NODE_MODULES_PATH=\"\"\n    fi\n  fi\n}\n</code>",
        "<code>bash</code>",
        "<code>precmd</code>",
        "<code>$PROMPT_COMMAND</code>",
        "<code>__add-node-to-path() {\n  if [ \"$(find-up package.json)\" != \"\" ]; then\n    new_bin=$(npm bin)\n    if [ \"$NODE_MODULES_PATH\" != \"$new_bin\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}:$new_bin\n      export NODE_MODULES_PATH=$new_bin\n    fi\n  else\n    if [ \"$NODE_MODULES_PATH\" != \"\" ]; then\n      export PATH=${PATH%:$NODE_MODULES_PATH}\n      export NODE_MODULES_PATH=\"\"\n    fi\n  fi   \n}\n\nexport PROMPT_COMMAND=\"__add-node-to-path\"\n</code>",
        "<code>npm bin</code>",
        "<code>$PATH</code>",
        "<code>Windows</code>",
        "<code>// First set some variable - i.e. replace is with \"xo\"\nD:\\project\\root&gt; set xo=\"./node_modules/.bin/\"\n\n// Next, work with it\nD:\\project\\root&gt; %xo%/bower install\n</code>",
        "<code>fish shell</code>",
        "<code>$path</code>",
        "<code>### run executables in node_module/.bin directory\nfunction n \n  set -l npmbin (npm bin)   \n  set -l argvCount (count $argv)\n  switch $argvCount\n    case 0\n      echo please specify the local node executable as 1st argument\n    case 1\n      # for one argument, we can eval directly \n      eval $npmbin/$argv\n    case '*'\n      set --local executable $argv[1]\n      # for 2 or more arguments we cannot append directly after the $npmbin/ since the fish will apply each array element after the the start string: $npmbin/arg1 $npmbin/arg2... \n      # This is just how fish interoperate array. \n      set --erase argv[1]\n      eval $npmbin/$executable $argv \n  end\nend\n</code>",
        "<code>n coffee</code>",
        "<code>n browser-sync --version</code>",
        "<code>bash</code>",
        "<code>$@</code>",
        "<code>fishshell</code>",
        "<code>#!/bin/sh\n\n# Add your local node_modules bin to the path\nexport PATH=\"$(npm bin):$PATH\"\n\n# execute the rest of the command\nexec \"$@\"\n</code>",
        "<code>/bin</code>",
        "<code>./setenv.sh &lt;command&gt;\n./setenv.sh 6to5-node server.js\n./setenv.sh grunt\n</code>",
        "<code>scripts</code>",
        "<code>...,\nscripts: {\n    'start': './setenv.sh &lt;command&gt;'\n}\n</code>",
        "<code>\"dependencies\":{\n  \"coffee-script\": \"&gt;= 1.2.0\"\n</code>",
        "<code>npm install svgo</code>",
        "<code>npm install</code>",
        "<code>grunt-cli</code>",
        "<code>grunt</code>",
        "<code>grunt</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "package",
        "npm"
      ],
      "creation_date": 1339360587,
      "body_markdown": "How to find the version of an installed node.js/npm **package**?\r\n\r\nThis prints the version of npm itself:\r\n\r\n    npm -v &lt;package-name&gt;\r\n\r\nThis prints a cryptic error:\r\n\r\n    npm version &lt;package-name&gt;\r\n\r\nThis prints the package version *on the registry* (i.e. the latest version available):\r\n\r\n    npm view &lt;package-name&gt; version\r\n\r\nHow do I get the **installed version**?",
      "last_edit_date": 1407933089,
      "up_vote_count": 1403,
      "link": "https://stackoverflow.com/questions/10972176/find-the-version-of-an-installed-npm-package",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1339442006,
          "answer_id": 10986132,
          "path": "stack.bower.answer",
          "score": 1734,
          "up_vote_count": 1738,
          "is_accepted": true,
          "last_activity_date": 1492360919,
          "last_edit_date": 1492360919,
          "body_markdown": "`npm list` for local packages or `npm list -g` for globally installed packages.\r\n\r\nYou can find the version of a specific package by passing its name as an argument. For example, `npm list grunt` will result in:\r\n\r\n    projectName@projectVersion /path/to/project/folder\r\n    └── grunt@0.4.1\r\n\r\nAlternatively, you can just run `npm list` without passing a package name as an argument to see the versions of all your packages:\r\n\r\n    ├─┬ cli-color@0.1.6 \r\n    │ └── es5-ext@0.7.1 \r\n    ├── coffee-script@1.3.3 \r\n    ├── less@1.3.0 \r\n    ├─┬ sentry@0.1.2 \r\n    │ ├── file@0.2.1 \r\n    │ └── underscore@1.3.3 \r\n    └── uglify-js@1.2.6 \r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1369273816,
          "answer_id": 16704412,
          "path": "stack.bower.answer",
          "score": 642,
          "up_vote_count": 643,
          "is_accepted": false,
          "last_activity_date": 1495694605,
          "last_edit_date": 1495694605,
          "body_markdown": "Another quick way of finding out what packages are installed **locally** and **without their dependencies** is to use:\r\n\r\n    npm list --depth=0\r\n\r\nWhich gives you something like \r\n\r\n    ├── bower@0.8.6\r\n    ├── grunt@0.4.1\r\n    ├── grunt-bower-requirejs@0.4.3\r\n    ├── grunt-contrib-clean@0.4.1\r\n    ├── grunt-contrib-coffee@0.7.0\r\n    ├── grunt-contrib-copy@0.4.1\r\n    ├── grunt-contrib-imagemin@0.1.4\r\n    ├── grunt-contrib-jshint@0.1.1\r\n    ├── grunt-contrib-livereload@0.1.2\r\n    ├── grunt-contrib-requirejs@0.4.1\r\n    ├── grunt-regarde@0.1.1\r\n    └── grunt-svgmin@0.1.0\r\n\r\nObviously, the same can be done globally with `npm list -g --depth=0`.\r\n\r\nThis method is clearer in case you have installed a lot of packages.\r\n\r\nTo find out which packages need to be updated, you can use `npm outdated -g --depth=0`."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1404183821,
          "answer_id": 24501909,
          "path": "stack.bower.answer",
          "score": 140,
          "up_vote_count": 142,
          "is_accepted": false,
          "last_activity_date": 1416572885,
          "last_edit_date": 1416572885,
          "body_markdown": "`npm view &lt;package&gt; version` - returns the latest available version on the package.\r\n\r\n`npm list --depth=0` - returns versions of all installed modules without dependencies.\r\n\r\n`npm list` - returns versions of all modules and dependencies.\r\n\r\nAnd lastly to get node version: `node -v`"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1407930981,
          "answer_id": 25285517,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1408017251,
          "last_edit_date": 1408017251,
          "body_markdown": "If you agree to install [jq](http://stedolan.github.io/jq/), you can use the JSON output of `npm list`.\r\n\r\n    npm -j ls &lt;package-name&gt; | jq -r .version\r\n\r\nor, if you want to be verbose \r\n\r\n    npm --json list &lt;package-name&gt; | jq --raw-output &#39;.version&#39;\r\n\r\nFor instance:\r\n\r\n    $ npm -j ls ghost | jq -r .version\r\n    0.4.2\r\n\r\nAlso, the JSON format is slightly different for global packages, so you&#39;ll need to change the query.\r\n\r\nFor instance:\r\n\r\n    $ npm -j -g ls | jq -r .dependencies.ghost.version\r\n    0.4.2"
        },
        {
          "tags": [],
          "down_vote_count": 30,
          "creation_date": 1435116101,
          "answer_id": 31017037,
          "path": "stack.bower.answer",
          "score": 61,
          "up_vote_count": 91,
          "is_accepted": false,
          "last_activity_date": 1435116101,
          "body_markdown": "\r\n    npm info YOUR_PACKAGE version\r\n\r\n\r\ne.g.\r\n\r\n\r\n    npm info grunt version\r\n    0.4.5\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1446160271,
          "answer_id": 33426237,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1446160271,
          "body_markdown": "Here&#39;s a portable Unix (using `grep` and `sed`) one-liner that returns the version string of a globally-installed npm package (remove the `g` from `-pg` to query local packages instead):\r\n\r\n    $ npm ll -pg --depth=0 grunt | grep -o &quot;@.*:&quot; | sed &#39;s/.$//; s/^.//&#39;\r\n    0.4.5\r\n\r\n- the `npm ll` outputs a parseable string formatted like: `/usr/lib/node_modules/npm:npm@2.14.8:`;\r\n- the `grep` command extracts the value between `@` and `:`, inclusive;\r\n- the `sed` command removes the surrounding characters."
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1447343583,
          "answer_id": 33675669,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1447343583,
          "body_markdown": "You can use *npm view [module] version*, *npm info [module] version*, *npm show [module] version* or *npm v [module] version* to check the version on an installed npm module.\r\n\r\nLet&#39;s suppose my grunt module version is the 0.4.5:\r\n\r\n    npm view grunt version =&gt; 0.4.5\r\n    npm info grunt version =&gt; 0.4.5\r\n    npm show grunt version =&gt; 0.4.5\r\n    npm v grunt version    =&gt; 0.4.5"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453898395,
          "answer_id": 35037644,
          "path": "stack.bower.answer",
          "score": 34,
          "up_vote_count": 34,
          "is_accepted": false,
          "last_activity_date": 1465480057,
          "last_edit_date": 1465480057,
          "body_markdown": "I just used \r\n`npm list | grep &lt;package name&gt;`\r\nand it worked great \r\n\r\nOn windows run:\r\n\r\n`npm list | find &lt;package name&gt;`\r\n\r\nIn PowerShell run:\r\n\r\n`npm list | sls &lt;package name&gt;`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1463145379,
          "answer_id": 37211072,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1463145379,
          "body_markdown": "Try with:\r\n\r\n    npm list --depth 1 --global packagename"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1470408062,
          "answer_id": 38791946,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1470408062,
          "body_markdown": "If you are brave enough (and have `node` installed), you can always do something like:\r\n\r\n    echo &quot;console.log(require(&#39;./package.json&#39;).version);&quot; | node\r\n\r\nThis will print the version of the current package.\r\nYou can also modify it to go insane, like this:\r\n\r\n    echo &quot;eval(&#39;var result=&#39;+require(&#39;child_process&#39;).execSync(&#39;npm version&#39;,{encoding:&#39;utf8&#39;})); console.log(result.WHATEVER_PACKAGE_NAME);&quot; | node\r\n\r\nThat will print the version of `WHATEVER_PACKAGE_NAME` package, that is seen by `npm version`."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1475236640,
          "answer_id": 39790997,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 25,
          "is_accepted": false,
          "last_activity_date": 1499351142,
          "last_edit_date": 1499351142,
          "body_markdown": "From the root of the package do:\r\n\r\n    node -p &quot;require(&#39;./package.json&#39;).version&quot;\r\n\r\n**EDIT**: (so you need to `cd` into the module&#39;s home directory if you are not already there. If you have installed the module with `npm install`, then it will be under `node_modules/&lt;module_name&gt;`)\r\n\r\n**EDIT 2**: updated as per answer from @jeff-dickey"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1479381823,
          "answer_id": 40653641,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1479381823,
          "body_markdown": "# Access the `package.json`\r\nYou can access the `package.json` or `bower.json` of the package with:\r\n\r\n\r\n`notepad ./node_modules/:packageName/package.json`\r\n\r\nThis will open the `package.json` in `notepad` which has the `version number` of the `:packageName` you included in the `command`.\r\n\r\n## For example :\r\n\r\n`notepad ./node_modules/vue-template-compiler/package.json`\r\n\r\nGood Luck."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1482246258,
          "answer_id": 41245359,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1498358182,
          "last_edit_date": 1498358182,
          "body_markdown": "To see all the installed packages locally or globally, use these commands:\r\n\r\n1. `npm list` for local packages or `npm list -g` for globally installed packages.\r\n2. `npm list --depth=0`\r\n3. `npm list | sls &lt;package name&gt;`\r\n4. `node -v`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1496541889,
          "answer_id": 44350141,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1497009029,
          "last_edit_date": 1497009029,
          "body_markdown": "I added this to my .bashrc \r\n\r\n    function npmv {\r\n        case $# in # number of arguments passed\r\n        0) v=&quot;$(npm -v)&quot; ; #store output from npm -v in variable\r\n            echo &quot;NPM version is: $v&quot;; #can&#39;t use single quotes \r\n                                       #${v} would also work\r\n        ;;   \r\n        1) s=&quot;$(npm list --depth=0 $1 | grep $1 | cut -d @ -f 2)&quot;;\r\n           echo &quot;$s&quot;;\r\n        ;;\r\n        2) case &quot;$2&quot; in # second argument\r\n            g) #global|#Syntax to compare bash string to literal\r\n                 s=&quot;$(npm list --depth=0 -g $1 | grep $1 | cut -d @ -f 2)&quot;;\r\n            echo &quot;$s&quot;;\r\n            ;;\r\n            l) #latest\r\n                 npm view $1 version; #npm info $1 version does same thing\r\n           ;;\r\n           *) echo &#39;Invalid arguments&#39;;\r\n           ;;\r\n           esac;\r\n        ;;\r\n        *) echo &#39;Invalid arguments&#39;;\r\n        ;;\r\n        esac;\r\n    }\r\n    export -f npmv\r\n\r\n\r\nNow all I have to do is type:\r\n\r\n - **npmv** for the version of npm eg: `NPM version is: 4.2.0`\r\n - **npmv &amp;lt;package-name&amp;gt;** for the local version eg: `0.8.08` \r\n - **npmv &amp;lt;package-name&amp;gt; g** for global version eg: `0.8.09` \r\n - **npmv &amp;lt;package-name&amp;gt; l** for latest version eg: `0.8.10` \r\n\r\nNote -d on cut command means delimit by, followed by @, then f means field the 2 means second field since there will be one either side of the @ symbol.\r\n \r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1509799311,
          "answer_id": 47110856,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1509799311,
          "body_markdown": "You may try this:\r\n```npm show {package} version``` shows the latest package version.\r\nAnd if your package is outdated, ```npm outdated``` will show it with version info."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1513148934,
          "answer_id": 47787370,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1513148934,
          "body_markdown": "Combining some of the answers above produces a super simple and super quick lookup.  Run from project root.  No need to `cd` into any folder, just 1 line:\r\n\r\n`\r\nnode -p &quot;require(&#39;SOMEPACKAGE/package.json&#39;).version&quot;\r\n`"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1513398502,
          "answer_id": 47842526,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1513400744,
          "last_edit_date": 1513400744,
          "body_markdown": "You can also check the version by this command.\r\n\r\n`npm info &lt;package name &gt; version`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1514463288,
          "answer_id": 48007347,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1514463288,
          "body_markdown": "We can  use **npm view any-promise**(your module name) -v\r\n\r\n"
        }
      ],
      "title": "Find the version of an installed npm package",
      "view_count": 645097,
      "answer_count": 18,
      "code_snippet": [
        "<code>npm -v &lt;package-name&gt;\n</code>",
        "<code>npm version &lt;package-name&gt;\n</code>",
        "<code>npm view &lt;package-name&gt; version\n</code>",
        "<code>npm list</code>",
        "<code>npm list -g</code>",
        "<code>npm list grunt</code>",
        "<code>projectName@projectVersion /path/to/project/folder\n└── grunt@0.4.1\n</code>",
        "<code>npm list</code>",
        "<code>├─┬ cli-color@0.1.6 \n│ └── es5-ext@0.7.1 \n├── coffee-script@1.3.3 \n├── less@1.3.0 \n├─┬ sentry@0.1.2 \n│ ├── file@0.2.1 \n│ └── underscore@1.3.3 \n└── uglify-js@1.2.6 \n</code>",
        "<code>npm list less-middleware</code>",
        "<code>| select-string module_name</code>",
        "<code>grep</code>",
        "<code>list</code>",
        "<code>npm ls</code>",
        "<code>npm ls</code>",
        "<code>npm list</code>",
        "<code>npm lis</code>",
        "<code>npm ll</code>",
        "<code>--depth=0</code>",
        "<code>npm list -g | awk -F@ '/&lt;package&gt;/ { print $2}'</code>",
        "<code>npm list --depth=0\n</code>",
        "<code>├── bower@0.8.6\n├── grunt@0.4.1\n├── grunt-bower-requirejs@0.4.3\n├── grunt-contrib-clean@0.4.1\n├── grunt-contrib-coffee@0.7.0\n├── grunt-contrib-copy@0.4.1\n├── grunt-contrib-imagemin@0.1.4\n├── grunt-contrib-jshint@0.1.1\n├── grunt-contrib-livereload@0.1.2\n├── grunt-contrib-requirejs@0.4.1\n├── grunt-regarde@0.1.1\n└── grunt-svgmin@0.1.0\n</code>",
        "<code>npm list -g --depth=0</code>",
        "<code>npm outdated -g --depth=0</code>",
        "<code>| grep &lt;package_name&gt;</code>",
        "<code>--depth=0</code>",
        "<code>npm view &lt;package&gt; version</code>",
        "<code>npm list --depth=0</code>",
        "<code>npm list</code>",
        "<code>node -v</code>",
        "<code>npm v</code>",
        "<code>npm info</code>",
        "<code>npm show</code>",
        "<code>npm view</code>",
        "<code>npm info YOUR_PACKAGE version\n</code>",
        "<code>npm info grunt version\n0.4.5\n</code>",
        "<code>npm list | grep &lt;package name&gt;</code>",
        "<code>npm list | find &lt;package name&gt;</code>",
        "<code>npm list | sls &lt;package name&gt;</code>",
        "<code>find</code>",
        "<code>node -p \"require('./package.json').version\"\n</code>",
        "<code>cd</code>",
        "<code>npm install</code>",
        "<code>node_modules/&lt;module_name&gt;</code>",
        "<code>node -p \"require('./package.json').version\"</code>",
        "<code>npm list</code>",
        "<code>npm -j ls &lt;package-name&gt; | jq -r .version\n</code>",
        "<code>npm --json list &lt;package-name&gt; | jq --raw-output '.version'\n</code>",
        "<code>$ npm -j ls ghost | jq -r .version\n0.4.2\n</code>",
        "<code>$ npm -j -g ls | jq -r .dependencies.ghost.version\n0.4.2\n</code>",
        "<code>npm view grunt version =&gt; 0.4.5\nnpm info grunt version =&gt; 0.4.5\nnpm show grunt version =&gt; 0.4.5\nnpm v grunt version    =&gt; 0.4.5\n</code>",
        "<code>node</code>",
        "<code>echo \"console.log(require('./package.json').version);\" | node\n</code>",
        "<code>echo \"eval('var result='+require('child_process').execSync('npm version',{encoding:'utf8'})); console.log(result.WHATEVER_PACKAGE_NAME);\" | node\n</code>",
        "<code>WHATEVER_PACKAGE_NAME</code>",
        "<code>npm version</code>",
        "<code>npm list</code>",
        "<code>npm list -g</code>",
        "<code>npm list --depth=0</code>",
        "<code>npm list | sls &lt;package name&gt;</code>",
        "<code>node -v</code>",
        "<code>1. 2. 3.</code>",
        "<code>produces inline monospace formatting</code>",
        "<code>grep</code>",
        "<code>sed</code>",
        "<code>g</code>",
        "<code>-pg</code>",
        "<code>$ npm ll -pg --depth=0 grunt | grep -o \"@.*:\" | sed 's/.$//; s/^.//'\n0.4.5\n</code>",
        "<code>npm ll</code>",
        "<code>/usr/lib/node_modules/npm:npm@2.14.8:</code>",
        "<code>grep</code>",
        "<code>@</code>",
        "<code>:</code>",
        "<code>sed</code>",
        "<code>npm list --depth 1 --global packagename\n</code>",
        "<code>npm info &lt;package name &gt; version</code>",
        "<code>npm show {package} version</code>",
        "<code>npm outdated</code>",
        "<code>function npmv {\n    case $# in # number of arguments passed\n    0) v=\"$(npm -v)\" ; #store output from npm -v in variable\n        echo \"NPM version is: $v\"; #can't use single quotes \n                                   #${v} would also work\n    ;;   \n    1) s=\"$(npm list --depth=0 $1 | grep $1 | cut -d @ -f 2)\";\n       echo \"$s\";\n    ;;\n    2) case \"$2\" in # second argument\n        g) #global|#Syntax to compare bash string to literal\n             s=\"$(npm list --depth=0 -g $1 | grep $1 | cut -d @ -f 2)\";\n        echo \"$s\";\n        ;;\n        l) #latest\n             npm view $1 version; #npm info $1 version does same thing\n       ;;\n       *) echo 'Invalid arguments';\n       ;;\n       esac;\n    ;;\n    *) echo 'Invalid arguments';\n    ;;\n    esac;\n}\nexport -f npmv\n</code>",
        "<code>NPM version is: 4.2.0</code>",
        "<code>0.8.08</code>",
        "<code>0.8.09</code>",
        "<code>0.8.10</code>",
        "<code>cd</code>",
        "<code>\nnode -p \"require('SOMEPACKAGE/package.json').version\"\n</code>",
        "<code>package.json</code>",
        "<code>package.json</code>",
        "<code>bower.json</code>",
        "<code>notepad ./node_modules/:packageName/package.json</code>",
        "<code>package.json</code>",
        "<code>notepad</code>",
        "<code>version number</code>",
        "<code>:packageName</code>",
        "<code>command</code>",
        "<code>notepad ./node_modules/vue-template-compiler/package.json</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "comments",
        "npm"
      ],
      "creation_date": 1357669439,
      "body_markdown": "I&#39;ve got a simple package.json file and I want to add a comment. Is there a way to do this, or are there any hacks to make this work?\r\n\r\n    {\r\n      &quot;name&quot;: &quot;My Project&quot;,\r\n      &quot;version&quot;: &quot;0.0.1&quot;,\r\n      &quot;private&quot;: true,\r\n      &quot;dependencies&quot;: {\r\n        &quot;express&quot;: &quot;3.x&quot;,\r\n        &quot;mongoose&quot;: &quot;3.x&quot;\r\n      },\r\n      &quot;devDependencies&quot; :  {\r\n        &quot;should&quot;: &quot;*&quot;\r\n        /* &quot;mocha&quot;: &quot;*&quot; not needed as should be globally installed */\r\n      }\r\n    }\r\n\r\nThe example comment above doesn&#39;t work as npm breaks. I&#39;ve also tried // style comments.\r\n\r\n\r\n",
      "last_edit_date": 1380701048,
      "up_vote_count": 248,
      "link": "https://stackoverflow.com/questions/14221579/how-do-i-add-comments-to-package-json-for-npm-install",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1357670203,
          "answer_id": 14221781,
          "path": "stack.gulp.answer",
          "score": 316,
          "up_vote_count": 319,
          "is_accepted": true,
          "last_activity_date": 1446553053,
          "last_edit_date": 1446553053,
          "body_markdown": "This has recently been discussed in the [node.js mailing list][1].\r\n\r\nAccording to Isaac Schlueter who created npm:\r\n\r\n&gt; ... the &quot;//&quot; key will never be used by npm for any purpose, and is reserved for comments ... If you want to use a multiple line comment, you can use either an \r\narray, or multiple &quot;//&quot; keys.\r\n\r\n    { &quot;//&quot;: &quot;this is the first line of a comment&quot;, \r\n      &quot;//&quot;: &quot;this is the second line of the comment&quot; } \r\n    \r\n    { &quot;//&quot;: [ \r\n      &quot;first line&quot;, \r\n      &quot;second line&quot; ] } \r\n\r\n\r\n  [1]: https://groups.google.com/d/msg/nodejs/NmL7jdeuw0M/yTqI05DRQrIJ"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1375654713,
          "answer_id": 18048155,
          "path": "stack.gulp.answer",
          "score": 82,
          "up_vote_count": 85,
          "is_accepted": false,
          "last_activity_date": 1498681971,
          "last_edit_date": 1498681971,
          "body_markdown": "Here is another hack for adding comments in JSON.  Since:\r\n\r\n    {&quot;a&quot;: 1, &quot;a&quot;: 2}\r\n\r\nIs equivalent to \r\n  \r\n    {&quot;a&quot;: 2}\r\n\r\nYou can do something like:\r\n\r\n    {\r\n      &quot;devDependencies&quot;: &quot;&#39;mocha&#39; not needed as should be globally installed&quot;,\r\n      &quot;devDependencies&quot; :  {\r\n        &quot;should&quot;: &quot;*&quot;\r\n      }\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1400697177,
          "answer_id": 23791175,
          "path": "stack.gulp.answer",
          "score": 12,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1401134952,
          "last_edit_date": 1495535496,
          "body_markdown": "You can always abuse the fact that duplicated keys are overwritten. This is what I just wrote:\r\n\r\n    &quot;dependencies&quot;: {\r\n      &quot;grunt&quot;: &quot;...&quot;,\r\n      &quot;grunt-cli&quot;: &quot;...&quot;,\r\n\r\n      &quot;api-easy&quot;: &quot;# Here is the pull request: https://github.com/...&quot;,\r\n      &quot;api-easy&quot;: &quot;git://...&quot;\r\n\r\n      &quot;grunt-vows&quot;: &quot;...&quot;,\r\n      &quot;vows&quot;: &quot;...&quot;\r\n    }\r\n\r\nHowever, it is not clear whether JSON allows duplicated keys (see\r\n[Does JSON syntax allow duplicate keys in an object?][1]. It seems to work with npm, so I take the risk.\r\n\r\nThe recommened hack is to use `&quot;//&quot;` keys (from the [nodejs mailing list][2]). When I tested it, it did not work with &quot;dependencies&quot; sections, though. Also, the example in the post uses multiple `&quot;//&quot;` keys, which implies that npm does not reject JSON files with duplicated keys. In other words, the hack above should always be fine.\r\n\r\n**Update:** One annoying disadvantage of the duplicated key hack is that `npm install --save` silently eliminates all duplicates. Unfortunately, it is very easy to overlook it and your well-intentioned comments are gone.\r\n\r\nThe `&quot;//&quot;` hack is still the safest as it seems. However, multi-line comments will be removed by `npm install --save`, too.\r\n\r\n  [1]: https://stackoverflow.com/q/21832701/783510\r\n  [2]: https://groups.google.com/forum/#!msg/nodejs/NmL7jdeuw0M/yTqI05DRQrIJ"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1423301243,
          "answer_id": 28380502,
          "path": "stack.gulp.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1428857588,
          "last_edit_date": 1428857588,
          "body_markdown": "Here&#39;s my take on comments within `package.json` / `bower.json`:\r\n\r\nI have `package.json.js` that contains a script that exports the actual `package.json`. Running the script overwrites the old `package.json` and tells me what changes it made, perfect to help you keep track of automatic changes `npm` made. That way I can even programatically define what packages I want to use. \r\n\r\nThe latest grunt task is here:\r\nhttps://gist.github.com/MarZab/72fa6b85bc9e71de5991\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1463134075,
          "answer_id": 37207193,
          "path": "stack.gulp.answer",
          "score": 8,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1463134390,
          "last_edit_date": 1463134390,
          "body_markdown": "I have a funny hack idea.\r\n\r\nCreate npm package name suitably as comment divider for `dependencies` and `devDependencies` block in package.json, for example `x----x----x`\r\n\r\n\t{\r\n\t    &quot;name&quot;: &quot;app-name&quot;,\r\n\t    &quot;dependencies&quot;: {\r\n\t    \t&quot;x----x----x&quot;: &quot;this is the first line of a comment&quot;,\r\n\t        &quot;babel-cli&quot;: &quot;6.x.x&quot;,\r\n\t        &quot;babel-core&quot;: &quot;6.x.x&quot;,\r\n\t    \t&quot;x----x----x&quot;: &quot;this is the second line of a comment&quot;,\r\n\t        &quot;knex&quot;: &quot;^0.11.1&quot;,\r\n\t        &quot;mocha&quot;: &quot;1.20.1&quot;,\r\n\t    \t&quot;x----x----x&quot;: &quot;*&quot;\r\n\t    }\r\n\t}\r\n    \r\n**NOTE**: Must add last comment divider line with valid version like `*` in block."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1491282199,
          "answer_id": 43198652,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1501943184,
          "last_edit_date": 1501943184,
          "body_markdown": "So far, most &quot;hacks&quot; here suggest to abuse JSON. But instead, why not abuse the underlying scripting language?\r\n\r\n**Edit** The initial response was putting the description on the right using `# add comments here` to wrap it; however, this does not work on Windows, because flags (e.g. npm run myframework -- --myframework-flags) would be ignored. I changed my response to make it work on all platforms, and added some indents for readability purposes.\r\n\r\n    {\r\n     &quot;scripts&quot;: {\r\n        &quot;help&quot;: &quot;       echo &#39;Display help information (this screen)&#39;;          npm run&quot;,\r\n        &quot;myframework&quot;: &quot;echo &#39;Run myframework binary&#39;;                          myframework&quot;,\r\n        &quot;develop&quot;: &quot;    echo &#39;Run in development mode (with terminal output)&#39;;  npm run myframework&quot;\r\n        &quot;start&quot;: &quot;      echo &#39;Start myFramework as a daemon&#39;;                   myframework start&quot;,\r\n        &quot;stop&quot;:  &quot;      echo &#39;Stop the myFramework daemon&#39;;                     myframework stop&quot;\r\n        &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;\r\n      }\r\n    }\r\n\r\nThis will:\r\n\r\n  1. Not break JSON compliance (or at least its not a hack, and your IDE will not give you warnings for doing strange, dangerous stuff)\r\n  2. Works cross platform (tested on macOS and windows, assuming it would work just fine on Linux)\r\n  3. Does not get in the way of running `npm run myframework -- --help` \r\n  4. Will output meaningful info when running `npm run` (which is the actual command to run to get information about available scripts)\r\n  5. Presents a more explicit help command (in case some devs are not aware that npm run presents such output)\r\n  6. Will show both the commands AND its description when running the command itself\r\n  7. Is somewhat readable when just opening `package.json` (using `less` or your favorite IDE)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1500035072,
          "answer_id": 45102957,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1500035072,
          "body_markdown": "NPS (Node Package Scripts) solved this problem for me. Lets you put your NPM scripts into a separate JS file, where you can add comments galore and any other JS logic you need to.\r\nhttps://www.npmjs.com/package/nps\r\n\r\nSample of the `package-scripts.js` from one of my projects\r\n\r\n    module.exports = {\r\n      scripts: {\r\n        // makes sure e2e webdrivers are up to date\r\n        postinstall: &#39;nps webdriver-update&#39;,\r\n    \r\n        // run the webpack dev server and open it in browser on port 7000\r\n        server: &#39;webpack-dev-server --inline --progress --port 7000 --open&#39;,\r\n\r\n        // start webpack dev server with full reload on each change\r\n        default: &#39;nps server&#39;,\r\n\r\n        // start webpack dev server with hot module replacement\r\n        hmr: &#39;nps server -- --hot&#39;,\r\n    \r\n        // generates icon font via a gulp task\r\n        iconFont: &#39;gulp default --gulpfile src/deps/build-scripts/gulp-icon-font.js&#39;,\r\n    \r\n        // No longer used\r\n        // copyFonts: &#39;copyfiles -f src/app/glb/font/webfonts/**/* dist/1-0-0/font&#39;\r\n      }\r\n    }\r\n\r\nI just did a local install `npm install nps -save-dev` and put this in my `package.json` scripts.\r\n\r\n    &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;nps&quot;,\r\n        &quot;test&quot;: &quot;nps test&quot;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1503398326,
          "answer_id": 45815391,
          "path": "stack.gulp.answer",
          "score": 21,
          "up_vote_count": 21,
          "is_accepted": false,
          "last_activity_date": 1503401809,
          "last_edit_date": 1503401809,
          "body_markdown": "After wasting an hour on complex and hacky solutions I&#39;ve found myself a pretty simple, elegant and valid solution for commenting my bulky dependencies section in `package.json`. Just like this:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;package name&quot;,\r\n      &quot;version&quot;: &quot;1.0&quot;,\r\n      &quot;description&quot;: &quot;package description&quot;,\r\n      &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;npm install &amp;&amp; node server.js&quot;\r\n      },\r\n      &quot;scriptsComments&quot;: {\r\n        &quot;start&quot;: &quot;Runs development build on a local server configured by server.js&quot;\r\n      },\r\n      &quot;dependencies&quot;: {\r\n        &quot;ajv&quot;: &quot;^5.2.2&quot;\r\n      },\r\n      &quot;dependenciesComments&quot;: {\r\n        &quot;ajv&quot;: &quot;JSON-Schema Validator for validation of API data&quot;\r\n      }\r\n    }\r\n\r\nWhen sorted the same way, it&#39;s now very easy for me to track these pairs of dependencies/comments either in git commit diffs or in editor while working with `package.json`.\r\n\r\nAnd no extra tools involved, just plain and valid JSON.\r\n\r\nHope this helps anyone."
        }
      ],
      "title": "How do I add comments to package.json for npm install?",
      "view_count": 61632,
      "answer_count": 8,
      "code_snippet": [
        "<code>{\n  \"name\": \"My Project\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"express\": \"3.x\",\n    \"mongoose\": \"3.x\"\n  },\n  \"devDependencies\" :  {\n    \"should\": \"*\"\n    /* \"mocha\": \"*\" not needed as should be globally installed */\n  }\n}\n</code>",
        "<code>package.json</code>",
        "<code>package.json</code>",
        "<code>package.json</code>",
        "<code>{ \"//\": \"this is the first line of a comment\", \n  \"//\": \"this is the second line of the comment\" } \n\n{ \"//\": [ \n  \"first line\", \n  \"second line\" ] } \n</code>",
        "<code>{ \"//\": \"first\",  \"//\": \"second\"}</code>",
        "<code>npm version</code>",
        "<code>package.json</code>",
        "<code>{ \"dependencies\": { \"//\": \"comment?\" }}</code>",
        "<code>{ \"//\": \"comment!\", \"dependencies\":{}}</code>",
        "<code>\"//\"</code>",
        "<code>{\"a\": 1, \"a\": 2}\n</code>",
        "<code>{\"a\": 2}\n</code>",
        "<code>{\n  \"devDependencies\": \"'mocha' not needed as should be globally installed\",\n  \"devDependencies\" :  {\n    \"should\": \"*\"\n  }\n}\n</code>",
        "<code>\"express\": \"makes routing better so I don't want to gouge my eyes out\", \"express\": \"3.x\"</code>",
        "<code>package.json</code>",
        "<code>npm version 1.2.3</code>",
        "<code>package.json</code>",
        "<code>{\n  \"name\": \"package name\",\n  \"version\": \"1.0\",\n  \"description\": \"package description\",\n  \"scripts\": {\n    \"start\": \"npm install &amp;&amp; node server.js\"\n  },\n  \"scriptsComments\": {\n    \"start\": \"Runs development build on a local server configured by server.js\"\n  },\n  \"dependencies\": {\n    \"ajv\": \"^5.2.2\"\n  },\n  \"dependenciesComments\": {\n    \"ajv\": \"JSON-Schema Validator for validation of API data\"\n  }\n}\n</code>",
        "<code>package.json</code>",
        "<code>\"dependencies\": {\n  \"grunt\": \"...\",\n  \"grunt-cli\": \"...\",\n\n  \"api-easy\": \"# Here is the pull request: https://github.com/...\",\n  \"api-easy\": \"git://...\"\n\n  \"grunt-vows\": \"...\",\n  \"vows\": \"...\"\n}\n</code>",
        "<code>\"//\"</code>",
        "<code>\"//\"</code>",
        "<code>npm install --save</code>",
        "<code>\"//\"</code>",
        "<code>npm install --save</code>",
        "<code>\"//\"</code>",
        "<code>mocha</code>",
        "<code>dependencies</code>",
        "<code>devDependencies</code>",
        "<code>x----x----x</code>",
        "<code>{\n    \"name\": \"app-name\",\n    \"dependencies\": {\n        \"x----x----x\": \"this is the first line of a comment\",\n        \"babel-cli\": \"6.x.x\",\n        \"babel-core\": \"6.x.x\",\n        \"x----x----x\": \"this is the second line of a comment\",\n        \"knex\": \"^0.11.1\",\n        \"mocha\": \"1.20.1\",\n        \"x----x----x\": \"*\"\n    }\n}\n</code>",
        "<code>*</code>",
        "<code>npm install</code>",
        "<code>package.json</code>",
        "<code>bower.json</code>",
        "<code>package.json.js</code>",
        "<code>package.json</code>",
        "<code>package.json</code>",
        "<code>npm</code>",
        "<code>npm install --save</code>",
        "<code>--save-dev</code>",
        "<code>package-scripts.js</code>",
        "<code>module.exports = {\n  scripts: {\n    // makes sure e2e webdrivers are up to date\n    postinstall: 'nps webdriver-update',\n\n    // run the webpack dev server and open it in browser on port 7000\n    server: 'webpack-dev-server --inline --progress --port 7000 --open',\n\n    // start webpack dev server with full reload on each change\n    default: 'nps server',\n\n    // start webpack dev server with hot module replacement\n    hmr: 'nps server -- --hot',\n\n    // generates icon font via a gulp task\n    iconFont: 'gulp default --gulpfile src/deps/build-scripts/gulp-icon-font.js',\n\n    // No longer used\n    // copyFonts: 'copyfiles -f src/app/glb/font/webfonts/**/* dist/1-0-0/font'\n  }\n}\n</code>",
        "<code>npm install nps -save-dev</code>",
        "<code>package.json</code>",
        "<code>\"scripts\": {\n    \"start\": \"nps\",\n    \"test\": \"nps test\"\n}\n</code>",
        "<code># add comments here</code>",
        "<code>{\n \"scripts\": {\n    \"help\": \"       echo 'Display help information (this screen)';          npm run\",\n    \"myframework\": \"echo 'Run myframework binary';                          myframework\",\n    \"develop\": \"    echo 'Run in development mode (with terminal output)';  npm run myframework\"\n    \"start\": \"      echo 'Start myFramework as a daemon';                   myframework start\",\n    \"stop\":  \"      echo 'Stop the myFramework daemon';                     myframework stop\"\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n  }\n}\n</code>",
        "<code>npm run myframework -- --help</code>",
        "<code>npm run</code>",
        "<code>package.json</code>",
        "<code>less</code>",
        "<code>\"//\":\"\"</code>",
        "<code>&amp;&amp;</code>",
        "<code>;</code>",
        "<code>\"help\": \"echo 'Display help information (this screen)' &amp;&amp;  npm run\",</code>",
        "<code>scripts</code>",
        "<code>package.json</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "unix",
        "permissions",
        "npm",
        "sudo"
      ],
      "creation_date": 1366644937,
      "body_markdown": "I just installed node and npm through the package on nodejs.org and whenever I try to search or install something with npm it throws the following error, unless I sudo the command.  I have a feeling this is a permissions issue?  I am already the admin.\r\n\r\n    npm ERR! Error: EACCES, open &#39;/Users/chietala/.npm/-/all/.cache.json&#39;\r\n    npm ERR!  { [Error: EACCES, open &#39;/Users/chietala/.npm/-/all/.cache.json&#39;]\r\n    npm ERR!   errno: 3,\r\n    npm ERR!   code: &#39;EACCES&#39;,\r\n    npm ERR!   path: &#39;/Users/chietala/.npm/-/all/.cache.json&#39; }\r\n    npm ERR! \r\n    npm ERR! Please try running this command again as root/Administrator.\r\n    \r\n    npm ERR! System Darwin 12.2.0\r\n    npm ERR! command &quot;node&quot; &quot;/usr/local/bin/npm&quot; &quot;search&quot; &quot;bower&quot;\r\n    npm ERR! cwd /Users/chietala\r\n    npm ERR! node -v v0.10.4\r\n    npm ERR! npm -v 1.2.18\r\n    npm ERR! path /Users/chietala/.npm/-/all/.cache.json\r\n    npm ERR! code EACCES\r\n    npm ERR! errno 3\r\n    npm ERR! stack Error: EACCES, open &#39;/Users/chietala/.npm/-/all/.cache.json&#39;\r\n    npm ERR! \r\n    npm ERR! Additional logging details can be found in:\r\n    npm ERR!     /Users/chietala/npm-debug.log\r\n    npm ERR! not ok code 0",
      "last_edit_date": 1474072658,
      "up_vote_count": 969,
      "link": "https://stackoverflow.com/questions/16151018/npm-throws-error-without-sudo",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 22,
          "creation_date": 1366647087,
          "answer_id": 16151707,
          "path": "stack.bower.answer",
          "score": 1801,
          "up_vote_count": 1823,
          "is_accepted": true,
          "last_activity_date": 1459065265,
          "last_edit_date": 1459065265,
          "body_markdown": "This looks like a permissions issue in your home directory. To reclaim ownership of the **.npm** directory execute:\r\n\r\n    sudo chown -R $(whoami) ~/.npm"
        },
        {
          "tags": [],
          "down_vote_count": 8,
          "creation_date": 1373907514,
          "answer_id": 17659671,
          "path": "stack.bower.answer",
          "score": -3,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1379433328,
          "last_edit_date": 1379433328,
          "body_markdown": "    sudo chown -R `whoami` /usr/local/lib"
        },
        {
          "tags": [],
          "down_vote_count": 59,
          "creation_date": 1377314609,
          "answer_id": 18414606,
          "path": "stack.bower.answer",
          "score": 374,
          "up_vote_count": 433,
          "is_accepted": false,
          "last_activity_date": 1431445200,
          "last_edit_date": 1431445200,
          "body_markdown": "Also you will need the write permission in `node_modules` directory:  \r\n\r\n    sudo chown -R $USER /usr/local/lib/node_modules\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 11,
          "creation_date": 1380842217,
          "answer_id": 19170697,
          "path": "stack.bower.answer",
          "score": 56,
          "up_vote_count": 67,
          "is_accepted": false,
          "last_activity_date": 1403272034,
          "last_edit_date": 1495541907,
          "body_markdown": "I encountered this when installing Recess (https://github.com/twitter/recess) to compile my CSS for Bootstrap 3.\r\n\r\nWhen installing recess:\r\n\r\n    -npm install recess -g\r\n\r\n 1. You need to unlock permissions in your `home` directory, like [Noah][1]\r\n    says:\r\n    \r\n        sudo chown -R `whoami` ~/.npm\r\n    \r\n 2. You also need write permissions to the `node_modules` directory, like [Xilo][2]\r\n    says, so if it still isn&#39;t working, try:\r\n\r\n        sudo chown -R `whoami` /usr/local/lib/node_modules\r\n\r\n 3. If you are still seeing errors, you may also need to [correct `/usr/local` permissions][3]:\r\n\r\n        sudo chown -R `whoami` /usr/local\r\n\r\nPlease note that as indicated [in this post][3] `/usr/local/` isn&#39;t actually a system dir if you are on a Mac, so, this answer is actually perfectly &quot;safe&quot; for Mac users. However, if you are on Linux, see [Christopher Will][4]&#39;s answer below for a multi-user friendly, system dir safe (but more complex) solution. \r\n\r\n\r\n  [1]: https://stackoverflow.com/users/1095114/noah\r\n  [2]: https://stackoverflow.com/users/2712832/xilo\r\n  [3]: https://apple.stackexchange.com/questions/1393/are-my-permissions-for-usr-local-correct\r\n  [4]: https://stackoverflow.com/users/842302/christopher-will"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1381732096,
          "answer_id": 19354577,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1382539139,
          "last_edit_date": 1495542396,
          "body_markdown": "I had a similar problem at https://stackoverflow.com/questions/19352976/npm-modules-wont-install-globally-without-sudo/19354387, the issue was that **when i installed node i did it with sudo via chris/lea ppa repo**.\r\n\r\nMy solution was to uninstall node and then install it this way:\r\n\r\nDownload latest stable node sources from nodejs.org #in my case node-v0.10.20.tar.gz\r\n\r\n&gt; tar -zxf node-v0.10.20.tar.gz #uncompress sources\r\n\r\n&gt; cd node-v0.10.20 #enter uncompressed folder\r\n\r\n&gt; sudo chown $USER -R /usr/local\r\n\r\n&gt; ./configure --prefix=/usr/local &amp;&amp; make &amp;&amp; make install\r\n\r\nPD: If you don&#39;t want to change ownership of the /usr/local folder, you can install it somewhere you already own. The problem of this approach is that you will have to bind the installation folder with the bash command line so that we can use the node command later on\r\n\r\n&gt; mkdir ~/opt\r\n\r\n&gt; ./configure --prefix=~/opt &amp;&amp; make &amp;&amp; make install\r\n\r\n&gt; echo &#39;export PATH=~/opt/bin:${PATH}&#39; &gt;&gt; ~/.bashrc #or ~/.profile or ~/.bash_profile or ~/.zshenv depending on the current Operative System\r\n\r\nWith either of those approaches, you will be able to do the following without using sudo\r\n\r\n&gt; npm install -g module_to_install"
        },
        {
          "tags": [],
          "down_vote_count": 8,
          "creation_date": 1382253730,
          "answer_id": 19474912,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1402555983,
          "last_edit_date": 1402555983,
          "body_markdown": "When you run npm install -g somepackage, you may get an EACCES error asking you to run the command again as root/Administrator. It&#39;s a permissions issue.\r\n\r\nIt&#39;s **easy to fix**, open your terminal (Applications &gt; Utilities &gt; Terminal)\r\n\r\n    sudo chown -R $USER /usr/local/lib/node_modules\r\n\r\n** I strongly recommend you to not use the package management with sudo (sudo npm -g install something), because you can get some issues later **\r\n\r\nReference: http://foohack.com/2010/08/intro-to-npm/"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1382944178,
          "answer_id": 19628914,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1382944530,
          "last_edit_date": 1382944530,
          "body_markdown": "On Mac OS X, when installing with [Homebrew&#39;s](http://brew.sh/) `brew install npm`, the installation path is `/usr/local/share/npm/` with both `bin/` and `lib/node_modules/` subfolders.\r\n\r\nRunning this command to change to owner to your currently logged in user should fix it all up, and allow you to install global NPM packages without `sudo`.\r\n\r\n&lt;!-- language: bash --&gt;\r\n\r\n    sudo chown -R $USER ~/.npm /usr/local/share/npm/\r\n\r\n[tag:osx] [tag:homebrew]"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1384346564,
          "answer_id": 19954104,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1384346564,
          "body_markdown": "Actually, I was also having the same problem. I was running Ubuntu. Mine problem arises because I&#39;d lost my public key of the Ubuntu. Even updating my system was not happening. It was giving GPG error. In that case, you can regain your key by using this command:\r\n\r\n    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys &lt;key in GPG error&gt;\r\nAfter that npm works fine!"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1389268706,
          "answer_id": 21019602,
          "path": "stack.bower.answer",
          "score": 32,
          "up_vote_count": 32,
          "is_accepted": false,
          "last_activity_date": 1505981214,
          "last_edit_date": 1505981214,
          "body_markdown": "Other answers are suggesting to change ownerships or permissions of system directories to a specific user. I highly disadvise from doing so, this can become very awkward and might mess up the entire system! \r\n\r\nHere is a more generic and safer approach that supports multi-user as well.\r\n\r\nCreate a new group for node-users and add the required users to this group. Then set the ownership of node-dependant files/directories to this group.\r\n\r\n    # Create new group\r\n    sudo groupadd nodegrp \r\n\r\n    # Add user to group (logname is a variable and gets replaced by the currently logged in user)\r\n    sudo usermod -a -G nodegrp `logname`\r\n\r\n    # Instant access to group without re-login\r\n    newgrp nodegrp\r\n \r\n    # Check group - nodegrp should be listed as well now\r\n    groups\r\n\r\n    # Change group of node_modules, node, npm to new group \r\n    sudo chgrp -R nodegrp /usr/lib/node_modules/\r\n    sudo chgrp nodegrp /usr/bin/node\r\n    sudo chgrp nodegrp /usr/bin/npm\r\n\r\n    # (You may want to change a couple of more files (like grunt etc) in your /usr/bin/ directory.)\r\n\r\nNow you can easily install your modules as user\r\n\r\n    npm install -g generator-angular\r\n\r\n\r\nSome modules (grunt, bower, yo etc.) will still need to be installed as root. This is because they create symlinks in /user/bin/.\r\n\r\n**Edit**\r\n\r\n3 years later I&#39;d recommend to use [Node Version  Manager][1]. It safes you a lot of time and trouble.\r\n\r\n\r\n  [1]: https://github.com/creationix/nvm"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1395960767,
          "answer_id": 22700899,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1395960767,
          "body_markdown": "In my case,it&#39;s because of the permission of ~/tmp.So I do:\r\n\r\n    sudo chown -R $USER ~/tmp\r\n\r\nAnd it&#39;s OK!"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1401194175,
          "answer_id": 23889603,
          "path": "stack.bower.answer",
          "score": 45,
          "up_vote_count": 46,
          "is_accepted": false,
          "last_activity_date": 1462967067,
          "last_edit_date": 1495541447,
          "body_markdown": "Changing the owner on &quot;system-global&quot; folders is a hack. On a fresh install, I would configure NPM to use an already writable location for &quot;user-global&quot; programs:\r\n\r\n&lt;!-- language-all: lang-bash --&gt;\r\n\r\n    npm config set prefix ~/npm\r\n\r\nThen make sure you add that folder to your path:\r\n\r\n    export PATH=&quot;$PATH:$HOME/npm/bin&quot;\r\n\r\nSee [@ErikAndreas](https://stackoverflow.com/users/3298821/erikandreas)&#39; [answer](https://stackoverflow.com/a/21712034) to [NPM modules won&#39;t install globally without sudo\r\n](https://stackoverflow.com/questions/19352976/npm-modules-wont-install-globally-without-sudo) and [longer step-by-step guide](https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md) by [@sindresorhus](https://github.com/sindresorhus) with also sets `$MANPATH`."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1403687111,
          "answer_id": 24404451,
          "path": "stack.bower.answer",
          "score": 453,
          "up_vote_count": 454,
          "is_accepted": false,
          "last_activity_date": 1477580671,
          "last_edit_date": 1495540978,
          "body_markdown": "Permissions you used when installing Node will be required when doing things like writing in your *npm directory* (`npm link`, `npm install -g`, etc.).\r\n\r\nYou probably ran node installation with root permissions, that&#39;s why the global package installation is asking you to be root.\r\n\r\n---\r\n\r\n&lt;h1&gt;Solution 1: NVM&lt;/h1&gt;\r\n\r\n&gt; Don&#39;t hack with permissions, install node the right way.\r\n\r\nOn a development machine, you should not install and run node with root permissions, otherwise things like `npm link`, `npm install -g` will need the same permissions.\r\n\r\n[NVM][1] (Node Version Manager) allows you to install Node without root permissions and also allows you to install many versions of Node to play easily with them.. Perfect for development.\r\n\r\n 1. Uninstall Node (root permission will probably be required). [This][2] might help you.\r\n 2. Then install [NVM][1] following instructions [on this page][1].\r\n 3. Install Node via NVM: `nvm install node`\r\n\r\nNow `npm link`, `npm install -g` will no longer require you to be root.\r\n\r\n---\r\n\r\n&lt;h1&gt;Solution 2: Install packages globally for a given user&lt;/h1&gt;\r\n\r\n&gt; Don&#39;t hack with permissions, install npm packages globally the right way.\r\n\r\nIf you are on OSX or Linux, you can **create a user dedicated directory for your global package** and setup `npm` and `node` to know how to find globally installed packages.\r\n\r\nCheck out [**this great article**](https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md) for step by step instructions on installing npm modules globally without sudo.\r\n\r\nSee also: npm&#39;s documentation on [Fixing npm permissions][3].\r\n\r\n\r\n  [1]: https://github.com/creationix/nvm\r\n  [2]: https://stackoverflow.com/q/9283472/1480391\r\n  [3]: https://docs.npmjs.com/getting-started/fixing-npm-permissions"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410326199,
          "answer_id": 25757784,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1410326199,
          "body_markdown": "For Mac (adopted from Christoper Will&#39;s answer)\r\n\r\nMac OS X 10.9.4  \r\n\r\n 1. System Preference &gt; Users &amp; Groups &gt; (unlock) &gt; press + :   \r\n\r\n\t   New Account &gt; &quot;Group&quot;  \r\n\t   Account Name : nodegrp  \r\n   \r\n After creating the group, tick the user to be included in this group\r\n\r\n 2.     \r\n&gt;   sudo chgrp -R nodegrp /usr/local/lib/node_modules/   \r\n&gt;     sudo chgrp nodegrp /usr/bin/node   \r\n&gt;     sudo chgrp nodegrp /usr/bin/npm    \r\n&gt;     sudo chown -R $(whoami):nodegrp ~/.npm"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1411497758,
          "answer_id": 26002461,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1411497758,
          "body_markdown": "I set my user account as the owner of the /usr/local directory, so that can just issue normal commands in there.\r\n\r\n`sudo chown -R $USER /usr/local`\r\n\r\nReference: http://howtonode.org/introduction-to-npm "
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1413545181,
          "answer_id": 26424033,
          "path": "stack.bower.answer",
          "score": -3,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1413545181,
          "body_markdown": "All the above is not necessary.\r\n\r\nThe issue I was having was I was using the -g when I was running NPM. I couldn&#39;t work out how I wasn&#39;t getting a &#39;npm_module&#39; folder created in my project.\r\n\r\nThe solution is to run &#39;NPM init&#39; This creates a &#39;package.json&#39; and the &#39;npm_module&#39; folder where all subsequent modules will be loaded into. When running npm DO NOT use -g use -s to update your &#39;package.json&#39; file. \r\n\r\n [Here is a good video explaining][1]\r\n\r\n\r\n  [1]: https://egghead.io/lessons/nodejs-npm-init"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1419531197,
          "answer_id": 27649624,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1419531197,
          "body_markdown": "If changing permissions for directory `/usr/local/lib/npm_modules`\r\nnot helps, u should add your user to group (in most cases this is `staff` group), that has rwx rights for `/usr/bin` directory.\r\nBecause npm tries to make `symlink` with `/usr/bin/__package__`.\r\n\r\nP.S. Don&#39;t forget to relogin after changing user group"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1421284595,
          "answer_id": 27955349,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1421284595,
          "body_markdown": "For me, execute only\r\n\r\n\r\n    sudo chown -R $(whoami) ~/.npm\r\n\r\ndoesn&#39;t work. Then, I execute too\r\n\r\n    sudo chown -R $(whoami) /usr/lib/node_modules/\r\n    sudo chown -R $(whoami) /usr/bin/node\r\n    sudo chown -R $(whoami) /usr/bin/npm\r\n\r\nAnd all works fine!"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1421746548,
          "answer_id": 28041900,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1424837164,
          "last_edit_date": 1424837164,
          "body_markdown": "As if we need more answers here, but anyway..\r\n\r\nSindre Sorus has a guide [Install npm packages globally without sudo on OS X and Linux](https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md) outlining how to cleanly install without messing with permissions: \r\n\r\n&gt; Here is a way to install packages globally for a given user.\r\n\r\n&gt; 1. Create a directory for your global packages\r\n\r\n&gt;         mkdir &quot;${HOME}/.npm-packages&quot;\r\n&gt; 2. Reference this directory for future usage in your .bashrc/.zshrc:\r\n\r\n&gt;         NPM_PACKAGES=&quot;${HOME}/.npm-packages&quot;\r\n&gt;3. Indicate to npm where to store your globally installed package. In your `$HOME/.npmrc` file add:\r\n\r\n&gt;         prefix=${HOME}/.npm-packages\r\n&gt;4. Ensure node will find them. Add the following to your .bashrc/.zshrc:\r\n\r\n&gt;         NODE_PATH=&quot;$NPM_PACKAGES/lib/node_modules:$NODE_PATH&quot;\r\n&gt;5. Ensure you&#39;ll find installed binaries and man pages. Add the following to your `.bashrc`/`.zshrc`:\r\n\r\n&gt;         PATH=&quot;$NPM_PACKAGES/bin:$PATH&quot;\r\n&gt;         # Unset manpath so we can inherit from /etc/manpath via the `manpath`\r\n&gt;         # command\r\n&gt;         unset MANPATH # delete if you already modified MANPATH elsewhere in your config\r\n&gt;         MANPATH=&quot;$NPM_PACKAGES/share/man:$(manpath)&quot;\r\n\r\n&gt; Check out [npm-g_nosudo](https://github.com/glenpike/npm-g_nosudo) for doing the above steps automagically\r\n\r\n*Checkout the [source of this guide](https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md) for the latest updates.*"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1424803654,
          "answer_id": 28703809,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1424803654,
          "last_edit_date": 1492087506,
          "body_markdown": "I found that if you only `sudo -s` &quot;it just starts up a shell with root permissions as a one step&quot; and it really works for me. I don&#39;t know if it&#39;s a good practice or not.\r\n \r\nI hope it helps.\r\n\r\nReference: https://apple.stackexchange.com/posts/14423/revisions"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1426034083,
          "answer_id": 28976583,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1433959928,
          "last_edit_date": 1433959928,
          "body_markdown": "John Papa points to the history and reasoning behind this issue and gives [a solid fix][1]:\r\n\r\nJohn Papa&#39;s steps are to: \r\n\r\n 1. Use brew to install node without npm\r\n 2. Update your .bash_profile/.bashrc to let npm and node know where to install and find packages\r\n 3. Use brew to update node and npm to update itself\r\n\r\nHope this helps the curious!\r\n\r\n  [1]: http://www.johnpapa.net/how-to-use-npm-global-without-sudo-on-osx/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1439391583,
          "answer_id": 31968866,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1439391583,
          "body_markdown": "This is the solution I utilized and worked.  I tried utilizing `whoami` never worked.\r\n\r\n`sudo chown -R $USER /usr/local/lib/node_modules`\r\n\r\nthen\r\n\r\n`sudo chown -R $USER /usr/local/bin/npm`\r\n\r\nthen\r\n\r\n`sudo chown -R $USER /usr/local/bin/node`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453578367,
          "answer_id": 34968008,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1453581982,
          "last_edit_date": 1453581982,
          "body_markdown": "The **official documentation** on how to fix `npm install` permissions with an `EACCES` error is located at https://docs.npmjs.com/getting-started/fixing-npm-permissions. \r\n\r\nI encountered this problem after a fresh install of node using the `.pkg` installer on OSX. There are some great answers here, but I didn&#39;t see a link to npmjs.com yet.\r\n\r\n**Option 1: Change the permission to npm&#39;s default directory**\r\n\r\n 1. Find the path to npm&#39;s directory:\r\n\r\n        npm config get prefix\r\n\r\nFor many systems, this will be **/usr/local**.\r\n\r\n**WARNING**: If the displayed path is just **/usr**, switch to *Option 2*.\r\n\r\n 2. Change the owner of npm&#39;s directories to the name of the current user (your username!):\r\n\r\n        sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\r\nThis changes the permissions of the sub-folders used by npm and some other tools (**lib/node_modules**, **bin**, and **share**).\r\n\r\n**Option 2: Change npm&#39;s default directory to another directory**\r\n\r\nThere are times when you do not want to change ownership of the default directory that npm uses (i.e. **/usr**) as this could cause some problems, for example if you are sharing the system with other users.\r\n\r\nInstead, you can configure npm to use a different directory altogether. In our case, this will be a hidden directory in our home folder.\r\n\r\n 1. Make a directory for global installations:\r\n\r\n        mkdir ~/.npm-global\r\n 2. Configure npm to use the new directory path:\r\n\r\n        npm config set prefix &#39;~/.npm-global&#39;\r\n 3. Open or create a ~/.profile file and add this line:\r\n\r\n        export PATH=~/.npm-global/bin:$PATH\r\n 4. Back on the command line, update your system variables:\r\n\r\n        source ~/.profile\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453726256,
          "answer_id": 34993090,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1453726256,
          "body_markdown": "Another great fix here to configure NPM properly, run the following commands :\r\n\r\n    npm config set prefix &#39;~/.npm_packages&#39;\r\n    PATH=$PATH:$HOME/.npm_packages/bin; export PATH"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1457533546,
          "answer_id": 35894290,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1457533546,
          "body_markdown": "If something like below pops up during npm install or Want to install packages globally on a Mac use Sudo\r\n\r\n&gt; npm ERR! code EACCES    \r\nnpm ERR! errno -13            \r\nnpm ERR! syscall access"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1457928138,
          "answer_id": 35979337,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1457928138,
          "body_markdown": "@Yves M.&#39;s answer was very similar to my solution.  Here are the commands I used, which were slightly different from his.\r\n\r\n    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\r\n\r\nThen query for the latest version:\r\n\r\n    nvm ls-remote\r\n\r\nThen install the newest version:\r\n\r\n    nvm install YOUR_VERSION_HERE\r\n\r\nexample\r\n\r\n    nvm install v5.8.0"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458398377,
          "answer_id": 36103045,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1458398377,
          "body_markdown": "What to me seems like the best option is the one suggested in the [npm documentation](https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory), which is to first check where global node_modules are installed by default by running `npm config get prefix`. If you get, like I do on Trusty, `/usr`, you might want to change it to a folder that you can safely own without messing things up the way I did.\r\n\r\nTo do that, choose or create a new folder in your system. You may want to have it in your home directory or, like me, under `/usr/local` for consistency because I&#39;m also a Mac user (I prefer not to need to look into different places depending on the machine I happen to be in front of). Another good reason to do that is the fact that the `/usr/local` folder is probably already in your PATH (unless you like to mess around with your PATH) but chances are your newly-created folder isn&#39;t and you&#39;d need to add it to the PATH yourself on your _.bash-profile_ or _.bashrc_ file.\r\n\r\nLong story short, I changed the default location of the global modules with `npm config set prefix &#39;/usr/local&#39;`, created the folder `/usr/local/lib/node_modules` (it will be used by npm) and changed permissions for the folders used by npm with the command: \r\n\r\n    sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\r\n\r\nNow you can globally install any module safely. Hope this helps!\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1459693596,
          "answer_id": 36386645,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1459693596,
          "body_markdown": "This is how I solved the issue on Windows 8.1:\r\n\r\n - Go to your nodejs install (usually C:\\Program Files\\nodejs)\r\n - Right click node_modules folder and go to properties\r\n - Click the Security tab and advanced\r\n - At the top you will see &quot;Owner: SYSTEM&quot;, click change\r\n - Enter the user you want permissions for and click Ok\r\n - Check the box at the bottom of the advanced settings &quot;Replace all child object permission entries with inheritable permission entries from this object&quot; and click ok\r\n - Do whatever npm install/update you need\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1463033581,
          "answer_id": 37178615,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1469812588,
          "last_edit_date": 1469812588,
          "body_markdown": "TL;DR\r\n\r\n&gt; always use `sudo -i` or `sudo -H` when running `npm install` to install global packages.\r\n\r\n--\r\n\r\nWhen you use `npm` it downloads packages to your user home directory.  When you run as sudo, `npm` installs files to the same directory, but now they are owned by root.\r\n\r\nSo this is what happens to absolutely every single person who has ever used `npm`:\r\n\r\n * install some local packages without issue using `npm install foo`\r\n * install global package using `sudo install -g foo-cli` without issue\r\n * attempt to install local package with `npm install bar`\r\n * get frustrated at the `npm` designers now that you have to go `chmod` a directory again\r\n\r\nWhen you use the `-i` or `-H` option with sudo, your home directory will be `root`&#39;s home directory.  Any global installs will cache packages to `/root/.npm` instead of `root`-owned files at `/home/me/.npm`.\r\n\r\nJust always use `sudo -i` or `sudo -H` when running `npm install` to install global packages and your `npm` permissions problems will melt away.\r\n\r\nFor good.\r\n\r\nhttp://hood.ie/blog/why-you-shouldnt-use-sudo-with-npm.html\r\n\r\n--\r\n*q.v.* the accepted answer for fixing an already fucked `npm`."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1467271742,
          "answer_id": 38116565,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1467281123,
          "last_edit_date": 1467281123,
          "body_markdown": "Best solution would be [this][1] which is provided by npm documentation.\r\n \r\n----------\r\nFor Ubuntu suggested solution is [Option#2][2]\r\n\r\n \r\nBrief steps:  \r\nMake a directory for global installations:  \r\n**`mkdir ~/.npm-global`**  \r\n\r\nConfigure npm to use the new directory path:  \r\n**`npm config set prefix &#39;~/.npm-global&#39;`**  \r\n`npm config get prefix` can help you to verify if prefix was updated or not. The result would be &amp;lt;Your Home Directory&gt;/.npm-global\r\n\r\nOpen or create a ~/.profile file and add this line:  \r\n**`export PATH=~/.npm-global/bin:$PATH`**  \r\n\r\n\r\nBack on the command line, update your system variables:  \r\n**`source ~/.profile`**\r\n\r\n\r\nInstead of steps 2-4 you can also use the corresponding ENV variable\r\n(e.g. if you don&#39;t want to modify ~/.profile):  \r\n\r\n`NPM_CONFIG_PREFIX=~/.npm-global`\r\n\r\n----------\r\nFor Mac suggested solution is [Option#3][3]\r\n\r\nOn Mac OS you can avoid this problem altogether by using the Homebrew package manager  \r\n\r\n**`brew install node`**\r\n\r\n  [1]: https://docs.npmjs.com/getting-started/fixing-npm-permissions\r\n  [2]: https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory\r\n  [3]: https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-3-use-a-package-manager-that-takes-care-of-this-for-you"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1475781071,
          "answer_id": 39903940,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1475781071,
          "body_markdown": "Problem:\r\nYou do not have permission to write to the directories that npm uses to store global packages and commands.\r\n\r\nSolution:\r\nAllow permission for npm.\r\n\r\nOpen a terminal:\r\n\r\n&gt; command + spacebar then type &#39;terminal&#39;\r\n\r\nEnter this command: \r\n&gt; sudo chown -R $(whoami) $(npm config get\r\n&gt; prefix)/{lib/node_modules,bin,share}\r\n\r\n - Note: this will require your password.\r\n\r\nThis solution allows permission to ONLY the directories needed, keeping the other directories nice and safe."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1483096705,
          "answer_id": 41395398,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1500829154,
          "last_edit_date": 1500829154,
          "body_markdown": "**Watch OUT!!!** **Watch OUT!!!** **Watch OUT!!!** \r\n\r\nchown or chmod is **NOT** the solution, because of security-risk.\r\n\r\n**Instead do this:**\r\n\r\nFirst check, where npm point to, if you call:\r\n\r\n    npm config get prefix\r\n\r\nIf /usr is returned, you can do the following:\r\n\r\n    mkdir ~/.npm-global\r\n    export NPM_CONFIG_PREFIX=~/.npm-global\r\n    export PATH=$PATH:~/.npm-global/bin\r\n\r\nThis create a npm-Direktory in your Home-Directory and point npm to it.\r\n\r\nTo got this changes permanent, you have to add the export-command to your .bashrc:\r\n\r\n    echo -e &quot;export NPM_CONFIG_PREFIX=~/.npm-global\\nexport PATH=$PATH:~/.npm-global/bin&quot; &gt;&gt; ~/.bashrc\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1514286563,
          "answer_id": 47977711,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1514286563,
          "body_markdown": "\r\n\r\n\r\n**ISSUE**: You (the user) don&#39;t have the right set of permissions for the directory.\r\n\r\nThe instant way out is to run the npm install using sudo, but this may give you the same error, or improper installation.\r\n\r\nAND changing directory ownership is not a good option, a temporary patch.\r\n\r\n\r\n----------\r\n\r\n\r\n**Solution**/**Suggestion**: Change npm&#39;s Default Directory (from official [docs][1])\r\n\r\nBack-up your computer before moving forward.\r\n\r\n(optional) In case you have a erroneous installation, first uninstall it:\r\n\r\n    npm uninstall &lt;package-name&gt;  # use sudo if you used it while installation\r\n    npm cache verify  # or, npm cache clean for npm version below 5.x.x \r\n\r\n1. Make a directory for global installations: \r\n\r\n    **`mkdir ~/.npm-global`**\r\n\r\n2. Configure npm to use the new directory path: \r\n\r\n    **`npm config set prefix &#39;~/.npm-global&#39;`**\r\n\r\n\r\n3. Open or create a `~/.profile` or `~/.bash_profile` file and add this line: \r\n\r\n    **`export PATH=~/.npm-global/bin:$PATH`**\r\n    \r\n4. Back on the command line, update your system variables, or restart the terminal: \r\n\r\n    **`source ~/.profile`**\r\n    \r\n5. (optional) Test: Download a package globally without using sudo.\r\n        \r\n    **`npm install -g jshint`**\r\n\r\n  [1]: https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-two-change-npms-default-directory\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1517980959,
          "answer_id": 48656531,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1517980959,
          "body_markdown": "In case `sudo chown -R $(whoami) ~/.npm` didn&#39;t work for you, or you need a non terminal command solution.\r\n\r\nThe issue is that your user account does not have write permission to node_modules folder, so you can do the following \r\n\r\n1. Open finder and press `cmd` + `shift` + `g` this will open go to folder with url\r\n\r\n2. Write the following path `/usr/local/lib/node_modules` and press go\r\n\r\n3. Right click on `node_modules` folder and choose `Get Info`\r\n\r\n4. Scroll down to `sharing &amp; permissions` section\r\n\r\n5. Unlock to be able to make changes.\r\n\r\n6. Press `+` and add your user account \r\n\r\n7. Make sure that you choose `Read &amp; Write` in privilege drop down\r\n\r\nNow you should be able to install packages without `sudo` and permission issues should be solved \r\n"
        }
      ],
      "title": "npm throws error without sudo",
      "view_count": 302571,
      "answer_count": 33,
      "code_snippet": [
        "<code>npm ERR! Error: EACCES, open '/Users/chietala/.npm/-/all/.cache.json'\nnpm ERR!  { [Error: EACCES, open '/Users/chietala/.npm/-/all/.cache.json']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/Users/chietala/.npm/-/all/.cache.json' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 12.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"search\" \"bower\"\nnpm ERR! cwd /Users/chietala\nnpm ERR! node -v v0.10.4\nnpm ERR! npm -v 1.2.18\nnpm ERR! path /Users/chietala/.npm/-/all/.cache.json\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, open '/Users/chietala/.npm/-/all/.cache.json'\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chietala/npm-debug.log\nnpm ERR! not ok code 0\n</code>",
        "<code>sudo chown</code>",
        "<code>sudo chown -R $(whoami) ~/.npm\n</code>",
        "<code>whoami</code>",
        "<code>whoami</code>",
        "<code>sudo chown -R simpleascouldbe ~/.npm</code>",
        "<code>whoami</code>",
        "<code>npm link</code>",
        "<code>npm install -g</code>",
        "<code>npm link</code>",
        "<code>npm install -g</code>",
        "<code>nvm install node</code>",
        "<code>npm link</code>",
        "<code>npm install -g</code>",
        "<code>npm</code>",
        "<code>node</code>",
        "<code>npm ls -gp | awk -F/ '/node_modules/ &amp;&amp; !/node_modules.*node_modules/ {print $NF}' | xargs npm -g rm</code>",
        "<code>sudo npm list -g --depth=0. | awk -F ' ' '{print $2}' | awk -F '@' '{print $1}'  | sudo xargs npm remove -g</code>",
        "<code>npm</code>",
        "<code>nvm</code>",
        "<code>node_modules</code>",
        "<code>sudo chown -R $USER /usr/local/lib/node_modules\n</code>",
        "<code>~/tmp</code>",
        "<code>-npm install recess -g\n</code>",
        "<code>home</code>",
        "<code>sudo chown -R `whoami` ~/.npm\n</code>",
        "<code>node_modules</code>",
        "<code>sudo chown -R `whoami` /usr/local/lib/node_modules\n</code>",
        "<code>/usr/local</code>",
        "<code>sudo chown -R `whoami` /usr/local\n</code>",
        "<code>/usr/local/</code>",
        "<code>npm config set prefix ~/npm\n</code>",
        "<code>export PATH=\"$PATH:$HOME/npm/bin\"\n</code>",
        "<code>$MANPATH</code>",
        "<code>$HOME</code>",
        "<code>.profile</code>",
        "<code>$PATH</code>",
        "<code>$HOME</code>",
        "<code>$PATH</code>",
        "<code>~/lib/node_modules</code>",
        "<code>~/bin</code>",
        "<code>~/bin</code>",
        "<code>~/lib</code>",
        "<code>~/bin</code>",
        "<code>npm</code>",
        "<code>/usr/bin</code>",
        "<code>/usr/local</code>",
        "<code>pip</code>",
        "<code># Create new group\nsudo groupadd nodegrp \n\n# Add user to group (logname is a variable and gets replaced by the currently logged in user)\nsudo usermod -a -G nodegrp `logname`\n\n# Instant access to group without re-login\nnewgrp nodegrp\n\n# Check group - nodegrp should be listed as well now\ngroups\n\n# Change group of node_modules, node, npm to new group \nsudo chgrp -R nodegrp /usr/lib/node_modules/\nsudo chgrp nodegrp /usr/bin/node\nsudo chgrp nodegrp /usr/bin/npm\n\n# (You may want to change a couple of more files (like grunt etc) in your /usr/bin/ directory.)\n</code>",
        "<code>npm install -g generator-angular\n</code>",
        "<code>staff</code>",
        "<code>chmod g+ws node_modules</code>",
        "<code>mkdir \"${HOME}/.npm-packages\"\n</code>",
        "<code>NPM_PACKAGES=\"${HOME}/.npm-packages\"\n</code>",
        "<code>$HOME/.npmrc</code>",
        "<code>prefix=${HOME}/.npm-packages\n</code>",
        "<code>NODE_PATH=\"$NPM_PACKAGES/lib/node_modules:$NODE_PATH\"\n</code>",
        "<code>.bashrc</code>",
        "<code>.zshrc</code>",
        "<code>PATH=\"$NPM_PACKAGES/bin:$PATH\"\n# Unset manpath so we can inherit from /etc/manpath via the `manpath`\n# command\nunset MANPATH # delete if you already modified MANPATH elsewhere in your config\nMANPATH=\"$NPM_PACKAGES/share/man:$(manpath)\"\n</code>",
        "<code>npm install</code>",
        "<code>EACCES</code>",
        "<code>.pkg</code>",
        "<code>npm config get prefix\n</code>",
        "<code>sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\n</code>",
        "<code>mkdir ~/.npm-global\n</code>",
        "<code>npm config set prefix '~/.npm-global'\n</code>",
        "<code>export PATH=~/.npm-global/bin:$PATH\n</code>",
        "<code>source ~/.profile\n</code>",
        "<code>sudo chown -R $USER /usr/local/lib/node_modules\n</code>",
        "<code>sudo chown -R `whoami` ~/.npm</code>",
        "<code>sudo chown -R `whoami` /usr/local/lib</code>",
        "<code>npm config get prefix\n</code>",
        "<code>mkdir ~/.npm-global\nexport NPM_CONFIG_PREFIX=~/.npm-global\nexport PATH=$PATH:~/.npm-global/bin\n</code>",
        "<code>echo -e \"export NPM_CONFIG_PREFIX=~/.npm-global\\nexport PATH=$PATH:~/.npm-global/bin\" &gt;&gt; ~/.bashrc\n</code>",
        "<code>sudo -i</code>",
        "<code>sudo -H</code>",
        "<code>npm install</code>",
        "<code>npm</code>",
        "<code>npm</code>",
        "<code>npm</code>",
        "<code>npm install foo</code>",
        "<code>sudo install -g foo-cli</code>",
        "<code>npm install bar</code>",
        "<code>npm</code>",
        "<code>chmod</code>",
        "<code>-i</code>",
        "<code>-H</code>",
        "<code>root</code>",
        "<code>/root/.npm</code>",
        "<code>root</code>",
        "<code>/home/me/.npm</code>",
        "<code>sudo -i</code>",
        "<code>sudo -H</code>",
        "<code>npm install</code>",
        "<code>npm</code>",
        "<code>npm</code>",
        "<code>sudo chown $USER /use/local</code>",
        "<code>sudo chown -R $USER ~/tmp\n</code>",
        "<code>sudo chown -R $(whoami) ~/.npm\n</code>",
        "<code>sudo chown -R $(whoami) /usr/lib/node_modules/\nsudo chown -R $(whoami) /usr/bin/node\nsudo chown -R $(whoami) /usr/bin/npm\n</code>",
        "<code>brew install npm</code>",
        "<code>/usr/local/share/npm/</code>",
        "<code>bin/</code>",
        "<code>lib/node_modules/</code>",
        "<code>sudo</code>",
        "<code>sudo chown -R $USER ~/.npm /usr/local/share/npm/\n</code>",
        "<code>npm config</code>",
        "<code>npm uninstall &lt;package-name&gt;  # use sudo if you used it while installation\nnpm cache verify  # or, npm cache clean for npm version below 5.x.x \n</code>",
        "<code>mkdir ~/.npm-global</code>",
        "<code>npm config set prefix '~/.npm-global'</code>",
        "<code>~/.profile</code>",
        "<code>~/.bash_profile</code>",
        "<code>export PATH=~/.npm-global/bin:$PATH</code>",
        "<code>source ~/.profile</code>",
        "<code>npm install -g jshint</code>",
        "<code>sudo chown -R $(whoami) ~/.npm</code>",
        "<code>cmd</code>",
        "<code>shift</code>",
        "<code>g</code>",
        "<code>/usr/local/lib/node_modules</code>",
        "<code>node_modules</code>",
        "<code>Get Info</code>",
        "<code>sharing &amp; permissions</code>",
        "<code>+</code>",
        "<code>Read &amp; Write</code>",
        "<code>sudo</code>",
        "<code>sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys &lt;key in GPG error&gt;\n</code>",
        "<code>/usr/local/lib/npm_modules</code>",
        "<code>staff</code>",
        "<code>/usr/bin</code>",
        "<code>symlink</code>",
        "<code>/usr/bin/__package__</code>",
        "<code>whoami</code>",
        "<code>sudo chown -R $USER /usr/local/lib/node_modules</code>",
        "<code>sudo chown -R $USER /usr/local/bin/npm</code>",
        "<code>sudo chown -R $USER /usr/local/bin/node</code>",
        "<code>npm config set prefix '~/.npm_packages'\nPATH=$PATH:$HOME/.npm_packages/bin; export PATH\n</code>",
        "<code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n</code>",
        "<code>nvm ls-remote\n</code>",
        "<code>nvm install YOUR_VERSION_HERE\n</code>",
        "<code>nvm install v5.8.0\n</code>",
        "<code>npm config get prefix</code>",
        "<code>/usr</code>",
        "<code>/usr/local</code>",
        "<code>/usr/local</code>",
        "<code>npm config set prefix '/usr/local'</code>",
        "<code>/usr/local/lib/node_modules</code>",
        "<code>sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\n</code>",
        "<code>sudo -s</code>",
        "<code>mkdir ~/.npm-global</code>",
        "<code>npm config set prefix '~/.npm-global'</code>",
        "<code>npm config get prefix</code>",
        "<code>export PATH=~/.npm-global/bin:$PATH</code>",
        "<code>source ~/.profile</code>",
        "<code>NPM_CONFIG_PREFIX=~/.npm-global</code>",
        "<code>brew install node</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "git",
        "bower",
        "git-clone"
      ],
      "creation_date": 1364417165,
      "body_markdown": "I am trying to set up Bower on a build server at our organization&#39;s data center, but `git`&#39;s port does not appear to be open on the data center&#39;s firewall.  I can use the git command line client to clone via `https://[repo]`, but not `git://[repo]`.\r\n\r\nIs there a switch or preference which will instruct bower to perform git clone using `https` rather than the `git` protocol?\r\n\r\nI&#39;ve looked at the source, and considered changing the resolution code to replace `git://` with `https://`, but I figured I&#39;d ask before I go to those lengths.",
      "last_edit_date": 1406819355,
      "up_vote_count": 254,
      "link": "https://stackoverflow.com/questions/15669091/bower-install-using-only-https",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1364482107,
          "answer_id": 15684898,
          "path": "stack.bower.answer",
          "score": 625,
          "up_vote_count": 625,
          "is_accepted": true,
          "last_activity_date": 1516722286,
          "last_edit_date": 1516722286,
          "body_markdown": "You can make git replace the protocol for you. Just run:\r\n\r\n    git config --global url.&quot;https://&quot;.insteadOf git://\r\n\r\nto use HTTPS protocol instead of Git."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1449787956,
          "answer_id": 34213195,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1450549685,
          "last_edit_date": 1450549685,
          "body_markdown": "Building on the answer from @Sindre, I wrote a little helper function in BASH which lives in my `~/.bashrc` file. Call it just as you would `grunt`, except now it&#39;s called `nngrunt`. Enjoy!\r\n\r\n&lt;!-- language: bash --&gt;\r\n\r\n    function nngrunt\r\n    {\r\n        # Add a section to the global gitconfig file ~/.gitconfig that tells git to\r\n        # go over http instead of the git protocol, otherwise bower has fits...\r\n        # See http://stackoverflow.com/questions/15669091/bower-install-using-only-https\r\n        git config --global url.&quot;https://&quot;.insteadOf git://\r\n\r\n        # Run grunt w/ any supplied args\r\n        grunt &quot;$@&quot;\r\n    \r\n        # Now cleanup the section we added to the git config file\r\n        # Of course we have our own extra cleanup to do via sed since the unset command\r\n        # leaves the section around\r\n        # See http://git.661346.n2.nabble.com/git-config-unset-does-not-remove-section-td7569639.html\r\n        git config --global --unset url.&quot;https://&quot;.insteadOf\r\n        sed -i &#39;s/\\[url &quot;https:\\/\\/&quot;\\]//&#39; ~/.gitconfig\r\n        sed -i &#39;/^$/d&#39; ~/.gitconfig\r\n    }"
        }
      ],
      "title": "Bower install using only https?",
      "view_count": 66729,
      "answer_count": 2,
      "code_snippet": [
        "<code>git</code>",
        "<code>https://[repo]</code>",
        "<code>git://[repo]</code>",
        "<code>https</code>",
        "<code>git</code>",
        "<code>git://</code>",
        "<code>https://</code>",
        "<code>git config --global url.\"https://\".insteadOf git://\n</code>",
        "<code>git config --global --unset url.\"https://\".insteadOf</code>",
        "<code>--global</code>",
        "<code>.git/config</code>",
        "<code>~/.bashrc</code>",
        "<code>grunt</code>",
        "<code>nngrunt</code>",
        "<code>function nngrunt\n{\n    # Add a section to the global gitconfig file ~/.gitconfig that tells git to\n    # go over http instead of the git protocol, otherwise bower has fits...\n    # See http://stackoverflow.com/questions/15669091/bower-install-using-only-https\n    git config --global url.\"https://\".insteadOf git://\n\n    # Run grunt w/ any supplied args\n    grunt \"$@\"\n\n    # Now cleanup the section we added to the git config file\n    # Of course we have our own extra cleanup to do via sed since the unset command\n    # leaves the section around\n    # See http://git.661346.n2.nabble.com/git-config-unset-does-not-remove-section-td7569639.html\n    git config --global --unset url.\"https://\".insteadOf\n    sed -i 's/\\[url \"https:\\/\\/\"\\]//' ~/.gitconfig\n    sed -i '/^$/d' ~/.gitconfig\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs"
      ],
      "creation_date": 1361567301,
      "body_markdown": "I am using the `$http` service of angular to make an ajax request. \r\n\r\nHow to show a loader gif during the ajax request? \r\n\r\nI don&#39;t see any `ajaxstartevent` or similar event in documentation.",
      "last_edit_date": 1373118342,
      "up_vote_count": 221,
      "link": "https://stackoverflow.com/questions/15033195/showing-spinner-gif-during-http-request-in-angular",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1361567907,
          "answer_id": 15033322,
          "path": "stack.bower.answer",
          "score": 461,
          "up_vote_count": 461,
          "is_accepted": false,
          "last_activity_date": 1418397025,
          "last_edit_date": 1418397025,
          "body_markdown": "This really depends on your specific use case, but a simple way would follow a pattern like this:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    .controller(&#39;MainCtrl&#39;, function ( $scope, myService ) {\r\n      $scope.loading = true;\r\n      myService.get().then( function ( response ) {\r\n        $scope.items = response.data;\r\n      }, function ( response ) {\r\n        // TODO: handle the error somehow\r\n      }).finally(function() {\r\n        // called no matter success or failure\r\n        $scope.loading = false;\r\n      });\r\n    });\r\n\r\nAnd then react to it in your template:\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;div class=&quot;spinner&quot; ng-show=&quot;loading&quot;&gt;&lt;/div&gt;\r\n    &lt;div ng-repeat=&quot;item in items&gt;{{item.name}}&lt;/div&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 13,
          "creation_date": 1365786059,
          "answer_id": 15976991,
          "path": "stack.bower.answer",
          "score": 81,
          "up_vote_count": 94,
          "is_accepted": true,
          "last_activity_date": 1389273116,
          "last_edit_date": 1389273116,
          "body_markdown": "**Here are the &lt;s&gt;current&lt;/s&gt; past AngularJS incantations:**\r\n\r\n    angular.module(&#39;SharedServices&#39;, [])\r\n        .config(function ($httpProvider) {\r\n            $httpProvider.responseInterceptors.push(&#39;myHttpInterceptor&#39;);\r\n            var spinnerFunction = function (data, headersGetter) {\r\n                // todo start the spinner here\r\n                //alert(&#39;start spinner&#39;);\r\n            \t$(&#39;#mydiv&#39;).show();\r\n                return data;\r\n            };\r\n            $httpProvider.defaults.transformRequest.push(spinnerFunction);\r\n        })\r\n    // register the interceptor as a service, intercepts ALL angular ajax http calls\r\n        .factory(&#39;myHttpInterceptor&#39;, function ($q, $window) {\r\n            return function (promise) {\r\n                return promise.then(function (response) {\r\n                    // do something on success\r\n                    // todo hide the spinner\r\n                    //alert(&#39;stop spinner&#39;);\r\n                \t$(&#39;#mydiv&#39;).hide();\r\n                    return response;\r\n    \r\n                }, function (response) {\r\n                    // do something on error\r\n                    // todo hide the spinner\r\n                    //alert(&#39;stop spinner&#39;);\r\n                \t$(&#39;#mydiv&#39;).hide();\r\n                    return $q.reject(response);\r\n                });\r\n            };\r\n        });\r\n\r\n    //regular angular initialization continued below....\r\n    angular.module(&#39;myApp&#39;, [ &#39;myApp.directives&#39;, &#39;SharedServices&#39;]).\r\n    //.......\r\n\r\n**Here is the rest of it (HTML / CSS)....using**\r\n\r\n    $(&#39;#mydiv&#39;).show(); \r\n    $(&#39;#mydiv&#39;).hide(); \r\n\r\n**to toggle it.  NOTE: the above is used in the angular module at beginning of post**\r\n\r\n    #mydiv {  \r\n        position:absolute;\r\n        top:0;\r\n        left:0;\r\n        width:100%;\r\n        height:100%;\r\n        z-index:1000;\r\n        background-color:grey;\r\n        opacity: .8;\r\n     }\r\n    \r\n    .ajax-loader {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        margin-left: -32px; /* -1 * image width / 2 */\r\n        margin-top: -32px;  /* -1 * image height / 2 */\r\n        display: block;     \r\n    }\r\n    \r\n    &lt;div id=&quot;mydiv&quot;&gt;\r\n        &lt;img src=&quot;lib/jQuery/images/ajax-loader.gif&quot; class=&quot;ajax-loader&quot;/&gt;\r\n    &lt;/div&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1404814375,
          "answer_id": 24629196,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1490138787,
          "last_edit_date": 1490138787,
          "body_markdown": "Just discovered the `angular-busy` directive that shows a little loader depending on some async call.\r\n\r\nFor example, if you have to make a `GET`, reference the promise in your `$scope`,\r\n\r\n    $scope.req = $http.get(&#39;http://google.fr&#39;);\r\n\r\nand call it like so :\r\n\r\n    &lt;div cg-busy=&quot;req&quot;&gt;&lt;/div&gt;\r\n\r\n----\r\n\r\nHere is the &lt;kbd&gt;[**GitHub**][1]&lt;/kbd&gt;.\r\n\r\nYou can also install it using `bower` (don&#39;t forget to update your project dependencies):\r\n\r\n    bower install angular-busy --save\r\n\r\n\r\n  [1]: https://github.com/cgross/angular-busy"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1406340259,
          "answer_id": 24966816,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1406340259,
          "body_markdown": "For page loads and modals the easiest way is to use the ng-show direcive and use one of the scope data variables. Something like ng-show=&quot;angular.isUndefined(scope.data.someobject)&quot;. As the data is undefined the spinner will show. Once the service returns with data and scope is populated, the spinner will be hidden."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1406816175,
          "answer_id": 25061222,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1406816175,
          "body_markdown": "https://github.com/wongatech/angular-http-loader is a good project for this.\r\n\r\nExample here http://wongatech.github.io/angular-http-loader/\r\n\r\nThe code below shows a template example/loader.tpl.html when a request is happening.\r\n\r\n    &lt;div ng-http-loader template=&quot;example/loader.tpl.html&quot;&gt;&lt;/div&gt;\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1408460487,
          "answer_id": 25386766,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1408460487,
          "last_edit_date": 1495535499,
          "body_markdown": "If you&#39;re wrapping your api calls within a service/factory, then you can track the loading counter there (per [answer](https://stackoverflow.com/a/15033322/1037948) and excellent simultaneous suggestion by @JMaylin), and reference the loading counter via a directive.  Or any combination thereof.\r\n\r\n## API WRAPPER ###\r\n\r\n\tyourModule\r\n\t\t.factory(&#39;yourApi&#39;, [&#39;$http&#39;, function ($http) {\r\n\t\t\tvar api = {}\r\n\t\t\t\r\n\t\t\t//#region ------------ spinner -------------\r\n\r\n\t\t\t// ajax loading counter\r\n\t\t\tapi._loading = 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * Toggle check\r\n\t\t\t */\r\n\t\t\tapi.isOn = function () { return api._loading &gt; 0; }\r\n\r\n\t\t\t/**\r\n\t\t\t * Based on a configuration setting to ignore the loading spinner, update the loading counter\r\n\t\t\t * (for multiple ajax calls at one time)\r\n\t\t\t */\r\n\t\t\tapi.spinner = function(delta, config) {\r\n\t\t\t\t// if we haven&#39;t been told to ignore the spinner, change the loading counter\r\n\t\t\t\t// so we can show/hide the spinner\r\n\r\n\t\t\t\tif (NG.isUndefined(config.spin) || config.spin) api._loading += delta;\r\n\r\n\t\t\t\t// don&#39;t let runaway triggers break stuff...\r\n\t\t\t\tif (api._loading &lt; 0) api._loading = 0;\r\n\r\n\t\t\t\tconsole.log(&#39;spinner:&#39;, api._loading, delta);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * Track an ajax load begin, if not specifically disallowed by request configuration\r\n\t\t\t */\r\n\t\t\tapi.loadBegin = function(config) {\r\n\t\t\t\tapi.spinner(1, config);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * Track an ajax load end, if not specifically disallowed by request configuration\r\n\t\t\t */\r\n\t\t\tapi.loadEnd = function (config) {\r\n\t\t\t\tapi.spinner(-1, config);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//#endregion ------------ spinner -------------\r\n\r\n\t\t\tvar baseConfig = {\r\n\t\t\t\tmethod: &#39;post&#39;\r\n\t\t\t\t// don&#39;t need to declare `spin` here\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * $http wrapper to standardize all api calls\r\n\t\t\t * @param args stuff sent to request\r\n\t\t\t * @param config $http configuration, such as url, methods, etc\r\n\t\t\t */\r\n\t\t\tvar callWrapper = function(args, config) {\r\n\t\t\t\tvar p = angular.extend(baseConfig, config); // override defaults\r\n\t\t\t\t\r\n\t\t\t\t// fix for &#39;get&#39; vs &#39;post&#39; param attachment\r\n\t\t\t\tif (!angular.isUndefined(args)) p[p.method == &#39;get&#39; ? &#39;params&#39; : &#39;data&#39;] = args;\r\n\r\n\t\t\t\t// trigger the spinner\r\n\t\t\t\tapi.loadBegin(p);\r\n\t\t\t\t\r\n\t\t\t\t// make the call, and turn of the spinner on completion\r\n\t\t\t\t// note: may want to use `then`/`catch` instead since `finally` has delayed completion if down-chain returns more promises\r\n\t\t\t\treturn $http(p)[&#39;finally&#39;](function(response) {\r\n\t\t\t\t\tapi.loadEnd(response.config);\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tapi.DoSomething = function(args) {\r\n\t\t\t\t// yes spinner\r\n\t\t\t\treturn callWrapper(args, { cache: true });\r\n\t\t\t}\r\n\t\t\tapi.DoSomethingInBackground = function(args) {\r\n\t\t\t\t// no spinner\r\n\t\t\t\treturn callWrapper(args, { cache: true, spin: false });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// expose\r\n\t\t\treturn api;\r\n\t\t});\r\n\r\n## SPINNER DIRECTIVE ##\r\n\r\n\t(function (NG) {\r\n\t\tvar loaderTemplate = &#39;&lt;div class=&quot;ui active dimmer&quot; data-ng-show=&quot;hasSpinner()&quot;&gt;&lt;div class=&quot;ui large loader&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#39;;\r\n\r\n\t\t/**\r\n\t\t * Show/Hide spinner with ajax\r\n\t\t */\r\n\t\tfunction spinnerDirective($compile, api) {\r\n\t\t\treturn {\r\n\t\t\t\trestrict: &#39;EA&#39;,\r\n\t\t\t\tlink: function (scope, element) {\r\n\t\t\t\t\t// listen for api trigger\r\n\t\t\t\t\tscope.hasSpinner = api.isOn;\r\n\r\n\t\t\t\t\t// attach spinner html\r\n\t\t\t\t\tvar spin = NG.element(loaderTemplate);\r\n\t\t\t\t\t$compile(spin)(scope); // bind+parse\r\n\t\t\t\t\telement.append(spin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tNG.module(&#39;yourModule&#39;)\r\n\t\t\t.directive(&#39;yourApiSpinner&#39;, [&#39;$compile&#39;, &#39;yourApi&#39;, spinnerDirective]);\r\n\t})(angular);\r\n\r\n## USAGE ##\r\n\r\n    &lt;div ng-controller=&quot;myCtrl&quot; your-api-spinner&gt; ... &lt;/div&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410884318,
          "answer_id": 25873779,
          "path": "stack.bower.answer",
          "score": 31,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1410884318,
          "body_markdown": "If you are using ngResource, the $resolved attribute of an object is useful for loaders:\r\n\r\nFor a resource as follows:\r\n\r\n    var User = $resource(&#39;/user/:id&#39;, {id:&#39;@id&#39;});\r\n    var user = User.get({id: 1})\r\n\r\n\r\nYou can link a loader to the $resolved attribute of the resource object:\r\n\r\n    &lt;div ng-hide=&quot;user.$resolved&quot;&gt;Loading ...&lt;/div&gt;\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1423754629,
          "answer_id": 28481245,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1423754629,
          "body_markdown": "  \r\n\r\n    .factory(&#39;authHttpResponseInterceptor&#39;, [&#39;$q&#39;, function ($q) {\r\n    \t\treturn {\r\n    \t\t\trequest: function(config) {\r\n    \t\t\t\tangular.element(&#39;#spinner&#39;).show();\r\n    \t\t\t\treturn config;\r\n    \t\t\t},\r\n    \t\t\tresponse : function(response) {\r\n    \t\t\t\tangular.element(&#39;#spinner&#39;).fadeOut(3000);\r\n    \t\t\t\treturn response || $q.when(response);\r\n    \t\t\t},\r\n    \t\t\tresponseError: function(reason) {\r\n    \t\t\t\tangular.element(&#39;#spinner&#39;).fadeOut(3000);\r\n    \t\t\t\treturn $q.reject(reason);\r\n    \t\t\t}\r\n    \t\t};\r\n    \t}]);\r\n\r\n   \r\n\r\n     .config([&#39;$routeProvider&#39;, &#39;$locationProvider&#39;, &#39;$translateProvider&#39;, &#39;$httpProvider&#39;,\r\n        \t\tfunction ($routeProvider, $locationProvider, $translateProvider, $httpProvider) {\r\n        \t\t\t$httpProvider.interceptors.push(&#39;authHttpResponseInterceptor&#39;);\r\n        }\r\n    ]);\r\n    \r\n    in your Template\r\n    &lt;div id=&quot;spinner&quot;&gt;&lt;/div&gt;\r\n    \r\n    \r\n    css   \r\n    \r\n    #spinner,\r\n    #spinner:after {\r\n      border-radius: 50%;\r\n      width: 10em;\r\n      height: 10em;\r\n      background-color: #A9A9A9;\r\n      z-index: 10000;\r\n      position: absolute;\r\n      left: 50%;\r\n      bottom: 100px;\r\n    }\r\n    @-webkit-keyframes load8 {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n    @keyframes load8 {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n      \r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1427401306,
          "answer_id": 29288082,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1427401306,
          "body_markdown": "Here is my solution which i feel is alot easer that the other posted here. Not sure how &quot;pretty&quot; it is though, but it solved all my issues \r\n\r\nI have a css style called &quot;loading&quot;\r\n\r\n    .loading { display: none; }\r\nThe html for the loading div can be whatever but I used some FontAwesome icons and the spin method there:\r\n\r\n    &lt;div style=&quot;text-align:center&quot; ng-class=&quot;{ &#39;loading&#39;: !loading }&quot;&gt;\r\n        &lt;br /&gt;\r\n        &lt;h1&gt;&lt;i class=&quot;fa fa-refresh fa-spin&quot;&gt;&lt;/i&gt; Loading data&lt;/h1&gt;\r\n    &lt;/div&gt;\r\nOn the elements that you want to hide you simply write this:\r\n\r\n    &lt;something ng-class=&quot;{ &#39;loading&#39;: loading }&quot; class=&quot;loading&quot;&gt;&lt;/something&gt;\r\n\r\nand in the function i just set this on load.\r\n\r\n    (function (angular) {\r\n        function MainController($scope) {\r\n            $scope.loading = true\r\n\r\nI am using SignalR so in the hubProxy.client.allLocks function (when its done going through the locks) I juts put\r\n\r\n     $scope.loading = false\r\n     $scope.$apply();\r\n\r\nThis also hides the {{someField}} when the page is loading since I am setting the loading class on load and AngularJS removes it afterwards."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1428484467,
          "answer_id": 29510529,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1428484467,
          "body_markdown": "create directive with this code:\r\n\r\n    $scope.$watch($http.pendingRequests, toggleLoader);\r\n    \r\n    function toggleLoader(status){\r\n      if(status.length){\r\n        element.addClass(&#39;active&#39;);\r\n      } else {\r\n        element.removeClass(&#39;active&#39;);\r\n      }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1437286433,
          "answer_id": 31498517,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1437286433,
          "body_markdown": "This works well for me:\r\n\r\nHTML:\r\n\r\n      &lt;div id=&quot;loader&quot; class=&quot;ng-hide&quot; ng-show=&quot;req.$$state.pending&quot;&gt;\r\n        &lt;img class=&quot;ajax-loader&quot; \r\n             width=&quot;200&quot; \r\n             height=&quot;200&quot; \r\n             src=&quot;/images/spinner.gif&quot; /&gt;\r\n      &lt;/div&gt;\r\n\r\nAngular:\r\n\r\n      $scope.req = $http.get(&quot;/admin/view/&quot;+id).success(function(data) {          \r\n          $scope.data = data;\r\n      });\r\n\r\nWhile the promise returned from $http is pending, ng-show will evaluate it to be &quot;truthy&quot;. This is automatically updated once the promise is resolved... which is exactly what we want."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438693254,
          "answer_id": 31810079,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1438693254,
          "body_markdown": "Another solution to show loading between different url changes is:\r\n\r\n    $rootScope.$on(&#39;$locationChangeStart&#39;, function() {\r\n      $scope.loading++;\r\n    });\r\n  \r\n    $rootScope.$on(&#39;$locationChangeSuccess&#39;, function() {\r\n      $timeout(function() {\r\n        $scope.loading--;\r\n      }, 300);\r\n    });\r\n\r\nAnd then in the markup just toggle the spinner with &lt;code&gt;ng-show=&quot;loading&quot;&lt;/code&gt;. \r\n\r\nIf you want to display it on ajax requests just add &lt;code&gt;$scope.loading++&lt;/code&gt; when the request starts and when it ends add &lt;code&gt;$scope.loading--&lt;/code&gt;."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439344967,
          "answer_id": 31954859,
          "path": "stack.bower.answer",
          "score": 41,
          "up_vote_count": 41,
          "is_accepted": false,
          "last_activity_date": 1445284873,
          "last_edit_date": 1445284873,
          "body_markdown": "**Here&#39;s a version using a `directive` and `ng-hide`.**\r\n\r\nThis will show the loader during **all** calls via angular&#39;s `$http` service.\r\n\r\n**In the template:**\r\n\r\n`&lt;div class=&quot;loader&quot; data-loading&gt;&lt;/div&gt;`\r\n\r\n**directive:**\r\n\r\n    angular.module(&#39;app&#39;)\r\n      .directive(&#39;loading&#39;, [&#39;$http&#39;, function ($http) {\r\n        return {\r\n          restrict: &#39;A&#39;,\r\n          link: function (scope, element, attrs) {\r\n            scope.isLoading = function () {\r\n              return $http.pendingRequests.length &gt; 0;\r\n            };\r\n            scope.$watch(scope.isLoading, function (value) {\r\n              if (value) {\r\n                element.removeClass(&#39;ng-hide&#39;);\r\n              } else {\r\n                element.addClass(&#39;ng-hide&#39;);\r\n              }\r\n            });\r\n          }\r\n        };\r\n    }]);\r\n\r\nby using the `ng-hide` class on the element, you can avoid jquery.  \r\n\r\n-------------------------\r\n**Customize: add an `interceptor`**\r\n\r\nIf you create a loading-interceptor, you can show/hide the loader based on a condition.\r\n\r\n**directive:**\r\n\r\n    var loadingDirective = function ($rootScope) {\r\n      return function ($scope, element, attrs) {\r\n          $scope.$on(&quot;loader_show&quot;, function () {\r\n              return element.removeClass(&#39;ng-hide&#39;);\r\n          });\r\n          return $scope.$on(&quot;loader_hide&quot;, function () {\r\n              return element.addClass(&#39;ng-hide&#39;);\r\n          });\r\n      };\r\n    };\r\n\r\n\r\n**interceptor:**\r\n\r\n - for example: don&#39;t show `spinner` when `response.background === true;`\r\n - Intercept `request` and/or `response` to set `$rootScope.$broadcast(&quot;loader_show&quot;);` or `$rootScope.$broadcast(&quot;loader_hide&quot;);`\r\n\r\n[more info on writing an interceptor](http://www.webdeveasy.com/interceptors-in-angularjs-and-useful-examples/)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452781677,
          "answer_id": 34792031,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1452781677,
          "body_markdown": "You can try something like this as well:\r\n\r\nCreate directive :\r\n\r\n    myApp.directive(&#39;loader&#39;, function () {\r\n        return {\r\n            restrict: &#39;A&#39;,\r\n            scope: {cond: &#39;=loader&#39;},\r\n            template: &#39;&lt;span ng-if=&quot;isLoading()&quot; class=&quot;soft&quot;&gt;&lt;span class=&quot;fa fa-refresh fa-spin&quot;&gt;&lt;/span&gt;&lt;/span&gt;&#39;,\r\n            link: function (scope) {\r\n                scope.isLoading = function() {\r\n                    var ret = scope.cond === true || (\r\n                            scope.cond &amp;&amp;\r\n                            scope.cond.$$state &amp;&amp;\r\n                            angular.isDefined(scope.cond.$$state.status) &amp;&amp;\r\n                            scope.cond.$$state.status === 0\r\n                        );\r\n                    return ret;\r\n                }\r\n            }\r\n        };\r\n    }); \r\n\r\n\r\nThen you add something like this to mainCtrl\r\n\r\n        // Return TRUE if some request is LOADING, else return FALSE\r\n        $scope.isLoading = function() {\r\n            return $http.pendingRequests.length &gt; 0;\r\n        };\r\n\r\n\r\nAnd HTML can looks like this:\r\n\r\n    &lt;div class=&quot;buttons loader&quot;&gt;\r\n        &lt;span class=&quot;icon&quot; loader=&quot;isLoading()&quot;&gt;&lt;/span&gt;\r\n    &lt;/div&gt;\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1456390538,
          "answer_id": 35622491,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1456390538,
          "body_markdown": "The following way will take note of all requests, and hide only once all requests are done:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    app.factory(&#39;httpRequestInterceptor&#39;, function(LoadingService, requestCount) {\r\n        return {\r\n            request: function(config) {\r\n                if (!config.headers.disableLoading) {\r\n                    requestCount.increase();\r\n                    LoadingService.show();\r\n                }\r\n                return config;\r\n            }\r\n        };\r\n    }).factory(&#39;httpResponseInterceptor&#39;, function(LoadingService, $timeout, error, $q, requestCount) {\r\n        function waitAndHide() {\r\n            $timeout(function() {\r\n                if (requestCount.get() === 0){\r\n                    LoadingService.hide();\r\n                }\r\n                else{\r\n                    waitAndHide();\r\n                }\r\n            }, 300);\r\n        }\r\n\r\n        return {\r\n            response: function(config) {\r\n                requestCount.descrease();\r\n                if (requestCount.get() === 0) {\r\n                    waitAndHide();\r\n                }\r\n                return config;\r\n            },\r\n            responseError: function(config) {\r\n                requestCount.descrease();\r\n                if (requestCount.get() === 0) {\r\n                    waitAndHide();\r\n                }\r\n                var deferred = $q.defer();\r\n                error.show(config.data, function() {\r\n                    deferred.reject(config);\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }).factory(&#39;requestCount&#39;, function() {\r\n        var count = 0;\r\n        return {\r\n            increase: function() {\r\n                count++;\r\n            },\r\n            descrease: function() {\r\n                if (count === 0) return;\r\n                count--;\r\n            },\r\n            get: function() {\r\n                return count;\r\n            }\r\n        };\r\n    })\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458643448,
          "answer_id": 36152250,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1458643448,
          "body_markdown": "Since the functionality of **position:fixed** changed recently, I had difficulty showing the gif loader above all elements, so I had to use angular&#39;s inbuilt **jQuery**. \r\n\r\n**Html**\r\n\r\n    &lt;div ng-controller=&quot;FetchController&quot;&gt;\r\n\t\t  &lt;div id=&quot;spinner&quot;&gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n**Css**\r\n\r\n    #spinner {display: none}\r\n    body.spinnerOn #spinner { /* body tag not necessary actually */\r\n\t   display: block;\r\n       height: 100%;\r\n       width: 100%;\r\n       background: rgba(207, 13, 48, 0.72) url(img/loader.gif) center center no-repeat;\r\n       position: fixed;\r\n       top: 0;\r\n       left: 0;\r\n       z-index: 9999;\r\n    }\r\n    body.spinnerOn main.content { position: static;} /* and whatever content needs to be moved below your fixed loader div */\r\n\r\n**Controller**\r\n\r\n    app.controller(&#39;FetchController&#39;, [&#39;$scope&#39;, &#39;$http&#39;, &#39;$templateCache&#39;, &#39;$location&#39;, &#39;$q&#39;,\r\n\tfunction($scope, $http, $templateCache, $location, $q) {\r\n\r\n    angular.element(&#39;body&#39;).addClass(&#39;spinnerOn&#39;); // add Class to body to show spinner\r\n\r\n    $http.post( // or .get(\r\n        // your data here\r\n    })\r\n    .then(function (response) {\r\n        console.info(&#39;success&#39;);     \r\n   \t    angular.element(&#39;body&#39;).removeClass(&#39;spinnerOn&#39;); // hide spinner\r\n\r\n        return response.data;               \r\n    }, function (response) {\t\t\t\t   \r\n        console.info(&#39;error&#39;); \r\n\t    angular.element(&#39;body&#39;).removeClass(&#39;spinnerOn&#39;); // hide spinner\r\n    });\r\n\r\n    })\r\n\r\nHope this helps :)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1468082730,
          "answer_id": 38284036,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1468082730,
          "body_markdown": "**This is the easiest way to add a spinner i guess:-**\r\n\r\nYou can use ng-show with the div tag of any one of these beautiful spinners\r\n[http://tobiasahlin.com/spinkit/][1] {{This is not my page}}\r\n \r\n\r\n  [1]: http://tobiasahlin.com/spinkit/\r\nand then you can use this kind of logic \r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    //ajax start\r\n        $scope.finderloader=true;\r\n        \r\n              $http({\r\n        method :&quot;POST&quot;,\r\n        url : &quot;your URL&quot;,\r\n      data: { //your data\r\n         \r\n         }\r\n      }).then(function mySucces(response) {\r\n        $scope.finderloader=false;\r\n          $scope.search=false;          \r\n        $scope.myData =response.data.records;\r\n      });\r\n         \r\n        //ajax end \r\n        \r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;div ng-show=&quot;finderloader&quot; class=spinner&gt;&lt;/div&gt;\r\n    //add this in your HTML at right place\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1475074722,
          "answer_id": 39751123,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1475074722,
          "body_markdown": "All answers are or to complicated, or need to set some variables on every request which is very wrong practice if we know the DRY concept. Here simple interceptor example, I set mouse on wait when ajax starts and set it to auto when ajax ends. \r\n\r\n    $httpProvider.interceptors.push(function($document) {\r\n        return {\r\n         &#39;request&#39;: function(config) {\r\n             // here ajax start\r\n             // here we can for example add some class or show somethin\r\n             $document.find(&quot;body&quot;).css(&quot;cursor&quot;,&quot;wait&quot;);\r\n             \r\n             return config;\r\n          },\r\n\r\n          &#39;response&#39;: function(response) {\r\n             // here ajax ends\r\n             //here we should remove classes added on request start\r\n             \r\n             $document.find(&quot;body&quot;).css(&quot;cursor&quot;,&quot;auto&quot;);\r\n             \r\n             return response;\r\n          }\r\n        };\r\n      });\r\n\r\nCode has to be added in application config `app.config`. I showed how to change mouse on loading state but in there it is possible to show/hide any loader content, or add, remove some css classes which are showing the loader.\r\n\r\nInterceptor will run on every ajax call, so no need to create special boolean variables *( $scope.loading=true/false etc. )* on every http call."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1475511337,
          "answer_id": 39836005,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1475511337,
          "body_markdown": "    Based on Josh David Miller response:\r\n    \r\n      &lt;body&gt;\r\n      &lt;header&gt;\r\n      &lt;/header&gt;\r\n    &lt;div class=&quot;spinner&quot; ng-show=&quot;loading&quot;&gt;\r\n      &lt;div class=&quot;loader&quot; &gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    \r\n    &lt;div ng-view=&quot;&quot;&gt;&lt;/div&gt;\r\n    \r\n    &lt;footer&gt;\r\n    &lt;/footer&gt;\r\n    \r\n    &lt;/body&gt;\r\n\r\nAdd this css:\r\n\r\n        .loader {\r\n      border: 16px solid #f3f3f3;\r\n      border-radius: 50%;\r\n      border-top: 16px solid #3498db;\r\n      border-bottom : 16px solid black;\r\n      width: 80px;\r\n      height: 80px;\r\n      -webkit-animation: spin 2s linear infinite;\r\n      animation: spin 2s linear infinite;\r\n      position: absolute;\r\n      top: 45%;\r\n      left: 45%;\r\n    }\r\n    \r\n    @-webkit-keyframes spin {\r\n      0% { -webkit-transform: rotate(0deg); }\r\n      100% { -webkit-transform: rotate(360deg); }\r\n    }\r\n    \r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n    \r\n    \r\n    .spinner{\r\n      width: 100%;\r\n    height: 100%;\r\n    z-index: 10000;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    background: white;\r\n    opacity: 0.6;\r\n    }\r\n\r\n\r\nAnd just in your angular add:\r\n\r\n  $rootScope.loading = false;\r\n  $rootScope.loading = true; -&gt; when $http.get ends.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1482489959,
          "answer_id": 41299927,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1482489959,
          "body_markdown": "**Used following intercepter to show loading bar on http request**    \r\n    \r\n    &#39;use strict&#39;;\r\n    appServices.factory(&#39;authInterceptorService&#39;, [&#39;$q&#39;, &#39;$location&#39;, &#39;localStorage&#39;,&#39;$injector&#39;,&#39;$timeout&#39;, function ($q, $location, localStorage, $injector,$timeout) {\r\n\r\n    var authInterceptorServiceFactory = {};\r\n    var requestInitiated;\r\n   \r\n    //start loading bar\r\n    var _startLoading = function () {\r\n       console.log(&quot;error start loading&quot;);\r\n       $injector.get(&quot;$ionicLoading&quot;).show();\r\n      \r\n    }\r\n   \r\n    //stop loading bar\r\n    var _stopLoading = function () {\r\n        $injector.get(&quot;$ionicLoading&quot;).hide();\r\n    }\r\n   \r\n    //request initiated\r\n    var _request = function (config) {\r\n         requestInitiated = true;\r\n        _startLoading();\r\n        config.headers = config.headers || {};\r\n        var authDataInitial = localStorage.get(&#39;authorizationData&#39;);\r\n        if (authDataInitial &amp;&amp; authDataInitial.length &gt; 2) {\r\n            var authData = JSON.parse(authDataInitial);\r\n            if (authData) {\r\n                config.headers.Authorization = &#39;Bearer &#39; + authData.token;\r\n            }\r\n        }\r\n        return config;\r\n    }\r\n    \r\n    //request responce error\r\n    var _responseError = function (rejection) {\r\n       _stopLoading();\r\n        if (rejection.status === 401) {\r\n            $location.path(&#39;/login&#39;);\r\n        }\r\n        return $q.reject(rejection);\r\n    }\r\n                                               \r\n    //request error\r\n    var _requestError = function (err) {\r\n       _stopLoading();\r\n       console.log(&#39;Request Error logging via interceptor&#39;);\r\n       return err;\r\n    }\r\n   \r\n    //request responce\r\n    var _response = function(response) {\r\n        requestInitiated = false;\r\n   \r\n\t   // Show delay of 300ms so the popup will not appear for multiple http request\r\n\t   $timeout(function() {\r\n\t\t\t\t\r\n\t\t\tif(requestInitiated) return;\r\n\t\t\t_stopLoading();\r\n\t\t\tconsole.log(&#39;Response received with interceptor&#39;);\r\n\t\t\t\t\r\n\t\t},300);\r\n   \r\n    return response;\r\n    }\r\n                                               \r\n                                           \r\n\r\n    authInterceptorServiceFactory.request = _request;\r\n    authInterceptorServiceFactory.responseError = _responseError;\r\n    authInterceptorServiceFactory.requestError = _requestError;\r\n\tauthInterceptorServiceFactory.response = _response;\r\n\r\n    return authInterceptorServiceFactory;\r\n    }]);\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1485039582,
          "answer_id": 41785451,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1485039582,
          "body_markdown": "Sharing my version of the great answer from @bulltorious, updated for newer angular builds (I used version 1.5.8 with this code), and also incorporated @JMaylin&#39;s idea of using a counter so as to be robust to multiple simultaneous requests, and the option to skip showing the animation for requests taking less than some minimum number of milliseconds:\r\n\r\n    var app = angular.module(&#39;myApp&#39;);\r\n    var BUSY_DELAY = 1000; // Will not show loading graphic until 1000ms have passed and we are still waiting for responses.\r\n    \r\n    app.config(function ($httpProvider) {\r\n      $httpProvider.interceptors.push(&#39;busyHttpInterceptor&#39;);\r\n    })\r\n      .factory(&#39;busyHttpInterceptor&#39;, [&#39;$q&#39;, &#39;$timeout&#39;, function ($q, $timeout) {\r\n        var counter = 0;\r\n        return {\r\n          request: function (config) {\r\n            counter += 1;\r\n            $timeout(\r\n              function () {\r\n                if (counter !== 0) {\r\n                  angular.element(&#39;#busy-overlay&#39;).show();\r\n                }\r\n              },\r\n              BUSY_DELAY);\r\n            return config;\r\n          },\r\n          response: function (response) {\r\n            counter -= 1;\r\n            if (counter === 0) {\r\n              angular.element(&#39;#busy-overlay&#39;).hide();\r\n            }\r\n            return response;\r\n          },\r\n          requestError: function (rejection) {\r\n            counter -= 1;\r\n            if (counter === 0) {\r\n              angular.element(&#39;#busy-overlay&#39;).hide();\r\n            }\r\n            return rejection;\r\n          },\r\n          responseError: function (rejection) {\r\n            counter -= 1;\r\n            if (counter === 0) {\r\n              angular.element(&#39;#busy-overlay&#39;).hide();\r\n            }\r\n            return rejection;\r\n          }\r\n        }\r\n      }]);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1491557116,
          "answer_id": 43274458,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1491557116,
          "body_markdown": "Here is my implementation, as simple as a ng-show and a request counter. \r\n\r\nIt use a new service for all request to $http:\r\n\r\n    myApp.service(&#39;RqstSrv&#39;, [ &#39;$http&#39;, &#39;$rootScope&#39;, function($http, $rootScope) {\r\n    \tvar rqstService = {};\r\n    \r\n    \trqstService.call = function(conf) {\r\n\r\n\t        $rootScope.currentCalls = !isNaN($rootScope.currentCalls) ?  $rootScope.currentCalls++ : 0;\r\n    \t\t\r\n    \t\t$http(conf).then(function APICallSucceed(response) {\r\n    \t\t\t// Handle success\r\n    \t\t}, function APICallError(response) {\r\n    \t\t\t// Handle error\r\n    \t\t}).then(function() {\r\n    \t\t\t$rootScope.currentCalls--;\r\n    \t\t});\r\n    \t}\r\n    } ]);\r\n\r\nAnd then you can use your loader base on the number of current calls:\r\n\r\n    &lt;img data-ng-show=&quot;currentCalls &gt; 0&quot; src=&quot;images/ajax-loader.gif&quot;/&gt;\r\n\r\n\t\t\t\r\n"
        }
      ],
      "title": "Showing Spinner GIF during $http request in angular",
      "view_count": 248340,
      "answer_count": 22,
      "code_snippet": [
        "<code>$http</code>",
        "<code>ajaxstartevent</code>",
        "<code>angular.module('SharedServices', [])\n    .config(function ($httpProvider) {\n        $httpProvider.responseInterceptors.push('myHttpInterceptor');\n        var spinnerFunction = function (data, headersGetter) {\n            // todo start the spinner here\n            //alert('start spinner');\n            $('#mydiv').show();\n            return data;\n        };\n        $httpProvider.defaults.transformRequest.push(spinnerFunction);\n    })\n// register the interceptor as a service, intercepts ALL angular ajax http calls\n    .factory('myHttpInterceptor', function ($q, $window) {\n        return function (promise) {\n            return promise.then(function (response) {\n                // do something on success\n                // todo hide the spinner\n                //alert('stop spinner');\n                $('#mydiv').hide();\n                return response;\n\n            }, function (response) {\n                // do something on error\n                // todo hide the spinner\n                //alert('stop spinner');\n                $('#mydiv').hide();\n                return $q.reject(response);\n            });\n        };\n    });\n\n//regular angular initialization continued below....\nangular.module('myApp', [ 'myApp.directives', 'SharedServices']).\n//.......\n</code>",
        "<code>$('#mydiv').show(); \n$('#mydiv').hide(); \n</code>",
        "<code>#mydiv {  \n    position:absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    z-index:1000;\n    background-color:grey;\n    opacity: .8;\n }\n\n.ajax-loader {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -32px; /* -1 * image width / 2 */\n    margin-top: -32px;  /* -1 * image height / 2 */\n    display: block;     \n}\n\n&lt;div id=\"mydiv\"&gt;\n    &lt;img src=\"lib/jQuery/images/ajax-loader.gif\" class=\"ajax-loader\"/&gt;\n&lt;/div&gt;\n</code>",
        "<code>angular.element('#mydiv').show()</code>",
        "<code>$('#mydiv').show()</code>",
        "<code>ng-class</code>",
        "<code>.controller('MainCtrl', function ( $scope, myService ) {\n  $scope.loading = true;\n  myService.get().then( function ( response ) {\n    $scope.items = response.data;\n  }, function ( response ) {\n    // TODO: handle the error somehow\n  }).finally(function() {\n    // called no matter success or failure\n    $scope.loading = false;\n  });\n});\n</code>",
        "<code>&lt;div class=\"spinner\" ng-show=\"loading\"&gt;&lt;/div&gt;\n&lt;div ng-repeat=\"item in items&gt;{{item.name}}&lt;/div&gt;\n</code>",
        "<code>loading</code>",
        "<code>$scope.loading = 0;</code>",
        "<code>$scope.loading++;</code>",
        "<code>$scope.loading--;</code>",
        "<code>$scope.loading = false</code>",
        "<code>.finally()</code>",
        "<code>mySvc.get().then(success, fail).finally(function() { $scope.loading = false; });</code>",
        "<code>directive</code>",
        "<code>ng-hide</code>",
        "<code>$http</code>",
        "<code>&lt;div class=\"loader\" data-loading&gt;&lt;/div&gt;</code>",
        "<code>angular.module('app')\n  .directive('loading', ['$http', function ($http) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        scope.isLoading = function () {\n          return $http.pendingRequests.length &gt; 0;\n        };\n        scope.$watch(scope.isLoading, function (value) {\n          if (value) {\n            element.removeClass('ng-hide');\n          } else {\n            element.addClass('ng-hide');\n          }\n        });\n      }\n    };\n}]);\n</code>",
        "<code>ng-hide</code>",
        "<code>interceptor</code>",
        "<code>var loadingDirective = function ($rootScope) {\n  return function ($scope, element, attrs) {\n      $scope.$on(\"loader_show\", function () {\n          return element.removeClass('ng-hide');\n      });\n      return $scope.$on(\"loader_hide\", function () {\n          return element.addClass('ng-hide');\n      });\n  };\n};\n</code>",
        "<code>spinner</code>",
        "<code>response.background === true;</code>",
        "<code>request</code>",
        "<code>response</code>",
        "<code>$rootScope.$broadcast(\"loader_show\");</code>",
        "<code>$rootScope.$broadcast(\"loader_hide\");</code>",
        "<code>$http</code>",
        "<code>var User = $resource('/user/:id', {id:'@id'});\nvar user = User.get({id: 1})\n</code>",
        "<code>&lt;div ng-hide=\"user.$resolved\"&gt;Loading ...&lt;/div&gt;\n</code>",
        "<code>&lt;div ng-http-loader template=\"example/loader.tpl.html\"&gt;&lt;/div&gt;\n</code>",
        "<code>angular-busy</code>",
        "<code>GET</code>",
        "<code>$scope</code>",
        "<code>$scope.req = $http.get('http://google.fr');\n</code>",
        "<code>&lt;div cg-busy=\"req\"&gt;&lt;/div&gt;\n</code>",
        "<code>bower</code>",
        "<code>bower install angular-busy --save\n</code>",
        "<code>yourModule\n    .factory('yourApi', ['$http', function ($http) {\n        var api = {}\n\n        //#region ------------ spinner -------------\n\n        // ajax loading counter\n        api._loading = 0;\n\n        /**\n         * Toggle check\n         */\n        api.isOn = function () { return api._loading &gt; 0; }\n\n        /**\n         * Based on a configuration setting to ignore the loading spinner, update the loading counter\n         * (for multiple ajax calls at one time)\n         */\n        api.spinner = function(delta, config) {\n            // if we haven't been told to ignore the spinner, change the loading counter\n            // so we can show/hide the spinner\n\n            if (NG.isUndefined(config.spin) || config.spin) api._loading += delta;\n\n            // don't let runaway triggers break stuff...\n            if (api._loading &lt; 0) api._loading = 0;\n\n            console.log('spinner:', api._loading, delta);\n        }\n        /**\n         * Track an ajax load begin, if not specifically disallowed by request configuration\n         */\n        api.loadBegin = function(config) {\n            api.spinner(1, config);\n        }\n        /**\n         * Track an ajax load end, if not specifically disallowed by request configuration\n         */\n        api.loadEnd = function (config) {\n            api.spinner(-1, config);\n        }\n\n        //#endregion ------------ spinner -------------\n\n        var baseConfig = {\n            method: 'post'\n            // don't need to declare `spin` here\n        }\n\n        /**\n         * $http wrapper to standardize all api calls\n         * @param args stuff sent to request\n         * @param config $http configuration, such as url, methods, etc\n         */\n        var callWrapper = function(args, config) {\n            var p = angular.extend(baseConfig, config); // override defaults\n\n            // fix for 'get' vs 'post' param attachment\n            if (!angular.isUndefined(args)) p[p.method == 'get' ? 'params' : 'data'] = args;\n\n            // trigger the spinner\n            api.loadBegin(p);\n\n            // make the call, and turn of the spinner on completion\n            // note: may want to use `then`/`catch` instead since `finally` has delayed completion if down-chain returns more promises\n            return $http(p)['finally'](function(response) {\n                api.loadEnd(response.config);\n                return response;\n            });\n        }\n\n        api.DoSomething = function(args) {\n            // yes spinner\n            return callWrapper(args, { cache: true });\n        }\n        api.DoSomethingInBackground = function(args) {\n            // no spinner\n            return callWrapper(args, { cache: true, spin: false });\n        }\n\n        // expose\n        return api;\n    });\n</code>",
        "<code>(function (NG) {\n    var loaderTemplate = '&lt;div class=\"ui active dimmer\" data-ng-show=\"hasSpinner()\"&gt;&lt;div class=\"ui large loader\"&gt;&lt;/div&gt;&lt;/div&gt;';\n\n    /**\n     * Show/Hide spinner with ajax\n     */\n    function spinnerDirective($compile, api) {\n        return {\n            restrict: 'EA',\n            link: function (scope, element) {\n                // listen for api trigger\n                scope.hasSpinner = api.isOn;\n\n                // attach spinner html\n                var spin = NG.element(loaderTemplate);\n                $compile(spin)(scope); // bind+parse\n                element.append(spin);\n            }\n        }\n    }\n\n    NG.module('yourModule')\n        .directive('yourApiSpinner', ['$compile', 'yourApi', spinnerDirective]);\n})(angular);\n</code>",
        "<code>&lt;div ng-controller=\"myCtrl\" your-api-spinner&gt; ... &lt;/div&gt;\n</code>",
        "<code>//ajax start\r\n    $scope.finderloader=true;\r\n    \r\n          $http({\r\n    method :\"POST\",\r\n    url : \"your URL\",\r\n  data: { //your data\r\n     \r\n     }\r\n  }).then(function mySucces(response) {\r\n    $scope.finderloader=false;\r\n      $scope.search=false;          \r\n    $scope.myData =response.data.records;\r\n  });\r\n     \r\n    //ajax end \r\n    </code>",
        "<code>&lt;div ng-show=\"finderloader\" class=spinner&gt;&lt;/div&gt;\r\n//add this in your HTML at right place</code>",
        "<code>Based on Josh David Miller response:\n\n  &lt;body&gt;\n  &lt;header&gt;\n  &lt;/header&gt;\n&lt;div class=\"spinner\" ng-show=\"loading\"&gt;\n  &lt;div class=\"loader\" &gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div ng-view=\"\"&gt;&lt;/div&gt;\n\n&lt;footer&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n</code>",
        "<code>    .loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  border-bottom : 16px solid black;\n  width: 80px;\n  height: 80px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  position: absolute;\n  top: 45%;\n  left: 45%;\n}\n\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n\n.spinner{\n  width: 100%;\nheight: 100%;\nz-index: 10000;\nposition: absolute;\ntop: 0;\nleft: 0;\nmargin: 0 auto;\ntext-align: center;\nvertical-align: middle;\nbackground: white;\nopacity: 0.6;\n}\n</code>",
        "<code>  &lt;div id=\"loader\" class=\"ng-hide\" ng-show=\"req.$$state.pending\"&gt;\n    &lt;img class=\"ajax-loader\" \n         width=\"200\" \n         height=\"200\" \n         src=\"/images/spinner.gif\" /&gt;\n  &lt;/div&gt;\n</code>",
        "<code>  $scope.req = $http.get(\"/admin/view/\"+id).success(function(data) {          \n      $scope.data = data;\n  });\n</code>",
        "<code>'use strict';\nappServices.factory('authInterceptorService', ['$q', '$location', 'localStorage','$injector','$timeout', function ($q, $location, localStorage, $injector,$timeout) {\n\nvar authInterceptorServiceFactory = {};\nvar requestInitiated;\n\n//start loading bar\nvar _startLoading = function () {\n   console.log(\"error start loading\");\n   $injector.get(\"$ionicLoading\").show();\n\n}\n\n//stop loading bar\nvar _stopLoading = function () {\n    $injector.get(\"$ionicLoading\").hide();\n}\n\n//request initiated\nvar _request = function (config) {\n     requestInitiated = true;\n    _startLoading();\n    config.headers = config.headers || {};\n    var authDataInitial = localStorage.get('authorizationData');\n    if (authDataInitial &amp;&amp; authDataInitial.length &gt; 2) {\n        var authData = JSON.parse(authDataInitial);\n        if (authData) {\n            config.headers.Authorization = 'Bearer ' + authData.token;\n        }\n    }\n    return config;\n}\n\n//request responce error\nvar _responseError = function (rejection) {\n   _stopLoading();\n    if (rejection.status === 401) {\n        $location.path('/login');\n    }\n    return $q.reject(rejection);\n}\n\n//request error\nvar _requestError = function (err) {\n   _stopLoading();\n   console.log('Request Error logging via interceptor');\n   return err;\n}\n\n//request responce\nvar _response = function(response) {\n    requestInitiated = false;\n\n   // Show delay of 300ms so the popup will not appear for multiple http request\n   $timeout(function() {\n\n        if(requestInitiated) return;\n        _stopLoading();\n        console.log('Response received with interceptor');\n\n    },300);\n\nreturn response;\n}\n\n\n\nauthInterceptorServiceFactory.request = _request;\nauthInterceptorServiceFactory.responseError = _responseError;\nauthInterceptorServiceFactory.requestError = _requestError;\nauthInterceptorServiceFactory.response = _response;\n\nreturn authInterceptorServiceFactory;\n}]);\n</code>",
        "<code>var app = angular.module('myApp');\nvar BUSY_DELAY = 1000; // Will not show loading graphic until 1000ms have passed and we are still waiting for responses.\n\napp.config(function ($httpProvider) {\n  $httpProvider.interceptors.push('busyHttpInterceptor');\n})\n  .factory('busyHttpInterceptor', ['$q', '$timeout', function ($q, $timeout) {\n    var counter = 0;\n    return {\n      request: function (config) {\n        counter += 1;\n        $timeout(\n          function () {\n            if (counter !== 0) {\n              angular.element('#busy-overlay').show();\n            }\n          },\n          BUSY_DELAY);\n        return config;\n      },\n      response: function (response) {\n        counter -= 1;\n        if (counter === 0) {\n          angular.element('#busy-overlay').hide();\n        }\n        return response;\n      },\n      requestError: function (rejection) {\n        counter -= 1;\n        if (counter === 0) {\n          angular.element('#busy-overlay').hide();\n        }\n        return rejection;\n      },\n      responseError: function (rejection) {\n        counter -= 1;\n        if (counter === 0) {\n          angular.element('#busy-overlay').hide();\n        }\n        return rejection;\n      }\n    }\n  }]);\n</code>",
        "<code>.factory('authHttpResponseInterceptor', ['$q', function ($q) {\n        return {\n            request: function(config) {\n                angular.element('#spinner').show();\n                return config;\n            },\n            response : function(response) {\n                angular.element('#spinner').fadeOut(3000);\n                return response || $q.when(response);\n            },\n            responseError: function(reason) {\n                angular.element('#spinner').fadeOut(3000);\n                return $q.reject(reason);\n            }\n        };\n    }]);\n\n\n\n .config(['$routeProvider', '$locationProvider', '$translateProvider', '$httpProvider',\n            function ($routeProvider, $locationProvider, $translateProvider, $httpProvider) {\n                $httpProvider.interceptors.push('authHttpResponseInterceptor');\n    }\n]);\n\nin your Template\n&lt;div id=\"spinner\"&gt;&lt;/div&gt;\n\n\ncss   \n\n#spinner,\n#spinner:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n  background-color: #A9A9A9;\n  z-index: 10000;\n  position: absolute;\n  left: 50%;\n  bottom: 100px;\n}\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n</code>",
        "<code>$scope.$watch($http.pendingRequests, toggleLoader);\n\nfunction toggleLoader(status){\n  if(status.length){\n    element.addClass('active');\n  } else {\n    element.removeClass('active');\n  }\n}\n</code>",
        "<code>$rootScope.$on('$locationChangeStart', function() {\n  $scope.loading++;\n});\n\n$rootScope.$on('$locationChangeSuccess', function() {\n  $timeout(function() {\n    $scope.loading--;\n  }, 300);\n});\n</code>",
        "<code>ng-show=\"loading\"</code>",
        "<code>$scope.loading++</code>",
        "<code>$scope.loading--</code>",
        "<code>myApp.directive('loader', function () {\n    return {\n        restrict: 'A',\n        scope: {cond: '=loader'},\n        template: '&lt;span ng-if=\"isLoading()\" class=\"soft\"&gt;&lt;span class=\"fa fa-refresh fa-spin\"&gt;&lt;/span&gt;&lt;/span&gt;',\n        link: function (scope) {\n            scope.isLoading = function() {\n                var ret = scope.cond === true || (\n                        scope.cond &amp;&amp;\n                        scope.cond.$$state &amp;&amp;\n                        angular.isDefined(scope.cond.$$state.status) &amp;&amp;\n                        scope.cond.$$state.status === 0\n                    );\n                return ret;\n            }\n        }\n    };\n}); \n</code>",
        "<code>    // Return TRUE if some request is LOADING, else return FALSE\n    $scope.isLoading = function() {\n        return $http.pendingRequests.length &gt; 0;\n    };\n</code>",
        "<code>&lt;div class=\"buttons loader\"&gt;\n    &lt;span class=\"icon\" loader=\"isLoading()\"&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code>",
        "<code>app.factory('httpRequestInterceptor', function(LoadingService, requestCount) {\r\n    return {\r\n        request: function(config) {\r\n            if (!config.headers.disableLoading) {\r\n                requestCount.increase();\r\n                LoadingService.show();\r\n            }\r\n            return config;\r\n        }\r\n    };\r\n}).factory('httpResponseInterceptor', function(LoadingService, $timeout, error, $q, requestCount) {\r\n    function waitAndHide() {\r\n        $timeout(function() {\r\n            if (requestCount.get() === 0){\r\n                LoadingService.hide();\r\n            }\r\n            else{\r\n                waitAndHide();\r\n            }\r\n        }, 300);\r\n    }\r\n\r\n    return {\r\n        response: function(config) {\r\n            requestCount.descrease();\r\n            if (requestCount.get() === 0) {\r\n                waitAndHide();\r\n            }\r\n            return config;\r\n        },\r\n        responseError: function(config) {\r\n            requestCount.descrease();\r\n            if (requestCount.get() === 0) {\r\n                waitAndHide();\r\n            }\r\n            var deferred = $q.defer();\r\n            error.show(config.data, function() {\r\n                deferred.reject(config);\r\n            });\r\n            return deferred.promise;\r\n        }\r\n    };\r\n}).factory('requestCount', function() {\r\n    var count = 0;\r\n    return {\r\n        increase: function() {\r\n            count++;\r\n        },\r\n        descrease: function() {\r\n            if (count === 0) return;\r\n            count--;\r\n        },\r\n        get: function() {\r\n            return count;\r\n        }\r\n    };\r\n})</code>",
        "<code>&lt;div ng-controller=\"FetchController\"&gt;\n      &lt;div id=\"spinner\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code>",
        "<code>#spinner {display: none}\nbody.spinnerOn #spinner { /* body tag not necessary actually */\n   display: block;\n   height: 100%;\n   width: 100%;\n   background: rgba(207, 13, 48, 0.72) url(img/loader.gif) center center no-repeat;\n   position: fixed;\n   top: 0;\n   left: 0;\n   z-index: 9999;\n}\nbody.spinnerOn main.content { position: static;} /* and whatever content needs to be moved below your fixed loader div */\n</code>",
        "<code>app.controller('FetchController', ['$scope', '$http', '$templateCache', '$location', '$q',\nfunction($scope, $http, $templateCache, $location, $q) {\n\nangular.element('body').addClass('spinnerOn'); // add Class to body to show spinner\n\n$http.post( // or .get(\n    // your data here\n})\n.then(function (response) {\n    console.info('success');     \n    angular.element('body').removeClass('spinnerOn'); // hide spinner\n\n    return response.data;               \n}, function (response) {                   \n    console.info('error'); \n    angular.element('body').removeClass('spinnerOn'); // hide spinner\n});\n\n})\n</code>",
        "<code>$httpProvider.interceptors.push(function($document) {\n    return {\n     'request': function(config) {\n         // here ajax start\n         // here we can for example add some class or show somethin\n         $document.find(\"body\").css(\"cursor\",\"wait\");\n\n         return config;\n      },\n\n      'response': function(response) {\n         // here ajax ends\n         //here we should remove classes added on request start\n\n         $document.find(\"body\").css(\"cursor\",\"auto\");\n\n         return response;\n      }\n    };\n  });\n</code>",
        "<code>app.config</code>",
        "<code>myApp.service('RqstSrv', [ '$http', '$rootScope', function($http, $rootScope) {\n    var rqstService = {};\n\n    rqstService.call = function(conf) {\n\n        $rootScope.currentCalls = !isNaN($rootScope.currentCalls) ?  $rootScope.currentCalls++ : 0;\n\n        $http(conf).then(function APICallSucceed(response) {\n            // Handle success\n        }, function APICallError(response) {\n            // Handle error\n        }).then(function() {\n            $rootScope.currentCalls--;\n        });\n    }\n} ]);\n</code>",
        "<code>&lt;img data-ng-show=\"currentCalls &gt; 0\" src=\"images/ajax-loader.gif\"/&gt;\n</code>",
        "<code>.loading { display: none; }\n</code>",
        "<code>&lt;div style=\"text-align:center\" ng-class=\"{ 'loading': !loading }\"&gt;\n    &lt;br /&gt;\n    &lt;h1&gt;&lt;i class=\"fa fa-refresh fa-spin\"&gt;&lt;/i&gt; Loading data&lt;/h1&gt;\n&lt;/div&gt;\n</code>",
        "<code>&lt;something ng-class=\"{ 'loading': loading }\" class=\"loading\"&gt;&lt;/something&gt;\n</code>",
        "<code>(function (angular) {\n    function MainController($scope) {\n        $scope.loading = true\n</code>",
        "<code> $scope.loading = false\n $scope.$apply();\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "file",
        "import",
        "include"
      ],
      "creation_date": 1244116790,
      "body_markdown": "Is there something in JavaScript similar to `@import` in CSS that allows you to include a JavaScript file inside another JavaScript file?\r\n",
      "last_edit_date": 1508255614,
      "up_vote_count": 3877,
      "link": "https://stackoverflow.com/questions/950087/how-do-i-include-a-javascript-file-in-another-javascript-file",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1244116953,
          "answer_id": 950098,
          "path": "stack.bower.answer",
          "score": 65,
          "up_vote_count": 66,
          "is_accepted": false,
          "last_activity_date": 1380372270,
          "last_edit_date": 1380372270,
          "body_markdown": "It is possible to dynamically generate a JavaScript tag and append it to HTML document from inside other JavaScript code. This will load targeted JavaScript file.\r\n\r\n    function includeJs(jsFilePath) {\r\n        var js = document.createElement(&quot;script&quot;);\r\n        \r\n        js.type = &quot;text/javascript&quot;;\r\n        js.src = jsFilePath;\r\n        \r\n        document.body.appendChild(js);\r\n    }\r\n    \r\n    includeJs(&quot;/path/to/some/file.js&quot;);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1244117096,
          "answer_id": 950109,
          "path": "stack.bower.answer",
          "score": 46,
          "up_vote_count": 49,
          "is_accepted": false,
          "last_activity_date": 1416070882,
          "last_edit_date": 1416070882,
          "body_markdown": "Maybe you can use this function that I found on this page *[How do I include a JavaScript file in a JavaScript file?][1]*:\r\n\r\n    function include(filename)\r\n    {\r\n    \tvar head = document.getElementsByTagName(&#39;head&#39;)[0];\r\n    \t\r\n    \tvar script = document.createElement(&#39;script&#39;);\r\n    \tscript.src = filename;\r\n    \tscript.type = &#39;text/javascript&#39;;\r\n    \t\r\n    \thead.appendChild(script)\r\n    }\r\n\r\n  [1]: http://forums.digitalpoint.com/showthread.php?t=146094\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1244117608,
          "answer_id": 950146,
          "path": "stack.bower.answer",
          "score": 3337,
          "up_vote_count": 3340,
          "is_accepted": true,
          "last_activity_date": 1513368479,
          "last_edit_date": 1513368479,
          "body_markdown": "The old versions of JavaScript had no import, include, or require, so many different approaches to this problem have been developed.\r\n\r\nBut recent versions of JavaScript have standards like [ES6 modules](http://exploringjs.com/es6/ch_modules.html) to import modules, although this is not supported yet by most browsers.  Many people using modules with browser applications use [build](https://webpack.github.io/) and/or [transpilation](https://babeljs.io/) tools to make it practical to use new syntax with features like modules.\r\n\r\n###ES6 Modules\r\n\r\nNote that currently, browser support for ES6 Modules is not particularly great, but it is on its way. According to [this StackOverflow answer](https://stackoverflow.com/a/44086319), they are supported (but behind flags) in Chrome 60, Firefox 54 and MS Edge 15, with only Safari 10.1 providing support without flags.\r\n\r\nThus, you will currently still need to use build and/or transpilation tools to valid JavaScript that will run in without any requirement for the user to use those browser versions or enable any flags.\r\n\r\nOnce ES6 Modules are commonplace, here is how you would go about using them:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    // module.js\r\n    export function hello() {\r\n      return &quot;Hello&quot;;\r\n    }\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    // main.js\r\n    import {hello} from &#39;module&#39;; // or &#39;./module&#39;\r\n    let val = hello(); // val is &quot;Hello&quot;;\r\n\r\n### Node.js require\r\n\r\nNode.js is currently using a [module.exports/require](https://nodejs.org/api/modules.html) system.  You can use `babel` to transpile if you want the `import` syntax.    \r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    // mymodule.js\r\n    module.exports = {\r\n       hello: function() {\r\n          return &quot;Hello&quot;;\r\n       }\r\n    }\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    // server.js\r\n    const myModule = require(&#39;./mymodule&#39;);\r\n    let val = myModule.hello(); // val is &quot;Hello&quot;   \r\n\r\nThere are other ways for JavaScript to include external JavaScript contents in browsers that do not require preprocessing.\r\n\r\n### AJAX Loading\r\n\r\nYou could load an additional script with an AJAX call and then use `eval` to run it. This is the most straightforward way, but it is limited to your domain because of the JavaScript sandbox security model. Using `eval` also opens the door to bugs, hacks and security issues.\r\n\r\n### jQuery Loading\r\n\r\nThe [jQuery][1] library provides loading functionality [in one line][2]:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    $.getScript(&quot;my_lovely_script.js&quot;, function() {\r\n       alert(&quot;Script loaded but not necessarily executed.&quot;);\r\n    });\r\n\r\n### Dynamic Script Loading\r\n\r\nYou could add a script tag with the script URL into the HTML. To avoid the overhead of jQuery, this is an ideal solution.\r\n\r\nThe script can even reside on a different server. Furthermore, the browser evaluates the code. The `&lt;script&gt;` tag can be injected into either the web page `&lt;head&gt;`, or inserted just before the closing `&lt;/body&gt;` tag.\r\n\r\nHere is an example of how this could work:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    function dynamicallyLoadScript(url) {\r\n        var script = document.createElement(&quot;script&quot;); // Make a script DOM node\r\n        script.src = url; // Set it&#39;s src to the provided URL\r\n       \r\n        document.head.appendChild(script); // Add it to the end of the head section of the page (could change &#39;head&#39; to &#39;body&#39; to add it to the end of the body section instead)\r\n    }\r\n\r\nThis function will add a new `&lt;script&gt;` tag to end of the head section of the page, where the `src` attribute is set to the URL which is given to the function as the first parameter.\r\n\r\nBoth of these solutions are discussed and illustrated in [JavaScript Madness: Dynamic Script Loading][3].\r\n\r\n## Detecting when the script has been executed\r\n\r\nNow, there is a big issue you must know about. Doing that implies that *you remotely load the code*. Modern web browsers will load the file and keep executing your current script because they load everything asynchronously to improve performance. (This applies to both the jQuery method and the manual dynamic script loading method.)\r\n\r\nIt means that if you use these tricks directly, *you won&#39;t be able to use your newly loaded code the next line after you asked it to be loaded*, because it will be still loading.\r\n\r\nFor example: `my_lovely_script.js` contains `MySuperObject`:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    var js = document.createElement(&quot;script&quot;);\r\n\r\n    js.type = &quot;text/javascript&quot;;\r\n    js.src = jsFilePath;\r\n\r\n    document.body.appendChild(js);\r\n\r\n    var s = new MySuperObject();\r\n\r\n    Error : MySuperObject is undefined\r\n\r\nThen you reload the page hitting &lt;kbd&gt;F5&lt;/kbd&gt;. And it works! Confusing...\r\n\r\n**So what to do about it ?**\r\n\r\nWell, you can use the hack the author suggests in the link I gave you. In summary, for people in a hurry, he uses an event to run a callback function when the script is loaded. So you can put all the code using the remote library in the callback function. For example:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    function loadScript(url, callback)\r\n    {\r\n        // Adding the script tag to the head as suggested before\r\n        var head = document.getElementsByTagName(&#39;head&#39;)[0];\r\n        var script = document.createElement(&#39;script&#39;);\r\n        script.type = &#39;text/javascript&#39;;\r\n        script.src = url;\r\n\r\n        // Then bind the event to the callback function.\r\n        // There are several events for cross browser compatibility.\r\n        script.onreadystatechange = callback;\r\n        script.onload = callback;\r\n\r\n        // Fire the loading\r\n        head.appendChild(script);\r\n    }\r\n\r\nThen you write the code you want to use AFTER the script is loaded in a [lambda function][4]:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    var myPrettyCode = function() {\r\n       // Here, do whatever you want\r\n    };\r\n\r\nThen you run all that:\r\n\r\n&lt;!-- language: lang-javascript --&gt;\r\n\r\n    loadScript(&quot;my_lovely_script.js&quot;, myPrettyCode);\r\n\r\nNote that the script may execute after the DOM has loaded, or before, depending on the browser and whether you included the line `script.async = false;`. There&#39;s a [great article on Javascript loading in general](http://www.html5rocks.com/en/tutorials/speed/script-loading/) which discusses this.\r\n\r\n### Source Code Merge/Preprocessing\r\n\r\nAs mentioned at the top of this answer, many developers now use build/transpilation tool(s) like WebPack, Babel, or Gulp in their projects, allowing them to use new syntax and support modules better, combine files, minify, etc.\r\n\r\n  [1]: http://jquery.com/\r\n  [2]: http://api.jquery.com/jQuery.getScript/\r\n  [3]: http://unixpapa.com/js/dyna.html\r\n  [4]: http://en.wikipedia.org/wiki/Anonymous_function"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1264224045,
          "answer_id": 2122234,
          "path": "stack.bower.answer",
          "score": 40,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1498424680,
          "last_edit_date": 1498424680,
          "body_markdown": "I just wrote this JavaScript code (using [Prototype][1] for [DOM][2] manipulation):\r\n\r\n    var require = (function() {\r\n        var _required = {};\r\n        return (function(url, callback) {\r\n            if (typeof url == &#39;object&#39;) {\r\n                // We&#39;ve (hopefully) got an array: time to chain!\r\n                if (url.length &gt; 1) {\r\n                    // Load the nth file as soon as everything up to the\r\n                    // n-1th one is done.\r\n                    require(url.slice(0, url.length - 1), function() {\r\n                        require(url[url.length - 1], callback);\r\n                    });\r\n                } else if (url.length == 1) {\r\n                    require(url[0], callback);\r\n                }\r\n                return;\r\n            }\r\n            if (typeof _required[url] == &#39;undefined&#39;) {\r\n                // Haven&#39;t loaded this URL yet; gogogo!\r\n                _required[url] = [];\r\n\r\n                var script = new Element(&#39;script&#39;, {\r\n                    src: url,\r\n                    type: &#39;text/javascript&#39;\r\n                });\r\n                script.observe(&#39;load&#39;, function() {\r\n                    console.log(&quot;script &quot; + url + &quot; loaded.&quot;);\r\n                    _required[url].each(function(cb) {\r\n                        cb.call(); // TODO: does this execute in the right context?\r\n                    });\r\n                    _required[url] = true;\r\n                });\r\n\r\n                $$(&#39;head&#39;)[0].insert(script);\r\n            } else if (typeof _required[url] == &#39;boolean&#39;) {\r\n                // We already loaded the thing, so go ahead.\r\n                if (callback) {\r\n                    callback.call();\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (callback) {\r\n                _required[url].push(callback);\r\n            }\r\n        });\r\n    })();\r\n\r\nUsage:\r\n\r\n    &lt;script src=&quot;prototype.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;require.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script&gt;\r\n        require([&#39;foo.js&#39;,&#39;bar.js&#39;], function () {\r\n            /* Use foo.js and bar.js here */\r\n        });\r\n    &lt;/script&gt;\r\n\r\nGist: http://gist.github.com/284442.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework\r\n  [2]: http://en.wikipedia.org/wiki/Document_Object_Model\r\n  "
        },
        {
          "tags": [],
          "down_vote_count": 9,
          "creation_date": 1293483839,
          "answer_id": 4541830,
          "path": "stack.bower.answer",
          "score": 22,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1380372611,
          "last_edit_date": 1380372611,
          "body_markdown": "You can also assemble your scripts using [PHP][1]:\r\n\r\nFile `main.js.php`:\r\n\r\n    &lt;?php\r\n        header(&#39;Content-type:text/javascript; charset=utf-8&#39;);\r\n        include_once(&quot;foo.js.php&quot;);\r\n        include_once(&quot;bar.js.php&quot;);\r\n    ?&gt;\r\n\r\n    // Main JavaScript code goes here\r\n\r\n  [1]: http://en.wikipedia.org/wiki/PHP\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1304004306,
          "answer_id": 5821038,
          "path": "stack.bower.answer",
          "score": 152,
          "up_vote_count": 152,
          "is_accepted": false,
          "last_activity_date": 1433709235,
          "last_edit_date": 1433709235,
          "body_markdown": "There actually _is_ a way to load a JavaScript file _not_ asynchronously, so you could use the functions included in your newly loaded file right after loading it, and I think it works in all browsers.\r\n\r\nYou need to use `jQuery.append()` on the `&lt;head&gt;` element of your page, that is:\r\n\r\n    $(&quot;head&quot;).append(&#39;&lt;script type=&quot;text/javascript&quot; src=&quot;&#39; + script + &#39;&quot;&gt;&lt;/script&gt;&#39;);\r\n\r\nHowever, this method also has a problem: if an error happens in the imported JavaScript file, [Firebug][1] (and also Firefox Error Console and [Chrome Developer Tools][2] as well) will report its place incorrectly, which is a big problem if you use Firebug to track JavaScript errors down a lot (I do). Firebug simply doesn&#39;t know about the newly loaded file for some reason, so if an error occurs in that file, it reports that it occurred in your main [HTML][3] file, and you will have trouble finding out the real reason for the error.\r\n\r\nBut if that is not a problem for you, then this method should work.\r\n\r\nI have actually written a jQuery plugin called *$.import_js()* which uses this method:\r\n\r\n    (function($)\r\n    {\r\n        /*\r\n         * $.import_js() helper (for JavaScript importing within JavaScript code).\r\n         */\r\n        var import_js_imported = [];\r\n        \r\n        $.extend(true,\r\n        {\r\n            import_js : function(script)\r\n            {\r\n                var found = false;\r\n                for (var i = 0; i &lt; import_js_imported.length; i++)\r\n                    if (import_js_imported[i] == script) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                \r\n                if (found == false) {\r\n                    $(&quot;head&quot;).append(&#39;&lt;script type=&quot;text/javascript&quot; src=&quot;&#39; + script + &#39;&quot;&gt;&lt;/script&gt;&#39;);\r\n                    import_js_imported.push(script);\r\n                }\r\n            }\r\n        });\r\n        \r\n    })(jQuery);\r\n\r\nSo all you would need to do to import JavaScript is:\r\n\r\n&gt; $.import_js(&#39;/path_to_project/scripts/somefunctions.js&#39;);\r\n\r\nI also made a simple test for this at [http://www.kipras.com/dev/import_js_test/][4].\r\n\r\nIt includes a `main.js` file in the main HTML and then the script in `main.js` uses `$.import_js()` to import an additional file called `included.js`, which defines this function:\r\n\r\n    function hello()\r\n    {\r\n        alert(&quot;Hello world!&quot;);\r\n    }\r\n\r\nAnd right after including `included.js`, the hello() function is called, and you get the alert.\r\n\r\n(This answer is in response to e-satis&#39; comment).\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Firebug_%28software%29\r\n  [2]: https://developers.google.com/chrome-developer-tools/\r\n  [3]: http://en.wikipedia.org/wiki/HTML\r\n  [4]: http://www.kipras.com/dev/import_js_test/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1315506146,
          "answer_id": 7352694,
          "path": "stack.bower.answer",
          "score": 127,
          "up_vote_count": 128,
          "is_accepted": false,
          "last_activity_date": 1380372950,
          "last_edit_date": 1380372950,
          "body_markdown": "Another way, that in my opinion is much cleaner, is to make a synchronous Ajax request instead of using a `&lt;script&gt;` tag. Which is also how [Node.js][1] handles includes.\r\n\r\nHere&#39;s an example using jQuery:\r\n\r\n    function require(script) {\r\n        $.ajax({\r\n            url: script,\r\n            dataType: &quot;script&quot;,\r\n            async: false,           // &lt;-- This is the key\r\n            success: function () {\r\n                // all good...\r\n            },\r\n            error: function () {\r\n                throw new Error(&quot;Could not load script &quot; + script);\r\n            }\r\n        });\r\n    }\r\n\r\nYou can then use it in your code as you&#39;d usually use an include:\r\n\r\n    require(&quot;/scripts/subscript.js&quot;);\r\n\r\nAnd be able to call a function from the required script in the next line:\r\n\r\n    subscript.doSomethingCool(); \r\n\r\n  [1]: http://en.wikipedia.org/wiki/Node.js\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1322717805,
          "answer_id": 8337001,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1330870836,
          "last_edit_date": 1330870836,
          "body_markdown": "I came to this question because I was looking for a simple way to maintain a collection of useful JavaScript plugins. After seeing some of the solutions here, I came up with this:\r\n\r\n1) Set up a file called &quot;plugins.js&quot; (or extentions.js or what have you). Keep your plugin files together with that one master file.\r\n\r\n2) plugins.js will have an array called &quot;pluginNames[]&quot; that we will iterate over each(),\r\nthen append a &lt;script&gt; tag to the head for each plugin\r\n\r\n    //set array to be updated when we add or remove plugin files\r\n     var pluginNames = [&quot;lettering&quot;, &quot;fittext&quot;, &quot;butterjam&quot;, etc.];\r\n    //one script tag for each plugin\r\n     $.each(pluginNames, function(){\r\n       $(&#39;head&#39;).append(&#39;&lt;script src=&quot;js/plugins/&#39; + this + &#39;.js&quot;&gt;&lt;/script&gt;&#39;);\r\n     });\r\n\r\n3) manually call just the one file in your head:  \r\n`&lt;script src=&quot;js/plugins/plugins.js&quot;&gt;&lt;/script&gt;`\r\n\r\nUPDATE: I found that even though all of the plugins were getting dropped into the head tag the way they ought to, they weren&#39;t always being run by the browser when you click into the page or refresh.\r\n\r\nI found it&#39;s more reliable to just write the script tags in a PHP include. You only have to write it once and that&#39;s just as much work as calling the plugin using JavaScript."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1327008459,
          "answer_id": 8933531,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1413668738,
          "last_edit_date": 1413668738,
          "body_markdown": "I have created a function that will allow you to use similar verbiage to C#/Java to include a JavaScript file. I&#39;ve tested it a little bit even from inside of *another* JavaScript file and it seems to work. It does require jQuery though for a bit of &quot;magic&quot; at the end.\r\n\r\nI put this code in a file at the root of my script directory (I named it `global.js`, but you can use whatever you want. Unless I&#39;m mistaken this and jQuery should be the only required scripts on a given page. Keep in mind this is largely untested beyond some basic usage, so there may or may not be any issues with the way I&#39;ve done it; use at your own risk yadda yadda I am not responsible if you screw anything up yadda yadda:\r\n\r\n    /**\r\n    * @fileoverview This file stores global functions that are required by other libraries.\r\n    */\r\n\r\n    if (typeof(jQuery) === &#39;undefined&#39;) {\r\n        throw &#39;jQuery is required.&#39;;\r\n    }\r\n\r\n    /** Defines the base script directory that all .js files are assumed to be organized under. */\r\n    var BASE_DIR = &#39;js/&#39;;\r\n\r\n    /**\r\n    * Loads the specified file, outputting it to the &lt;head&gt; HTMLElement.\r\n    *\r\n    * This method mimics the use of using in C# or import in Java, allowing\r\n    * JavaScript files to &quot;load&quot; other JavaScript files that they depend on\r\n    * using a familiar syntax.\r\n    *\r\n    * This method assumes all scripts are under a directory at the root and will\r\n    * append the .js file extension automatically.\r\n    *\r\n    * @param {string} file A file path to load using C#/Java &quot;dot&quot; syntax.\r\n    *\r\n    * Example Usage:\r\n    * imports(&#39;core.utils.extensions&#39;);\r\n    * This will output: &lt;script type=&quot;text/javascript&quot; src=&quot;/js/core/utils/extensions.js&quot;&gt;&lt;/script&gt;\r\n    */\r\n    function imports(file) {\r\n        var fileName = file.substr(file.lastIndexOf(&#39;.&#39;) + 1, file.length);\r\n\r\n        // Convert PascalCase name to underscore_separated_name\r\n        var regex = new RegExp(/([A-Z])/g);\r\n        if (regex.test(fileName)) {\r\n            var separated = fileName.replace(regex, &quot;,$1&quot;).replace(&#39;,&#39;, &#39;&#39;);\r\n            fileName = separated.replace(/[,]/g, &#39;_&#39;);\r\n        }\r\n\r\n        // Remove the original JavaScript file name to replace with underscore version\r\n        file = file.substr(0, file.lastIndexOf(&#39;.&#39;));\r\n\r\n        // Convert the dot syntax to directory syntax to actually load the file\r\n        if (file.indexOf(&#39;.&#39;) &gt; 0) {\r\n            file = file.replace(/[.]/g, &#39;/&#39;);\r\n        }\r\n\r\n        var src = BASE_DIR + file + &#39;/&#39; + fileName.toLowerCase() + &#39;.js&#39;;\r\n        var script = document.createElement(&#39;script&#39;);\r\n        script.type = &#39;text/javascript&#39;;\r\n        script.src = src;\r\n\r\n        $(&#39;head&#39;).find(&#39;script:last&#39;).append(script);\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1330834752,
          "answer_id": 9552278,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1330834752,
          "body_markdown": "In a past project I had quite a bit of success using [ajile][1] to do imports of reusable JavaScript files. I always wished there was a feature for this built into JavaScript itself.\r\n\r\n\r\n  [1]: http://ajile.net/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1337853110,
          "answer_id": 10735089,
          "path": "stack.bower.answer",
          "score": 30,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1465907226,
          "last_edit_date": 1465907226,
          "body_markdown": "This is perhaps the biggest weakness of JavaScript in my opinion. It&#39;s caused me no end of problems over the years with dependency tracing. Anyhow, it does appear that the only &lt;em&gt;practical&lt;/em&gt; solution is to use script includes in the HTML file and thus horribly making your JavaScript code dependent upon the user including the source you need and making reuse unfriendly.\r\n\r\nSorry if this comes across as a lecture ;) It&#39;s a (bad) habit of mine, but I want to make this point.\r\n\r\nThe problem comes back to the same as everything else with the web, the history of JavaScript. It really wasn&#39;t designed to be used in the widespread manner it&#39;s used in today. [Netscape][1] made a language that would allow you to control a few things, but they didn&#39;t envisage its widespread use for so many things as it is put to now and for one reason or another it&#39;s expanded from there, without addressing some of the fundamental weaknesses of the original strategy.\r\n\r\nIt&#39;s not alone of course. HTML wasn&#39;t designed for the modern webpage; it was designed to be a way of expressing the logic of a document, so that readers (browsers in the modern world) could display this in an applicable form that was within the capabilities of the system, and it took years for a solution (other than the hacks of MS and Netscape) to come along. [CSS][2] solves this problem, but it was a long time coming and even longer to get people to use it rather than the established BAD techniques. It happened though, praise be.\r\n\r\nHopefully JavaScript (especially now it&#39;s part of the standard) will develop to take on board the concept of proper modularity (as well as some other things) as every other (extant) programming language in the world does and this stupidity will go away. Until then you just have to not like it and lump it, I&#39;m afraid.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Netscape\r\n  [2]: http://en.wikipedia.org/wiki/Cascading_Style_Sheets\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1339102087,
          "answer_id": 10939637,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1413741771,
          "last_edit_date": 1413741771,
          "body_markdown": "Or rather than including at run time, use a script to concatenate prior to upload.\r\n\r\nI use [Sprockets][1] (I don&#39;t know if there are others). You build your JavaScript code in separate files and include comments that are processed by the Sprockets engine as includes. For development you can include files sequentially, then for production to merge them...\r\n\r\nSee also:\r\n\r\n * *[Introducing Sprockets: JavaScript dependency management and concatenation][2]*\r\n\r\n  [1]: https://github.com/sstephenson/sprockets\r\n  [2]: http://37signals.com/svn/posts/1587-introducing-sprockets-javascript-dependency-management-and-concatenation\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1339102552,
          "answer_id": 10939737,
          "path": "stack.bower.answer",
          "score": 493,
          "up_vote_count": 496,
          "is_accepted": false,
          "last_activity_date": 1380373886,
          "last_edit_date": 1380373886,
          "body_markdown": "If anyone is looking for something more advanced, try out [RequireJS][1]. You&#39;ll get added benefits such as dependency management, better concurrency, and avoid duplication (that is, retrieving a script more than once).\r\n\r\nYou can write your JavaScript files in &quot;modules&quot; and then reference them as dependencies in other scripts. Or you can use RequireJS as a simple &quot;go get this script&quot; solution.\r\n\r\nExample:\r\n\r\nDefine dependencies as modules:\r\n\r\n**some-dependency.js**\r\n\r\n    define([&#39;lib/dependency1&#39;, &#39;lib/dependency2&#39;], function (d1, d2) {\r\n      \r\n         //Your actual script goes here.   \r\n         //The dependent scripts will be fetched if necessary.\r\n\r\n         return libraryObject;  //For example, jQuery object\r\n    });\r\n\r\n**implementation.js** is your &quot;main&quot; JavaScript file that depends on **some-dependency.js**\r\n\r\n    require([&#39;some-dependency&#39;], function(dependency) {\r\n\r\n        //Your script goes here\r\n        //some-dependency.js is fetched.   \r\n        //Then your script is executed\r\n    });\r\n\r\nExcerpt from the [GitHub][2] README:\r\n\r\n&gt; RequireJS loads plain JavaScript files as well as more defined\r\n&gt; modules. It is optimized for in-browser use, including in a Web\r\n&gt; Worker, but it can be used in other JavaScript environments, like\r\n&gt; Rhino and Node. It implements the Asynchronous Module API.\r\n&gt; \r\n&gt; RequireJS uses plain script tags to load modules/files, so it should\r\n&gt; allow for easy debugging. It can be used simply to load existing\r\n&gt; JavaScript files, so **you can add it to your existing project without\r\n&gt; having to re-write your JavaScript files.**\r\n&gt; \r\n&gt; ... \r\n\r\n  [1]: http://requirejs.org/\r\n  [2]: https://github.com/jrburke/requirejs\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1341322374,
          "answer_id": 11312069,
          "path": "stack.bower.answer",
          "score": 81,
          "up_vote_count": 82,
          "is_accepted": false,
          "last_activity_date": 1413741937,
          "last_edit_date": 1413741937,
          "body_markdown": "There is a good news for you. Very soon you will be able to load JavaScript code easily. It will become a standard way of importing modules of JavaScript code and will be part of core JavaScript itself. \r\n\r\nYou simply have to write `import cond from &#39;cond.js&#39;;` to load a macro named `cond` from a file `cond.js`.\r\n\r\nSo you don&#39;t have to rely upon any JavaScript framework nor do you have to explicitly make [Ajax][1] calls.\r\n\r\nRefer to:\r\n\r\n * *[Static module resolution][2]*\r\n\r\n * *[Module loaders][3]*\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Ajax_%28programming%29\r\n  [2]: http://calculist.org/blog/2012/06/29/static-module-resolution/\r\n  [3]: http://wiki.ecmascript.org/doku.php?id=harmony:module_loaders\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1345610014,
          "answer_id": 12066351,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1345617872,
          "last_edit_date": 1345617872,
          "body_markdown": "    var js = document.createElement(&quot;script&quot;);\r\n    \r\n    js.type = &quot;text/javascript&quot;;\r\n    js.src = jsFilePath;\r\n    \r\n    document.body.appendChild(js);"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1345925841,
          "answer_id": 12125326,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1413741976,
          "last_edit_date": 1413741976,
          "body_markdown": "Better use the [jQuery][1] way. To delay the ready event, first call `$.holdReady(true)`.\r\nExample ([source][2]):\r\n\r\n    $.holdReady(true);\r\n    $.getScript(&quot;myplugin.js&quot;, function() {\r\n        $.holdReady(false);\r\n    });\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JQuery\r\n  [2]: http://jqapi.com/#p=jQuery.holdReady\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1358345073,
          "answer_id": 14360209,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1358345073,
          "body_markdown": "Don&#39;t forget to check out [LAB.js][1]!\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n\t       $LAB\r\n\t       .script(&quot;jquery-1.8.3.js&quot;).wait()\r\n\t       .script(&quot;scripts/clientscript.js&quot;);      \r\n    &lt;/script&gt;\r\n\r\n\r\n  [1]: http://labjs.com"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1362671450,
          "answer_id": 15275614,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1413742031,
          "last_edit_date": 1413742031,
          "body_markdown": "Now, I may be totally misguided, but here&#39;s what I&#39;ve recently started doing... \r\nStart and end your JavaScript files with a carriage return, place in the PHP script, followed by one more carriage return.\r\nThe JavaScript comment &quot;//&quot; is ignored by PHP so the inclusion happens anyway. The purpose for the carriage returns is so that the first line of your included JavaScript isn&#39;t commented out.\r\n\r\nTechnically, you don&#39;t need the comment, but it posts errors in [Dreamweaver][1] that annoy me. If you&#39;re scripting in an IDE that doesn&#39;t post errors, you shouldn&#39;t need the comment or the carriage returns.\r\n\r\n    \\n\r\n    //&lt;?php require_once(&quot;path/to/javascript/dependency.js&quot;); ?&gt;\r\n    \r\n    function myFunction(){\r\n        // stuff\r\n    }\r\n    \\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Adobe_Dreamweaver\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1362923726,
          "answer_id": 15322985,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1363281990,
          "last_edit_date": 1363281990,
          "body_markdown": "\r\n\r\n\r\n\t\r\n\r\n    var s=[&quot;Hscript.js&quot;,&quot;checkRobert.js&quot;,&quot;Hscript.js&quot;];\r\n    for(i=0;i&lt;s.length;i++){\r\n      var script=document.createElement(&quot;script&quot;);\r\n      script.type=&quot;text/javascript&quot;;\r\n      script.src=s[i];\r\n      document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script)\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1364153532,
          "answer_id": 15602970,
          "path": "stack.bower.answer",
          "score": 18,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1414936220,
          "last_edit_date": 1414936220,
          "body_markdown": "This should do:\r\n\r\n    xhr = new XMLHttpRequest();\r\n    xhr.open(&quot;GET&quot;, &quot;/soap/ajax/11.0/connection.js&quot;, false);\r\n    xhr.send();\r\n    eval(xhr.responseText);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1365784490,
          "answer_id": 15976557,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1413743186,
          "last_edit_date": 1413743186,
          "body_markdown": "I wrote a simple module that automates the job of importing/including module scripts in JavaScript. For detailed explanation of the code, refer to the blog post *[JavaScript require / import / include modules][1]*.\r\n\r\n    // ----- USAGE -----\r\n\r\n    require(&#39;ivar.util.string&#39;);\r\n    require(&#39;ivar.net.*&#39;);\r\n    require(&#39;ivar/util/array.js&#39;);\r\n    require(&#39;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&#39;);\r\n\r\n    ready(function(){\r\n        //Do something when required scripts are loaded\r\n    });\r\n\r\n        //--------------------\r\n\r\n    var _rmod = _rmod || {}; //Require module namespace\r\n    _rmod.LOADED = false;\r\n    _rmod.on_ready_fn_stack = [];\r\n    _rmod.libpath = &#39;&#39;;\r\n    _rmod.imported = {};\r\n    _rmod.loading = {\r\n        scripts: {},\r\n        length: 0\r\n    };\r\n\r\n    _rmod.findScriptPath = function(script_name) {\r\n        var script_elems = document.getElementsByTagName(&#39;script&#39;);\r\n        for (var i = 0; i &lt; script_elems.length; i++) {\r\n            if (script_elems[i].src.endsWith(script_name)) {\r\n                var href = window.location.href;\r\n                href = href.substring(0, href.lastIndexOf(&#39;/&#39;));\r\n                var url = script_elems[i].src.substring(0, script_elems[i].length - script_name.length);\r\n                return url.substring(href.length+1, url.length);\r\n            }\r\n        }\r\n        return &#39;&#39;;\r\n    };\r\n\r\n    _rmod.libpath = _rmod.findScriptPath(&#39;script.js&#39;); //Path of your main script used to mark\r\n                                                       //the root directory of your library, any library.\r\n\r\n\r\n    _rmod.injectScript = function(script_name, uri, callback, prepare) {\r\n\r\n        if(!prepare)\r\n            prepare(script_name, uri);\r\n\r\n        var script_elem = document.createElement(&#39;script&#39;);\r\n        script_elem.type = &#39;text/javascript&#39;;\r\n        script_elem.title = script_name;\r\n        script_elem.src = uri;\r\n        script_elem.async = true;\r\n        script_elem.defer = false;\r\n\r\n        if(!callback)\r\n            script_elem.onload = function() {\r\n                callback(script_name, uri);\r\n            };\r\n        document.getElementsByTagName(&#39;head&#39;)[0].appendChild(script_elem);\r\n    };\r\n\r\n    _rmod.requirePrepare = function(script_name, uri) {\r\n        _rmod.loading.scripts[script_name] = uri;\r\n        _rmod.loading.length++;\r\n    };\r\n\r\n    _rmod.requireCallback = function(script_name, uri) {\r\n        _rmod.loading.length--;\r\n        delete _rmod.loading.scripts[script_name];\r\n        _rmod.imported[script_name] = uri;\r\n\r\n        if(_rmod.loading.length == 0)\r\n            _rmod.onReady();\r\n    };\r\n\r\n    _rmod.onReady = function() {\r\n        if (!_rmod.LOADED) {\r\n            for (var i = 0; i &lt; _rmod.on_ready_fn_stack.length; i++){\r\n                _rmod.on_ready_fn_stack[i]();\r\n            });\r\n            _rmod.LOADED = true;\r\n        }\r\n    };\r\n\r\n    _.rmod = namespaceToUri = function(script_name, url) {\r\n        var np = script_name.split(&#39;.&#39;);\r\n        if (np.getLast() === &#39;*&#39;) {\r\n            np.pop();\r\n            np.push(&#39;_all&#39;);\r\n        }\r\n\r\n        if(!url)\r\n            url = &#39;&#39;;\r\n\r\n        script_name = np.join(&#39;.&#39;);\r\n        return  url + np.join(&#39;/&#39;)+&#39;.js&#39;;\r\n    };\r\n\r\n    //You can rename based on your liking. I chose require, but it\r\n    //can be called include or anything else that is easy for you\r\n    //to remember or write, except &quot;import&quot;, because it is reserved\r\n    //for future use.\r\n    var require = function(script_name) {\r\n        var uri = &#39;&#39;;\r\n        if (script_name.indexOf(&#39;/&#39;) &gt; -1) {\r\n            uri = script_name;\r\n            var lastSlash = uri.lastIndexOf(&#39;/&#39;);\r\n            script_name = uri.substring(lastSlash+1, uri.length);\r\n        } \r\n        else {\r\n            uri = _rmod.namespaceToUri(script_name, ivar._private.libpath);\r\n        }\r\n\r\n        if (!_rmod.loading.scripts.hasOwnProperty(script_name)\r\n         &amp;&amp; !_rmod.imported.hasOwnProperty(script_name)) {\r\n            _rmod.injectScript(script_name, uri,\r\n                _rmod.requireCallback,\r\n                    _rmod.requirePrepare);\r\n        }\r\n    };\r\n\r\n    var ready = function(fn) {\r\n        _rmod.on_ready_fn_stack.push(fn);\r\n    };\r\n\r\n  [1]: http://stamat.wordpress.com/2013/04/12/javascript-require-import-include-modules/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1370028694,
          "answer_id": 16864566,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1503766935,
          "last_edit_date": 1503766935,
          "body_markdown": "My usual method is:\r\n\r\n    var require = function (src, cb) {\r\n        cb = cb || function () {};\r\n\r\n        var newScriptTag = document.createElement(&#39;script&#39;),\r\n            firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0];\r\n        newScriptTag.src = src;\r\n        newScriptTag.async = true;\r\n        newScriptTag.onload = newScriptTag.onreadystatechange = function () {\r\n            (!this.readyState || this.readyState === &#39;loaded&#39; || this.readyState === &#39;complete&#39;) &amp;&amp; (cb());\r\n        };\r\n        firstScriptTag.parentNode.insertBefore(newScriptTag, firstScriptTag);\r\n    }\r\n\r\nIt works great and uses no page-reloads for me. I&#39;ve tried the AJAX method (one of the other answers) but it doesn&#39;t seem to work as nicely for me.\r\n\r\nHere&#39;s an explanation of how the code works for those that are curious: essentially, it creates a new script tag (after the first one) of the URL. It sets it to asynchronous mode so it doesn&#39;t block the rest of the code, but calls a callback when the readyState (the state of the content to be loaded) changes to &#39;loaded&#39;."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1373751843,
          "answer_id": 17634471,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1413742426,
          "last_edit_date": 1413742426,
          "body_markdown": "Most of solutions shown here imply dynamical loading. I was searching instead for a compiler which assemble all the depended files into a single output file. The same as [Less][1]/[Sass][2] preprocessors deal with the CSS `@import` at-rule. Since I didn&#39;t find anything decent of this sort, I wrote a simple tool solving the issue.\r\n\r\nSo here is the compiler, https://github.com/dsheiko/jsic, which replaces `$import(&quot;file-path&quot;)` with the requested file content securely. Here is the corresponding [Grunt][3] plugin: https://github.com/dsheiko/grunt-jsic.\r\n\r\nOn the jQuery master branch, they simply concatenate atomic source files into a single one starting with `intro.js` and ending with `outtro.js`. That doesn&#39;t suits me as it provides no flexibility on the source code design. Check out how it works with jsic:\r\n\r\n*src/main.js*\r\n\r\n    var foo = $import(&quot;./Form/Input/Tel&quot;);\r\n\r\n*src/Form/Input/Tel.js*\r\n\r\n    function() {\r\n        return {\r\n              prop: &quot;&quot;,\r\n              method: function(){}\r\n        }\r\n    }\r\n\r\nNow we can run the compiler:\r\n\r\n    node jsic.js src/main.js build/mail.js\r\n\r\nAnd get the combined file\r\n\r\n*build/main.js*\r\n\r\n    var foo = function() {\r\n        return {\r\n              prop: &quot;&quot;,\r\n              method: function(){}\r\n        }\r\n    };\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Less_%28stylesheet_language%29\r\n  [2]: http://en.wikipedia.org/wiki/Sass_%28stylesheet_language%29\r\n  [3]: http://gruntjs.com/"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1381273747,
          "answer_id": 19260122,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1381340368,
          "last_edit_date": 1381340368,
          "body_markdown": "    function include(js)\r\n    {\r\n        document.writeln(&quot;&lt;script src=&quot; + js + &quot;&gt;&lt;&quot; + &quot;/script&gt;&quot;);\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1382758976,
          "answer_id": 19602549,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1413742447,
          "last_edit_date": 1413742447,
          "body_markdown": "This script will add a JavaScript file to the top of any other `&lt;script&gt;` tag:\r\n\r\n    (function () {\r\n        var li = document.createElement(&#39;script&#39;); \r\n        li.type = &#39;text/javascript&#39;; \r\n        li.src= &quot;http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;; \r\n        li.async=true; \r\n        var s = document.getElementsByTagName(&#39;script&#39;)[0]; \r\n        s.parentNode.insertBefore(li, s);\r\n    })();\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1383264906,
          "answer_id": 19718827,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1413742466,
          "last_edit_date": 1413742466,
          "body_markdown": "I also wrote a JavaScript dependency manager for Java web applications: [JS-Class-Loader][1].\r\n\r\n  [1]: http://damonsmith.github.io/js-class-loader/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1383759347,
          "answer_id": 19818854,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1413742630,
          "last_edit_date": 1413742630,
          "body_markdown": "Here is a [Grunt][1] plugin allowing you to use `@import &quot;path/to/file.js&quot;;` syntax in any file including JavaScript files. It can be paired with uglify or watch or any other plugin.\r\n\r\nIt can be installed with npm install: https://npmjs.org/package/grunt-import\r\n\r\n  [1]: http://gruntjs.com/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1384334297,
          "answer_id": 19949820,
          "path": "stack.bower.answer",
          "score": 24,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1516887850,
          "last_edit_date": 1516887850,
          "body_markdown": "If you want in pure JavaScript, you can use document.write.\r\n\r\n    document.write(&#39;&lt;script src=&quot;myscript.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&#39;);\r\n\r\nIf you use the jQuery library, you can use the $.getScript method.\r\n\r\n    $.getScript(&quot;another_script.js&quot;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1385145633,
          "answer_id": 20152162,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1413742681,
          "last_edit_date": 1413742681,
          "body_markdown": "There is also [Head.js][1]. It is very easy to deal with:\r\n\r\n    head.load(&quot;js/jquery.min.js&quot;,\r\n              &quot;js/jquery.someplugin.js&quot;,\r\n              &quot;js/jquery.someplugin.css&quot;, function() {\r\n      alert(&quot;Everything is ok!&quot;);\r\n    });\r\n\r\nAs you see, it&#39;s easier than Require.js and as convenient as jQuery&#39;s `$.getScript` method. It also has some advanced features, like conditional loading, feature detection and [much more][2].\r\n\r\n  [1]: http://headjs.com/\r\n  [2]: http://headjs.com/site/api/v1.00.html\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386762863,
          "answer_id": 20518446,
          "path": "stack.bower.answer",
          "score": 44,
          "up_vote_count": 44,
          "is_accepted": false,
          "last_activity_date": 1434638650,
          "last_edit_date": 1434638650,
          "body_markdown": "Here is a **synchronous** version **without jQuery**:\r\n\r\n\tfunction myRequire( url ) {\r\n\t\tvar ajax = new XMLHttpRequest();\r\n\t\tajax.open( &#39;GET&#39;, url, false ); // &lt;-- the &#39;false&#39; makes it synchronous\r\n\t\tajax.onreadystatechange = function () {\r\n\t\t\tvar script = ajax.response || ajax.responseText;\r\n\t\t\tif (ajax.readyState === 4) {\r\n\t\t\t\tswitch( ajax.status) {\r\n\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\teval.apply( window, [script] );\r\n\t\t\t\t\t\tconsole.log(&quot;script loaded: &quot;, url);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(&quot;ERROR: script not loaded: &quot;, url);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tajax.send(null);\r\n\t}\r\n\r\nNote that to get this working cross-domain, the server will need to set `allow-origin` header in its response."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394772051,
          "answer_id": 22396258,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1513511628,
          "last_edit_date": 1513511628,
          "body_markdown": "The `@import` syntax for achieving CSS-like JavaScript importing is possible using a tool such as [Mixture]() via their special `.mix` file type (see [here][1]). I imagine the application simply uses one of the aforementioned methods interally, though I don&#39;t know. \r\n\r\nFrom the Mixture documentation on `.mix` files: \r\n\r\n&gt; Mix files are simply .js or .css files with .mix. in the file name. A\r\n&gt; mix file simply     extends the functionality of a normal style or\r\n&gt; script file and allows you to import and combine.\r\n\r\nHere&#39;s an example `.mix` file that combines multiple `.js` files into one:\r\n \r\n    // scripts-global.mix.js\r\n    // Plugins - Global\r\n\r\n    @import &quot;global-plugins/headroom.js&quot;;\r\n    @import &quot;global-plugins/retina-1.1.0.js&quot;;\r\n    @import &quot;global-plugins/isotope.js&quot;;\r\n    @import &quot;global-plugins/jquery.fitvids.js&quot;;\r\n\r\nMixture outputs this as `scripts-global.js` and also as a minified version (`scripts-global.min.js`).\r\n\r\nNote: I&#39;m not in any way affiliated with Mixture, other than using it as a front-end development tool. I came across this question upon seeing a `.mix` JavaScript file in action (in one of the Mixture boilerplates) and being a bit confused by it (&quot;you can do this?&quot; I thought to myself). Then I realized that it was an application-specific file type (somewhat disappointing, agreed). Nevertheless, figured the knowledge might be helpful for others.\r\n\r\n**UPDATE**: Mixture is [now free](http://mixture.io/blog/free/) (offline).\r\n\r\n**UPDATE**: Mixture is now discontinued. [Old mixture releases](https://github.com/teammixture/mixture.io/issues/6) are still available\r\n\r\n  [1]: http://docs.mixture.io/preprocessors#mix\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1420102695,
          "answer_id": 27729485,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1481450679,
          "last_edit_date": 1495542899,
          "body_markdown": "In case you are using [Web Workers][1] and want to include additional scripts in the scope of the worker, the other answers provided about adding scripts to the `head` tag, etc. will not work for you.\r\n\r\nFortunately, [Web Workers have their own `importScripts` function][2] which is a global function in the scope of the Web Worker, native to the browser itself as it [is part of the specification][3].\r\n\r\nAlternatively, [as the second highest voted answer to your question highlights][4], [RequireJS][5] can also handle including scripts inside a Web Worker (likely calling `importScripts` itself, but with a few other useful features).\r\n\r\n  [1]: https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/basic_usage\r\n  [2]: https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/basic_usage#Importing_scripts_and_libraries\r\n  [3]: https://html.spec.whatwg.org/multipage/workers.html#importing-scripts-and-libraries\r\n  [4]: https://stackoverflow.com/a/10939737/1676444\r\n  [5]: http://www.requirejs.org/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1421007587,
          "answer_id": 27891634,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1481450557,
          "last_edit_date": 1481450557,
          "body_markdown": "There are a lot of potential answers for this question. My answer is obviously based on a number of them. Thank you for all the help. This is what I ended up with after reading through all the answers.\r\n\r\nThe problem with `$.getScript` and really any other solution that requires a callback when loading is complete is that if you have multiple files that use it and depend on each other you no longer have a way to know when all scripts have been loaded (once they are nested in multiple files).\r\n\r\n###Example:\r\n\r\nfile3.js\r\n\r\n    var f3obj = &quot;file3&quot;;\r\n\r\n    // Define other stuff\r\n\r\nfile2.js:\r\n\r\n    var f2obj = &quot;file2&quot;;\r\n    $.getScript(&quot;file3.js&quot;, function(){\r\n\r\n        alert(f3obj);\r\n\r\n        // Use anything defined in file3.\r\n    });\r\n\r\nfile1.js:\r\n\r\n    $.getScript(&quot;file2.js&quot;, function(){\r\n        alert(f3obj); //This will probably fail because file3 is only guaranteed to have loaded inside the callback in file2.\r\n        alert(f2obj);\r\n\r\n        // Use anything defined in the loaded script...\r\n    });\r\n\r\nYou are right when you say that you could specify Ajax to run synchronously or use [XMLHttpRequest][1], but the current trend appears to be to deprecate synchronous requests, so you may not get full browser support now or in the future.\r\n\r\nYou could try to use `$.when` to check an array of deferred objects, but now you are doing this in every file and file2 will be considered loaded as soon as the `$.when` is executed not when the callback is executed, so file1 still continues execution before file3 is loaded. This really still has the same problem.\r\n\r\nI decided to go backwards instead of forwards. Thank you `document.writeln`. I know it&#39;s taboo, but as long as it is used correctly this works well. You end up with code that can be debugged easily, shows in the DOM correctly and can ensure the order the dependencies are loaded correctly.\r\n\r\nYou can of course use $(&quot;body&quot;).append(), but then you can no longer debug correctly any more.\r\n\r\nNOTE: You must use this only while the page is loading, otherwise you get a blank screen. In other words, **always place this before / outside of document.ready**. I have not tested using this after the page is loaded in a click event or anything like that, but I am pretty sure it&#39;ll fail.\r\n\r\nI liked the idea of extending jQuery, but obviously you don&#39;t need to.\r\n\r\nBefore calling `document.writeln`, it checks to make sure the script has not already been loading by evaluating all the script elements.\r\n\r\nI assume that a script is not fully executed until its `document.ready` event has been executed. (I know using `document.ready` is not required, but many people use it, and handling this is a safeguard.)\r\n\r\nWhen the additional files are loaded the `document.ready` callbacks will get executed in the wrong order. To address this when a script is actually loaded, the script that imported it is re-imported itself and execution halted. This causes the originating file to now have its `document.ready` callback executed after any from any scripts that it imports.\r\n\r\nInstead of this approach you could attempt to modify the jQuery `readyList`, but this seemed like a worse solution.\r\n\r\nSolution:\r\n\r\n    $.extend(true,\r\n    {\r\n        import_js : function(scriptpath, reAddLast)\r\n        {\r\n            if (typeof reAddLast === &quot;undefined&quot; || reAddLast === null)\r\n            {\r\n                reAddLast = true; // Default this value to true. It is not used by the end user, only to facilitate recursion correctly.\r\n            }\r\n\r\n            var found = false;\r\n            if (reAddLast == true) // If we are re-adding the originating script we do not care if it has already been added.\r\n            {\r\n                found = $(&#39;script&#39;).filter(function () {\r\n                    return ($(this).attr(&#39;src&#39;) == scriptpath);\r\n                }).length != 0; // jQuery to check if the script already exists. (replace it with straight JavaScript if you don&#39;t like jQuery.\r\n            }\r\n\r\n            if (found == false) {\r\n\r\n                var callingScriptPath = $(&#39;script&#39;).last().attr(&quot;src&quot;); // Get the script that is currently loading. Again this creates a limitation where this should not be used in a button, and only before document.ready.\r\n\r\n                document.writeln(&quot;&lt;script type=&#39;text/javascript&#39; src=&#39;&quot; + scriptpath + &quot;&#39;&gt;&lt;/script&gt;&quot;); // Add the script to the document using writeln\r\n\r\n                if (reAddLast)\r\n                {\r\n                    $.import_js(callingScriptPath, false); // Call itself with the originating script to fix the order.\r\n                    throw &#39;Readding script to correct order: &#39; + scriptpath + &#39; &lt; &#39; + callingScriptPath; // This halts execution of the originating script since it is getting reloaded. If you put a try / catch around the call to $.import_js you results will vary.\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n\r\nUsage:\r\n\r\nfile3:\r\n\r\n    var f3obj = &quot;file3&quot;;\r\n\r\n    // Define other stuff\r\n    $(function(){\r\n        f3obj = &quot;file3docready&quot;;\r\n    });\r\n\r\nfile2:\r\n\r\n    $.import_js(&#39;js/file3.js&#39;);\r\n    var f2obj = &quot;file2&quot;;\r\n    $(function(){\r\n        f2obj = &quot;file2docready&quot;;\r\n    });\r\n\r\nfile1:\r\n\r\n    $.import_js(&#39;js/file2.js&#39;);\r\n\r\n    // Use objects from file2 or file3\r\n    alert(f3obj); // &quot;file3&quot;\r\n    alert(f2obj); // &quot;file2&quot;\r\n\r\n    $(function(){\r\n        // Use objects from file2 or file3 some more.\r\n        alert(f3obj); //&quot;file3docready&quot;\r\n        alert(f2obj); //&quot;file2docready&quot;\r\n    });\r\n\r\n  [1]: http://en.wikipedia.org/wiki/XMLHttpRequest\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1423358384,
          "answer_id": 28389515,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1423358384,
          "body_markdown": "Keep it nice, short, simple, and maintainable! :]\r\n\r\n         \r\n\r\n    // 3rd party plugins / script (don&#39;t forget the full path is necessary)\r\n    var FULL_PATH = &#39;&#39;, s =\r\n    [\r\n        FULL_PATH + &#39;plugins/script.js&#39;      // Script example\r\n        FULL_PATH + &#39;plugins/jquery.1.2.js&#39;, // jQuery Library \r\n        FULL_PATH + &#39;plugins/crypto-js/hmac-sha1.js&#39;,      // CryptoJS\r\n        FULL_PATH + &#39;plugins/crypto-js/enc-base64-min.js&#39;  // CryptoJS\r\n    ];\r\n    \r\n    function load(url)\r\n    {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open(&#39;GET&#39;, url, false);\r\n        ajax.onreadystatechange = function ()\r\n        {\r\n            var script = ajax.response || ajax.responseText;\r\n            if (ajax.readyState === 4)\r\n            {\r\n                switch(ajax.status)\r\n                {\r\n                    case 200:\r\n                        eval.apply( window, [script] );\r\n                        console.log(&quot;library loaded: &quot;, url);\r\n                        break;\r\n                    default:\r\n                        console.log(&quot;ERROR: library not loaded: &quot;, url);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    }\r\n    \r\n     // initialize a single load \r\n    load(&#39;plugins/script.js&#39;);\r\n    \r\n    // initialize a full load of scripts\r\n    if (s.length &gt; 0)\r\n    {\r\n        for (i = 0; i &lt; s.length; i++)\r\n        {\r\n            load(s[i]);\r\n        }\r\n    }\r\n\r\nThis code is simply a short functional example that *could* require additional feature functionality for full support on any (or given) platform."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429235814,
          "answer_id": 29688912,
          "path": "stack.bower.answer",
          "score": 56,
          "up_vote_count": 56,
          "is_accepted": false,
          "last_activity_date": 1481449627,
          "last_edit_date": 1481449627,
          "body_markdown": "Statement [`import`][1] is in ECMAScript 6.\r\n\r\nSyntax\r\n\r\n    import name from &quot;module-name&quot;;\r\n    import { member } from &quot;module-name&quot;;\r\n    import { member as alias } from &quot;module-name&quot;;\r\n    import { member1 , member2 } from &quot;module-name&quot;;\r\n    import { member1 , member2 as alias2 , [...] } from &quot;module-name&quot;;\r\n    import name , { member [ , [...] ] } from &quot;module-name&quot;;\r\n    import &quot;module-name&quot; as name;\r\n\r\n  [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1436323272,
          "answer_id": 31282622,
          "path": "stack.bower.answer",
          "score": 32,
          "up_vote_count": 32,
          "is_accepted": false,
          "last_activity_date": 1436323685,
          "last_edit_date": 1436323685,
          "body_markdown": "Here&#39;s the generalized version of how Facebook does it for their ubiquitous Like button:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script&gt;\r\n      var firstScript = document.getElementsByTagName(&#39;script&#39;)[0],\r\n          js = document.createElement(&#39;script&#39;);\r\n      js.src = &#39;https://cdnjs.cloudflare.com/ajax/libs/Snowstorm/20131208/snowstorm-min.js&#39;;\r\n      js.onload = function () {\r\n        // do stuff with your dynamically loaded script\r\n        snowStorm.snowColor = &#39;#99ccff&#39;;\r\n      };\r\n      firstScript.parentNode.insertBefore(js, firstScript);\r\n    &lt;/script&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nIf it works for Facebook, it will work for you.\r\n\r\nThe reason why we look for the first `script` element instead of `head` or `body` is because some browsers don&#39;t create one if missing, but we&#39;re guaranteed to have a `script` element - this one. Read more at http://www.jspatterns.com/the-ridiculous-case-of-adding-a-script-element/.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437531330,
          "answer_id": 31552759,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1481449511,
          "last_edit_date": 1481449511,
          "body_markdown": "I had a simple issue, but I was baffled by responses to this question.\r\n\r\nI had to use a variable (myVar1) defined in one JavaScript file (myvariables.js) in another JavaScript file (main.js).\r\n\r\nFor this I did as below:\r\n\r\nLoaded the JavaScript code in the HTML file, in the correct order, myvariables.js first, then main.js:\r\n\r\n    &lt;html&gt;\r\n        &lt;body onload=&quot;bodyReady();&quot; &gt;\r\n\r\n            &lt;script src=&quot;myvariables.js&quot; &gt; &lt;/script&gt;\r\n            &lt;script src=&quot;main.js&quot; &gt; &lt;/script&gt;\r\n\r\n            &lt;!-- Some other code --&gt;\r\n        &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\nFile: myvariables.js\r\n\r\n    var myVar1 = &quot;I am variable from myvariables.js&quot;;\r\n\r\nFile: main.js\r\n\r\n    // ...\r\n    function bodyReady() {\r\n        // ...\r\n        alert (myVar1);    // This shows &quot;I am variable from myvariables.js&quot;, which I needed\r\n        // ...\r\n    }\r\n    // ...\r\n\r\nAs you saw, I had use a variable in one JavaScript file in another JavaScript file, but I didn&#39;t need to include one in another. I just needed to ensure that the first JavaScript file loaded before the second JavaScript file, and, the first JavaScript file&#39;s variables are accessible in the second JavaScript file, automatically.\r\n\r\nThis saved my day. I hope this helps.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437720793,
          "answer_id": 31604044,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1481449320,
          "last_edit_date": 1481449320,
          "body_markdown": "If your intention to load the JavaScript file is **using the functions from the imported/included file**, you can also define a global object and set the functions as object items. For instance:\r\n\r\n###global.js\r\n\r\n    A = {};\r\n\r\n###file1.js\r\n\r\n    A.func1 = function() {\r\n      console.log(&quot;func1&quot;);\r\n    }\r\n\r\n###file2.js\r\n\r\n    A.func2 = function() {\r\n      console.log(&quot;func2&quot;);\r\n    }\r\n\r\n###main.js\r\n\r\n    A.func1();\r\n    A.func2();\r\n\r\nYou just need to be careful when you are including scripts in an HTML file. The order should be as in below:\r\n\r\n    &lt;head&gt;\r\n      &lt;script type=&quot;text/javascript&quot; src=&quot;global.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script type=&quot;text/javascript&quot; src=&quot;file1.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script type=&quot;text/javascript&quot; src=&quot;file2.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script type=&quot;text/javascript&quot; src=&quot;main.js&quot;&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1464134802,
          "answer_id": 37425858,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1481449168,
          "last_edit_date": 1481449168,
          "body_markdown": "I basically do it like the following, creating a new element and attach that to head:\r\n\r\n    var x = document.createElement(&#39;script&#39;);\r\n    x.src = &#39;http://example.com/test.js&#39;;\r\n    document.getElementsByTagName(&quot;head&quot;)[0].appendChild(x);\r\n\r\nIn [jQuery][1]:\r\n\r\n    // jQuery\r\n    $.getScript(&#39;/path/to/imported/script.js&#39;, function()\r\n    {\r\n        // Script is now loaded and executed.\r\n        // Put your dependent JavaScript code here.\r\n    });\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JQuery\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1470597248,
          "answer_id": 38817619,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1481449056,
          "last_edit_date": 1481449056,
          "body_markdown": "I have the requirement to asynchronously load an array of JavaScript files and at the final make a callback. Basically my best approach is the following:\r\n\r\n    // Load a JavaScript file from other JavaScript file\r\n    function loadScript(urlPack, callback) {\r\n        var url = urlPack.shift();\r\n        var subCallback;\r\n    \r\n        if (urlPack.length == 0) subCallback = callback;\r\n        else subCallback = function () {\r\n            console.log(&quot;Log script: &quot; + new Date().getTime());\r\n            loadScript(urlPack, callback);\r\n        }\r\n    \r\n        // Adding the script tag to the head as suggested before\r\n        var head = document.getElementsByTagName(&#39;head&#39;)[0];\r\n        var script = document.createElement(&#39;script&#39;);\r\n        script.type = &#39;text/javascript&#39;;\r\n        script.src = url;\r\n    \r\n        // Then bind the event to the callback function.\r\n        // There are several events for cross browser compatibility.\r\n        script.onreadystatechange = subCallback;\r\n        script.onload = subCallback;\r\n    \r\n        // Fire the loading\r\n        head.appendChild(script);\r\n    }\r\n\r\nExample:\r\n\r\n    loadScript(\r\n    [\r\n        &quot;js/DataTable/jquery.dataTables.js&quot;,\r\n        &quot;js/DataTable/dataTables.bootstrap.js&quot;,\r\n        &quot;js/DataTable/dataTables.buttons.min.js&quot;,\r\n        &quot;js/DataTable/dataTables.colReorder.min.js&quot;,\r\n        &quot;js/DataTable/dataTables.fixedHeader.min.js&quot;,\r\n        &quot;js/DataTable/buttons.bootstrap.min.js&quot;,\r\n        &quot;js/DataTable/buttons.colVis.min.js&quot;,\r\n        &quot;js/DataTable/buttons.html5.min.js&quot;\r\n    ], function() { gpLoad(params); });\r\n\r\nThe second script will not load until the first is completely loaded, and so...\r\n\r\nResults:\r\n\r\n[![Result][1]][1]\r\n\r\n  [1]: http://i.stack.imgur.com/6Y3vU.png\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1471000709,
          "answer_id": 38916704,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1481448868,
          "last_edit_date": 1481448868,
          "body_markdown": "You can&#39;t import, but you can reference.\r\n\r\n[PhpShtorm][1] IDE. To reference, in one `.js` file to another `.js`, just add this to the top of the file:\r\n\r\n    &lt;reference path=&quot;../js/file.js&quot; /&gt;\r\n\r\nOf course, you should use your own PATH to the JavaScript file.\r\n\r\nI don&#39;t know if it will work in other IDEs. Probably yes, just try. It should work in Visual Studio too.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/PhpStorm\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1475588854,
          "answer_id": 39854041,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1475588854,
          "body_markdown": "Here is maybe another way! In Node.js you do that just like the following!\r\nhttp://requirejs.org/docs/node.html\r\n\r\n\r\n**sub.js**\r\n\r\n    module.exports = {\r\n\t  log: function(string) {\r\n\t\tif(console) console.log(string);\r\n\t  }\r\n      mylog: function(){\r\n        console.log(&#39;just for log test!&#39;);\r\n      }\r\n    }\r\n\r\n**main.js**\r\n\r\n    var mylog =require(&#39;./sub&#39;);\r\n\r\n    mylog.log(&#39;Hurray, it works! :)&#39;);\r\n    mylog.mylog();\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1476865134,
          "answer_id": 40125812,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1476865134,
          "body_markdown": "    var xxx = require(&quot;../lib/your-library.js&quot;)\r\nor\r\n\r\n    import xxx from &quot;../lib/your-library.js&quot; //get default export\r\n    import {specificPart} from &#39;../lib/your-library.js&#39; //get named export\r\n    import * as _name from &#39;../lib/your-library.js&#39;  //get full export to alias _name\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1479335789,
          "answer_id": 40643616,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1481448779,
          "last_edit_date": 1481448779,
          "body_markdown": "Another approach is to use HTML imports. These can contain script references as well as stylesheet references.\r\n\r\nYou can just link an HTML file like\r\n\r\n    &lt;link rel=&quot;import&quot; href=&quot;vendorScripts.html&quot;/&gt;\r\n\r\nWithin the `vendorScripts.html` file you can include your script references like:\r\n\r\n    &lt;script src=&quot;scripts/vendors/jquery.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;scripts/vendors/bootstrap.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;scripts/vendors/angular.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;scripts/vendors/angular-route.js&quot;&gt;&lt;/script&gt;\r\n\r\nLook at https://www.html5rocks.com/en/tutorials/webcomponents/imports/ for more details.\r\n\r\nUnfortunately this only works in Chrome.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1492080164,
          "answer_id": 43390114,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1500279106,
          "last_edit_date": 1500279106,
          "body_markdown": "If you use Angular, then a plugin module [$ocLazyLoad](https://oclazyload.readme.io/docs/getting-started) can help you to do that. \r\n\r\nHere are some quotes from its documentation:\r\n\r\n&gt; Load one or more modules &amp; components with multiple files:\r\n\r\n&gt;     $ocLazyLoad.load([&#39;testModule.js&#39;, &#39;testModuleCtrl.js&#39;, &#39;testModuleService.js&#39;]);\r\n\r\n&gt; Load one or more modules with multiple files and specify a type where necessary:\r\n&gt; Note: When using the requireJS style formatting (with js! at the beginning for example), do not specify a file extension. Use one or the other.\r\n\r\n&gt;     $ocLazyLoad.load([\r\n&gt;       &#39;testModule.js&#39;,\r\n&gt;        {type: &#39;css&#39;, path: &#39;testModuleCtrl&#39;},\r\n&gt;        {type: &#39;html&#39;, path: &#39;testModuleCtrl.html&#39;},\r\n&gt;        {type: &#39;js&#39;, path: &#39;testModuleCtrl&#39;},\r\n&gt;        &#39;js!testModuleService&#39;,\r\n&gt;        &#39;less!testModuleLessFile&#39;\r\n&gt;     ]);\r\n\r\n&gt; You can load external libs (not angular):\r\n\r\n&gt;     $ocLazyLoad.load([&#39;testModule.js&#39;, \r\n&gt;        &#39;bower_components/bootstrap/dist/js/bootstrap.js&#39;, &#39;anotherModule.js&#39;]);\r\n\r\n\r\n&gt; You can also load css and template files:\r\n\r\n\r\n&gt;      $ocLazyLoad.load([\r\n&gt;          &#39;bower_components/bootstrap/dist/js/bootstrap.js&#39;,\r\n&gt;          &#39;bower_components/bootstrap/dist/css/bootstrap.css&#39;,\r\n&gt;          &#39;partials/template1.html&#39;\r\n&gt;      ]);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1493910996,
          "answer_id": 43786851,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1515671749,
          "last_edit_date": 1515671749,
          "body_markdown": "Here&#39;s a workaround **for browsers** (not Node.js) using HTML imports.\r\n\r\nFirst, all JavaScript classes and scripts are not in `.js` files, but in `.js.html` files (the **.js**.`html` is just to recognize between HTML pages and complete JavaScript script/classes), inside `&lt;script&gt;` tags, like this:\r\n\r\n`MyClass.js.html`:\r\n\r\n    &lt;script&gt;\r\n       class MyClass {\r\n         \r\n          // Your code here..\r\n\r\n       }\r\n\r\n    &lt;/script&gt;\r\n\r\nThen if you wish to import your class, you just need to use HTML imports:\r\n\r\n    &lt;link rel=&quot;import&quot; href=&quot;relative/path/to/MyClass.js.html&quot;/&gt;\r\n\r\n    &lt;script&gt;\r\n       var myClass = new MyClass();\r\n       // Your code here..\r\n    &lt;/script&gt;\r\n\r\n# EDIT : HTML imports will be dropped\r\n\r\nHTML imports and ES6 modules [are both already well implemented in most browser accross the world][1]. **But** since HTML imports are definitly not going to be part of the standards, unlike ES6 modules, its development will be dropped, then you should definitly start to use ES6 modules.\r\n\r\n\r\n  [1]: https://caniuse.com/#search=import"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1494824457,
          "answer_id": 43971846,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1495748055,
          "last_edit_date": 1495748055,
          "body_markdown": "It&#39;s very simple. Suppose you want to import file A.js in file B.js.\r\n\r\n**Now it&#39;s sure you have linked B.js in an HTML file, then just link A.js before B.js in that HTML file. Then the public variables of A.js will be available inside the B.js**\r\n\r\nThis does not require a complicated answer.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1500563702,
          "answer_id": 45218814,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1500563702,
          "body_markdown": "In modern language it would be \r\n\r\n    function loadJs( url ){\r\n      return new Promise( resolve =&gt; {\r\n        const script = document.createElement( &quot;script&quot; );\r\n        script.src = url;\r\n        script.onload = resolve;\r\n        document.head.appendChild( script );\r\n      });\r\n    }"
        }
      ],
      "title": "How do I include a JavaScript file in another JavaScript file?",
      "view_count": 2208315,
      "answer_count": 48,
      "code_snippet": [
        "<code>@import</code>",
        "<code>script</code>",
        "<code>// module.js\nexport function hello() {\n  return \"Hello\";\n}\n</code>",
        "<code>// main.js\nimport {hello} from 'module'; // or './module'\nlet val = hello(); // val is \"Hello\";\n</code>",
        "<code>babel</code>",
        "<code>import</code>",
        "<code>// mymodule.js\nmodule.exports = {\n   hello: function() {\n      return \"Hello\";\n   }\n}\n</code>",
        "<code>// server.js\nconst myModule = require('./mymodule');\nlet val = myModule.hello(); // val is \"Hello\"   \n</code>",
        "<code>eval</code>",
        "<code>eval</code>",
        "<code>$.getScript(\"my_lovely_script.js\", function() {\n   alert(\"Script loaded but not necessarily executed.\");\n});\n</code>",
        "<code>&lt;script&gt;</code>",
        "<code>&lt;head&gt;</code>",
        "<code>&lt;/body&gt;</code>",
        "<code>function dynamicallyLoadScript(url) {\n    var script = document.createElement(\"script\"); // Make a script DOM node\n    script.src = url; // Set it's src to the provided URL\n\n    document.head.appendChild(script); // Add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n}\n</code>",
        "<code>&lt;script&gt;</code>",
        "<code>src</code>",
        "<code>my_lovely_script.js</code>",
        "<code>MySuperObject</code>",
        "<code>var js = document.createElement(\"script\");\n\njs.type = \"text/javascript\";\njs.src = jsFilePath;\n\ndocument.body.appendChild(js);\n\nvar s = new MySuperObject();\n\nError : MySuperObject is undefined\n</code>",
        "<code>function loadScript(url, callback)\n{\n    // Adding the script tag to the head as suggested before\n    var head = document.getElementsByTagName('head')[0];\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n\n    // Then bind the event to the callback function.\n    // There are several events for cross browser compatibility.\n    script.onreadystatechange = callback;\n    script.onload = callback;\n\n    // Fire the loading\n    head.appendChild(script);\n}\n</code>",
        "<code>var myPrettyCode = function() {\n   // Here, do whatever you want\n};\n</code>",
        "<code>loadScript(\"my_lovely_script.js\", myPrettyCode);\n</code>",
        "<code>script.async = false;</code>",
        "<code>define(['lib/dependency1', 'lib/dependency2'], function (d1, d2) {\n\n     //Your actual script goes here.   \n     //The dependent scripts will be fetched if necessary.\n\n     return libraryObject;  //For example, jQuery object\n});\n</code>",
        "<code>require(['some-dependency'], function(dependency) {\n\n    //Your script goes here\n    //some-dependency.js is fetched.   \n    //Then your script is executed\n});\n</code>",
        "<code>jQuery.append()</code>",
        "<code>&lt;head&gt;</code>",
        "<code>$(\"head\").append('&lt;script type=\"text/javascript\" src=\"' + script + '\"&gt;&lt;/script&gt;');\n</code>",
        "<code>(function($)\n{\n    /*\n     * $.import_js() helper (for JavaScript importing within JavaScript code).\n     */\n    var import_js_imported = [];\n\n    $.extend(true,\n    {\n        import_js : function(script)\n        {\n            var found = false;\n            for (var i = 0; i &lt; import_js_imported.length; i++)\n                if (import_js_imported[i] == script) {\n                    found = true;\n                    break;\n                }\n\n            if (found == false) {\n                $(\"head\").append('&lt;script type=\"text/javascript\" src=\"' + script + '\"&gt;&lt;/script&gt;');\n                import_js_imported.push(script);\n            }\n        }\n    });\n\n})(jQuery);\n</code>",
        "<code>main.js</code>",
        "<code>main.js</code>",
        "<code>$.import_js()</code>",
        "<code>included.js</code>",
        "<code>function hello()\n{\n    alert(\"Hello world!\");\n}\n</code>",
        "<code>included.js</code>",
        "<code>jQuery.getScript</code>",
        "<code>script</code>",
        "<code>head</code>",
        "<code>async</code>",
        "<code>false</code>",
        "<code>\"</code>",
        "<code>&lt;script&gt;</code>",
        "<code>function require(script) {\n    $.ajax({\n        url: script,\n        dataType: \"script\",\n        async: false,           // &lt;-- This is the key\n        success: function () {\n            // all good...\n        },\n        error: function () {\n            throw new Error(\"Could not load script \" + script);\n        }\n    });\n}\n</code>",
        "<code>require(\"/scripts/subscript.js\");\n</code>",
        "<code>subscript.doSomethingCool(); \n</code>",
        "<code>async: false</code>",
        "<code>import cond from 'cond.js';</code>",
        "<code>cond</code>",
        "<code>cond.js</code>",
        "<code>function includeJs(jsFilePath) {\n    var js = document.createElement(\"script\");\n\n    js.type = \"text/javascript\";\n    js.src = jsFilePath;\n\n    document.body.appendChild(js);\n}\n\nincludeJs(\"/path/to/some/file.js\");\n</code>",
        "<code>js.onload = callback;</code>",
        "<code>import</code>",
        "<code>import name from \"module-name\";\nimport { member } from \"module-name\";\nimport { member as alias } from \"module-name\";\nimport { member1 , member2 } from \"module-name\";\nimport { member1 , member2 as alias2 , [...] } from \"module-name\";\nimport name , { member [ , [...] ] } from \"module-name\";\nimport \"module-name\" as name;\n</code>",
        "<code>function include(filename)\n{\n    var head = document.getElementsByTagName('head')[0];\n\n    var script = document.createElement('script');\n    script.src = filename;\n    script.type = 'text/javascript';\n\n    head.appendChild(script)\n}\n</code>",
        "<code>script.onload = callback;</code>",
        "<code>var</code>",
        "<code>head</code>",
        "<code>function myRequire( url ) {\n    var ajax = new XMLHttpRequest();\n    ajax.open( 'GET', url, false ); // &lt;-- the 'false' makes it synchronous\n    ajax.onreadystatechange = function () {\n        var script = ajax.response || ajax.responseText;\n        if (ajax.readyState === 4) {\n            switch( ajax.status) {\n                case 200:\n                    eval.apply( window, [script] );\n                    console.log(\"script loaded: \", url);\n                    break;\n                default:\n                    console.log(\"ERROR: script not loaded: \", url);\n            }\n        }\n    };\n    ajax.send(null);\n}\n</code>",
        "<code>allow-origin</code>",
        "<code>http://web.archive.org/web/20140905044059/http://www.howtocreate.co.uk/operaStuff/userjs/aagmfunctions.js</code>",
        "<code>&lt;script&gt;</code>",
        "<code>XMLHttpRequest</code>",
        "<code>const XMLHttpRequest = Components.Constructor(\"@mozilla.org/xmlextras/xmlhttprequest;1\");</code>",
        "<code>var require = (function() {\n    var _required = {};\n    return (function(url, callback) {\n        if (typeof url == 'object') {\n            // We've (hopefully) got an array: time to chain!\n            if (url.length &gt; 1) {\n                // Load the nth file as soon as everything up to the\n                // n-1th one is done.\n                require(url.slice(0, url.length - 1), function() {\n                    require(url[url.length - 1], callback);\n                });\n            } else if (url.length == 1) {\n                require(url[0], callback);\n            }\n            return;\n        }\n        if (typeof _required[url] == 'undefined') {\n            // Haven't loaded this URL yet; gogogo!\n            _required[url] = [];\n\n            var script = new Element('script', {\n                src: url,\n                type: 'text/javascript'\n            });\n            script.observe('load', function() {\n                console.log(\"script \" + url + \" loaded.\");\n                _required[url].each(function(cb) {\n                    cb.call(); // TODO: does this execute in the right context?\n                });\n                _required[url] = true;\n            });\n\n            $$('head')[0].insert(script);\n        } else if (typeof _required[url] == 'boolean') {\n            // We already loaded the thing, so go ahead.\n            if (callback) {\n                callback.call();\n            }\n            return;\n        }\n\n        if (callback) {\n            _required[url].push(callback);\n        }\n    });\n})();\n</code>",
        "<code>&lt;script src=\"prototype.js\"&gt;&lt;/script&gt;\n&lt;script src=\"require.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    require(['foo.js','bar.js'], function () {\n        /* Use foo.js and bar.js here */\n    });\n&lt;/script&gt;\n</code>",
        "<code>&lt;script&gt;\r\n  var firstScript = document.getElementsByTagName('script')[0],\r\n      js = document.createElement('script');\r\n  js.src = 'https://cdnjs.cloudflare.com/ajax/libs/Snowstorm/20131208/snowstorm-min.js';\r\n  js.onload = function () {\r\n    // do stuff with your dynamically loaded script\r\n    snowStorm.snowColor = '#99ccff';\r\n  };\r\n  firstScript.parentNode.insertBefore(js, firstScript);\r\n&lt;/script&gt;</code>",
        "<code>script</code>",
        "<code>head</code>",
        "<code>body</code>",
        "<code>script</code>",
        "<code>document.write('&lt;script src=\"myscript.js\" type=\"text/javascript\"&gt;&lt;/script&gt;');\n</code>",
        "<code>$.getScript(\"another_script.js\");\n</code>",
        "<code>@import</code>",
        "<code>$import(\"file-path\")</code>",
        "<code>intro.js</code>",
        "<code>outtro.js</code>",
        "<code>var foo = $import(\"./Form/Input/Tel\");\n</code>",
        "<code>function() {\n    return {\n          prop: \"\",\n          method: function(){}\n    }\n}\n</code>",
        "<code>node jsic.js src/main.js build/mail.js\n</code>",
        "<code>var foo = function() {\n    return {\n          prop: \"\",\n          method: function(){}\n    }\n};\n</code>",
        "<code>main.js.php</code>",
        "<code>&lt;?php\n    header('Content-type:text/javascript; charset=utf-8');\n    include_once(\"foo.js.php\");\n    include_once(\"bar.js.php\");\n?&gt;\n\n// Main JavaScript code goes here\n</code>",
        "<code>xhr = new XMLHttpRequest();\nxhr.open(\"GET\", \"/soap/ajax/11.0/connection.js\", false);\nxhr.send();\neval(xhr.responseText);\n</code>",
        "<code>eval</code>",
        "<code>eval</code>",
        "<code>eval</code>",
        "<code>eval</code>",
        "<code>Function</code>",
        "<code>setTimeout</code>",
        "<code>setInterval</code>",
        "<code>http://web.archive.org/web/20140905044059/http://www.howtocreate.co.uk/operaStuff/userjs/aagmfunctions.js</code>",
        "<code>A = {};\n</code>",
        "<code>A.func1 = function() {\n  console.log(\"func1\");\n}\n</code>",
        "<code>A.func2 = function() {\n  console.log(\"func2\");\n}\n</code>",
        "<code>A.func1();\nA.func2();\n</code>",
        "<code>&lt;head&gt;\n  &lt;script type=\"text/javascript\" src=\"global.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"file1.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"file2.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"main.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code>",
        "<code>head</code>",
        "<code>importScripts</code>",
        "<code>importScripts</code>",
        "<code>// ----- USAGE -----\n\nrequire('ivar.util.string');\nrequire('ivar.net.*');\nrequire('ivar/util/array.js');\nrequire('http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js');\n\nready(function(){\n    //Do something when required scripts are loaded\n});\n\n    //--------------------\n\nvar _rmod = _rmod || {}; //Require module namespace\n_rmod.LOADED = false;\n_rmod.on_ready_fn_stack = [];\n_rmod.libpath = '';\n_rmod.imported = {};\n_rmod.loading = {\n    scripts: {},\n    length: 0\n};\n\n_rmod.findScriptPath = function(script_name) {\n    var script_elems = document.getElementsByTagName('script');\n    for (var i = 0; i &lt; script_elems.length; i++) {\n        if (script_elems[i].src.endsWith(script_name)) {\n            var href = window.location.href;\n            href = href.substring(0, href.lastIndexOf('/'));\n            var url = script_elems[i].src.substring(0, script_elems[i].length - script_name.length);\n            return url.substring(href.length+1, url.length);\n        }\n    }\n    return '';\n};\n\n_rmod.libpath = _rmod.findScriptPath('script.js'); //Path of your main script used to mark\n                                                   //the root directory of your library, any library.\n\n\n_rmod.injectScript = function(script_name, uri, callback, prepare) {\n\n    if(!prepare)\n        prepare(script_name, uri);\n\n    var script_elem = document.createElement('script');\n    script_elem.type = 'text/javascript';\n    script_elem.title = script_name;\n    script_elem.src = uri;\n    script_elem.async = true;\n    script_elem.defer = false;\n\n    if(!callback)\n        script_elem.onload = function() {\n            callback(script_name, uri);\n        };\n    document.getElementsByTagName('head')[0].appendChild(script_elem);\n};\n\n_rmod.requirePrepare = function(script_name, uri) {\n    _rmod.loading.scripts[script_name] = uri;\n    _rmod.loading.length++;\n};\n\n_rmod.requireCallback = function(script_name, uri) {\n    _rmod.loading.length--;\n    delete _rmod.loading.scripts[script_name];\n    _rmod.imported[script_name] = uri;\n\n    if(_rmod.loading.length == 0)\n        _rmod.onReady();\n};\n\n_rmod.onReady = function() {\n    if (!_rmod.LOADED) {\n        for (var i = 0; i &lt; _rmod.on_ready_fn_stack.length; i++){\n            _rmod.on_ready_fn_stack[i]();\n        });\n        _rmod.LOADED = true;\n    }\n};\n\n_.rmod = namespaceToUri = function(script_name, url) {\n    var np = script_name.split('.');\n    if (np.getLast() === '*') {\n        np.pop();\n        np.push('_all');\n    }\n\n    if(!url)\n        url = '';\n\n    script_name = np.join('.');\n    return  url + np.join('/')+'.js';\n};\n\n//You can rename based on your liking. I chose require, but it\n//can be called include or anything else that is easy for you\n//to remember or write, except \"import\", because it is reserved\n//for future use.\nvar require = function(script_name) {\n    var uri = '';\n    if (script_name.indexOf('/') &gt; -1) {\n        uri = script_name;\n        var lastSlash = uri.lastIndexOf('/');\n        script_name = uri.substring(lastSlash+1, uri.length);\n    } \n    else {\n        uri = _rmod.namespaceToUri(script_name, ivar._private.libpath);\n    }\n\n    if (!_rmod.loading.scripts.hasOwnProperty(script_name)\n     &amp;&amp; !_rmod.imported.hasOwnProperty(script_name)) {\n        _rmod.injectScript(script_name, uri,\n            _rmod.requireCallback,\n                _rmod.requirePrepare);\n    }\n};\n\nvar ready = function(fn) {\n    _rmod.on_ready_fn_stack.push(fn);\n};\n</code>",
        "<code>&lt;html&gt;\n    &lt;body onload=\"bodyReady();\" &gt;\n\n        &lt;script src=\"myvariables.js\" &gt; &lt;/script&gt;\n        &lt;script src=\"main.js\" &gt; &lt;/script&gt;\n\n        &lt;!-- Some other code --&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>var myVar1 = \"I am variable from myvariables.js\";\n</code>",
        "<code>// ...\nfunction bodyReady() {\n    // ...\n    alert (myVar1);    // This shows \"I am variable from myvariables.js\", which I needed\n    // ...\n}\n// ...\n</code>",
        "<code>import</code>",
        "<code>@import</code>",
        "<code>.mix</code>",
        "<code>.mix</code>",
        "<code>.mix</code>",
        "<code>.js</code>",
        "<code>// scripts-global.mix.js\n// Plugins - Global\n\n@import \"global-plugins/headroom.js\";\n@import \"global-plugins/retina-1.1.0.js\";\n@import \"global-plugins/isotope.js\";\n@import \"global-plugins/jquery.fitvids.js\";\n</code>",
        "<code>scripts-global.js</code>",
        "<code>scripts-global.min.js</code>",
        "<code>.mix</code>",
        "<code>var js = document.createElement(\"script\");\n\njs.type = \"text/javascript\";\njs.src = jsFilePath;\n\ndocument.body.appendChild(js);\n</code>",
        "<code>body</code>",
        "<code>var require = function (src, cb) {\n    cb = cb || function () {};\n\n    var newScriptTag = document.createElement('script'),\n        firstScriptTag = document.getElementsByTagName('script')[0];\n    newScriptTag.src = src;\n    newScriptTag.async = true;\n    newScriptTag.onload = newScriptTag.onreadystatechange = function () {\n        (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') &amp;&amp; (cb());\n    };\n    firstScriptTag.parentNode.insertBefore(newScriptTag, firstScriptTag);\n}\n</code>",
        "<code>head.load(\"js/jquery.min.js\",\n          \"js/jquery.someplugin.js\",\n          \"js/jquery.someplugin.css\", function() {\n  alert(\"Everything is ok!\");\n});\n</code>",
        "<code>$.getScript</code>",
        "<code>//set array to be updated when we add or remove plugin files\n var pluginNames = [\"lettering\", \"fittext\", \"butterjam\", etc.];\n//one script tag for each plugin\n $.each(pluginNames, function(){\n   $('head').append('&lt;script src=\"js/plugins/' + this + '.js\"&gt;&lt;/script&gt;');\n });\n</code>",
        "<code>&lt;script src=\"js/plugins/plugins.js\"&gt;&lt;/script&gt;</code>",
        "<code>global.js</code>",
        "<code>/**\n* @fileoverview This file stores global functions that are required by other libraries.\n*/\n\nif (typeof(jQuery) === 'undefined') {\n    throw 'jQuery is required.';\n}\n\n/** Defines the base script directory that all .js files are assumed to be organized under. */\nvar BASE_DIR = 'js/';\n\n/**\n* Loads the specified file, outputting it to the &lt;head&gt; HTMLElement.\n*\n* This method mimics the use of using in C# or import in Java, allowing\n* JavaScript files to \"load\" other JavaScript files that they depend on\n* using a familiar syntax.\n*\n* This method assumes all scripts are under a directory at the root and will\n* append the .js file extension automatically.\n*\n* @param {string} file A file path to load using C#/Java \"dot\" syntax.\n*\n* Example Usage:\n* imports('core.utils.extensions');\n* This will output: &lt;script type=\"text/javascript\" src=\"/js/core/utils/extensions.js\"&gt;&lt;/script&gt;\n*/\nfunction imports(file) {\n    var fileName = file.substr(file.lastIndexOf('.') + 1, file.length);\n\n    // Convert PascalCase name to underscore_separated_name\n    var regex = new RegExp(/([A-Z])/g);\n    if (regex.test(fileName)) {\n        var separated = fileName.replace(regex, \",$1\").replace(',', '');\n        fileName = separated.replace(/[,]/g, '_');\n    }\n\n    // Remove the original JavaScript file name to replace with underscore version\n    file = file.substr(0, file.lastIndexOf('.'));\n\n    // Convert the dot syntax to directory syntax to actually load the file\n    if (file.indexOf('.') &gt; 0) {\n        file = file.replace(/[.]/g, '/');\n    }\n\n    var src = BASE_DIR + file + '/' + fileName.toLowerCase() + '.js';\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n\n    $('head').find('script:last').append(script);\n}\n</code>",
        "<code>$.holdReady(true)</code>",
        "<code>$.holdReady(true);\n$.getScript(\"myplugin.js\", function() {\n    $.holdReady(false);\n});\n</code>",
        "<code>getScript</code>",
        "<code>&lt;script&gt;</code>",
        "<code>(function () {\n    var li = document.createElement('script'); \n    li.type = 'text/javascript'; \n    li.src= \"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"; \n    li.async=true; \n    var s = document.getElementsByTagName('script')[0]; \n    s.parentNode.insertBefore(li, s);\n})();\n</code>",
        "<code>function loadJs( url ){\n  return new Promise( resolve =&gt; {\n    const script = document.createElement( \"script\" );\n    script.src = url;\n    script.onload = resolve;\n    document.head.appendChild( script );\n  });\n}\n</code>",
        "<code>var pi = 3.14</code>",
        "<code>loadJs(\"pi.js\").then(function(){                     console.log(pi);                     });</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "string-split"
      ],
      "creation_date": 1274192627,
      "body_markdown": "I have a comma separated string that I want to convert into an array so I can loop through it.\r\n\r\nIs there anything built-in to do this?\r\n\r\nFor e.g. I have this string\r\n\r\n    var str = &quot;January,February,March,April,May,June,July,August,September,October,November,December&quot;;\r\n\r\nnow want to split this by comma and store in Array object",
      "last_edit_date": 1404216239,
      "up_vote_count": 519,
      "link": "https://stackoverflow.com/questions/2858121/convert-comma-separated-string-to-array",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1274192681,
          "answer_id": 2858130,
          "path": "stack.bower.answer",
          "score": 900,
          "up_vote_count": 900,
          "is_accepted": true,
          "last_activity_date": 1432068420,
          "last_edit_date": 1432068420,
          "body_markdown": "    var array = string.split(&#39;,&#39;);\r\n\r\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split), mostly helpful for the possibly unexpected behavior of the `limit` parameter. (Hint: `&quot;a,b,c&quot;.split(&quot;,&quot;, 2)` comes out to `[&quot;a&quot;, &quot;b&quot;]`, not `[&quot;a&quot;, &quot;b,c&quot;]`.)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1274192859,
          "answer_id": 2858154,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1335122920,
          "last_edit_date": 1335122920,
          "body_markdown": "The split() method is used to split a string into an array of substrings, and returns the new array.\r\n\r\n    var array = string.split(&#39;,&#39;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1274194871,
          "answer_id": 2858462,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1274194871,
          "body_markdown": "In javascript and PHP you have these two very powerful functions:\r\n\r\n&gt;JS: String.**split**(String) Array.**join**(String);\r\n&gt;\r\n&gt;PHP: **explode**(string,string) **implode**(string,array)\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1292342292,
          "answer_id": 4441117,
          "path": "stack.bower.answer",
          "score": 105,
          "up_vote_count": 106,
          "is_accepted": false,
          "last_activity_date": 1372345451,
          "last_edit_date": 1372345451,
          "body_markdown": "Watch out if you are aiming at integers, like 1,2,3,4,5. If you intend to use the elements of your array as integers and not as strings after splitting the string, consider converting them into such.\r\n\r\n    var str = &quot;1,2,3,4,5,6&quot;;\r\n    var temp = new Array();\r\n    // this will return an array with strings &quot;1&quot;, &quot;2&quot;, etc.\r\n    temp = str.split(&quot;,&quot;);\r\n\r\nadding a loop like this\r\n\r\n    for (a in temp ) {\r\n        temp[a] = parseInt(temp[a], 10); // Explicitly include base as per &#193;lvaro&#39;s comment\r\n    }\r\n\r\nwill return an array containing integers, and not strings."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1346253150,
          "answer_id": 12181146,
          "path": "stack.bower.answer",
          "score": 26,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1346411619,
          "last_edit_date": 1346411619,
          "body_markdown": "Hmm split is dangerous imho as a string can always contain a comma, observe the following: \r\n\r\n    var myArr = &quot;a,b,c,d,e,f,g,&#39;,&#39;&quot;;\r\n    result = myArr.split(&#39;,&#39;);\r\n\r\nSo how would you interperate that? and what do you WANT the result to be? an array with: \r\n\r\n    [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;\\&#39;&#39;, &#39;\\&#39;&#39;] or \r\n    [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;,&#39;]\r\neven if you escape the comma you&#39;d have a problem.\r\n\r\nQuickly fiddled this together: \r\n\r\n    (function($) {\r\n        $.extend({\r\n            splitAttrString: function(theStr) {\r\n                var attrs = [];\r\n    \r\n                var RefString = function(s) {\r\n                    this.value = s;\r\n                };\r\n                RefString.prototype.toString = function() {\r\n                    return this.value;\r\n                };\r\n                RefString.prototype.charAt = String.prototype.charAt;\r\n                var data = new RefString(theStr);\r\n    \r\n                var getBlock = function(endChr, restString) {\r\n                    var block = &#39;&#39;;\r\n                    var currChr = &#39;&#39;;\r\n                    while ((currChr != endChr) &amp;&amp; (restString.value !== &#39;&#39;)) {\r\n                        if (/&#39;|&quot;/.test(currChr)) {\r\n                            block = $.trim(block) + getBlock(currChr, restString);\r\n                        }\r\n                        else if (/\\{/.test(currChr)) {\r\n                            block = $.trim(block) + getBlock(&#39;}&#39;, restString);\r\n                        }\r\n                        else if (/\\[/.test(currChr)) {\r\n                            block = $.trim(block) + getBlock(&#39;]&#39;, restString);\r\n                        }\r\n                        else {\r\n                            block += currChr;\r\n                        }\r\n                        currChr = restString.charAt(0);\r\n                        restString.value = restString.value.slice(1);\r\n                    }\r\n                    return $.trim(block);\r\n                };\r\n    \r\n                do {\r\n                    var attr = getBlock(&#39;,&#39;, data);\r\n                    attrs.push(attr);\r\n                }\r\n                while (data.value !== &#39;&#39;);\r\n                return attrs;\r\n            }\r\n        });\r\n    })(jQuery);\r\n\r\nFeel free to use / edit it :) "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1354182696,
          "answer_id": 13623010,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1354189265,
          "last_edit_date": 1354189265,
          "body_markdown": "Pass you Comma Separated string into this function and it will return array , and if not \r\ncomma separated string then will return null.\r\n   \r\n\r\n     function SplitTheString(CommaSepStr) {\r\n           var ResultArray = null; \r\n    \r\n            if (CommaSepStr!= null) {\r\n                var SplitChars = &#39;,&#39;;\r\n                if (CommaSepStr.indexOf(SplitChars) &gt;= 0) {\r\n                    ResultArray = CommaSepStr.split(SplitChars);\r\n                    \r\n                }\r\n            }\r\n           return ResultArray ;\r\n        }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1382459022,
          "answer_id": 19523289,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1382459022,
          "body_markdown": "I know this question has been answered for quite a while, but I thought that my contribution would be beneficial to others researching this topic...\r\n\r\nHere is a function that will convert a string to an array, even if there is only one item in the list (no separator character):\r\n\r\n    function listToAray(fullString, separator) {\r\n      var fullArray = [];\r\n\r\n      if (fullString !== undefined) {\r\n        if (fullString.indexOf(separator) == -1) {\r\n          fullAray.push(fullString);\r\n        } else {\r\n          fullArray = fullString.split(separator);\r\n        }\r\n      }\r\n\r\n      return fullArray;\r\n    }\r\n\r\nUse it like this:\r\n\r\n    var myString = &#39;alpha,bravo,charlie,delta&#39;;\r\n    var myArray = listToArray(myString, &#39;,&#39;);\r\n    myArray[2]; // charlie\r\n\r\n    var yourString = &#39;echo&#39;;\r\n    var yourArray = listToArray(yourString, &#39;,&#39;);\r\n    yourArray[0]; // echo\r\n\r\nI created this function because `split` throws out an error if there is no separator character in the string (only one item)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1395152177,
          "answer_id": 22482058,
          "path": "stack.bower.answer",
          "score": 11,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1519854726,
          "last_edit_date": 1519854726,
          "body_markdown": "Note that the following:\r\n\r\n     var a = &quot;&quot;;\r\n    var x = new Array();\r\n    x = a.split(&quot;,&quot;);\r\n    alert(x.length);\r\n\r\nwill alert 1"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1434599880,
          "answer_id": 30906208,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1434599880,
          "body_markdown": "I had a similar issue, but more complex as I needed to transform a csv into an array of arrays (each line is one array element that inside has an array of items split by comma).\r\n\r\nThe easiest solution (and more secure I bet) was to use PapaParse (http://papaparse.com/) which has a &quot;no-header&quot; option that transform the csv into an array of arrays, plus, it automatically detected the &quot;,&quot; as my delimiter.\r\n\r\nPlus, it is registered in bower, so I only had to:\r\n    \r\n    bower install papa-parse --save\r\n\r\nand then use it in my code as follows:\r\n \r\n    var arrayOfArrays = Papa.parse(csvStringWithEnters), {header:false}).data;\r\n\r\nI really liked it."
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1442594897,
          "answer_id": 32657196,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1458635042,
          "last_edit_date": 1458635042,
          "body_markdown": "Return function\r\n----------------\r\n\r\n    var array = (new Function(&quot;return [&quot; + str+ &quot;];&quot;)());\r\n\r\nits accept string and objectstrings\r\n\r\n    var string = &quot;0,1&quot;;\r\n    \r\n    var objectstring = &#39;{Name:&quot;Tshirt&quot;, CatGroupName:&quot;Clothes&quot;, Gender:&quot;male-female&quot;}, {Name:&quot;Dress&quot;, CatGroupName:&quot;Clothes&quot;, Gender:&quot;female&quot;}, {Name:&quot;Belt&quot;, CatGroupName:&quot;Leather&quot;, Gender:&quot;child&quot;}&#39;;\r\n    \r\n    var stringArray = (new Function(&quot;return [&quot; + string+ &quot;];&quot;)());\r\n    \r\n    var objectStringArray = (new Function(&quot;return [&quot; + objectstring+ &quot;];&quot;)());\r\n\r\nJSFiddle  https://jsfiddle.net/7ne9L4Lj/1/"
        }
      ],
      "title": "Convert comma separated string to array",
      "view_count": 777244,
      "answer_count": 10,
      "code_snippet": [
        "<code>var str = \"January,February,March,April,May,June,July,August,September,October,November,December\";\n</code>",
        "<code>string.split(',');</code>",
        "<code>var array = string.split(',');\n</code>",
        "<code>limit</code>",
        "<code>\"a,b,c\".split(\",\", 2)</code>",
        "<code>[\"a\", \"b\"]</code>",
        "<code>[\"a\", \"b,c\"]</code>",
        "<code>string</code>",
        "<code>String</code>",
        "<code>split</code>",
        "<code>array</code>",
        "<code>''.split(',')</code>",
        "<code>length === 1</code>",
        "<code>''.split(',') === ['']</code>",
        "<code>var str = \"1,2,3,4,5,6\";\nvar temp = new Array();\n// this will return an array with strings \"1\", \"2\", etc.\ntemp = str.split(\",\");\n</code>",
        "<code>for (a in temp ) {\n    temp[a] = parseInt(temp[a], 10); // Explicitly include base as per Álvaro's comment\n}\n</code>",
        "<code>\"001,002,003...\"</code>",
        "<code>parseInt('010')</code>",
        "<code>parseInt('010', 10)</code>",
        "<code>map</code>",
        "<code>str.split(',').map(parseInt)</code>",
        "<code>var myArr = \"a,b,c,d,e,f,g,','\";\nresult = myArr.split(',');\n</code>",
        "<code>['a', 'b', 'c', 'd', 'e', 'f', 'g', '\\'', '\\''] or \n['a', 'b', 'c', 'd', 'e', 'f', 'g', ',']\n</code>",
        "<code>(function($) {\n    $.extend({\n        splitAttrString: function(theStr) {\n            var attrs = [];\n\n            var RefString = function(s) {\n                this.value = s;\n            };\n            RefString.prototype.toString = function() {\n                return this.value;\n            };\n            RefString.prototype.charAt = String.prototype.charAt;\n            var data = new RefString(theStr);\n\n            var getBlock = function(endChr, restString) {\n                var block = '';\n                var currChr = '';\n                while ((currChr != endChr) &amp;&amp; (restString.value !== '')) {\n                    if (/'|\"/.test(currChr)) {\n                        block = $.trim(block) + getBlock(currChr, restString);\n                    }\n                    else if (/\\{/.test(currChr)) {\n                        block = $.trim(block) + getBlock('}', restString);\n                    }\n                    else if (/\\[/.test(currChr)) {\n                        block = $.trim(block) + getBlock(']', restString);\n                    }\n                    else {\n                        block += currChr;\n                    }\n                    currChr = restString.charAt(0);\n                    restString.value = restString.value.slice(1);\n                }\n                return $.trim(block);\n            };\n\n            do {\n                var attr = getBlock(',', data);\n                attrs.push(attr);\n            }\n            while (data.value !== '');\n            return attrs;\n        }\n    });\n})(jQuery);\n</code>",
        "<code>var array = string.split(',');\n</code>",
        "<code>var sampleTags = ['vinita@itsabacus.com']; \t\t   console.log(sampleTags); \t\t    $(\"#order_id\").on(\"change\", function() { \t\t\t\tvar order_id = document.getElementById('order_id').value; \t\t\t\t$.ajax({url: \"model/getUserMailIds.php\",data:{order_id:order_id},type:'POST', success: function(result){ \t\t\t\t\talert(result); \t\t\t\t\tvar sampleTags = result.split(',');; \t\t\t\t\tconsole.log(sampleTags); \t\t\t\t}}); \t\t\t});</code>",
        "<code> var a = \"\";\nvar x = new Array();\nx = a.split(\",\");\nalert(x.length);\n</code>",
        "<code> function SplitTheString(CommaSepStr) {\n       var ResultArray = null; \n\n        if (CommaSepStr!= null) {\n            var SplitChars = ',';\n            if (CommaSepStr.indexOf(SplitChars) &gt;= 0) {\n                ResultArray = CommaSepStr.split(SplitChars);\n\n            }\n        }\n       return ResultArray ;\n    }\n</code>",
        "<code>var array = (new Function(\"return [\" + str+ \"];\")());\n</code>",
        "<code>var string = \"0,1\";\n\nvar objectstring = '{Name:\"Tshirt\", CatGroupName:\"Clothes\", Gender:\"male-female\"}, {Name:\"Dress\", CatGroupName:\"Clothes\", Gender:\"female\"}, {Name:\"Belt\", CatGroupName:\"Leather\", Gender:\"child\"}';\n\nvar stringArray = (new Function(\"return [\" + string+ \"];\")());\n\nvar objectStringArray = (new Function(\"return [\" + objectstring+ \"];\")());\n</code>",
        "<code>var stringtext = \"String, text, I, am\";  var stringtextArray = (new Function(\"return [\" + string text + \"];\")());</code>",
        "<code>function listToAray(fullString, separator) {\n  var fullArray = [];\n\n  if (fullString !== undefined) {\n    if (fullString.indexOf(separator) == -1) {\n      fullAray.push(fullString);\n    } else {\n      fullArray = fullString.split(separator);\n    }\n  }\n\n  return fullArray;\n}\n</code>",
        "<code>var myString = 'alpha,bravo,charlie,delta';\nvar myArray = listToArray(myString, ',');\nmyArray[2]; // charlie\n\nvar yourString = 'echo';\nvar yourArray = listToArray(yourString, ',');\nyourArray[0]; // echo\n</code>",
        "<code>split</code>",
        "<code>'echo'.split(',')</code>",
        "<code>['echo']</code>",
        "<code>''.split(',')</code>",
        "<code>['']</code>",
        "<code>x.split(',')</code>",
        "<code>x</code>",
        "<code>x</code>",
        "<code>split</code>",
        "<code>split</code>",
        "<code>bower install papa-parse --save\n</code>",
        "<code>var arrayOfArrays = Papa.parse(csvStringWithEnters), {header:false}).data;\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "objective-c",
        "git",
        "cocoapods"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1330273489,
          "answer_id": 9454773,
          "path": "stack.bower.answer",
          "score": 38,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1330273489,
          "body_markdown": "I generally work on app’s of clients. In that case I add the Pods directory to the repo as well, to ensure that at any given time any developer could do a checkout and build and run.\r\n\r\nIf it were an app of our own, I would probably exclude the Pods directory until I won’t be working on it for a while.\r\n\r\nActually, I must conclude I might not be the best person to answer your question, versus views of pure users :) I’ll tweet  about this question from https://twitter.com/CocoaPodsOrg."
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1330274060,
          "answer_id": 9454861,
          "path": "stack.bower.answer",
          "score": 213,
          "up_vote_count": 219,
          "is_accepted": true,
          "last_activity_date": 1330274060,
          "body_markdown": "Personally I do not check in the Pods directory &amp; contents. I can&#39;t say I spent long ages considering the implications but my reasoning is something like:\r\n\r\nThe Podfile refers to a specific tag or or commit of each dependency so the Pods themselves can be generated from the podfile, ergo they are more like an intermediate build product than a source and, hence, don&#39;t need version control in my project.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1380141234,
          "answer_id": 19014686,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1396402440,
          "last_edit_date": 1396402440,
          "body_markdown": "I&#39;m in the camp of developers who do not check in libraries, assuming we have a good copy available in another location. So, in my .gitignore I include the following lines specific to CocoaPods:\r\n\r\n    Pods/\r\n    #Podfile.lock  # changed my mind on Podfile.lock\r\n\r\nThen I make sure that we have a copy of the libraries in a safe location. Rather than (mis-)use a project&#39;s code repository to store dependencies (compiled or not) I think the best way to do this is to archive builds. If you use a CI server for your builds (such as Jenkins) you can permanently archive any builds that are important to you. If you do all your production builds in your local Xcode, make a habit of taking an archive of your project for any builds you need to keep. Something like:\r\n1. Product --&gt; Archive\r\n\r\n2. Distribute... Submit to the iOS App Store / Save for Enterprise or Ad-hoc Deployment / what have you\r\n\r\n3. Reveal your project folder in Finder\r\n\r\n4. Right click and Compress &quot;WhateverProject&quot;\r\n\r\nThis provides an as-built image of the entire project, including the complete project and workspace settings used to build the app as well as binary distributions (such as Sparkle, proprietary SDKs such as TestFlight, etc.) whether or not they use CocoaPods.\r\n\r\n**Update:** I&#39;ve changed my mind on this and now do commit the `Podfile.lock` to source control. However, I still believe that the pods themselves are build artifacts and should be managed as such outside of source control, through another method such as your CI server or an archive process like I describe above."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1384966210,
          "answer_id": 20101908,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1384966210,
          "body_markdown": "I check in everything. (`Pods/` and `Podfile.lock`.) \r\n\r\nI want to be able to clone the repository and know that everything will just work as it did last time I used the app.\r\n\r\nI&#39;d rather vendor things in than risk having different results that could be caused by a different version of the gem, or someone rewriting history in the Pod&#39;s repository, etc."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1387104839,
          "answer_id": 20593696,
          "path": "stack.bower.answer",
          "score": 11,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1415506819,
          "last_edit_date": 1415506819,
          "body_markdown": "I prefer committing `Pods` directory along with `Podfile` and `Podfile.lock` to make sure anyone in my team can checkout the source anytime and they don&#39;t have to worry about anything or do additional stuff to make it work.\r\n\r\nThis also helps in a scenario where you have fixed a bug inside one of the pods or modified some behaviour as per your needs but these changes will not be available on other machines if not committed.\r\n\r\nAnd to ignore unnecessary directories:\r\n\r\n    xcuserdata/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1394535573,
          "answer_id": 22323702,
          "path": "stack.bower.answer",
          "score": 118,
          "up_vote_count": 121,
          "is_accepted": false,
          "last_activity_date": 1394536055,
          "last_edit_date": 1394536055,
          "body_markdown": "I recommend to use the [GitHub’s Objective-C gitignore](https://github.com/github/gitignore/blob/master/Objective-C.gitignore).\r\nIn detail, the best practices are:\r\n\r\n- The `Podfile` __must__ always be under source control.\r\n- The `Podfile.lock` __must__ always be under source control.\r\n- The Workspace generated by CocoaPods __should__ be kept under source control.\r\n- Any Pod referenced with the `:path` option __should__ be kept under source control.\r\n- The `./Pods` folder __can__ be kept under source control.\r\n\r\nFor more information you can refer to the [official guide](http://guides.cocoapods.org/using/using-cocoapods.html).\r\n\r\n_source: I’m a member of the CocoaPods core team, like @alloy_\r\n\r\n---\r\n\r\nAlthough the Pods folder is a build artifact there are reasons that you might consider while deciding wether to keep it under source control:\r\n\r\n- CocoaPods is not a package manager so the original source of the library could be removed in future by the author.\r\n- If the Pods folder is included in source control, it is not necessary to install CocoaPods to run the project as the checkout would suffice.\r\n- CocoaPods is still work in progress and there are options which don’t always lead to the same result (for example the `:head` and the `:git` options currently are not using the commits stored in the `Podfile.lock`).\r\n- There are less points of failure if you might resume work on a project after a medium/long amount of time."
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1394623544,
          "answer_id": 22350027,
          "path": "stack.bower.answer",
          "score": 323,
          "up_vote_count": 329,
          "is_accepted": false,
          "last_activity_date": 1438798848,
          "last_edit_date": 1438798848,
          "body_markdown": "I commit my Pods directory. I don&#39;t agree that the Pods directory is a build artefact. In fact I&#39;d say it most definitely isn&#39;t. It&#39;s part of your application source: it won&#39;t build without it!\r\n\r\nIt&#39;s easier to think of CocoaPods as a developer tool rather than a build tool. It doesn&#39;t build your project, it simply clones and installs your dependencies for you. It shouldn&#39;t be necessary to have CocoaPods installed to be able to simply build your project. \r\n\r\nBy making CocoaPods a dependency of your build, you now need to make sure it&#39;s available everywhere you might need to build your project...a team admin needs it, your CI server needs it. You should, as a rule, always be able to clone your source repository and build without any further effort. \r\n\r\nNot committing your Pods directory also creates a massive headache if you frequently switch branches. Now you need to run pod install every time you switch branches to make sure your dependencies are correct. This might be less hassle as your dependencies stabilise but early in a project this is a massive time sink. \r\n\r\nSo, what do I ignore? Nothing. Podfile, the lock file and the Pods directory all get committed. Trust me, it will save you a lot of hassle. What are the cons? A slightly bigger repo? Not the end of the world. "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1405545191,
          "answer_id": 24790872,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1405545191,
          "body_markdown": "Seems like a good way to structure this really would be to have the &quot;Pods&quot; directory as a git submodule / separate project, here&#39;s why.\r\n\r\n- Having pods in your project repo, when working with several developers, can cause VERY LARGE diffs in pull requests where it&#39;s nearly impossible to see the actual work that was changed by people (think several hundreds to thousands of files changed for libraries, and only a few changed in the actual project).\r\n\r\n- I see the issue of not committing anything to git, as the person owning the library could take it down at any time and you&#39;re essentially SOL, this also solves that.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1408595990,
          "answer_id": 25418344,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1408595990,
          "body_markdown": "To me, the biggest concern is future proofing your source.  If you plan to have your project last for a while and CocoaPods ever goes away or the source of one of the pods goes down, you&#39;re completely out of luck if trying to build fresh from an archive.\r\n\r\nThis could be mitigated with periodic full source archivals."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1416494025,
          "answer_id": 27042127,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1416494025,
          "body_markdown": "I must say, I am a fan of committing Pods to the repository.  Following a link already mentioned will give you a good .gitignore file to get up your Xcode projects for iOS to allow for Pods but also for you to easily exclude them if you so wish: https://github.com/github/gitignore/blob/master/Objective-C.gitignore\r\n\r\nMy reasoning for being a fan of adding Pods to the repository is for one fundamental reason which no one seems to be picking up on, what happens if a library which our project is so dependant upon is suddenly removed from the web? \r\n\r\n - Maybe the host decides they no longer want to keep their GitHub\r\n   account open What happens if the library is say several years old\r\n   (like older than 5 years for example) there is a high risk the\r\n   project may no longer be available at source\r\n - Also another point, what happens if the URL to the repository\r\n   changes? Lets say the person serving the Pod from their GitHub\r\n   account, decides to represent themselves under a different handle -\r\n   your Pods URLs are going to break.\r\n - Finally another point. Say if you&#39;re a developer like me who does a lot\r\n   of coding when on a flight between countries.  I do a quick pull on\r\n   the &#39;master&#39; branch, do a pod install on that branch, while sitting\r\n   in the airport and have myself all set for the upcoming 8 hour\r\n   flight. I get 3 hours into my flight, and realise I need to switch to\r\n   another branch.... &#39;DOH&#39; - missing Pod information which is only available on the &#39;master&#39; branch.\r\n\r\n***NB... please note the &#39;master&#39; branch for development is just for examples, obviously &#39;master&#39; branches in version control systems, should be kept clean and deployable/buildable at any time***\r\n\r\nI think from these, snapshots in your code repositories are certainly better than being strict on repository size. And as already mentioned, the podfile.lock file - while version controlled will give you a good history of your Pod versions.\r\n\r\nAt the end of the day, if you have a pressing deadline, a tight budget, time is of the essence - we need to be as resourceful as possible and not waste time on strict ideologies, and instead harness a set of tools to work together - to make our lives easier more efficient. "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1435282756,
          "answer_id": 31063540,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1435282756,
          "body_markdown": "Check in the Pods.\r\n\r\nI think this should be a tenet of software development\r\n\r\n - All builds must be reproducible \r\n - The only way to ensure builds are\r\n   reproducible is to be in control of all dependencies; checking in all\r\n   dependencies is therefore a must.\r\n - A new developer starting from scratch shall be able to check out your project and start working. \r\n\r\nWhy?\r\n\r\nCocoaPods or any other external libraries might change which might break things. Or they might move, or be renamed, or be removed altogether. You can&#39;t rely on the internet to store things for you. Your laptop might have died and there is a critical bug in production that needs to be fixed. The main developer might get hit by a bus and his replacement has to start up in a hurry. And I wish that last one was a theoretical example but it actually happened at a startup I was with. RIP.\r\n\r\nNow, realistically, you can&#39;t really check in ALL dependencies. You can&#39;t check in an image of the machine you used to create builds; you can&#39;t check in the exact version of the compiler. And so on. There are realistic limits. But check in all you can - not doing so just makes your life harder. And we don&#39;t want that.\r\n\r\nFinal word: Pods are not build artifacts. Build artifacts are what gets generated from your builds. Your build uses Pods, not generate them. I&#39;m not even sure why this has to be debated."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1437644111,
          "answer_id": 31583500,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1437644111,
          "body_markdown": "Whether or not you check in your Pods folder is up to you, as workflows vary from project to project. We recommend that you keep the Pods directory under source control, and don&#39;t add it to your .gitignore. But ultimately this decision is up to you:\r\n\r\nBenefits of checking in the Pods directory\r\n\r\n1. After cloning the repo, the project can immediately build and run, even without having CocoaPods installed on the machine. There is no need to run pod install, and no Internet connection is necessary.\r\n2. The Pod artifacts (code/libraries) are always available, even if the source of a Pod (e.g. GitHub) were to go down.\r\n3. The Pod artifacts are guaranteed to be identical to those in the original installation after cloning the repo.\r\n\r\n\r\nBenefits of ignoring the Pods directory\r\n\r\n1. The source control repo will be smaller and take up less space.\r\nAs long as the sources (e.g. GitHub) for all Pods are available, CocoaPods is generally able to recreate the same installation.(Technically there is no guarantee that running pod install will fetch and recreate identical artifacts when not using a commit SHA in the Podfile. This is especially true when using zip files in the Podfile.)\r\n3. There won&#39;t be any conflicts to deal with when performing source control operations, such as merging branches with different Pod versions.\r\nWhether or not you check in the Pods directory, the Podfile and Podfile.lock should always be kept under version control."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439482461,
          "answer_id": 31993455,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1439482461,
          "body_markdown": "At the end is up to you the approach you take.\r\n\r\nThis is what Cocoapods team thinks about it:\r\n\r\n&gt; Whether or not you check in your Pods folder is up to you, as\r\n&gt; workflows vary from project to project. We recommend that you keep the\r\n&gt; Pods directory under source control, and don&#39;t add it to your\r\n&gt; .gitignore. But ultimately this decision is up to you.\r\n\r\nPersonally I&#39;d like to keep *Pods* out, as *node_modules* if I were using *Node* or *bower_components* if I were using *Bower*. This apply for almost any Dependency Manager out there, and is the philosophy behind *git submodules* aswell.\r\n\r\nHowever there are sometimes that you might want to be really sure about the *state-of-art* of a certain dependency, that way you are carry own the dependency within your project. Of-course there are several drawbacks that apply if you do that, but concerns do not only apply to Cocoapods, those applies to any Dependency Manager out there.\r\n\r\nBelow there is a good *pros/cons* list made by Cocoapods team, and the full text of the quote mentioned previously.\r\n\r\n[Cocoapods team: Should I check the Pods directory into source control?][1]\r\n\r\n  [1]: https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453994535,
          "answer_id": 35065359,
          "path": "stack.bower.answer",
          "score": 21,
          "up_vote_count": 21,
          "is_accepted": false,
          "last_activity_date": 1453994535,
          "body_markdown": "#.gitignore file\r\n\r\nNo answer *actually* offers a `.gitignore`, so here are two flavors.\r\n\r\n---\r\n\r\n**Checking in the Pods directory** ([Benefits][1])\r\n\r\nXcode/iOS friendly git ignore, skipping Mac OS system files, Xcode, builds, other repositories and backups.\r\n\r\n**.gitignore:**\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    # Mac OS X Finder\r\n    .DS_Store\r\n\r\n    # Private Keys\r\n    *.pem\r\n\r\n    # Xcode legacy\r\n    *.mode1\r\n    *.mode1v3\r\n    *.mode2v3\r\n    *.perspective\r\n    *.perspectivev3\r\n    *.pbxuser\r\n\r\n    # Xcode\r\n    xcuserdata/\r\n    project.xcworkspace/\r\n    DerivedData/\r\n\r\n    # build products\r\n    build/\r\n    *.[oa]\r\n\r\n    # repositories\r\n    .hg\r\n    .svn\r\n    CVS\r\n\r\n    # automatic backup files\r\n    *~.nib\r\n    *.swp\r\n    *~\r\n    *(Autosaved).rtfd/\r\n    Backup[ ]of[ ]*.pages/\r\n    Backup[ ]of[ ]*.key/\r\n    Backup[ ]of[ ]*.numbers/\r\n \r\n---\r\n\r\n**Ignoring the Pods directory** ([Benefits][2])\r\n\r\n**.gitignore:** *(append to previous list)*\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    # Cocoapods\r\n    Pods/\r\n\r\n&gt;Whether or not you check in the Pods directory, the Podfile and Podfile.lock should always be kept under version control.\r\n\r\nIf `Pods` are not checked-in, your `Podfile` should probably request explicit version numbers for each Cocoapod. Cocoapods.org discussion [here][3].\r\n\r\n\r\n  [1]: https://guides.cocoapods.org/using/using-cocoapods.html#benefits-of-checking-in-the-pods-directory\r\n  [2]: https://guides.cocoapods.org/using/using-cocoapods.html#benefits-of-ignoring-the-pods-directory\r\n  [3]: https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467093284,
          "answer_id": 38068051,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1471054979,
          "last_edit_date": 1471054979,
          "body_markdown": "In theory, you should check in the Pods directory. In practice, it is not always going to work. Many pods well exceed the size limit of github files so if you are using github you are going to have issues checking in the Pods directory. "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1472119439,
          "answer_id": 39142275,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1472119439,
          "body_markdown": "The answer for this is given directly in Cocoapod docs. You may look at &quot;http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control&quot;\r\n\r\n&gt; Whether or not you check in your Pods folder is up to you, as\r\n&gt; workflows vary from project to project. We recommend that you keep the\r\n&gt; Pods directory under source control, and don&#39;t add it to your\r\n&gt; .gitignore. But ultimately this decision is up to you:\r\n&gt; \r\n&gt; **Benefits of checking in the Pods directory**\r\n&gt; \r\n&gt;  - After cloning the repo, the project can immediately build and run, even without having CocoaPods installed on the machine. There is no\r\n&gt; need to run pod install, and no Internet connection is necessary.\r\n&gt;  - The Pod artifacts (code/libraries) are always available, even if the source of a Pod (e.g. GitHub) were to go down.\r\n&gt;  - The Pod artifacts are guaranteed to be identical to those in the original installation after cloning the repo.\r\n&gt; \r\n&gt; **Benefits of ignoring the Pods directory**\r\n&gt; \r\n&gt;  - The source control repo will be smaller and take up less space.\r\n&gt; \r\n&gt;  - As long as the sources (e.g. GitHub) for all Pods are available, CocoaPods is generally able to recreate the same installation.\r\n&gt; (Technically there is no guarantee that running pod install will fetch\r\n&gt; and recreate identical artifacts when not using a commit SHA in the\r\n&gt; Podfile. This is especially true when using zip files in the Podfile.)\r\n&gt; \r\n&gt;  - There won&#39;t be any conflicts to deal with when performing source control operations, such as merging branches with different Pod\r\n&gt; versions.\r\n&gt; \r\n&gt; Whether or not you check in the Pods directory, the Podfile and\r\n&gt; Podfile.lock should always be kept under version control."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1505994097,
          "answer_id": 46343047,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1519313386,
          "last_edit_date": 1519313386,
          "body_markdown": "It depends, personally:\r\n\r\n## Why pods should be part of the repo (under source control) and should not be ignored\r\n\r\n- The source is identical\r\n- You can build it right away as is *(even without the cocoapods)*\r\n- Even if a pod is deleted, we still have its copy *(Yes, this can happen and it did. In an old project where you want just a small change you would need to implement a new library to be able to even build).*\r\n- `pods.xcodeproj` settings are part of the source control as well. This means e.g. if you have the project in `swift 4`, but some pods must be in `swift 3.2` because they are not updated yet, these settings will be saved. Otherwise the one who cloned the repo would end up with errors.\r\n- You can always delete pods from the project and run `pod install`, the opposite can not be done.\r\n- Even the **authors** of the Cocoapods recommend it.\r\n\r\n\r\n**Some cons: larger repository, confusing diffs (mainly for team members), potentially more conflicts.**"
        }
      ],
      "creation_date": 1330193574,
      "body_markdown": "I&#39;ve been doing iOS development for a couple of months now and just learned of the promising [CocoaPods][1] library for dependency management.\r\n\r\nI tried it out on a personal project: added a dependency to [Kiwi][2] to my Podfile, ran `pod install CocoaPodsTest.xcodeproj`, and *voila*, it worked great.\r\n\r\nThe only thing I&#39;m left wondering is: what do I check in, and what do I ignore for version control? It seems obvious that I want to check in the Podfile itself, and probably the .xcworkspace file as well; but do I ignore the Pods/ directory? Are there other files that will be generated down the road (when I add other dependencies) that I should also add to my .gitignore?\r\n\r\n  [1]: http://cocoapods.org/\r\n  [2]: https://github.com/allending/Kiwi",
      "title": "What goes into your .gitignore if you&#39;re using CocoaPods?",
      "view_count": 78472,
      "up_vote_count": 337,
      "answer_count": 17,
      "link": "https://stackoverflow.com/questions/9446644/what-goes-into-your-gitignore-if-youre-using-cocoapods",
      "code_snippet": [
        "<code>pod install CocoaPodsTest.xcodeproj</code>",
        "<code>Podfile.lock</code>",
        "<code>Pods</code>",
        "<code>Podfile</code>",
        "<code>pod install</code>",
        "<code>Podfile</code>",
        "<code>Podfile.lock</code>",
        "<code>:path</code>",
        "<code>./Pods</code>",
        "<code>:head</code>",
        "<code>:git</code>",
        "<code>Podfile.lock</code>",
        "<code>.gitignore</code>",
        "<code># Mac OS X Finder\n.DS_Store\n\n# Private Keys\n*.pem\n\n# Xcode legacy\n*.mode1\n*.mode1v3\n*.mode2v3\n*.perspective\n*.perspectivev3\n*.pbxuser\n\n# Xcode\nxcuserdata/\nproject.xcworkspace/\nDerivedData/\n\n# build products\nbuild/\n*.[oa]\n\n# repositories\n.hg\n.svn\nCVS\n\n# automatic backup files\n*~.nib\n*.swp\n*~\n*(Autosaved).rtfd/\nBackup[ ]of[ ]*.pages/\nBackup[ ]of[ ]*.key/\nBackup[ ]of[ ]*.numbers/\n</code>",
        "<code># Cocoapods\nPods/\n</code>",
        "<code>Pods</code>",
        "<code>Podfile</code>",
        "<code>Pods/</code>",
        "<code>Podfile.lock</code>",
        "<code>Pods/\n#Podfile.lock  # changed my mind on Podfile.lock\n</code>",
        "<code>Podfile.lock</code>",
        "<code>Podfile.lock</code>",
        "<code>Podfile.lock</code>",
        "<code>Podfile</code>",
        "<code>Podfile.lock</code>",
        "<code>Pods</code>",
        "<code>Podfile</code>",
        "<code>Podfile.lock</code>",
        "<code>xcuserdata/\n</code>",
        "<code>pods.xcodeproj</code>",
        "<code>swift 4</code>",
        "<code>swift 3.2</code>",
        "<code>pod install</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "angularjs",
        "angular-cookies"
      ],
      "creation_date": 1339253448,
      "body_markdown": "What&#39;s the AngularJS way to access cookies?  I&#39;ve seen references to both a service and a module for cookies, but no examples.  \r\n\r\nIs there, or is there not an AngularJS canonical approach?",
      "last_edit_date": 1370808569,
      "up_vote_count": 229,
      "link": "https://stackoverflow.com/questions/10961963/how-to-access-cookies-in-angularjs",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1339274435,
          "answer_id": 10964442,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1358989648,
          "last_edit_date": 1358989648,
          "body_markdown": "[http://docs.angularjs.org/api/ngCookies.$cookieStore](http://docs.angularjs.org/api/ngCookies.$cookieStore)\r\n\r\nMake sure you include http://code.angularjs.org/1.0.0rc10/angular-cookies-1.0.0rc10.js to use it."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1339440444,
          "answer_id": 10985815,
          "path": "stack.bower.answer",
          "score": 194,
          "up_vote_count": 195,
          "is_accepted": true,
          "last_activity_date": 1475170114,
          "last_edit_date": 1475170114,
          "body_markdown": "This answer has been updated to reflect latest stable angularjs version. One important note is that `$cookieStore` is a thin wrapper surrounding `$cookies`. They are pretty much the same in that they only work with session cookies. Although, this answers the original question, there are other solutions you may wish to consider such as using localstorage, or jquery.cookie plugin (which would give you more fine-grained control and do serverside cookies. Of course doing so in angularjs means you probably would want to wrap them in a service and use `$scope.apply` to notify angular of changes to models (in some cases).\r\n\r\nOne other note and that is that there is a slight difference between the two when pulling data out depending on if you used `$cookie` to store value or `$cookieStore`. Of course, you&#39;d really want to use one or the other.\r\n\r\nIn addition to adding reference to the js file you need to inject `ngCookies` into your app definition such as: \r\n\r\n    angular.module(&#39;myApp&#39;, [&#39;ngCookies&#39;]);\r\n\r\nyou should then be good to go.\r\n\r\nHere is a functional minimal example, where I show that `cookieStore` is a thin wrapper around cookies:\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html ng-app=&quot;myApp&quot;&gt;\r\n    &lt;head&gt;\r\n       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;&gt;\r\n    &lt;/head&gt;\r\n    &lt;body ng-controller=&quot;MyController&quot;&gt;\r\n\r\n      &lt;h3&gt;Cookies&lt;/h3&gt;\r\n      &lt;pre&gt;{{usingCookies|json}}&lt;/pre&gt;\r\n      &lt;h3&gt;Cookie Store&lt;/h3&gt;\r\n      &lt;pre&gt;{{usingCookieStore|json}}&lt;/pre&gt;\r\n\r\n      &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular-cookies.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script&gt;\r\n        angular.module(&#39;myApp&#39;, [&#39;ngCookies&#39;]);\r\n        app.controller(&#39;MyController&#39;,[&#39;$scope&#39;,&#39;$cookies&#39;,&#39;$cookieStore&#39;, \r\n                           function($scope,$cookies,$cookieStore) {\r\n          var someSessionObj = { &#39;innerObj&#39; : &#39;somesessioncookievalue&#39;};\r\n        \r\n        $cookies.dotobject = someSessionObj;\r\n        $scope.usingCookies = { &#39;cookies.dotobject&#39; : $cookies.dotobject, &quot;cookieStore.get&quot; : $cookieStore.get(&#39;dotobject&#39;) };\r\n        \r\n        $cookieStore.put(&#39;obj&#39;, someSessionObj);\r\n        $scope.usingCookieStore = { &quot;cookieStore.get&quot; : $cookieStore.get(&#39;obj&#39;), &#39;cookies.dotobject&#39; : $cookies.obj, };\r\n        }\r\n      &lt;/script&gt;\r\n\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\nThe steps are:\r\n\r\n1. include `angular.js`\r\n2. include `angular-cookies.js`\r\n3. inject `ngCookies` into your app module (and make sure you reference that module in the `ng-app` attribute)\r\n4. add a `$cookies` or `$cookieStore` parameter to the controller\r\n5. access the cookie as a member variable using the dot (.) operator\r\n-- OR --\r\n6. access `cookieStore` using put/get methods\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1365095923,
          "answer_id": 15817642,
          "path": "stack.bower.answer",
          "score": 69,
          "up_vote_count": 69,
          "is_accepted": false,
          "last_activity_date": 1365095923,
          "body_markdown": "This is how you can set and get cookie values. This is what I was originally looking for when I found this question.\r\n\r\nNote we use `$cookieStore` instead of `$cookies`\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html ng-app=&quot;myApp&quot;&gt;\r\n    &lt;head&gt;\r\n      &lt;script src=&quot;http://code.angularjs.org/1.0.0rc10/angular-1.0.0rc10.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script src=&quot;http://code.angularjs.org/1.0.0rc10/angular-cookies-1.0.0rc10.js&quot;&gt;&lt;/script&gt;\r\n      &lt;script&gt;\r\n        angular.module(&#39;myApp&#39;, [&#39;ngCookies&#39;]);\r\n        function CookieCtrl($scope, $cookieStore) {\r\n          $scope.lastVal = $cookieStore.get(&#39;tab&#39;);\r\n         \r\n          $scope.changeTab = function(tabName){\r\n              $scope.lastVal = tabName;\r\n              $cookieStore.put(&#39;tab&#39;, tabName);\r\n          };\r\n        }\r\n      &lt;/script&gt;\r\n    &lt;/head&gt;\r\n    &lt;body ng-controller=&quot;CookieCtrl&quot;&gt;\r\n        &lt;!-- ... --&gt;\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1373557642,
          "answer_id": 17597902,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1477400783,
          "last_edit_date": 1477400783,
          "body_markdown": "FYI, I put together a JSFiddle of this using the `$cookieStore`, two controllers, a `$rootScope`, and AngularjS 1.0.6. It&#39;s on JSFifddle as http://jsfiddle.net/krimple/9dSb2/ as a base if you&#39;re messing around with this...\r\n\r\nThe gist of it is:\r\n\r\n**Javascript**\r\n\r\n    var myApp = angular.module(&#39;myApp&#39;, [&#39;ngCookies&#39;]);\r\n    \r\n    myApp.controller(&#39;CookieCtrl&#39;, function ($scope, $rootScope, $cookieStore) {\r\n        $scope.bump = function () {\r\n            var lastVal = $cookieStore.get(&#39;lastValue&#39;);\r\n            if (!lastVal) {\r\n                $rootScope.lastVal = 1;\r\n            } else {\r\n                $rootScope.lastVal = lastVal + 1;\r\n            }\r\n            $cookieStore.put(&#39;lastValue&#39;, $rootScope.lastVal);\r\n        }\r\n    });\r\n    \r\n    myApp.controller(&#39;ShowerCtrl&#39;, function () {\r\n    });\r\n\r\n**HTML**\r\n\r\n    &lt;div ng-app=&quot;myApp&quot;&gt;\r\n        &lt;div id=&quot;lastVal&quot; ng-controller=&quot;ShowerCtrl&quot;&gt;{{ lastVal }}&lt;/div&gt;\r\n        &lt;div id=&quot;button-holder&quot; ng-controller=&quot;CookieCtrl&quot;&gt;\r\n            &lt;button ng-click=&quot;bump()&quot;&gt;Bump!&lt;/button&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431467683,
          "answer_id": 30202101,
          "path": "stack.bower.answer",
          "score": 40,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1433759560,
          "last_edit_date": 1495542398,
          "body_markdown": "Angular **deprecated** `$cookieStore` in version 1.4.x, so use `$cookies` instead if you are using latest version of angular. Syntax remain same for `$cookieStore` &amp; `$cookies`:  \r\n \r\n    $cookies.put(&quot;key&quot;, &quot;value&quot;); \r\n    var value = $cookies.get(&quot;key&quot;);\r\n\r\nSee the [Docs](https://docs.angularjs.org/api/ngCookies/service/$cookies) for an API overview. Mind also that the cookie service has been enhanced with some new important features like setting expiration (see [this answer](https://stackoverflow.com/a/28854854/1446845)) and domain (see [CookiesProvider Docs](https://docs.angularjs.org/api/ngCookies/provider/$cookiesProvider#defaults)).\r\n\r\nNote that, in version 1.3.x or below, $cookies has a different syntax than above: \r\n\r\n    $cookies.key = &quot;value&quot;;\r\n    var value = $cookies.value; \r\n\r\nAlso if you are using bower, make sure to type your package name correctly: \r\n\r\n    bower install angular-cookies@X.Y.Z \r\n\r\nwhere X.Y.Z is the AngularJS version you are running. \r\nThere&#39;s another package in bower &quot;angular-cookie&quot;(without the &#39;s&#39;) which is not the official angular package. "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1443755981,
          "answer_id": 32900076,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1443755981,
          "body_markdown": "AngularJS provides ngCookies module and $cookieStore service to use Browser Cookies.\r\n\r\nWe need to add angular-cookies.min.js file to use cookie feature.\r\n\r\nHere is some method of AngularJS Cookie.\r\n \r\n    \r\n\r\n - get(key); // This method returns the value of given cookie key.\r\n    \r\n - getObject(key); //This method returns the deserialized value of given\r\n   cookie key.\r\n\r\n - getAll(); //This method returns a key value object with all the\r\n   cookies.\r\n\r\n - put(key, value, [options]); //This method sets a value for given\r\n   cookie key.\r\n\r\n - remove(key, [options]); //This method remove given cookie.\r\n\r\n**Example** \r\n\r\n**Html**\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html ng-app=&quot;myApp&quot;&gt;\r\n    &lt;head&gt;\r\n    &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.1/angular.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.1/angular-cookies.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n    &lt;body ng-controller=&quot;MyController&quot;&gt;\r\n    {{cookiesUserName}} loves {{cookietechnology}}.\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n**JavaScript**\r\n\r\n    var myApp = angular.module(&#39;myApp&#39;, [&#39;ngCookies&#39;]);\r\n    myApp.controller(&#39;MyController&#39;, [&#39;$scope&#39;, &#39;$cookies&#39;, &#39;$cookieStore&#39;, &#39;$window&#39;, function($scope, $cookies, $cookieStore, $window) {\r\n    $cookies.userName = &#39;Max Joe&#39;;\r\n    $scope.cookiesUserName = $cookies.userName;\r\n    $cookieStore.put(&#39;technology&#39;, &#39;Web&#39;);\r\n    $scope.cookietechnology = $cookieStore.get(&#39;technology&#39;); }]);\r\n\r\n\r\nI have Taken reference from http://www.tutsway.com/simple-example-of-cookie-in-angular-js.php.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444510574,
          "answer_id": 33058901,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1455413106,
          "last_edit_date": 1455413106,
          "body_markdown": "The original accepted answer mentions [jquery.cookie plugin](https://github.com/carhartl/jquery-cookie). A few months ago though, it was renamed to [js-cookie](https://github.com/js-cookie/js-cookie) and the jQuery dependency removed. One of the reasons was just to make it easy to integrate with other frameworks, like Angular.\r\n\r\nNow, if you want to integrate [js-cookie](https://github.com/js-cookie/js-cookie) with angular, it is as easy as something like:\r\n\r\n    module.factory( &quot;cookies&quot;, function() {\r\n      return Cookies.noConflict();\r\n    });\r\n\r\nAnd that&#39;s it. No jQuery. No ngCookies.\r\n\r\n-------\r\n\r\nYou can also create custom instances to handle specific server-side cookies that are written differently. Take for example PHP, that convert the spaces ` ` in the server-side to a plus sign `+` instead of also percent-encode it:\r\n\r\n    module.factory( &quot;phpCookies&quot;, function() {\r\n      return Cookies\r\n        .noConflict()\r\n        .withConverter(function( value, name ) {\r\n          return value\r\n                // Decode all characters according to the &quot;encodeURIComponent&quot; spec\r\n                .replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent)\r\n                // Decode the plus sign to spaces\r\n                .replace(/\\+/g, &#39; &#39;)\r\n        });\r\n    });\r\n\r\nThe usage for a custom Provider would be something like this:\r\n\r\n    module.service( &quot;customDataStore&quot;, [ &quot;phpCookies&quot;, function( phpCookies ) {\r\n      this.storeData = function( data ) {\r\n        phpCookies.set( &quot;data&quot;, data );\r\n      };\r\n      this.containsStoredData = function() {\r\n        return phpCookies.get( &quot;data&quot; );\r\n      }\r\n    }]);\r\n\r\nI hope this helps anyone.\r\n\r\nSee detailed info in this issue: https://github.com/js-cookie/js-cookie/issues/103\r\n\r\nFor detailed docs on how to integrate with server-side, see here: https://github.com/js-cookie/js-cookie/blob/master/SERVER_SIDE.md"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1480485671,
          "answer_id": 40881364,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1480485988,
          "last_edit_date": 1480485988,
          "body_markdown": "Add angular cookie lib : angular-cookies.js\r\n\r\nYou can use $cookies or $cookieStore parameter to the respective controller\r\n\r\nMain controller add this inject &#39;ngCookies&#39;:\r\n\r\n    angular.module(&quot;myApp&quot;, [&#39;ngCookies&#39;]);\r\n\r\nUse Cookies in your controller like this way:\r\n\r\n \r\n\r\n     app.controller(&#39;checkoutCtrl&#39;, function ($scope, $rootScope, $http, $state, $cookies) { \r\n\r\n    //store cookies\r\n\r\n     $cookies.putObject(&#39;final_total_price&#39;, $rootScope.fn_pro_per);\r\n\r\n    //Get cookies\r\n\r\n     $cookies.getObject(&#39;final_total_price&#39;); }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1490023210,
          "answer_id": 42907409,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1490023210,
          "body_markdown": "Here&#39;s a simple example using $cookies. After clicking on button, the cookie is saved, and then restored after page is reloaded.\r\n\r\napp.html:\r\n\r\n    &lt;html ng-app=&quot;app&quot;&gt;\r\n    &lt;head&gt;\r\n    \t&lt;meta charset=&quot;utf-8&quot; /&gt;\r\n    \t&lt;script src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.3/angular.js&quot;&gt;&lt;/script&gt;\r\n    \t&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/angularjs/1.6.3/angular-cookies.js&quot;&gt;&lt;/script&gt;\r\n    \t&lt;script src=&quot;app.js&quot;&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n    &lt;body ng-controller=&quot;appController as vm&quot;&gt;\r\n    \r\n    \t&lt;input type=&quot;text&quot; ng-model=&quot;vm.food&quot; placeholder=&quot;Enter food&quot; /&gt;\r\n    \r\n    \t&lt;p&gt;My favorite food is {{vm.food}}.&lt;/p&gt;\r\n    \r\n    \t&lt;p&gt;Open new window, then press Back button.&lt;/p&gt;\r\n    \t&lt;button ng-click=&quot;vm.openUrl()&quot;&gt;Open&lt;/button&gt;\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n\r\napp.js:\r\n\r\n\r\n    (function () {\r\n    \t&quot;use strict&quot;;\r\n    \r\n    \tangular.module(&#39;app&#39;, [&#39;ngCookies&#39;])\r\n    \t.controller(&#39;appController&#39;, [&#39;$cookies&#39;, &#39;$window&#39;, function ($cookies, $window) {\r\n    \t\tvar vm = this;\r\n    \r\n    \t\t//get cookie\r\n    \t\tvm.food = $cookies.get(&#39;myFavorite&#39;);\r\n    \r\n    \t\tvm.openUrl = function () {\r\n    \t\t\t//save cookie\r\n    \t\t\t$cookies.put(&#39;myFavorite&#39;, vm.food);\r\n    \t\t\t$window.open(&quot;http://www.google.com&quot;, &quot;_self&quot;);\r\n    \t\t};\r\n    \t}]);\r\n    \r\n    })();"
        }
      ],
      "title": "How to access cookies in AngularJS?",
      "view_count": 230673,
      "answer_count": 9,
      "code_snippet": [
        "<code>$cookieStore</code>",
        "<code>$cookies</code>",
        "<code>$scope.apply</code>",
        "<code>$cookie</code>",
        "<code>$cookieStore</code>",
        "<code>ngCookies</code>",
        "<code>angular.module('myApp', ['ngCookies']);\n</code>",
        "<code>cookieStore</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html ng-app=\"myApp\"&gt;\n&lt;head&gt;\n   &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\"&gt;\n&lt;/head&gt;\n&lt;body ng-controller=\"MyController\"&gt;\n\n  &lt;h3&gt;Cookies&lt;/h3&gt;\n  &lt;pre&gt;{{usingCookies|json}}&lt;/pre&gt;\n  &lt;h3&gt;Cookie Store&lt;/h3&gt;\n  &lt;pre&gt;{{usingCookieStore|json}}&lt;/pre&gt;\n\n  &lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular-cookies.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n    angular.module('myApp', ['ngCookies']);\n    app.controller('MyController',['$scope','$cookies','$cookieStore', \n                       function($scope,$cookies,$cookieStore) {\n      var someSessionObj = { 'innerObj' : 'somesessioncookievalue'};\n\n    $cookies.dotobject = someSessionObj;\n    $scope.usingCookies = { 'cookies.dotobject' : $cookies.dotobject, \"cookieStore.get\" : $cookieStore.get('dotobject') };\n\n    $cookieStore.put('obj', someSessionObj);\n    $scope.usingCookieStore = { \"cookieStore.get\" : $cookieStore.get('obj'), 'cookies.dotobject' : $cookies.obj, };\n    }\n  &lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>angular.js</code>",
        "<code>angular-cookies.js</code>",
        "<code>ngCookies</code>",
        "<code>ng-app</code>",
        "<code>$cookies</code>",
        "<code>$cookieStore</code>",
        "<code>cookieStore</code>",
        "<code>$cookieStore</code>",
        "<code>$cookies</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html ng-app=\"myApp\"&gt;\n&lt;head&gt;\n  &lt;script src=\"http://code.angularjs.org/1.0.0rc10/angular-1.0.0rc10.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"http://code.angularjs.org/1.0.0rc10/angular-cookies-1.0.0rc10.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n    angular.module('myApp', ['ngCookies']);\n    function CookieCtrl($scope, $cookieStore) {\n      $scope.lastVal = $cookieStore.get('tab');\n\n      $scope.changeTab = function(tabName){\n          $scope.lastVal = tabName;\n          $cookieStore.put('tab', tabName);\n      };\n    }\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-controller=\"CookieCtrl\"&gt;\n    &lt;!-- ... --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>$cookieStore</code>",
        "<code>$cookies</code>",
        "<code>$cookieStore</code>",
        "<code>$cookies</code>",
        "<code>$cookies.put(\"key\", \"value\"); \nvar value = $cookies.get(\"key\");\n</code>",
        "<code>$cookies.key = \"value\";\nvar value = $cookies.value; \n</code>",
        "<code>bower install angular-cookies@X.Y.Z \n</code>",
        "<code>$cookieStore</code>",
        "<code>$rootScope</code>",
        "<code>var myApp = angular.module('myApp', ['ngCookies']);\n\nmyApp.controller('CookieCtrl', function ($scope, $rootScope, $cookieStore) {\n    $scope.bump = function () {\n        var lastVal = $cookieStore.get('lastValue');\n        if (!lastVal) {\n            $rootScope.lastVal = 1;\n        } else {\n            $rootScope.lastVal = lastVal + 1;\n        }\n        $cookieStore.put('lastValue', $rootScope.lastVal);\n    }\n});\n\nmyApp.controller('ShowerCtrl', function () {\n});\n</code>",
        "<code>&lt;div ng-app=\"myApp\"&gt;\n    &lt;div id=\"lastVal\" ng-controller=\"ShowerCtrl\"&gt;{{ lastVal }}&lt;/div&gt;\n    &lt;div id=\"button-holder\" ng-controller=\"CookieCtrl\"&gt;\n        &lt;button ng-click=\"bump()\"&gt;Bump!&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code>",
        "<code>$cookieStore</code>",
        "<code>function AccountCtrl($scope, $cookieStore)</code>",
        "<code>$cookieStore</code>",
        "<code>$cookies</code>",
        "<code>https://ajax.googleapis.com/ajax/libs/angularjs/1.0.1/angular-cookies.min.js</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html ng-app=\"myApp\"&gt;\n&lt;head&gt;\n&lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.1/angular.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.1/angular-cookies.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-controller=\"MyController\"&gt;\n{{cookiesUserName}} loves {{cookietechnology}}.\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>var myApp = angular.module('myApp', ['ngCookies']);\nmyApp.controller('MyController', ['$scope', '$cookies', '$cookieStore', '$window', function($scope, $cookies, $cookieStore, $window) {\n$cookies.userName = 'Max Joe';\n$scope.cookiesUserName = $cookies.userName;\n$cookieStore.put('technology', 'Web');\n$scope.cookietechnology = $cookieStore.get('technology'); }]);\n</code>",
        "<code>angular.module(\"myApp\", ['ngCookies']);\n</code>",
        "<code> app.controller('checkoutCtrl', function ($scope, $rootScope, $http, $state, $cookies) { \n\n//store cookies\n\n $cookies.putObject('final_total_price', $rootScope.fn_pro_per);\n\n//Get cookies\n\n $cookies.getObject('final_total_price'); }\n</code>",
        "<code>module.factory( \"cookies\", function() {\n  return Cookies.noConflict();\n});\n</code>",
        "<code></code>",
        "<code>+</code>",
        "<code>module.factory( \"phpCookies\", function() {\n  return Cookies\n    .noConflict()\n    .withConverter(function( value, name ) {\n      return value\n            // Decode all characters according to the \"encodeURIComponent\" spec\n            .replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent)\n            // Decode the plus sign to spaces\n            .replace(/\\+/g, ' ')\n    });\n});\n</code>",
        "<code>module.service( \"customDataStore\", [ \"phpCookies\", function( phpCookies ) {\n  this.storeData = function( data ) {\n    phpCookies.set( \"data\", data );\n  };\n  this.containsStoredData = function() {\n    return phpCookies.get( \"data\" );\n  }\n}]);\n</code>",
        "<code>&lt;html ng-app=\"app\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.6.3/angular.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.6.3/angular-cookies.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-controller=\"appController as vm\"&gt;\n\n    &lt;input type=\"text\" ng-model=\"vm.food\" placeholder=\"Enter food\" /&gt;\n\n    &lt;p&gt;My favorite food is {{vm.food}}.&lt;/p&gt;\n\n    &lt;p&gt;Open new window, then press Back button.&lt;/p&gt;\n    &lt;button ng-click=\"vm.openUrl()\"&gt;Open&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>(function () {\n    \"use strict\";\n\n    angular.module('app', ['ngCookies'])\n    .controller('appController', ['$cookies', '$window', function ($cookies, $window) {\n        var vm = this;\n\n        //get cookie\n        vm.food = $cookies.get('myFavorite');\n\n        vm.openUrl = function () {\n            //save cookie\n            $cookies.put('myFavorite', vm.food);\n            $window.open(\"http://www.google.com\", \"_self\");\n        };\n    }]);\n\n})();\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "ecmascript-6",
        "bower",
        "js-amd",
        "es2015"
      ],
      "creation_date": 1395871481,
      "body_markdown": "I am creating my first Bower component. After running `bower init` the script asks me &#39;what types of modules does this package expose?&#39; with these options:\r\n\r\n - amd \r\n - es6 \r\n - globals \r\n - node\r\n\r\nwhat is the difference between these options?",
      "last_edit_date": 1451034477,
      "up_vote_count": 289,
      "link": "https://stackoverflow.com/questions/22674018/bower-init-difference-between-amd-es6-globals-and-node",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1395913345,
          "answer_id": 22683614,
          "path": "stack.bower.answer",
          "score": 121,
          "up_vote_count": 121,
          "is_accepted": true,
          "last_activity_date": 1451159938,
          "last_edit_date": 1451159938,
          "body_markdown": "If you don&#39;t know, it&#39;s quite likely globals is the right answer for you.\r\n\r\nEither way, you need to understand:\r\n\r\n * [what is and why AMD][1]\r\n * [what is a nodejs module][2]\r\n * [what is ecmascript 6 and especially es6 modules][3]\r\n\r\n## [UPDATE]\r\n\r\nThis feature was introduced very recently in bower and is not documented at all yet (AFAIK). It essentially describes the `moduleType`, which states for what module technology the package is meant to be consumed (see above).\r\n\r\nRight now, It doesn&#39;t have any effect apart from setting the `moduleType` property in the `bower.json` file of the package.\r\n\r\nSee https://github.com/bower/bower/pull/934 for the original pull-request.\r\n\r\n## [UPDATE #2]\r\n\r\nA few additional points, to answer comments:\r\n\r\n * right now AFAIK there is no validation done on the `moduleType` property - which means that people are technically allowed to use whatever value they want for it, including `angularjs` if they feel inclined to do so\r\n * the [bower committee][4] seems to not be keen toward the inclusion of additional `non-interoperable/proprietary moduleTypes` (think composer, angular, etc) - which is easily understandable, but yet again, nothing really prevents people from using the `moduleType` value they want\r\n * an exception to the previous is the (somewhat) recent inclusion of the `yui moduleType`, so, there are &quot;exceptions&quot; to be made, assuming they are [part of a concerted plan][5]\r\n\r\nWhat I would do if I were to author a package for a not-listed package manager and publish it on bower?\r\n\r\nI would author an es6 module, and use / patch [es6-transpiler][6] to output the package format I need. Then I would either/and:\r\n\r\n * petition the bower guys to include my package technology as a choice (based on the fact it&#39;s supported by es6-transpiler as a target)\r\n * publish my package including both the es6 module version of it and the transpiled XXX version of it, and use `es6` as a `moduleType`\r\n\r\nDisclaimer: I don&#39;t have real-life experience authoring angularjs modules.\r\n\r\n  [1]: http://requirejs.org/docs/whyamd.html\r\n  [2]: http://nodejs.org/api/modules.html\r\n  [3]: http://wiki.ecmascript.org/doku.php?id=harmony:modules\r\n  [4]: https://github.com/bower/bower/pull/1129#issuecomment-37359448\r\n  [5]: https://github.com/bower/bower/pull/1129#issuecomment-37828996\r\n  [6]: https://github.com/square/es6-module-transpiler"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1415270396,
          "answer_id": 26777353,
          "path": "stack.bower.answer",
          "score": 27,
          "up_vote_count": 28,
          "is_accepted": false,
          "last_activity_date": 1457600094,
          "last_edit_date": 1457600094,
          "body_markdown": "## Initial\r\n\r\nI&#39;m using `bower init` for first time too.\r\n\r\nThe options should refer to the different ways to modularize some JavaScript code:\r\n\r\n* amd: using AMD `define`, like requirejs.\r\n* node: using Node.js `require`.\r\n* globals: using JavaScript module pattern to expose a global variable (like window.JQuery).\r\n* es6: using upcoming EcmaScript6 module feature.\r\n\r\nIn my case I wrote a Node.js module [dflow][1] but I&#39;m using browserify to create a *dist/dflow.js* file that exports a global *dflow* var: so I selected **globals**.\r\n\r\n## Other Updates\r\n\r\nThe command I used to browserify [dflow][1] as a *window* global object was\r\n\r\n```\r\nbrowserify -s dflow -e index.js -o dist/dflow.js\r\n```\r\n\r\nI changed it cause I prefer to use *require* also inside the browser, so now I am using\r\n\r\n```\r\nbrowserify -r ./index.js:dflow -o dist/dflow.js\r\n```\r\n\r\nand so I changed the *bower.moduleType* to **node** in my *bower.json* file.\r\n\r\nThe main motivation was that if my module name has a dash, for example my project [flow-view][2], I need to *camelize* the global name in *flowView*.\r\n\r\nThis new approach has two other benefits:\r\n\r\n1. Node and browser interface are the same. Using *require* on both client side and server side, let me write only once the code examples, and reuse them easily on both contexts.\r\n2. I use npm scripts and so, I can take advantage of `${npm_package_name}` variable and write once the script I use to browserify.\r\n\r\nThis is another topic, but, it is really worth that you consider how it is useful the latter benefit: let me share the `npm.scripts.browserify` attribute I use in my *package.json* \r\n\r\n`&quot;browserify&quot;: &quot;browserify -r ./index.js:${npm_package_name} -o dist/${npm_package_name}.js&quot;`\r\n\r\n  [1]: http://g14n.info/dflow &quot;dflow&quot;\r\n  [2]: http://g14n.info/flow-view &quot;flow-view&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1454934339,
          "answer_id": 35269660,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1454934339,
          "body_markdown": "Just for reference, this is precisely what bower specifies regarding the module types:\r\n\r\n&gt; The type of module defined in the `main` JavaScript file. Can be one or an array of the following strings:\r\n\r\n&gt; - `globals`: JavaScript module that adds to global namespace, using `window.namespace` or `this.namespace` syntax\r\n&gt; - `amd`: JavaScript module compatible with AMD, like [RequireJS][1], using `define()` syntax\r\n&gt; - `node`: JavaScript module compatible with [node][2] and [CommonJS][3] using `module.exports` syntax\r\n&gt; - `es6`: JavaScript module compatible with [ECMAScript 6 modules][4], using `export` and `import` syntax\r\n&gt; - `yui`: JavaScript module compatible with [YUI Modules][5], using `YUI.add()` syntax\r\n\r\nRelevant link: https://github.com/bower/spec/blob/master/json.md#moduletype\r\n\r\n\r\n  [1]: http://requirejs.org/\r\n  [2]: https://nodejs.org/\r\n  [3]: https://nodejs.org/docs/latest/api/modules.html\r\n  [4]: http://www.2ality.com/2014/09/es6-modules-final.html\r\n  [5]: http://yuilibrary.com/yui/docs/yui/create.html"
        }
      ],
      "title": "bower init - difference between amd, es6, globals and node",
      "view_count": 33908,
      "answer_count": 3,
      "code_snippet": [
        "<code>bower init</code>",
        "<code>moduleType</code>",
        "<code>moduleType</code>",
        "<code>bower.json</code>",
        "<code>moduleType</code>",
        "<code>angularjs</code>",
        "<code>non-interoperable/proprietary moduleTypes</code>",
        "<code>moduleType</code>",
        "<code>yui moduleType</code>",
        "<code>es6</code>",
        "<code>moduleType</code>",
        "<code>angularjs</code>",
        "<code>globals</code>",
        "<code>bower init</code>",
        "<code>define</code>",
        "<code>require</code>",
        "<code>\nbrowserify -s dflow -e index.js -o dist/dflow.js\n</code>",
        "<code>\nbrowserify -r ./index.js:dflow -o dist/dflow.js\n</code>",
        "<code>${npm_package_name}</code>",
        "<code>npm.scripts.browserify</code>",
        "<code>\"browserify\": \"browserify -r ./index.js:${npm_package_name} -o dist/${npm_package_name}.js\"</code>",
        "<code>define(function(require, exports, module) {   \"use strict\";    module.exports = {     Collection: require(\"./collection\"),     View: require('./view')   }; });</code>",
        "<code>main</code>",
        "<code>globals</code>",
        "<code>window.namespace</code>",
        "<code>this.namespace</code>",
        "<code>amd</code>",
        "<code>define()</code>",
        "<code>node</code>",
        "<code>module.exports</code>",
        "<code>es6</code>",
        "<code>export</code>",
        "<code>import</code>",
        "<code>yui</code>",
        "<code>YUI.add()</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "build",
        "build-automation",
        "gruntjs"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1347627092,
          "answer_id": 12424966,
          "path": "stack.bower.answer",
          "score": 34,
          "up_vote_count": 34,
          "is_accepted": true,
          "last_activity_date": 1355612307,
          "last_edit_date": 1355612307,
          "body_markdown": "I&#39;ve come up with my own solution. Not polished yet but I think I&#39;m going to move in that direction.\r\n\r\nIn essense, I&#39;m using [grunt.template.process()](https://github.com/cowboy/grunt/blob/master/docs/api_template.md) to generate my `index.html` from a template that analyzes current configuration and produces either a list of my original source files or links to a single file with minified code. The below example is for js files but the same approach can be extended to css and any other possible text files.\r\n\r\n**`grunt.js`:**\r\n\r\n    /*global module:false*/\r\n    module.exports = function(grunt) {\r\n        var   // js files\r\n            jsFiles = [\r\n                  &#39;src/module1.js&#39;,\r\n                  &#39;src/module2.js&#39;,\r\n                  &#39;src/module3.js&#39;,\r\n                  &#39;src/awesome.js&#39;\r\n                ];\r\n          \r\n        // Import custom tasks (see index task below)\r\n        grunt.loadTasks( &quot;build/tasks&quot; );\r\n    \r\n        // Project configuration.\r\n        grunt.initConfig({\r\n          pkg: &#39;&lt;json:package.json&gt;&#39;,\r\n          meta: {\r\n            banner: &#39;/*! &lt;%= pkg.name %&gt; - v&lt;%= pkg.version %&gt; - &#39; +\r\n              &#39;&lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */&#39;\r\n          },\r\n          \r\n          jsFiles: jsFiles,\r\n          \r\n          // file name for concatenated js\r\n          concatJsFile: &#39;&lt;%= pkg.name %&gt;-all.js&#39;,\r\n          \r\n          // file name for concatenated &amp; minified js\r\n          concatJsMinFile: &#39;&lt;%= pkg.name %&gt;-all.min.js&#39;,\r\n          \r\n          concat: {\r\n            dist: {\r\n                src: [&#39;&lt;banner:meta.banner&gt;&#39;].concat(jsFiles),\r\n                dest: &#39;dist/&lt;%= concatJsFile %&gt;&#39;\r\n            }\r\n          },\r\n          min: {\r\n            dist: {\r\n            src: [&#39;&lt;banner:meta.banner&gt;&#39;, &#39;&lt;config:concat.dist.dest&gt;&#39;],\r\n            dest: &#39;dist/&lt;%= concatJsMinFile %&gt;&#39;\r\n            }\r\n          },\r\n          lint: {\r\n            files: [&#39;grunt.js&#39;].concat(jsFiles)\r\n          },\r\n          // options for index.html builder task\r\n          index: {\r\n            src: &#39;index.tmpl&#39;,  // source template file\r\n            dest: &#39;index.html&#39;  // destination file (usually index.html)\r\n          }\r\n        });\r\n    \r\n          \r\n        // Development setup\r\n        grunt.registerTask(&#39;dev&#39;, &#39;Development build&#39;, function() {\r\n            // set some global flags that all tasks can access\r\n            grunt.config(&#39;isDebug&#39;, true);\r\n            grunt.config(&#39;isConcat&#39;, false);\r\n            grunt.config(&#39;isMin&#39;, false);\r\n            \r\n            // run tasks\r\n            grunt.task.run(&#39;lint index&#39;);\r\n        });\r\n        \r\n        // Production setup\r\n        grunt.registerTask(&#39;prod&#39;, &#39;Production build&#39;, function() {\r\n            // set some global flags that all tasks can access\r\n            grunt.config(&#39;isDebug&#39;, false);\r\n            grunt.config(&#39;isConcat&#39;, true);\r\n            grunt.config(&#39;isMin&#39;, true);\r\n            \r\n            // run tasks\r\n            grunt.task.run(&#39;lint concat min index&#39;);\r\n        });\r\n        \r\n        // Default task\r\n        grunt.registerTask(&#39;default&#39;, &#39;dev&#39;);\r\n    };\r\n\r\n\r\n**`index.js (the index task)`:**\r\n\r\n    module.exports = function( grunt ) {\r\n        grunt.registerTask( &quot;index&quot;, &quot;Generate index.html depending on configuration&quot;, function() {\r\n            var conf = grunt.config(&#39;index&#39;),\r\n                tmpl = grunt.file.read(conf.src);\r\n            \r\n            grunt.file.write(conf.dest, grunt.template.process(tmpl));\r\n            \r\n            grunt.log.writeln(&#39;Generated \\&#39;&#39; + conf.dest + &#39;\\&#39; from \\&#39;&#39; + conf.src + &#39;\\&#39;&#39;);\r\n        });\r\n    }\r\n\r\n\r\nFinally, **`index.tmpl`**, with generation logic baked in:\r\n\r\n    &lt;doctype html&gt;\r\n    &lt;head&gt;\r\n    &lt;%\r\n        var jsFiles = grunt.config(&#39;jsFiles&#39;),\r\n            isConcat = grunt.config(&#39;isConcat&#39;);\r\n        \r\n        if(isConcat) {\r\n            print(&#39;&lt;script type=&quot;text/javascript&quot; src=&quot;&#39; + grunt.config(&#39;concat.dist.dest&#39;) + &#39;&quot;&gt;&lt;/script&gt;\\n&#39;);\r\n        } else {\r\n            for(var i = 0, len = jsFiles.length; i &lt; len; i++) {\r\n                print(&#39;&lt;script type=&quot;text/javascript&quot; src=&quot;&#39; + jsFiles[i] + &#39;&quot;&gt;&lt;/script&gt;\\n&#39;);\r\n            }\r\n        }\r\n    %&gt;\r\n    &lt;/head&gt;\r\n    &lt;html&gt;\r\n    &lt;/html&gt;\r\n\r\n\r\n---\r\n\r\n**UPD.** Found out that [Yeoman](http://yeoman.io/), which is based on grunt, has a built-in [usemin](https://github.com/yeoman/yeoman/blob/0.9.6/cli/tasks/usemin.js) task that integrates with Yeoman&#39;s build system. It generates a production version of index.html from information in development version of index.html as well as other environment settings. A bit sophisticated but interesting to look at."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1349123271,
          "answer_id": 12680567,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1349123271,
          "body_markdown": "I have been asking myself the same question for a while, and I think this grunt plugin could be configured to do what you want: https://npmjs.org/package/grunt-targethtml. It implements conditional html tags, that depend on the grunt target.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1361320840,
          "answer_id": 14970339,
          "path": "stack.bower.answer",
          "score": 160,
          "up_vote_count": 161,
          "is_accepted": false,
          "last_activity_date": 1393118697,
          "last_edit_date": 1393118697,
          "body_markdown": "I recently discovered these Grunt `v0.4.0` compatible tasks:\r\n\r\n* [grunt-preprocess](https://github.com/onehealth/grunt-preprocess/)  \r\n&gt; Grunt task around preprocess npm module.  \r\n\r\n* [grunt-env](https://github.com/onehealth/grunt-env/)  \r\n&gt; Grunt task to automate environment configuration for future tasks.\r\n\r\nBelow are snippets from my `Gruntfile.js`.\r\n\r\nENV setup:\r\n\r\n\tenv : {\r\n\t\t\r\n\t\toptions : {\r\n\t\t\t\r\n\t\t\t/* Shared Options Hash */\r\n\t\t\t//globalOption : &#39;foo&#39;\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tdev: {\r\n\t\t\t\r\n\t\t\tNODE_ENV : &#39;DEVELOPMENT&#39;\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tprod : {\r\n\t\t\t\r\n\t\t\tNODE_ENV : &#39;PRODUCTION&#39;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t},\r\n\r\nPreprocess:\r\n\r\n\tpreprocess : {\r\n\t\t\r\n\t\tdev : {\r\n\t\t\t\r\n\t\t\tsrc : &#39;./src/tmpl/index.html&#39;,\r\n\t\t\tdest : &#39;./dev/index.html&#39;\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tprod : {\r\n\t\t\t\r\n\t\t\tsrc : &#39;./src/tmpl/index.html&#39;,\r\n\t\t\tdest : &#39;../&lt;%= pkg.version %&gt;/&lt;%= now %&gt;/&lt;%= ver %&gt;/index.html&#39;,\r\n\t\t\toptions : {\r\n\t\t\t\t\r\n\t\t\t\tcontext : {\r\n\t\t\t\t\tname : &#39;&lt;%= pkg.name %&gt;&#39;,\r\n\t\t\t\t\tversion : &#39;&lt;%= pkg.version %&gt;&#39;,\r\n\t\t\t\t\tnow : &#39;&lt;%= now %&gt;&#39;,\r\n\t\t\t\t\tver : &#39;&lt;%= ver %&gt;&#39;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\nTasks:\r\n\r\n\tgrunt.registerTask(&#39;default&#39;, [&#39;jshint&#39;]);\r\n\t\r\n\tgrunt.registerTask(&#39;dev&#39;, [&#39;jshint&#39;, &#39;env:dev&#39;, &#39;clean:dev&#39;, &#39;preprocess:dev&#39;]);\r\n\t\r\n\tgrunt.registerTask(&#39;prod&#39;, [&#39;jshint&#39;, &#39;env:prod&#39;, &#39;clean:prod&#39;, &#39;uglify:prod&#39;, &#39;cssmin:prod&#39;, &#39;copy:prod&#39;, &#39;preprocess:prod&#39;]);\r\n\r\nAnd in the `/src/tmpl/index.html` template file (for example):\r\n\r\n\t&lt;!-- @if NODE_ENV == &#39;DEVELOPMENT&#39; --&gt;\r\n\t\t\r\n\t\t&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js&quot;&gt;&lt;/script&gt;\r\n\t\t&lt;script src=&quot;../src/js/foo1.js&quot;&gt;&lt;/script&gt;\r\n\t\t&lt;script src=&quot;../src/js/foo2.js&quot;&gt;&lt;/script&gt;\r\n\t\t&lt;script src=&quot;../src/js/jquery.blah.js&quot;&gt;&lt;/script&gt;\r\n\t\t&lt;script src=&quot;../src/js/jquery.billy.js&quot;&gt;&lt;/script&gt;\r\n\t\t&lt;script src=&quot;../src/js/jquery.jenkins.js&quot;&gt;&lt;/script&gt;\r\n\t\t\r\n\t&lt;!-- @endif --&gt;\r\n\t\r\n\t&lt;!-- @if NODE_ENV == &#39;PRODUCTION&#39; --&gt;\r\n\t\t\r\n\t\t&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n\t\t\r\n\t\t&lt;script src=&quot;http://cdn.foo.com/&lt;!-- @echo name --&gt;/&lt;!-- @echo version --&gt;/&lt;!-- @echo now --&gt;/&lt;!-- @echo ver --&gt;/js/&lt;!-- @echo name --&gt;.min.js&quot;&gt;&lt;/script&gt;\r\n\t\t\r\n\t&lt;!-- @endif --&gt;\r\n\r\nI&#39;m sure my setup is different than most people, and the usefulness of the above will depend on your situation. For me, while it&#39;s an awesome bit of code, the Yeoman [grunt-usemin](https://github.com/yeoman/grunt-usemin) is a more robust than I personally need.\r\n\r\n**NOTE:** I *just* discovered the above listed tasks today, so I might be missing a feature and/or my process may change down the road. For now, I&#39;m loving the simplicity **and** features that [grunt-preprocess](https://github.com/onehealth/grunt-preprocess/) and [grunt-env](https://github.com/onehealth/grunt-env/) have to offer. :)\r\n\r\n---\r\n\r\n### Jan 2014 update:\r\n\r\nMotivated by a down vote ...\r\n\r\nWhen I posted this answer there weren&#39;t many options for Grunt `0.4.x` that offered a solution that worked for my needs. Now, months later, I would guess that there are more options out there that _could_ be better than what I have posted here. **While I still personally use, and enjoy using, this technique for my builds**, I ask that future readers take the time to read the other answers given and to research all the options. **If you find a better solution, please post your answer here.**\r\n\r\n### Feb 2014 update:\r\n\r\nI&#39;m not sure if it will be of any help to anyone, but I&#39;ve created [this demo repository on GitHub](https://github.com/mhulse/grunt-html-boiler) that shows a complete (and more complex setup) using the technique(s) I&#39;ve outlined above."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1376934214,
          "answer_id": 18319872,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1376934214,
          "body_markdown": "This grunt task named [scriptlinker][1] looks like an easy way to add the scripts in dev mode.  You could probably run a concat task first and then point it to your concatenated file in prod mode.  \r\n\r\n\r\n  [1]: https://npmjs.org/package/grunt-scriptlinker"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386969132,
          "answer_id": 20576077,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1387223266,
          "last_edit_date": 1387223266,
          "body_markdown": "grunt-bake is a fantastic grunt script that would work great here. I use it in my JQM auto build script.\r\n\r\nhttps://github.com/imaginethepoet/autojqmphonegap\r\n\r\nTake a look at my grunt.coffee file: \r\n\r\n    bake:\r\n        resources: \r\n          files: &quot;index.html&quot;:&quot;resources/custom/components/base.html&quot;\r\n\r\nThis looks at all the files in base.html and sucks them in to create index.html works fantastic for multipage apps (phonegap). This allows for easier development as all devs are not working on one long single page app (preventing lots of conflict checkins). Instead you can break up the pages and work on smaller chunks of code and compile to the full page using a watch command.\r\n\r\nBake reads the template from base.html and injects the component html pages on watch.\r\n\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n  &lt;meta charset=&quot;utf-8&quot;&gt;\r\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n  &lt;title&gt;jQuery Mobile Demos&lt;/title&gt;\r\n\r\n  &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;\r\n\r\n  &lt;!-- Core JQM JS Files --&gt;\r\n  &lt;script src=&quot;js/jquery-min.js&quot;&gt;&lt;/script&gt;\r\n  &lt;script src=&quot;js/jquery.mobile.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n  &lt;!-- Custom JS Files --&gt;\r\n  &lt;script src=&quot;js/app.js&quot;&gt;&lt;/script&gt;\r\n  &lt;script src=&quot;js/backbone-min.js&quot;&gt;&lt;/script&gt;\r\n\r\n\r\n  &lt;!-- Core JQM CSS Files --&gt;\r\n  &lt;link rel=&quot;stylesheet&quot;  href=&quot;css/jquery.mobile.min.css&quot;&gt;\r\n\r\n\r\n  &lt;!-- Phonegap Specific --&gt;\r\n  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/index.css&quot; /&gt;\r\n  &lt;script type=&quot;text/javascript&quot; src=&quot;phonegap.js&quot;&gt;&lt;/script&gt;\r\n  &lt;script type=&quot;text/javascript&quot; src=&quot;js/index.js&quot;&gt;&lt;/script&gt;\r\n  &lt;script type=&quot;text/javascript&quot;&gt;\r\n      app.initialize();\r\n  &lt;/script&gt;  \r\n\r\n  &lt;!-- Custom CSS Themes --&gt;\r\n  &lt;link rel=&quot;stylesheet&quot;  href=&quot;/assets/css/jqm-custom.css&quot;&gt;\r\n  \r\n&lt;/head&gt;\r\n\r\n    &lt;body&gt;\r\n        &lt;!--(bake /resources/custom/components/page1.html)--&gt;\r\n        &lt;!--(bake /resources/custom/components/page2.html)--&gt;\r\n        &lt;!--(bake /resources/custom/components/page3.html)--&gt;\r\n    &lt;/body&gt;\r\n\r\n&lt;/html&gt;\r\n\r\n\r\nYou can take this a step further and add injections in your pages for &quot;menus&quot; &quot;popups&quot; etc so you can really break pages into smaller manageable components.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1387641295,
          "answer_id": 20720765,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1387641295,
          "body_markdown": "[grunt-dom-munger][1] reads and manipulates HTML with CSS selectors. Ex. read &lt;script&gt; tags from your html. Remove nodes, add nodes, and more.\r\n\r\n\r\nYou can use grunt-dom-munger to read all your JS files that are linked by your index.html, uglify them and then use grunt-dom-munger again to modify your index.html to only link the minified JS\r\n\r\n\r\n  [1]: https://github.com/cgross/grunt-dom-munger"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1389221999,
          "answer_id": 21008390,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1389221999,
          "last_edit_date": 1495541440,
          "body_markdown": "I was looking for a more simple, straight forward solution so I combined the answer from this question:\r\n\r\nhttps://stackoverflow.com/questions/19010621/how-to-place-if-else-block-in-gruntfile-js\r\n\r\nand came up with following simple steps:\r\n\r\n1. Keep two versions of your index files as you listed and name them index-development.html and index-prodoction.html.\r\n2. Use the following logic in your Gruntfile.js&#39;s concat/copy block for your index.html file:\r\n\r\n        concat: {\r\n            index: {\r\n                src : [ (function() {\r\n                    if (grunt.option(&#39;Release&#39;)) {\r\n                      return &#39;views/index-production.html&#39;;\r\n                    } else {\r\n                      return &#39;views/index-development.html&#39;;\r\n                    }\r\n                  }()) ],\r\n               dest: &#39;&lt;%= distdir %&gt;/index.html&#39;,\r\n               ...\r\n            },\r\n            ...\r\n        },\r\n\r\n3.  run &#39;grunt --Release&#39; to choose the index-production.html  file and leave off the flag to have the development version.\r\n\r\nNo new plugins to add  or configure and no new grunt tasks."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1391197276,
          "answer_id": 21488659,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1416958575,
          "last_edit_date": 1495535480,
          "body_markdown": "I dislike the solutions here (including [the one I previously gave][1]) and here&#39;s why:\r\n\r\n* The problem with [the highest voted answer][2] is that you have to manually sync the list of script tags when you add/rename/delete a JS file.  \r\n* The problem with [the accepted answer][3] is that your list of JS files can&#39;t have pattern matching.  This means you&#39;ve got to update it by hand in the Gruntfile.  \r\n\r\nI&#39;ve figured out how to solve both of these issues.  I&#39;ve set up my grunt task so that every time a file is added or deleted, the script tags automatically get generated to reflect that.  This way, **you don&#39;t need to modify your html file or your grunt file** when you add/remove/rename your JS files.\r\n\r\nTo summarize how that works, I have a html template with a variable for the script tags.  I use https://github.com/alanshaw/grunt-include-replace to populate that variable.  In dev mode, that variable comes from a globbing pattern of all my JS files.  The watch task recalculates this value when a JS file is added or removed.  \r\n\r\nNow, to get different results in dev or prod mode, you simply populate that variable with a different value.  Here&#39;s some code:\r\n\r\n    var jsSrcFileArray = [\r\n        &#39;src/main/scripts/app/js/Constants.js&#39;,\r\n        &#39;src/main/scripts/app/js/Random.js&#39;,\r\n        &#39;src/main/scripts/app/js/Vector.js&#39;,\r\n        &#39;src/main/scripts/app/js/scripts.js&#39;,\r\n        &#39;src/main/scripts/app/js/StatsData.js&#39;,\r\n        &#39;src/main/scripts/app/js/Dialog.js&#39;,\r\n        &#39;src/main/scripts/app/**/*.js&#39;,\r\n        &#39;!src/main/scripts/app/js/AuditingReport.js&#39;\r\n    ];\r\n\r\n    var jsScriptTags = function (srcPattern, destPath) {\r\n        if (srcPattern === undefined) {\r\n            throw new Error(&quot;srcPattern undefined&quot;);\r\n        }\r\n        if (destPath === undefined) {\r\n            throw new Error(&quot;destPath undefined&quot;);\r\n        }\r\n        return grunt.util._.reduce(\r\n            grunt.file.expandMapping(srcPattern, destPath, {\r\n                filter: &#39;isFile&#39;,\r\n                flatten: true,\r\n                expand: true,\r\n                cwd: &#39;.&#39;\r\n            }),\r\n            function (sum, file) {\r\n                return sum + &#39;\\n&lt;script src=&quot;&#39; + file.dest + &#39;&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&#39;;\r\n            },\r\n            &#39;&#39;\r\n        );\r\n    };\r\n\r\n    ...\r\n\r\n    grunt.initConfig({\r\n\r\n        includereplace: {\r\n            dev: {\r\n                options: {\r\n                    globals: {\r\n                        scriptsTags: &#39;&lt;%= jsScriptTags(jsSrcFileArray, &quot;../../main/scripts/app/js&quot;)%&gt;&#39;\r\n                    }\r\n                },\r\n                src: [\r\n                    &#39;src/**/html-template.html&#39;\r\n                ],\r\n                dest: &#39;src/main/generated/&#39;,\r\n                flatten: true,\r\n                cwd: &#39;.&#39;,\r\n                expand: true\r\n            },\r\n            prod: {\r\n                options: {\r\n                    globals: {\r\n                        scriptsTags: &#39;&lt;script src=&quot;app.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&#39;\r\n                    }\r\n                },\r\n                src: [\r\n                    &#39;src/**/html-template.html&#39;\r\n                ],\r\n                dest: &#39;src/main/generatedprod/&#39;,\r\n                flatten: true,\r\n                cwd: &#39;.&#39;,\r\n                expand: true\r\n            }\r\n\r\n    ...\r\n\r\n        jsScriptTags: jsScriptTags\r\n\r\n`jsSrcFileArray` is your typical grunt file-globbing pattern.  `jsScriptTags` takes the `jsSrcFileArray` and concatenates them together with `script` tags on both sides.  `destPath` is the prefix I want on each file.  \r\n\r\nAnd here&#39;s what the HTML looks like:\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html lang=&quot;en&quot;&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset=&quot;UTF-8&quot;/&gt;\r\n        &lt;title&gt;Example&lt;/title&gt;\r\n    \r\n    &lt;/head&gt;\r\n    \r\n    &lt;body&gt;    \r\n    @@scriptsTags\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\nNow, as you can see in the config, I generate the value of that variable as a hard coded `script` tag when it&#39;s run in `prod` mode.  In dev mode, this variable will expand to a value like this:\r\n\r\n    &lt;script src=&quot;../../main/scripts/app/js/Constants.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;../../main/scripts/app/js/Random.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;../../main/scripts/app/js/Vector.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;../../main/scripts/app/js/StatsData.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;../../main/scripts/app/js/Dialog.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n\r\nLet me know if you have any questions.  \r\n\r\nPS: This is a crazy amount of code for something I&#39;d want to do in every client-side JS app.  I hope someone can turn this into a reusable plugin.  Maybe I will some day.  \r\n\r\n\r\n  [1]: https://stackoverflow.com/a/18319872/61624\r\n  [2]: https://stackoverflow.com/a/14970339/61624\r\n  [3]: https://stackoverflow.com/a/12424966/61624"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1402343828,
          "answer_id": 24127967,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1402343828,
          "body_markdown": "Use a combination of wiredep https://github.com/taptapship/wiredep and usemin https://github.com/yeoman/grunt-usemin in order to have grunt take care of these tasks. Wiredep will add your dependencies one script file at a time, and usemin will concatenate them all into a single file for production. This can then be accomplished with just some html comments. For instance, my bower packages are automatically included and added to the html when I run `bower install &amp;&amp; grunt bowerInstall`:\r\n\r\n    &lt;!-- build:js /scripts/vendor.js --&gt;\r\n    &lt;!-- bower:js --&gt;\r\n    &lt;!-- endbower --&gt;\r\n    &lt;!-- endbuild --&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1428432634,
          "answer_id": 29499002,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1428498059,
          "last_edit_date": 1428498059,
          "body_markdown": "I found a grunt plugin called grunt-dev-prod-switch. All it does is comment out certain blocks it looks for based on an --env option you pass to grunt (although it limits you to dev, prod, and test).\r\n\r\nOnce you set it up as it explains [here][1], you can run for example:\r\n\r\n`grunt serve --env=dev`, and all it does is comment out the blocks which are wrapped by\r\n\r\n        &lt;!-- env:test/prod --&gt;\r\n        your code here\r\n        &lt;!-- env:test/prod:end --&gt;\r\n\r\nand it will uncomment out blocks which are wrapped by\r\n\r\n        &lt;!-- env:dev --&gt;\r\n        your code here\r\n        &lt;!-- env:dev:end --&gt;\r\n\r\nIt also works on javascript, I use it for setting up the right IP address to connect to for my backend API. The blocks just change to\r\n\r\n        /* env:dev */\r\n        your code here\r\n        /* env:dev:end */\r\n\r\nIn your case, it would be as simple as this:\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html&gt;\r\n        &lt;head&gt;\r\n            &lt;!-- env:dev --&gt;\r\n            &lt;script src=&quot;js/module1.js&quot; /&gt;\r\n            &lt;script src=&quot;js/module2.js&quot; /&gt;\r\n            &lt;script src=&quot;js/module3.js&quot; /&gt;\r\n            ...\r\n            &lt;!-- env:dev:end --&gt;\r\n            &lt;!-- env:prod --&gt;\r\n            &lt;script src=&quot;js/MyApp-all.min.js&quot; /&gt;\r\n            ...\r\n            &lt;!-- env:prod:end --&gt;\r\n        &lt;/head&gt;\r\n        &lt;body&gt;&lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/grunt-dev-prod-switch"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1435660063,
          "answer_id": 31135783,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1435660063,
          "body_markdown": "This answer is not for noobs!\r\n\r\nUse Jade templating ... passing variables to a Jade template is a bog standard use case\r\n\r\nI am using grunt (grunt-contrib-jade) but you don&#39;t have to use grunt. Just use the standard npm jade module.\r\n\r\nIf using grunt then your gruntfile would like something like ...\r\n\r\n    jade: {\r\n        options: {\r\n          // TODO - Define options here\r\n        },\r\n        dev: {\r\n          options: {\r\n            data: {\r\n              pageTitle: &#39;&lt;%= grunt.file.name %&gt;&#39;,\r\n              homePage: &#39;/app&#39;,\r\n              liveReloadServer: liveReloadServer,\r\n              cssGruntClassesForHtmlHead: &#39;grunt-&#39; + &#39;&lt;%= grunt.task.current.target %&gt;&#39;\r\n            },\r\n            pretty: true\r\n          },\r\n          files: [\r\n            {\r\n              expand: true,\r\n              cwd: &quot;src/app&quot;,\r\n              src: [&quot;index.jade&quot;, &quot;404.jade&quot;],\r\n              dest: &quot;lib/app&quot;,\r\n              ext: &quot;.html&quot;\r\n            },\r\n            {\r\n              expand: true,\r\n              flatten: true,\r\n              cwd: &quot;src/app&quot;,\r\n              src: [&quot;directives/partials/*.jade&quot;],\r\n              dest: &quot;lib/app/directives/partials&quot;,\r\n              ext: &quot;.html&quot;\r\n            }\r\n          ]\r\n        }\r\n      },\r\n\r\nWe can now easily access the data passed by grunt in the Jade template.\r\n\r\nMuch like the approach used by Modernizr, I set a CSS class on the HTML tag according to the value of the variable passed and can use JavaScript logic from there based on whether the CSS class is present or not.\r\n\r\nThis is great if using Angular since you can do ng-if&#39;s to include elements in the page based on whether the class is present.\r\n\r\nFor example, I might include a script if the class is present ...\r\n\r\n(For example, I might include the live reload script in dev but not in production)\r\n\r\n    &lt;script ng-if=&quot;controller.isClassPresent()&quot; src=&quot;//localhost:35729/livereload.js&quot;&gt;&lt;/script&gt; "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1487619542,
          "answer_id": 42352948,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1487619542,
          "body_markdown": "Consider [processhtml](https://github.com/dciccale/grunt-processhtml). It allows definition of multiple &quot;targets&quot; for builds. Comments are used to conditionally include or exclude material from the HTML: \r\n\r\n    &lt;!-- build:js:production js/app.js --&gt;\r\n    ...\r\n    &lt;!-- /build --&gt;\r\n\r\nbecomes\r\n\r\n    &lt;script src=&quot;js/app.js&quot;&gt;&lt;/script&gt;\r\n    \r\nIt even purports to do nifty stuff like this (see [the README](https://github.com/dciccale/grunt-processhtml/blob/master/README.md)): \r\n\r\n    &lt;!-- build:[class]:dist production --&gt;\r\n    &lt;html class=&quot;debug_mode&quot;&gt;\r\n    &lt;!-- /build --&gt;\r\n\r\n    &lt;!-- class is changed to &#39;production&#39; only when the &#39;dist&#39; build is executed --&gt;\r\n    &lt;html class=&quot;production&quot;&gt;"
        }
      ],
      "creation_date": 1347523735,
      "body_markdown": "I&#39;m trying to use Grunt as a build tool for my webapp.\r\n\r\nI want to have at least two setups: \r\n\r\n**I. Development setup** - load scripts from separate files, without concatenation,\r\n\r\nso my index.html would look something like:\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html&gt;\r\n        &lt;head&gt;\r\n            &lt;script src=&quot;js/module1.js&quot; /&gt;\r\n            &lt;script src=&quot;js/module2.js&quot; /&gt;\r\n            &lt;script src=&quot;js/module3.js&quot; /&gt;\r\n            ...\r\n        &lt;/head&gt;\r\n        &lt;body&gt;&lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n**II. Production setup** - load my scripts minified &amp; concatenated in one file,\r\n\r\nwith index.html accordingly:\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html&gt;\r\n        &lt;head&gt;\r\n            &lt;script src=&quot;js/MyApp-all.min.js&quot; /&gt;\r\n        &lt;/head&gt;\r\n        &lt;body&gt;&lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\nThe question is, *how can I make grunt make these index.html&#39;s depending on the configuration when I run `grunt dev` or `grunt prod`?*\r\n\r\nOr maybe I&#39;m digging in the wrong direction and it would be easier to always generate `MyApp-all.min.js` but put inside it either all my scripts (concatenated) or a loader script that asynchronously loads those scripts from separate files?\r\n\r\nHow do you do it, guys?",
      "title": "Have Grunt generate index.html for different setups",
      "view_count": 73677,
      "up_vote_count": 205,
      "answer_count": 12,
      "link": "https://stackoverflow.com/questions/12401998/have-grunt-generate-index-html-for-different-setups",
      "code_snippet": [
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"js/module1.js\" /&gt;\n        &lt;script src=\"js/module2.js\" /&gt;\n        &lt;script src=\"js/module3.js\" /&gt;\n        ...\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"js/MyApp-all.min.js\" /&gt;\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>grunt dev</code>",
        "<code>grunt prod</code>",
        "<code>MyApp-all.min.js</code>",
        "<code>v0.4.0</code>",
        "<code>Gruntfile.js</code>",
        "<code>env : {\n\n    options : {\n\n        /* Shared Options Hash */\n        //globalOption : 'foo'\n\n    },\n\n    dev: {\n\n        NODE_ENV : 'DEVELOPMENT'\n\n    },\n\n    prod : {\n\n        NODE_ENV : 'PRODUCTION'\n\n    }\n\n},\n</code>",
        "<code>preprocess : {\n\n    dev : {\n\n        src : './src/tmpl/index.html',\n        dest : './dev/index.html'\n\n    },\n\n    prod : {\n\n        src : './src/tmpl/index.html',\n        dest : '../&lt;%= pkg.version %&gt;/&lt;%= now %&gt;/&lt;%= ver %&gt;/index.html',\n        options : {\n\n            context : {\n                name : '&lt;%= pkg.name %&gt;',\n                version : '&lt;%= pkg.version %&gt;',\n                now : '&lt;%= now %&gt;',\n                ver : '&lt;%= ver %&gt;'\n            }\n\n        }\n\n    }\n\n}\n</code>",
        "<code>grunt.registerTask('default', ['jshint']);\n\ngrunt.registerTask('dev', ['jshint', 'env:dev', 'clean:dev', 'preprocess:dev']);\n\ngrunt.registerTask('prod', ['jshint', 'env:prod', 'clean:prod', 'uglify:prod', 'cssmin:prod', 'copy:prod', 'preprocess:prod']);\n</code>",
        "<code>/src/tmpl/index.html</code>",
        "<code>&lt;!-- @if NODE_ENV == 'DEVELOPMENT' --&gt;\n\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/foo1.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/foo2.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/jquery.blah.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/jquery.billy.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/jquery.jenkins.js\"&gt;&lt;/script&gt;\n\n&lt;!-- @endif --&gt;\n\n&lt;!-- @if NODE_ENV == 'PRODUCTION' --&gt;\n\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n\n    &lt;script src=\"http://cdn.foo.com/&lt;!-- @echo name --&gt;/&lt;!-- @echo version --&gt;/&lt;!-- @echo now --&gt;/&lt;!-- @echo ver --&gt;/js/&lt;!-- @echo name --&gt;.min.js\"&gt;&lt;/script&gt;\n\n&lt;!-- @endif --&gt;\n</code>",
        "<code>0.4.x</code>",
        "<code>path : '/&lt;%= pkg.name %&gt;/dist/&lt;%= pkg.version %&gt;/&lt;%= now %&gt;/&lt;%= ver %&gt;'</code>",
        "<code>&lt;script src=\"http://cdn.foo.com&lt;!-- @echo path --&gt;/js/bulldog.min.js\"&gt;&lt;/script&gt;</code>",
        "<code>data</code>",
        "<code>index.html</code>",
        "<code>grunt.js</code>",
        "<code>/*global module:false*/\nmodule.exports = function(grunt) {\n    var   // js files\n        jsFiles = [\n              'src/module1.js',\n              'src/module2.js',\n              'src/module3.js',\n              'src/awesome.js'\n            ];\n\n    // Import custom tasks (see index task below)\n    grunt.loadTasks( \"build/tasks\" );\n\n    // Project configuration.\n    grunt.initConfig({\n      pkg: '&lt;json:package.json&gt;',\n      meta: {\n        banner: '/*! &lt;%= pkg.name %&gt; - v&lt;%= pkg.version %&gt; - ' +\n          '&lt;%= grunt.template.today(\"yyyy-mm-dd\") %&gt; */'\n      },\n\n      jsFiles: jsFiles,\n\n      // file name for concatenated js\n      concatJsFile: '&lt;%= pkg.name %&gt;-all.js',\n\n      // file name for concatenated &amp; minified js\n      concatJsMinFile: '&lt;%= pkg.name %&gt;-all.min.js',\n\n      concat: {\n        dist: {\n            src: ['&lt;banner:meta.banner&gt;'].concat(jsFiles),\n            dest: 'dist/&lt;%= concatJsFile %&gt;'\n        }\n      },\n      min: {\n        dist: {\n        src: ['&lt;banner:meta.banner&gt;', '&lt;config:concat.dist.dest&gt;'],\n        dest: 'dist/&lt;%= concatJsMinFile %&gt;'\n        }\n      },\n      lint: {\n        files: ['grunt.js'].concat(jsFiles)\n      },\n      // options for index.html builder task\n      index: {\n        src: 'index.tmpl',  // source template file\n        dest: 'index.html'  // destination file (usually index.html)\n      }\n    });\n\n\n    // Development setup\n    grunt.registerTask('dev', 'Development build', function() {\n        // set some global flags that all tasks can access\n        grunt.config('isDebug', true);\n        grunt.config('isConcat', false);\n        grunt.config('isMin', false);\n\n        // run tasks\n        grunt.task.run('lint index');\n    });\n\n    // Production setup\n    grunt.registerTask('prod', 'Production build', function() {\n        // set some global flags that all tasks can access\n        grunt.config('isDebug', false);\n        grunt.config('isConcat', true);\n        grunt.config('isMin', true);\n\n        // run tasks\n        grunt.task.run('lint concat min index');\n    });\n\n    // Default task\n    grunt.registerTask('default', 'dev');\n};\n</code>",
        "<code>index.js (the index task)</code>",
        "<code>module.exports = function( grunt ) {\n    grunt.registerTask( \"index\", \"Generate index.html depending on configuration\", function() {\n        var conf = grunt.config('index'),\n            tmpl = grunt.file.read(conf.src);\n\n        grunt.file.write(conf.dest, grunt.template.process(tmpl));\n\n        grunt.log.writeln('Generated \\'' + conf.dest + '\\' from \\'' + conf.src + '\\'');\n    });\n}\n</code>",
        "<code>index.tmpl</code>",
        "<code>&lt;doctype html&gt;\n&lt;head&gt;\n&lt;%\n    var jsFiles = grunt.config('jsFiles'),\n        isConcat = grunt.config('isConcat');\n\n    if(isConcat) {\n        print('&lt;script type=\"text/javascript\" src=\"' + grunt.config('concat.dist.dest') + '\"&gt;&lt;/script&gt;\\n');\n    } else {\n        for(var i = 0, len = jsFiles.length; i &lt; len; i++) {\n            print('&lt;script type=\"text/javascript\" src=\"' + jsFiles[i] + '\"&gt;&lt;/script&gt;\\n');\n        }\n    }\n%&gt;\n&lt;/head&gt;\n&lt;html&gt;\n&lt;/html&gt;\n</code>",
        "<code>grunt.template.process()</code>",
        "<code>data</code>",
        "<code>var jsSrcFileArray = [\n    'src/main/scripts/app/js/Constants.js',\n    'src/main/scripts/app/js/Random.js',\n    'src/main/scripts/app/js/Vector.js',\n    'src/main/scripts/app/js/scripts.js',\n    'src/main/scripts/app/js/StatsData.js',\n    'src/main/scripts/app/js/Dialog.js',\n    'src/main/scripts/app/**/*.js',\n    '!src/main/scripts/app/js/AuditingReport.js'\n];\n\nvar jsScriptTags = function (srcPattern, destPath) {\n    if (srcPattern === undefined) {\n        throw new Error(\"srcPattern undefined\");\n    }\n    if (destPath === undefined) {\n        throw new Error(\"destPath undefined\");\n    }\n    return grunt.util._.reduce(\n        grunt.file.expandMapping(srcPattern, destPath, {\n            filter: 'isFile',\n            flatten: true,\n            expand: true,\n            cwd: '.'\n        }),\n        function (sum, file) {\n            return sum + '\\n&lt;script src=\"' + file.dest + '\" type=\"text/javascript\"&gt;&lt;/script&gt;';\n        },\n        ''\n    );\n};\n\n...\n\ngrunt.initConfig({\n\n    includereplace: {\n        dev: {\n            options: {\n                globals: {\n                    scriptsTags: '&lt;%= jsScriptTags(jsSrcFileArray, \"../../main/scripts/app/js\")%&gt;'\n                }\n            },\n            src: [\n                'src/**/html-template.html'\n            ],\n            dest: 'src/main/generated/',\n            flatten: true,\n            cwd: '.',\n            expand: true\n        },\n        prod: {\n            options: {\n                globals: {\n                    scriptsTags: '&lt;script src=\"app.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;'\n                }\n            },\n            src: [\n                'src/**/html-template.html'\n            ],\n            dest: 'src/main/generatedprod/',\n            flatten: true,\n            cwd: '.',\n            expand: true\n        }\n\n...\n\n    jsScriptTags: jsScriptTags\n</code>",
        "<code>jsSrcFileArray</code>",
        "<code>jsScriptTags</code>",
        "<code>jsSrcFileArray</code>",
        "<code>script</code>",
        "<code>destPath</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"/&gt;\n    &lt;title&gt;Example&lt;/title&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;    \n@@scriptsTags\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>script</code>",
        "<code>prod</code>",
        "<code>&lt;script src=\"../../main/scripts/app/js/Constants.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/Random.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/Vector.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/StatsData.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/Dialog.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code>",
        "<code>I've set up my grunt task so that every time a file is added or deleted, the script tags automatically get generated to reflect that</code>",
        "<code>&lt;script&gt;</code>",
        "<code>destPath</code>",
        "<code>jsScriptTags</code>",
        "<code>grunt.file.expandMapping</code>",
        "<code>grunt.file.expand</code>",
        "<code>concat: {\n    index: {\n        src : [ (function() {\n            if (grunt.option('Release')) {\n              return 'views/index-production.html';\n            } else {\n              return 'views/index-development.html';\n            }\n          }()) ],\n       dest: '&lt;%= distdir %&gt;/index.html',\n       ...\n    },\n    ...\n},\n</code>",
        "<code>&lt;!--SINON COMPONENT SCRIPTS--&gt;</code>",
        "<code>&lt;!--SPEC SCRIPTS--&gt;</code>",
        "<code>grunt serve --env=dev</code>",
        "<code>    &lt;!-- env:test/prod --&gt;\n    your code here\n    &lt;!-- env:test/prod:end --&gt;\n</code>",
        "<code>    &lt;!-- env:dev --&gt;\n    your code here\n    &lt;!-- env:dev:end --&gt;\n</code>",
        "<code>    /* env:dev */\n    your code here\n    /* env:dev:end */\n</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;!-- env:dev --&gt;\n        &lt;script src=\"js/module1.js\" /&gt;\n        &lt;script src=\"js/module2.js\" /&gt;\n        &lt;script src=\"js/module3.js\" /&gt;\n        ...\n        &lt;!-- env:dev:end --&gt;\n        &lt;!-- env:prod --&gt;\n        &lt;script src=\"js/MyApp-all.min.js\" /&gt;\n        ...\n        &lt;!-- env:prod:end --&gt;\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>bake:\n    resources: \n      files: \"index.html\":\"resources/custom/components/base.html\"\n</code>",
        "<code>&lt;!DOCTYPE html&gt;\n</code>",
        "<code>&lt;body&gt;\n    &lt;!--(bake /resources/custom/components/page1.html)--&gt;\n    &lt;!--(bake /resources/custom/components/page2.html)--&gt;\n    &lt;!--(bake /resources/custom/components/page3.html)--&gt;\n&lt;/body&gt;\n</code>",
        "<code>bower install &amp;&amp; grunt bowerInstall</code>",
        "<code>&lt;!-- build:js /scripts/vendor.js --&gt;\n&lt;!-- bower:js --&gt;\n&lt;!-- endbower --&gt;\n&lt;!-- endbuild --&gt;\n</code>",
        "<code>&lt;!-- build:js:production js/app.js --&gt;\n...\n&lt;!-- /build --&gt;\n</code>",
        "<code>&lt;script src=\"js/app.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>&lt;!-- build:[class]:dist production --&gt;\n&lt;html class=\"debug_mode\"&gt;\n&lt;!-- /build --&gt;\n\n&lt;!-- class is changed to 'production' only when the 'dist' build is executed --&gt;\n&lt;html class=\"production\"&gt;\n</code>",
        "<code>jade: {\n    options: {\n      // TODO - Define options here\n    },\n    dev: {\n      options: {\n        data: {\n          pageTitle: '&lt;%= grunt.file.name %&gt;',\n          homePage: '/app',\n          liveReloadServer: liveReloadServer,\n          cssGruntClassesForHtmlHead: 'grunt-' + '&lt;%= grunt.task.current.target %&gt;'\n        },\n        pretty: true\n      },\n      files: [\n        {\n          expand: true,\n          cwd: \"src/app\",\n          src: [\"index.jade\", \"404.jade\"],\n          dest: \"lib/app\",\n          ext: \".html\"\n        },\n        {\n          expand: true,\n          flatten: true,\n          cwd: \"src/app\",\n          src: [\"directives/partials/*.jade\"],\n          dest: \"lib/app/directives/partials\",\n          ext: \".html\"\n        }\n      ]\n    }\n  },\n</code>",
        "<code>&lt;script ng-if=\"controller.isClassPresent()\" src=\"//localhost:35729/livereload.js\"&gt;&lt;/script&gt; \n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "node.js",
        "angularjs",
        "web-applications",
        "mean-stack"
      ],
      "creation_date": 1398090361,
      "body_markdown": "I wanted to use the MEAN JavaScript Stack, but I noticed that there are two different stacks with either their own website and installation methods: mean.js and mean.io. So I came up asking myself this question: &quot;Which one do I use?&quot;.\r\n\r\nSo in order to answer this question I ask the community if you could explain what are the differences between these two? And if possible pros and cons? Because they look very similar to me.",
      "last_edit_date": 1405947959,
      "up_vote_count": 325,
      "link": "https://stackoverflow.com/questions/23199392/difference-between-mean-js-and-mean-io",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1398118597,
          "answer_id": 23206972,
          "path": "stack.gulp.answer",
          "score": 366,
          "up_vote_count": 366,
          "is_accepted": true,
          "last_activity_date": 1438183284,
          "last_edit_date": 1438183284,
          "body_markdown": "They&#39;re essentially the same... They both use swig for templating, they both use karma and mocha for tests, passport integration, nodemon, etc. \r\n\r\nWhy so similar? Mean.js is a fork of Mean.io and both initiatives were started by [the same guy][1]... Mean.io is now under the umbrella of the company Linnovate and looks like the guy (Amos Haviv) stopped his collaboration with this company and started Mean.js. You can read more about the reasons [here][2]. \r\n\r\nNow... main (or little) differences you can see right now are:\r\n\r\n&lt;br&gt;\r\n\r\n**SCAFFOLDING AND BOILERPLATE GENERATION**\r\n\r\nMean.io uses a custom cli tool named &#39;mean&#39;&lt;br&gt;\r\nMean.js uses Yeoman Generators\r\n\r\n&lt;br&gt;\r\n**MODULARITY**\r\n\r\nMean.io uses a more self-contained node packages modularity with client and server files inside the modules.&lt;br&gt;\r\nMean.js uses modules just in the front-end (for angular), and connects them with Express. Although they were working on vertical modules as well...\r\n\r\n&lt;br&gt;\r\n**BUILD SYSTEM**\r\n\r\nMean.io has recently moved to gulp&lt;br&gt;\r\nMean.js uses grunt\r\n\r\n&lt;br&gt;\r\n**DEPLOYMENT**\r\n\r\nBoth have Dockerfiles in their respective repos, and Mean.io has one-click install on [Google Compute Engine][3], while Mean.js can also be deployed with [one-click install on Digital Ocean][4].\r\n\r\n&lt;br&gt;\r\n**DOCUMENTATION**\r\n\r\nMean.io has ok docs&lt;br&gt;\r\nMean.js has AWESOME docs\r\n\r\n&lt;br&gt;\r\n**COMMUNITY**\r\n\r\nMean.io has a bigger community since it was the original boilerplate&lt;br&gt;\r\nMean.js has less momentum but steady growth\r\n\r\n&lt;br&gt;\r\nOn a personal level, I like more the philosophy and openness of MeanJS and more the traction and modules/packages approach of MeanIO. Both are nice, and you&#39;ll end probably modifying them, so you can&#39;t really go wrong picking one or the other. Just take them as starting point and as a learning exercise.\r\n\r\n&lt;br&gt;\r\n&lt;h2&gt;ALTERNATIVE “MEAN” SOLUTIONS&lt;/h2&gt;\r\nMEAN is a generic way (coined by [Valeri Karpov][5]) to describe a boilerplate/framework that takes &quot;Mongo + Express + Angular + Node&quot; as the base of the stack. You can find frameworks with this stack that use other denomination, some of them really good for RAD (Rapid Application Development) and building SPAs. Eg:\r\n\r\n - **[Meteor][6]**. Now with official [Angular support][7], represents a [great MEAN stack][8] \r\n - [StrongLoop Loopback][9] (main Node.js core contributors and [Express maintainers][10])\r\n - [Generator Angular Fullstack][11]\r\n - [Sails.js][12]\r\n - [Cleverstack][13]\r\n - Deployd, etc (there are more)\r\n\r\n\r\nYou also have [Hackathon Starter][14]. It doesn&#39;t have A of MEAN (it is &#39;MEN&#39;), but it rocks..\r\n\r\nHave fun!\r\n\r\n\r\n  [1]: https://github.com/amoshaviv\r\n  [2]: http://blog.meanjs.org/post/76726660228/forking-out-of-an-open-source-conflict\r\n  [3]: https://cloud.google.com/solutions/mean/click-to-deploy\r\n  [4]: https://www.digitalocean.com/features/one-click-apps/mean/\r\n  [5]: http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and\r\n  [6]: https://www.meteor.com/\r\n  [7]: http://angular-meteor.com/\r\n  [8]: http://info.meteor.com/blog/thoughts-on-angular-meteor-as-a-great-mean-stack\r\n  [9]: http://strongloop.com/mobile-application-development/loopback/\r\n  [10]: http://strongloop.com/strongblog/tj-holowaychuk-sponsorship-of-express/\r\n  [11]: https://github.com/DaftMonk/generator-angular-fullstack\r\n  [12]: http://www.quora.com/Node-js/Should-I-use-a-MEAN-stack-or-Angular-+-Sails-js-for-a-node-js-powered-back-end-structure-or-framework\r\n  [13]: http://cleverstack.io/\r\n  [14]: https://github.com/sahat/hackathon-starter"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1398483572,
          "answer_id": 23306356,
          "path": "stack.gulp.answer",
          "score": 67,
          "up_vote_count": 68,
          "is_accepted": false,
          "last_activity_date": 1503416464,
          "last_edit_date": 1503416464,
          "body_markdown": "First of all, **MEAN** is an acronym for **M**ongoDB, **E**xpress, **A**ngular and **N**ode.js. \r\n\r\nIt *generically* identifies the combined used of these technologies in a &quot;stack&quot;. There is no such a thing as &quot;*The* MEAN framework&quot;.\r\n\r\n[Lior Kesos][1] at [Linnovate][2] took advantage of this confusion. He bought the domain MEAN.io and put some code at https://github.com/linnovate/mean\r\n\r\nThey luckily received a lot of publicity, and theree are more and more articles and video about MEAN. When you Google &quot;mean framework&quot;, mean.io is the first in the list.\r\n\r\nUnfortunately the code at https://github.com/linnovate/mean seems *poorly engineered*. \r\n\r\nIn February I fell in the trap myself. The site mean.io had a catchy design and the Github repo had 1000+ stars. The idea of questioning the quality did not even pass through my mind. I started experimenting with it but it did not take too long to stumble upon things that were not working, and puzzling pieces of code. \r\n\r\nThe commit history was also pretty concerning. They re-engineered the code and directory structure multiple times, and merging the new changes is too time consuming.\r\n\r\nThe nice things about both mean.io and mean.js code is that they come with Bootstrap integration. They also come with Facebook, Github, Linkedin etc authentication through [PassportJs][3] and an example of a model (Article) on the backend on MongoDB that sync with the frontend model with AngularJS.\r\n\r\nAccording to Linnovate&#39;s website: \r\n&gt; Linnovate is the leading Open Source company in Israel, with the most\r\n&gt; experienced team in the country, dedicated to the creation of high-end\r\n&gt; open source solutions. Linnovate is the only company in Israel which\r\n&gt; gives an A-Z services for enterprises for building and maintaining\r\n&gt; their next web project.\r\n\r\nFrom the website it looks like that their core skill set is Drupal (a PHP content management system) and only lately they started using Node.js and AngularJS.\r\n\r\nLately I was reading the [Mean.js Blog][4] and things became clearer. My understanding is that the main Javascript developer (Amos Haviv) left Linnovate to work on Mean.js leaving MEAN.io project with people that are novice Node.js developers that are slowing understanding how things are supposed to work.\r\n\r\nIn the future things may change but for now I would avoid to use mean.io. If you are looking for a boilerplate for a quickstart Mean.js seems a better option than mean.io.\r\n\r\n  [1]: http://www.linkedin.com/in/liorkesos\r\n  [2]: http://www.linnovate.net\r\n  [3]: http://passportjs.org/\r\n  [4]: http://blog.meanjs.org/post/76726660228/forking-out-of-an-open-source-conflict"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1403821754,
          "answer_id": 24441248,
          "path": "stack.gulp.answer",
          "score": 19,
          "up_vote_count": 20,
          "is_accepted": false,
          "last_activity_date": 1444662674,
          "last_edit_date": 1444662674,
          "body_markdown": "Here is a side-by-side comparison of several application starters/generators and other technologies including MEAN.js, MEAN.io, and cleverstack.  I keep adding alternatives as I find time and as that happens, the list of potentially provided benefits keeps growing too.  Today it&#39;s up to around 1600.  If anyone wants to help improve its accuracy or completeness, click the next link and do a questionnaire about something you know.\r\n\r\n[Compare app technologies project](http://www.dancancro.com/technology-questionnaires/)\r\n\r\nFrom this database, the system generates reports like the following:\r\n\r\n[MeanJS vs MeanIO trade-off report](http://dancancro.com/meanio_vs_meanjs.html)\r\n\r\n\r\n  [1]: http://www.dancancro.com/comparison-of-angularjs-application-starters/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1406109681,
          "answer_id": 24907475,
          "path": "stack.gulp.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1432080448,
          "last_edit_date": 1432080448,
          "body_markdown": "I&#39;m surprised nobody has mentioned the Yeoman generator [angular-fullstack](https://github.com/DaftMonk/generator-angular-fullstack).\r\nIt is the number one Yeoman community generator, with currently 1490 stars on the [generator page](http://yeoman.io/generators/) vs Mean.js&#39; 81 stars (admittedly not a fair comparison given how new MEANJS is).  It is appears to be actively maintained and is in version 2.05 as I write this.  Unlike MEANJS, it doesn&#39;t use Swig for templating.  It can be scaffolded with passport built in.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1406200375,
          "answer_id": 24932110,
          "path": "stack.gulp.answer",
          "score": 13,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1439912346,
          "last_edit_date": 1439912346,
          "body_markdown": "[The Starter Trade-offs sheet](https://docs.google.com/spreadsheets/d/1r8rJy2Q5p5QORYKcye93UECwOlSgFL24c5fyF7dqhaM/edit#gid=239778472) of my comparison spreadsheet has comprehensive one-on-one comparisons between each generator.  So no more need to distortedly cherry-pick great things to say about your favorite.  \r\n\r\nHere is the one between generator-angular-fullstack and MEAN.js.  The percentages are values for each benefit based on my personal weightings, where a perfect generator would be 100% \r\n\r\ngenerator- angular- fullstack offers 8% that MEANJS.org doesn&#39;t\r\n\r\n* 1.9% Client-side end-to-end tests&lt;br/&gt;\r\n* 0.6% factory&lt;br/&gt;\r\n* 0.5% provider&lt;br/&gt;\r\n* 0.4% SASS&lt;br/&gt;\r\n* 0.4% LESS&lt;br/&gt;\r\n* 0.4% Compass&lt;br/&gt;\r\n* 0.4% decorator&lt;br/&gt;\r\n* 0.4% Endpoint subgenerator&lt;br/&gt;\r\n* 0.4% Comments&lt;br/&gt;\r\n* 0.3% FontAwesome&lt;br/&gt;\r\n* 0.3% Run server in debug mode&lt;br/&gt;\r\n* 0.3% Save generator answers to a file&lt;br/&gt;\r\n* 0.2% constant&lt;br/&gt;\r\n* 0.2% Development build script: ...... replace 3rd party deps with CDN versions&lt;br/&gt;\r\n* 0.2% Authentication - Cookie&lt;br/&gt;\r\n* 0.2% Authentication - JSON Web Token (JWT)&lt;br/&gt;\r\n* 0.2% Server-side logging&lt;br/&gt;\r\n* 0.1% Development build script: run tasks in parallel to speed it up&lt;br/&gt;\r\n* 0.1% Development build script: Renames asset files to prevent browser caching&lt;br/&gt;\r\n* 0.1% Development build script: run end to end tests&lt;br/&gt;\r\n* 0.1% Production build script: safe pre-minification&lt;br/&gt;\r\n* 0.1% Production build script: add CSS vendor prefixes&lt;br/&gt;\r\n* 0.1% Heroku deployment automation&lt;br/&gt;\r\n* 0.1% value&lt;br/&gt;\r\n* 0.1% Jade&lt;br/&gt;\r\n* 0.1% Coffeescript&lt;br/&gt;\r\n* 0.1% Serverside authenticated route restriction&lt;br/&gt;\r\n* 0.1% SASS version of Twitter Bootstrap&lt;br/&gt;\r\n* 0.1% Production build script: compress images&lt;br/&gt;\r\n* 0.1% OpenShift deployment automation&lt;br/&gt;\r\n\r\n\r\nMeanJS.org. offers 9% that generator-angular-fullstack doesn&#39;t\r\n\r\n* 3.7% Dedicated/searchable user group: response time mostly under a day&lt;br/&gt;\r\n* 0.4% Generate routes&lt;br/&gt;\r\n* 0.4% Authentication - Oauth&lt;br/&gt;\r\n* 0.4% config&lt;br/&gt;\r\n* 0.4% i18n, localization&lt;br/&gt;\r\n* 0.4% Input application profile&lt;br/&gt;\r\n* 0.3% FEATURE (a.k.a. module, entity, crud-mock)&lt;br/&gt;\r\n* 0.3% Menus system&lt;br/&gt;\r\n* 0.3% Options for making subcomponents&lt;br/&gt;\r\n* 0.3% test - client side&lt;br/&gt;\r\n* 0.3% Javascript performance thing&lt;br/&gt;\r\n* 0.3% Production build script: make static pages for SEO&lt;br/&gt;\r\n* 0.2% Quick install?&lt;br/&gt;\r\n* 0.2% Dedicated/searchable user group&lt;br/&gt;\r\n* 0.1% Development build script: reload build file upon change&lt;br/&gt;\r\n* 0.1% Development build script: coffee files compiled to JS&lt;br/&gt;\r\n* 0.1% controller - server side&lt;br/&gt;\r\n* 0.1% model - server side&lt;br/&gt;\r\n* 0.1% route - server side&lt;br/&gt;\r\n* 0.1% test - server side&lt;br/&gt;\r\n* 0.1% Swig&lt;br/&gt;\r\n* 0.1% Safe from IP Spoofing&lt;br/&gt;\r\n* 0.1% Production build script: uglification&lt;br/&gt;\r\n* 0.0% Approach to views: URLs start with &quot;#!&quot;&lt;br/&gt;\r\n* 0.0% Approach to frontend services and ajax calls: uses $resource&lt;br/&gt;\r\n\r\n\r\nHere is the one between MEAN.io and MEAN.js in a more readable format\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;table border=&quot;1&quot; cellpadding=&quot;10&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;33%&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MeanJS.org. provides these benefits that MEAN.io. doesn&#39;t&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using github issues&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* There&#39;s a book about it&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold directives&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Only one module definition per file&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Don’t alter a module other than where it is defined&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Object-relational mapping&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side validation, server-side example&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client side validation, using Angular 1.3&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS views, Directives start with &quot;data-&quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use ng-init&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, URLs start with &#39;#!&#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, Use query parameters to store route state&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, LESS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, SASS&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Don&#39;t use &quot;new&quot;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Mocha&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests, using Protractor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI), using Travis&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Yeoman&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build configurations file(s)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Azure&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Digital Ocean, screencast of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku, screencast of it&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Input application profile&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Quick install?&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Options for making subcomponents&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* config generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* directive generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* filter generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* service (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test - client side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* view or view partial generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* model (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test (server side) generator&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, Forgotten Password with Resetting&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Chat&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* CSV processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using Nodemailer&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using its own e-mail implementation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, state-based&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Paypal integration&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Responsive design&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Social connections management page&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Creates a favicon&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Safe from IP Spoofing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authorization, Access Contol List (ACL)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Cookie&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Websocket and RESTful http share security policies&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;33%&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. provides these benefits that MeanJS.org. doesn&#39;t&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Sponsoring company&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Docs with flatdoc&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Share code between projects&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module manager&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use state.resolve()&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, Use AMD with Require.js&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using wiredep&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to error handling, Server-side logging&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Centralized event handling&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $http and $q&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Wrap code in an IIFE (SEAF, SIAF)&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API introspection report and testing interface, using Swagger&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Independent command line interface&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, add IIFEs (SEAF, SIAF) to executable copies of code&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Scaffolding undo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(mean package -d &amp;lt;name&amp;gt;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator, Menu items added for new features&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Admin page for users and roles&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Content Management System&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Use special data-bound directives in your templates.&lt;br&gt;Switch to edit mode and you can edit the values right where you see them)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* File Upload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* i18n, localization&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, submenus&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, actually works with backend API&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, using Elastic Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap, using UI Bootstrap AngularJS directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor, using medium-editor&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Instrumentation, server-side&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serverside authenticated route restriction&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth, Link multiple Oauth strategies to one account&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, JSON Web Token (JWT)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;33%&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. and MeanJS.org. both provide these benefits&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Version Control, using git&lt;br&gt;&lt;b&gt;Platforms&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side JS Framework, using AngularJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS, using Express&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS, using Express&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Google Groups&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Facebook&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, response time mostly under a day&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Example application&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English, using Youtube&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated chatroom&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side, with type subfolders&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold services&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold templates&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate route configuration files for each module&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Modularized Functionality&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global &#39;app&#39; module variable&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global &#39;app&#39; module variable without an IIFE&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db, using MongoDB&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* No XHR calls in controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Templates, using Angular directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, prevents Flash of Unstyled/compiled Content (FOUC)&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, example of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing, using ui-router&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, HTML5 Mode&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using angular.bootstrap()&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve status codes only as responses&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Accept nested, JSON parameters&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Add timer header to requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Support for signed and encrypted cookies&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve URLs based on the route definitions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Can serve headers only&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using JSON&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $resource (angular-resource)&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, JavaScript (server side)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, Swig&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Use &#39;use strict&#39;&lt;br&gt;&lt;b&gt;Tool Configuration/customization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate runtime configuration profiles&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Jasmine&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Karma&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Automated device testing, using Live Reload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests, using Mocha&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI)&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using npm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using bower&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using Grunt&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using gulp&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, reload build script file upon change&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, copy assets to build or dist or target folder&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects js references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects css references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, LESS/SASS/etc files are linted, compiled&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking, using jshint or jslint&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, run unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, concatenation (aggregation, globbing, bundling)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(If you add debug:true to your config/env/development.js the will not be &lt;br&gt;uglified)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, minification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, safe pre-minification, using ng-annotate&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, uglification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, make static pages for SEO&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(README.md&lt;br&gt;feature css&lt;br&gt;routes&lt;br&gt;controller&lt;br&gt;view&lt;br&gt;additional menu item)&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 404 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 500 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, register/login/logout&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, is password manager friendly&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Front-end CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Read&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Create, Update and Delete&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Google Analytics&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync, using socket.io&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing, using lodash&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* One event-loop thread handles all requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Configurable response caching&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Express plugin&lt;br&gt;&lt;b&gt;https&lt;/b&gt;://www.npmjs.org/package/apicache)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Clustered HTTP sessions&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript obfuscation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* https&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Basic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Digest&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Token&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n"
        }
      ],
      "title": "Difference between MEAN.js and MEAN.io",
      "view_count": 104507,
      "answer_count": 5,
      "code_snippet": [
        "<code>&lt;table border=\"1\" cellpadding=\"10\"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=\"top\" width=\"33%\"&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MeanJS.org. provides these benefits that MEAN.io. doesn't&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using github issues&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* There's a book about it&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold directives&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Only one module definition per file&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, Don’t alter a module other than where it is defined&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Object-relational mapping&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side validation, server-side example&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client side validation, using Angular 1.3&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS views, Directives start with \"data-\"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use ng-init&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, URLs start with '#!'&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, Use query parameters to store route state&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, LESS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, SASS&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Don't use \"new\"&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Mocha&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* End-to-end tests, using Protractor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI), using Travis&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Yeoman&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build configurations file(s)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Azure&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Digital Ocean, screencast of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku, screencast of it&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Input application profile&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Quick install?&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Options for making subcomponents&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* config generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* directive generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* filter generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* service (client side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test - client side&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* view or view partial generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* controller (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* model (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* route (server side) generator&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* test (server side) generator&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, Forgotten Password with Resetting&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Chat&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* CSV processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using Nodemailer&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* E-mail sending system, using its own e-mail implementation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, state-based&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Paypal integration&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Responsive design&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Social connections management page&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Creates a favicon&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Safe from IP Spoofing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authorization, Access Contol List (ACL)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Cookie&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Websocket and RESTful http share security policies&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=\"top\" width=\"33%\"&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. provides these benefits that MeanJS.org. doesn't&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Sponsoring company&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Docs with flatdoc&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Share code between projects&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module manager&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, Use state.resolve()&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, Use AMD with Require.js&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using wiredep&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to error handling, Server-side logging&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Centralized event handling&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $http and $q&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Wrap code in an IIFE (SEAF, SIAF)&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API introspection report and testing interface, using Swagger&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI), using Independent command line interface&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, add IIFEs (SEAF, SIAF) to executable copies of code&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Deployment automation, using Heroku&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Scaffolding undo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(mean package -d &amp;lt;name&amp;gt;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator, Menu items added for new features&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Admin page for users and roles&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Content Management System&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Use special data-bound directives in your templates.&lt;br&gt;Switch to edit mode and you can edit the values right where you see them)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* File Upload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* i18n, localization&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system, submenus&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, actually works with backend API&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Search, using Elastic Search&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap, using UI Bootstrap AngularJS directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Text (WYSIWYG) Editor, using medium-editor&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Instrumentation, server-side&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serverside authenticated route restriction&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth, Link multiple Oauth strategies to one account&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, JSON Web Token (JWT)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;td valign=\"top\" width=\"33%\"&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;MEAN.io. and MeanJS.org. both provide these benefits&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Quality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Version Control, using git&lt;br&gt;&lt;b&gt;Platforms&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side JS Framework, using AngularJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Frontend Server/ Framework, using Node.JS, using Express&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* API Server/ Framework, using NodeJS, using Express&lt;br&gt;&lt;b&gt;Help&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Google Groups&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, using Facebook&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated/searchable user group for questions, response time mostly under a day&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Example application&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Tutorial screencast in English, using Youtube&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Dedicated chatroom&lt;br&gt;&lt;b&gt;File Organization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Basic sourcecode organization, module(-&amp;gt;submodule)-&amp;gt;side, with type subfolders&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold services&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold templates&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Module directories hold unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate route configuration files for each module&lt;br&gt;&lt;b&gt;Code Modularization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Modularized Functionality&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global 'app' module variable&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to AngularJS modules, No global 'app' module variable without an IIFE&lt;br&gt;&lt;b&gt;Model&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Setup of persistent storage, using NoSQL db, using MongoDB&lt;br&gt;&lt;b&gt;View&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* No XHR calls in controllers&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Templates, using Angular directives&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to data readiness, prevents Flash of Unstyled/compiled Content (FOUC)&lt;br&gt;&lt;b&gt;Control&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, example of it&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, State-based routing, using ui-router&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend routing or state changing, HTML5 Mode&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to frontend code loading, using angular.bootstrap()&lt;br&gt;&lt;b&gt;Client/Server Communication&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve status codes only as responses&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Accept nested, JSON parameters&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Add timer header to requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Support for signed and encrypted cookies&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Serve URLs based on the route definitions&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Can serve headers only&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using JSON&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Approach to XHR calls, using $resource (angular-resource)&lt;br&gt;&lt;b&gt;Support for things&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, JavaScript (server side)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Languages, Swig&lt;br&gt;&lt;b&gt;Syntax, language and coding&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript 5 best practices, Use 'use strict'&lt;br&gt;&lt;b&gt;Tool Configuration/customization&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Separate runtime configuration profiles&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Jasmine&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Testing, using Karma&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Client-side unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Continuous integration (CI)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Automated device testing, using Live Reload&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Server-side integration &amp;amp; unit tests, using Mocha&lt;br&gt;&lt;b&gt;Development and debugging&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Command line interface (CLI)&lt;br&gt;&lt;b&gt;Build&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using npm&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build-time Dependency Management, using bower&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using Grunt&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Build tool / Task runner, using gulp&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, reload build script file upon change&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, copy assets to build or dist or target folder&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects js references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, html page processing, inject references by searching directories, injects css references&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, LESS/SASS/etc files are linted, compiled&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, JavaScript style checking, using jshint or jslint&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Development build, run unit tests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, script&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, concatenation (aggregation, globbing, bundling)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(If you add debug:true to your config/env/development.js the will not be &lt;br&gt;uglified)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, minification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, safe pre-minification, using ng-annotate&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, uglification&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Production build, make static pages for SEO&lt;br&gt;&lt;b&gt;Code Generation&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* FEATURE (a.k.a. module, entity) generator&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(README.md&lt;br&gt;feature css&lt;br&gt;routes&lt;br&gt;controller&lt;br&gt;view&lt;br&gt;additional menu item)&lt;br&gt;&lt;b&gt;Implemented Functionality&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 404 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* 500 Page&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, register/login/logout&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Account Management, is password manager friendly&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Front-end CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Read&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Full-stack CRUD, with Create, Update and Delete&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Google Analytics&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Menus system&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Realtime data sync, using socket.io&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Styles, using Bootstrap&lt;br&gt;&lt;b&gt;Performance&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Javascript performance thing, using lodash&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* One event-loop thread handles all requests&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Configurable response caching&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(Express plugin&lt;br&gt;&lt;b&gt;https&lt;/b&gt;://www.npmjs.org/package/apicache)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Clustered HTTP sessions&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* JavaScript obfuscation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* https&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, using Oauth&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Basic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Digest&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Authentication, Token&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(With Passport or others)&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "internet-explorer",
        "user-agent",
        "browser-detection"
      ],
      "creation_date": 1339280003,
      "body_markdown": "I want to bounce users of our web site to an error page if they&#39;re using a version of `Internet Explorer` prior to v9. It&#39;s just not worth our time and money to support `IE pre-v9`. Users of all other non-IE browsers are fine and shouldn&#39;t be bounced. Here&#39;s the proposed code:\r\n\r\n    if(navigator.appName.indexOf(&quot;Internet Explorer&quot;)!=-1){\t\t//yeah, he&#39;s using IE\r\n    \tvar badBrowser=(\r\n    \t\tnavigator.appVersion.indexOf(&quot;MSIE 9&quot;)==-1 &amp;&amp;\t//v9 is ok\r\n    \t\tnavigator.appVersion.indexOf(&quot;MSIE 1&quot;)==-1\t//v10, 11, 12, etc. is fine too\r\n    \t);\r\n    \t\t\t\t\t\t\r\n    \tif(badBrowser){\r\n    \t\t// navigate to error page\r\n    \t}\r\n    }\r\n\r\nWill this code do the trick?\r\n\r\nTo head off a few comments that will probably be coming my way:\r\n\r\n 1. Yes, I know that users can forge their `useragent` string. I&#39;m not concerned.\r\n 2. Yes, I know that programming pros prefer sniffing out feature-support instead of browser-type but I don&#39;t feel this approach makes sense in this case. I already know that all (relevant) non-IE browsers support the features that I need and that all `pre-v9 IE` browsers don&#39;t. Checking feature by feature throughout the site would be a waste.\r\n 3. Yes, I know that someone trying to access the site using `IE v1` (or &gt;= 20) wouldn&#39;t get &#39;badBrowser&#39; set to true and the warning page wouldn&#39;t be displayed properly. That&#39;s a risk we&#39;re willing to take.\r\n 4. Yes, I know that Microsoft has &quot;conditional comments&quot; that can be used for precise browser version detection. IE no longer supports conditional comments as of `IE 10`, rendering this approach absolutely useless.\r\n\r\nAny other obvious issues to be aware of?",
      "last_edit_date": 1469007681,
      "up_vote_count": 236,
      "link": "https://stackoverflow.com/questions/10964966/detect-ie-version-prior-to-v9-in-javascript",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1339280710,
          "answer_id": 10965014,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1453434753,
          "last_edit_date": 1453434753,
          "body_markdown": "Your code can do the check, but as you thought, if someone try to access your page using IE v1 or &gt; v19 will not get the error, so might be more safely do the check with Regex expression like this code below:\r\n\r\n    var userAgent = navigator.userAgent.toLowerCase();\r\n    // Test if the browser is IE and check the version number is lower than 9\r\n    if (/msie/.test(userAgent) &amp;&amp; \r\n        parseFloat((userAgent.match(/.*(?:rv|ie)[\\/: ](.+?)([ \\);]|$)/) || [])[1]) &lt; 9) {\r\n      // Navigate to error page\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1339281289,
          "answer_id": 10965073,
          "path": "stack.bower.answer",
          "score": 115,
          "up_vote_count": 116,
          "is_accepted": false,
          "last_activity_date": 1402575164,
          "last_edit_date": 1402575164,
          "body_markdown": "If nobody else has added an `addEventLister`-method and you&#39;re using the correct browser mode then you could check for IE 8 or less with\r\n\r\n    if (window.attachEvent &amp;&amp; !window.addEventListener) {\r\n        // &quot;bad&quot; IE\r\n    }\r\n\r\n[Legacy Internet Explorer and attachEvent (MDN)](https://developer.mozilla.org/en/docs/Web/API/EventTarget.addEventListener#Compatibility)"
        },
        {
          "tags": [],
          "down_vote_count": 8,
          "creation_date": 1339281500,
          "answer_id": 10965091,
          "path": "stack.bower.answer",
          "score": 345,
          "up_vote_count": 353,
          "is_accepted": true,
          "last_activity_date": 1455843692,
          "last_edit_date": 1455843692,
          "body_markdown": "This is my preferred way of doing it. It gives maximum control. (Note: Conditional statements are only supported in IE5 - 9.)\r\n\r\nFirst set up your ie classes correctly\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;!--[if lt IE 7]&gt; &lt;html class=&quot;lt-ie9 lt-ie8 lt-ie7&quot;&gt; &lt;![endif]--&gt;\r\n    &lt;!--[if IE 7]&gt;    &lt;html class=&quot;lt-ie9 lt-ie8&quot;&gt; &lt;![endif]--&gt;\r\n    &lt;!--[if IE 8]&gt;    &lt;html class=&quot;lt-ie9&quot;&gt; &lt;![endif]--&gt;\r\n    &lt;!--[if gt IE 8]&gt;&lt;!--&gt; &lt;html&gt; &lt;!--&lt;![endif]--&gt;    \r\n    &lt;head&gt;\r\n\r\nThen you can just use CSS to make style exceptions, or, if you require, you can add some simple JavaScript:\r\n\r\n    (function ($) {\r\n\t    &quot;use strict&quot;;\r\n\r\n\t    // Detecting IE\r\n\t    var oldIE;\r\n\t    if ($(&#39;html&#39;).is(&#39;.lt-ie7, .lt-ie8, .lt-ie9&#39;)) {\r\n\t\t    oldIE = true;\r\n\t    }\r\n\r\n\t    if (oldIE) {\r\n\t\t    // Here&#39;s your JS for IE..\r\n\t    } else {\r\n\t\t    // ..And here&#39;s the full-fat code for everyone else\r\n\t    }\r\n\r\n    }(jQuery));\r\n\r\nThanks to [Paul Irish][1].\r\n\r\n\r\n  [1]: http://www.paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ &quot;Paul Irish&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1339282999,
          "answer_id": 10965203,
          "path": "stack.bower.answer",
          "score": 110,
          "up_vote_count": 111,
          "is_accepted": false,
          "last_activity_date": 1372326572,
          "last_edit_date": 1372326572,
          "body_markdown": "Use conditional comments. You&#39;re trying to detect users of IE &lt; 9 and conditional comments will work in those browsers; in other browsers (IE &gt;= 10 and non-IE), the comments will be treated as normal HTML comments, which is what they are.\r\n\r\nExample HTML:\r\n\r\n    &lt;!--[if lt IE 9]&gt;\r\n    WE DON&#39;T LIKE YOUR BROWSER\r\n    &lt;![endif]--&gt;\r\n\r\nYou can also do this purely with script, if you need:\r\n\r\n    var div = document.createElement(&quot;div&quot;);\r\n    div.innerHTML = &quot;&lt;!--[if lt IE 9]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;&quot;;\r\n    var isIeLessThan9 = (div.getElementsByTagName(&quot;i&quot;).length == 1);\r\n    if (isIeLessThan9) {\r\n        alert(&quot;WE DON&#39;T LIKE YOUR BROWSER&quot;);\r\n    }\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1359143361,
          "answer_id": 14529319,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1359143361,
          "body_markdown": "This works for me. I use it as a redirect to a page that explains why we don&#39;t like &lt; IE9 and provide links to browsers we prefer.\r\n\r\n    &lt;!--[if lt IE 9]&gt;\r\n    &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;URL=http://google.com&quot;&gt;\r\n    &lt;![endif]--&gt;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1365814913,
          "answer_id": 15983064,
          "path": "stack.bower.answer",
          "score": 151,
          "up_vote_count": 154,
          "is_accepted": false,
          "last_activity_date": 1431697549,
          "last_edit_date": 1431697549,
          "body_markdown": "Return IE version or if not IE return false\r\n\r\n    function isIE () {\r\n      var myNav = navigator.userAgent.toLowerCase();\r\n      return (myNav.indexOf(&#39;msie&#39;) != -1) ? parseInt(myNav.split(&#39;msie&#39;)[1]) : false;\r\n    }\r\n\r\nExample:\r\n\r\n    if (isIE () == 8) {\r\n     // IE8 code\r\n    } else {\r\n     // Other versions IE or not IE\r\n    }\r\n\r\nor\r\n\r\n    if (isIE () &amp;&amp; isIE () &lt; 9) {\r\n     // is IE version less than 9\r\n    } else {\r\n     // is IE 9 and later or not IE\r\n    }\r\n\r\nor \r\n\r\n    if (isIE()) {\r\n     // is IE\r\n    } else {\r\n     // Other browser\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1376557916,
          "answer_id": 18249612,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1376557916,
          "body_markdown": "[Detect IE in JS using conditional comments](http://james.padolsey.com/javascript/detect-ie-in-js-using-conditional-comments/)\r\n\r\n    // ----------------------------------------------------------\r\n    // A short snippet for detecting versions of IE in JavaScript\r\n    // without resorting to user-agent sniffing\r\n    // ----------------------------------------------------------\r\n    // If you&#39;re not in IE (or IE version is less than 5) then:\r\n    //     ie === undefined\r\n    // If you&#39;re in IE (&gt;=5) then you can determine which version:\r\n    //     ie === 7; // IE7\r\n    // Thus, to detect IE:\r\n    //     if (ie) {}\r\n    // And to detect the version:\r\n    //     ie === 6 // IE6\r\n    //     ie &gt; 7 // IE8, IE9 ...\r\n    //     ie &lt; 9 // Anything less than IE9\r\n    // ----------------------------------------------------------\r\n     \r\n    // UPDATE: Now using Live NodeList idea from @jdalton\r\n     \r\n    var ie = (function(){\r\n     \r\n        var undef,\r\n            v = 3,\r\n            div = document.createElement(&#39;div&#39;),\r\n            all = div.getElementsByTagName(&#39;i&#39;);\r\n     \r\n        while (\r\n            div.innerHTML = &#39;&lt;!--[if gt IE &#39; + (++v) + &#39;]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;&#39;,\r\n            all[0]\r\n        );\r\n     \r\n        return v &gt; 4 ? v : undef;\r\n     \r\n    }());"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386280685,
          "answer_id": 20411654,
          "path": "stack.bower.answer",
          "score": 54,
          "up_vote_count": 54,
          "is_accepted": false,
          "last_activity_date": 1389017517,
          "last_edit_date": 1389017517,
          "body_markdown": "To detect MSIE (v6 - v7 - v8 - v9 - v10 - v11) easily : \r\n\r\n    if (navigator.userAgent.indexOf(&#39;MSIE&#39;) !== -1 || navigator.appVersion.indexOf(&#39;Trident/&#39;) &gt; 0) {\r\n       // MSIE\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386535740,
          "answer_id": 20458885,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1386535740,
          "body_markdown": "    var Browser = new function () {\r\n        var self = this;\r\n        var nav = navigator.userAgent.toLowerCase();\r\n        if (nav.indexOf(&#39;msie&#39;) != -1) {\r\n            self.ie = {\r\n                version: toFloat(nav.split(&#39;msie&#39;)[1])\r\n            };\r\n        };\r\n    };\r\n\r\n\r\n    if(Browser.ie &amp;&amp; Browser.ie.version &gt; 9)\r\n    {\r\n        // do something\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1389992880,
          "answer_id": 21195896,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1389992880,
          "body_markdown": "The most comprehensive JS script I found to check for versions of IE is http://www.pinlady.net/PluginDetect/IE/. The entire library is at http://www.pinlady.net/PluginDetect/Browsers/. \r\n\r\nWith IE10, conditional statements are no longer supported.\r\n\r\nWith IE11, the user agent no longer contains MSIE. Also, using the user agent is not reliable because that can be modified.\r\n\r\n\r\nUsing the PluginDetect JS script, you can detect for IE and detect the exact versions by using very specific and well-crafted code that targets specific IE versions. This is very useful when you care exactly what version of browser you are working with."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1391957442,
          "answer_id": 21660559,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1391957442,
          "last_edit_date": 1495540042,
          "body_markdown": "For ie 10 and 11: \r\n\r\nYou can use js and add a class in html to maintain the standard of [conditional comments][1]:\r\n\r\n      var ua = navigator.userAgent,\r\n          doc = document.documentElement;\r\n    \r\n      if ((ua.match(/MSIE 10.0/i))) {\r\n        doc.className = doc.className + &quot; ie10&quot;;\r\n\r\n      } else if((ua.match(/rv:11.0/i))){\r\n        doc.className = doc.className + &quot; ie11&quot;;\r\n      }\r\n\r\n\r\nOr use a lib like bowser:\r\n\r\n[https://github.com/ded/bowser][2]\r\n\r\nOr modernizr for feature detection: \r\n\r\n[http://modernizr.com/][3]\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/10964966/detect-ie-version-in-javascript\r\n  [2]: https://github.com/ded/bowser\r\n  [3]: http://modernizr.com/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1397730700,
          "answer_id": 23130759,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1397730700,
          "body_markdown": "According to [Microsoft][1], following is the best solution, it is also very simple:\r\n\r\n\r\n    function getInternetExplorerVersion()\r\n    // Returns the version of Internet Explorer or a -1\r\n    // (indicating the use of another browser).\r\n    {\r\n        var rv = -1; // Return value assumes failure.\r\n        if (navigator.appName == &#39;Microsoft Internet Explorer&#39;)\r\n        {\r\n            var ua = navigator.userAgent;\r\n            var re  = new RegExp(&quot;MSIE ([0-9]{1,}[\\.0-9]{0,})&quot;);\r\n            if (re.exec(ua) != null)\r\n                rv = parseFloat( RegExp.$1 );\r\n        }\r\n        return rv;\r\n    }\r\n\r\n    function checkVersion()\r\n    {\r\n        var msg = &quot;You&#39;re not using Internet Explorer.&quot;;\r\n        var ver = getInternetExplorerVersion();\r\n    \r\n        if ( ver &gt; -1 )\r\n        {\r\n            if ( ver &gt;= 8.0 ) \r\n                msg = &quot;You&#39;re using a recent copy of Internet Explorer.&quot;\r\n            else\r\n                msg = &quot;You should upgrade your copy of Internet Explorer.&quot;;\r\n          }\r\n        alert( msg );\r\n    }\r\n\r\n\r\n  [1]: http://msdn.microsoft.com/en-us/library/ms537509%28v=vs.85%29.aspx"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1400252169,
          "answer_id": 23698434,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1400839954,
          "last_edit_date": 1400839954,
          "body_markdown": "This function will return the IE major version number as an integer, or `undefined` if the browser isn&#39;t Internet Explorer. This, like all user agent solutions, is suceptible to user agent spoofing (which has been an official feature of IE since version 8).\r\n\r\n    function getIEVersion() {\r\n        var match = navigator.userAgent.match(/(?:MSIE |Trident\\/.*; rv:)(\\d+)/);\r\n        return match ? parseInt(match[1]) : undefined;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1403087428,
          "answer_id": 24283254,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1403087428,
          "body_markdown": "I realise I am a little late to the party here, but I had been checking out a simple one line way to provide feedback on whether a browser is IE and what version from 10 down it was. I haven&#39;t coded this for version 11, so perhaps a little amendment will be needed for that.\r\n\r\nHowever this is the code, it works as an object that has a property and a method and relies on object detection rather than scraping the navigator object (which is massively flawed as it can be spoofed).\r\n\r\n    var isIE = { browser:/*@cc_on!@*/false, detectedVersion: function () { return (typeof window.atob !== &quot;undefined&quot;) ? 10 : (typeof document.addEventListener !== &quot;undefined&quot;) ? 9 : (typeof document.querySelector !== &quot;undefined&quot;) ? 8 : (typeof window.XMLHttpRequest !== &quot;undefined&quot;) ? 7 : (typeof document.compatMode !== &quot;undefined&quot;) ? 6 : 5; } };\r\n\r\nThe usage is `isIE.browser` a property that returns a boolean and relies on conditional comments the method `isIE.detectedVersion()` which returns a number between 5 and 10. I am making the assumption that anything lower than 6 and you are in serious old school territory and you will something more beefy than a one liner and anything higher than 10 and you are in to newer territory. I have read something about IE11 not supporting conditional comments but I&#39;ve not fully investigated, that is maybe for a later date.\r\n\r\nAnyway, as it is, and for a one liner, it will cover the basics of IE browser and version detection. It&#39;s far from perfect, but it is small and easily amended.\r\n\r\nJust for reference, and if anyone is in any doubt on how to actually implement this then the following conditional should help. \r\n\r\n    var isIE = { browser:/*@cc_on!@*/false, detectedVersion: function () { return (typeof window.atob !== &quot;undefined&quot;) ? 10 : (typeof document.addEventListener !== &quot;undefined&quot;) ? 9 : (typeof document.querySelector !== &quot;undefined&quot;) ? 8 : (typeof window.XMLHttpRequest !== &quot;undefined&quot;) ? 7 : (typeof document.compatMode !== &quot;undefined&quot;) ? 6 : 5; } };\r\n    \r\n    /* testing IE */\r\n    \r\n    if (isIE.browser) {\r\n      alert(&quot;This is an IE browser, with a detected version of : &quot; + isIE.detectedVersion());\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1403099146,
          "answer_id": 24287280,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1403101652,
          "last_edit_date": 1403101652,
          "body_markdown": "Detecting IE and its versions couldn&#39;t be easier, and all you need is a bit of native/vanilla Javascript: \r\n\r\n    var uA = navigator.userAgent;\r\n    var browser = null;\r\n    var ieVersion = null;\r\n\r\n    if (uA.indexOf(&#39;MSIE 6&#39;) &gt;= 0) {\r\n        browser = &#39;IE&#39;;\r\n        ieVersion = 6;\r\n    }\r\n    if (uA.indexOf(&#39;MSIE 7&#39;) &gt;= 0) {\r\n        browser = &#39;IE&#39;;\r\n        ieVersion = 7;\r\n    }\r\n    if (document.documentMode) { // as of IE8\r\n        browser = &#39;IE&#39;;\r\n        ieVersion = document.documentMode;\r\n    }\r\n\r\nAnd this is a way to use it: \r\n\r\n    if (browser == &#39;IE&#39; &amp;&amp; ieVersion &lt;= 9) \r\n        document.documentElement.className += &#39; ie9-&#39;;\r\n. \r\n\r\nWorks in all IE versions, including higher versions in lower Compatability View/Mode, and `documentMode` is IE proprietary.  "
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1403699265,
          "answer_id": 24408672,
          "path": "stack.bower.answer",
          "score": 27,
          "up_vote_count": 28,
          "is_accepted": false,
          "last_activity_date": 1444067762,
          "last_edit_date": 1444067762,
          "body_markdown": "To reliably filter IE8 and older, [checking global objects](http://tanalin.com/en/articles/ie-version-js/) can be used:\r\n\r\n    if (document.all &amp;&amp; !document.addEventListener) {\r\n        alert(&#39;IE8 or lower&#39;);\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1407533297,
          "answer_id": 25212514,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1407533297,
          "body_markdown": "To detect Internet Explorer 10|11 you can use this little script immediatelly after body tag:\r\n\r\nIn my case i use jQuery library loaded in head. \r\n\r\n    &lt;!DOCTYPE HTML&gt;\r\n    &lt;html&gt;\r\n    &lt;head&gt;\r\n        &lt;script src=&quot;//code.jquery.com/jquery-1.11.0.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n        &lt;script&gt;if (navigator.appVersion.indexOf(&#39;Trident/&#39;) != -1) $(&quot;body&quot;).addClass(&quot;ie10&quot;);&lt;/script&gt;\r\n    &lt;/body&gt;\r\n    &lt;/html&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1411890522,
          "answer_id": 26082795,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1414151650,
          "last_edit_date": 1414151650,
          "body_markdown": "Detecting IE version using feature detection (IE7+, browsers prior to IE7 are detected as 7):\r\n\r\n    var ie = (function (){\r\n    \tif (window.ActiveXObject === undefined) return null;\r\n    \tif (!document.querySelector) return 7;\r\n    \tif (!document.addEventListener) return 8;\r\n    \tif (!window.atob) return 9;\r\n    \tif (!document.__proto__) return 10;\r\n    \treturn 11;\r\n    })();\r\n\r\nEdit: I&#39;ve created a bower/npm repo for your convenience: [ie-version][1]\r\n\r\n\r\n  [1]: https://github.com/gagle/js-ie-version"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1412652059,
          "answer_id": 26228073,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1414424090,
          "last_edit_date": 1414424090,
          "body_markdown": "Conditional comments are no longer supported in IE as of Version 10 as noted on the [Microsoft reference page][1].\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var ieDetector = function() {\r\n      var browser = { // browser object\r\n\r\n          verIE: null,\r\n          docModeIE: null,\r\n          verIEtrue: null,\r\n          verIE_ua: null\r\n\r\n        },\r\n        tmp;\r\n\r\n      tmp = document.documentMode;\r\n      try {\r\n        document.documentMode = &quot;&quot;;\r\n      } catch (e) {};\r\n\r\n      browser.isIE = typeof document.documentMode == &quot;number&quot; || eval(&quot;/*@cc_on!@*/!1&quot;);\r\n      try {\r\n        document.documentMode = tmp;\r\n      } catch (e) {};\r\n\r\n      // We only let IE run this code.\r\n      if (browser.isIE) {\r\n        browser.verIE_ua =\r\n          (/^(?:.*?[^a-zA-Z])??(?:MSIE|rv\\s*\\:)\\s*(\\d+\\.?\\d*)/i).test(navigator.userAgent || &quot;&quot;) ?\r\n          parseFloat(RegExp.$1, 10) : null;\r\n\r\n        var e, verTrueFloat, x,\r\n          obj = document.createElement(&quot;div&quot;),\r\n\r\n          CLASSID = [\r\n            &quot;{45EA75A0-A269-11D1-B5BF-0000F8051515}&quot;, // Internet Explorer Help\r\n            &quot;{3AF36230-A269-11D1-B5BF-0000F8051515}&quot;, // Offline Browsing Pack\r\n            &quot;{89820200-ECBD-11CF-8B85-00AA005B4383}&quot;\r\n          ];\r\n\r\n        try {\r\n          obj.style.behavior = &quot;url(#default#clientcaps)&quot;\r\n        } catch (e) {};\r\n\r\n        for (x = 0; x &lt; CLASSID.length; x++) {\r\n          try {\r\n            browser.verIEtrue = obj.getComponentVersion(CLASSID[x], &quot;componentid&quot;).replace(/,/g, &quot;.&quot;);\r\n          } catch (e) {};\r\n\r\n          if (browser.verIEtrue) break;\r\n\r\n        };\r\n        verTrueFloat = parseFloat(browser.verIEtrue || &quot;0&quot;, 10);\r\n        browser.docModeIE = document.documentMode ||\r\n          ((/back/i).test(document.compatMode || &quot;&quot;) ? 5 : verTrueFloat) ||\r\n          browser.verIE_ua;\r\n        browser.verIE = verTrueFloat || browser.docModeIE;\r\n      };\r\n\r\n      return {\r\n        isIE: browser.isIE,\r\n        Version: browser.verIE\r\n      };\r\n\r\n    }();\r\n\r\n    document.write(&#39;isIE: &#39; + ieDetector.isIE + &quot;&lt;br /&gt;&quot;);\r\n    document.write(&#39;IE Version Number: &#39; + ieDetector.Version);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nthen use:\r\n\r\n    if((ieDetector.isIE) &amp;&amp; (ieDetector.Version &lt;= 9))\r\n    {\r\n               \r\n    }\r\n\r\n  [1]: http://msdn.microsoft.com/en-us/library/ie/hh801214(v=vs.85).aspx"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413354836,
          "answer_id": 26375930,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1413355447,
          "last_edit_date": 1413355447,
          "body_markdown": "&lt;b&gt;If you need to delect IE Browser version then you can follow below code. This code working well for version IE6 to IE11 &lt;/b&gt;\r\n\r\n\r\n    &lt;!DOCTYPE html&gt;\r\n    &lt;html&gt;\r\n    &lt;body&gt;\r\n    \r\n    &lt;p&gt;Click on Try button to check IE Browser version.&lt;/p&gt;\r\n    \r\n    &lt;button onclick=&quot;getInternetExplorerVersion()&quot;&gt;Try it&lt;/button&gt;\r\n    \r\n    &lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;\r\n    \r\n    &lt;script&gt;\r\n    function getInternetExplorerVersion() {\r\n       var ua = window.navigator.userAgent;\r\n            var msie = ua.indexOf(&quot;MSIE &quot;);\r\n            var rv = -1;\r\n    \r\n            if (msie &gt; 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))      // If Internet Explorer, return version number\r\n            {               \r\n                if (isNaN(parseInt(ua.substring(msie + 5, ua.indexOf(&quot;.&quot;, msie))))) {\r\n                    //For IE 11 &gt;\r\n                    if (navigator.appName == &#39;Netscape&#39;) {\r\n                        var ua = navigator.userAgent;\r\n                        var re = new RegExp(&quot;Trident/.*rv:([0-9]{1,}[\\.0-9]{0,})&quot;);\r\n                        if (re.exec(ua) != null) {\r\n                            rv = parseFloat(RegExp.$1);\r\n                            alert(rv);\r\n                        }\r\n                    }\r\n                    else {\r\n                        alert(&#39;otherbrowser&#39;);\r\n                    }\r\n                }\r\n                else {\r\n                    //For &lt; IE11\r\n                    alert(parseInt(ua.substring(msie + 5, ua.indexOf(&quot;.&quot;, msie))));\r\n                }\r\n                return false;\r\n            }}\r\n    &lt;/script&gt;\r\n    \r\n    &lt;/body&gt;\r\n    &lt;/html&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1417180815,
          "answer_id": 27189599,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1417183600,
          "last_edit_date": 1417183600,
          "body_markdown": "Using JQuery:\r\n\r\n[http://tanalin.com/en/articles/ie-version-js/][1]\r\n\r\nUsing C#:\r\n        \r\n    var browser = Request.Browser.Browser;\r\n\r\n\r\n  [1]: http://tanalin.com/en/articles/ie-version-js/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1420601770,
          "answer_id": 27811063,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1420601770,
          "body_markdown": "Window runs IE10 will be auto update to IE11+ and will be standardized W3C\r\n\r\nNowaday, we don&#39;t need to support IE8-\r\n\r\n        &lt;!DOCTYPE html&gt;\r\n        &lt;!--[if lt IE 9]&gt;&lt;html class=&quot;ie ie8&quot;&gt;&lt;![endif]--&gt;\r\n        &lt;!--[if IE 9]&gt;&lt;html class=&quot;ie ie9&quot;&gt;&lt;![endif]--&gt;\r\n        &lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt;&lt;html&gt;&lt;!--&lt;![endif]--&gt;\r\n        &lt;head&gt;\r\n            ...\r\n            &lt;!--[if lt IE 8]&gt;&lt;meta http-equiv=&quot;Refresh&quot; content=&quot;0;url=/error-browser.html&quot;&gt;&lt;![endif]--\r\n            ...\r\n        &lt;/head&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1424455282,
          "answer_id": 28635355,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1424455827,
          "last_edit_date": 1424455827,
          "body_markdown": "Simple solution stop thinking browser and use the year.\r\n\r\n    var year = eval(today.getYear());\r\n    if(year &lt; 1900 )\r\n     {alert(&#39;Good to go: All browsers and IE 9 &amp; &gt;&#39;);}\r\n    else\r\n     {alert(&#39;Get with it and upgrade your IE to 9 or &gt;&#39;);}\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429841261,
          "answer_id": 29837515,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1429841261,
          "body_markdown": "    var isIE9OrBelow = function()\r\n    {\r\n       return /MSIE\\s/.test(navigator.userAgent) &amp;&amp; parseFloat(navigator.appVersion.split(&quot;MSIE&quot;)[1]) &lt; 10;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1435850852,
          "answer_id": 31188730,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1435850852,
          "body_markdown": "I&#39;m going to recommend not rewriting this code for the umpteenth time. I would recommend you use the Conditionizr library (http://conditionizr.com/) which is capable of testing for specific IE versions as well as other browsers, operating systems, and even the presence or absence of Retina displays.\r\n\r\nInclude the code for only the specific tests you need and you also gain the benefit of a tested library which has been through many iterations (and which would be easy to upgrade without breaking your code).\r\n\r\nIt also meshes nicely with Modernizr which can handle all of those cases where you are better off testing for a specific capability rather than a specific browser."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1436360052,
          "answer_id": 31293352,
          "path": "stack.bower.answer",
          "score": 27,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1510753845,
          "last_edit_date": 1510753845,
          "body_markdown": "Here is the way AngularJS [checks][1] for IE\r\n\r\n    /**\r\n     * documentMode is an IE-only property\r\n     * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx\r\n     */\r\n    var msie = document.documentMode;\r\n\r\n    if (msie &lt; 9) {\r\n        // code for IE &lt; 9\r\n    }\r\n\r\n  [1]: https://github.com/angular/angular.js/blob/master/src/Angular.js#L191-L196"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1440181427,
          "answer_id": 32147025,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1440181427,
          "body_markdown": "I do like that:\r\n\r\n    &lt;script&gt;\r\n\t   function isIE () {\r\n \t\t   var myNav = navigator.userAgent.toLowerCase();\r\n  \t\t   return (myNav.indexOf(&#39;msie&#39;) != -1) ? parseInt(myNav.split(&#39;msie&#39;)[1]) : false;\r\n\t   }\t\r\n\t   var ua = window.navigator.userAgent;\r\n\t   //Internet Explorer | if | 9-11\r\n\t   \r\n       if (isIE () == 9) {\r\n\t   \t   alert(&quot;Shut down this junk! | IE 9&quot;);\r\n       } else if (isIE () == 10){\r\n\t\t   alert(&quot;Shut down this junk! | IE 10&quot;);\r\n\t   } else if (ua.indexOf(&quot;Trident/7.0&quot;) &gt; 0) {\r\n\t       alert(&quot;Shut down this junk! | IE 11&quot;);\r\n\t   }else{\r\n\t\t   alert(&quot;Thank god it&#39;s not IE!&quot;);\r\n\t   }\r\n\r\n    &lt;/script&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1441030662,
          "answer_id": 32313431,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1441030662,
          "body_markdown": "This approach to detecting IE combines the strengths and avoids the weaknesses of jKey&#39;s answer using conditional comments and Owen&#39;s answer using user agents.\r\n\r\n+ jKey&#39;s approach works up to version 9 and immune to user agent spoofing in IE 8  &amp; 9.\r\n+ Owen&#39;s approach can fail on IE 5 &amp; 6 (reporting 7) and is susceptible to UA spoofing, but it can detect IE versions &gt;= 10 (now also including 12, which postdates Owen&#39;s answer). \r\n\r\n        // ----------------------------------------------------------\r\n        // A short snippet for detecting versions of IE\r\n        // ----------------------------------------------------------\r\n        // If you&#39;re not in IE (or IE version is less than 5) then:\r\n        //     ie === undefined\r\n        // Thus, to detect IE:\r\n        //     if (ie) {}\r\n        // And to detect the version:\r\n        //     ie === 6 // IE6\r\n        //     ie &gt; 7 // IE8, IE9 ...\r\n        // ----------------------------------------------------------\r\n        var ie = (function(){\r\n            var v = 3,\r\n                div = document.createElement(&#39;div&#39;),\r\n                all = div.getElementsByTagName(&#39;i&#39;);\r\n\r\n            while (\r\n                div.innerHTML = &#39;&lt;!--[if gt IE &#39; + (++v) + &#39;]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;&#39;,\r\n                all[0]\r\n            );\r\n            if (v &lt;= 4) { // Check for IE&gt;9 using user agent\r\n                var match = navigator.userAgent.match(/(?:MSIE |Trident\\/.*; rv:|Edge\\/)(\\d+)/);\r\n                v = match ? parseInt(match[1]) : undefined;\r\n            }\r\n            return v;\r\n        }());\r\n\r\nThis can be used to set useful classes to your document containing the IE version:\r\n\r\n        if (ie) {\r\n            document.documentElement.className += &#39; ie&#39; + ie;\r\n            if (ie &lt; 9)\r\n                document.documentElement.className += &#39; ieLT9&#39;;\r\n        }\r\n\r\nNote that it detects the compatibility mode being used, if IE is in compatability mode. Also note that IE version is mostly useful for older versions (&lt;10); higher versions are more standards-compliant and it&#39;s probably better to instead check for features using something like modernizr.js.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1447311416,
          "answer_id": 33665856,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1447311416,
          "body_markdown": "    if (!document.addEventListener) {\r\n        // ie8\r\n    } else if (!window.btoa) {\r\n        // ie9\r\n    }\r\n    // others"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1447808479,
          "answer_id": 33770002,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1447808479,
          "body_markdown": "    // Detect ie &lt;= 10\r\n    var ie = /MSIE ([0-9]+)/g.exec(window.navigator.userAgent)[1] || undefined;\r\n\r\n    console.log(ie);\r\n    // Return version ie or undefined if not ie or ie &gt; 10\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1455727199,
          "answer_id": 35462612,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1455727199,
          "body_markdown": "This has been answered to death, but this is all you need.\r\n\r\n    !!navigator.userAgent.match(/msie\\s[5-8]/i)"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1464030694,
          "answer_id": 37398731,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1464036789,
          "last_edit_date": 1464036789,
          "body_markdown": "I made a convenient underscore mixin for this.\r\n\r\n    _.isIE();        // Any version of IE?\r\n    _.isIE(9);       // IE 9?\r\n    _.isIE([7,8,9]); // IE 7, 8 or 9?\r\n\r\n&lt;!-- begin snippet: js hide: false console: true --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    _.mixin({\r\n      isIE: function(mixed) {\r\n        if (_.isUndefined(mixed)) {\r\n          mixed = [7, 8, 9, 10, 11];\r\n        } else if (_.isNumber(mixed)) {\r\n          mixed = [mixed];\r\n        }\r\n        for (var j = 0; j &lt; mixed.length; j++) {\r\n          var re;\r\n          switch (mixed[j]) {\r\n            case 11:\r\n              re = /Trident.*rv\\:11\\./g;\r\n              break;\r\n            case 10:\r\n              re = /MSIE\\s10\\./g;\r\n              break;\r\n            case 9:\r\n              re = /MSIE\\s9\\./g;\r\n              break;\r\n            case 8:\r\n              re = /MSIE\\s8\\./g;\r\n              break;\r\n            case 7:\r\n              re = /MSIE\\s7\\./g;\r\n              break;\r\n          }\r\n\r\n          if (!!window.navigator.userAgent.match(re)) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    });\r\n\r\n    console.log(_.isIE());\r\n    console.log(_.isIE([7, 8, 9]));\r\n    console.log(_.isIE(11));\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js&quot;&gt;&lt;/script&gt;\r\n\r\n&lt;!-- end snippet --&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1473145496,
          "answer_id": 39342600,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1473145496,
          "body_markdown": "The below codepen identifies IE version in all cases (IE&lt;=9, IE10, IE11 and IE/Edge)\r\n\r\n    function detectIE() {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf(&#39;MSIE &#39;);\r\n        if (msie &gt; 0) {\r\n            // IE 10 or older =&gt; return version number\r\n            return parseInt(ua.substring(msie + 5, ua.indexOf(&#39;.&#39;, msie)), 10);\r\n        }\r\n        var trident = ua.indexOf(&#39;Trident/&#39;);\r\n        if (trident &gt; 0) {\r\n            // IE 11 =&gt; return version number\r\n            var rv = ua.indexOf(&#39;rv:&#39;);\r\n            return parseInt(ua.substring(rv + 3, ua.indexOf(&#39;.&#39;, rv)), 10);\r\n        }\r\n        var edge = ua.indexOf(&#39;Edge/&#39;);\r\n        if (edge &gt; 0) {\r\n            // Edge (IE 12+) =&gt; return version number\r\n            return parseInt(ua.substring(edge + 5, ua.indexOf(&#39;.&#39;, edge)), 10);\r\n        }\r\n        // other browser\r\n        return false;\r\n    }\r\n\r\n\r\nref: https://codepen.io/gapcode/pen/vEJNZN\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1495117190,
          "answer_id": 44050387,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1495117190,
          "body_markdown": "Don&#39;t over complicate such simple things. Just use a plain and simple JScript conditional comment. It is the fastest because it adds zero code to non-IE browsers for the detection, and it has compatibility dating back to versions of IE before HTML conditional comments were supported. In short,\r\n\r\n    var IE_version=(-1/*@cc_on,@_jscript_version@*/);\r\n\r\n&lt;b&gt;Beware of minifiers: most (if not all) will mistake the special conditional comment for a regular comment, and remove it&lt;/b&gt;\r\n\r\nBasically, then above code sets the value of IE_version to the version of IE you are using, or -1 f you are not using IE. A live demonstration:\r\n\r\n&lt;!-- begin snippet: js hide: false console: false babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var IE_version=(-1/*@cc_on,@_jscript_version@*/);\r\n    if (IE_version!==-1){\r\n        document.write(&quot;&lt;h1&gt;You are using Internet Explorer &quot; + IE_version + &quot;&lt;/h1&gt;&quot;);\r\n    } else {\r\n        document.write(&quot;&lt;h1&gt;You are not using a version of Internet Explorer less than 11&lt;/h1&gt;&quot;);\r\n    }\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nThis works based on the fact that conditional comments are only visible in older versions of Internet Explorer, and IE sets `@_jscript_version` to the version of the browser. For example, if you are using Internet Explorer 7, then `@_jscript_version` will be set to `7`, thus, the postprocessed javascript that will be executed will actually look like this:\r\n\r\n    var IE_version=(-1,7);\r\n\r\nwhich gets evaluated to 7.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1517297450,
          "answer_id": 48516105,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1517297450,
          "body_markdown": "It helped me\r\n\r\n    function IsIE8Browser() {\r\n      var rv = -1;\r\n      var ua = navigator.userAgent;\r\n      var re = new RegExp(&quot;Trident\\/([0-9]{1,}[\\.0-9]{0,})&quot;);\r\n      if (re.exec(ua) != null) {\r\n        rv = parseFloat(RegExp.$1);\r\n      }\r\n      return (rv == 4);\r\n    }\r\n"
        }
      ],
      "title": "Detect IE version (prior to v9) in JavaScript",
      "view_count": 351917,
      "answer_count": 35,
      "code_snippet": [
        "<code>Internet Explorer</code>",
        "<code>IE pre-v9</code>",
        "<code>if(navigator.appName.indexOf(\"Internet Explorer\")!=-1){     //yeah, he's using IE\n    var badBrowser=(\n        navigator.appVersion.indexOf(\"MSIE 9\")==-1 &amp;&amp;   //v9 is ok\n        navigator.appVersion.indexOf(\"MSIE 1\")==-1  //v10, 11, 12, etc. is fine too\n    );\n\n    if(badBrowser){\n        // navigate to error page\n    }\n}\n</code>",
        "<code>useragent</code>",
        "<code>pre-v9 IE</code>",
        "<code>IE v1</code>",
        "<code>IE 10</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;!--[if lt IE 7]&gt; &lt;html class=\"lt-ie9 lt-ie8 lt-ie7\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7]&gt;    &lt;html class=\"lt-ie9 lt-ie8\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8]&gt;    &lt;html class=\"lt-ie9\"&gt; &lt;![endif]--&gt;\n&lt;!--[if gt IE 8]&gt;&lt;!--&gt; &lt;html&gt; &lt;!--&lt;![endif]--&gt;    \n&lt;head&gt;\n</code>",
        "<code>(function ($) {\n    \"use strict\";\n\n    // Detecting IE\n    var oldIE;\n    if ($('html').is('.lt-ie7, .lt-ie8, .lt-ie9')) {\n        oldIE = true;\n    }\n\n    if (oldIE) {\n        // Here's your JS for IE..\n    } else {\n        // ..And here's the full-fat code for everyone else\n    }\n\n}(jQuery));\n</code>",
        "<code>Error: Saw &lt;!-- within a comment. Probable cause: Nested comment (not allowed). At line 5, column 21 if gt IE 8]&gt;&lt;!--&gt;&lt;html </code>",
        "<code>function isIE () {\n  var myNav = navigator.userAgent.toLowerCase();\n  return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;\n}\n</code>",
        "<code>if (isIE () == 8) {\n // IE8 code\n} else {\n // Other versions IE or not IE\n}\n</code>",
        "<code>if (isIE () &amp;&amp; isIE () &lt; 9) {\n // is IE version less than 9\n} else {\n // is IE 9 and later or not IE\n}\n</code>",
        "<code>if (isIE()) {\n // is IE\n} else {\n // Other browser\n}\n</code>",
        "<code>\"mozilla/5.0 (windows nt 6.3; wow64; trident/7.0; .net4.0e; .net4.0c; media center pc 6.0; .net clr 3.5.30729; .net clr 2.0.50727; .net clr 3.0.30729; rv:11.0) like gecko\"</code>",
        "<code>if (isIE () &amp;&amp; isIE () &lt; 9) {</code>",
        "<code>addEventLister</code>",
        "<code>if (window.attachEvent &amp;&amp; !window.addEventListener) {\n    // \"bad\" IE\n}\n</code>",
        "<code>&lt;!--[if lt IE 9]&gt;\nWE DON'T LIKE YOUR BROWSER\n&lt;![endif]--&gt;\n</code>",
        "<code>var div = document.createElement(\"div\");\ndiv.innerHTML = \"&lt;!--[if lt IE 9]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;\";\nvar isIeLessThan9 = (div.getElementsByTagName(\"i\").length == 1);\nif (isIeLessThan9) {\n    alert(\"WE DON'T LIKE YOUR BROWSER\");\n}\n</code>",
        "<code>if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') &gt; 0) {\n   // MSIE\n}\n</code>",
        "<code>if (document.all &amp;&amp; !document.addEventListener) {\n    alert('IE8 or lower');\n}\n</code>",
        "<code>/**\n * documentMode is an IE-only property\n * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx\n */\nvar msie = document.documentMode;\n\nif (msie &lt; 9) {\n    // code for IE &lt; 9\n}\n</code>",
        "<code>undefined</code>",
        "<code>function getIEVersion() {\n    var match = navigator.userAgent.match(/(?:MSIE |Trident\\/.*; rv:)(\\d+)/);\n    return match ? parseInt(match[1]) : undefined;\n}\n</code>",
        "<code>console.log(!!match &amp;&amp; parseInt(match[1]))</code>",
        "<code>console.log(parseInt(match[1]))</code>",
        "<code>console.log(match)</code>",
        "<code>getIEVersion()</code>",
        "<code>if (getIEVersion() &lt; 9) {/* IE 8 or below */}</code>",
        "<code>if (!getIEVersion()) {/* Not IE */}</code>",
        "<code>undefined &gt; 9</code>",
        "<code>undefined &lt; 9</code>",
        "<code>// ----------------------------------------------------------\n// A short snippet for detecting versions of IE in JavaScript\n// without resorting to user-agent sniffing\n// ----------------------------------------------------------\n// If you're not in IE (or IE version is less than 5) then:\n//     ie === undefined\n// If you're in IE (&gt;=5) then you can determine which version:\n//     ie === 7; // IE7\n// Thus, to detect IE:\n//     if (ie) {}\n// And to detect the version:\n//     ie === 6 // IE6\n//     ie &gt; 7 // IE8, IE9 ...\n//     ie &lt; 9 // Anything less than IE9\n// ----------------------------------------------------------\n\n// UPDATE: Now using Live NodeList idea from @jdalton\n\nvar ie = (function(){\n\n    var undef,\n        v = 3,\n        div = document.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while (\n        div.innerHTML = '&lt;!--[if gt IE ' + (++v) + ']&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;',\n        all[0]\n    );\n\n    return v &gt; 4 ? v : undef;\n\n}());\n</code>",
        "<code>&lt;!--[if lt IE 9]&gt;\n&lt;meta http-equiv=\"refresh\" content=\"0;URL=http://google.com\"&gt;\n&lt;![endif]--&gt;\n</code>",
        "<code>var ie = (function (){\n    if (window.ActiveXObject === undefined) return null;\n    if (!document.querySelector) return 7;\n    if (!document.addEventListener) return 8;\n    if (!window.atob) return 9;\n    if (!document.__proto__) return 10;\n    return 11;\n})();\n</code>",
        "<code>var userAgent = navigator.userAgent.toLowerCase();\n// Test if the browser is IE and check the version number is lower than 9\nif (/msie/.test(userAgent) &amp;&amp; \n    parseFloat((userAgent.match(/.*(?:rv|ie)[\\/: ](.+?)([ \\);]|$)/) || [])[1]) &lt; 9) {\n  // Navigate to error page\n}\n</code>",
        "<code>var ieDetector = function() {\r\n  var browser = { // browser object\r\n\r\n      verIE: null,\r\n      docModeIE: null,\r\n      verIEtrue: null,\r\n      verIE_ua: null\r\n\r\n    },\r\n    tmp;\r\n\r\n  tmp = document.documentMode;\r\n  try {\r\n    document.documentMode = \"\";\r\n  } catch (e) {};\r\n\r\n  browser.isIE = typeof document.documentMode == \"number\" || eval(\"/*@cc_on!@*/!1\");\r\n  try {\r\n    document.documentMode = tmp;\r\n  } catch (e) {};\r\n\r\n  // We only let IE run this code.\r\n  if (browser.isIE) {\r\n    browser.verIE_ua =\r\n      (/^(?:.*?[^a-zA-Z])??(?:MSIE|rv\\s*\\:)\\s*(\\d+\\.?\\d*)/i).test(navigator.userAgent || \"\") ?\r\n      parseFloat(RegExp.$1, 10) : null;\r\n\r\n    var e, verTrueFloat, x,\r\n      obj = document.createElement(\"div\"),\r\n\r\n      CLASSID = [\r\n        \"{45EA75A0-A269-11D1-B5BF-0000F8051515}\", // Internet Explorer Help\r\n        \"{3AF36230-A269-11D1-B5BF-0000F8051515}\", // Offline Browsing Pack\r\n        \"{89820200-ECBD-11CF-8B85-00AA005B4383}\"\r\n      ];\r\n\r\n    try {\r\n      obj.style.behavior = \"url(#default#clientcaps)\"\r\n    } catch (e) {};\r\n\r\n    for (x = 0; x &lt; CLASSID.length; x++) {\r\n      try {\r\n        browser.verIEtrue = obj.getComponentVersion(CLASSID[x], \"componentid\").replace(/,/g, \".\");\r\n      } catch (e) {};\r\n\r\n      if (browser.verIEtrue) break;\r\n\r\n    };\r\n    verTrueFloat = parseFloat(browser.verIEtrue || \"0\", 10);\r\n    browser.docModeIE = document.documentMode ||\r\n      ((/back/i).test(document.compatMode || \"\") ? 5 : verTrueFloat) ||\r\n      browser.verIE_ua;\r\n    browser.verIE = verTrueFloat || browser.docModeIE;\r\n  };\r\n\r\n  return {\r\n    isIE: browser.isIE,\r\n    Version: browser.verIE\r\n  };\r\n\r\n}();\r\n\r\ndocument.write('isIE: ' + ieDetector.isIE + \"&lt;br /&gt;\");\r\ndocument.write('IE Version Number: ' + ieDetector.Version);</code>",
        "<code>if((ieDetector.isIE) &amp;&amp; (ieDetector.Version &lt;= 9))\n{\n\n}\n</code>",
        "<code>version 11</code>",
        "<code>  var ua = navigator.userAgent,\n      doc = document.documentElement;\n\n  if ((ua.match(/MSIE 10.0/i))) {\n    doc.className = doc.className + \" ie10\";\n\n  } else if((ua.match(/rv:11.0/i))){\n    doc.className = doc.className + \" ie11\";\n  }\n</code>",
        "<code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"//code.jquery.com/jquery-1.11.0.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;script&gt;if (navigator.appVersion.indexOf('Trident/') != -1) $(\"body\").addClass(\"ie10\");&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>!!navigator.userAgent.match(/msie\\s[5-8]/i)\n</code>",
        "<code>false</code>",
        "<code>var Browser = new function () {\n    var self = this;\n    var nav = navigator.userAgent.toLowerCase();\n    if (nav.indexOf('msie') != -1) {\n        self.ie = {\n            version: toFloat(nav.split('msie')[1])\n        };\n    };\n};\n\n\nif(Browser.ie &amp;&amp; Browser.ie.version &gt; 9)\n{\n    // do something\n}\n</code>",
        "<code>function getInternetExplorerVersion()\n// Returns the version of Internet Explorer or a -1\n// (indicating the use of another browser).\n{\n    var rv = -1; // Return value assumes failure.\n    if (navigator.appName == 'Microsoft Internet Explorer')\n    {\n        var ua = navigator.userAgent;\n        var re  = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n        if (re.exec(ua) != null)\n            rv = parseFloat( RegExp.$1 );\n    }\n    return rv;\n}\n\nfunction checkVersion()\n{\n    var msg = \"You're not using Internet Explorer.\";\n    var ver = getInternetExplorerVersion();\n\n    if ( ver &gt; -1 )\n    {\n        if ( ver &gt;= 8.0 ) \n            msg = \"You're using a recent copy of Internet Explorer.\"\n        else\n            msg = \"You should upgrade your copy of Internet Explorer.\";\n      }\n    alert( msg );\n}\n</code>",
        "<code>&lt;script&gt;\n   function isIE () {\n       var myNav = navigator.userAgent.toLowerCase();\n       return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;\n   }    \n   var ua = window.navigator.userAgent;\n   //Internet Explorer | if | 9-11\n\n   if (isIE () == 9) {\n       alert(\"Shut down this junk! | IE 9\");\n   } else if (isIE () == 10){\n       alert(\"Shut down this junk! | IE 10\");\n   } else if (ua.indexOf(\"Trident/7.0\") &gt; 0) {\n       alert(\"Shut down this junk! | IE 11\");\n   }else{\n       alert(\"Thank god it's not IE!\");\n   }\n\n&lt;/script&gt;\n</code>",
        "<code>// ----------------------------------------------------------\n// A short snippet for detecting versions of IE\n// ----------------------------------------------------------\n// If you're not in IE (or IE version is less than 5) then:\n//     ie === undefined\n// Thus, to detect IE:\n//     if (ie) {}\n// And to detect the version:\n//     ie === 6 // IE6\n//     ie &gt; 7 // IE8, IE9 ...\n// ----------------------------------------------------------\nvar ie = (function(){\n    var v = 3,\n        div = document.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while (\n        div.innerHTML = '&lt;!--[if gt IE ' + (++v) + ']&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;',\n        all[0]\n    );\n    if (v &lt;= 4) { // Check for IE&gt;9 using user agent\n        var match = navigator.userAgent.match(/(?:MSIE |Trident\\/.*; rv:|Edge\\/)(\\d+)/);\n        v = match ? parseInt(match[1]) : undefined;\n    }\n    return v;\n}());\n</code>",
        "<code>    if (ie) {\n        document.documentElement.className += ' ie' + ie;\n        if (ie &lt; 9)\n            document.documentElement.className += ' ieLT9';\n    }\n</code>",
        "<code>_.isIE();        // Any version of IE?\n_.isIE(9);       // IE 9?\n_.isIE([7,8,9]); // IE 7, 8 or 9?\n</code>",
        "<code>_.mixin({\r\n  isIE: function(mixed) {\r\n    if (_.isUndefined(mixed)) {\r\n      mixed = [7, 8, 9, 10, 11];\r\n    } else if (_.isNumber(mixed)) {\r\n      mixed = [mixed];\r\n    }\r\n    for (var j = 0; j &lt; mixed.length; j++) {\r\n      var re;\r\n      switch (mixed[j]) {\r\n        case 11:\r\n          re = /Trident.*rv\\:11\\./g;\r\n          break;\r\n        case 10:\r\n          re = /MSIE\\s10\\./g;\r\n          break;\r\n        case 9:\r\n          re = /MSIE\\s9\\./g;\r\n          break;\r\n        case 8:\r\n          re = /MSIE\\s8\\./g;\r\n          break;\r\n        case 7:\r\n          re = /MSIE\\s7\\./g;\r\n          break;\r\n      }\r\n\r\n      if (!!window.navigator.userAgent.match(re)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n});\r\n\r\nconsole.log(_.isIE());\r\nconsole.log(_.isIE([7, 8, 9]));\r\nconsole.log(_.isIE(11));</code>",
        "<code>&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js\"&gt;&lt;/script&gt;</code>",
        "<code>var isIE = { browser:/*@cc_on!@*/false, detectedVersion: function () { return (typeof window.atob !== \"undefined\") ? 10 : (typeof document.addEventListener !== \"undefined\") ? 9 : (typeof document.querySelector !== \"undefined\") ? 8 : (typeof window.XMLHttpRequest !== \"undefined\") ? 7 : (typeof document.compatMode !== \"undefined\") ? 6 : 5; } };\n</code>",
        "<code>isIE.browser</code>",
        "<code>isIE.detectedVersion()</code>",
        "<code>var isIE = { browser:/*@cc_on!@*/false, detectedVersion: function () { return (typeof window.atob !== \"undefined\") ? 10 : (typeof document.addEventListener !== \"undefined\") ? 9 : (typeof document.querySelector !== \"undefined\") ? 8 : (typeof window.XMLHttpRequest !== \"undefined\") ? 7 : (typeof document.compatMode !== \"undefined\") ? 6 : 5; } };\n\n/* testing IE */\n\nif (isIE.browser) {\n  alert(\"This is an IE browser, with a detected version of : \" + isIE.detectedVersion());\n}\n</code>",
        "<code>var uA = navigator.userAgent;\nvar browser = null;\nvar ieVersion = null;\n\nif (uA.indexOf('MSIE 6') &gt;= 0) {\n    browser = 'IE';\n    ieVersion = 6;\n}\nif (uA.indexOf('MSIE 7') &gt;= 0) {\n    browser = 'IE';\n    ieVersion = 7;\n}\nif (document.documentMode) { // as of IE8\n    browser = 'IE';\n    ieVersion = document.documentMode;\n}\n</code>",
        "<code>if (browser == 'IE' &amp;&amp; ieVersion &lt;= 9) \n    document.documentElement.className += ' ie9-';\n</code>",
        "<code>documentMode</code>",
        "<code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;p&gt;Click on Try button to check IE Browser version.&lt;/p&gt;\n\n&lt;button onclick=\"getInternetExplorerVersion()\"&gt;Try it&lt;/button&gt;\n\n&lt;p id=\"demo\"&gt;&lt;/p&gt;\n\n&lt;script&gt;\nfunction getInternetExplorerVersion() {\n   var ua = window.navigator.userAgent;\n        var msie = ua.indexOf(\"MSIE \");\n        var rv = -1;\n\n        if (msie &gt; 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))      // If Internet Explorer, return version number\n        {               \n            if (isNaN(parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie))))) {\n                //For IE 11 &gt;\n                if (navigator.appName == 'Netscape') {\n                    var ua = navigator.userAgent;\n                    var re = new RegExp(\"Trident/.*rv:([0-9]{1,}[\\.0-9]{0,})\");\n                    if (re.exec(ua) != null) {\n                        rv = parseFloat(RegExp.$1);\n                        alert(rv);\n                    }\n                }\n                else {\n                    alert('otherbrowser');\n                }\n            }\n            else {\n                //For &lt; IE11\n                alert(parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie))));\n            }\n            return false;\n        }}\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code>",
        "<code>    &lt;!DOCTYPE html&gt;\n    &lt;!--[if lt IE 9]&gt;&lt;html class=\"ie ie8\"&gt;&lt;![endif]--&gt;\n    &lt;!--[if IE 9]&gt;&lt;html class=\"ie ie9\"&gt;&lt;![endif]--&gt;\n    &lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt;&lt;html&gt;&lt;!--&lt;![endif]--&gt;\n    &lt;head&gt;\n        ...\n        &lt;!--[if lt IE 8]&gt;&lt;meta http-equiv=\"Refresh\" content=\"0;url=/error-browser.html\"&gt;&lt;![endif]--\n        ...\n    &lt;/head&gt;\n</code>",
        "<code>var isIE9OrBelow = function()\n{\n   return /MSIE\\s/.test(navigator.userAgent) &amp;&amp; parseFloat(navigator.appVersion.split(\"MSIE\")[1]) &lt; 10;\n}\n</code>",
        "<code>if (!document.addEventListener) {\n    // ie8\n} else if (!window.btoa) {\n    // ie9\n}\n// others\n</code>",
        "<code>// Detect ie &lt;= 10\nvar ie = /MSIE ([0-9]+)/g.exec(window.navigator.userAgent)[1] || undefined;\n\nconsole.log(ie);\n// Return version ie or undefined if not ie or ie &gt; 10\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "javascript-objects"
      ],
      "creation_date": 1223166654,
      "body_markdown": "I need to be able to merge two (very simple) JavaScript objects at runtime.  For example I&#39;d like to:\r\n\r\n    var obj1 = { food: &#39;pizza&#39;, car: &#39;ford&#39; }\r\n    var obj2 = { animal: &#39;dog&#39; }\r\n    \r\n    obj1.merge(obj2);\r\n    \r\n    //obj1 now has three properties: food, car, and animal\r\n\r\nDoes anyone have a script for this or know of a built in way to do this?  I do not need recursion, and I do not need to merge functions, just methods on flat objects.",
      "last_edit_date": 1504801953,
      "up_vote_count": 1664,
      "link": "https://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 36,
          "creation_date": 1223166805,
          "answer_id": 171256,
          "path": "stack.bower.answer",
          "score": 1650,
          "up_vote_count": 1686,
          "is_accepted": true,
          "last_activity_date": 1486654346,
          "last_edit_date": 1486654346,
          "body_markdown": "**ECMAScript 2015 (ES6) Standard Method**\r\n\r\n\t/* For the case in question, you would do: */\r\n\tObject.assign(obj1, obj2);\r\n\r\n\t/** There&#39;s no limit to the number of objects you can merge.\r\n\t *  All objects get merged into the first object. \r\n\t *  Only the object in the first argument is mutated and returned.\r\n\t *  Later properties overwrite earlier properties with the same name. */\r\n\tconst allRules = Object.assign({}, obj1, obj2, obj3, etc);\r\n\r\n(see [MDN JavaScript Reference][1])\r\n\r\n----------\r\n**Method for ES5 and Earlier**\r\n\r\n    for (var attrname in obj2) { obj1[attrname] = obj2[attrname]; }\r\n\r\nNote that this will simply add all attributes of `obj2` to `obj1` which might not be what you want if you still want to use the unmodified `obj1`.\r\n\r\nIf you&#39;re using a framework that craps all over your prototypes then you have to get fancier with checks like `hasOwnProperty`, but that code will work for 99% of cases.\r\n\r\nExample function:\r\n\r\n    /**\r\n     * Overwrites obj1&#39;s values with obj2&#39;s and adds obj2&#39;s if non existent in obj1\r\n     * @param obj1\r\n     * @param obj2\r\n     * @returns obj3 a new object based on obj1 and obj2\r\n     */\r\n    function merge_options(obj1,obj2){\r\n    \tvar obj3 = {};\r\n    \tfor (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\r\n    \tfor (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\r\n    \treturn obj3;\r\n    }\r\n\r\n\r\n  [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Browser_compatibility"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1223166961,
          "answer_id": 171258,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 14,
          "is_accepted": false,
          "last_activity_date": 1477427172,
          "last_edit_date": 1477427172,
          "body_markdown": "[Prototype][1] has this:\r\n\r\n    Object.extend = function(destination,source) {\r\n        for (var property in source)\r\n            destination[property] = source[property];\r\n        return destination;\r\n    }\r\n\r\n`obj1.extend(obj2)` will do what you want.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 19,
          "creation_date": 1223179000,
          "answer_id": 171455,
          "path": "stack.bower.answer",
          "score": 1082,
          "up_vote_count": 1101,
          "is_accepted": false,
          "last_activity_date": 1477427259,
          "last_edit_date": 1477427259,
          "body_markdown": "jQuery also has a utility for this: http://api.jquery.com/jQuery.extend/.\r\n\r\nTaken from the jQuery documentation:\r\n\r\n    // Merge options object into settings object\r\n    var settings = { validate: false, limit: 5, name: &quot;foo&quot; };\r\n    var options  = { validate: true, name: &quot;bar&quot; };\r\n    jQuery.extend(settings, options);\r\n\r\n    // Now the content of settings object is the following:\r\n    // { validate: true, limit: 5, name: &quot;bar&quot; }\r\n\r\n\r\n---\r\n\r\nThe above code will mutate the object named _`settings`_.\r\n\r\nIf you want to create a new object without modifying either argument, use this:\r\n\r\n    var defaults = { validate: false, limit: 5, name: &quot;foo&quot; };\r\n    var options = { validate: true, name: &quot;bar&quot; };\r\n     \r\n    /* Merge defaults and options, without modifying defaults */\r\n    var settings = $.extend({}, defaults, options);\r\n\r\n    // The content of settings variable is now the following:\r\n    // {validate: true, limit: 5, name: &quot;bar&quot;}\r\n    // The &#39;defaults&#39; and &#39;options&#39; variables remained the same.\r\n\r\n[1]: http://api.jquery.com/jQuery.extend/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1229774747,
          "answer_id": 383245,
          "path": "stack.bower.answer",
          "score": 220,
          "up_vote_count": 223,
          "is_accepted": false,
          "last_activity_date": 1368112593,
          "last_edit_date": 1368112593,
          "body_markdown": "I googled for code to merge object properties and ended up here. However since there wasn&#39;t any code for recursive merge I wrote it myself. (Maybe jQuery extend is recursive BTW?) Anyhow, hopefully someone else will find it useful as well.\r\n\r\n(Now the code does not use `Object.prototype` :)\r\n\r\nCode\r\n----\r\n\r\n    /*\r\n    * Recursively merge properties of two objects \r\n    */\r\n    function MergeRecursive(obj1, obj2) {\r\n      \r\n      for (var p in obj2) {\r\n        try {\r\n          // Property in destination object set; update its value.\r\n          if ( obj2[p].constructor==Object ) {\r\n            obj1[p] = MergeRecursive(obj1[p], obj2[p]);\r\n            \r\n          } else {\r\n            obj1[p] = obj2[p];\r\n            \r\n          }\r\n          \r\n        } catch(e) {\r\n          // Property in destination object not set; create it and set its value.\r\n          obj1[p] = obj2[p];\r\n          \r\n        }\r\n      }\r\n      \r\n      return obj1;\r\n    }\r\n  \r\n\r\nAn example\r\n----------\r\n\r\n    o1 = {  a : 1,\r\n            b : 2,\r\n            c : {\r\n              ca : 1,\r\n              cb : 2,\r\n              cc : {\r\n                cca : 100,\r\n                ccb : 200 } } };\r\n                \r\n    o2 = {  a : 10,\r\n            c : {\r\n              ca : 10,\r\n              cb : 20, \r\n              cc : {\r\n                cca : 101,\r\n                ccb : 202 } } };\r\n    \r\n    o3 = MergeRecursive(o1, o2);\r\n    \r\n\r\n**Produces object o3 like**\r\n \r\n    \r\n    o3 = {  a : 10,\r\n            b : 2,\r\n            c : {\r\n              ca : 10,\r\n              cb : 20,\r\n              cc : { \r\n                cca : 101,\r\n                ccb : 202 } } };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1229864521,
          "answer_id": 384432,
          "path": "stack.bower.answer",
          "score": 36,
          "up_vote_count": 36,
          "is_accepted": false,
          "last_activity_date": 1229866144,
          "last_edit_date": 1229866144,
          "body_markdown": "The given solutions should be modified to check `source.hasOwnProperty(property)` in the `for..in` loops before assigning - otherwise, you end up copying the properties of the whole prototype chain, which is rarely desired..."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1236948494,
          "answer_id": 642522,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477427296,
          "last_edit_date": 1477427296,
          "body_markdown": "The correct implementation in [Prototype][1] should look like this:\r\n\r\n    var obj1 = {food: &#39;pizza&#39;, car: &#39;ford&#39;}\r\n    var obj2 = {animal: &#39;dog&#39;}\r\n\r\n    obj1 = Object.extend(obj1, obj2);\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1249070798,
          "answer_id": 1214602,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1477427393,
          "last_edit_date": 1477427393,
          "body_markdown": "In [MooTools][1], there&#39;s [Object.merge()][2]:\r\n\r\n    Object.merge(obj1, obj2);\r\n\r\n  [1]: http://en.wikipedia.org/wiki/MooTools\r\n  [2]: http://mootools.net/docs/core/Types/Object#Object:Object-merge\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 16,
          "creation_date": 1267211638,
          "answer_id": 2344174,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 28,
          "is_accepted": false,
          "last_activity_date": 1509193867,
          "last_edit_date": 1509193867,
          "body_markdown": "For not-too-complicated objects you could use [JSON][1]:\r\n\r\n    var obj1 = { food: &#39;pizza&#39;, car: &#39;ford&#39; }\r\n    var obj2 = { animal: &#39;dog&#39;, car: &#39;chevy&#39;}\r\n    var objMerge;\r\n\r\n    objMerge = JSON.stringify(obj1) + JSON.stringify(obj2);\r\n\r\n    // {&quot;food&quot;: &quot;pizza&quot;,&quot;car&quot;:&quot;ford&quot;}{&quot;animal&quot;:&quot;dog&quot;,&quot;car&quot;:&quot;chevy&quot;}\r\n\r\n    objMerge = objMerge.replace(/\\}\\{/, &quot;,&quot;); //  \\_ replace with comma for valid JSON\r\n\r\n    objMerge = JSON.parse(objMerge); // { food: &#39;pizza&#39;, animal: &#39;dog&#39;, car: &#39;chevy&#39;}\r\n    // Of same keys in both objects, the last object&#39;s value is retained_/\r\n\r\nMind you that in this example &quot;}{&quot; ***must not occur*** within a string!\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JSON\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1289340575,
          "answer_id": 4139190,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1289340575,
          "body_markdown": "The best way for you to do this is to add a proper property that is non-enumerable using Object.defineProperty. \r\n\r\nThis way you will still be able to iterate over your objects properties without having the newly created &quot;extend&quot; that you would get if you were to create the property with Object.prototype.extend.\r\n\r\nHopefully this helps:\r\n\r\n&lt;pre&gt;\r\nObject.defineProperty(Object.prototype, &quot;extend&quot;, {\r\n    enumerable: false,\r\n    value: function(from) {\r\n        var props = Object.getOwnPropertyNames(from);\r\n        var dest = this;\r\n        props.forEach(function(name) {\r\n            if (name in dest) {\r\n                var destination = Object.getOwnPropertyDescriptor(from, name);\r\n                Object.defineProperty(dest, name, destination);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n});\r\n&lt;/pre&gt;\r\n\r\nOnce you have that working, you can do:\r\n\r\n&lt;pre&gt;\r\nvar obj = {\r\n    name: &#39;stack&#39;,\r\n    finish: &#39;overflow&#39;\r\n}\r\nvar replacement = {\r\n    name: &#39;stock&#39;\r\n};\r\n\r\nobj.extend(replacement);\r\n&lt;/pre&gt;\r\n\r\nI just wrote a blog post about it here: http://onemoredigit.com/post/1527191998/extending-objects-in-node-js"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1301744979,
          "answer_id": 5522973,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1335273337,
          "last_edit_date": 1495542395,
          "body_markdown": "I extended David Coallier&#39;s method:\r\n\r\n - Added the possibility to merge multiple objects\r\n - Supports deep objects\r\n - override parameter (that&#39;s detected if the last parameter is a boolean)\r\n\r\nIf override is false, no property gets overridden but new properties will be added.\r\n\r\nUsage:\r\nobj.merge(merges... [, override]);\r\n\r\nHere is my code:\r\n\r\n\tObject.defineProperty(Object.prototype, &quot;merge&quot;, {\r\n\t\tenumerable: false,\r\n\t\tvalue: function () {\r\n\t\t\tvar override = true,\r\n\t\t\t\tdest = this,\r\n\t\t\t\tlen = arguments.length,\r\n\t\t\t\tprops, merge, i, from;\r\n\t\t\t\t\r\n\t\t\tif (typeof(arguments[arguments.length - 1]) === &quot;boolean&quot;) {\r\n\t\t\t\toverride = arguments[arguments.length - 1];\r\n\t\t\t\tlen = arguments.length - 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (i = 0; i &lt; len; i++) {\r\n\t\t\t\tfrom = arguments[i];\r\n\t\t\t\tif (from != null) {\r\n\t\t\t\t\tObject.getOwnPropertyNames(from).forEach(function (name) {\r\n\t\t\t\t\t\tvar descriptor;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// nesting\r\n\t\t\t\t\t\tif ((typeof(dest[name]) === &quot;object&quot; || typeof(dest[name]) === &quot;undefined&quot;)\r\n\t\t\t\t\t\t\t\t&amp;&amp; typeof(from[name]) === &quot;object&quot;) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// ensure proper types (Array rsp Object)\r\n\t\t\t\t\t\t\tif (typeof(dest[name]) === &quot;undefined&quot;) {\r\n\t\t\t\t\t\t\t\tdest[name] = Array.isArray(from[name]) ? [] : {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (override) {\r\n\t\t\t\t\t\t\t\tif (!Array.isArray(dest[name]) &amp;&amp; Array.isArray(from[name])) {\r\n\t\t\t\t\t\t\t\t\tdest[name] = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (Array.isArray(dest[name]) &amp;&amp; !Array.isArray(from[name])) {\r\n\t\t\t\t\t\t\t\t\tdest[name] = {};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdest[name].merge(from[name], override);\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// flat properties\r\n\t\t\t\t\t\telse if ((name in dest &amp;&amp; override) || !(name in dest)) {\r\n\t\t\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(from, name);\r\n\t\t\t\t\t\t\tif (descriptor.configurable) {\r\n\t\t\t\t\t\t\t\tObject.defineProperty(dest, name, descriptor);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\r\n\r\nExamples and TestCases:\r\n\r\n\tfunction clone (obj) {\r\n\t\treturn JSON.parse(JSON.stringify(obj));\r\n\t}\r\n\tvar obj = {\r\n\t\tname : &quot;trick&quot;,\r\n\t\tvalue : &quot;value&quot;\r\n\t};\r\n\t\r\n\tvar mergeObj = {\r\n\t\tname : &quot;truck&quot;,\r\n\t\tvalue2 : &quot;value2&quot;\r\n\t};\r\n\t\r\n\tvar mergeObj2 = {\r\n\t\tname : &quot;track&quot;,\r\n\t\tvalue : &quot;mergeObj2&quot;,\r\n\t\tvalue2 : &quot;value2-mergeObj2&quot;,\r\n\t\tvalue3 : &quot;value3&quot;\r\n\t};\r\n\t\r\n\tassertTrue(&quot;Standard&quot;, clone(obj).merge(mergeObj).equals({\r\n\t\tname : &quot;truck&quot;,\r\n\t\tvalue : &quot;value&quot;,\r\n\t\tvalue2 : &quot;value2&quot;\r\n\t}));\r\n\t\r\n\tassertTrue(&quot;Standard no Override&quot;, clone(obj).merge(mergeObj, false).equals({\r\n\t\tname : &quot;trick&quot;,\r\n\t\tvalue : &quot;value&quot;,\r\n\t\tvalue2 : &quot;value2&quot;\r\n\t}));\r\n\t\r\n\tassertTrue(&quot;Multiple&quot;, clone(obj).merge(mergeObj, mergeObj2).equals({\r\n\t\tname : &quot;track&quot;,\r\n\t\tvalue : &quot;mergeObj2&quot;,\r\n\t\tvalue2 : &quot;value2-mergeObj2&quot;,\r\n\t\tvalue3 : &quot;value3&quot;\r\n\t}));\r\n\t\r\n\tassertTrue(&quot;Multiple no Override&quot;, clone(obj).merge(mergeObj, mergeObj2, false).equals({\r\n\t\tname : &quot;trick&quot;,\r\n\t\tvalue : &quot;value&quot;,\r\n\t\tvalue2 : &quot;value2&quot;,\r\n\t\tvalue3 : &quot;value3&quot;\r\n\t}));\r\n\t\r\n\tvar deep = {\r\n\t\tfirst : {\r\n\t\t\tname : &quot;trick&quot;,\r\n\t\t\tval : &quot;value&quot;\r\n\t\t},\r\n\t\tsecond : {\r\n\t\t\tfoo : &quot;bar&quot;\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar deepMerge = {\r\n\t\tfirst : {\r\n\t\t\tname : &quot;track&quot;,\r\n\t\t\tanotherVal : &quot;wohoo&quot;\r\n\t\t},\r\n\t\tsecond : {\r\n\t\t\tfoo : &quot;baz&quot;,\r\n\t\t\tbar : &quot;bam&quot;\r\n\t\t},\r\n\t\tv : &quot;on first layer&quot;\r\n\t};\r\n\t\r\n\tassertTrue(&quot;Deep merges&quot;, clone(deep).merge(deepMerge).equals({\r\n\t\tfirst : {\r\n\t\t\tname : &quot;track&quot;,\r\n\t\t\tval : &quot;value&quot;,\r\n\t\t\tanotherVal : &quot;wohoo&quot;\r\n\t\t},\r\n\t\tsecond : {\r\n\t\t\tfoo : &quot;baz&quot;,\r\n\t\t\tbar : &quot;bam&quot;\r\n\t\t},\r\n\t\tv : &quot;on first layer&quot;\r\n\t}));\r\n\t\r\n\tassertTrue(&quot;Deep merges no override&quot;, clone(deep).merge(deepMerge, false).equals({\r\n\t\tfirst : {\r\n\t\t\tname : &quot;trick&quot;,\r\n\t\t\tval : &quot;value&quot;,\r\n\t\t\tanotherVal : &quot;wohoo&quot;\r\n\t\t},\r\n\t\tsecond : {\r\n\t\t\tfoo : &quot;bar&quot;,\r\n\t\t\tbar : &quot;bam&quot;\r\n\t\t},\r\n\t\tv : &quot;on first layer&quot;\r\n\t}));\r\n\t\r\n\tvar obj1 = {a: 1, b: &quot;hello&quot;};\r\n\tobj1.merge({c: 3});\r\n\tassertTrue(obj1.equals({a: 1, b: &quot;hello&quot;, c: 3}));\r\n\t\r\n\tobj1.merge({a: 2, b: &quot;mom&quot;, d: &quot;new property&quot;}, false);\r\n\tassertTrue(obj1.equals({a: 1, b: &quot;hello&quot;, c: 3, d: &quot;new property&quot;}));\r\n\t\r\n\tvar obj2 = {};\r\n\tobj2.merge({a: 1}, {b: 2}, {a: 3});\r\n\tassertTrue(obj2.equals({a: 3, b: 2}));\r\n\t\r\n\tvar a = [];\r\n\tvar b = [1, [2, 3], 4];\r\n\ta.merge(b);\r\n\tassertEquals(1, a[0]);\r\n\tassertEquals([2, 3], a[1]);\r\n\tassertEquals(4, a[2]);\r\n\t \r\n\t \r\n\tvar o1 = {};\r\n\tvar o2 = {a: 1, b: {c: 2}};\r\n\tvar o3 = {d: 3};\r\n\to1.merge(o2, o3);\r\n\tassertTrue(o1.equals({a: 1, b: {c: 2}, d: 3}));\r\n\to1.b.c = 99;\r\n\tassertTrue(o2.equals({a: 1, b: {c: 2}}));\r\n     \r\n\t// checking types with arrays and objects\r\n\tvar bo;\r\n\ta = [];\r\n\tbo = [1, {0:2, 1:3}, 4];\r\n\tb = [1, [2, 3], 4];\r\n\t\r\n\ta.merge(b);\r\n\tassertTrue(&quot;Array stays Array?&quot;, Array.isArray(a[1]));\r\n\t\r\n\ta = [];\r\n\ta.merge(bo);\r\n\tassertTrue(&quot;Object stays Object?&quot;, !Array.isArray(a[1]));\r\n\t\r\n\ta = [];\r\n\ta.merge(b);\r\n\ta.merge(bo);\r\n\tassertTrue(&quot;Object overrides Array&quot;, !Array.isArray(a[1]));\r\n\t\r\n\ta = [];\r\n\ta.merge(b);\r\n\ta.merge(bo, false);\r\n\tassertTrue(&quot;Object does not override Array&quot;, Array.isArray(a[1]));\r\n\t\r\n\ta = [];\r\n\ta.merge(bo);\r\n\ta.merge(b);\r\n\tassertTrue(&quot;Array overrides Object&quot;, Array.isArray(a[1]));\r\n\t\r\n\ta = [];\r\n\ta.merge(bo);\r\n\ta.merge(b, false);\r\n\tassertTrue(&quot;Array does not override Object&quot;, !Array.isArray(a[1]));\r\n    \r\nMy equals method can be found here: https://stackoverflow.com/questions/1068834/object-comparison-in-javascript/5522917#5522917"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1309524333,
          "answer_id": 6548123,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477427769,
          "last_edit_date": 1477427769,
          "body_markdown": "I&#39;m kind of getting started with JavaScript, so correct me if I&#39;m wrong.\r\n\r\nBut wouldn&#39;t it be better if you could merge any number of objects? Here&#39;s how I do it using the native `Arguments` object.\r\n\r\nThe key to is that you can actually pass any number of arguments to a JavaScript function without defining them in the function declaration. You just can&#39;t access them without using the Arguments object.\r\n\r\n    function mergeObjects() (\r\n        var tmpObj = {};\r\n\r\n        for(var o in arguments) {\r\n            for(var m in arguments[o]) {\r\n                tmpObj[m] = arguments[o][m];\r\n            }\r\n        }\r\n        return tmpObj;\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1310223186,
          "answer_id": 6635477,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1477427846,
          "last_edit_date": 1477427846,
          "body_markdown": "Use:\r\n\r\n    //Takes any number of objects and returns one merged object\r\n    var objectMerge = function(){\r\n        var out = {};\r\n        if(!arguments.length)\r\n            return out;\r\n        for(var i=0; i&lt;arguments.length; i++) {\r\n            for(var key in arguments[i]){\r\n                out[key] = arguments[i][key];\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n\r\nIt was tested with:\r\n\r\n    console.log(objectMerge({a:1, b:2}, {a:2, c:4}));\r\n\r\nIt results in:\r\n\r\n    { a: 2, b: 2, c: 4 }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1311324653,
          "answer_id": 6787677,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1477428000,
          "last_edit_date": 1477428000,
          "body_markdown": "In [Ext&amp;nbsp;JS][1] 4 it can be done as follows:\r\n\r\n    var mergedObject = Ext.Object.merge(object1, object2)\r\n\r\n    // Or shorter:\r\n    var mergedObject2 = Ext.merge(object1, object2)\r\n\r\nSee *[merge( object ) : Object][2]*.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Ext_JS\r\n  [2]: http://docs.sencha.com/ext-js/4-0/#/api/Ext.Object-method-merge\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1314178767,
          "answer_id": 7173308,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1477430482,
          "last_edit_date": 1477430482,
          "body_markdown": "gossi&#39;s extension of David Coallier&#39;s method:\r\n\r\nCheck these two lines:\r\n\r\n    from = arguments[i];\r\n    Object.getOwnPropertyNames(from).forEach(function (name) {\r\n\r\nOne need to check &quot;from&quot; against null object... If for example merging an object that comes from an [Ajax][1] response, previously created on a server, an object property can have a value of &quot;null&quot;, and in that case the above code generates an error saying:\r\n\r\n&gt; &quot;from&quot; is not a valid object\r\n\r\nSo for example, wrapping the &quot;...Object.getOwnPropertyNames(from).forEach...&quot; function with an &quot;if (from != null) { ... }&quot; will prevent that error occurring.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Ajax_%28programming%29\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1320142814,
          "answer_id": 7965071,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1477430584,
          "last_edit_date": 1495535497,
          "body_markdown": "**Deep recursive merge of [JSON][1] strings and values** (better implementation to [Markus&#39; answer][2]):\r\n\r\n###Code\r\n\r\n    function mergeRecursive(obj1, obj2) {\r\n        for (var p in obj2) {\r\n            if( obj2.hasOwnProperty(p)){\r\n                obj1[p] = typeof obj2[p] === &#39;object&#39; ? mergeRecursive(obj1[p], obj2[p]) : obj2[p];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n\r\n###Example:\r\n\r\n    o1 = { a:1, b:2, c:{ ca:1, cb:2, cc:{ cca:100, ccb:200 }}};\r\n    o2 = { a:10, c:{ ca:10, cb:20, cc:{ cca:101, ccb:202 }}};\r\n    mergeRecursive(o1, o2);\r\n\r\n###Output:\r\n\r\n    { a : 10,\r\n         b : 2,\r\n         c : {\r\n             ca : 10,\r\n             cb : 20,\r\n             cc : {\r\n                 cca : 101,\r\n                 ccb : 202\r\n             }\r\n         }\r\n    };\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JSON\r\n  [2]: https://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically/383245#383245"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1324739395,
          "answer_id": 8625261,
          "path": "stack.bower.answer",
          "score": 55,
          "up_vote_count": 56,
          "is_accepted": false,
          "last_activity_date": 1477430673,
          "last_edit_date": 1477430673,
          "body_markdown": "I need to merge objects today, and this question (and answers) helped me a lot. I tried some of the answers, but none of them fit my needs, so I combined some of the answers, added something myself and came up with a new merge function. Here it is:\r\n\r\n&lt;!-- language-all: lang-js --&gt;\r\n\r\n    var merge = function() {\r\n        var obj = {},\r\n            i = 0,\r\n            il = arguments.length,\r\n            key;\r\n        for (; i &lt; il; i++) {\r\n            for (key in arguments[i]) {\r\n                if (arguments[i].hasOwnProperty(key)) {\r\n                    obj[key] = arguments[i][key];\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    };\r\n\r\nSome example usages:\r\n\r\n    var t1 = {\r\n        key1: 1,\r\n        key2: &quot;test&quot;,\r\n        key3: [5, 2, 76, 21]\r\n    };\r\n    var t2 = {\r\n        key1: {\r\n            ik1: &quot;hello&quot;,\r\n            ik2: &quot;world&quot;,\r\n            ik3: 3\r\n        }\r\n    };\r\n    var t3 = {\r\n        key2: 3,\r\n        key3: {\r\n            t1: 1,\r\n            t2: 2,\r\n            t3: {\r\n                a1: 1,\r\n                a2: 3,\r\n                a4: [21, 3, 42, &quot;asd&quot;]\r\n            }\r\n        }\r\n    };\r\n\r\n    console.log(merge(t1, t2));\r\n    console.log(merge(t1, t3));\r\n    console.log(merge(t2, t3));\r\n    console.log(merge(t1, t2, t3));\r\n    console.log(merge({}, t1, { key1: 1 }));\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1325886466,
          "answer_id": 8764974,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1510003622,
          "last_edit_date": 1510003622,
          "body_markdown": "Based on [Markus&#39;][1] and [vsync&#39; answer][2], this is an expanded version. The function takes any number of arguments. It can be used to set properties on [DOM][3] nodes and makes deep copies of values. However, the first argument is given by reference.\r\n\r\nTo detect a DOM node, the isDOMNode() function is used (see Stack&amp;nbsp;Overflow question *[JavaScript isDOM — How do you check if a JavaScript Object is a DOM Object?][4]*)\r\n\r\nIt was tested in [Opera][5] 11, Firefox 6, [Internet&amp;nbsp;Explorer&amp;nbsp;8][6] and Google Chrome 16.\r\n\r\nCode\r\n----\r\n\r\n    function mergeRecursive() {\r\n\r\n      // _mergeRecursive does the actual job with two arguments.\r\n      var _mergeRecursive = function (dst, src) {\r\n        if (isDOMNode(src) || typeof src !== &#39;object&#39; || src === null) {\r\n          return dst;\r\n        }\r\n\r\n        for (var p in src) {\r\n          if (!src.hasOwnProperty(p))\r\n            continue;\r\n          if (src[p] === undefined)\r\n            continue;\r\n          if ( typeof src[p] !== &#39;object&#39; || src[p] === null) {\r\n            dst[p] = src[p];\r\n          } else if (typeof dst[p]!==&#39;object&#39; || dst[p] === null) {\r\n            dst[p] = _mergeRecursive(src[p].constructor===Array ? [] : {}, src[p]);\r\n          } else {\r\n            _mergeRecursive(dst[p], src[p]);\r\n          }\r\n        }\r\n        return dst;\r\n      }\r\n\r\n      // Loop through arguments and merge them into the first argument.\r\n      var out = arguments[0];\r\n      if (typeof out !== &#39;object&#39; || out === null)\r\n        return out;\r\n      for (var i = 1, il = arguments.length; i &lt; il; i++) {\r\n        _mergeRecursive(out, arguments[i]);\r\n      }\r\n      return out;\r\n    }\r\n\r\n\r\nSome examples\r\n-------------\r\n\r\nSet innerHTML and style of a HTML Element\r\n\r\n    mergeRecursive(\r\n      document.getElementById(&#39;mydiv&#39;),\r\n      {style: {border: &#39;5px solid green&#39;, color: &#39;red&#39;}},\r\n      {innerHTML: &#39;Hello world!&#39;});\r\n\r\nMerge arrays and objects. Note that undefined can be used to preserv values in the lefthand array/object.\r\n\r\n    o = mergeRecursive({a:&#39;a&#39;}, [1,2,3], [undefined, null, [30,31]], {a:undefined, b:&#39;b&#39;});\r\n    // o = {0:1, 1:null, 2:[30,31], a:&#39;a&#39;, b:&#39;b&#39;}\r\n\r\nAny argument not beeing a JavaScript object (including null) will be ignored. Except for the first argument, also DOM nodes are discarded. Beware that i.e. strings, created like new String() are in fact objects.\r\n\r\n    o = mergeRecursive({a:&#39;a&#39;}, 1, true, null, undefined, [1,2,3], &#39;bc&#39;, new String(&#39;de&#39;));\r\n    // o = {0:&#39;d&#39;, 1:&#39;e&#39;, 2:3, a:&#39;a&#39;}\r\n\r\nIf you want to merge two objects into a new (without affecting any of the two) supply {} as first argument\r\n\r\n    var a={}, b={b:&#39;abc&#39;}, c={c:&#39;cde&#39;}, o;\r\n    o = mergeRecursive(a, b, c);\r\n    // o===a is true, o===b is false, o===c is false\r\n\r\n\r\n**Edit** (by ReaperSoon):\r\n\r\nTo also merge arrays\r\n\r\n    function mergeRecursive(obj1, obj2) {\r\n      if (Array.isArray(obj2)) { return obj1.concat(obj2); }\r\n      for (var p in obj2) {\r\n        try {\r\n          // Property in destination object set; update its value.\r\n          if ( obj2[p].constructor==Object ) {\r\n            obj1[p] = mergeRecursive(obj1[p], obj2[p]);\r\n          } else if (Array.isArray(obj2[p])) {\r\n          \tobj1[p] = obj1[p].concat(obj2[p]);\r\n          } else {\r\n            obj1[p] = obj2[p];\r\n          }\r\n        } catch(e) {\r\n          // Property in destination object not set; create it and set its value.\r\n          obj1[p] = obj2[p];\r\n        }\r\n      }\r\n      return obj1;\r\n    }\r\n\r\n  [1]: https://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically/383245#383245\r\n  [2]: https://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically/7965071#7965071\r\n  [3]: http://en.wikipedia.org/wiki/Document_Object_Model\r\n  [4]: https://stackoverflow.com/a/8736129/1131084\r\n  [5]: http://en.wikipedia.org/wiki/Opera_%28web_browser%29\r\n  [6]: http://en.wikipedia.org/wiki/Internet_Explorer_8\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1328725775,
          "answer_id": 9199271,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477431488,
          "last_edit_date": 1477431488,
          "body_markdown": "In [YUI][1] [`Y.merge`][2] should get the job done:\r\n\r\n    Y.merge(obj1, obj2, obj3....) \r\n\r\n  [1]: http://en.wikipedia.org/wiki/Yahoo!_UI_Library\r\n  [2]: http://yuilibrary.com/yui/docs/yui/yui-merge.html\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1329651892,
          "answer_id": 9348845,
          "path": "stack.bower.answer",
          "score": 165,
          "up_vote_count": 167,
          "is_accepted": false,
          "last_activity_date": 1477431561,
          "last_edit_date": 1477431561,
          "body_markdown": "Note that [`underscore.js`][1]&#39;s [`extend`-method][2] does this in a one-liner:\r\n\r\n    _.extend({name : &#39;moe&#39;}, {age : 50});\r\n    =&gt; {name : &#39;moe&#39;, age : 50}\r\n\r\n  [1]: http://underscorejs.org/\r\n  [2]: http://underscorejs.org/#extend\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1334870584,
          "answer_id": 10236991,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1477431654,
          "last_edit_date": 1477431654,
          "body_markdown": "Just if anyone is using [Google Closure Library][1]:\r\n\r\n    goog.require(&#39;goog.object&#39;);\r\n    var a = {&#39;a&#39;: 1, &#39;b&#39;: 2};\r\n    var b = {&#39;b&#39;: 3, &#39;c&#39;: 4};\r\n    goog.object.extend(a, b);\r\n    // Now object a == {&#39;a&#39;: 1, &#39;b&#39;: 3, &#39;c&#39;: 4};\r\n\r\n[Similar helper function exists for array][2]:\r\n\r\n    var a = [1, 2];\r\n    var b = [3, 4];\r\n    goog.array.extend(a, b); // Extends array &#39;a&#39;\r\n    goog.array.concat(a, b); // Returns concatenation of array &#39;a&#39; and &#39;b&#39;\r\n\r\n  [1]: http://closure-library.googlecode.com/svn/docs/closure_goog_object_object.js.html\r\n  [2]: http://closure-library.googlecode.com/svn/docs/closure_goog_array_array.js.html\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1338648739,
          "answer_id": 10863292,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1342824141,
          "last_edit_date": 1342824141,
          "body_markdown": "    function extend()\r\n\t{ \r\n \t\tvar o = {}; \r\n \t\t\r\n\t\tfor (var i in arguments)\r\n\t\t{ \r\n  \t\t\tvar s = arguments[i]; \r\n  \t\t \r\n\t\t\tfor (var i in s)\r\n\t\t \t{ \r\n     \t\t\to[i] = s[i]; \r\n  \t\t\t} \r\n \t \t} \r\n\t \r\n\t \treturn o;\r\n\t}"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1348059490,
          "answer_id": 12495197,
          "path": "stack.bower.answer",
          "score": 18,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1477431822,
          "last_edit_date": 1477431822,
          "body_markdown": "Just by the way, what you&#39;re all doing is overwriting properties, not merging...\r\n\r\nThis is how JavaScript objects area really merged: Only keys in the `to` object which are not objects themselves will be overwritten by `from`. Everything else will be ***really merged***. Of course you can change this behaviour to not overwrite anything which exists like only if `to[n] is undefined`, etc...:\r\n\r\n    var realMerge = function (to, from) {\r\n\r\n        for (n in from) {\r\n\r\n            if (typeof to[n] != &#39;object&#39;) {\r\n                to[n] = from[n];\r\n            } else if (typeof from[n] == &#39;object&#39;) {\r\n                to[n] = realMerge(to[n], from[n]);\r\n            }\r\n        }\r\n        return to;\r\n    };\r\n\r\nUsage:\r\n\r\n    var merged = realMerge(obj1, obj2);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1349080306,
          "answer_id": 12669852,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1349080306,
          "body_markdown": "This merges `obj` into a &quot;default&quot; `def`. `obj` has precedence for anything that exists in both, since `obj` is copied into `def`. Note also that this is recursive.\r\n\r\n    function mergeObjs(def, obj) {\r\n        if (typeof obj == &#39;undefined&#39;) {\r\n            return def;\r\n        } else if (typeof def == &#39;undefined&#39;) {\r\n            return obj;\r\n        }\r\n        for (var i in obj) {\r\n            if (obj[i] != null &amp;&amp; obj[i].constructor == Object) {\r\n                def[i] = mergeObjs(def[i], obj[i]);\r\n            } else {\r\n                def[i] = obj[i];\r\n            }\r\n        }\r\n        return def;\r\n    }\r\n\r\n    a = {x : {y : [123]}}\r\n    b = {x : {z : 123}}\r\n    console.log(mergeObjs(a, b));\r\n    // {x: {y : [123], z : 123}}"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1350639878,
          "answer_id": 12971555,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1477431926,
          "last_edit_date": 1477431926,
          "body_markdown": "It&#39;s worth mentioning that the version from the [140byt.es collection][1] is solving the task within minimum space and is worth a try for this purpose:\r\n\r\nCode:\r\n\r\n    function m(a,b,c){for(c in b)b.hasOwnProperty(c)&amp;&amp;((typeof a[c])[0]==&#39;o&#39;?m(a[c],b[c]):a[c]=b[c])}\r\n\r\nUsage for your purpose:\r\n\r\n    m(obj1,obj2);\r\n\r\nHere&#39;s the [original Gist][2].\r\n\r\n  [1]: http://www.140byt.es/\r\n  [2]: https://gist.github.com/988478\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1355938772,
          "answer_id": 13958020,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1355938772,
          "body_markdown": "    A={a:1,b:function(){alert(9)}}\r\n    B={a:2,c:3}\r\n    A.merge = function(){for(var i in B){A[i]=B[i]}}\r\n    A.merge()\r\n\r\nResult is: {a:2,c:3,b:function()}"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1366749920,
          "answer_id": 16178864,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1492510914,
          "last_edit_date": 1492510914,
          "body_markdown": "Here&#39;s my stab which\r\n\r\n1. Supports deep merge\r\n2. Does not mutate arguments\r\n3. Takes any number of arguments\r\n4. Does not extend the object prototype\r\n5. Does not depend on another library ([jQuery][1], [MooTools][2], [Underscore.js][3], etc.)\r\n6. Includes check for hasOwnProperty\r\n7. Is short :)\r\n\r\n        /*\r\n            Recursively merge properties and return new object\r\n            obj1 &amp;lt;- obj2 [ &amp;lt;- ... ]\r\n        */\r\n        function merge () {\r\n            var dst = {}\r\n                ,src\r\n                ,p\r\n                ,args = [].splice.call(arguments, 0)\r\n            ;\r\n\r\n            while (args.length &gt; 0) {\r\n                src = args.splice(0, 1)[0];\r\n                if (toString.call(src) == &#39;[object Object]&#39;) {\r\n                    for (p in src) {\r\n                        if (src.hasOwnProperty(p)) {\r\n                            if (toString.call(src[p]) == &#39;[object Object]&#39;) {\r\n                                dst[p] = merge(dst[p] || {}, src[p]);\r\n                            } else {\r\n                                dst[p] = src[p];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n           return dst;\r\n        }\r\n\r\nExample:\r\n\r\n    a = {\r\n        &quot;p1&quot;: &quot;p1a&quot;,\r\n        &quot;p2&quot;: [\r\n            &quot;a&quot;,\r\n            &quot;b&quot;,\r\n            &quot;c&quot;\r\n        ],\r\n        &quot;p3&quot;: true,\r\n        &quot;p5&quot;: null,\r\n        &quot;p6&quot;: {\r\n            &quot;p61&quot;: &quot;p61a&quot;,\r\n            &quot;p62&quot;: &quot;p62a&quot;,\r\n            &quot;p63&quot;: [\r\n                &quot;aa&quot;,\r\n                &quot;bb&quot;,\r\n                &quot;cc&quot;\r\n            ],\r\n            &quot;p64&quot;: {\r\n                &quot;p641&quot;: &quot;p641a&quot;\r\n            }\r\n        }\r\n    };\r\n\r\n    b = {\r\n        &quot;p1&quot;: &quot;p1b&quot;,\r\n        &quot;p2&quot;: [\r\n            &quot;d&quot;,\r\n            &quot;e&quot;,\r\n            &quot;f&quot;\r\n        ],\r\n        &quot;p3&quot;: false,\r\n        &quot;p4&quot;: true,\r\n        &quot;p6&quot;: {\r\n            &quot;p61&quot;: &quot;p61b&quot;,\r\n            &quot;p64&quot;: {\r\n                &quot;p642&quot;: &quot;p642b&quot;\r\n            }\r\n        }\r\n    };\r\n\r\n    c = {\r\n        &quot;p1&quot;: &quot;p1c&quot;,\r\n        &quot;p3&quot;: null,\r\n        &quot;p6&quot;: {\r\n            &quot;p62&quot;: &quot;p62c&quot;,\r\n            &quot;p64&quot;: {\r\n                &quot;p643&quot;: &quot;p641c&quot;\r\n            }\r\n        }\r\n    };\r\n\r\n    d = merge(a, b, c);\r\n\r\n\r\n    /*\r\n        d = {\r\n            &quot;p1&quot;: &quot;p1c&quot;,\r\n            &quot;p2&quot;: [\r\n                &quot;d&quot;,\r\n                &quot;e&quot;,\r\n                &quot;f&quot;\r\n            ],\r\n            &quot;p3&quot;: null,\r\n            &quot;p5&quot;: null,\r\n            &quot;p6&quot;: {\r\n                &quot;p61&quot;: &quot;p61b&quot;,\r\n                &quot;p62&quot;: &quot;p62c&quot;,\r\n                &quot;p63&quot;: [\r\n                    &quot;aa&quot;,\r\n                    &quot;bb&quot;,\r\n                    &quot;cc&quot;\r\n                ],\r\n                &quot;p64&quot;: {\r\n                    &quot;p641&quot;: &quot;p641a&quot;,\r\n                    &quot;p642&quot;: &quot;p642b&quot;,\r\n                    &quot;p643&quot;: &quot;p641c&quot;\r\n                }\r\n            },\r\n            &quot;p4&quot;: true\r\n        };\r\n    */\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JQuery\r\n  [2]: http://en.wikipedia.org/wiki/MooTools\r\n  [3]: https://en.wikipedia.org/wiki/Underscore.js\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1375124223,
          "answer_id": 17932010,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1477432263,
          "last_edit_date": 1477432263,
          "body_markdown": "You could assign every object a default merge (perhaps &#39;inherit&#39; a better name) method:\r\n\r\nIt should work with either objects or instantiated functions.\r\n\r\nThe below code handles overriding the merged values if so desired:\r\n\r\n    Object.prototype.merge = function(obj, override) {\r\n    // Don&#39;t override by default\r\n\r\n        for (var key in obj) {\r\n            var n = obj[key];\r\n            var t = this[key];\r\n            this[key] = (override &amp;&amp; t) ? n : t;\r\n        };\r\n\r\n    };\r\n\r\nTest data is below:\r\n\r\n    var Mammal = function () {\r\n        this.eyes = 2;\r\n        this.thinking_brain = false;\r\n        this.say = function () {\r\n        console.log(&#39;screaming like a mammal&#39;)};\r\n    }\r\n\r\n    var Human = function () {\r\n        this.thinking_brain = true;\r\n        this.say = function() {console.log(&#39;shouting like a human&#39;)};\r\n    }\r\n\r\n    john = new Human();\r\n\r\n    // Extend mammal, but do not override from mammal\r\n    john.merge(new Mammal());\r\n    john.say();\r\n\r\n    // Extend mammal and override from mammal\r\n    john.merge(new Mammal(), true);\r\n    john.say();\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1375372990,
          "answer_id": 17999073,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1375372990,
          "body_markdown": "My way:\r\n\r\n    function mergeObjects(defaults, settings) {\r\n\t\tObject.keys(defaults).forEach(function(key_default) {\r\n\t\t\tif (typeof settings[key_default] == &quot;undefined&quot;) {\r\n\t\t\t\tsettings[key_default] = defaults[key_default];\r\n\t\t\t} else if (isObject(defaults[key_default]) &amp;&amp; isObject(settings[key_default])) {\r\n\t\t\t\tmergeObjects(defaults[key_default], settings[key_default]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction isObject(object) {\r\n\t\t\treturn Object.prototype.toString.call(object) === &#39;[object Object]&#39;;\r\n\t\t}\r\n\r\n\t\treturn settings;\r\n\t}\r\n\r\n:)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386175340,
          "answer_id": 20381012,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1386330073,
          "last_edit_date": 1386330073,
          "body_markdown": "I&#39;ve used Object.create() to keep the default settings (utilising \\__proto__ or Object.getPrototypeOf() ). \r\n\r\n    function myPlugin( settings ){\r\n        var defaults = {\r\n            &quot;keyName&quot;: [ &quot;string 1&quot;, &quot;string 2&quot; ]\r\n        }\r\n        var options = Object.create( defaults );\r\n        for (var key in settings) { options[key] = settings[key]; }\r\n    }\r\n    myPlugin( { &quot;keyName&quot;: [&quot;string 3&quot;, &quot;string 4&quot; ] } );\r\n\r\nThis way I can always &#39;concat()&#39; or &#39;push()&#39; later.\r\n\r\n    var newArray = options[&#39;keyName&#39;].concat( options.__proto__[&#39;keyName&#39;] );\r\n\r\n**Note**: You&#39;ll need to do a hasOwnProperty check before concatenation to avoid duplication."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1390856457,
          "answer_id": 21391558,
          "path": "stack.bower.answer",
          "score": 80,
          "up_vote_count": 80,
          "is_accepted": false,
          "last_activity_date": 1477432360,
          "last_edit_date": 1477432360,
          "body_markdown": "Similar to jQuery extend(), you have the same function in [AngularJS][1]:\r\n\r\n    // Merge the &#39;options&#39; object into the &#39;settings&#39; object\r\n    var settings = {validate: false, limit: 5, name: &quot;foo&quot;};\r\n    var options  = {validate: true, name: &quot;bar&quot;};\r\n    angular.extend(settings, options);\r\n\r\n  [1]: http://en.wikipedia.org/wiki/AngularJS\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394880896,
          "answer_id": 22422836,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1477432404,
          "last_edit_date": 1477432404,
          "body_markdown": "With [Underscore.js][1], to merge an array of objects do:\r\n\r\n    var arrayOfObjects = [ {a:1}, {b:2, c:3}, {d:4} ];\r\n    _(arrayOfObjects).reduce(function(memo, o) { return _(memo).extend(o); });\r\n\r\nIt results in:\r\n\r\n    Object {a: 1, b: 2, c: 3, d: 4}\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Underscore.js\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1396992626,
          "answer_id": 22948578,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1477432452,
          "last_edit_date": 1477432452,
          "body_markdown": "For those using [Node.js][1], there&#39;s an NPM module: [node.extend][2]\r\n\r\n# Install:\r\n\r\n    npm install node.extend\r\n\r\n# Usage:\r\n\r\n    var extend = require(&#39;node.extend&#39;);\r\n    var destObject = extend(true, {}, sourceObject);\r\n    // Where sourceObject is the object whose properties will be copied into another.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Node.js\r\n  [2]: https://www.npmjs.com/package/node.extend\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1403470967,
          "answer_id": 24355704,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1477432575,
          "last_edit_date": 1477432575,
          "body_markdown": "There&#39;s a library called [`deepmerge`][1] on [GitHub][2]: That seems to be getting some traction. It&#39;s a standalone, available through both the [npm][3] and bower package managers.\r\n\r\nI would be inclined to use or improve on this instead of copy-pasting code from answers.\r\n\r\n  [1]: https://github.com/nrf110/deepmerge\r\n  [2]: http://en.wikipedia.org/wiki/GitHub\r\n  [3]: https://en.wikipedia.org/wiki/Npm_(software)\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1412536476,
          "answer_id": 26206246,
          "path": "stack.bower.answer",
          "score": 301,
          "up_vote_count": 302,
          "is_accepted": false,
          "last_activity_date": 1470683567,
          "last_edit_date": 1470683567,
          "body_markdown": "The [Harmony ECMAScript 2015 (ES6)][1] specifies [**`Object.assign`**][2] which will do this.\r\n\r\n    Object.assign(obj1, obj2);\r\n\r\nCurrent browser support is [getting better][3], but if you&#39;re developing for browsers that don&#39;t have support, you can use a [polyfill][4].\r\n\r\n\r\n  [1]: http://www.ecma-international.org/ecma-262/6.0/#sec-object.assign\r\n  [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n  [3]:http://kangax.github.io/compat-table/es6/#test-Object_static_methods_Object.assign\r\n  [4]:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1413290012,
          "answer_id": 26360903,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1413290012,
          "body_markdown": "This solution creates a **new object** and is able to handle **multiple objects**.\r\n\r\nFurthermore, it is **recursive** and you can chose weather you **want** to **overwrite Values** and **Objects**.\r\n\r\n        function extendObjects() {\r\n        \r\n            var newObject        = {};\r\n            var overwriteValues  = false;\r\n            var overwriteObjects = false;\r\n            \r\n            for ( var indexArgument = 0; indexArgument &lt; arguments.length; indexArgument++ ) {\r\n                \r\n                if ( typeof arguments[indexArgument] !== &#39;object&#39; ) {\r\n                \r\n                    if ( arguments[indexArgument] == &#39;overwriteValues_True&#39; ) {\r\n                                          \r\n                        overwriteValues = true;            \r\n                    } else if ( arguments[indexArgument] == &#39;overwriteValues_False&#39; ) {\r\n                        \r\n                        overwriteValues = false;                             \r\n                    } else if ( arguments[indexArgument] == &#39;overwriteObjects_True&#39; ) {\r\n                    \r\n                        overwriteObjects = true;     \r\n                    } else if ( arguments[indexArgument] == &#39;overwriteObjects_False&#39; ) {\r\n                        \r\n                        overwriteObjects = false; \r\n                    }\r\n                \r\n                } else {\r\n                    \r\n                    extendObject( arguments[indexArgument], newObject, overwriteValues, overwriteObjects );\r\n                }\r\n                \r\n            }\r\n        \r\n            function extendObject( object, extendedObject, overwriteValues, overwriteObjects ) {\r\n                               \r\n                for ( var indexObject in object ) {\r\n                                          \r\n                    if ( typeof object[indexObject] === &#39;object&#39; ) {\r\n                                                  \r\n                        if ( typeof extendedObject[indexObject] === &quot;undefined&quot; || overwriteObjects ) {\r\n                            extendedObject[indexObject] = object[indexObject];\r\n                        }\r\n                        \r\n                        extendObject( object[indexObject], extendedObject[indexObject], overwriteValues, overwriteObjects );\r\n                        \r\n                    } else {\r\n                                        \r\n                        if ( typeof extendedObject[indexObject] === &quot;undefined&quot; || overwriteValues ) {\r\n                            extendedObject[indexObject] = object[indexObject];\r\n                        }\r\n                                                                \r\n                    }\r\n                               \r\n                }     \r\n                \r\n                return extendedObject;\r\n               \r\n            }\r\n        \r\n            return newObject;\r\n        }\r\n        \r\n        var object1           = { a : 1, b : 2, testArr : [888, { innArr : 1 }, 777 ], data : { e : 12, c : { lol : 1 }, rofl : { O : 3 } } };\r\n        var object2           = { a : 6, b : 9, data : { a : 17, b : 18, e : 13, rofl : { O : 99, copter : { mao : 1 } } }, hexa : { tetra : 66 } };\r\n        var object3           = { f : 13, g : 666, a : 333, data : { c : { xD : 45 } }, testArr : [888, { innArr : 3 }, 555 ]  };\r\n        \r\n        var newExtendedObject = extendObjects( &#39;overwriteValues_False&#39;, &#39;overwriteObjects_False&#39;, object1, object2, object3 );\r\n    \r\n\r\n**Contents of newExtendedObject:**\r\n\r\n    {&quot;a&quot;:1,&quot;b&quot;:2,&quot;testArr&quot;:[888,{&quot;innArr&quot;:1},777],&quot;data&quot;:{&quot;e&quot;:12,&quot;c&quot;:{&quot;lol&quot;:1,&quot;xD&quot;:45},&quot;rofl&quot;:{&quot;O&quot;:3,&quot;copter&quot;:{&quot;mao&quot;:1}},&quot;a&quot;:17,&quot;b&quot;:18},&quot;hexa&quot;:{&quot;tetra&quot;:66},&quot;f&quot;:13,&quot;g&quot;:666}\r\n\r\nFiddle: http://jsfiddle.net/o0gb2umb/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1422579588,
          "answer_id": 28227547,
          "path": "stack.bower.answer",
          "score": 26,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1477432684,
          "last_edit_date": 1477432684,
          "body_markdown": "The following two are probably a good starting point. lodash also has a customizer function for those special needs!\r\n\r\n`_.extend` (http://underscorejs.org/#extend) &lt;br/&gt;\r\n`_.merge` (https://lodash.com/docs#merge)\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1427821781,
          "answer_id": 29374455,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477432753,
          "last_edit_date": 1477432753,
          "body_markdown": "Another method:\r\n\r\n    function concat_collection(obj1, obj2) {\r\n        var i;\r\n        var arr = new Array();\r\n\r\n        var len1 = obj1.length;\r\n        for (i=0; i&lt;len1; i++) {\r\n            arr.push(obj1[i]);\r\n        }\r\n\r\n        var len2 = obj2.length;\r\n        for (i=0; i&lt;len2; i++) {\r\n            arr.push(obj2[i]);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    var ELEMENTS = concat_collection(A,B);\r\n    for(var i = 0; i &lt; ELEMENTS.length; i++) {\r\n        alert(ELEMENTS[i].value);\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429651107,
          "answer_id": 29783305,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1477432919,
          "last_edit_date": 1477432919,
          "body_markdown": "I use the following which is in pure JavaScript. It starts from the right-most argument and combines them all the way up to the first argument. There is no return value, only the first argument is modified and the left-most parameter (except the first one) has the highest weight on properties.\r\n\r\n    var merge = function() {\r\n      var il = arguments.length;\r\n\r\n      for (var i = il - 1; i &gt; 0; --i) {\r\n        for (var key in arguments[i]) {\r\n          if (arguments[i].hasOwnProperty(key)) {\r\n            arguments[0][key] = arguments[i][key];\r\n          }\r\n        }\r\n      }\r\n    };\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1441003876,
          "answer_id": 32305436,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1456829344,
          "last_edit_date": 1456829344,
          "body_markdown": "You can simply use jQuery **`extend`**\r\n\r\n    var obj1 = { val1: false, limit: 5, name: &quot;foo&quot; };\r\n    var obj2 = { val2: true, name: &quot;bar&quot; };\r\n\r\n    jQuery.extend(obj1, obj2);\r\n\r\nNow `obj1` contains all the values of `obj1` and `obj2`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1443291429,
          "answer_id": 32800440,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477433016,
          "last_edit_date": 1477433016,
          "body_markdown": "If you are using [Dojo Toolkit][1] then the best way to merge two object is using a mixin. \r\n\r\nBelow is the sample for Dojo Toolkit mixin:\r\n\r\n    // Dojo 1.7+ (AMD)\r\n    require([&quot;dojo/_base/lang&quot;], function(lang){\r\n      var a = { b:&quot;c&quot;, d:&quot;e&quot; };\r\n      lang.mixin(a, { d:&quot;f&quot;, g:&quot;h&quot; });\r\n      console.log(a); // b:c, d:f, g:h\r\n    });\r\n    \r\n    // Dojo &lt; 1.7\r\n    var a = { b:&quot;c&quot;, d:&quot;e&quot; };\r\n    dojo.mixin(a, { d:&quot;f&quot;, g:&quot;h&quot; });\r\n    console.log(a); // b:c, d:f, g:h\r\n\r\nFor more details, please *[mixin][2]*.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Dojo_Toolkit\r\n  [2]: http://dojotoolkit.org/reference-guide/1.7/dojo/mixin.html\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444817431,
          "answer_id": 33122536,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1444818637,
          "last_edit_date": 1444818637,
          "body_markdown": "You can merge objects through following my method\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    \r\n    var obj1 = { food: &#39;pizza&#39;, car: &#39;ford&#39; };\r\n    var obj2 = { animal: &#39;dog&#39; };\r\n\r\n    var result = mergeObjects([obj1, obj2]);\r\n\r\n    console.log(result);\r\n    document.write(&quot;result: &lt;pre&gt;&quot; + JSON.stringify(result, 0, 3) + &quot;&lt;/pre&gt;&quot;);\r\n\r\n    function mergeObjects(objectArray) {\r\n        if (objectArray.length) {\r\n            var b = &quot;&quot;, i = -1;\r\n            while (objectArray[++i]) {\r\n                var str = JSON.stringify(objectArray[i]);\r\n                b += str.slice(1, str.length - 1);\r\n                if (objectArray[i + 1]) b += &quot;,&quot;;\r\n            }\r\n            return JSON.parse(&quot;{&quot; + b + &quot;}&quot;);\r\n        }\r\n        return {};\r\n    }\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1447691704,
          "answer_id": 33740232,
          "path": "stack.bower.answer",
          "score": 15,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1447691704,
          "body_markdown": "**Object.assign()**\r\n\r\n**ECMAScript 2015 (ES6)**\r\n\r\nThis is a new technology, part of the ECMAScript 2015 (ES6) standard.\r\nThis technology&#39;s specification has been finalized, but check the compatibility table for usage and implementation status in various browsers.\r\n\r\nThe Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.\r\n\r\n    var o1 = { a: 1 };\r\n    var o2 = { b: 2 };\r\n    var o3 = { c: 3 };\r\n    \r\n    var obj = Object.assign(o1, o2, o3);\r\n    console.log(obj); // { a: 1, b: 2, c: 3 }\r\n    console.log(o1);  // { a: 1, b: 2, c: 3 }, target object itself is changed."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1450198761,
          "answer_id": 34295099,
          "path": "stack.bower.answer",
          "score": 31,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1493721907,
          "last_edit_date": 1493721907,
          "body_markdown": "#Merge properties of N objects in one line of code\r\n\r\nAn `Object.assign` method is part of the ECMAScript 2015 (ES6) standard and does exactly what you need. (`IE` not supported)\r\n\r\n    var clone = Object.assign({}, obj);\r\n\r\n&gt;The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object.\r\n\r\n[Read more...](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n\r\nThe __polyfill__ to support older browsers:\r\n\r\n    if (!Object.assign) {\r\n      Object.defineProperty(Object, &#39;assign&#39;, {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function(target) {\r\n          &#39;use strict&#39;;\r\n          if (target === undefined || target === null) {\r\n            throw new TypeError(&#39;Cannot convert first argument to object&#39;);\r\n          }\r\n    \r\n          var to = Object(target);\r\n          for (var i = 1; i &lt; arguments.length; i++) {\r\n            var nextSource = arguments[i];\r\n            if (nextSource === undefined || nextSource === null) {\r\n              continue;\r\n            }\r\n            nextSource = Object(nextSource);\r\n    \r\n            var keysArray = Object.keys(nextSource);\r\n            for (var nextIndex = 0, len = keysArray.length; nextIndex &lt; len; nextIndex++) {\r\n              var nextKey = keysArray[nextIndex];\r\n              var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n              if (desc !== undefined &amp;&amp; desc.enumerable) {\r\n                to[nextKey] = nextSource[nextKey];\r\n              }\r\n            }\r\n          }\r\n          return to;\r\n        }\r\n      });\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1450782169,
          "answer_id": 34414372,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1450782169,
          "body_markdown": "You should use lodash&#39;s [defaultsDeep][1]\r\n\r\n    _.defaultsDeep({ &#39;user&#39;: { &#39;name&#39;: &#39;barney&#39; } }, { &#39;user&#39;: { &#39;name&#39;: &#39;fred&#39;, &#39;age&#39;: 36 } });\r\n    // → { &#39;user&#39;: { &#39;name&#39;: &#39;barney&#39;, &#39;age&#39;: 36 } }\r\n\r\n\r\n  [1]: https://lodash.com/docs#defaultsDeep"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1451493627,
          "answer_id": 34533462,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1451493627,
          "body_markdown": "A possible way to achieve this is the following.\r\n\r\n    if (!Object.prototype.merge){\r\n        Object.prototype.merge = function(obj){\r\n            var self = this;\r\n            Object.keys(obj).forEach(function(key){\r\n                self[key] = obj[key]\r\n            });\r\n        }\r\n    };\r\n\r\n\r\nI don&#39;t know if it&#39;s better then the other answers. In this method you add the `merge function` to `Objects` prototype. This way you can call     `obj1.merge(obj2);`\r\n\r\nNote : you should validate your argument to see if its an object and &#39;throw&#39; a proper `Error`. If not `Object.keys` will &#39;throw&#39; an &#39;Error&#39;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452504026,
          "answer_id": 34717839,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477433162,
          "last_edit_date": 1477433162,
          "body_markdown": "Here what I used in my codebase to merge.\r\n\r\n    function merge(to, from) {\r\n      if (typeof to === &#39;object&#39; &amp;&amp; typeof from === &#39;object&#39;) {\r\n        for (var pro in from) {\r\n          if (from.hasOwnProperty(pro)) {\r\n            to[pro] = from[pro];\r\n          }\r\n        }\r\n      }\r\n      else{\r\n          throw &quot;Merge function can apply only on object&quot;;\r\n      }\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1483182257,
          "answer_id": 41407737,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1483182257,
          "body_markdown": "If you need a deep merge that will also &quot;merge&quot; arrays by concatenating them in the result, then this ES6 function might be what you need:\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function deepMerge(a, b) {\r\n        // If neither is an object, return one of them:\r\n        if (Object(a) !== a &amp;&amp; Object(b) !== b) return b || a;\r\n        // Replace remaining primitive by empty object/array\r\n        if (Object(a) !== a) a = Array.isArray(b) ? [] : {};\r\n        if (Object(b) !== b) b = Array.isArray(a) ? [] : {};\r\n        // Treat arrays differently:\r\n        if (Array.isArray(a) &amp;&amp; Array.isArray(b)) {\r\n            // Merging arrays is interpreted as concatenation of their deep clones:\r\n            return [...a.map(v =&gt; deepMerge(v)), ...b.map(v =&gt; deepMerge(v))];\r\n        } else {\r\n            // Get the keys that exist in either object\r\n            var keys = new Set([...Object.keys(a),...Object.keys(b)]);\r\n            // Recurse and assign to new object\r\n            return Object.assign({}, ...Array.from(keys,\r\n                key =&gt; ({ [key]: deepMerge(a[key], b[key]) }) ));\r\n        }\r\n    }\r\n\r\n    // Sample data for demo:\r\n    var a = {\r\n        groups: [{\r\n            group: [{\r\n                name: &#39;John&#39;,\r\n                age: 12\r\n            },{\r\n                name: &#39;Mary&#39;,\r\n                age: 20\r\n            }],\r\n            groupName: &#39;Pair&#39;\r\n        }],\r\n        config: {\r\n            color: &#39;blue&#39;,\r\n            range: &#39;far&#39;\r\n        }\r\n    };\r\n\r\n\r\n    var b = {\r\n        groups: [{\r\n            group: [{\r\n                name: &#39;Bill&#39;,\r\n                age: 15\r\n            }],\r\n            groupName: &#39;Loner&#39;\r\n        }],\r\n        config: {\r\n            range: &#39;close&#39;,\r\n            strength: &#39;average&#39;\r\n        }\r\n    };\r\n\r\n    var merged = deepMerge(a, b);\r\n\r\n    console.log(merged);\r\n\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    .as-console-wrapper { max-height: 100% !important; top: 0; }\r\n\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nNote that if only one argument is passed to this function, it acts as a deep clone function."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1485510911,
          "answer_id": 41891156,
          "path": "stack.bower.answer",
          "score": 35,
          "up_vote_count": 35,
          "is_accepted": false,
          "last_activity_date": 1486040879,
          "last_edit_date": 1486040879,
          "body_markdown": "You can use [object spread properties](https://github.com/sebmarkbage/ecmascript-rest-spread)—currently a stage 3 ECMAScript proposal.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: true --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    const obj1 = { food: &#39;pizza&#39;, car: &#39;ford&#39; };\r\n    const obj2 = { animal: &#39;dog&#39; };\r\n\r\n    const obj3 = { ...obj1, ...obj2 };\r\n    console.log(obj3);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1486037700,
          "answer_id": 42002014,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1486045625,
          "last_edit_date": 1486045625,
          "body_markdown": "You can do the following in EcmaScript2016\n\nCorrection: it&#39;s a stage 3 proposal, still it has always worked for me\n\n    const objA = {\n      attrA: &#39;hello&#39;,\n      attrB: true\n    }\n    \n    const objB = {\n      attrC: 2\n    }\n    \n    const mergedObj = {...objA, ...objB}"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1492709513,
          "answer_id": 43526198,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1492709513,
          "body_markdown": "The Merge Of JSON Compatible JavaScript Objects\r\n-----------------------------------------------\r\n\r\nI encourage the use and utilization of nondestructive methods that don&#39;t modify the original source, &#39;Object.assign&#39; is a *destructive method* and it also happens to be not so *production friendly* because it stops working on earlier browsers and you have no way of patching it cleanly, with an alternative.\r\n\r\nMerging JS Objects will always be out of reach, or incomplete, whatever the solution. But merging JSON compliant compatible objects is just one step away from being able to write a simple and portable piece of code of a nondestructive method of merging series of JS Objects into a returned master containing all the unique property-names and their corresponding values synthesized in a single master object for the intended purpose.\r\n\r\nHaving in mind that MSIE8 is the first browser to have added a native support for the JSON object is a great relief, and reusing the already existing technology, is always a welcomed opportunity.\r\n\r\nRestricting your code to JSON complant standard objects, is more of an advantage, than a restriction - since these objects can also be transmitted over the Internet. And of course for those who would like a deeper backward compatibility there&#39;s always a json plug., whose methods can easily be assigned to a JSON variable in the outer code without having to modify or rewrite the method in use.\r\n\r\n    function Merge( ){\r\n    \tvar a = [].slice.call( arguments ), i = 0;\r\n    \t\twhile( a[i] )a[i] = JSON.stringify( a[i++] ).slice( 1,-1 );\r\n    \t\treturn JSON.parse( &quot;{&quot;+ a.join() +&quot;}&quot; );\r\n    \t}\r\n\r\n(Of course one can always give it a more meaningful name, which I haven&#39;t decided yet; should probably name it JSONmerge)\r\n\r\nThe use case:\r\n\r\n    var master = Merge( obj1, obj2, obj3, ...objn );\r\n\r\nNow, contrary to the `Object.assign` this leaves all objects untouched and in their original state (in case you&#39;ve done something wrong and need to reorder the merging objects or be able to use them separately for some other operation before merging them again).\r\n\r\nTthe number of the Merge arguments is also limited *only* by the arguments length limit [which is huge]. \r\nThe natively supported JSON parse / stringify is already machine optimized, meaning: it should be faster than any scripted form of JS loop. \r\nThe iteration over given arguments, is being done using the `while` - proven to be the fastest loop in JS. \r\n\r\nIt doesn&#39;t harm to briefly mention the fact we already know that duplicate properties of the unique object labels (keys) will be overwritten by the later object containing the same key label, which means you are in control of which property is taking over the previous by simply ordering or reordering the arguments list. And the benefit of getting a clean and updated master object with no dupes as a final output."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1493058574,
          "answer_id": 43595298,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1493058574,
          "body_markdown": "ES5 compatible native one-liner:\r\n\r\n    var merged = [obj1, obj2].reduce(function(a, o) { for(k in o) a[k] = o[k]; return a; }, {})"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1493941402,
          "answer_id": 43794367,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1493941402,
          "body_markdown": "    &lt;pre&gt;\r\n    /**\r\n    This script can merge two multi dimensional associative array/objects in javascript by comparing given object with its reference and \r\n    will remove additional given keys, adding missed parameteres and also validating values without overhead. Also it will return the default values if no input presented with re-usable reference!\r\n    Tested on IE8 and greater.\r\n    **/\r\n    var module = (function(){\r\n        //To make our reference variable onchangable, have to put it into a function which is fster and more efficient than &quot;JSON.parse(JSON.stringify(VARIABLE))&quot;\r\n    \tvar _defs = function(){\r\n                return {\r\n                       //string, number and boolean are actually regex based validation keys on input values.\r\n                    a: [&quot;string&quot;, &#39;Defaul value for &quot;a&quot;&#39;],\r\n                    b: [&quot;number&quot;, 300],\r\n                    c: [&quot;boolean&quot;, true],\r\n                    d: {\r\n                      da: [&quot;boolean&quot;, true],\r\n                      db: [&quot;string&quot;, &#39;Defaul value for &quot;db&quot;&#39;],\r\n                      dc: {\r\n                        dca: [&quot;number&quot;, 200],\r\n                        dcb: [&quot;string&quot;, &#39;Default value for &quot;dcb&quot;&#39;],\r\n                        dcc: [&quot;number&quot;, 500],\r\n                        dcd: [&quot;boolean&quot;, true]\r\n                      },\r\n                      dce: [&quot;string&quot;, &#39;Default value for &quot;dce&quot;&#39;],\r\n                    },\r\n                    e: [&quot;number&quot;, 200],\r\n                    f: [&quot;boolean&quot;, 0],\r\n                    g: [&quot;&quot;, &#39;This is an internal extra parameter&#39;]\r\n                }\r\n    \t\t}\r\n    \t\t\r\n    \t\tvar _validation = {\r\n    \t\t\t\tnumber: function (defaultValue, userValue) {\r\n    \t\t\t\t  if(/^[0-9]+$/.test(userValue)) //Only numbers allowed\r\n    \t\t\t\t\treturn userValue;\r\n    \t\t\t\t  else return defaultValue;\r\n    \t\t\t\t},\r\n    \t\t\t\tstring: function (defaultValue, userValue) {\r\n    \t\t\t\t  if(/^[a-zA-Z\\s]*$/.test(userValue)) //Only A to Z case insentitive with space aloowed.\r\n    \t\t\t\t\treturn userValue;\r\n    \t\t\t\t  else return defaultValue;\r\n    \t\t\t\t},\r\n    \t\t\t\tboolean: function (defaultValue, userValue) {\r\n    \t\t\t\t  if(typeof userValue === &#39;boolean&#39;) //True or False or 0 ,1\r\n    \t\t\t\t\treturn userValue;\r\n    \t\t\t\t  else return defaultValue;\r\n    \t\t\t\t}\r\n    \t\t}\r\n    \t\t\r\n    \t\tvar _uniqueMerge = function(opts, _ref){\r\n    \t\t\t\tfor(var key in _ref)\r\n    \t\t\t\t\tif (_ref &amp;&amp; _ref[key] &amp;&amp; _ref[key].constructor &amp;&amp; _ref[key].constructor === Object)\r\n    \t\t\t\t\t  _ref[key] = _uniqueMerge((opts ? opts[key] : null ), _ref[key] );\r\n    \t\t\t\t\telse if(opts &amp;&amp; opts.hasOwnProperty(key))\r\n    \t\t\t\t\t  _ref[key] = _validation[_ref[key][0]](_ref[key][1], opts[key]); //or without validation on user enties =&gt; ref[key] = obj[key]\r\n    \t\t\t\t\telse _ref[key] = _ref[key][1];\r\n    \t\t\t\treturn _ref;\r\n    \t\t}\r\n    \t\tvar _get = function(inputs){\r\n    \t\t\treturn _uniqueMerge(inputs, _defs());\r\n    \t\t}\r\n    \t\treturn {\r\n    \t\t    options: function(){\r\n    \t\t\treturn _get(arguments[0] || null); // for more safety and control on number of input variables! used --&gt; ( arguments[0] || null )\r\n    \t\t    }\r\n    \t\t}\r\n    })();\r\n    \t\r\n    \t\r\n    //How to use it:\t\r\n    \t\r\n    input_one = { \r\n        a : &quot;Hello World&quot;, \r\n      //b : [&quot;number&quot;, 400], //User missed this parameter\r\n        c: &quot;Hi&quot;,\r\n        d : {\r\n            da : false,\r\n            db : &quot;Hellow! World&quot;, // ! is not allowed\r\n            dc : {\r\n                dca : 10,\r\n                dcb : &quot;My String&quot;,\r\n                dcc: &quot;3thString&quot;,\r\n                dcd : false\r\n          },\r\n          dce: &quot;ANOTHER STRING&quot;,\r\n        },\r\n        e: 40,\r\n        f: true,\r\n    \tz: &#39;x&#39;\r\n    };\r\n    console.log( JSON.stringify( module.options(input_one), null ,2 ) );\r\n    //Output:\r\n    /*\r\n    {\r\n      &quot;a&quot;: &quot;Hello World&quot;,\r\n      &quot;b&quot;: 300,\r\n      &quot;c&quot;: true,\r\n      &quot;d&quot;: {\r\n        &quot;da&quot;: false,\r\n        &quot;db&quot;: &quot;Defaul value for \\&quot;db\\&quot;&quot;,\r\n        &quot;dc&quot;: {\r\n          &quot;dca&quot;: 10,\r\n          &quot;dcb&quot;: &quot;My String&quot;,\r\n          &quot;dcc&quot;: 500,\r\n          &quot;dcd&quot;: false\r\n        },\r\n        &quot;dce&quot;: &quot;ANOTHER STRING&quot;\r\n      },\r\n      &quot;e&quot;: 40,\r\n      &quot;f&quot;: true,\r\n      &quot;g&quot;: &quot;This is an internal extra parameter&quot;\r\n    }\r\n    */\r\n    input_two = { \r\n        a : 32,\r\n      //b : [&quot;number&quot;, 400], //User missed this parameter\r\n        c: &quot;Hi&quot;,\r\n        d : {\r\n            da : false,\r\n            db : &quot;HelloWorld&quot;,\r\n            dc : {\r\n                dca : 10,\r\n                dcb : &quot;My String&quot;,\r\n                dcd : false\r\n          },\r\n          dce: 73,\r\n        }\r\n    };\r\n    console.log( JSON.stringify( module.options(input_two), null ,2 ) );\r\n    //output\r\n    /*\r\n    {\r\n      &quot;a&quot;: &quot;Defaul value for \\&quot;a\\&quot;&quot;,\r\n      &quot;b&quot;: 300,\r\n      &quot;c&quot;: true,\r\n      &quot;d&quot;: {\r\n        &quot;da&quot;: false,\r\n        &quot;db&quot;: &quot;HelloWorld&quot;,\r\n        &quot;dc&quot;: {\r\n          &quot;dca&quot;: 10,\r\n          &quot;dcb&quot;: &quot;My String&quot;,\r\n          &quot;dcc&quot;: 500,\r\n          &quot;dcd&quot;: false\r\n        },\r\n        &quot;dce&quot;: &quot;Default value for \\&quot;dce\\&quot;&quot;\r\n      },\r\n      &quot;e&quot;: 200,\r\n      &quot;f&quot;: 0,\r\n      &quot;g&quot;: &quot;This is an internal extra parameter&quot;\r\n    }\r\n    */\r\n    //Empty input will return the default values!\r\n    console.log( JSON.stringify( module.options(), null ,2 ) );\t\t\r\n    //Output\r\n    /*\t\r\n    {\r\n      &quot;a&quot;: &quot;Defaul value for \\&quot;a\\&quot;&quot;,\r\n      &quot;b&quot;: 300,\r\n      &quot;c&quot;: true,\r\n      &quot;d&quot;: {\r\n        &quot;da&quot;: true,\r\n        &quot;db&quot;: &quot;Defaul value for \\&quot;db\\&quot;&quot;,\r\n        &quot;dc&quot;: {\r\n          &quot;dca&quot;: 200,\r\n          &quot;dcb&quot;: &quot;Default value for \\&quot;dcb\\&quot;&quot;,\r\n          &quot;dcc&quot;: 500,\r\n          &quot;dcd&quot;: true\r\n        },\r\n        &quot;dce&quot;: &quot;Default value for \\&quot;dce\\&quot;&quot;\r\n      },\r\n      &quot;e&quot;: 200,\r\n      &quot;f&quot;: 0,\r\n      &quot;g&quot;: &quot;This is an internal extra parameter&quot;\r\n    }\r\n    */\r\n    &lt;/pre&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1497241334,
          "answer_id": 44491363,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1497241334,
          "body_markdown": "use `object.assign`\r\n\r\n    Object.prototype.assign = Object.assign &amp;&amp; function () {\r\n        var a = [];\r\n        for (var _i = 0; _i &lt; arguments.length; _i++) {\r\n            a[_i] = arguments[_i];\r\n        }\r\n        var src = a.slice(1);\r\n        var target = a[0];\r\n        for (var o in src) {\r\n            if (src.hasOwnProperty(o)) {\r\n                var keys = Object.keys(src[o]);\r\n                var _src = src[o];\r\n                for (var k in keys) {\r\n                    if (keys.hasOwnProperty(k)) {\r\n                        var _key = keys[k];\r\n                        target[_key] = _src[_key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };"
        }
      ],
      "title": "How can I merge properties of two JavaScript objects dynamically?",
      "view_count": 844953,
      "answer_count": 53,
      "code_snippet": [
        "<code>var obj1 = { food: 'pizza', car: 'ford' }\nvar obj2 = { animal: 'dog' }\n\nobj1.merge(obj2);\n\n//obj1 now has three properties: food, car, and animal\n</code>",
        "<code>/* For the case in question, you would do: */\nObject.assign(obj1, obj2);\n\n/** There's no limit to the number of objects you can merge.\n *  All objects get merged into the first object. \n *  Only the object in the first argument is mutated and returned.\n *  Later properties overwrite earlier properties with the same name. */\nconst allRules = Object.assign({}, obj1, obj2, obj3, etc);\n</code>",
        "<code>for (var attrname in obj2) { obj1[attrname] = obj2[attrname]; }\n</code>",
        "<code>obj2</code>",
        "<code>obj1</code>",
        "<code>obj1</code>",
        "<code>hasOwnProperty</code>",
        "<code>/**\n * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n * @param obj1\n * @param obj2\n * @returns obj3 a new object based on obj1 and obj2\n */\nfunction merge_options(obj1,obj2){\n    var obj3 = {};\n    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\n    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\n    return obj3;\n}\n</code>",
        "<code>Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1</code>",
        "<code>// Merge options object into settings object\nvar settings = { validate: false, limit: 5, name: \"foo\" };\nvar options  = { validate: true, name: \"bar\" };\njQuery.extend(settings, options);\n\n// Now the content of settings object is the following:\n// { validate: true, limit: 5, name: \"bar\" }\n</code>",
        "<code>settings</code>",
        "<code>var defaults = { validate: false, limit: 5, name: \"foo\" };\nvar options = { validate: true, name: \"bar\" };\n\n/* Merge defaults and options, without modifying defaults */\nvar settings = $.extend({}, defaults, options);\n\n// The content of settings variable is now the following:\n// {validate: true, limit: 5, name: \"bar\"}\n// The 'defaults' and 'options' variables remained the same.\n</code>",
        "<code>jQuery.extend(true,settings,override)</code>",
        "<code>Object.assign</code>",
        "<code>Object.assign(obj1, obj2);\n</code>",
        "<code>Object.assign</code>",
        "<code>Object.assign({}, obj1, obj2)</code>",
        "<code>Object.prototype</code>",
        "<code>/*\n* Recursively merge properties of two objects \n*/\nfunction MergeRecursive(obj1, obj2) {\n\n  for (var p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if ( obj2[p].constructor==Object ) {\n        obj1[p] = MergeRecursive(obj1[p], obj2[p]);\n\n      } else {\n        obj1[p] = obj2[p];\n\n      }\n\n    } catch(e) {\n      // Property in destination object not set; create it and set its value.\n      obj1[p] = obj2[p];\n\n    }\n  }\n\n  return obj1;\n}\n</code>",
        "<code>o1 = {  a : 1,\n        b : 2,\n        c : {\n          ca : 1,\n          cb : 2,\n          cc : {\n            cca : 100,\n            ccb : 200 } } };\n\no2 = {  a : 10,\n        c : {\n          ca : 10,\n          cb : 20, \n          cc : {\n            cca : 101,\n            ccb : 202 } } };\n\no3 = MergeRecursive(o1, o2);\n</code>",
        "<code>o3 = {  a : 10,\n        b : 2,\n        c : {\n          ca : 10,\n          cb : 20,\n          cc : { \n            cca : 101,\n            ccb : 202 } } };\n</code>",
        "<code>underscore.js</code>",
        "<code>extend</code>",
        "<code>_.extend({name : 'moe'}, {age : 50});\n=&gt; {name : 'moe', age : 50}\n</code>",
        "<code>_({}).extend(obj1, obj2);</code>",
        "<code>_.defaults(object, *defaults)</code>",
        "<code>var mergedObj = _.extend({}, obj1, obj2)</code>",
        "<code>// Merge the 'options' object into the 'settings' object\nvar settings = {validate: false, limit: 5, name: \"foo\"};\nvar options  = {validate: true, name: \"bar\"};\nangular.extend(settings, options);\n</code>",
        "<code>var merge = function() {\n    var obj = {},\n        i = 0,\n        il = arguments.length,\n        key;\n    for (; i &lt; il; i++) {\n        for (key in arguments[i]) {\n            if (arguments[i].hasOwnProperty(key)) {\n                obj[key] = arguments[i][key];\n            }\n        }\n    }\n    return obj;\n};\n</code>",
        "<code>var t1 = {\n    key1: 1,\n    key2: \"test\",\n    key3: [5, 2, 76, 21]\n};\nvar t2 = {\n    key1: {\n        ik1: \"hello\",\n        ik2: \"world\",\n        ik3: 3\n    }\n};\nvar t3 = {\n    key2: 3,\n    key3: {\n        t1: 1,\n        t2: 2,\n        t3: {\n            a1: 1,\n            a2: 3,\n            a4: [21, 3, 42, \"asd\"]\n        }\n    }\n};\n\nconsole.log(merge(t1, t2));\nconsole.log(merge(t1, t3));\nconsole.log(merge(t2, t3));\nconsole.log(merge(t1, t2, t3));\nconsole.log(merge({}, t1, { key1: 1 }));\n</code>",
        "<code>javascript</code>",
        "<code>merge({}, t1, { key1: 1 })</code>",
        "<code>source.hasOwnProperty(property)</code>",
        "<code>for..in</code>",
        "<code>const obj1 = { food: 'pizza', car: 'ford' };\r\nconst obj2 = { animal: 'dog' };\r\n\r\nconst obj3 = { ...obj1, ...obj2 };\r\nconsole.log(obj3);</code>",
        "<code>Object.assign</code>",
        "<code>IE</code>",
        "<code>var clone = Object.assign({}, obj);\n</code>",
        "<code>if (!Object.assign) {\n  Object.defineProperty(Object, 'assign', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function(target) {\n      'use strict';\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert first argument to object');\n      }\n\n      var to = Object(target);\n      for (var i = 1; i &lt; arguments.length; i++) {\n        var nextSource = arguments[i];\n        if (nextSource === undefined || nextSource === null) {\n          continue;\n        }\n        nextSource = Object(nextSource);\n\n        var keysArray = Object.keys(nextSource);\n        for (var nextIndex = 0, len = keysArray.length; nextIndex &lt; len; nextIndex++) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined &amp;&amp; desc.enumerable) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n      return to;\n    }\n  });\n}\n</code>",
        "<code>Objects.assign</code>",
        "<code>_.extend</code>",
        "<code>_.merge</code>",
        "<code>to</code>",
        "<code>from</code>",
        "<code>to[n] is undefined</code>",
        "<code>var realMerge = function (to, from) {\n\n    for (n in from) {\n\n        if (typeof to[n] != 'object') {\n            to[n] = from[n];\n        } else if (typeof from[n] == 'object') {\n            to[n] = realMerge(to[n], from[n]);\n        }\n    }\n    return to;\n};\n</code>",
        "<code>var merged = realMerge(obj1, obj2);\n</code>",
        "<code>/*\n    Recursively merge properties and return new object\n    obj1 &amp;lt;- obj2 [ &amp;lt;- ... ]\n*/\nfunction merge () {\n    var dst = {}\n        ,src\n        ,p\n        ,args = [].splice.call(arguments, 0)\n    ;\n\n    while (args.length &gt; 0) {\n        src = args.splice(0, 1)[0];\n        if (toString.call(src) == '[object Object]') {\n            for (p in src) {\n                if (src.hasOwnProperty(p)) {\n                    if (toString.call(src[p]) == '[object Object]') {\n                        dst[p] = merge(dst[p] || {}, src[p]);\n                    } else {\n                        dst[p] = src[p];\n                    }\n                }\n            }\n        }\n    }\n\n   return dst;\n}\n</code>",
        "<code>a = {\n    \"p1\": \"p1a\",\n    \"p2\": [\n        \"a\",\n        \"b\",\n        \"c\"\n    ],\n    \"p3\": true,\n    \"p5\": null,\n    \"p6\": {\n        \"p61\": \"p61a\",\n        \"p62\": \"p62a\",\n        \"p63\": [\n            \"aa\",\n            \"bb\",\n            \"cc\"\n        ],\n        \"p64\": {\n            \"p641\": \"p641a\"\n        }\n    }\n};\n\nb = {\n    \"p1\": \"p1b\",\n    \"p2\": [\n        \"d\",\n        \"e\",\n        \"f\"\n    ],\n    \"p3\": false,\n    \"p4\": true,\n    \"p6\": {\n        \"p61\": \"p61b\",\n        \"p64\": {\n            \"p642\": \"p642b\"\n        }\n    }\n};\n\nc = {\n    \"p1\": \"p1c\",\n    \"p3\": null,\n    \"p6\": {\n        \"p62\": \"p62c\",\n        \"p64\": {\n            \"p643\": \"p641c\"\n        }\n    }\n};\n\nd = merge(a, b, c);\n\n\n/*\n    d = {\n        \"p1\": \"p1c\",\n        \"p2\": [\n            \"d\",\n            \"e\",\n            \"f\"\n        ],\n        \"p3\": null,\n        \"p5\": null,\n        \"p6\": {\n            \"p61\": \"p61b\",\n            \"p62\": \"p62c\",\n            \"p63\": [\n                \"aa\",\n                \"bb\",\n                \"cc\"\n            ],\n            \"p64\": {\n                \"p641\": \"p641a\",\n                \"p642\": \"p642b\",\n                \"p643\": \"p641c\"\n            }\n        },\n        \"p4\": true\n    };\n*/\n</code>",
        "<code>{}</code>",
        "<code>dst = {}</code>",
        "<code>dst = arguments[0]</code>",
        "<code>toString.call(src) == '[object Object]'</code>",
        "<code>typeof src</code>",
        "<code>var o1 = { a: 1 };\nvar o2 = { b: 2 };\nvar o3 = { c: 3 };\n\nvar obj = Object.assign(o1, o2, o3);\nconsole.log(obj); // { a: 1, b: 2, c: 3 }\nconsole.log(o1);  // { a: 1, b: 2, c: 3 }, target object itself is changed.\n</code>",
        "<code>extend</code>",
        "<code>var obj1 = { val1: false, limit: 5, name: \"foo\" };\nvar obj2 = { val2: true, name: \"bar\" };\n\njQuery.extend(obj1, obj2);\n</code>",
        "<code>obj1</code>",
        "<code>obj1</code>",
        "<code>obj2</code>",
        "<code>jQuery.extend( target [, object1 ] [, objectN ] )</code>",
        "<code>var obj1 = { food: 'pizza', car: 'ford' }\nvar obj2 = { animal: 'dog', car: 'chevy'}\nvar objMerge;\n\nobjMerge = JSON.stringify(obj1) + JSON.stringify(obj2);\n\n// {\"food\": \"pizza\",\"car\":\"ford\"}{\"animal\":\"dog\",\"car\":\"chevy\"}\n\nobjMerge = objMerge.replace(/\\}\\{/, \",\"); //  \\_ replace with comma for valid JSON\n\nobjMerge = JSON.parse(objMerge); // { food: 'pizza', animal: 'dog', car: 'chevy'}\n// Of same keys in both objects, the last object's value is retained_/\n</code>",
        "<code>var so1 = JSON.stringify(obj1); var so2 = JSON.stringify(obj1); objMerge = so1.substr(0, so1.length-1)+\",\"+so2.substr(1); console.info(objMerge);</code>",
        "<code>deepmerge</code>",
        "<code>goog.require('goog.object');\nvar a = {'a': 1, 'b': 2};\nvar b = {'b': 3, 'c': 4};\ngoog.object.extend(a, b);\n// Now object a == {'a': 1, 'b': 3, 'c': 4};\n</code>",
        "<code>var a = [1, 2];\nvar b = [3, 4];\ngoog.array.extend(a, b); // Extends array 'a'\ngoog.array.concat(a, b); // Returns concatenation of array 'a' and 'b'\n</code>",
        "<code>Object.extend = function(destination,source) {\n    for (var property in source)\n        destination[property] = source[property];\n    return destination;\n}\n</code>",
        "<code>obj1.extend(obj2)</code>",
        "<code>Object.prototype</code>",
        "<code>Object</code>",
        "<code>prototype.js</code>",
        "<code>Object.prototype</code>",
        "<code>extend</code>",
        "<code>Object.prototype</code>",
        "<code>Object.extend</code>",
        "<code>Object</code>",
        "<code>obj1.extend(obj2)</code>",
        "<code>Object.extend(obj1, obj2)</code>",
        "<code>Object.merge(obj1, obj2);\n</code>",
        "<code>Object.defineProperty(Object.prototype, \"merge\", {\n    enumerable: false,\n    value: function () {\n        var override = true,\n            dest = this,\n            len = arguments.length,\n            props, merge, i, from;\n\n        if (typeof(arguments[arguments.length - 1]) === \"boolean\") {\n            override = arguments[arguments.length - 1];\n            len = arguments.length - 1;\n        }\n\n        for (i = 0; i &lt; len; i++) {\n            from = arguments[i];\n            if (from != null) {\n                Object.getOwnPropertyNames(from).forEach(function (name) {\n                    var descriptor;\n\n                    // nesting\n                    if ((typeof(dest[name]) === \"object\" || typeof(dest[name]) === \"undefined\")\n                            &amp;&amp; typeof(from[name]) === \"object\") {\n\n                        // ensure proper types (Array rsp Object)\n                        if (typeof(dest[name]) === \"undefined\") {\n                            dest[name] = Array.isArray(from[name]) ? [] : {};\n                        }\n                        if (override) {\n                            if (!Array.isArray(dest[name]) &amp;&amp; Array.isArray(from[name])) {\n                                dest[name] = [];\n                            }\n                            else if (Array.isArray(dest[name]) &amp;&amp; !Array.isArray(from[name])) {\n                                dest[name] = {};\n                            }\n                        }\n                        dest[name].merge(from[name], override);\n                    } \n\n                    // flat properties\n                    else if ((name in dest &amp;&amp; override) || !(name in dest)) {\n                        descriptor = Object.getOwnPropertyDescriptor(from, name);\n                        if (descriptor.configurable) {\n                            Object.defineProperty(dest, name, descriptor);\n                        }\n                    }\n                });\n            }\n        }\n        return this;\n    }\n});\n</code>",
        "<code>function clone (obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nvar obj = {\n    name : \"trick\",\n    value : \"value\"\n};\n\nvar mergeObj = {\n    name : \"truck\",\n    value2 : \"value2\"\n};\n\nvar mergeObj2 = {\n    name : \"track\",\n    value : \"mergeObj2\",\n    value2 : \"value2-mergeObj2\",\n    value3 : \"value3\"\n};\n\nassertTrue(\"Standard\", clone(obj).merge(mergeObj).equals({\n    name : \"truck\",\n    value : \"value\",\n    value2 : \"value2\"\n}));\n\nassertTrue(\"Standard no Override\", clone(obj).merge(mergeObj, false).equals({\n    name : \"trick\",\n    value : \"value\",\n    value2 : \"value2\"\n}));\n\nassertTrue(\"Multiple\", clone(obj).merge(mergeObj, mergeObj2).equals({\n    name : \"track\",\n    value : \"mergeObj2\",\n    value2 : \"value2-mergeObj2\",\n    value3 : \"value3\"\n}));\n\nassertTrue(\"Multiple no Override\", clone(obj).merge(mergeObj, mergeObj2, false).equals({\n    name : \"trick\",\n    value : \"value\",\n    value2 : \"value2\",\n    value3 : \"value3\"\n}));\n\nvar deep = {\n    first : {\n        name : \"trick\",\n        val : \"value\"\n    },\n    second : {\n        foo : \"bar\"\n    }\n};\n\nvar deepMerge = {\n    first : {\n        name : \"track\",\n        anotherVal : \"wohoo\"\n    },\n    second : {\n        foo : \"baz\",\n        bar : \"bam\"\n    },\n    v : \"on first layer\"\n};\n\nassertTrue(\"Deep merges\", clone(deep).merge(deepMerge).equals({\n    first : {\n        name : \"track\",\n        val : \"value\",\n        anotherVal : \"wohoo\"\n    },\n    second : {\n        foo : \"baz\",\n        bar : \"bam\"\n    },\n    v : \"on first layer\"\n}));\n\nassertTrue(\"Deep merges no override\", clone(deep).merge(deepMerge, false).equals({\n    first : {\n        name : \"trick\",\n        val : \"value\",\n        anotherVal : \"wohoo\"\n    },\n    second : {\n        foo : \"bar\",\n        bar : \"bam\"\n    },\n    v : \"on first layer\"\n}));\n\nvar obj1 = {a: 1, b: \"hello\"};\nobj1.merge({c: 3});\nassertTrue(obj1.equals({a: 1, b: \"hello\", c: 3}));\n\nobj1.merge({a: 2, b: \"mom\", d: \"new property\"}, false);\nassertTrue(obj1.equals({a: 1, b: \"hello\", c: 3, d: \"new property\"}));\n\nvar obj2 = {};\nobj2.merge({a: 1}, {b: 2}, {a: 3});\nassertTrue(obj2.equals({a: 3, b: 2}));\n\nvar a = [];\nvar b = [1, [2, 3], 4];\na.merge(b);\nassertEquals(1, a[0]);\nassertEquals([2, 3], a[1]);\nassertEquals(4, a[2]);\n\n\nvar o1 = {};\nvar o2 = {a: 1, b: {c: 2}};\nvar o3 = {d: 3};\no1.merge(o2, o3);\nassertTrue(o1.equals({a: 1, b: {c: 2}, d: 3}));\no1.b.c = 99;\nassertTrue(o2.equals({a: 1, b: {c: 2}}));\n\n// checking types with arrays and objects\nvar bo;\na = [];\nbo = [1, {0:2, 1:3}, 4];\nb = [1, [2, 3], 4];\n\na.merge(b);\nassertTrue(\"Array stays Array?\", Array.isArray(a[1]));\n\na = [];\na.merge(bo);\nassertTrue(\"Object stays Object?\", !Array.isArray(a[1]));\n\na = [];\na.merge(b);\na.merge(bo);\nassertTrue(\"Object overrides Array\", !Array.isArray(a[1]));\n\na = [];\na.merge(b);\na.merge(bo, false);\nassertTrue(\"Object does not override Array\", Array.isArray(a[1]));\n\na = [];\na.merge(bo);\na.merge(b);\nassertTrue(\"Array overrides Object\", Array.isArray(a[1]));\n\na = [];\na.merge(bo);\na.merge(b, false);\nassertTrue(\"Array does not override Object\", !Array.isArray(a[1]));\n</code>",
        "<code>var mergedObject = Ext.Object.merge(object1, object2)\n\n// Or shorter:\nvar mergedObject2 = Ext.merge(object1, object2)\n</code>",
        "<code>var arrayOfObjects = [ {a:1}, {b:2, c:3}, {d:4} ];\n_(arrayOfObjects).reduce(function(memo, o) { return _(memo).extend(o); });\n</code>",
        "<code>Object {a: 1, b: 2, c: 3, d: 4}\n</code>",
        "<code>_.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n// → { 'user': { 'name': 'barney', 'age': 36 } }\n</code>",
        "<code>function m(a,b,c){for(c in b)b.hasOwnProperty(c)&amp;&amp;((typeof a[c])[0]=='o'?m(a[c],b[c]):a[c]=b[c])}\n</code>",
        "<code>m(obj1,obj2);\n</code>",
        "<code>function mergeRecursive() {\n\n  // _mergeRecursive does the actual job with two arguments.\n  var _mergeRecursive = function (dst, src) {\n    if (isDOMNode(src) || typeof src !== 'object' || src === null) {\n      return dst;\n    }\n\n    for (var p in src) {\n      if (!src.hasOwnProperty(p))\n        continue;\n      if (src[p] === undefined)\n        continue;\n      if ( typeof src[p] !== 'object' || src[p] === null) {\n        dst[p] = src[p];\n      } else if (typeof dst[p]!=='object' || dst[p] === null) {\n        dst[p] = _mergeRecursive(src[p].constructor===Array ? [] : {}, src[p]);\n      } else {\n        _mergeRecursive(dst[p], src[p]);\n      }\n    }\n    return dst;\n  }\n\n  // Loop through arguments and merge them into the first argument.\n  var out = arguments[0];\n  if (typeof out !== 'object' || out === null)\n    return out;\n  for (var i = 1, il = arguments.length; i &lt; il; i++) {\n    _mergeRecursive(out, arguments[i]);\n  }\n  return out;\n}\n</code>",
        "<code>mergeRecursive(\n  document.getElementById('mydiv'),\n  {style: {border: '5px solid green', color: 'red'}},\n  {innerHTML: 'Hello world!'});\n</code>",
        "<code>o = mergeRecursive({a:'a'}, [1,2,3], [undefined, null, [30,31]], {a:undefined, b:'b'});\n// o = {0:1, 1:null, 2:[30,31], a:'a', b:'b'}\n</code>",
        "<code>o = mergeRecursive({a:'a'}, 1, true, null, undefined, [1,2,3], 'bc', new String('de'));\n// o = {0:'d', 1:'e', 2:3, a:'a'}\n</code>",
        "<code>var a={}, b={b:'abc'}, c={c:'cde'}, o;\no = mergeRecursive(a, b, c);\n// o===a is true, o===b is false, o===c is false\n</code>",
        "<code>function mergeRecursive(obj1, obj2) {\n  if (Array.isArray(obj2)) { return obj1.concat(obj2); }\n  for (var p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if ( obj2[p].constructor==Object ) {\n        obj1[p] = mergeRecursive(obj1[p], obj2[p]);\n      } else if (Array.isArray(obj2[p])) {\n        obj1[p] = obj1[p].concat(obj2[p]);\n      } else {\n        obj1[p] = obj2[p];\n      }\n    } catch(e) {\n      // Property in destination object not set; create it and set its value.\n      obj1[p] = obj2[p];\n    }\n  }\n  return obj1;\n}\n</code>",
        "<code>var merge = function() {\n  var il = arguments.length;\n\n  for (var i = il - 1; i &gt; 0; --i) {\n    for (var key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key)) {\n        arguments[0][key] = arguments[i][key];\n      }\n    }\n  }\n};\n</code>",
        "<code>function mergeObjects(defaults, settings) {\n    Object.keys(defaults).forEach(function(key_default) {\n        if (typeof settings[key_default] == \"undefined\") {\n            settings[key_default] = defaults[key_default];\n        } else if (isObject(defaults[key_default]) &amp;&amp; isObject(settings[key_default])) {\n            mergeObjects(defaults[key_default], settings[key_default]);\n        }\n    });\n\n    function isObject(object) {\n        return Object.prototype.toString.call(object) === '[object Object]';\n    }\n\n    return settings;\n}\n</code>",
        "<code>var obj1 = { food: 'pizza', car: 'ford' };\r\nvar obj2 = { animal: 'dog' };\r\n\r\nvar result = mergeObjects([obj1, obj2]);\r\n\r\nconsole.log(result);\r\ndocument.write(\"result: &lt;pre&gt;\" + JSON.stringify(result, 0, 3) + \"&lt;/pre&gt;\");\r\n\r\nfunction mergeObjects(objectArray) {\r\n    if (objectArray.length) {\r\n        var b = \"\", i = -1;\r\n        while (objectArray[++i]) {\r\n            var str = JSON.stringify(objectArray[i]);\r\n            b += str.slice(1, str.length - 1);\r\n            if (objectArray[i + 1]) b += \",\";\r\n        }\r\n        return JSON.parse(\"{\" + b + \"}\");\r\n    }\r\n    return {};\r\n}</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "express"
      ],
      "creation_date": 1303733914,
      "body_markdown": "I&#39;m using the ExpressJS web framework for NodeJS.\r\n\r\nPeople using ExpressJS put their environments (development, production, test...), their routes etc on the `app.js`. I think that it&#39;s not a beautiful way because when you have a big application, app.js is too big!\r\n\r\nI would like to have this directory structure:\r\n\r\n    | my-application\r\n    | -- app.js\r\n    | -- config/\r\n         | -- environment.js\r\n         | -- routes.js\r\n\r\nHere&#39;s my code:\r\n\r\n**app.js**\r\n\r\n    var express = require(&#39;express&#39;);\r\n    var app = module.exports = express.createServer();\r\n    \r\n    require(&#39;./config/environment.js&#39;)(app, express);\r\n    require(&#39;./config/routes.js&#39;)(app);\r\n    \r\n    app.listen(3000);\r\n\r\n**config/environment.js**\r\n\r\n    module.exports = function(app, express){\r\n        app.configure(function() {\r\n    \tapp.use(express.logger());\r\n        });\r\n    \r\n        app.configure(&#39;development&#39;, function() {\r\n    \tapp.use(express.errorHandler({\r\n    \t    dumpExceptions: true,\r\n    \t    showStack: true\r\n    \t}));\r\n        });\r\n    \r\n        app.configure(&#39;production&#39;, function() {\r\n    \tapp.use(express.errorHandler());\r\n        });\r\n    };\r\n\r\n**config/routes.js**\r\n\r\n    module.exports = function(app) {\r\n        app.get(&#39;/&#39;, function(req, res) {\r\n    \tres.send(&#39;Hello world !&#39;);\r\n        });\r\n    };\r\n\r\nMy code works well and I think that the structure of the directories is beautiful. However, the code had to be adapted and I&#39;m not sure that it&#39;s good/beautiful.\r\n\r\nIs it better to use my structure of directories and adapt the code or simply use one file (app.js)?\r\n\r\nThanks for your advices!",
      "last_edit_date": 1462121478,
      "up_vote_count": 452,
      "link": "https://stackoverflow.com/questions/5778245/expressjs-how-to-structure-an-application",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1303736177,
          "answer_id": 5778527,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1303736177,
          "body_markdown": "I think it&#39;s a great way to do it. Not limited to express but I&#39;ve seen quite a number of node.js projects on github doing the same thing. They take out the configuration parameters + smaller modules (in some cases every URI) are factored in separate files.\r\n\r\nI would recommend going through express-specific projects on github to get an idea. IMO the way you are doing is correct."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1312444600,
          "answer_id": 6937969,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1312444600,
          "body_markdown": "Well I put my routes as a json file, that I read at the beginning, and in a for-loop in app.js set up the routes. The route.json includes which view that should be called, and the key for the values that will be sent into the route.  \r\nThis works for many simple cases, but I had to manually create some routes for special cases."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1315492567,
          "answer_id": 7349772,
          "path": "stack.bower.answer",
          "score": 18,
          "up_vote_count": 20,
          "is_accepted": false,
          "last_activity_date": 1315492567,
          "body_markdown": "I like to use a global &quot;app&quot;, rather than exporting a function etc"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1315496879,
          "answer_id": 7350875,
          "path": "stack.bower.answer",
          "score": 152,
          "up_vote_count": 158,
          "is_accepted": false,
          "last_activity_date": 1383070842,
          "last_edit_date": 1383070842,
          "body_markdown": "**UPDATE (2013-10-29)**: Please see my other answer as well which has JavaScript instead of CoffeeScript by popular demand as well as a boilerplate github repo and an extensive README detailing my latest recommendations on this topic.\r\n\r\n**Config**\r\n\r\nWhat you are doing is fine.  I like to have my own config namespace set up in a top-level `config.coffee` file with a nested namespace like this.\r\n\r\n\r\n    #Set the current environment to true in the env object\r\n    currentEnv = process.env.NODE_ENV or &#39;development&#39;\r\n    exports.appName = &quot;MyApp&quot;\r\n    exports.env =\r\n      production: false\r\n      staging: false\r\n      test: false\r\n      development: false\r\n    exports.env[currentEnv] = true\r\n    exports.log =\r\n      path: __dirname + &quot;/var/log/app_#{currentEnv}.log&quot;\r\n    exports.server =\r\n      port: 9600\r\n      #In staging and production, listen loopback. nginx listens on the network.\r\n      ip: &#39;127.0.0.1&#39;\r\n    if currentEnv not in [&#39;production&#39;, &#39;staging&#39;]\r\n      exports.enableTests = true\r\n      #Listen on all IPs in dev/test (for testing from other machines)\r\n      exports.server.ip = &#39;0.0.0.0&#39;\r\n    exports.db =\r\n      URL: &quot;mongodb://localhost:27017/#{exports.appName.toLowerCase()}_#{currentEnv}&quot;\r\n\r\n\r\nThis is friendly for sysadmin editing.  Then when I need something, like the DB connection info, it`s\r\n\r\n    require(&#39;./config&#39;).db.URL\r\n\r\n**Routes/Controllers**\r\n\r\nI like to leave my routes with my controllers and organize them in an `app/controllers` subdirectory.  Then I can load them up and let them add whatever routes they need.\r\n\r\nIn my `app/server.coffee` coffeescript file I do:\r\n\r\n    [\r\n      &#39;api&#39;\r\n      &#39;authorization&#39;\r\n      &#39;authentication&#39;\r\n      &#39;domains&#39;\r\n      &#39;users&#39;\r\n      &#39;stylesheets&#39;\r\n      &#39;javascripts&#39;\r\n      &#39;tests&#39;\r\n      &#39;sales&#39;\r\n    ].map (controllerName) -&gt;\r\n      controller = require &#39;./controllers/&#39; + controllerName\r\n      controller.setup app\r\n\r\nSo I have files like:\r\n\r\n    app/controllers/api.coffee\r\n    app/controllers/authorization.coffee\r\n    app/controllers/authentication.coffee\r\n    app/controllers/domains.coffee\r\n\r\nAnd for example in my domains controller, I have a `setup` function like this.\r\n\r\n    exports.setup = (app) -&gt;\r\n      controller = new exports.DomainController\r\n      route = &#39;/domains&#39;\r\n      app.post route, controller.create\r\n      app.put route, api.needId\r\n      app.delete route, api.needId\r\n      route = &#39;/domains/:id&#39;\r\n      app.put route, controller.loadDomain, controller.update\r\n      app.del route, controller.loadDomain, exports.delete\r\n      app.get route, controller.loadDomain, (req, res) -&gt;\r\n        res.sendJSON req.domain, status.OK\r\n\r\n**Views**\r\n\r\nPutting views in `app/views` is becoming the customary place.  I lay it out like this.\r\n\r\n    app/views/layout.jade\r\n    app/views/about.jade\r\n    app/views/user/EditUser.jade\r\n    app/views/domain/EditDomain.jade\r\n\r\n**Static Files**\r\n\r\nGo in a `public` subdirectory.\r\n\r\n\r\n**Github/Semver/NPM**\r\n\r\nPut a README.md markdown file at your git repo root for github.\r\n\r\nPut a package.json file with a [semantic version][1] number in your git repo root for NPM.\r\n\r\n\r\n  [1]: http://semver.org/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1326057841,
          "answer_id": 8781460,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1326057841,
          "body_markdown": "I came across this MVC structure http://www.travisglines.com/web-coding/a-simple-mvc-setup-in-node-js"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1335125389,
          "answer_id": 10271690,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1516982232,
          "last_edit_date": 1516982232,
          "body_markdown": "I don&#39;t think it&#39;s a good approach to add routes to config. A better structure could be something like this: \r\n\r\n    application/\r\n    | - app.js\r\n    | - config.js\r\n    | - public/ (assets - js, css, images)\r\n    | - views/ (all your views files)\r\n    | - libraries/ (you can also call it modules/ or routes/)\r\n        | - users.js\r\n        | - products.js\r\n        | - etc...\r\n\r\nSo products.js and users.js will contain all your routes will all logic within.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1360120899,
          "answer_id": 14720934,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1360120899,
          "body_markdown": "This may be of interest:\r\n\r\nhttps://github.com/flatiron/nconf\r\n\r\n&gt; Hierarchical node.js configuration with files, environment variables, command-line arguments, and atomic object merging."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1363532919,
          "answer_id": 15462312,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1429014918,
          "last_edit_date": 1429014918,
          "body_markdown": "I have written a post exactly about this matter. It basically makes use of a `routeRegistrar` that iterates through files in the folder `/controllers` calling its function `init`. Function `init` takes the express `app` variable as a parameter so you can register your routes the way you want.\r\n\r\n    var fs = require(&quot;fs&quot;);\r\n    var express = require(&quot;express&quot;);\r\n    var app = express();\r\n\r\n    var controllersFolderPath = __dirname + &quot;/controllers/&quot;;\r\n    fs.readdirSync(controllersFolderPath).forEach(function(controllerName){\r\n        if(controllerName.indexOf(&quot;Controller.js&quot;) !== -1){\r\n            var controller = require(controllersFolderPath + controllerName);\r\n            controller.init(app);\r\n        }\r\n    });\r\n\r\n    app.listen(3000);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1373878736,
          "answer_id": 17650340,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1373885401,
          "last_edit_date": 1495540045,
          "body_markdown": "1) Your Express project filesystem maybe like:\r\n\r\n    / ...\r\n    /lib\r\n    /node_modules\r\n    /public\r\n    /views\r\n          app.js\r\n          config.json\r\n          package.json\r\n\r\napp.js - you global app container\r\n\r\n2) Module main file (lib/mymodule/index.js):\r\n\r\n    var express = require(&#39;express&#39;);    \r\n    var app = module.exports = express();\r\n    // and load module dependencies ...  \r\n\r\n    // this place to set module settings\r\n    app.set(&#39;view engine&#39;, &#39;jade&#39;);\r\n    app.set(&#39;views&#39;, __dirname + &#39;/views&#39;);\r\n\r\n    // then do module staff    \r\n    app.get(&#39;/mymodule/route/&#39;,function(req,res){ res.send(&#39;module works!&#39;) });\r\n\r\n3) Connect module in main app.js\r\n   \r\n\r\n    ...\r\n    var mymodule = require(&#39;mymodule&#39;);\r\n    app.use(mymodule);\r\n\r\n4) Sample logic  \r\n\r\n    lib/login\r\n    lib/db\r\n    lib/config\r\n    lib/users\r\n    lib/verify\r\n    lib/\r\n       /api/ \r\n       ...\r\n    lib/\r\n       /admin/\r\n          /users/\r\n          /settings/\r\n          /groups/\r\n    ...\r\n\r\n* Best for testing\r\n* Best for scale\r\n* Separate depends by module\r\n* Grouping route by functionality (or modules)\r\n\r\n[tj][1] says/show on Vimeo interesting idea how modularize express application - \r\n[Modular web applications with Node.js and Express][2]. Powerful and simple.\r\n\r\n\r\n  [1]: https://stackoverflow.com/users/935045/tjholowaychuk\r\n  [2]: http://vimeo.com/56166857"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1380835140,
          "answer_id": 19169418,
          "path": "stack.bower.answer",
          "score": 46,
          "up_vote_count": 47,
          "is_accepted": false,
          "last_activity_date": 1415539918,
          "last_edit_date": 1415539918,
          "body_markdown": "The following is Peter Lyons&#39; answer verbatim, ported over to vanilla JS from Coffeescript, as requested by several others. Peter&#39;s answer is very able, and anyone voting on my answer should vote on his as well.\r\n\r\n---\r\n\r\n**Config**\r\n\r\nWhat you are doing is fine.  I like to have my own config namespace set up in a top-level `config.js` file with a nested namespace like this.\r\n\r\n\r\n    // Set the current environment to true in the env object\r\n    var currentEnv = process.env.NODE_ENV || &#39;development&#39;;\r\n    exports.appName = &quot;MyApp&quot;;\r\n    exports.env = {\r\n      production: false,\r\n      staging: false,\r\n      test: false,\r\n      development: false\r\n    };  \r\n    exports.env[currentEnv] = true;\r\n    exports.log = {\r\n      path: __dirname + &quot;/var/log/app_#{currentEnv}.log&quot;\r\n    };  \r\n    exports.server = {\r\n      port: 9600,\r\n      // In staging and production, listen loopback. nginx listens on the network.\r\n      ip: &#39;127.0.0.1&#39;\r\n    };  \r\n    if (currentEnv != &#39;production&#39; &amp;&amp; currentEnv != &#39;staging&#39;) {\r\n      exports.enableTests = true;\r\n      // Listen on all IPs in dev/test (for testing from other machines)\r\n      exports.server.ip = &#39;0.0.0.0&#39;;\r\n    };\r\n    exports.db {\r\n      URL: &quot;mongodb://localhost:27017/#{exports.appName.toLowerCase()}_#{currentEnv}&quot;\r\n    };\r\n\r\n\r\nThis is friendly for sysadmin editing.  Then when I need something, like the DB connection info, it`s\r\n\r\n    require(&#39;./config&#39;).db.URL\r\n\r\n**Routes/Controllers**\r\n\r\nI like to leave my routes with my controllers and organize them in an `app/controllers` subdirectory.  Then I can load them up and let them add whatever routes they need.\r\n\r\nIn my `app/server.js` javascript file I do:\r\n\r\n    [\r\n      &#39;api&#39;,\r\n      &#39;authorization&#39;,\r\n      &#39;authentication&#39;,\r\n      &#39;domains&#39;,\r\n      &#39;users&#39;,\r\n      &#39;stylesheets&#39;,\r\n      &#39;javascripts&#39;,\r\n      &#39;tests&#39;,\r\n      &#39;sales&#39;\r\n    ].map(function(controllerName){\r\n      var controller = require(&#39;./controllers/&#39; + controllerName);\r\n      controller.setup(app);\r\n    });\r\n\r\nSo I have files like:\r\n\r\n    app/controllers/api.js\r\n    app/controllers/authorization.js\r\n    app/controllers/authentication.js\r\n    app/controllers/domains.js\r\n\r\nAnd for example in my domains controller, I have a `setup` function like this.\r\n\r\n    exports.setup = function(app) {\r\n      var controller = new exports.DomainController();\r\n      var route = &#39;/domains&#39;;\r\n      app.post(route, controller.create);\r\n      app.put(route, api.needId);\r\n      app.delete(route, api.needId);\r\n      route = &#39;/domains/:id&#39;;\r\n      app.put(route, controller.loadDomain, controller.update);\r\n      app.del(route, controller.loadDomain, function(req, res){\r\n        res.sendJSON(req.domain, status.OK);\r\n      });\r\n    }\r\n\r\n**Views**\r\n\r\nPutting views in `app/views` is becoming the customary place.  I lay it out like this.\r\n\r\n    app/views/layout.jade\r\n    app/views/about.jade\r\n    app/views/user/EditUser.jade\r\n    app/views/domain/EditDomain.jade\r\n\r\n**Static Files**\r\n\r\nGo in a `public` subdirectory.\r\n\r\n\r\n**Github/Semver/NPM**\r\n\r\nPut a README.md markdown file at your git repo root for github.\r\n\r\nPut a package.json file with a [semantic version][1] number in your git repo root for NPM.\r\n\r\n\r\n  [1]: http://semver.org/"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1382907702,
          "answer_id": 19623507,
          "path": "stack.bower.answer",
          "score": 233,
          "up_vote_count": 235,
          "is_accepted": true,
          "last_activity_date": 1481832109,
          "last_edit_date": 1481832109,
          "body_markdown": "OK, it&#39;s been a while and this is a popular question, so I&#39;ve gone ahead and created a scaffolding github repository with JavaScript code and a long README about how I like to structure a medium-sized express.js application.\r\n\r\n[focusaurus/express_code_structure](https://github.com/focusaurus/express_code_structure) is the repo with the latest code for this. Pull requests welcome.\r\n\r\nHere&#39;s a snapshot of the README since stackoverflow doesn&#39;t like just-a-link answers. I&#39;ll make some updates as this is a new project that I&#39;ll continue updating, but ultimately the github repo will be the up-to-date place for this information.\r\n\r\n----\r\n#Express Code Structure\r\n\r\nThis project is an example of how to organize a medium-sized express.js web application.\r\n\r\n**Current to at least express v4.14 December 2016**\r\n\r\n[![Build Status](https://semaphoreci.com/api/v1/projects/0de47c2f-0e4f-4a47-8822-5913023312e1/681770/badge.svg)](https://semaphoreci.com/focusaurus/express_code_structure)\r\n\r\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\r\n\r\n## How big is your application?\r\n\r\nWeb applications are not all the same, and there&#39;s not, in my opinion, a single code structure that should be applied to all express.js applications.\r\n\r\nIf your application is small, you don&#39;t need such a deep directory structure as exemplified here. Just keep it simple and stick a handful of `.js` files in the root of your repository and you&#39;re done. Voil&#224;.\r\n\r\nIf your application is huge, at some point you need to break it up into distinct npm packages. In general the node.js approach seems to favor many small packages, at least for libraries, and you should build your application up by using several npm packages as that starts to make sense and justify the overhead. So as your application grows and some portion of the code becomes clearly reusable outside of your application or is a clear subsystem, move it to it&#39;s own git repository and make it into a standalone npm package.\r\n\r\n**So** the focus of this project is to illustrate a workable structure for a medium-sized application.\r\n\r\n## What is your overall architecture\r\n\r\nThere are many approaches to building a web application, such as\r\n\r\n  * Server Side MVC a la Ruby on Rails\r\n  * Single Page Application style a la MongoDB/Express/Angular/Node (MEAN)\r\n  * Basic web site with some forms\r\n  * Models/Operations/Views/Events style a la [MVC is dead, it&#39;s time to MOVE on](http://cirw.in/blog/time-to-move-on.html)\r\n  * and many others both current and historical\r\n\r\nEach of these fits nicely into a different directory structure. For the purposes of this example, it&#39;s just scaffolding and not a fully working app, but I&#39;m assuming the following key architecture points:\r\n\r\n* The site has some traditional static pages/templates\r\n* The &quot;application&quot; portion of the site is developed as a Single Page Application style\r\n* The application exposes a REST/JSON style API to the browser\r\n* The app models a simple business domain, in this case, it&#39;s a car dealership application\r\n\r\n## And what about Ruby on Rails?\r\n\r\nIt will be a theme throughout this project that many of the ideas embodied in Ruby on Rails and the &quot;Convention over Configuration&quot; decisions they have adopted, though widely accepted and used, are not actually very helpful and sometimes are the opposite of what this repository recommends.\r\n\r\nMy main point here is that there are underlying principles to organizing code, and based on those principles, the Ruby on Rails conventions make sense (mostly) for the Ruby on Rails community. However, just thoughtlessly aping those conventions misses the point. Once you grok the basic principles, ALL of your projects will be well-organized and clear: shell scripts, games, mobile apps, enterprise projects, even your home directory.\r\n\r\nFor the Rails community, they want to be able to have a single Rails developer switch from app to app to app and be familiar and comfortable with it each time. This makes great sense if you are 37 signals or Pivotal Labs, and has benefits. In the server-side JavaScript world, the overall ethos is just way more wild west anything goes and we don&#39;t really have a problem with that. That&#39;s how we roll. We&#39;re used to it. Even within express.js, it&#39;s a close kin of Sinatra, not Rails, and taking conventions from Rails is usually not helping anything. I&#39;d even say **Principles over Convention over Configuration**.\r\n\r\n## Underlying Principles and Motivations\r\n\r\n* Be mentally manageable\r\n  * The brain can only deal with and think about a small number of related things at once. That&#39;s why we use directories. It helps us deal with complexity by focusing on small portions.\r\n* Be size-appropriate\r\n  * Don&#39;t create &quot;Mansion Directories&quot; where there&#39;s just 1 file all alone 3 directories down. You can see this happening in the [Ansible Best Practices](http://www.ansibleworks.com/docs/playbooks_best_practices.html) that shames small projects into creating 10+ directories to hold 10+ files when 1 directory with 3 files would be much more appropriate. You don&#39;t drive a bus to work (unless you&#39;re a bus driver, but even then your driving a bus AT work not TO work), so don&#39;t create filesystem structures that aren&#39;t justified by the actual files inside them.\r\n* Be modular but pragmatic\r\n  * The node community overall favors small modules. Anything that can cleanly be separated out from your app entirely should be extracted into a module either for internal use or publicly published on npm. However, for the medium-sized applications that are the scope here, the overhead of this can add tedium to your workflow without commensurate value. So for the time when you have some code that is factored out but not enough to justify a completely separate npm module, just consider it a &quot;**proto-module**&quot; with the expectation that when it crosses some size threshold, it would be extracted out.\r\n  * Some folks such as [@hij1nx](https://twitter.com/hij1nx) even include an `app/node_modules` directory and have `package.json` files in the **proto-module** directories to facilitate that transition and act as a reminder.\r\n* Be easy to locate code\r\n  * Given a feature to build or a bug to fix, our goal is that a developer has no struggle locating the source files involved.\r\n    * Names are meaningful and accurate\r\n    * crufty code is fully removed, not left around in an orphan file or just commented out\r\n* Be search-friendly\r\n  * all first-party source code is in the `app` directory so you can `cd` there are run find/grep/xargs/ag/ack/etc and not be distracted by third party matches\r\n* Use simple and obvious naming\r\n  * npm now seems to require all-lowercase package names. I find this mostly terrible but I must follow the herd, thus filenames should use `kebab-case` even though the variable name for that in JavaScript must be `camelCase` because `-` is a minus sign in JavaScript.\r\n  * variable name matches the basename of the module path, but with `kebab-case` transformed to `camelCase`\r\n* Group by Coupling, Not by Function\r\n  * This is a major departure from the Ruby on Rails convention of `app/views`, `app/controllers`, `app/models`, etc\r\n  * Features get added to a full stack, so I want to focus on a full stack of files that are relevant to my feature. When I&#39;m adding a telephone number field to the user model, I don&#39;t care about any controller other than the user controller, and I don&#39;t care about any model other than the user model.\r\n  * So instead of editing 6 files that are each in their own directory and ignoring tons of other files in those directories, this repository is organized such that all the files I need to build a feature are colocated\r\n  * By the nature of MVC, the user view is coupled to the user controller which is coupled to the user model. So when I change the user model, those 3 files will often change together, but the deals controller or customer controller are decoupled and thus not involved. Same applies to non-MVC designs usually as well.\r\n  * MVC or MOVE style decoupling in terms of which code goes in which module is still encouraged, but spreading the MVC files out into sibling directories is just annoying.\r\n  * Thus each of my routes files has the portion of the routes it owns. A rails-style `routes.rb` file is handy if you want an overview of all routes in the app, but when actually building features and fixing bugs, you only care about the routes relevant to the piece you are changing.\r\n* Store tests next to the code\r\n  * This is just an instance of &quot;group by coupling&quot;, but I wanted to call it out specifically. I&#39;ve written many projects where the tests live under a parallel filesystem called &quot;tests&quot; and now that I&#39;ve started putting my tests in the same directory as their corresponding code, I&#39;m never going back. This is more modular and much easier to work with in text editors and alleviates a lot of the &quot;../../..&quot; path nonsense. If you are in doubt, try it on a few projects and decide for yourself. I&#39;m not going to do anything beyond this to convince you that it&#39;s better.\r\n* Reduce cross-cutting coupling with Events\r\n  * It&#39;s easy to think &quot;OK, whenever a new Deal is created, I want to send an email to all the Salespeople&quot;, and then just put the code to send those emails in the route that creates deals.\r\n  * However, this coupling will eventually turn your app into a giant ball of mud.\r\n  * Instead, the DealModel should just fire a &quot;create&quot; event and be entirely unaware of what else the system might do in response to that.\r\n  * When you code this way, it becomes much more possible to put all the user related code into `app/users` because there&#39;s not a rat&#39;s nest of coupled business logic all over the place polluting the purity of the user code base.\r\n* Code flow is followable\r\n  * Don&#39;t do magic things. Don&#39;t autoload files from magic directories in the filesystem. Don&#39;t be Rails. The app starts at `app/server.js:1` and you can see everything it loads and executes by following the code.\r\n  * Don&#39;t make DSLs for your routes. Don&#39;t do silly metaprogramming when it is not called for.\r\n  * If your app is so big that doing `magicRESTRouter.route(somecontroller, {except: &#39;POST&#39;})` is a big win for you over 3 basic `app.get`, `app.put`, `app.del`, calls, you&#39;re probably building a monolithic app that is too big to effectively work on. Get fancy for BIG wins, not for converting 3 simple lines to 1 complex line.\r\n* Use lower-kebab-case filenames\r\n  * This format avoids filesystem case sensitivity issues across platforms\r\n  * npm forbids uppercase in new package names, and this works well with that\r\n## express.js specifics\r\n* Don&#39;t use `app.configure`. It&#39;s almost entirely useless and you just don&#39;t need it. It is in lots of boilerplate due to mindless copypasta.\r\n* THE ORDER OF MIDDLEWARE AND ROUTES IN EXPRESS MATTERS!!!\r\n  * Almost every routing problem I see on stackoverflow is out-of-order express middleware\r\n  * In general, you want your routes decoupled and not relying on order that much\r\n  * Don&#39;t use `app.use` for your entire application if you really only need that middleware for 2 routes (I&#39;m looking at you, `body-parser`)\r\n  * Make sure when all is said and done you have EXACTLY this order:\r\n    1. Any super-important application-wide middleware\r\n    1. All your routes and assorted route middlewares\r\n    1. THEN error handlers\r\n* Sadly, being sinatra-inspired, express.js mostly assumes all your routes will be in `server.js` and it will be clear how they are ordered. For a medium-sized application, breaking things out into separate routes modules is nice, but it does introduce peril of out-of-order middleware\r\n\r\n## The app symlink trick\r\n\r\nThere are many approaches outlined and discussed at length by the community in the great gist [Better local require() paths for Node.js](https://gist.github.com/branneman/8048520). I may soon decide to prefer either &quot;just deal with lots of ../../../..&quot; or use the [requireFrom](https://github.com/DSKrepps/requireFrom) modlue. However, at the moment, I&#39;ve been using the symlink trick detailed below.\r\n\r\nSo one way to avoid intra-project requires with annoying relative paths like `require(&quot;../../../config&quot;)` is to use the following trick:\r\n\r\n* create a symlink under node_modules for your app\r\n  * cd node_modules &amp;&amp; ln -nsf ../app\r\n* add **just the node_modules/app symlink itself**, not the entire node_modules folder, to git\r\n  * git add -f node_modules/app\r\n  * Yes, you should still have &quot;node_modules&quot; in your `.gitignore` file\r\n  * No, you should not put &quot;node_modules&quot; into your git repository. Some people will recommend you do this. They are incorrect.\r\n* Now you can require intra-project modules using this prefix\r\n  * `var config = require(&quot;app/config&quot;);`\r\n  * `var DealModel = require(&quot;app/deals/deal-model&quot;)`;\r\n* Basically, this makes intra-project requires work very similarly to requires for external npm modules.\r\n* Sorry, Windows users, you need to stick with parent directory relative paths.\r\n\r\n## Configuration\r\n\r\nGenerally code modules and classes to expect only a basic JavaScript `options` object passed in. Only `app/server.js` should load the `app/config.js` module. From there it can synthesize small `options` objects to configure subsystems as needed, but coupling every subsystem to a big global config module full of extra information is bad coupling.\r\n\r\nTry to centralize creation of DB connections and pass those into subsystems as opposed to passing connection parameters and having subsystems make outgoing connections themselves.\r\n\r\n### NODE_ENV\r\n\r\nThis is another enticing but terrible idea carried over from Rails. There should be exactly 1 place in your app, `app/config.js` that looks at the `NODE_ENV` environment variable. Everything else should take an explicit option as a class constructor argument or module configuration parameter.\r\n\r\nIf the email module has an option as to how to deliver emails (SMTP, log to stdout, put in queue etc), it should take an option like `{deliver: &#39;stdout&#39;}` but it should absolutely not check `NODE_ENV`.\r\n\r\n## Tests\r\n\r\nI now keep my test files in the same directory as their corresponding code and use filename extension naming conventions to distinguish tests from production code.\r\n\r\n- `foo.js` has the module &quot;foo&quot;&#39;s code\r\n- `foo.tape.js` has the node-based tests for foo and lives in the same dir\r\n- `foo.btape.js` can be used for tests that need to execute in a browser environment\r\n\r\nI use filesystem globs and the `find . -name &#39;*.tape.js&#39;` command to get access to all my tests as necessary.\r\n\r\n## How to organize code within each `.js` module file\r\n\r\nThis project&#39;s scope is mostly about where files and directories go, and I don&#39;t want to add much other scope, but I&#39;ll just mention that I organize my code into 3 distinct sections.\r\n\r\n1. Opening block of CommonJS require calls to state dependencies\r\n2. Main code block of pure-JavaScript. No CommonJS pollution in here. Don&#39;t reference exports, module, or require.\r\n3. Closing block of CommonJS to set up exports\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1383299792,
          "answer_id": 19724428,
          "path": "stack.bower.answer",
          "score": 36,
          "up_vote_count": 37,
          "is_accepted": false,
          "last_activity_date": 1383299792,
          "body_markdown": "My question was introduced in April 2011, it&#39;s quiet old. During this time, I could improve my experience with Express.js and how to architecture an application written using this library. So, I share here my experience.\r\n\r\nHere&#39;s my directory structure:\r\n\r\n    ├── app.js   // main entry\r\n    ├── config   // The configuration of my applications (logger, global config, ...)\r\n    ├── models   // The model data (e.g. Mongoose model)\r\n    ├── public   // The public directory (client-side code)\r\n    ├── routes   // The route definitions and implementations\r\n    ├── services // The standalone services (Database service, Email service, ...)\r\n    └── views    // The view rendered by the server to the client (e.g. Jade, EJS, ...)\r\n\r\n**App.js**\r\n\r\nThe goal of the `app.js` file is to bootstrap the expressjs application. It loads the configuration module, the logger module, wait for database connection, ..., and run the express server.\r\n\r\n    &#39;use strict&#39;;\r\n    require(&#39;./config&#39;);\r\n    var database = require(&#39;./services/database&#39;);\r\n    var express = require(&#39;express&#39;);\r\n    var app = express();\r\n    module.exports = app;\r\n    \r\n    function main() {\r\n      var http = require(&#39;http&#39;);\r\n    \r\n      // Configure the application.\r\n      app.configure(function () {\r\n        // ... ... ...\r\n      });\r\n      app.configure(&#39;production&#39;, function () {\r\n        // ... ... ...\r\n      });\r\n      app.configure(&#39;development&#39;, function () {\r\n        // ... ... ...\r\n      });\r\n    \r\n      var server = http.createServer(app);\r\n    \r\n      // Load all routes.\r\n      require(&#39;./routes&#39;)(app);\r\n    \r\n      // Listen on http port.\r\n      server.listen(3000);\r\n    }\r\n    \r\n    database.connect(function (err) {\r\n      if (err) { \r\n        // ...\r\n      }\r\n      main();\r\n    });\r\n\r\n**routes/**\r\n\r\nThe routes directory has a `index.js` file. Its goal is to introduce a kind of magic to load  all other files inside the `routes/` directory. Here&#39;s the implementation:\r\n\r\n    /**\r\n     * This module loads dynamically all routes modules located in the routes/\r\n     * directory.\r\n     */\r\n    &#39;use strict&#39;;\r\n    var fs = require(&#39;fs&#39;);\r\n    var path = require(&#39;path&#39;);\r\n    \r\n    module.exports = function (app) {\r\n      fs.readdirSync(&#39;./routes&#39;).forEach(function (file) {\r\n        // Avoid to read this current file.\r\n        if (file === path.basename(__filename)) { return; }\r\n    \r\n        // Load the route file.\r\n        require(&#39;./&#39; + file)(app);\r\n      });\r\n    };\r\n\r\nWith that module, creating a new route definition and implementation is really easy. For examples, `hello.js`:\r\n\r\n    function hello(req, res) {\r\n      res.send(&#39;Hello world&#39;);\r\n    }\r\n    \r\n    module.exports = function (app) {\r\n      app.get(&#39;/api/hello_world&#39;, hello);\r\n    };\r\n\r\nEach route module is **standalone**.\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1394805965,
          "answer_id": 22407294,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1394805965,
          "body_markdown": "http://locomotivejs.org/ provides a way to structure an app built with Node.js and Express.\r\n\r\nFrom the website:\r\n\r\n&gt; &quot;Locomotive is a web framework for Node.js. Locomotive supports MVC\r\n&gt; patterns, RESTful routes, and convention over configuration, while\r\n&gt; integrating seamlessly with any database and template engine.\r\n&gt; Locomotive builds on Express, preserving the power and simplicity\r\n&gt; you&#39;ve come to expect from Node.&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1412940231,
          "answer_id": 26298274,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1412940231,
          "body_markdown": "It&#39;s been quite a while since the last answer to this question and Express has also recently released version 4, which added a few useful things for organising your app structure.\r\n\r\nBelow is a long up to date blog post about best practices on how to structure your Express app.\r\nhttp://www.terlici.com/2014/08/25/best-practices-express-structure.html\r\n\r\nThere is also a GitHub repository applying the advice in the article. It is always up to date with the latest Express version.  \r\nhttps://github.com/terlici/base-express"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438717203,
          "answer_id": 31817844,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1438717203,
          "body_markdown": "This is how most of my express project directory structure looks.\r\n\r\nI usually do a `express dirname` to initialise the project, forgive my laziness, but it&#39;s very flexible and extendable. PS - you need to get `express-generator` for that (for those who&#39;re looking for it `sudo npm install -g express-generator`, sudo because you&#39;re installing it globally)\r\n\r\n    |-- bin\r\n        |-- www //what we start with &quot;forever&quot;\r\n    |-- bower_components\r\n    |-- models\r\n        |-- database.js\r\n        |-- model1.js //not this exact name ofcourse.\r\n        |-- .\r\n    |-- node_modules\r\n    |-- public\r\n        |-- images\r\n        |-- javascripts\r\n            |-- controllers\r\n            |-- directives\r\n            |-- services\r\n            |-- app.js\r\n            |-- init.js //contains config and used for initializing everything, I work with angular a lot.\r\n        |-- stylesheets\r\n    |-- routes\r\n        |-- some\r\n        |-- hierarchy\r\n        .\r\n        .\r\n    |-- views\r\n        |-- partials\r\n        |-- content\r\n    |-- .env\r\n    |-- .env.template\r\n    |-- app.js\r\n    |-- README.md\r\n\r\nYou must be wondering why .env files? Because they work! I use `dotenv` module in my projects (a lot recently) and it works! Pop in these 2 statements in `app.js` or `www`\r\n\r\n    var dotenv = require(&#39;dotenv&#39;);\r\n    dotenv.config({path: path.join(__dirname + &quot;/.env&quot;)});\r\n\r\nAnd another line to quickly set `/bower_components` to serve static content under the resource `/ext`\r\n\r\n    app.use(&#39;/ext&#39;, express.static(path.join(__dirname, &#39;bower_components&#39;)));\r\n\r\nIt probably can be a fit for people who&#39;re looking to use Express and Angular together, or just express without that `javascripts` hierarchy of course."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1442605543,
          "answer_id": 32659910,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1443511699,
          "last_edit_date": 1443511699,
          "body_markdown": "it is now **End of 2015** and after developing my structure for 3 years and in small and large projects. Conclusion?\r\n\r\n**Do not do one large MVC, but separate it in modules**\r\n\r\nSo...\r\n\r\n**Why?**\r\n\r\n- Usually one works on one module (e.g. Products), which you can change independently. \r\n\r\n- You are able to reuse modules\r\n\r\n- You are able to test it separatly\r\n\r\n- You are able to replace it separatly\r\n\r\n- They have clear (stable) interfaces\r\n\r\n -At latest, if there were multiple developers working, module separation helps\r\n\r\n\r\nThe [nodebootstrap][1] project has a similar approach to my final structure. ([github][2])\r\n\r\n**How does this structure look like?**\r\n\r\n1. **Small, capsulated modules**, each with separate MVC\r\n\r\n2. **Each module** has a package.json\r\n\r\n3. **Testing** as a part of the structure (in each module)\r\n\r\n4. **Global configuration**, libraries and Services\r\n\r\n5. Integrated Docker, Cluster, forever\r\n\r\nFolderoverview (see lib folder for modules):\r\n\r\n[![nodebootstrap structure][3]][3]\r\n\r\n\r\n  [1]: http://nodebootstrap.io/\r\n  [2]: https://github.com/inadarei/nodebootstrap\r\n  [3]: http://i.stack.imgur.com/On4s9.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1463731664,
          "answer_id": 37341296,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1463731664,
          "body_markdown": "I recently embraced modules as independent mini-apps.\r\n\r\n    |-- src\r\n      |--module1\r\n      |--module2\r\n         |--www\r\n           |--img\r\n           |--js\r\n           |--css\r\n         |--#.js\r\n         |--index.ejs\r\n      |--module3\r\n      |--www\r\n         |--bower_components\r\n         |--img\r\n         |--js\r\n         |--css\r\n      |--#.js\r\n      |--header.ejs\r\n      |--index.ejs\r\n      |--footer.ejs\r\n\r\nNow for any module routing (#.js), views (*.ejs), js, css and assets are next to each other.\r\nsubmodule routing is set up in the parent #.js with two additional lines\r\n\r\n    router.use(&#39;/module2&#39;, opt_middleware_check, require(&#39;./module2/#&#39;));\r\n    router.use(express.static(path.join(__dirname, &#39;www&#39;)));\r\n\r\nThis way even subsubmodules are possible.\r\n\r\nDon&#39;t forget to set view to the src directory\r\n\r\n    app.set(&#39;views&#39;, path.join(__dirname, &#39;src&#39;));\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1467701128,
          "answer_id": 38196841,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1467701128,
          "body_markdown": "I am giving MVC style folder structure please find bellow .\r\n\r\nWe used bellow folder structure for our big and medium web applications .\r\n\r\n     myapp   \r\n    |\r\n    |\r\n    |____app\r\n    |      |____controllers\r\n    |      |    |____home.js\r\n    |      |\r\n    |      |____models\r\n    |      |     |___home.js\r\n    |      |\r\n    |      |____views\r\n    |           |___404.ejs\r\n    | \t        |___error.ejs\r\n    |           |___index.ejs\r\n    |           |___login.ejs\r\n    |           |___signup.ejs\r\n    |\t\r\n    |\r\n    |_____config\r\n    |     |___auth.js\r\n    |     |___constants.js\r\n    |     |___database.js\r\n    |     |___passport.js\r\n    |     |___routes.js\r\n    |\r\n    |\r\n    |____lib\r\n    |    |___email.js\r\n    |\r\n    |____node_modules\r\n    |\r\n    |\r\n    |____public.js\r\n    |    |____css\r\n    |    |    |__style.css\r\n    |    |    \r\n    |    |____js\r\n    |    |    |__script.js\r\n    |    |\r\n    |    |____img\r\n    |    |    |__img.jpg\r\n    |    |\r\n    |    |\r\n    |    |____uploads\r\n    |         |__img.jpg\r\n    |      \r\n    |   \r\n    |\r\n    |_____app.js\r\n    |\r\n    |\r\n    |\r\n    |_____package.json\r\n     \r\n\r\n     \r\n\r\nI have created one npm module for generation express mvc folder structurer.\r\n\r\nPlease find the bellow   [https://www.npmjs.com/package/express-mvc-generator][1]\r\n\r\n\r\nJust simple steps to generate and use this modules .\r\n\r\ni) install module `npm install express-mvc-generator -g` \r\n\r\nii) check options `express -h`\r\n\r\niii) Generate express mvc structure `express myapp`\r\n\r\niv) Install dependencies: `npm install`:\r\n\r\nv)Open your config/database.js , Please configure your mongo db.\r\n\r\nvi)Run the application `node app` or `nodemon app` \r\n\r\nvii)Check URL [http://localhost:8042/signup][2] OR [http://yourip:8042/signup][3]\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/express-mvc-generator\r\n  [2]: http://localhost:8042/signup\r\n  [3]: http://yourip:8042/signup"
        }
      ],
      "title": "ExpressJS How to structure an application?",
      "view_count": 128982,
      "answer_count": 18,
      "code_snippet": [
        "<code>app.js</code>",
        "<code>| my-application\n| -- app.js\n| -- config/\n     | -- environment.js\n     | -- routes.js\n</code>",
        "<code>var express = require('express');\nvar app = module.exports = express.createServer();\n\nrequire('./config/environment.js')(app, express);\nrequire('./config/routes.js')(app);\n\napp.listen(3000);\n</code>",
        "<code>module.exports = function(app, express){\n    app.configure(function() {\n    app.use(express.logger());\n    });\n\n    app.configure('development', function() {\n    app.use(express.errorHandler({\n        dumpExceptions: true,\n        showStack: true\n    }));\n    });\n\n    app.configure('production', function() {\n    app.use(express.errorHandler());\n    });\n};\n</code>",
        "<code>module.exports = function(app) {\n    app.get('/', function(req, res) {\n    res.send('Hello world !');\n    });\n};\n</code>",
        "<code>.js</code>",
        "<code>app/node_modules</code>",
        "<code>package.json</code>",
        "<code>app</code>",
        "<code>cd</code>",
        "<code>kebab-case</code>",
        "<code>camelCase</code>",
        "<code>-</code>",
        "<code>kebab-case</code>",
        "<code>camelCase</code>",
        "<code>app/views</code>",
        "<code>app/controllers</code>",
        "<code>app/models</code>",
        "<code>routes.rb</code>",
        "<code>app/users</code>",
        "<code>app/server.js:1</code>",
        "<code>magicRESTRouter.route(somecontroller, {except: 'POST'})</code>",
        "<code>app.get</code>",
        "<code>app.put</code>",
        "<code>app.del</code>",
        "<code>app.configure</code>",
        "<code>app.use</code>",
        "<code>body-parser</code>",
        "<code>server.js</code>",
        "<code>require(\"../../../config\")</code>",
        "<code>.gitignore</code>",
        "<code>var config = require(\"app/config\");</code>",
        "<code>var DealModel = require(\"app/deals/deal-model\")</code>",
        "<code>options</code>",
        "<code>app/server.js</code>",
        "<code>app/config.js</code>",
        "<code>options</code>",
        "<code>app/config.js</code>",
        "<code>NODE_ENV</code>",
        "<code>{deliver: 'stdout'}</code>",
        "<code>NODE_ENV</code>",
        "<code>foo.js</code>",
        "<code>foo.tape.js</code>",
        "<code>foo.btape.js</code>",
        "<code>find . -name '*.tape.js'</code>",
        "<code>.js</code>",
        "<code>config.coffee</code>",
        "<code>#Set the current environment to true in the env object\ncurrentEnv = process.env.NODE_ENV or 'development'\nexports.appName = \"MyApp\"\nexports.env =\n  production: false\n  staging: false\n  test: false\n  development: false\nexports.env[currentEnv] = true\nexports.log =\n  path: __dirname + \"/var/log/app_#{currentEnv}.log\"\nexports.server =\n  port: 9600\n  #In staging and production, listen loopback. nginx listens on the network.\n  ip: '127.0.0.1'\nif currentEnv not in ['production', 'staging']\n  exports.enableTests = true\n  #Listen on all IPs in dev/test (for testing from other machines)\n  exports.server.ip = '0.0.0.0'\nexports.db =\n  URL: \"mongodb://localhost:27017/#{exports.appName.toLowerCase()}_#{currentEnv}\"\n</code>",
        "<code>require('./config').db.URL\n</code>",
        "<code>app/controllers</code>",
        "<code>app/server.coffee</code>",
        "<code>[\n  'api'\n  'authorization'\n  'authentication'\n  'domains'\n  'users'\n  'stylesheets'\n  'javascripts'\n  'tests'\n  'sales'\n].map (controllerName) -&gt;\n  controller = require './controllers/' + controllerName\n  controller.setup app\n</code>",
        "<code>app/controllers/api.coffee\napp/controllers/authorization.coffee\napp/controllers/authentication.coffee\napp/controllers/domains.coffee\n</code>",
        "<code>setup</code>",
        "<code>exports.setup = (app) -&gt;\n  controller = new exports.DomainController\n  route = '/domains'\n  app.post route, controller.create\n  app.put route, api.needId\n  app.delete route, api.needId\n  route = '/domains/:id'\n  app.put route, controller.loadDomain, controller.update\n  app.del route, controller.loadDomain, exports.delete\n  app.get route, controller.loadDomain, (req, res) -&gt;\n    res.sendJSON req.domain, status.OK\n</code>",
        "<code>app/views</code>",
        "<code>app/views/layout.jade\napp/views/about.jade\napp/views/user/EditUser.jade\napp/views/domain/EditDomain.jade\n</code>",
        "<code>public</code>",
        "<code>app.put route, api.needId</code>",
        "<code>config.js</code>",
        "<code>// Set the current environment to true in the env object\nvar currentEnv = process.env.NODE_ENV || 'development';\nexports.appName = \"MyApp\";\nexports.env = {\n  production: false,\n  staging: false,\n  test: false,\n  development: false\n};  \nexports.env[currentEnv] = true;\nexports.log = {\n  path: __dirname + \"/var/log/app_#{currentEnv}.log\"\n};  \nexports.server = {\n  port: 9600,\n  // In staging and production, listen loopback. nginx listens on the network.\n  ip: '127.0.0.1'\n};  \nif (currentEnv != 'production' &amp;&amp; currentEnv != 'staging') {\n  exports.enableTests = true;\n  // Listen on all IPs in dev/test (for testing from other machines)\n  exports.server.ip = '0.0.0.0';\n};\nexports.db {\n  URL: \"mongodb://localhost:27017/#{exports.appName.toLowerCase()}_#{currentEnv}\"\n};\n</code>",
        "<code>require('./config').db.URL\n</code>",
        "<code>app/controllers</code>",
        "<code>app/server.js</code>",
        "<code>[\n  'api',\n  'authorization',\n  'authentication',\n  'domains',\n  'users',\n  'stylesheets',\n  'javascripts',\n  'tests',\n  'sales'\n].map(function(controllerName){\n  var controller = require('./controllers/' + controllerName);\n  controller.setup(app);\n});\n</code>",
        "<code>app/controllers/api.js\napp/controllers/authorization.js\napp/controllers/authentication.js\napp/controllers/domains.js\n</code>",
        "<code>setup</code>",
        "<code>exports.setup = function(app) {\n  var controller = new exports.DomainController();\n  var route = '/domains';\n  app.post(route, controller.create);\n  app.put(route, api.needId);\n  app.delete(route, api.needId);\n  route = '/domains/:id';\n  app.put(route, controller.loadDomain, controller.update);\n  app.del(route, controller.loadDomain, function(req, res){\n    res.sendJSON(req.domain, status.OK);\n  });\n}\n</code>",
        "<code>app/views</code>",
        "<code>app/views/layout.jade\napp/views/about.jade\napp/views/user/EditUser.jade\napp/views/domain/EditDomain.jade\n</code>",
        "<code>public</code>",
        "<code>├── app.js   // main entry\n├── config   // The configuration of my applications (logger, global config, ...)\n├── models   // The model data (e.g. Mongoose model)\n├── public   // The public directory (client-side code)\n├── routes   // The route definitions and implementations\n├── services // The standalone services (Database service, Email service, ...)\n└── views    // The view rendered by the server to the client (e.g. Jade, EJS, ...)\n</code>",
        "<code>app.js</code>",
        "<code>'use strict';\nrequire('./config');\nvar database = require('./services/database');\nvar express = require('express');\nvar app = express();\nmodule.exports = app;\n\nfunction main() {\n  var http = require('http');\n\n  // Configure the application.\n  app.configure(function () {\n    // ... ... ...\n  });\n  app.configure('production', function () {\n    // ... ... ...\n  });\n  app.configure('development', function () {\n    // ... ... ...\n  });\n\n  var server = http.createServer(app);\n\n  // Load all routes.\n  require('./routes')(app);\n\n  // Listen on http port.\n  server.listen(3000);\n}\n\ndatabase.connect(function (err) {\n  if (err) { \n    // ...\n  }\n  main();\n});\n</code>",
        "<code>index.js</code>",
        "<code>routes/</code>",
        "<code>/**\n * This module loads dynamically all routes modules located in the routes/\n * directory.\n */\n'use strict';\nvar fs = require('fs');\nvar path = require('path');\n\nmodule.exports = function (app) {\n  fs.readdirSync('./routes').forEach(function (file) {\n    // Avoid to read this current file.\n    if (file === path.basename(__filename)) { return; }\n\n    // Load the route file.\n    require('./' + file)(app);\n  });\n};\n</code>",
        "<code>hello.js</code>",
        "<code>function hello(req, res) {\n  res.send('Hello world');\n}\n\nmodule.exports = function (app) {\n  app.get('/api/hello_world', hello);\n};\n</code>",
        "<code>application/\n| - app.js\n| - config.js\n| - public/ (assets - js, css, images)\n| - views/ (all your views files)\n| - libraries/ (you can also call it modules/ or routes/)\n    | - users.js\n    | - products.js\n    | - etc...\n</code>",
        "<code>routeRegistrar</code>",
        "<code>/controllers</code>",
        "<code>init</code>",
        "<code>init</code>",
        "<code>app</code>",
        "<code>var fs = require(\"fs\");\nvar express = require(\"express\");\nvar app = express();\n\nvar controllersFolderPath = __dirname + \"/controllers/\";\nfs.readdirSync(controllersFolderPath).forEach(function(controllerName){\n    if(controllerName.indexOf(\"Controller.js\") !== -1){\n        var controller = require(controllersFolderPath + controllerName);\n        controller.init(app);\n    }\n});\n\napp.listen(3000);\n</code>",
        "<code>/ ...\n/lib\n/node_modules\n/public\n/views\n      app.js\n      config.json\n      package.json\n</code>",
        "<code>var express = require('express');    \nvar app = module.exports = express();\n// and load module dependencies ...  \n\n// this place to set module settings\napp.set('view engine', 'jade');\napp.set('views', __dirname + '/views');\n\n// then do module staff    \napp.get('/mymodule/route/',function(req,res){ res.send('module works!') });\n</code>",
        "<code>...\nvar mymodule = require('mymodule');\napp.use(mymodule);\n</code>",
        "<code>lib/login\nlib/db\nlib/config\nlib/users\nlib/verify\nlib/\n   /api/ \n   ...\nlib/\n   /admin/\n      /users/\n      /settings/\n      /groups/\n...\n</code>",
        "<code> myapp   \n|\n|\n|____app\n|      |____controllers\n|      |    |____home.js\n|      |\n|      |____models\n|      |     |___home.js\n|      |\n|      |____views\n|           |___404.ejs\n|           |___error.ejs\n|           |___index.ejs\n|           |___login.ejs\n|           |___signup.ejs\n|   \n|\n|_____config\n|     |___auth.js\n|     |___constants.js\n|     |___database.js\n|     |___passport.js\n|     |___routes.js\n|\n|\n|____lib\n|    |___email.js\n|\n|____node_modules\n|\n|\n|____public.js\n|    |____css\n|    |    |__style.css\n|    |    \n|    |____js\n|    |    |__script.js\n|    |\n|    |____img\n|    |    |__img.jpg\n|    |\n|    |\n|    |____uploads\n|         |__img.jpg\n|      \n|   \n|\n|_____app.js\n|\n|\n|\n|_____package.json\n</code>",
        "<code>npm install express-mvc-generator -g</code>",
        "<code>express -h</code>",
        "<code>express myapp</code>",
        "<code>npm install</code>",
        "<code>node app</code>",
        "<code>nodemon app</code>",
        "<code>|-- src\n  |--module1\n  |--module2\n     |--www\n       |--img\n       |--js\n       |--css\n     |--#.js\n     |--index.ejs\n  |--module3\n  |--www\n     |--bower_components\n     |--img\n     |--js\n     |--css\n  |--#.js\n  |--header.ejs\n  |--index.ejs\n  |--footer.ejs\n</code>",
        "<code>router.use('/module2', opt_middleware_check, require('./module2/#'));\nrouter.use(express.static(path.join(__dirname, 'www')));\n</code>",
        "<code>app.set('views', path.join(__dirname, 'src'));\n</code>",
        "<code>express dirname</code>",
        "<code>express-generator</code>",
        "<code>sudo npm install -g express-generator</code>",
        "<code>|-- bin\n    |-- www //what we start with \"forever\"\n|-- bower_components\n|-- models\n    |-- database.js\n    |-- model1.js //not this exact name ofcourse.\n    |-- .\n|-- node_modules\n|-- public\n    |-- images\n    |-- javascripts\n        |-- controllers\n        |-- directives\n        |-- services\n        |-- app.js\n        |-- init.js //contains config and used for initializing everything, I work with angular a lot.\n    |-- stylesheets\n|-- routes\n    |-- some\n    |-- hierarchy\n    .\n    .\n|-- views\n    |-- partials\n    |-- content\n|-- .env\n|-- .env.template\n|-- app.js\n|-- README.md\n</code>",
        "<code>dotenv</code>",
        "<code>app.js</code>",
        "<code>www</code>",
        "<code>var dotenv = require('dotenv');\ndotenv.config({path: path.join(__dirname + \"/.env\")});\n</code>",
        "<code>/bower_components</code>",
        "<code>/ext</code>",
        "<code>app.use('/ext', express.static(path.join(__dirname, 'bower_components')));\n</code>",
        "<code>javascripts</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "node.js",
        "bower"
      ],
      "creation_date": 1356767703,
      "body_markdown": "I&#39;m making a new project that uses bower from twitter. I created a `component.json` to maintain all my dependency like jquery. Then I run `bower install` that installs everything in a folder named `components`. But I need to install the components in a different folder, e.g. `public/components`.\r\n\r\nI have tried editing my components.json into:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;test&quot;,\r\n      &quot;version&quot;: &quot;1.0.0&quot;,\r\n      &quot;directory&quot;: &quot;public/&quot;,\r\n      &quot;dependencies&quot;: {\r\n        &quot;jquery&quot;: &quot;*&quot;\r\n      }\r\n    }\r\n\r\nor:\r\n\r\n    {\r\n      &quot;name&quot;: &quot;test&quot;,\r\n      &quot;version&quot;: &quot;1.0.0&quot;,\r\n      &quot;componentsDirectory&quot;: &quot;public/&quot;,\r\n      &quot;dependencies&quot;: {\r\n        &quot;jquery&quot;: &quot;*&quot;\r\n      }\r\n    }\r\n\r\nas shown in https://github.com/twitter/bower/pull/94 but it doesn&#39;t work.",
      "last_edit_date": 1364846749,
      "up_vote_count": 457,
      "link": "https://stackoverflow.com/questions/14079833/how-to-change-bowers-default-components-folder",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1356769291,
          "answer_id": 14079962,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1356769291,
          "body_markdown": "Try putting the `components.json` file in the `public` directory of your application, rather than the root directory, then re-run `bower install` ...try this in your app home directory:\r\n\r\n    cp components.json public\r\n    cd public\r\n    bower install"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1356775240,
          "answer_id": 14080568,
          "path": "stack.bower.answer",
          "score": 908,
          "up_vote_count": 908,
          "is_accepted": true,
          "last_activity_date": 1427841063,
          "last_edit_date": 1427841063,
          "body_markdown": "Create a [Bower configuration file `.bowerrc`](http://bower.io/docs/config/) in the project root (as opposed to your home directory) with the content:\r\n\r\n    {\r\n      &quot;directory&quot; : &quot;public/components&quot;\r\n    }\r\n\r\nRun `bower install` again."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1392592745,
          "answer_id": 21818157,
          "path": "stack.bower.answer",
          "score": 75,
          "up_vote_count": 75,
          "is_accepted": false,
          "last_activity_date": 1392592745,
          "body_markdown": "In addition to editing `.bowerrc` to setup your default install path, you can also setup custom install paths for different file types.\r\n\r\nThere is a node package called [bower-installer][1] that provides a single command for managing alternate install paths.\r\n\r\nrun `npm install -g bower-installer`\r\n\r\nSet up your bower.json\r\n\r\n    {\r\n      &quot;name&quot; : &quot;test&quot;,\r\n      &quot;version&quot;: &quot;0.1&quot;,\r\n      &quot;dependencies&quot; : {\r\n        &quot;jquery-ui&quot; : &quot;latest&quot;\r\n      },\r\n      &quot;install&quot; : {\r\n        &quot;path&quot; : {\r\n          &quot;css&quot;: &quot;src/css&quot;,\r\n          &quot;js&quot;: &quot;src/js&quot;\r\n        },\r\n        &quot;sources&quot; : {\r\n          &quot;jquery-ui&quot; : [\r\n            &quot;components/jquery-ui/ui/jquery-ui.custom.js&quot;,\r\n            &quot;components/jquery-ui/themes/start/jquery-ui.css&quot;\r\n          ]\r\n        }\r\n      }\r\n    }\r\n\r\nRun the following command: `bower-installer`\r\n\r\nThis will install `components/jquery-ui/themes/start/jquery-ui.css` to `./src/css`, etc\r\n\r\n\r\n  [1]: https://www.npmjs.org/package/bower-installer"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1416427835,
          "answer_id": 27026083,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1416427835,
          "body_markdown": "##Something worth mentioning...\r\n\r\nAs noted above by other contributors, using a `.bowerrc` file with the JSON \r\n\r\n`{ &quot;directory&quot;: &quot;some/path&quot; }`\r\n\r\nis necessary -- HOWEVER, you may run into an issue on Windows while creating that file. If Windows gives you a message imploring you to add a &quot;*file name*&quot;, simply use a text editor / IDE such as Notepad++.\r\n\r\nAdd the JSON to an unnamed file, save it as *.bowerrc* -- you&#39;re good to go!\r\n\r\nProbably an easy assumption, but I hope this save others the unnecessary headache :)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439812986,
          "answer_id": 32049901,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1439812986,
          "body_markdown": "Hi i am same problem and resolve this ways.\r\n\r\nwindows user and vs cant&#39;create .bowerrc file.\r\n\r\nin cmd go any folder \r\n\r\ninstall any packages which is contains .bowerrc file forexample\r\n\r\n    bower install angular-local-storage\r\n\r\nthis plugin contains .bowerrc file. copy that and go to your project and paste this file.\r\n\r\nand in visual studio - solution explorer - show all files and include project \r\nseen .bowerrc file\r\n\r\ni resolve this ways :)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1453565298,
          "answer_id": 34965665,
          "path": "stack.bower.answer",
          "score": 53,
          "up_vote_count": 53,
          "is_accepted": false,
          "last_activity_date": 1454853286,
          "last_edit_date": 1454853286,
          "body_markdown": "I had the same issue on my windows 10. This is what fixed my problem\r\n\r\n 1. Delete `bower_components` in your root folder\r\n 2. Create a `.bowerrc` file in the root\r\n 3. In the file write this code `{&quot;directory&quot; : &quot;public/bower_components&quot;}`\r\n 4. Run a `bower install`\r\n\r\nYou should see bower_components folder in your public folder now"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1488800571,
          "answer_id": 42624776,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1488801927,
          "last_edit_date": 1488801927,
          "body_markdown": "Delete components folder from your root.\r\n\r\nCreate a (.bowerrc) file in the root ( this is a hidden file if linux)\r\n\r\nIn this file (.bowerrc) write the following code\r\n\r\n{\r\n&quot;directory&quot;: &quot;public/components&quot;\r\n}\r\n\r\nRun command: bower install\r\n\r\nYou should see components folder in your public folder now"
        }
      ],
      "title": "How to change bower&#39;s default components folder?",
      "view_count": 195567,
      "answer_count": 7,
      "code_snippet": [
        "<code>component.json</code>",
        "<code>bower install</code>",
        "<code>components</code>",
        "<code>public/components</code>",
        "<code>{\n  \"name\": \"test\",\n  \"version\": \"1.0.0\",\n  \"directory\": \"public/\",\n  \"dependencies\": {\n    \"jquery\": \"*\"\n  }\n}\n</code>",
        "<code>{\n  \"name\": \"test\",\n  \"version\": \"1.0.0\",\n  \"componentsDirectory\": \"public/\",\n  \"dependencies\": {\n    \"jquery\": \"*\"\n  }\n}\n</code>",
        "<code>.bowerrc</code>",
        "<code>{\n  \"directory\" : \"public/components\"\n}\n</code>",
        "<code>bower install</code>",
        "<code>The value of the json property from .bowerrc is no longer used</code>",
        "<code>\"directory\"</code>",
        "<code>.bowerrc</code>",
        "<code>npm install -g bower-installer</code>",
        "<code>{\n  \"name\" : \"test\",\n  \"version\": \"0.1\",\n  \"dependencies\" : {\n    \"jquery-ui\" : \"latest\"\n  },\n  \"install\" : {\n    \"path\" : {\n      \"css\": \"src/css\",\n      \"js\": \"src/js\"\n    },\n    \"sources\" : {\n      \"jquery-ui\" : [\n        \"components/jquery-ui/ui/jquery-ui.custom.js\",\n        \"components/jquery-ui/themes/start/jquery-ui.css\"\n      ]\n    }\n  }\n}\n</code>",
        "<code>bower-installer</code>",
        "<code>components/jquery-ui/themes/start/jquery-ui.css</code>",
        "<code>./src/css</code>",
        "<code>bower_components</code>",
        "<code>bower_components</code>",
        "<code>.bowerrc</code>",
        "<code>{\"directory\" : \"public/bower_components\"}</code>",
        "<code>bower install</code>",
        "<code>.bowerrc</code>",
        "<code>{ \"directory\": \"some/path\" }</code>",
        "<code>echo &gt;&gt; .bowerrc</code>",
        "<code>components.json</code>",
        "<code>public</code>",
        "<code>bower install</code>",
        "<code>cp components.json public\ncd public\nbower install\n</code>",
        "<code>bower.sh</code>",
        "<code>bower install angular-local-storage\n</code>",
        "<code>Cygwin</code>",
        "<code>Cmder</code>",
        "<code>.bowerrc</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "desktop",
        "google-chrome",
        "notifications"
      ],
      "creation_date": 1266304069,
      "body_markdown": "How does one use [Chrome desktop notifications][1]? I&#39;d like that use that in my own code.\r\n\r\n**Update**: Here&#39;s [a blog post][2] explaining webkit notifications with an example.\r\n\r\n\r\n  [1]: http://techcrunch.com/2009/09/01/chrome-is-gaining-desktop-notifications/\r\n  [2]: http://0xfe.blogspot.com/2010/04/desktop-notifications-with-webkit.html",
      "last_edit_date": 1502262777,
      "up_vote_count": 330,
      "link": "https://stackoverflow.com/questions/2271156/chrome-desktop-notification-example",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1267333017,
          "answer_id": 2350124,
          "path": "stack.bower.answer",
          "score": 80,
          "up_vote_count": 82,
          "is_accepted": false,
          "last_activity_date": 1317655136,
          "last_edit_date": 1317655136,
          "body_markdown": "Check the [design][1] and [API specification][2] (it&#39;s still a draft) or check the source from [this webpage][3] for a simple example: It&#39;s mainly a call to `window.webkitNotifications.createNotification`.\r\n\r\nIf you want a more robust example (you&#39;re trying to create your own Google Chrome&#39;s extension, and would like to know how to deal with permissions, local storage and such), check out [Gmail Notifier Extension][4]: download the crx file instead of installing it, unzip it and read its source code.\r\n\r\n  [1]: http://dev.chromium.org/developers/design-documents/desktop-notifications\r\n  [2]: http://www.chromium.org/developers/design-documents/desktop-notifications/api-specification\r\n  [3]: http://www.210computing.com/google/chrome_notifications.html\r\n  [4]: https://chrome.google.com/extensions/detail/kkmbodalobogbnejmcdghkfimhodifol"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1298137675,
          "answer_id": 5052454,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1441733931,
          "last_edit_date": 1441733931,
          "body_markdown": "I like: http://www.html5rocks.com/en/tutorials/notifications/quick/#toc-examples but it uses old variables, so the demo doesn&#39;t work anymore. `webkitNotifications` is now `Notification`."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1352607210,
          "answer_id": 13328513,
          "path": "stack.bower.answer",
          "score": 591,
          "up_vote_count": 593,
          "is_accepted": true,
          "last_activity_date": 1518647023,
          "last_edit_date": 1518647023,
          "body_markdown": "Below is a working example of desktop notifications for Chrome, Firefox, Opera and Safari. Note that for security reasons, starting with Chrome 62, [permission for the Notification API may no longer be requested from a cross-origin iframe](https://www.chromestatus.com/feature/6451284559265792), so you&#39;ll need to save this example in an HTML file on your site/application, and make sure to use HTTPS.\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // request permission on page load\r\n    document.addEventListener(&#39;DOMContentLoaded&#39;, function () {\r\n      if (!Notification) {\r\n        alert(&#39;Desktop notifications not available in your browser. Try Chromium.&#39;); \r\n        return;\r\n      }\r\n    \r\n      if (Notification.permission !== &quot;granted&quot;)\r\n        Notification.requestPermission();\r\n    });\r\n\r\n    function notifyMe() {\r\n      if (Notification.permission !== &quot;granted&quot;)\r\n        Notification.requestPermission();\r\n      else {\r\n        var notification = new Notification(&#39;Notification title&#39;, {\r\n          icon: &#39;http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png&#39;,\r\n          body: &quot;Hey there! You&#39;ve been notified!&quot;,\r\n        });\r\n    \r\n        notification.onclick = function () {\r\n          window.open(&quot;http://stackoverflow.com/a/13328397/1269037&quot;);      \r\n        };\r\n        \r\n      }\r\n    \r\n    }\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;button onclick=&quot;notifyMe()&quot;&gt;Notify me!&lt;/button&gt;\r\n\r\n\r\n----\r\n\r\nWe&#39;re using the [W3C Notifications](http://www.w3.org/TR/notifications/) API, documented at [MDN](https://developer.mozilla.org/en-US/docs/Web/API/notification). Do not confuse this with the [Chrome extensions notifications API](https://developer.chrome.com/extensions/desktop_notifications), which is different. Chrome extension notifications obviously only work in Chrome extensions, don&#39;t require any special permission from the user, support rich text notifications, but [disappear automatically and the user may not notice they have been triggered](https://code.google.com/p/chromium/issues/detail?id=493500#c3)). W3C notifications work in many browsers (see support on [caniuse](http://caniuse.com/#search=Notification)), require user permission, stack on top of the previous notification and don&#39;t automatically disappear in Chrome ([they do in Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=875114)).\r\n\r\n\r\n### Final words\r\n\r\nNotification support has been in continuous flux, with various APIs being deprecated over the last three years. If you&#39;re curious, check the previous edits of this answer to see what used to work in Chrome, and to learn the story of rich HTML notifications.\r\n\r\nNow the latest standard is at https://notifications.spec.whatwg.org/.\r\n\r\nThere&#39;s also a [different call](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification) (though with the same parameters) to create notifications from service workers, which [for some reason](https://bugs.chromium.org/p/chromium/issues/detail?id=590029), don&#39;t have access to the `Notification()` constructor.\r\n\r\nSee also [notify.js](https://github.com/alexgibson/notify.js/) for a helper library."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1397197968,
          "answer_id": 23005116,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1397197968,
          "body_markdown": "Here is nice documentation on APIs,\r\n\r\n[https://developer.chrome.com/apps/notifications][1]\r\n\r\nAnd, official video explanation by Google,\r\n\r\n[https://developers.google.com/live/shows/83992232-1001][2]\r\n\r\n\r\n  [1]: https://developer.chrome.com/apps/notifications\r\n  [2]: https://developers.google.com/live/shows/83992232-1001"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1401568898,
          "answer_id": 23974386,
          "path": "stack.bower.answer",
          "score": 29,
          "up_vote_count": 30,
          "is_accepted": false,
          "last_activity_date": 1401568898,
          "body_markdown": "It appears that `window.webkitNotifications` has already been deprecated and removed. However, there&#39;s a [new API](https://developer.mozilla.org/en/docs/Web/API/notification), and it appears to work in the latest version of Firefox as well.\r\n\r\n    function notifyMe() {\r\n      // Let&#39;s check if the browser supports notifications\r\n      if (!(&quot;Notification&quot; in window)) {\r\n        alert(&quot;This browser does not support desktop notification&quot;);\r\n      }\r\n    \r\n      // Let&#39;s check if the user is okay to get some notification\r\n      else if (Notification.permission === &quot;granted&quot;) {\r\n        // If it&#39;s okay let&#39;s create a notification\r\n        var notification = new Notification(&quot;Hi there!&quot;);\r\n      }\r\n    \r\n      // Otherwise, we need to ask the user for permission\r\n      // Note, Chrome does not implement the permission static property\r\n      // So we have to check for NOT &#39;denied&#39; instead of &#39;default&#39;\r\n      else if (Notification.permission !== &#39;denied&#39;) {\r\n        Notification.requestPermission(function (permission) {\r\n    \r\n          // Whatever the user answers, we make sure we store the information\r\n          if(!(&#39;permission&#39; in Notification)) {\r\n            Notification.permission = permission;\r\n          }\r\n    \r\n          // If the user is okay, let&#39;s create a notification\r\n          if (permission === &quot;granted&quot;) {\r\n            var notification = new Notification(&quot;Hi there!&quot;);\r\n          }\r\n        });\r\n      }\r\n    \r\n      // At last, if the user already denied any notification, and you \r\n      // want to be respectful there is no need to bother him any more.\r\n    }\r\n\r\n[codepen](http://codepen.io/mnbayazit/pen/HnixI)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1404425052,
          "answer_id": 24563954,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1404425052,
          "body_markdown": "Notify.js is a wrapper around the new webkit notifications. It works pretty well.\r\n\r\nhttp://alxgbsn.co.uk/2013/02/20/notify-js-a-handy-wrapper-for-the-web-notifications-api/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452680683,
          "answer_id": 34764143,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1453900716,
          "last_edit_date": 1453900716,
          "body_markdown": "I made this simple Notification wrapper. It works on Chrome, Safari and Firefox.\r\n\r\nProbably on Opera, IE and Edge as well but I haven&#39;t tested it yet.\r\n\r\nJust get the notify.js file from here [https://github.com/gravmatt/js-notify][1] and put it into your page.\r\n\r\n  [1]: https://github.com/gravmatt/js-notify\r\n\r\nGet it on Bower\r\n\r\n    $ bower install js-notify\r\n\r\nThis is how it works:\r\n\r\n    notify(&#39;title&#39;, {\r\n        body: &#39;Notification Text&#39;,\r\n        icon: &#39;path/to/image.png&#39;,\r\n        onclick: function(e) {}, // e -&gt; Notification object\r\n        onclose: function(e) {},\r\n        ondenied: function(e) {}\r\n      });\r\n\r\nYou have to set the title but the json object as the second argument is optional."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1475833309,
          "answer_id": 39914167,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1475833309,
          "body_markdown": "    &lt;!DOCTYPE html&gt;\r\n\r\n    &lt;html&gt;\r\n\r\n    &lt;head&gt;\r\n    &lt;title&gt;Hello!&lt;/title&gt;\r\n    &lt;script&gt;\r\n    function notify(){\r\n\r\n    if (Notification.permission !== &quot;granted&quot;) {\r\n    Notification.requestPermission();\r\n    }\r\n     else{\r\n    var notification = new Notification(&#39;hello&#39;, {\r\n      body: &quot;Hey there!&quot;,\r\n    });\r\n    notification.onclick = function () {\r\n      window.open(&quot;http://google.com&quot;);\r\n    };\r\n    }\r\n    }\r\n    &lt;/script&gt;\r\n    &lt;/head&gt;\r\n\r\n    &lt;body&gt;\r\n    &lt;button onclick=&quot;notify()&quot;&gt;Notify&lt;/button&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1491722576,
          "answer_id": 43304096,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1491722576,
          "body_markdown": "For some reason the accepted answer didn&#39;t work for me, I ended up using the following example:\r\n\r\nhttps://developer.chrome.com/apps/app_codelab_alarms#create-notification\r\n\r\n    function notifyMe() {\r\n    \r\n        chrome.notifications.create(&#39;reminder&#39;, {\r\n            type: &#39;basic&#39;,\r\n            iconUrl: &#39;icon.png&#39;,\r\n            title: &#39;Don\\&#39;t forget!&#39;,\r\n            message: &#39;You have  things to do. Wake up, dude!&#39;\r\n        }, function(notificationId) {});\r\n        \r\n    }"
        }
      ],
      "title": "Chrome desktop notification example",
      "view_count": 270457,
      "answer_count": 9,
      "code_snippet": [
        "<code>// request permission on page load\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (!Notification) {\n    alert('Desktop notifications not available in your browser. Try Chromium.'); \n    return;\n  }\n\n  if (Notification.permission !== \"granted\")\n    Notification.requestPermission();\n});\n\nfunction notifyMe() {\n  if (Notification.permission !== \"granted\")\n    Notification.requestPermission();\n  else {\n    var notification = new Notification('Notification title', {\n      icon: 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',\n      body: \"Hey there! You've been notified!\",\n    });\n\n    notification.onclick = function () {\n      window.open(\"http://stackoverflow.com/a/13328397/1269037\");      \n    };\n\n  }\n\n}\n</code>",
        "<code>&lt;button onclick=\"notifyMe()\"&gt;Notify me!&lt;/button&gt;\n</code>",
        "<code>Notification()</code>",
        "<code>window.webkitNotifications.createNotification</code>",
        "<code>window.webkitNotifications</code>",
        "<code>function notifyMe() {\n  // Let's check if the browser supports notifications\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n\n  // Let's check if the user is okay to get some notification\n  else if (Notification.permission === \"granted\") {\n    // If it's okay let's create a notification\n    var notification = new Notification(\"Hi there!\");\n  }\n\n  // Otherwise, we need to ask the user for permission\n  // Note, Chrome does not implement the permission static property\n  // So we have to check for NOT 'denied' instead of 'default'\n  else if (Notification.permission !== 'denied') {\n    Notification.requestPermission(function (permission) {\n\n      // Whatever the user answers, we make sure we store the information\n      if(!('permission' in Notification)) {\n        Notification.permission = permission;\n      }\n\n      // If the user is okay, let's create a notification\n      if (permission === \"granted\") {\n        var notification = new Notification(\"Hi there!\");\n      }\n    });\n  }\n\n  // At last, if the user already denied any notification, and you \n  // want to be respectful there is no need to bother him any more.\n}\n</code>",
        "<code>webkitNotifications</code>",
        "<code>Notification</code>",
        "<code>$ bower install js-notify\n</code>",
        "<code>notify('title', {\n    body: 'Notification Text',\n    icon: 'path/to/image.png',\n    onclick: function(e) {}, // e -&gt; Notification object\n    onclose: function(e) {},\n    ondenied: function(e) {}\n  });\n</code>",
        "<code>&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n&lt;head&gt;\n&lt;title&gt;Hello!&lt;/title&gt;\n&lt;script&gt;\nfunction notify(){\n\nif (Notification.permission !== \"granted\") {\nNotification.requestPermission();\n}\n else{\nvar notification = new Notification('hello', {\n  body: \"Hey there!\",\n});\nnotification.onclick = function () {\n  window.open(\"http://google.com\");\n};\n}\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;button onclick=\"notify()\"&gt;Notify&lt;/button&gt;\n&lt;/body&gt;\n</code>",
        "<code>Notification.requestPermission();</code>",
        "<code>var notification = new Notification('hello', {  body: \"Hey there!\", });</code>",
        "<code>function notifyMe() {\n\n    chrome.notifications.create('reminder', {\n        type: 'basic',\n        iconUrl: 'icon.png',\n        title: 'Don\\'t forget!',\n        message: 'You have  things to do. Wake up, dude!'\n    }, function(notificationId) {});\n\n}\n</code>",
        "<code>Uncaught TypeError: Cannot read property 'create' of undefined(…)</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "requirejs",
        "angularjs"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1348232047,
          "answer_id": 12531010,
          "path": "stack.gulp.answer",
          "score": 221,
          "up_vote_count": 226,
          "is_accepted": false,
          "last_activity_date": 1369405298,
          "last_edit_date": 1369405298,
          "body_markdown": "Yes it makes sense to use `angular.js` along with `require.js` wherein you can use `require.js` for modularizing components.&lt;br&gt;\r\n\r\nI can point you to a [seed project][1] which uses `both angular.js and require.js`. Hope that helps! \r\n\r\n\r\n  [1]: https://github.com/tnajdek/angular-requirejs-seed"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1348239101,
          "answer_id": 12532936,
          "path": "stack.gulp.answer",
          "score": 57,
          "up_vote_count": 60,
          "is_accepted": false,
          "last_activity_date": 1348239101,
          "body_markdown": "This I believe is a subjective question, so I will provide my subjective opinion. \r\n\r\nAngular has a modularization mechanism built in. When you create your app, the first thing you would do is \r\n\r\n    var app = angular.module(&quot;myApp&quot;);\r\n\r\nand then\r\n\r\n    app.directive(...);\r\n    \r\n    app.controller(...);\r\n    \r\n    app.service(...);\r\n\r\nIf you have a look at the angular-seed which is neat starter app for angular, they have separated out the directives, services, controllers etc into different modules and then loaded those modules as dependancies on your main app.\r\n\r\nSomething like :\r\n\r\n    var app = angular.module(&quot;myApp&quot;,[&quot;Directives&quot;,&quot;Controllers&quot;,&quot;Services&quot;];\r\n\r\nAngular also lazy loads these modules ( into memory) not their script files. \r\n\r\nIn terms of lazy loading script files, to be frank unless you are writing something extremely large it would be an overkill because angular by its very nature reduces the amount of code you write. A typical app written in most other frameworks could expect a reduction in around 30-50% in LOC if written in angular. \r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1348315864,
          "answer_id": 12543614,
          "path": "stack.gulp.answer",
          "score": 21,
          "up_vote_count": 21,
          "is_accepted": false,
          "last_activity_date": 1348315864,
          "body_markdown": "As @ganaraj mentioned AngularJS has dependency injection at its core. When building toy seed applications with and without RequireJS, I personally found RequireJS was probably overkill for most use cases.\r\n\r\nThat doesn&#39;t mean RequireJS is not useful for it&#39;s script loading capabilities and keeping your codebase clean during development. Combining the r.js optimizer ([https://github.com/jrburke/r.js][1]) with almond ([https://github.com/jrburke/almond][2]) can create a very slim script loading story. However since its dependency management features are not as important with angular at the core of your application, you can also evaluate other client side (HeadJS, LABjs, ...) or even server side (MVC4 Bundler, ...) script loading solutions for your particular application.\r\n\r\n  [1]: https://github.com/jrburke/r.js\r\n  [2]: https://github.com/jrburke/almond"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1364404241,
          "answer_id": 15665056,
          "path": "stack.gulp.answer",
          "score": 135,
          "up_vote_count": 140,
          "is_accepted": false,
          "last_activity_date": 1429783205,
          "last_edit_date": 1429783205,
          "body_markdown": "Yes, it makes sense. \r\n\r\n&gt; Angular modules don&#39;t try to solve the problem of script load ordering\r\n&gt; or lazy script fetching. These goals are orthogonal and both module\r\n&gt; systems can live side by side and fulfil their goals.\r\n&gt; \r\n&gt; *Source: [Angular JS official website][1]&lt;/cite&gt;*\r\n\r\n\r\n  [1]: http://docs.angularjs.org/tutorial/step_07"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1369666997,
          "answer_id": 16775893,
          "path": "stack.gulp.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1369740064,
          "last_edit_date": 1369740064,
          "body_markdown": "Yes it makes sense to use requireJS with Angular, I spent several days to test several technical solutions.\r\n\r\nI made an Angular Seed with RequireJS on Server Side. Very simple one.\r\nI use SHIM notation for no AMD module and not AMD because I think it&#39;s very difficult to deal with two different Dependency injection system. \r\n\r\nI use grunt and r.js to concatenate js files on server depends on the SHIM configuration (dependency) file. So I refer only one js file in my app.\r\n\r\nFor more information go on my github Angular Seed :\r\nhttps://github.com/matohawk/angular-seed-requirejs\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1369734386,
          "answer_id": 16788878,
          "path": "stack.gulp.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1369734386,
          "body_markdown": "It makes sense to use requirejs with angularjs if you plan on lazy loading controllers and directives etc, while also combining multiple lazy dependencies into single script files for much faster lazy loading. RequireJS has an &lt;a href=&quot;http://requirejs.org/docs/optimization.html&quot;&gt;optimisation tool&lt;/a&gt; that makes the combining easy. See http://ify.io/using-requirejs-with-optimisation-for-lazy-loading-angularjs-artefacts/   "
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1378303017,
          "answer_id": 18615865,
          "path": "stack.gulp.answer",
          "score": 148,
          "up_vote_count": 150,
          "is_accepted": false,
          "last_activity_date": 1453259489,
          "last_edit_date": 1495541904,
          "body_markdown": "To restate what I think the OP&#39;s question really is:\r\n\r\n&gt; If I&#39;m building an application principally in Angular 1.x, and (implicitly) doing so in the era of Grunt/Gulp/Broccoli and Bower/NPM, and I maybe have a couple additional library dependencies, does Require add clear, specific value beyond what I get by using Angular without Require? \r\n\r\nOr, put another way: \r\n\r\n&gt;&quot;Does vanilla Angular need Require to manage basic Angular component-loading effectively, *if I have other ways of handling basic script-loading?*&quot;\r\n\r\nAnd I believe the basic answer to that is: &quot;not unless you&#39;ve got something else going on, and/or you&#39;re unable to use newer, more modern tools.&quot; \r\n\r\nLet&#39;s be clear at the outset: RequireJS is a great tool that solved some very important problems, and started us down the road that we&#39;re on, toward more scalable, more professional Javascript applications. Importantly, it was the first time many people encountered the concept of modularization and of getting things out of global scope. So, if you&#39;re going to build a Javascript application that needs to scale, then Require and the AMD pattern are not bad tools for doing that.\r\n\r\nBut, **is there anything particular about Angular that makes Require/AMD a particularly good fit?** No. In fact, Angular provides you with its own modularization and encapsulation pattern, which in many ways renders redundant the basic modularization features of AMD. And, integrating Angular modules into the AMD pattern is not impossible, but it&#39;s a bit... finicky. You&#39;ll definitely be spending time getting the two patterns to integrate nicely.\r\n\r\nFor some perspective from the Angular team itself, there&#39;s [this][1], from Brian Ford, author of the Angular Batarang and now a member of the Angular core team:\r\n\r\n&gt; I don&#39;t recommend using RequireJS with AngularJS. Although it&#39;s certainly possible, I haven&#39;t seen any instance where RequireJS was beneficial in practice.\r\n\r\nSo, on the very specific question of AngularJS: Angular and Require/AMD are orthogonal, and in places overlapping. You _can_ use them together, but there&#39;s no reason specifically related to the nature/patterns of Angular itself. \r\n\r\n### But what about basic management of internal and external dependencies for scalable Javascript applications? Doesn&#39;t Require do something really critical for me there? \r\n\r\nI recommend checking out Bower and NPM, and particularly NPM. I&#39;m not trying to start a holy war about the comparative benefits of these tools. I merely want to say: there are other ways to skin that cat, and those ways *may* be even better than AMD/Require. (They certainly have much more popular momentum in late-2015, particularly NPM, combined with ES6 or CommonJS modules. See [related SO question][2].)\r\n\r\n### What about lazy-loading? \r\n\r\nNote that lazy-loading and lazy-downloading are different. Angular&#39;s lazy-loading doesn&#39;t mean you&#39;re pulling them direct from the server. In a Yeoman-style application with javascript automation, you&#39;re concatenating and minifying the whole shebang together into a single file. They&#39;re present, but not executed/instantiated until needed. The speed and bandwidth improvements you get from doing this vastly, vastly outweigh any alleged improvements from lazy-downloading a particular 20-line controller. In fact, the wasted network latency and transmission overhead for that controller is going to be an order of magnitude greater than the size of the controller itself.\r\n\r\nBut let&#39;s say you really do need lazy-downloading, perhaps for infrequently-used pieces of your application, such as an admin interface. That&#39;s a very legitimate case. Require can indeed do that for you. But there are [also][3] [many][4] [other][5], [potentially][6] [more][7] [flexible][8] [options][9] that accomplish the same thing. And Angular 2.0 will apparently take care of this for us, built-in to the [router][10]. ([Details][11].)\r\n\r\n\r\n### But what about during development on my local dev boxen? \r\n\r\nHow can I get all my dozens/hundreds of script files loaded without needing to attach them all to index.html manually?\r\n\r\nHave a look at the sub-generators in Yeoman&#39;s generator-angular, or at the automation patterns embodied in [generator-gulp-angular][12], or at the standard Webpack automation for React. These provide you a clean, scalable way to either: automatically attach the files at the time that components are scaffolded, or to simply grab them all automatically if they are present in certain folders/match certain glob-patterns. You never again need to think about your own script-loading once you&#39;ve got the latter options. \r\n\r\n### Bottom-line? \r\n\r\nRequire is a great tool, for certain things. But go with the grain whenever possible, and separate your concerns whenever possible. Let Angular worry about Angular&#39;s own modularization pattern, and consider using ES6 modules or CommonJS as a general modularization pattern. Let modern automation tools worry about script-loading and dependency-management. And take care of async lazy-loading in a granular way, rather than by tangling it up with the other two concerns. \r\n\r\nThat said, if you&#39;re developing Angular apps but can&#39;t install Node on your machine to use Javascript automation tools for some reason, then Require may be a good alternate solution. And I&#39;ve seen really elaborate setups where people want to dynamically load Angular components that each declare their own dependencies or something. And while I&#39;d probably try to solve that problem another way, I can see the merits of the idea, for that very particular situation. \r\n\r\nBut otherwise... when starting from scratch with a new Angular application and flexibility to create a modern automation environment... you&#39;ve got a lot of other, more flexible, more modern options.\r\n\r\n_(Updated repeatedly to keep up with the evolving JS scene.)_\r\n\r\n\r\n  [1]: http://briantford.com/blog/huuuuuge-angular-apps.html\r\n  [2]: https://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm/31633281#31633281\r\n  [3]: https://oclazyload.readme.io/\r\n  [4]: http://www.appelsiini.net/projects/lazyload\r\n  [5]: https://chris.lu/article/read/506de698268c420f0d000004\r\n  [6]: http://w3bits.com/async-javascript/\r\n  [7]: https://friendlybit.com/js/lazy-loading-asyncronous-javascript/\r\n  [8]: https://stackoverflow.com/questions/20578731/how-to-lazy-load-non-angular-javascript-files-using-angularjs\r\n  [9]: http://www.smashingmagazine.com/2015/02/redefining-lazy-loading-with-lazy-load-xt/\r\n  [10]: https://github.com/angular/router\r\n  [11]: http://www.syntaxsuccess.com/viewarticle/lazy-loading-in-angular-2.0\r\n  [12]: https://github.com/Swiip/generator-gulp-angular\r\n  [13]: http://c2.com/cgi/wiki?CargoCultProgramming"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1379232292,
          "answer_id": 18810266,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1379232292,
          "body_markdown": "I think that it depends on your project complexity since angular is pretty much modularized. \r\nYour controllers can be mapped and you can just import those JavaScript classes in your index.html page. \r\n\r\nBut in case your project get bigger. Or you anticipates such scenario, you should integrate angular with requirejs. In [this][1] article you can see a demo app for such integration. \r\n\r\n\r\n  [1]: http://angularcorner.blogspot.co.il/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1383857343,
          "answer_id": 19846403,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1383857343,
          "body_markdown": "I would avoid using Require.js. Apps I&#39;ve seen that do this wind up a mess of multiple types of module pattern architecture.  AMD, Revealing, different flavors of IIFE, etc.  There are other ways to load on demand like the [loadOnDemand Angular mod][1].  Adding other stuff just fills your code full of cruft and creates a [low signal to noise ratio][2] and makes your code hard to read. \r\n\r\n  [1]: https://github.com/AndyGrom/loadOnDemand\r\n  [2]: http://java.dzone.com/articles/whats-your-signal-noise-ratio"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1384954018,
          "answer_id": 20097262,
          "path": "stack.gulp.answer",
          "score": 17,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1384954018,
          "body_markdown": "Yes, it does, specially for very large SPA.\r\n\r\nIn some scenario, RequireJS is a must.  For example, I develop PhoneGap applications using AngularJS that also uses Google Map API.  Without AMD loader like RequireJS, the app would simply crash upon launch when offline as it cannot source the Google Map API scripts.  An AMD loader gives me a chance to display an error message to the user.\r\n\r\nHowever, integration between AngularJS and RequireJS is a bit tricky.  I created angularAMD to make this a less painful process:\r\n\r\nhttp://marcoslin.github.io/angularAMD/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1389024667,
          "answer_id": 20954143,
          "path": "stack.gulp.answer",
          "score": 33,
          "up_vote_count": 33,
          "is_accepted": false,
          "last_activity_date": 1413683045,
          "last_edit_date": 1413683045,
          "body_markdown": "Using RequireJS with AngularJS makes sense but only if you understand how each of them works regarding **dependency injection**, as although both of them injects dependencies, they inject very different things.\r\n\r\nAngularJS has its own dependency system that let you inject AngularJS modules to a newly created module in order to reuse implementations. Let&#39;s say you created a &quot;first&quot; module that implements an AngularJS filter &quot;greet&quot;:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    angular\r\n      .module(&#39;first&#39;, [])\r\n      .filter(&#39;greet&#39;, function() {\r\n        return function(name) {\r\n          return &#39;Hello, &#39; + name + &#39;!&#39;;\r\n        }\r\n      });\r\n\r\nAnd now let&#39;s say you want to use the &quot;greet&quot; filter in another module called &quot;second&quot; that implements a &quot;goodbye&quot; filter. You may do that injecting the &quot;first&quot; module to the &quot;second&quot; module:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    angular\r\n      .module(&#39;second&#39;, [&#39;first&#39;])\r\n      .filter(&#39;goodbye&#39;, function() {\r\n        return function(name) {\r\n          return &#39;Good bye, &#39; + name + &#39;!&#39;;\r\n        }\r\n      });\r\n\r\nThe thing is that in order to make this work correctly without RequireJS, you have to make sure that the &quot;first&quot; AngularJS module is loaded on the page before you create the &quot;second&quot; AngularJS module. Quoting documentation:\r\n\r\n&gt; Depending on a module implies that required module needs to be loaded\r\n&gt; before the requiring module is loaded.\r\n\r\nIn that sense, here is where RequireJS can help you as RequireJS provides a clean way to inject scripts to the page helping you organize script dependencies between each other.\r\n\r\nGoing back to the &quot;first&quot; and &quot;second&quot; AngularJS modules, here is how you can do it using RequireJS separating the modules on different files to leverage script dependencies loading:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // firstModule.js file\r\n    define([&#39;angular&#39;], function(angular) {\r\n      angular\r\n        .module(&#39;first&#39;, [])\r\n        .filter(&#39;greet&#39;, function() {\r\n          return function(name) {\r\n            return &#39;Hello, &#39; + name + &#39;!&#39;;\r\n          }\r\n        });\r\n    });\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // secondModule.js file\r\n    define([&#39;angular&#39;, &#39;firstModule&#39;], function(angular) {\r\n      angular\r\n        .module(&#39;second&#39;, [&#39;first&#39;])\r\n        .filter(&#39;goodbye&#39;, function() {\r\n          return function(name) {\r\n            return &#39;Good bye, &#39; + name + &#39;!&#39;;\r\n          }\r\n        });\r\n    });\r\n\r\nYou can see that we are depending on &quot;firstModule&quot; file to be injected before the content of the RequireJS callback can be executed which needs &quot;first&quot; AngularJS module to be loaded to create &quot;second&quot; AngularJS module.\r\n\r\nSide note: Injecting &quot;angular&quot; on the &quot;firstModule&quot; and &quot;secondModule&quot; files as dependency is required in order to use AngularJS inside the RequireJS callback function and it have to be configured on RequireJS config to map &quot;angular&quot; to the library code. You may have AngularJS loaded to the page in a traditional manner too (script tag) although defeats RequireJS benefits. \r\n\r\nMore details on having RequireJS support from AngularJS core from 2.0 version on my blog post.\r\n\r\n**Based on my blog post *&quot;Making sense of RequireJS with AngularJS&quot;*, here is the [link][1].**\r\n\r\n\r\n  [1]: http://leog.me/log/making-sense-of-requirejs-with-angularjs/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1390323280,
          "answer_id": 21264338,
          "path": "stack.gulp.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1390323280,
          "body_markdown": "Short answer is, it make sense. Recently this was discussed in ng-conf 2014. Here is the talk on this topic:\r\n\r\nhttp://www.youtube.com/watch?v=4yulGISBF8w\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1393438334,
          "answer_id": 22049734,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1408986630,
          "last_edit_date": 1408986630,
          "body_markdown": "Here is the approach I use: http://thaiat.github.io/blog/2014/02/26/angularjs-and-requirejs-for-very-large-applications/\r\n\r\nThe page shows a possible implementation of AngularJS + RequireJS, where the code is split by features and then component type."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1404094644,
          "answer_id": 24482161,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1484000572,
          "last_edit_date": 1484000572,
          "body_markdown": "Answer from Brian Ford\r\n\r\nAngularJS has it&#39;s own module system an typically doesn&#39;t need something like RJS.\r\n\r\nReference: https://github.com/yeoman/generator-angular/issues/40"
        }
      ],
      "creation_date": 1348224578,
      "body_markdown": "I&#39;m a newbie to Angular.js and trying to understand how it&#39;s different from Backbone.js... We used to manage our packages dependencies with Require.js while using Backbone. Does it make sense to do the same with Angular.js?",
      "title": "Does it make sense to use Require.js with Angular.js?",
      "view_count": 152584,
      "up_vote_count": 439,
      "answer_count": 14,
      "link": "https://stackoverflow.com/questions/12529083/does-it-make-sense-to-use-require-js-with-angular-js",
      "code_snippet": [
        "<code>angular.js</code>",
        "<code>require.js</code>",
        "<code>require.js</code>",
        "<code>both angular.js and require.js</code>",
        "<code>var app = angular.module(\"myApp\");\n</code>",
        "<code>app.directive(...);\n\napp.controller(...);\n\napp.service(...);\n</code>",
        "<code>var app = angular.module(\"myApp\",[\"Directives\",\"Controllers\",\"Services\"];\n</code>",
        "<code>angular\n  .module('first', [])\n  .filter('greet', function() {\n    return function(name) {\n      return 'Hello, ' + name + '!';\n    }\n  });\n</code>",
        "<code>angular\n  .module('second', ['first'])\n  .filter('goodbye', function() {\n    return function(name) {\n      return 'Good bye, ' + name + '!';\n    }\n  });\n</code>",
        "<code>// firstModule.js file\ndefine(['angular'], function(angular) {\n  angular\n    .module('first', [])\n    .filter('greet', function() {\n      return function(name) {\n        return 'Hello, ' + name + '!';\n      }\n    });\n});\n</code>",
        "<code>// secondModule.js file\ndefine(['angular', 'firstModule'], function(angular) {\n  angular\n    .module('second', ['first'])\n    .filter('goodbye', function() {\n      return function(name) {\n        return 'Good bye, ' + name + '!';\n      }\n    });\n});\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "gruntjs",
        "npm",
        "gulp",
        "bower",
        "webpack"
      ],
      "creation_date": 1453987719,
      "body_markdown": "I&#39;m trying to summarize my knowledge about the most popular JavaScript package managers, bundlers, and task runners. Please correct me if I&#39;m wrong:\r\n\r\n - `npm` &amp; `bower` are package managers. They just download the dependencies and don&#39;t know how to build projects on their own. What they know is to call `webpack`/`gulp`/`grunt` after fetching all the dependencies.\r\n - `bower` is like `npm`, but builds flattened dependencies trees (unlike `npm` which do it recursively). Meaning `npm` fetches the dependencies for each dependency (may fetch the same a few times), while `bower` expects you to manually include sub-dependencies. Sometimes `bower` and `npm` are used together for front-end and back-end respectively (since each megabyte might matter on front-end).\r\n - `grunt` and `gulp` are task runners to automate everything that can be automated (i.e. compile CSS/Sass, optimize images, make a bundle and minify/transpile it).\r\n - `grunt` vs. `gulp` (is like `maven` vs. `gradle` or configuration vs. code). Grunt is based on configuring separate independent tasks, each task opens/handles/closes file. Gulp requires less amount of code and is based on Node streams, which allows it to build pipe chains (w/o reopening the same file) and makes it faster. \r\n - `webpack` (`webpack-dev-server`) - for me it&#39;s a task runner with hot reloading of changes which allows you to forget about all JS/CSS watchers. \r\n - `npm`/`bower` + plugins may replace task runners. Their abilities often intersect so there are different implications if you need to use `gulp`/`grunt` over `npm` + plugins. But task runners are definitely better for complex tasks (e.g. &quot;on each build create bundle, transpile from ES6 to ES5, run it at all browsers emulators, make screenshots and deploy to dropbox through ftp&quot;).\r\n - `browserify` allows packaging node modules for browsers. `browserify` vs `node`&#39;s `require` is actually [AMD vs CommonJS][1].\r\n\r\n***Questions:***\r\n \r\n 1. *What is `webpack` &amp; `webpack-dev-server`?* Official documentation says it&#39;s a module bundler but for me it&#39;s just a task runner. *What&#39;s the difference?*\r\n 2. *Where would you use `browserify`? Can&#39;t we do the same with node/ES6 imports?* \r\n 3. *When would you use `gulp`/`grunt` over `npm` + plugins?*\r\n 4. *Please provide examples when you need to use a combination*\r\n\r\n\r\n  [1]: https://addyosmani.com/writing-modular-js/",
      "last_edit_date": 1488991619,
      "up_vote_count": 1343,
      "link": "https://stackoverflow.com/questions/35062852/npm-vs-bower-vs-browserify-vs-gulp-vs-grunt-vs-webpack",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1453991688,
          "answer_id": 35064297,
          "path": "stack.gulp.answer",
          "score": 711,
          "up_vote_count": 717,
          "is_accepted": true,
          "last_activity_date": 1511274278,
          "last_edit_date": 1511274278,
          "body_markdown": "Webpack and Browserify do pretty much the same job, which is bundling your modules to be used in a browser environment (though you can target other environments, like bundling your server-side ES6 code for Node). For example, the Node module is a feature, which doesn&#39;t exist in the browser, and ES 6 modules are not implemented in any browser yet, which is why things need to be bundled. However, they differ in many ways, Webpack offers many tools by default (e.g. code splitting), while Browserify can do this only after downloading plugins but using both leads to very similar results. It comes down to personal preference (I am used to Webpack). Webpack is not a task runner, it is just processor of your files (it processes them by so-called loaders) run directly from CLI or by a task runner.\r\n\r\n`webpack-dev-server` provides something like Browser-sync - a server, where you can deploy your app and verify your FE developing progress immediately by dev-server automatically refreshing the browser or even propagating changes without it with hot deploy (e.g. React components).\r\n\r\nI&#39;ve been using Gulp for its conciseness and easy task writing, but have later found out I need neither Gulp nor Grunt at all. Everything I have ever needed could have been done using npm scripts to run 3rd-party tools through their API. Choosing between Gulp, Grunt or npm scripts depends on your taste, JS experience, and experience of developers working with you.\r\n\r\nWhile tasks in Gulp (or Grunt maybe) are easy to read even for people not so familiar with JS, it is yet another tool to require and learn, and I personally prefer to narrow my dependencies and make things simple. On the other hand, replacing these tasks with the combination of npm scripts and run files (where configuration and execution function of tools like Webpack lies) is more challenging. But in the majority of cases, those three are equal in terms of results.\r\n\r\nAs for the examples, I suggest you have a look at this [React starter project][1], which shows you a nice combination of npm scripts, Webpack and Browser-sync. You can find those npm scripts in package.json in the root folder, in a property named `scripts`. There you will mostly encounter commands like `babel-node tools/run start`. Babel-node is a CLI tool (not meant for production use), which at first compiles ES6 file `tools/run` (run.js file located in [tools][2]) - basically a runner utility. This runner takes a function as an argument and runs it, which in this case is `start` - another utility (start.js) responsible for bundling source files (both client and server), starting the node-express server and subsequently Browser-sync, which serves as a proxy for propagating development changes to the browser.\r\n\r\nSpeaking more precisely, start.js imports Webpack config for the client manipulates it to add hot module replacement capabilities, then creates both client and server side bundles, starts node server through yet another utility named runServer.js and after successful start inits Browser-sync, which looks something like this.\r\n\r\n  \r\n\r\n    const bs = Browsersync.create();  \r\n    bs.init({\r\n          ...(DEBUG ? {} : { notify: false, ui: false }),\r\n    \r\n          proxy: {\r\n            target: host,\r\n            middleware: [wpMiddleware, ...hotMiddlewares],\r\n          },\r\n    \r\n          // no need to watch &#39;*.js&#39; here, webpack will take care of it for us,\r\n          // including full page reloads if HMR won&#39;t work\r\n          files: [&#39;build/content/**/*.*&#39;],\r\n    }, resolve)\r\n\r\nThe important part is `proxy.target`, where you set server address you want to proxy, which could be http://localhost:3000, and Browser-sync starts a server listening on http://localhost:3001, where the same app is deployed, but with hot module replacement, so you can experience propagation of source file changes to the browser immediately with or even without reloading. As you can see, there is another configuration property `files` with individual files or patterns Browser-sync watches for changes and reloads the browser if some occur, but as the comment says, Webpack takes care of watching js sources by itself with HMR, so they cooperate there.\r\n\r\nNow I don&#39;t have any equivalent example of such Grunt or Gulp configuration, but with Gulp (and somewhat similarly with Grunt) you would write individual tasks in gulpfile.js like\r\n\r\n    gulp.task(&#39;bundle&#39;, function() {\r\n      // bundling source files with some gulp plugins like gulp-webpack maybe\r\n    });\r\n    \r\n    gulp.task(&#39;start&#39;, function() {\r\n      // starting server and stuff\r\n    });\r\n\r\nwhere you would be doing essentially pretty much the same things as in the starter-kit, this time with task runner, which solves some problems for you, but presents its own issues and some difficulties during learning the usage, and as I say, the more dependencies you have, the more can go wrong. And that is the reason I like to get rid of such tools.\r\n\r\n\r\n  [1]: https://github.com/kriasoft/react-starter-kit\r\n  [2]: https://github.com/kriasoft/react-starter-kit/tree/master/tools"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1460649181,
          "answer_id": 36628118,
          "path": "stack.gulp.answer",
          "score": 37,
          "up_vote_count": 39,
          "is_accepted": false,
          "last_activity_date": 1460649181,
          "body_markdown": "A small note about npm: npm3 tries install dependencies in a flat way\r\n\r\nhttps://docs.npmjs.com/how-npm-works/npm3#npm-v3-dependency-resolution\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1462093466,
          "answer_id": 36964916,
          "path": "stack.gulp.answer",
          "score": 39,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1462093466,
          "body_markdown": "You can find some technical comparison on [npmcompare][1]\r\n\r\n[Comparing browserify vs. grunt vs. gulp vs. webpack][2]\r\n\r\nAs you can see webpack is very well maintained with a new version coming out every 4 days on average.\r\nBut Gulp seems to have the biggest community of them all (with over 20K stars on Github)\r\nGrunt seems a bit neglected (compared to the others)\r\n\r\nSo if need to choose one over the other i would go with Gulp\r\n\r\n\r\n  [1]: https://npmcompare.com\r\n  [2]: https://npmcompare.com/compare/browserify,grunt,gulp,webpack"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1475475824,
          "answer_id": 39825582,
          "path": "stack.gulp.answer",
          "score": 500,
          "up_vote_count": 502,
          "is_accepted": false,
          "last_activity_date": 1513573316,
          "last_edit_date": 1513573316,
          "body_markdown": "I&#39;ve been also searching for this quite some time since there is a lot of tools out there and each of them benefits us in a different aspect. The community is divided across tools like `Browserify, Webpack, jspm, Grunt and Gulp`. You might also hear about `Yeoman or Slush`. That’s not really a problem, it’s just confusing for everyone trying to understand a clear path forward.\r\n\r\nAnyway, I would like to contribute something.\r\n\r\n**1. Package Manager** \r\n\r\nPackage managers simplify installing and updating project dependencies, which are libraries such as: `jQuery, Bootstrap`, etc - everything that is used on your site and isn&#39;t written by you.\r\n\r\nBrowsing all the library websites, downloading and unpacking the archives, copying files into the projects — all of this is replaced with a few commands in the terminal.\r\n\r\n- [`NPM`][1] stands for: `Node JS package manager` helps you to manage all the libraries your software relies on. You would define your needs in a file called `package.json` and run `npm install` in the command line... then BANG, your packages are downloaded and ready to use. Could be used both for `front-end and back-end` libraries.\r\n\r\n- [`Bower`][2]: for front-end package management, the concept is same with NPM. All your libraries are stored in a file named `bower.json` and then run `bower install` in the command line. \r\n\r\n&gt; The biggest difference between `Bower` and `NPM` is that NPM does nested\r\n&gt; dependency tree while Bower requires a flat dependency tree as below.\r\n&gt;\r\n Quoting from https://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm\r\n\r\n**[NPM][1]**\r\n\r\n    project root\r\n    [node_modules] // default directory for dependencies\r\n     -&gt; dependency A\r\n     -&gt; dependency B\r\n        [node_modules]\r\n        -&gt; dependency A\r\n    \r\n     -&gt; dependency C\r\n        [node_modules]\r\n        -&gt; dependency B\r\n          [node_modules]\r\n           -&gt; dependency A \r\n        -&gt; dependency D\r\n\r\n**[Bower][2]**\r\n\r\n    project root\r\n    [bower_components] // default directory for dependencies\r\n     -&gt; dependency A\r\n     -&gt; dependency B // needs A\r\n     -&gt; dependency C // needs B and D\r\n     -&gt; dependency D\r\n\r\n&gt; There are some updates on [`npm 3 Duplication and Deduplication`][3],\r\n&gt; please open the doc for more detail.\r\n\r\n- [`Yarn`][13]: A new package manager for `JavaScript` [published][4] by `Facebook` recently with some more advantages compared to `NPM`. And with Yarn, you still can use both [`NPM`][1]and [`Bower`][2] registry to fetch the package. If you&#39;ve installed a package before, `yarn` creates a cached copy which facilitates `offline package installs`.\r\n\r\n- [`jspm`][5]: is a package manager for the `SystemJS` universal module loader, built on top of the dynamic `ES6` module loader. It is not an entirely new package manager with its own set of rules, rather it works on top of existing package sources. Out of the box, it works with `GitHub` and `npm`. As most of the `Bower` based packages are based on `GitHub`, we can install the those packages using `jspm` as well. It has a registry that lists most of the commonly used front-end packages for easier installation.\r\n\r\n&gt; See the different between [`Bower`][2] and `jspm`:\r\n&gt; https://stackoverflow.com/questions/25416813/package-manager-bower-vs-jspm\r\n\r\n---\r\n\r\n**2. Module Loader/Bundling**\r\n\r\nMost projects of any scale will have their code split between a number of files. You can just include each file with an individual `&lt;script&gt;` tag, however, `&lt;script&gt;` establishes a new http connection, and for small files – which is a goal of modularity – the time to set up the connection can take significantly longer than transferring the data. While the scripts are downloading, no content can be changed on the page.\r\n\r\n- The problem of download time can largely be solved by concatenating a group of simple modules into a single file, and minifying it.\r\n\r\nE.g\r\n\r\n    &lt;head&gt;\r\n        &lt;title&gt;Wagon&lt;/title&gt;\r\n        &lt;script src=“build/wagon-bundle.js”&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n\r\n- The performance comes at the expense of the flexibility though. If your modules have inter-dependency, this lack of flexibility may be a showstopper.\r\n\r\nE.g\r\n\r\n    &lt;head&gt;\r\n    \t&lt;title&gt;Skateboard&lt;/title&gt;\r\n    \t&lt;script src=“connectors/axle.js”&gt;&lt;/script&gt;\r\n    \t&lt;script src=“frames/board.js”&gt;&lt;/script&gt;\r\n    \t&lt;!-- skateboard-wheel and ball-bearing both depend on abstract-rolling-thing --&gt;\r\n    \t&lt;script src=“rolling-things/abstract-rolling-thing.js”&gt;&lt;/script&gt;\r\n    \t&lt;script src=“rolling-things/wheels/skateboard-wheel.js”&gt;&lt;/script&gt;\r\n    \t&lt;!-- but if skateboard-wheel also depends on ball-bearing --&gt;\r\n    \t&lt;!-- then having this script tag here could cause a problem --&gt;\r\n    \t&lt;script src=“rolling-things/ball-bearing.js”&gt;&lt;/script&gt;\r\n    \t&lt;!-- connect wheels to axle and axle to frame --&gt;\r\n    \t&lt;script src=“vehicles/skateboard/our-sk8bd-init.js”&gt;&lt;/script&gt;\r\n    &lt;/head&gt;\r\n\r\nComputers can do that better than you can, and that is why you should use a tool to automatically bundle everything into a single file.\r\n\r\n**Then we heard about `RequireJS`, `Browserify`, `Webpack` and `SystemJS`**\r\n\r\n- [`RequireJS`][12]: is a `JavaScript` file and module loader. It is optimized for in-browser use, but it can be used in other JavaScript environments, like `Node`.\r\n\r\nE.g: **myModule.js**\r\n\r\n    // package/lib is a dependency we require\r\n    define([&quot;package/lib&quot;], function (lib) {\r\n    \r\n        // behavior for our module\r\n        function foo() {\r\n            lib.log( &quot;hello world!&quot; );\r\n        }\r\n    \r\n        // export (expose) foo to other modules as foobar\r\n        return {\r\n            foobar: foo\r\n        }\r\n    });\r\n\r\n\r\nIn `main.js`, we can import `myModule.js` as dependency and use it.\r\n\r\n    require([&quot;package/myModule&quot;], function(myModule) {\r\n        myModule.foobar();\r\n    });\r\n\r\nAnd then in our `HTML`, we can refer to use with `RequireJS`.\r\n\r\n    &lt;script src=“app/require.js” data-main=“main.js” &gt;&lt;/script&gt;\r\n\r\n\r\n&gt; Read more about `CommonJS` and `AMD` to get understanding easily.\r\n&gt; https://stackoverflow.com/questions/16521471/relation-between-commonjs-amd-and-requirejs\r\n\r\n\r\n- [`Browserify`][7]: set out to allow use of `CommonJS` formatted modules in the browser. Consequently, `Browserify` isn’t as much a module loader as a module bundler: `Browserify` is entirely a build-time tool, producing a bundle of code which can then be loaded client-side.\r\n\r\nStart with a build machine that has node &amp; npm installed, and get the package:\r\n\r\n    npm install -g –save-dev browserify\r\n\r\nWrite your modules in `CommonJS` format\r\n\r\n    //entry-point.js\r\n    var foo = require(&#39;../foo.js&#39;);\r\n    console.log(foo(4));\r\n\r\nAnd when happy, issue the command to bundle:\r\n\r\n    browserify entry-point.js -o bundle-name.js\r\n\r\nBrowserify recursively finds all dependencies of entry-point and assembles them into a single file:\r\n\r\n    &lt;script src=”bundle-name.js”&gt;&lt;/script&gt;\r\n\r\n- [`Webpack`][6]: It bundles all of your static assets, including `JavaScript`, images, CSS and more, into a single file. It also enables you to process the files through different types of loaders. You could write your `JavaScript` with `CommonJS` or `AMD` modules syntax. It attacks the build problem in a fundamentally more integrated and opinionated manner. In `Browserify` you use `Gulp/Grunt` and a long list of transforms and plugins to get the job done. `Webpack` offers enough power out of the box that you typically don’t need `Grunt` or `Gulp` at all.\r\n\r\nBasic usage is beyond simple. Install Webpack like Browserify:\r\n\r\n    npm install -g –save-dev webpack\r\n\r\nAnd pass the command an entry point and an output file:\r\n\r\n    webpack ./entry-point.js bundle-name.js\r\n\r\n- [`SystemJS`][8]: is a module loader that **can import modules at run time in any of the popular formats** used today (`CommonJS, UMD, AMD, ES6`). It is built on top of the `ES6` module loader polyfill and is smart enough to detect the format being used and handle it appropriately. `SystemJS` can also transpile ES6 code (with `Babel` or `Traceur`) or other languages such as `TypeScript` and `CoffeeScript` using plugins. \r\n\r\n&gt; Want to know what is the `node module` and why it is not well adapted to in-browser.\r\n  \r\n&gt; More useful article: \r\n&gt;\r\n&gt; - https://medium.com/@housecor/browserify-vs-webpack-b3d7ca08a0a9#.c1q7ao3h4\r\n&gt; - http://jamesknelson.com/which-build-system-should-i-use-for-my-javascript-app/\r\n&gt; - https://appendto.com/2016/06/the-short-history-of-javascript-module-loaders/\r\n\r\n----\r\n\r\n&gt; Why `jspm` and `SystemJS`?\r\n&gt;\r\n&gt; One of the main goals of `ES6` modularity is to make it really simple\r\n&gt; to install and use any Javascript library from anywhere on the\r\n&gt; Internet (`Github`, `npm`, etc.). Only two things are needed:\r\n&gt; \r\n&gt; - A single command to install the library\r\n&gt; - One single line of code to import the library and use it\r\n&gt; \r\n&gt; So with `jspm`, you can do it.\r\n&gt; \r\n&gt; 1. Install the library with a command: `jspm install jquery`\r\n&gt; 2. Import the library with a single line of code, no need to external reference inside you HTML file. \r\n&gt; \r\n&gt; **display.js**\r\n&gt; \r\n&gt;     var $ = require(&#39;jquery&#39;); \r\n&gt;     \r\n&gt;     $(&#39;body&#39;).append(&quot;I&#39;ve imported jQuery!&quot;);\r\n&gt; \r\n&gt; 3. Then you configure these things within `System.config({ ... })` before\r\n&gt; importing your module. Normally when run `jspm init`, there will be a file \r\n&gt; named `config.js` for this purpose.\r\n&gt; \r\n&gt; 4. To make these scripts run, we need to load `system.js` and `config.js` on the HTML page. After that we will load the `display.js` file using\r\n&gt; the `SystemJS` module loader. \r\n&gt; \r\n&gt; **index.html**\r\n&gt;\r\n&gt;     &lt;script src=&quot;jspm_packages/system.js&quot;&gt;&lt;/script&gt;\r\n&gt;     &lt;script src=&quot;config.js&quot;&gt;&lt;/script&gt;\r\n&gt;     &lt;script&gt;\r\n&gt;       System.import(&quot;scripts/display.js&quot;);\r\n&gt;     &lt;/script&gt;\r\n&gt; \r\n&gt; Noted: You can also use `npm` with `Webpack` as Angular 2 has applied it. Since `jspm` was developed to integrate with `SystemJS` and it works on top of existing `npm` source, so your answer is up to you.\r\n\r\n---\r\n\r\n**3. Task runner**\r\n\r\nTask runners and build tools are primarily command-line tools. Why we need to use them: In one word: **automation**. The less work you have to do when performing repetitive tasks like **minification, compilation, unit testing, linting** which previously cost us a lot of times to do with command line or even manually.\r\n\r\n- [`Grunt`][9]: You can create automation for your development environment to pre-process codes or create build scripts with a config file and it seems very difficult to handle a complex task. Popular in last few years. \r\n\r\nEvery task in `Grunt` is an array of different plugin configurations, that simply get executed one after another, in a strictly independent, and sequential fashion.\r\n\r\n    grunt.initConfig({\r\n      clean: {\r\n        src: [&#39;build/app.js&#39;, &#39;build/vendor.js&#39;]\r\n      },\r\n      \r\n      copy: {\r\n        files: [{\r\n          src: &#39;build/app.js&#39;,\r\n          dest: &#39;build/dist/app.js&#39;\r\n        }]\r\n      }\r\n      \r\n      concat: {\r\n        &#39;build/app.js&#39;: [&#39;build/vendors.js&#39;, &#39;build/app.js&#39;]\r\n      }\r\n      \r\n      // ... other task configurations ...\r\n      \r\n    });\r\n    \r\n    grunt.registerTask(&#39;build&#39;, [&#39;clean&#39;, &#39;bower&#39;, &#39;browserify&#39;, &#39;concat&#39;, &#39;copy&#39;]);\r\n\r\n\r\n- [`Gulp`][10]: Automation just like `Grunt` but instead of configurations, you can write `JavaScript` with streams like it&#39;s a node application. Prefer these days.\r\n\r\nThis is a `Gulp` sample task declaration.\r\n\r\n    //import the necessary gulp plugins\r\n    var gulp = require(&#39;gulp&#39;);\r\n    var sass = require(&#39;gulp-sass&#39;);\r\n    var minifyCss = require(&#39;gulp-minify-css&#39;);\r\n    var rename = require(&#39;gulp-rename&#39;);\r\n    \r\n    //declare the task\r\n    gulp.task(&#39;sass&#39;, function(done) {\r\n      gulp.src(&#39;./scss/ionic.app.scss&#39;)\r\n        .pipe(sass())\r\n        .pipe(gulp.dest(&#39;./www/css/&#39;))\r\n        .pipe(minifyCss({\r\n          keepSpecialComments: 0\r\n        }))\r\n        .pipe(rename({ extname: &#39;.min.css&#39; }))\r\n        .pipe(gulp.dest(&#39;./www/css/&#39;))\r\n        .on(&#39;end&#39;, done);\r\n    });\r\n\r\n&gt; \r\n&gt; See more: https://medium.com/@preslavrachev/gulp-vs-grunt-why-one-why-the-other-f5d3b398edc4#.fte0nahri\r\n\r\n---\r\n\r\n**4. Scaffolding tools**\r\n\r\n- `Slush and Yeoman`: You can create starter projects with them. For example, you are planning to build a prototype with HTML and SCSS, then instead of manually create some folder like scss, css, img, fonts. You can just install `yeoman` and run a simple script. Then everything here for you. \r\n\r\nFind more [here][11]. \r\n\r\n\r\n    npm install -g yo\r\n    npm install --global generator-h5bp\r\n    yo h5bp\r\n\r\n\r\n&gt; See more: https://www.quora.com/What-are-the-differences-between-NPM-Bower-Grunt-Gulp-Webpack-Browserify-Slush-Yeoman-and-Express\r\n\r\n---\r\nMy answer is not really matched with the content of the question but when I&#39;m searching for these knowledge on Google, I always see the question on top so that I decided to answer it in summary as well as why we need to use those tool. \r\n\r\nRecently I found a really comprehensive guide from Grab team about how to approach front-end development in 2017. You can check it out as below.\r\n\r\nhttps://github.com/grab/front-end-guide\r\n\r\n\r\n  [1]: https://www.npmjs.com/\r\n  [2]: https://bower.io/\r\n  [3]: https://docs.npmjs.com/how-npm-works/npm3-dupe\r\n  [4]: https://code.facebook.com/posts/1840075619545360\r\n  [5]: http://jspm.io/\r\n  [6]: https://webpack.github.io/\r\n  [7]: http://browserify.org/\r\n  [8]: https://github.com/systemjs/systemjs\r\n  [9]: http://gruntjs.com/\r\n  [10]: http://gulpjs.com/\r\n  [11]: http://yeoman.io/\r\n  [12]: http://requirejs.org/\r\n  [13]: https://yarnpkg.com/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1476460724,
          "answer_id": 40047448,
          "path": "stack.gulp.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1476713923,
          "last_edit_date": 1476713923,
          "body_markdown": "Yarn is a recent package manager that probably deserves to be mentioned. So, there : https://yarnpkg.com/\r\n\r\nAfaik, it can fetch both npm and bower dependencies and has other appreciated features."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1479777809,
          "answer_id": 40732339,
          "path": "stack.gulp.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1489763685,
          "last_edit_date": 1489763685,
          "body_markdown": "&gt;What is webpack &amp; webpack-dev-server? Official documentation says it&#39;s a module bundler but for me it&#39;s just a task runner. What&#39;s the difference?\r\n\r\n[webpack-dev-server][1] is a live reloading web server that *Webpack* developers use to get immediate feedback what they do. It should only be used during development.\r\n\r\nThis project is heavily inspired by the [nof5][] unit test tool. \r\n\r\n*Webpack* as the name implies will create a *SINGLE* **pack**age for the **web**. The package will be minimized, and combined into a single file (we still live in HTTP 1.1 age). *Webpack* does the magic of combining the resources (JavaScript, CSS, images) and injecting them like this: `&lt;script src=&quot;assets/bundle.js&quot;&gt;&lt;/script&gt;`.\r\n\r\nIt can also be called *module bundler* because it must understand module dependencies, and how to grab the dependencies and to bundle them together.\r\n\r\n&gt;Where would you use browserify? Can&#39;t we do the same with node/ES6 imports?\r\n\r\nYou could use *Browserify* on the exact same tasks where you would use *Webpack*. – *Webpack* is more compact, though.\r\n\r\nNote that the [ES6 module loader features][3] in *Webpack2* are using *System.import*, which not a single browser supports natively.\r\n \r\n&gt;When would you use gulp/grunt over npm + plugins?\r\n\r\nYou can [forget][5] *Gulp, Grunt, Brokoli, Brunch and Bower*. Directly use npm command line scripts instead and you can eliminate extra packages like these here for *Gulp*:\r\n\r\n    var gulp        = require(&#39;gulp&#39;),\r\n      minifyCSS     = require(&#39;gulp-minify-css&#39;),\r\n      sass          = require(&#39;gulp-sass&#39;),\r\n      browserify    = require(&#39;gulp-browserify&#39;),\r\n      uglify        = require(&#39;gulp-uglify&#39;),\r\n      rename        = require(&#39;gulp-rename&#39;),\r\n      jshint        = require(&#39;gulp-jshint&#39;),\r\n      jshintStyle   = require(&#39;jshint-stylish&#39;),\r\n      replace       = require(&#39;gulp-replace&#39;),\r\n      notify        = require(&#39;gulp-notify&#39;),\r\n\r\nYou can probably use *Gulp* and *Grunt* config file generators when creating config files for your project. This way you don&#39;t need to install *Yeoman* or similar tools.\r\n\r\n\r\n  [1]: https://github.com/webpack/webpack-dev-server\r\n  [3]: https://gist.github.com/sokra/27b24881210b56bbaff7\r\n  [5]: https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/\r\n  [nof5]: https://github.com/peerigon/nof5\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1495338226,
          "answer_id": 44092960,
          "path": "stack.gulp.answer",
          "score": 31,
          "up_vote_count": 32,
          "is_accepted": false,
          "last_activity_date": 1518739871,
          "last_edit_date": 1518739871,
          "body_markdown": "**OK,** they all have got some similarities, they do the same things for you in different and similar ways, I divide them in **3 main groups** as below:\r\n&lt;hr&gt;\r\n**1) Module bundlers** \r\n\r\nwebpack and browserify as popular ones, work like task runners but with more flexibility, aslo it will bundle everything together as your setting, so you can point to the result as bundle.js for example in one single file including the CSS and Javascript, for more details of each, look at the details below:\r\n\r\n **webpack**\r\n\r\n&gt; webpack is a module bundler for modern JavaScript applications. When\r\n&gt; webpack processes your application, it recursively builds a dependency\r\n&gt; graph that includes every module your application needs, then packages\r\n&gt; all of those modules into a small number of bundles - often only one -\r\n&gt; to be loaded by the browser.\r\n&gt; \r\n&gt; It is incredibly configurable, but to get started you only need to\r\n&gt; understand Four Core Concepts: entry, output, loaders, and plugins.\r\n&gt; \r\n&gt; This document is intended to give a high-level overview of these\r\n&gt; concepts, while providing links to detailed concept specific\r\n&gt; use-cases.\r\n\r\n more [here][1]\r\n\r\n**browserify**\r\n\r\n&gt; Browserify is a development tool that allows us to write node.js-style\r\n&gt; modules that compile for use in the browser. Just like node, we write\r\n&gt; our modules in separate files, exporting external methods and\r\n&gt; properties using the module.exports and exports variables. We can even\r\n&gt; require other modules using the require function, and if we omit the\r\n&gt; relative path it’ll resolve to the module in the node_modules\r\n&gt; directory.\r\n\r\n more [here][2]\r\n\r\n&lt;hr&gt;\r\n\r\n**2) Task runners** \r\n\r\ngulp and grunt are task runners, basically what they do, creating tasks and run them whenever you want, for example you install a plugin to minify your CSS and then run it each time to do minifying, more details about each: \r\n\r\n**gulp**\r\n\r\n&gt; gulp.js is an open-source JavaScript toolkit by Fractal Innovations\r\n&gt; and the open source community at GitHub, used as a streaming build\r\n&gt; system in front-end web development. It is a task runner built on\r\n&gt; Node.js and Node Package Manager (npm), used for automation of\r\n&gt; time-consuming and repetitive tasks involved in web development like\r\n&gt; minification, concatenation, cache busting, unit testing, linting,\r\n&gt; optimization etc. gulp uses a code-over-configuration approach to\r\n&gt; define its tasks and relies on its small, single-purposed plugins to\r\n&gt; carry them out. gulp ecosystem has 1000+ such plugins made available\r\n&gt; to choose from.\r\n\r\n more [here][3]\r\n\r\n**grunt**\r\n\r\n&gt; Grunt is a JavaScript task runner, a tool used to automatically\r\n&gt; perform frequently used tasks such as minification, compilation, unit\r\n&gt; testing, linting, etc. It uses a command-line interface to run custom\r\n&gt; tasks defined in a file (known as a Gruntfile). Grunt was created by\r\n&gt; Ben Alman and is written in Node.js. It is distributed via npm.\r\n&gt; Presently, there are more than five thousand plugins available in the\r\n&gt; Grunt ecosystem.\r\n\r\n more [here][4]\r\n\r\n\r\n&lt;hr&gt;\r\n\r\n**3) Package managers** \r\n\r\npackage managers, what they do is managing plugins you need in your application and install them for you through github etc using package.json, very handy to update you modules, install them and sharing your app across, more details for each:\r\n\r\n**npm**\r\n\r\n&gt; npm is a package manager for the JavaScript programming language. It\r\n&gt; is the default package manager for the JavaScript runtime environment\r\n&gt; Node.js. It consists of a command line client, also called npm, and an\r\n&gt; online database of public packages, called the npm registry. The\r\n&gt; registry is accessed via the client, and the available packages can be\r\n&gt; browsed and searched via the npm website.\r\n\r\n more [here][5]\r\n\r\n**bower**\r\n\r\n&gt; Bower can manage components that contain HTML, CSS, JavaScript, fonts\r\n&gt; or even image files. Bower doesn’t concatenate or minify code or do\r\n&gt; anything else - it just installs the right versions of the packages\r\n&gt; you need and their dependencies.\r\n&gt; To get started, Bower works by fetching and installing packages from\r\n&gt; all over, taking care of hunting, finding, downloading, and saving the\r\n&gt; stuff you’re looking for. Bower keeps track of these packages in a\r\n&gt; manifest file, bower.json.\r\n\r\n more [here][6]\r\n\r\n\r\nand the most recent package manager that shouldn&#39;t be missed, it&#39;s young and fast in real work environment compare to npm which I was mostly using before, for reinstalling modules, it do double checks the node_modules folder to check the existence of the module, also seems installing the modules takes less time:\r\n\r\n**yarn**\r\n\r\n&gt; Yarn is a package manager for your code. It allows you to use and\r\n&gt; share code with other developers from around the world. Yarn does this\r\n&gt; quickly, securely, and reliably so you don’t ever have to worry.\r\n&gt; \r\n&gt; Yarn allows you to use other developers’ solutions to different\r\n&gt; problems, making it easier for you to develop your software. If you\r\n&gt; have problems, you can report issues or contribute back, and when the\r\n&gt; problem is fixed, you can use Yarn to keep it all up to date.\r\n&gt; \r\n&gt; Code is shared through something called a package (sometimes referred\r\n&gt; to as a module). A package contains all the code being shared as well\r\n&gt; as a package.json file which describes the package.\r\n\r\nmore [here][7]\r\n\r\n&lt;hr&gt;\r\n\r\n\r\n  [1]: https://webpack.js.org/concepts/\r\n  [2]: http://blakeembrey.com/articles/2013/09/introduction-to-browserify/\r\n  [3]: https://en.wikipedia.org/wiki/Gulp.js\r\n  [4]: https://en.wikipedia.org/wiki/Grunt_(software)\r\n  [5]: https://www.npmjs.com/\r\n  [6]: https://bower.io/\r\n  [7]: https://yarnpkg.com/lang/en/docs/getting-started/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1496154683,
          "answer_id": 44265109,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1496154683,
          "body_markdown": "StackShare provides a side-by-side (or **stack up**) of three tools at one time. \r\n\r\nHere it is for [npm vs. Bower vs. Browserify][1] and for [gulp vs. Webpack vs. Grunt][2]\r\n\r\nOn these comparison pages you can find the following:\r\n\r\n - number of votes each has received from the StackShare community\r\n - which companies use them in their tech stack\r\n - interest level for each over time\r\n - pros for each tool\r\n\r\n  [1]: https://stackshare.io/stackups/bower-vs-browserify-vs-npm\r\n  [2]: https://stackshare.io/stackups/grunt-vs-gulp-vs-webpack"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1502703783,
          "answer_id": 45671697,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1502703783,
          "body_markdown": "`Webpack` is a bundler. Like `Browserfy` it looks in the codebase for module requests (`require` or `import`) and resolves them recursively. What is more, you can configure `Webpack` to resolve not just JavaScript-like modules, but CSS, images, HTML, literally everything. What especially makes me excited about `Webpack`, you can combine both compiled and dynamically loaded modules in the same app. Thus one get a real performance boost, especially over HTTP/1.x. How exactly you you do it I described with examples here http://dsheiko.com/weblog/state-of-javascript-modules-2017/\r\nAs an alternative for bundler one can think of `Rollup.js` (https://rollupjs.org/), which optimizes the code during compilation, but stripping all the found unused chunks. \r\n\r\nFor `AMD`, instead of `RequireJS` one can go with native `ES2016 module system`, but loaded with `System.js` (https://github.com/systemjs/systemjs)\r\n\r\nBesides, I would point that `npm` is often used as an automating tool like `grunt` or `gulp`. Check out https://docs.npmjs.com/misc/scripts. I personally  go now with npm scripts only avoiding other automation tools, though in past I was very much into `grunt`. With other tools you have to rely on countless plugins for packages, that often are not good written and not being actively maintained. `npm` knows its packages, so you call to any of locally installed packages by name like:\r\n\r\n    {\r\n      &quot;scripts&quot;: {\r\n        &quot;start&quot;: &quot;npm http-server&quot;\r\n      },\r\n      &quot;devDependencies&quot;: {\r\n        &quot;http-server&quot;: &quot;^0.10.0&quot;\r\n      }\r\n    }\r\n\r\nActually you as a rule do not need any plugin if the package supports CLI. "
        }
      ],
      "title": "NPM vs. Bower vs. Browserify vs. Gulp vs. Grunt vs. Webpack",
      "view_count": 207665,
      "answer_count": 9,
      "code_snippet": [
        "<code>npm</code>",
        "<code>bower</code>",
        "<code>webpack</code>",
        "<code>gulp</code>",
        "<code>grunt</code>",
        "<code>bower</code>",
        "<code>npm</code>",
        "<code>npm</code>",
        "<code>npm</code>",
        "<code>bower</code>",
        "<code>bower</code>",
        "<code>npm</code>",
        "<code>grunt</code>",
        "<code>gulp</code>",
        "<code>grunt</code>",
        "<code>gulp</code>",
        "<code>maven</code>",
        "<code>gradle</code>",
        "<code>webpack</code>",
        "<code>webpack-dev-server</code>",
        "<code>npm</code>",
        "<code>bower</code>",
        "<code>gulp</code>",
        "<code>grunt</code>",
        "<code>npm</code>",
        "<code>browserify</code>",
        "<code>browserify</code>",
        "<code>node</code>",
        "<code>require</code>",
        "<code>webpack</code>",
        "<code>webpack-dev-server</code>",
        "<code>browserify</code>",
        "<code>gulp</code>",
        "<code>grunt</code>",
        "<code>npm</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "angularjs"
      ],
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1376734230,
          "answer_id": 18287586,
          "path": "stack.bower.answer",
          "score": 622,
          "up_vote_count": 624,
          "is_accepted": true,
          "last_activity_date": 1376734230,
          "body_markdown": "The problem was caused by missing inclusion of ngRoute module. Since version 1.1.6 it&#39;s a separate part:\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.0rc1/angular-route.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n    var app = angular.module(&#39;myapp&#39;, [&#39;ngRoute&#39;]);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1392989029,
          "answer_id": 21935678,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1392989029,
          "body_markdown": "Besides below answer, if you have this error in console (`[$injector:nomod]`, `MINERR_ASSET:22`), but everything seems to work fine, make sure that you **don&#39;t have** duplicate includes in your index.html. \r\n\r\nBecause this error can also be raised if you have duplicate includes of the files, that use this module, and are included before the file with actual module declaration."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1399691488,
          "answer_id": 23576698,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1399691488,
          "body_markdown": "If you have this error in console ``([$injector:nomod], MINERR_ASSET:22)``, make sure you are not including your application code before loading ``AngularJS``\r\n\r\nI was doing that and once I fixed the order, the error went away."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1414435120,
          "answer_id": 26594508,
          "path": "stack.bower.answer",
          "score": 37,
          "up_vote_count": 37,
          "is_accepted": false,
          "last_activity_date": 1446122217,
          "last_edit_date": 1446122217,
          "body_markdown": "One more thing to add to the list as this is the first result that comes up with a google search of &#39;Error: [$injector:modulerr] angular&#39;:\r\n\r\nIf you have a mismatch between your app name in your &#39;index&#39;html&#39; and in your main javascript app definition this can also generate this error.\r\n\r\nFor example if your HTML looks like this:\r\n\r\n        &lt;/head&gt;\r\n        &lt;body ng-app=&quot;myWebSite&quot;&gt;\r\n\r\n            &lt;!-- My Web Site --&gt;\r\n            &lt;p&gt;About my web site...&lt;/p&gt;\r\n\r\n    \t    etc ...\r\n\r\n\r\nAnd your JavaScript looks like this (i.e has a typo on app name - myWebCite instead of myWebSite):\r\n\r\n    /** Main AngularJS Web Application */ \r\n    var app = angular.module(&#39;myWebCite&#39;, [ &#39;ngRoute&#39; ]); \r\n\r\n    /** Configure the Routes */ \r\n    app.config([&#39;$routeProvider&#39;, function ($routeProvider) { \r\n      etc ...\r\n\r\n\r\nthen the &#39;Error:[$injector:modulerr] angular&#39; error will be generated also.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1416080629,
          "answer_id": 26949939,
          "path": "stack.bower.answer",
          "score": 40,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1416080629,
          "body_markdown": "my error disappeared by adding this &#39;()&#39; at the end\r\n\r\n    (function(){\r\n    \tvar home = angular.module(&#39;home&#39;,[]);\r\n    \r\n    \thome.controller(&#39;QuestionsController&#39;,function(){\r\n    \t\tconsole.log(&quot;controller initialized&quot;);\r\n    \t\tthis.addPoll = function(){\r\n    \t\t\tconsole.log(&quot;inside function&quot;);\r\n    \t\t};\r\n    \t});\r\n    })();"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1419770842,
          "answer_id": 27676496,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1453586048,
          "last_edit_date": 1453586048,
          "body_markdown": "For those using frameworks that compress, bundle, and minify files, make sure you define each dependency explicitly as these frameworks tend to rename your variables. That happened to me while using ASP.NET `BundleConfig.cs` to bundle my app scripts together.\r\n\r\n**Before**\r\n\r\n    app.config(function($routeProvider) {\r\n        $routeProvider.\r\n          when(&#39;/&#39;, {\r\n              templateUrl: &#39;list.html&#39;,\r\n              controller: &#39;ListController&#39;\r\n          }).\r\n          when(&#39;/items/:itemId&#39;, {\r\n              templateUrl: &#39;details.html&#39;,\r\n              controller: &#39;DetailsController&#39;\r\n          }).\r\n          otherwise({\r\n              redirectTo: &#39;/&#39;\r\n          });\r\n    });\r\n\r\n**After**\r\n\r\n    app.config([&quot;$routeProvider&quot;, function($routeProvider) {\r\n        $routeProvider.\r\n          when(&#39;/&#39;, {\r\n              templateUrl: &#39;list.html&#39;,\r\n              controller: &#39;ListController&#39;\r\n          }).\r\n          when(&#39;/items/:itemId&#39;, {\r\n              templateUrl: &#39;details.html&#39;,\r\n              controller: &#39;DetailsController&#39;\r\n          }).\r\n          otherwise({\r\n              redirectTo: &#39;/&#39;\r\n          });\r\n    }]);\r\n\r\n[Read more here][1] about Angular Dependency Annotation.\r\n\r\n\r\n  [1]: https://docs.angularjs.org/guide/di"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1421074630,
          "answer_id": 27904820,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1421074630,
          "body_markdown": "If you go through the official tutorial of angularjs https://docs.angularjs.org/tutorial/step_07\r\n\r\n&gt; Note: Starting with AngularJS version 1.2, ngRoute is in its own\r\n&gt; module and must be loaded by loading the additional angular-route.js\r\n&gt; file, which we download via Bower above.\r\n\r\nAlso please note from ngRoute api https://docs.angularjs.org/api/ngRoute\r\n\r\n&gt; **Installation** First include angular-route.js in your HTML:\r\n&gt; \r\n&gt; &lt;script src=&quot;angular.js&quot;&gt; &lt;script src=&quot;angular-route.js&quot;&gt; You can\r\n&gt; download this file from the following places:\r\n&gt; \r\n&gt; Google CDN e.g.\r\n&gt; //ajax.googleapis.com/ajax/libs/angularjs/X.Y.Z/angular-route.js Bower\r\n&gt; e.g. bower install angular-route@X.Y.Z code.angularjs.org e.g.\r\n&gt; &quot;//code.angularjs.org/X.Y.Z/angular-route.js&quot; where X.Y.Z is the\r\n&gt; AngularJS version you are running.\r\n&gt; \r\n&gt; Then load the module in your application by adding it as a dependent\r\n&gt; module:\r\n&gt; \r\n&gt; angular.module(&#39;app&#39;, [&#39;ngRoute&#39;]); With that you&#39;re ready to get\r\n&gt; started!\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1423073389,
          "answer_id": 28328373,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1423073389,
          "body_markdown": "My problem was in the config.xml. Changing:\r\n\r\n    &lt;access origin=&quot;*&quot; launch-external=&quot;yes&quot;/&gt;\r\n\r\nto\r\n\r\n    &lt;access origin=&quot;*&quot;/&gt;\r\n\r\nfixed it."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1427696991,
          "answer_id": 29339675,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1427696991,
          "body_markdown": "    add to link\r\n    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.0/angular-route.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n    var app = angular.module(&#39;apps&#39;, [ &#39;ngRoute&#39; ]); "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1437077762,
          "answer_id": 31463727,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1437077762,
          "body_markdown": "Another trigger for this error is leaving the &quot;.&quot; out before your &quot;otherwise&quot; or any other route in your route definition:\r\n\r\n      app.config([&#39;$routeProvider&#39;,\r\n         function($routeProvider) {\r\n            $routeProvider.\r\n               when(&#39;/view1&#39;, {\r\n                  templateUrl: &#39;partials/view1.html&#39;,\r\n                  controller: &#39;Ctrl1&#39;\r\n               }).\r\n               otherwise({\r\n                  redirectTo: &#39;/viewCounts&#39;\r\n               });\r\n         }]);\r\n\r\nMortified by a full-stop, yet again. Gotta love JS!"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439811876,
          "answer_id": 32049534,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1499171173,
          "last_edit_date": 1499171173,
          "body_markdown": "A noob error can be forgetting to include the module js \r\n\r\n\r\n    &lt;script src=&quot;app/modules/myModule.js&quot;&gt;&lt;/script&gt;\r\n files in the index.html at all"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458715603,
          "answer_id": 36171466,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1485074310,
          "last_edit_date": 1485074310,
          "body_markdown": "I had the same problem and tried all possible solution. But finally I came to know from the documentation that `ngRoute` module is now separated. Have a look to this [link](https://docs.angularjs.org/api/ngRoute)\r\n\r\n**Solution:**\r\nAdd the cdn **angular-route.js** after **angular.min.js** script\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-route.js&quot;&gt;&lt;/script&gt;\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1465149294,
          "answer_id": 37645021,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1465149294,
          "body_markdown": "I have just experienced the same error, in my case it was caused by the second parameter in `angular.module` being missing- hopefully this may help someone with the same issue.\r\n\r\n&lt;s&gt;`angular.module(&#39;MyApp&#39;);`&lt;/s&gt;\r\n\r\n`angular.module(&#39;MyApp&#39;, []);`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1487274781,
          "answer_id": 42283374,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1487274781,
          "body_markdown": "John Papa provided my issue on [this][1] rather obscure comment: Sometimes when you get that error, it means you are missing a file. **Other times it means the module was defined after it was used. One way to solve this easily is to name the module files *.module.js and load those first.**\r\n\r\n\r\n  [1]: https://github.com/johnpapa/ng-demos/issues/28"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1499412944,
          "answer_id": 44965111,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1499418541,
          "last_edit_date": 1499418541,
          "body_markdown": "Its an injector error. You may have use lots of JavaScript files so the injector may be missing. \r\n\r\nSome are here: \r\n\r\n    var app = angular.module(&#39;app&#39;, \r\n        [&#39;ngSanitize&#39;, &#39;ui.router&#39;, &#39;pascalprecht.translate&#39;, &#39;ngResource&#39;, \r\n         &#39;ngMaterial&#39;, &#39;angularMoment&#39;,&#39;md.data.table&#39;, &#39;angularFileUpload&#39;, \r\n         &#39;ngMessages&#39;, &#39;ui.utils.masks&#39;, &#39;angular-sortable-view&#39;,          \r\n         &#39;mdPickers&#39;,&#39;ngDraggable&#39;,&#39;as.sortable&#39;, &#39;ngAnimate&#39;, &#39;ngTouch&#39;]\r\n    );\r\n\r\nPlease check the injector you need to insert in your `app.js`"
        }
      ],
      "creation_date": 1376733416,
      "body_markdown": "When using angular 1.2 instead of 1.07 the following piece of code is not valid anymore, why?\r\n\r\n    &#39;use strict&#39;;\r\n\r\n    var app = angular.module(&#39;myapp&#39;, []);\r\n\r\n    app.config([&#39;$routeProvider&#39;, &#39;$locationProvider&#39;,\r\n        function($routeProvider, $locationProvider) {\r\n            $locationProvider.html5Mode(true);\r\n            $routeProvider.\r\n            when(&#39;/&#39;, {\r\n                templateUrl: &#39;part.html&#39;,\r\n                controller: &#39;MyCtrl&#39;\r\n            }).\r\n            otherwise({\r\n                redirectTo: &#39;/&#39;\r\n            });\r\n        }\r\n    ]);\r\n\r\nthe issue is in the injector configuration part (app.config):\r\n\r\n    Uncaught Error: [$injector:modulerr] http://errors.angularjs.org/1.2.0rc1/$injector/modulerr?p0=muninn&amp;p1=Error%…eapis.com%2Fajax%2Flibs%2Fangularjs%2F1.2.0rc1%2Fangular.min.js%3A31%3A252) \r\n\r\nIf I remember correctly this issue started with angular 1.1.6.",
      "title": "AngularJS 1.2 $injector:modulerr",
      "view_count": 404293,
      "up_vote_count": 419,
      "answer_count": 15,
      "link": "https://stackoverflow.com/questions/18287482/angularjs-1-2-injectormodulerr",
      "code_snippet": [
        "<code>'use strict';\n\nvar app = angular.module('myapp', []);\n\napp.config(['$routeProvider', '$locationProvider',\n    function($routeProvider, $locationProvider) {\n        $locationProvider.html5Mode(true);\n        $routeProvider.\n        when('/', {\n            templateUrl: 'part.html',\n            controller: 'MyCtrl'\n        }).\n        otherwise({\n            redirectTo: '/'\n        });\n    }\n]);\n</code>",
        "<code>Uncaught Error: [$injector:modulerr] http://errors.angularjs.org/1.2.0rc1/$injector/modulerr?p0=muninn&amp;p1=Error%…eapis.com%2Fajax%2Flibs%2Fangularjs%2F1.2.0rc1%2Fangular.min.js%3A31%3A252) \n</code>",
        "<code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.0rc1/angular-route.min.js\"&gt;&lt;/script&gt;\n\nvar app = angular.module('myapp', ['ngRoute']);\n</code>",
        "<code>\"Error: [$injector:nomod] Module 'ngRoute' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\"</code>",
        "<code>(function(){\n    var home = angular.module('home',[]);\n\n    home.controller('QuestionsController',function(){\n        console.log(\"controller initialized\");\n        this.addPoll = function(){\n            console.log(\"inside function\");\n        };\n    });\n})();\n</code>",
        "<code>    &lt;/head&gt;\n    &lt;body ng-app=\"myWebSite\"&gt;\n\n        &lt;!-- My Web Site --&gt;\n        &lt;p&gt;About my web site...&lt;/p&gt;\n\n        etc ...\n</code>",
        "<code>/** Main AngularJS Web Application */ \nvar app = angular.module('myWebCite', [ 'ngRoute' ]); \n\n/** Configure the Routes */ \napp.config(['$routeProvider', function ($routeProvider) { \n  etc ...\n</code>",
        "<code>&lt;script src=\"app/modules/myModule.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>BundleConfig.cs</code>",
        "<code>app.config(function($routeProvider) {\n    $routeProvider.\n      when('/', {\n          templateUrl: 'list.html',\n          controller: 'ListController'\n      }).\n      when('/items/:itemId', {\n          templateUrl: 'details.html',\n          controller: 'DetailsController'\n      }).\n      otherwise({\n          redirectTo: '/'\n      });\n});\n</code>",
        "<code>app.config([\"$routeProvider\", function($routeProvider) {\n    $routeProvider.\n      when('/', {\n          templateUrl: 'list.html',\n          controller: 'ListController'\n      }).\n      when('/items/:itemId', {\n          templateUrl: 'details.html',\n          controller: 'DetailsController'\n      }).\n      otherwise({\n          redirectTo: '/'\n      });\n}]);\n</code>",
        "<code>([$injector:nomod], MINERR_ASSET:22)</code>",
        "<code>AngularJS</code>",
        "<code>add to link\n&lt;script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.0/angular-route.min.js\"&gt;&lt;/script&gt;\n\nvar app = angular.module('apps', [ 'ngRoute' ]); \n</code>",
        "<code>angular.module</code>",
        "<code>angular.module('MyApp');</code>",
        "<code>angular.module('MyApp', []);</code>",
        "<code>ngRoute</code>",
        "<code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-route.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>  app.config(['$routeProvider',\n     function($routeProvider) {\n        $routeProvider.\n           when('/view1', {\n              templateUrl: 'partials/view1.html',\n              controller: 'Ctrl1'\n           }).\n           otherwise({\n              redirectTo: '/viewCounts'\n           });\n     }]);\n</code>",
        "<code>[$injector:nomod]</code>",
        "<code>MINERR_ASSET:22</code>",
        "<code>&lt;access origin=\"*\" launch-external=\"yes\"/&gt;\n</code>",
        "<code>&lt;access origin=\"*\"/&gt;\n</code>",
        "<code>var app = angular.module('app', \n    ['ngSanitize', 'ui.router', 'pascalprecht.translate', 'ngResource', \n     'ngMaterial', 'angularMoment','md.data.table', 'angularFileUpload', \n     'ngMessages', 'ui.utils.masks', 'angular-sortable-view',          \n     'mdPickers','ngDraggable','as.sortable', 'ngAnimate', 'ngTouch']\n);\n</code>",
        "<code>app.js</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "ruby",
        "rbenv"
      ],
      "creation_date": 1339108127,
      "body_markdown": "I installed rbenv according to the github directions. I am running OSX but I have tried this on a Ubuntu 12.04 VM and got the same results. The following is what i get in my terminal when I try to change ruby versions:\r\n\r\n    rbenv versions\r\n    * 1.9.3-p0 (set by /Users/user/.rbenv/version)\r\n    1.9.3-p125\r\n\r\n    rbenv global\r\n    1.9.3-p0\r\n\r\n    rbenv rehash\r\n\r\n    ruby -v\r\n    ruby 1.8.7 (2011-12-28 patchlevel 357) [universal-darwin11.0]\r\n\r\n    which ruby\r\n    /usr/bin/ruby\r\n\r\nAnyone have any ideas as to why rbenv isn&#39;t switching the ruby version like it thinks it is? Also there is no .rbenv file in the local directory that would be causing the ruby version to default to 1.8.7\r\n\r\n    rbenv local\r\n    rbenv: no local version configured for this directory\r\n\r\n\r\n\r\n\r\n ",
      "last_edit_date": 1455680482,
      "up_vote_count": 177,
      "link": "https://stackoverflow.com/questions/10940736/rbenv-not-changing-ruby-version",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1340310924,
          "answer_id": 11146317,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1340310924,
          "body_markdown": "Strangely, rbenv version did not set the .rbenv file\r\nCheck with:  ls -ltra --&gt; to see that a rbenv was written"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1343560625,
          "answer_id": 11708787,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1344142541,
          "last_edit_date": 1344142541,
          "body_markdown": "I came to the same problem.\r\nFixed this by run the &quot;rbenv global&quot; command with &quot;sudo&quot;.\r\nI think it was something permission problem.\r\n\r\nupdate:\r\nI finally found the solution.\r\nThere was one same file &quot;version&quot; on my mac,  which is under &quot;/usr/local/Cellar/rbenv/0.3.0/&quot;.\r\nI think it was created by mistake occasionally. you should remove it.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1345315659,
          "answer_id": 12021313,
          "path": "stack.gulp.answer",
          "score": 20,
          "up_vote_count": 20,
          "is_accepted": false,
          "last_activity_date": 1345315659,
          "body_markdown": "I just found this same problem. What I did was uninstall rbenv (via homebrew) and reinstall it. I also added \r\n\r\n    if which rbenv &gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi\r\n\r\ninto ~/.bash_profile when I reinstalled rbenv. Works perfectly now."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1346107221,
          "answer_id": 12150580,
          "path": "stack.gulp.answer",
          "score": 347,
          "up_vote_count": 347,
          "is_accepted": true,
          "last_activity_date": 1369110220,
          "last_edit_date": 1369110220,
          "body_markdown": "Check that PATH contains $HOME/.rbenv/shims and $HOME/.rbenv/bin\r\n\r\n    $ env | grep PATH\r\n\r\nAlso check that you have the following in your ~/.bash_profile if using bash or ~/.zshenv if using zsh\r\n\r\n    export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\n    eval &quot;$(rbenv init -)&quot;\r\n\r\nNOTE:\r\nMake sure it&#39;s the last setting in your ~/.bash_profile . I ran into an issue where I installed a program that updated my .bash_profile and reset PATH."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1351856819,
          "answer_id": 13194638,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1351856819,
          "body_markdown": "When I had these symptoms, the problem turned out to be that install had failed halfway through for the new Ruby version I was trying to switch to, without me noticing. The fix was to delete &amp; reinstall it.\r\n\r\n(This meant that even though ruby 1.9.3 showed up in the rbenv list of available versions, it didn&#39;t have an executable on the path where rbenv assumed it would. Since rbenv tries to change your ruby version just by prepending a location to your path, if there&#39;s nothing actually in the location it prepends, your OS will happily continue searching your default path and find your system version, in my case like the question&#39;s 1.8.7.)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1353481402,
          "answer_id": 13487991,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1353481402,
          "body_markdown": "You could try using [chruby](https://github.com/postmodern/chruby#readme)? chruby does not rely on shims, instead it only modifies `PATH`, `GEM_HOME`, `GEM_PATH`."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1366898256,
          "answer_id": 16216746,
          "path": "stack.gulp.answer",
          "score": 58,
          "up_vote_count": 58,
          "is_accepted": false,
          "last_activity_date": 1495596509,
          "last_edit_date": 1495596509,
          "body_markdown": "I fixed this by adding the following to my ~/.bash_profile:\r\n\r\n    #PATH for rbenv\r\n    export PATH=&quot;$HOME/.rbenv/shims:$PATH&quot;\r\n\r\nThis is what is documented at https://github.com/sstephenson/rbenv.\r\n\r\nFrom what I can tell there is no ~/.rbenv/bin directory, which was mentioned in the post by @rodowi."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1373931686,
          "answer_id": 17665743,
          "path": "stack.gulp.answer",
          "score": 73,
          "up_vote_count": 73,
          "is_accepted": false,
          "last_activity_date": 1373931686,
          "body_markdown": "This may be an old question, but Google led me here and, for posterity sake, thought I&#39;d share.\r\n\r\nMy problem persisted after many of the recommended solutions above. Like the OP, I installed rbenv and then a ruby version, but my laptop defaulted to system. What I had overlooked was that when I ran:\r\n\r\n    [~/.rbenv] $ rbenv versions\r\n    * system (set by /Users/alphadogg/.rbenv/version)\r\n      2.0.0-p247\r\n\r\nIOW, it was still defaulting to system. A quick\r\n\r\n    [~/.rbenv] $ rbenv local 2.0.0-p247\r\n\r\nswitched it to the new version.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1386983972,
          "answer_id": 20578623,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1386985355,
          "last_edit_date": 1386985355,
          "body_markdown": "This happened to me right after I reinstalled `rbenv`. Apparently I had a `.ruby-version` file in my home directory, specifying a version that no longer existed. Once I deleted the file, everything worked."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1390743713,
          "answer_id": 21364118,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1390743713,
          "body_markdown": "```rbenv help shell```\r\n\r\n&quot;Sets a shell-specific Ruby version by setting the &#39;RBENV_VERSION&#39; environment variable in your shell. This version overrides localapplication-specific versions and the global version.&lt;version&gt; should be a string matching a Ruby version known to rbenv.The special version string &#39;system&#39; will use your default system Ruby. Run rbenv versions&#39; for a list of available Ruby versions.&quot;\r\n\r\nProvided rbenv was installed correctly, ruby -v will correspond to \r\n\r\n```rbenv shell 1.9.3-p125```"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1393828666,
          "answer_id": 22140224,
          "path": "stack.gulp.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1393828666,
          "body_markdown": "I forgot to delete rvm before installing rbenv. I deleted rvm and re-installed rbenv, but system still wasn&#39;t using the version of Ruby being designated as global by rbenv. I tried shutting Terminal, but it only worked once I restarted the whole machine."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1452179021,
          "answer_id": 34658433,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1452179021,
          "body_markdown": "As for me the easiest way to use `rbenv` along with `zsh` is adding `rbenv` to plugins section in `.zshrc` config. In my case it looks similar to:\r\n\r\n\r\n    # Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n    # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n    # Example format: plugins=(rails git textmate ruby lighthouse)\r\n    # Add wisely, as too many plugins slow down shell startup.\r\n    plugins=(git bower rails ruby rbenv gulp npm node nvm sublime)\r\n\r\n After that there&#39;re no problems when installing, switching, using ruby versions with help of `rbenv`.\r\n\r\nMind to restart your terminal session after made changes."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1472603387,
          "answer_id": 39238995,
          "path": "stack.gulp.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1472603387,
          "body_markdown": "First step is to find out which ruby is being called:&lt;br&gt;\r\n&lt;code&gt;which ruby&lt;/code&gt;\r\n\r\nYour system says:&lt;br&gt;\r\n&lt;code&gt;/usr/bin/ruby&lt;/code&gt;\r\n\r\nThis is NOT the shim used by rbenv, which (on MacOS) should look like:&lt;br&gt;\r\n&lt;code&gt;/Users/&amp;lt;username&amp;gt;/.rbenv/shims/ruby&lt;/code&gt;\r\n\r\nThe shim is actually a script that acts like a redirect to the version of ruby you set.&lt;br&gt;&lt;br&gt;\r\n&lt;code&gt;rbenv global 1.9.3\r\n rbenv local --unset\r\n rbenv shell --unset\r\n&lt;/code&gt;&lt;br&gt;\r\nI recommend that for trouble shooting you unset the project specific &quot;local&quot; version, and the shell specific &quot;shell&quot; version and just test using the &quot;global&quot; version setting which is determined in a plain text file in ~/.rbenv/verion which will just be the version number &quot;1.9.3&quot; in your case.  You can do &quot;ls -laG&quot; in the root of your project folder (not the home folder) to make sure there is no longer a &quot;.ruby-version&quot; file there.\r\n\r\nYou can use &quot;rbenv versions&quot; to identify which version rbenv is set to use (and the location and name of the file that is setting that).\r\n\r\n&lt;code&gt;rbenv versions&lt;/code&gt;\r\n\r\nNONE OF THAT MATTERS: until you set the path correctly.\r\n\r\nUse this to make sure your *MacOS will obey you:&lt;br&gt;\r\n&lt;code&gt;eval &quot;$(rbenv init -)&quot;&lt;/code&gt;\r\n\r\nFollowed by:&lt;br&gt;\r\n&lt;code&gt;which ruby&lt;/code&gt;\r\n\r\nTo make sure it looks like:\r\n/Users/&lt;username&gt;/.rbenv/shims/ruby\r\n\r\nThen add the line to your profile so it runs each time you open a new terminal window:&lt;br&gt;\r\n&lt;code&gt; ~/.bash_profile\r\neval &quot;$(rbenv init -)&quot;&lt;/code&gt;\r\n\r\nThere are other ways to modify the path, feel free to substitute any of them instead of running the rbenv init.\r\n\r\nNOTE: reinstall Rails with:&lt;br&gt;\r\n&lt;code&gt;gem install rails&lt;/code&gt;\r\n\r\n\r\nIf you were trying to run Ruby on Rails, then you need to have this all working first, then install the rails gem again.  A previous install of Rails will use a hard coded path to the wrong ruby and several other things will be in the wrong place, so just install the gem again.\r\n\r\nP. S. If your MacOS won&#39;t obey you (*mentioned above) then you may have to find another way to modify your path, but that&#39;s unlikely to be a problem because &quot;Macs just work&quot; ;)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1472624811,
          "answer_id": 39242206,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1472624811,
          "body_markdown": "Run this command\r\n\r\n# Add rbenv to bash so that it loads every time you open a terminal\r\n\r\n    echo &#39;if which rbenv &gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi&#39; &gt;&gt; ~/.bash_profile\r\n    source ~/.bash_profile\r\nthis will solve your problem [Reference][1]\r\n\r\n\r\n  [1]: https://gorails.com/setup/osx/10.10-yosemite"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1484482927,
          "answer_id": 41661031,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1484482927,
          "body_markdown": "I had the same problem, but caused by Homebrew:\r\n\r\n    [~]$ rbenv version\r\n    2.3.0 (set by /Users/user/.rbenv/version)\r\n    [~]$ ruby -v\r\n    ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-darwin16]\r\n    [~]$ which ruby\r\n    /usr/local/bin/ruby\r\n\r\nSomehow I had installed Ruby via Homebrew too, and the Homebrew path was ahead of the rbenv path in my `$PATH`. Running `brew uninstall ruby` fixed it for me."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1484958463,
          "answer_id": 41774472,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1484958463,
          "body_markdown": "for fish shell user\r\n\r\n    set --universal fish_user_paths $fish_user_paths ~/.rbenv/shims/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1486040112,
          "answer_id": 42002830,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1494581775,
          "last_edit_date": 1494581775,
          "body_markdown": "In my case changing the `~/.zshenv` did not work. I had to make the changes inside `~/.zshrc`.\r\n\r\nI just added: \r\n\r\n    # Include rbenv for ZSH\r\n    export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\n    eval &quot;$(rbenv init -)&quot;\r\n\r\nat the top of `~/.zshrc`, restarted the shell and logged out.\r\n\r\nCheck if it worked:\r\n\r\n    ➜  ~ rbenv install 2.4.0\r\n    ➜  ~ rbenv global 2.4.0\r\n    ➜  ~ rbenv global\r\n    2.4.0\r\n    ➜  ~ ruby -v\r\n    ruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1493530640,
          "answer_id": 43703280,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1494622392,
          "last_edit_date": 1494622392,
          "body_markdown": "Make sure the last line of your `.bash_profile` is:\r\n\r\n    export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\n    eval &quot;$(rbenv init -)&quot;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1504050732,
          "answer_id": 45949894,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1504050732,
          "body_markdown": "run:\r\n\r\n    rbenv init\r\n\r\nAfter I ran that, when i set my local rbenv version:\r\n\r\n    rbenv local 2.4.0\r\n\r\nthen my `ruby -v` and my `rbenv local` versions coincided.\r\n\r\nNote: You might also want to exit the directory you&#39;re in and then go back into it, i&#39;ve noticed that was necessary for me in order to get things to work."
        }
      ],
      "title": "rbenv not changing ruby version",
      "view_count": 100596,
      "answer_count": 19,
      "code_snippet": [
        "<code>rbenv versions\n* 1.9.3-p0 (set by /Users/user/.rbenv/version)\n1.9.3-p125\n\nrbenv global\n1.9.3-p0\n\nrbenv rehash\n\nruby -v\nruby 1.8.7 (2011-12-28 patchlevel 357) [universal-darwin11.0]\n\nwhich ruby\n/usr/bin/ruby\n</code>",
        "<code>rbenv local\nrbenv: no local version configured for this directory\n</code>",
        "<code>$ env | grep PATH\n</code>",
        "<code>export PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n</code>",
        "<code>source</code>",
        "<code>exec $SHELL -l</code>",
        "<code>export RBENV_ROOT=\"$HOME/.rbenv\" if which rbenv &gt; /dev/null; then eval \"$(rbenv init -)\"; fi</code>",
        "<code>[~/.rbenv] $ rbenv versions\n* system (set by /Users/alphadogg/.rbenv/version)\n  2.0.0-p247\n</code>",
        "<code>[~/.rbenv] $ rbenv local 2.0.0-p247\n</code>",
        "<code>#PATH for rbenv\nexport PATH=\"$HOME/.rbenv/shims:$PATH\"\n</code>",
        "<code>export PATH=\"$HOME/.rbenv/bin:$PATH</code>",
        "<code>~/.rbenv/bin/</code>",
        "<code>rbenv init</code>",
        "<code>if which rbenv &gt; /dev/null; then eval \"$(rbenv init -)\"; fi\n</code>",
        "<code>which ruby</code>",
        "<code>/usr/bin/ruby</code>",
        "<code>/Users/&lt;username&gt;/.rbenv/shims/ruby</code>",
        "<code>rbenv global 1.9.3\n rbenv local --unset\n rbenv shell --unset\n</code>",
        "<code>rbenv versions</code>",
        "<code>eval \"$(rbenv init -)\"</code>",
        "<code>which ruby</code>",
        "<code> ~/.bash_profile\neval \"$(rbenv init -)\"</code>",
        "<code>gem install rails</code>",
        "<code>rbenv help shell</code>",
        "<code>rbenv shell 1.9.3-p125</code>",
        "<code>~/.zshenv</code>",
        "<code>~/.zshrc</code>",
        "<code># Include rbenv for ZSH\nexport PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n</code>",
        "<code>~/.zshrc</code>",
        "<code>➜  ~ rbenv install 2.4.0\n➜  ~ rbenv global 2.4.0\n➜  ~ rbenv global\n2.4.0\n➜  ~ ruby -v\nruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]\n</code>",
        "<code>rbenv</code>",
        "<code>.ruby-version</code>",
        "<code>rbenv</code>",
        "<code>zsh</code>",
        "<code>rbenv</code>",
        "<code>.zshrc</code>",
        "<code># Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git bower rails ruby rbenv gulp npm node nvm sublime)\n</code>",
        "<code>rbenv</code>",
        "<code>echo 'if which rbenv &gt; /dev/null; then eval \"$(rbenv init -)\"; fi' &gt;&gt; ~/.bash_profile\nsource ~/.bash_profile\n</code>",
        "<code>[~]$ rbenv version\n2.3.0 (set by /Users/user/.rbenv/version)\n[~]$ ruby -v\nruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-darwin16]\n[~]$ which ruby\n/usr/local/bin/ruby\n</code>",
        "<code>$PATH</code>",
        "<code>brew uninstall ruby</code>",
        "<code>.bash_profile</code>",
        "<code>export PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n</code>",
        "<code>rbenv init\n</code>",
        "<code>rbenv local 2.4.0\n</code>",
        "<code>ruby -v</code>",
        "<code>rbenv local</code>",
        "<code>PATH</code>",
        "<code>GEM_HOME</code>",
        "<code>GEM_PATH</code>",
        "<code>set --universal fish_user_paths $fish_user_paths ~/.rbenv/shims/\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "git",
        "bower"
      ],
      "creation_date": 1387395763,
      "body_markdown": "Git is installed and is in the path.\r\n\r\nPlatform: [Red Hat Enterprise Linux][1] 5.8.\r\n\r\n    &gt;which git\r\n    /usr/local/bin/git\r\n\r\nYet bower can&#39;t find it:\r\n\r\n    bower angular#1.0.6  ENOGIT git is not installed or not in the PATH\r\n\r\nWhat is the recommended work-around?\r\n\r\n  [1]: https://en.m.wikipedia.org/wiki/Red_Hat_Enterprise_Linux\r\n",
      "last_edit_date": 1477065997,
      "up_vote_count": 221,
      "link": "https://stackoverflow.com/questions/20666989/bower-enogit-git-is-not-installed-or-not-in-the-path",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1387676162,
          "answer_id": 20725327,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1390654064,
          "last_edit_date": 1390654064,
          "body_markdown": "I had the same error in Windows. Adding git to the path fixed the issue. \r\n\r\n    G:\\Dropbox\\Development\\xampp\\htdocs.penfolds.git\\penfolds-atg-development&gt;bower install\r\n    bower bootstrap#~3.0.0          ENOGIT git is not installed or not in the PATH\r\n    \r\n    G:\\&gt;PATH\r\n    PATH=E:\\Program Files\\Windows Resource Kits\\Tools\\;\r\n    \r\n    G:\\Dropbox\\Development\\xampp\\htdocs.penfolds.git\\penfolds-atg-development&gt;set PATH=%PATH%;E:\\Program Files\\Git\\bin;\r\n    \r\n    G:\\Dropbox\\Development\\xampp\\htdocs.penfolds.git\\penfolds-atg-development&gt;bower install\r\n    bower bootstrap#~3.0.0      not-cached git://github.com/twbs/bootstrap.git#~3.0.0\r\n    bower bootstrap#~3.0.0         resolve git://github.com/twbs/bootstrap.git#~3.0.0"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1391034563,
          "answer_id": 21444065,
          "path": "stack.bower.answer",
          "score": 206,
          "up_vote_count": 209,
          "is_accepted": false,
          "last_activity_date": 1439237099,
          "last_edit_date": 1439237099,
          "body_markdown": "Just use the Git Bash instead of cmd.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1397974391,
          "answer_id": 23179102,
          "path": "stack.bower.answer",
          "score": 326,
          "up_vote_count": 330,
          "is_accepted": false,
          "last_activity_date": 1439237309,
          "last_edit_date": 1439237309,
          "body_markdown": "Adding Git to Windows 7/8/8.1 Path\r\n\r\nNote: You must have **[msysgit][1]** installed on your machine. Also, the path to my Git installation is &quot;C:\\Program Files (x86)\\Git&quot;. Yours might be different. Please check where yours is before continuing.\r\n\r\nOpen the Windows Environment Variables/Path Window.\r\n\r\n1. Right-click on *My Computer* -&gt; *Properties*\r\n2. Click *Advanced System Settings* link from the left side column\r\n3. Click *Environment Variables* in the bottom of the window\r\n4. Then under *System Variables* look for the path variable and click edit\r\n5. Add the pwd to Git&#39;s binary and cmd at the end of the string like this:\r\n\r\n        ;%PROGRAMFILES(x86)%\\Git\\bin;%PROGRAMFILES(x86)%\\Git\\cmd\r\n\r\nNow test it out in PowerShell. Type `git` and see if it recognizes the command.\r\n\r\n![This is image showing you how to do so!][2]\r\n\r\nSource: *[Adding Git to Windows 7 Path][3]*\r\n\r\n  [1]: https://msysgit.github.io/\r\n  [2]: http://i.stack.imgur.com/Pt1gf.png\r\n  [3]: http://blog.countableset.ch/2012/06/07/adding-git-to-windows-7-path/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1402072264,
          "answer_id": 24086676,
          "path": "stack.bower.answer",
          "score": 69,
          "up_vote_count": 71,
          "is_accepted": false,
          "last_activity_date": 1402072264,
          "body_markdown": "Run the following command at your node.js command prompt where &quot;&amp;lt;git path&amp;gt;&quot; is the path to your git bin folder:\r\n\r\n    set PATH=%PATH%;&lt;git path&gt;;\r\n\r\nSo, like this:\r\n\r\n    set PATH=%PATH%;C:\\Program Files\\Git\\bin;\r\n\r\nOr this: (Notice the (x86) )\r\n\r\n    set PATH=%PATH%;C:\\Program Files (x86)\\Git\\bin;\r\n\r\nThis will add git to your path variables. Be sure you type it correctly or you could possibly delete your path vars which would be bad."
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1403679588,
          "answer_id": 24402157,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1461009420,
          "last_edit_date": 1461009420,
          "body_markdown": "I am also getting the same error and the solution is first to check if the **Git** is installed or not in the system and if not please install it.\r\n\r\nAfter installation, open **Git Bash** or **Git Shell** from Windows and go to your project (same way you go in command prompt using &quot;cd path&quot;). **Git Shell** is installed by default with **Github** windows installation. \r\n\r\nThen run the same **bower install** command. It will work as expected.\r\n\r\nThe below screenshot shows the command using **Git Shell**\r\n[![Bower install using Git Shell][1]][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/q2tSF.png"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1404078228,
          "answer_id": 24480559,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1404078228,
          "body_markdown": "When you ran the git install, you probably didn&#39;t choose:\r\n\r\n&quot;Use Git from the Windows Command Prompts&quot;\r\n\r\nduring the installation.\r\n\r\nRe-run git install, and choose that option.  "
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1407420142,
          "answer_id": 25184572,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1407420142,
          "body_markdown": "I bumped into this problem on a cPanel **CentOS 6** linux machine.\r\nThe solution for me was to symlink the cPanel git to **/usr/local/bin/git**\r\n\r\n    ln -s /usr/local/cpanel/3rdparty/bin/git /usr/local/bin/git\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1430155969,
          "answer_id": 29902360,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1439237499,
          "last_edit_date": 1439237499,
          "body_markdown": "Make sure you installed Git with the second or third option selected from the list. It will penetrate the Git command to cmd by modifying PATH automatically ;)\r\n\r\n![Enter image description here][1]\r\n\r\n  [1]: http://i.stack.imgur.com/OLjVh.png\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 8,
          "creation_date": 1435266720,
          "answer_id": 31060878,
          "path": "stack.bower.answer",
          "score": -4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1435266720,
          "body_markdown": "I had the same problem and needed to restart the cmd - and the problem goes away."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1436619404,
          "answer_id": 31357416,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1439237561,
          "last_edit_date": 1439237561,
          "body_markdown": "I also got the same problem from cmd and resolved using the following steps.\r\n\r\nFirst install the https://msysgit.github.io/ (if not alredy installed).\r\nThen set the Git path as suggested by skinneejoe:\r\n\r\n    set PATH=%PATH%;C:\\Program Files\\Git\\bin;\r\n\r\nOr this (notice the (x86)):\r\n\r\n    set PATH=%PATH%;C:\\Program Files (x86)\\Git\\bin;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1442934302,
          "answer_id": 32720406,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1442934302,
          "body_markdown": "You are missing the ENVIRONMENT PATH. Follow these steps:\r\n\r\n 1. Search for &#39;Edit the system environment variables&#39;.\r\n 2. Click on &#39;Environment Variables&#39;.\r\n 3. In the &#39;System variables&#39; section, scroll down and click on the variable &#39;Path&#39;. Click &#39;Edit&#39;.\r\n 4. Append this text to the end of the &#39;Variable value&#39;.\r\n\r\n&gt; ;%PROGRAMFILES%\\Git\\bin;%PROGRAMFILES%\\Git\\cmd\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1456643516,
          "answer_id": 35679803,
          "path": "stack.bower.answer",
          "score": -2,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1456643516,
          "body_markdown": "`npm install` from *git bash* did work for me.\r\n After rebooting PC."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1457860002,
          "answer_id": 35968451,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1457860002,
          "body_markdown": "On window you ca try to set the path using in command propmt:\r\n\r\n    set PATH=%PATH%;C:\\Program Files\\Git\\bin;"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1471952539,
          "answer_id": 39100224,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1471952539,
          "body_markdown": "In Linux:\r\n\r\nif you dont have installed git use:\r\n\r\n    sudo apt-get update\r\n    sudo apt-get install git\r\n\r\nwith command `which git` you will know the directory where is and then add in path if it is not in that enviroment variable."
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1477859087,
          "answer_id": 40333273,
          "path": "stack.bower.answer",
          "score": -3,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1477859406,
          "last_edit_date": 1477859406,
          "body_markdown": "Just use the Git Bash instead of node.js or command prompt\r\n\r\nAs an Example for installing ReactJS, after opening Git Bash, execute the following command to install react:\r\n\r\n    bower install --react"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1496245547,
          "answer_id": 44289247,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1496246866,
          "last_edit_date": 1496246866,
          "body_markdown": "    set PATH=%PATH%;C:\\Program Files\\git\\bin\r\n\r\nThis works just fine.\r\n\r\nJust check where your git is in the file system, and if this part `C:\\Program Files\\git\\bin` is different in your case change it."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1496665470,
          "answer_id": 44368895,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1496665470,
          "body_markdown": "I solved the problem by install Git Bash from [Download Git Bash][1].\r\n\r\nSetting this option 3 when installing the software as shown bellow.\r\n\r\n[![Setting Path variable][2]][2]\r\n\r\nFinally select the project folder by right click using Bash as shown below.\r\n\r\n[![enter image description here][3]][3]\r\n\r\nand type \r\n\r\n&gt; npm install\r\n\r\n. It works for me.\r\n\r\n\r\n  [1]: https://git-scm.com/downloads &quot;Git Bash Download Link&quot;\r\n  [2]: https://i.stack.imgur.com/Uidsf.png\r\n  [3]: https://i.stack.imgur.com/eOAFR.png"
        }
      ],
      "title": "Bower: ENOGIT Git is not installed or not in the PATH",
      "view_count": 284041,
      "answer_count": 17,
      "code_snippet": [
        "<code>&gt;which git\n/usr/local/bin/git\n</code>",
        "<code>bower angular#1.0.6  ENOGIT git is not installed or not in the PATH\n</code>",
        "<code>;%PROGRAMFILES(x86)%\\Git\\bin;%PROGRAMFILES(x86)%\\Git\\cmd\n</code>",
        "<code>git</code>",
        "<code>%PROGRAMFILES(x86)%</code>",
        "<code>C:\\Program Files (x86)</code>",
        "<code>;C:\\Program Files\\Git\\bin;C:\\Program Files\\Git\\cmd</code>",
        "<code>set PATH=%PATH%;&lt;git path&gt;;\n</code>",
        "<code>set PATH=%PATH%;C:\\Program Files\\Git\\bin;\n</code>",
        "<code>set PATH=%PATH%;C:\\Program Files (x86)\\Git\\bin;\n</code>",
        "<code>G:\\Dropbox\\Development\\xampp\\htdocs.penfolds.git\\penfolds-atg-development&gt;bower install\nbower bootstrap#~3.0.0          ENOGIT git is not installed or not in the PATH\n\nG:\\&gt;PATH\nPATH=E:\\Program Files\\Windows Resource Kits\\Tools\\;\n\nG:\\Dropbox\\Development\\xampp\\htdocs.penfolds.git\\penfolds-atg-development&gt;set PATH=%PATH%;E:\\Program Files\\Git\\bin;\n\nG:\\Dropbox\\Development\\xampp\\htdocs.penfolds.git\\penfolds-atg-development&gt;bower install\nbower bootstrap#~3.0.0      not-cached git://github.com/twbs/bootstrap.git#~3.0.0\nbower bootstrap#~3.0.0         resolve git://github.com/twbs/bootstrap.git#~3.0.0\n</code>",
        "<code>set PATH=%PATH%;C:\\Program Files\\Git\\bin;\n</code>",
        "<code>set PATH=%PATH%;C:\\Program Files\\Git\\bin;\n</code>",
        "<code>set PATH=%PATH%;C:\\Program Files (x86)\\Git\\bin;\n</code>",
        "<code>sudo apt-get update\nsudo apt-get install git\n</code>",
        "<code>which git</code>",
        "<code>ln -s /usr/local/cpanel/3rdparty/bin/git /usr/local/bin/git\n</code>",
        "<code>set PATH=%PATH%;C:\\Program Files\\git\\bin\n</code>",
        "<code>C:\\Program Files\\git\\bin</code>",
        "<code>npm install</code>",
        "<code>bower install --react\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "clipboard",
        "copy-paste"
      ],
      "creation_date": 1230642545,
      "body_markdown": "What is the best way to copy text to the clipboard? (multi-browser)\r\n\r\nI have tried: \r\n\r\n    function copyToClipboard(text) {\r\n    \tif (window.clipboardData) { // Internet Explorer\r\n    \t    window.clipboardData.setData(&quot;Text&quot;, text);\r\n    \t} else {  \r\n    \t    unsafeWindow.netscape.security.PrivilegeManager.enablePrivilege(&quot;UniversalXPConnect&quot;);  \r\n    \t    const clipboardHelper = Components.classes[&quot;@mozilla.org/widget/clipboardhelper;1&quot;].getService(Components.interfaces.nsIClipboardHelper);  \r\n    \t    clipboardHelper.copyString(text);\r\n    \t}\r\n    }\r\n\r\nbut in Internet Explorer it gives a syntax error. In Firefox, it says `unsafeWindow is not defined`.\r\n\r\n A nice trick without flash: https://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard",
      "last_edit_date": 1512315856,
      "up_vote_count": 2511,
      "link": "https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1230643602,
          "answer_id": 400244,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1331237113,
          "last_edit_date": 1331237113,
          "body_markdown": "As far as I know that only works in Internet&amp;nbsp;Explorer.\r\n\r\nSee also *[Dynamic Tools - JavaScript Copy To Clipboard][1]*, but it requires the user to change the configuration first and even then it doesn&#39;t seems to work.\r\n\r\n  [1]: http://www.dynamic-tools.net/toolbox/copyToClipboard/\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1230644025,
          "answer_id": 400252,
          "path": "stack.bower.answer",
          "score": 73,
          "up_vote_count": 78,
          "is_accepted": false,
          "last_activity_date": 1482511016,
          "last_edit_date": 1482511016,
          "body_markdown": "Reading and modifying the clipboard from a webpage raises security and privacy concerns. However, in Internet&amp;nbsp;Explorer, it is possible to do it. I found this [example snippet][1]:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n        &lt;script type=&quot;text/javascript&quot;&gt;\r\n            function select_all(obj) {\r\n                var text_val=eval(obj);\r\n                text_val.focus();\r\n                text_val.select();\r\n                if (!r.execCommand) return; // feature detection\r\n                r = text_val.createTextRange();\r\n                r.execCommand(&#39;copy&#39;);\r\n            }\r\n        &lt;/script&gt;\r\n        &lt;input value=&quot;http://www.sajithmr.com&quot;\r\n         onclick=&quot;select_all(this)&quot; name=&quot;url&quot; type=&quot;text&quot; /&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n  [1]: http://www.sajithmr.com/onclick-select-all-and-copy-to-clipboard-javascript/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1230644331,
          "answer_id": 400262,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1385078887,
          "last_edit_date": 1385078887,
          "body_markdown": "In browsers other than IE you need to use a small flash object to manipulate the clipboard, e.g.\r\n\r\n  - [Auto copy to clipboard](http://ajaxian.com/archives/auto-copy-to-clipboard)"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1230647618,
          "answer_id": 400403,
          "path": "stack.bower.answer",
          "score": 17,
          "up_vote_count": 19,
          "is_accepted": false,
          "last_activity_date": 1230647618,
          "body_markdown": "The other methods will copy plain text to the clipboard. To copy HTML (ie, you can paste results into a WSIWYG editor), you can do the following in **IE ONLY**. This is is fundamentally different from the other methods, as the browser actually visibly selects the content.\r\n\r\n    // create an editable DIV and append the HTML content you want copied\r\n    var editableDiv = document.createElement(&quot;div&quot;);\r\n    with (editableDiv) {\r\n        contentEditable = true;\r\n    }     \r\n    editableDiv.appendChild(someContentElement);  \t      \r\n\r\n    // select the editable content and copy it to the clipboard\r\n    var r = document.body.createTextRange();\r\n    r.moveToElementText(editableDiv);\r\n    r.select();  \r\n    r.execCommand(&quot;Copy&quot;);\r\n    \r\n    // deselect, so the browser doesn&#39;t leave the element visibly selected\r\n    r.moveToElementText(someHiddenDiv);\r\n    r.select();   "
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1230648456,
          "answer_id": 400437,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1230648456,
          "last_edit_date": 1495540050,
          "body_markdown": "Looks like you took the code from [Greasemonkey\\JavaScript Copy to Clipboard button](https://stackoverflow.com/questions/316508/greasemonkey-javascript-copy-to-clipboard-button &quot;Greasemonkey\\JavaScript Copy to Clipboard button&quot;) or the original source of this snippet...\r\n\r\nThis code was for Greasemonkey, hence the unsafeWindow. And I guess the syntax error in IE comes from the `const` keyword which is specific to Firefox (replace it with `var`)."
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1268856759,
          "answer_id": 2465508,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1317745398,
          "last_edit_date": 1317745398,
          "body_markdown": "As of Flash 10, you can only copy to clipboard if the action originates from user interaction with a Flash object. ([Read related section from Adobe&#39;s Flash 10 announcement][1])\r\n\r\nThe solution is to overly a flash object above the Copy button, or whatever element initiates the copy. Zero Clipboard is currently the best library with this implementation. Experienced Flash developers may just want to make their own library.\r\n\r\n  [1]: http://www.adobe.com/devnet/flashplayer/articles/fplayer10_security_changes_02.html#head31"
        },
        {
          "tags": [],
          "down_vote_count": 36,
          "creation_date": 1287326435,
          "answer_id": 3953655,
          "path": "stack.bower.answer",
          "score": 95,
          "up_vote_count": 131,
          "is_accepted": false,
          "last_activity_date": 1496691477,
          "last_edit_date": 1496691477,
          "body_markdown": "If you want a really simple solution (takes less than 5 minutes to integrate) and looks good right out of the box, then Clippy is a nice alternative to some of the more complex solutions.  \r\n\r\n[Clippy](http://github.com/mojombo/clippy)\r\n\r\nIt was written by a co-founder of Github.  Example Flash embed code below:\r\n\r\n    &lt;object \r\n       classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot;\r\n       width=&quot;110&quot;\r\n       height=&quot;14&quot;\r\n       id=&quot;clippy&quot;&gt;\r\n      &lt;param name=&quot;movie&quot; value=&quot;/flash/clippy.swf&quot;/&gt;\r\n      &lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;/&gt;\r\n      &lt;param name=&quot;quality&quot; value=&quot;high&quot;/&gt;\r\n      &lt;param name=&quot;scale&quot; value=&quot;noscale&quot;/&gt;\r\n      &lt;param NAME=&quot;FlashVars&quot; value=&quot;text=#{text}&quot;/&gt;\r\n      &lt;param name=&quot;bgcolor&quot; value=&quot;#{bgcolor}&quot;/&gt;\r\n      &lt;embed \r\n         src=&quot;/flash/clippy.swf&quot;\r\n         width=&quot;110&quot;\r\n         height=&quot;14&quot;\r\n         name=&quot;clippy&quot;\r\n         quality=&quot;high&quot;\r\n         allowScriptAccess=&quot;always&quot;\r\n         type=&quot;application/x-shockwave-flash&quot;\r\n         pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot;\r\n         FlashVars=&quot;text=#{text}&quot;\r\n         bgcolor=&quot;#{bgcolor}&quot;/&gt;\r\n    &lt;/object&gt;\r\n\r\nRemember to replace `#{text}` with the text you need copied, and `#{bgcolor}` with a color."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1295284185,
          "answer_id": 4715825,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1331237680,
          "last_edit_date": 1331237680,
          "body_markdown": "I had the same problem building a custom grid edit from (something like Excel) and compatibility with Excel. I had to support selecting multiple cells, copying and pasting. \r\n\r\nSolution: create a textarea where you will be inserting data for the user to copy (for me when the user is selecting cells), set focus on it (for example, when user press &lt;kbd&gt;Ctrl&lt;/kbd&gt;) and select the whole text. \r\n\r\nSo, when the user hit &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt; he gets copied cells he selected. After testing just resizing the textarea to 1 pixel (I didn&#39;t test if it will be working on display:none). It works nicely on all browsers, and it is transparent to the user.\r\n\r\nPasting - you could do same like this (differs on your target) - keep focus on textarea and catch paste events using onpaste (in my project I use textareas in cells to edit).\r\n\r\nI can&#39;t paste an example (commercial project), but you got the idea."
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1304461021,
          "answer_id": 5876374,
          "path": "stack.bower.answer",
          "score": 25,
          "up_vote_count": 31,
          "is_accepted": false,
          "last_activity_date": 1331237767,
          "last_edit_date": 1331237767,
          "body_markdown": "From one of the projects I&#39;ve been working on, a jQuery copy-to-clipboard plugin that utilizes the [Zero Clipboard][1] library.\r\n\r\nIt is easier to use than the native Zero Clipboard plugin if you&#39;re a heavy jQuery user.\r\n\r\n  [1]: http://steamdev.com/zclip\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 152,
          "creation_date": 1305792366,
          "answer_id": 6055620,
          "path": "stack.bower.answer",
          "score": 1179,
          "up_vote_count": 1331,
          "is_accepted": false,
          "last_activity_date": 1439971245,
          "last_edit_date": 1439971245,
          "body_markdown": "Automatic copying to clipboard may be dangerous, therefore most browsers (except IE) make it very difficult. Personally, I use the following simple trick:\r\n\r\n\r\n    function copyToClipboard(text) {\r\n      window.prompt(&quot;Copy to clipboard: Ctrl+C, Enter&quot;, text);\r\n    }\r\n\r\nThe user is presented with the prompt box, where the text to be copied is already selected. Now it&#39;s enough to press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt; and &lt;kbd&gt;Enter&lt;/kbd&gt; (to close the box) -- and voila!\r\n\r\nNow the clipboard copy operation is SAFE, because the user does it manually (but in a pretty straightforward way). Of course, works in all browsers.\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;button id=&quot;demo&quot; onclick=&quot;copyToClipboard(document.getElementById(&#39;demo&#39;).innerHTML)&quot;&gt;This is what I want to copy&lt;/button&gt;\r\n\r\n    &lt;script&gt;\r\n      function copyToClipboard(text) {\r\n        window.prompt(&quot;Copy to clipboard: Ctrl+C, Enter&quot;, text);\r\n      }\r\n    &lt;/script&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1313137052,
          "answer_id": 7037330,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1313137052,
          "body_markdown": "This is an expansion of @Chase&#39;s answer, with the advantage that it will work for IMAGE and TABLE elements, not just DIVs on IE9.\r\n\r\n    if (document.createRange) {\r\n        // IE9 and modern browsers\r\n        var r = document.createRange();\r\n        r.setStartBefore(to_copy);\r\n        r.setEndAfter(to_copy);\r\n        r.selectNode(to_copy);\r\n        var sel = window.getSelection();\r\n        sel.addRange(r);\r\n        document.execCommand(&#39;Copy&#39;);  // does nothing on FF\r\n    } else {\r\n        // IE 8 and earlier.  This stuff won&#39;t work on IE9.\r\n        // (unless forced into a backward compatibility mode,\r\n        // or selecting plain divs, not img or table). \r\n        var r = document.body.createTextRange();\r\n        r.moveToElementText(to_copy);\r\n        r.select()\r\n        r.execCommand(&#39;Copy&#39;);\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1313522567,
          "answer_id": 7083794,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1313592558,
          "last_edit_date": 1313592558,
          "body_markdown": "It seems I misread the question, but for reference, you can extract a range of the DOM (not to clipboard; compatible with all modern browsers), and combine it with the oncopy and onpaste and onbeforepaste events to get clipboard behaviour. Here&#39;s the code to achieve this: \r\n\r\n    function clipBoard(sCommand) {\r\n      var oRange=contentDocument.createRange();\r\n      oRange.setStart(startNode, startOffset);\r\n      oRange.setEnd(endNode, endOffset);\r\n    /* This is where the actual selection happens.\r\n    in the above, startNode and endNode are dom nodes defining the beginning \r\n    and end of the &quot;selection&quot; respectively. startOffset and endOffset are \r\n    constants that are defined as follows:\r\n\r\n    END_TO_END: 2\r\n    END_TO_START: 3\r\n    NODE_AFTER: 1\r\n    NODE_BEFORE: 0\r\n    NODE_BEFORE_AND_AFTER: 2\r\n    NODE_INSIDE: 3\r\n    START_TO_END: 1\r\n    START_TO_START: 0\r\n\r\n    and would be used like oRange.START_TO_END */\r\n          switch(sCommand) {\r\n        case &quot;cut&quot;:\r\n              this.oFragment=oRange.extractContents();\r\n          oRange.collapse();\r\n          break;\r\n        case &quot;copy&quot;:\r\n          this.oFragment=oRange.cloneContents();\r\n          break;\r\n        case &quot;paste&quot;:\r\n          oRange.deleteContents();\r\n          var cloneFragment=this.oFragment.cloneNode(true)\r\n          oRange.insertNode(cloneFragment);\r\n          oRange.collapse();\r\n          break;\r\n      }\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1334814861,
          "answer_id": 10222389,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1359341543,
          "last_edit_date": 1359341543,
          "body_markdown": "I found another nice solution LMCButton - small animated flash cross browser button. One JavaScript functions and swf button. Simple options (caption, custom JavaScript).  \r\n\r\nLink: [Copy to Clipboard LMCButton][1]\r\n\r\n\r\n  [1]: http://www.lettersmarket.com/view_blog/a-3-copy_to_clipboard_lmcbutton.html"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1341502412,
          "answer_id": 11347714,
          "path": "stack.bower.answer",
          "score": 20,
          "up_vote_count": 22,
          "is_accepted": false,
          "last_activity_date": 1381463096,
          "last_edit_date": 1381463096,
          "body_markdown": "I found the following solution:\r\n\r\nOn key down handler creates &quot;pre&quot; tag. We set the content to copy to this tag, then make a selection on this tag and return true in handler. This calls standard handler of chrome and copies selected text.\r\n\r\nAnd if you need you may be set the timeout for function for restoring previous selection. My implementation on Mootools:\r\n\r\n       function EnybyClipboard() {\r\n         this.saveSelection = false;\r\n         this.callback = false;\r\n         this.pastedText = false;\r\n\r\n         this.restoreSelection = function() {\r\n           if (this.saveSelection) {\r\n             window.getSelection().removeAllRanges();\r\n             for (var i = 0; i &lt; this.saveSelection.length; i++) {\r\n               window.getSelection().addRange(this.saveSelection[i]);\r\n             }\r\n             this.saveSelection = false;\r\n           }\r\n         };\r\n\r\n         this.copyText = function(text) {\r\n           var div = $(&#39;special_copy&#39;);\r\n           if (!div) {\r\n             div = new Element(&#39;pre&#39;, {\r\n               &#39;id&#39;: &#39;special_copy&#39;,\r\n               &#39;style&#39;: &#39;opacity: 0;position: absolute;top: -10000px;right: 0;&#39;\r\n             });\r\n             div.injectInside(document.body);\r\n           }\r\n           div.set(&#39;text&#39;, text);\r\n           if (document.createRange) {\r\n             var rng = document.createRange();\r\n             rng.selectNodeContents(div);\r\n             this.saveSelection = [];\r\n             var selection = window.getSelection();\r\n             for (var i = 0; i &lt; selection.rangeCount; i++) {\r\n               this.saveSelection[i] = selection.getRangeAt(i);\r\n             }\r\n             window.getSelection().removeAllRanges();\r\n             window.getSelection().addRange(rng);\r\n             setTimeout(this.restoreSelection.bind(this), 100);\r\n           } else return alert(&#39;Copy not work. :(&#39;);\r\n         };\r\n\r\n         this.getPastedText = function() {\r\n           if (!this.pastedText) alert(&#39;Nothing to paste. :(&#39;);\r\n           return this.pastedText;\r\n         };\r\n\r\n         this.pasteText = function(callback) {\r\n           var div = $(&#39;special_paste&#39;);\r\n           if (!div) {\r\n             div = new Element(&#39;textarea&#39;, {\r\n               &#39;id&#39;: &#39;special_paste&#39;,\r\n               &#39;style&#39;: &#39;opacity: 0;position: absolute;top: -10000px;right: 0;&#39;\r\n             });\r\n             div.injectInside(document.body);\r\n             div.addEvent(&#39;keyup&#39;, function() {\r\n               if (this.callback) {\r\n                 this.pastedText = $(&#39;special_paste&#39;).get(&#39;value&#39;);\r\n                 this.callback.call(null, this.pastedText);\r\n                 this.callback = false;\r\n                 this.pastedText = false;\r\n                 setTimeout(this.restoreSelection.bind(this), 100);\r\n               }\r\n             }.bind(this));\r\n           }\r\n           div.set(&#39;value&#39;, &#39;&#39;);\r\n           if (document.createRange) {\r\n             var rng = document.createRange();\r\n             rng.selectNodeContents(div);\r\n             this.saveSelection = [];\r\n             var selection = window.getSelection();\r\n             for (var i = 0; i &lt; selection.rangeCount; i++) {\r\n               this.saveSelection[i] = selection.getRangeAt(i);\r\n             }\r\n             window.getSelection().removeAllRanges();\r\n             window.getSelection().addRange(rng);\r\n             div.focus();\r\n             this.callback = callback;\r\n           } else return alert(&#39;Fail to paste. :(&#39;);\r\n         };\r\n       }\r\n\r\nUsage:\r\n\r\n    enyby_clip = new EnybyClipboard(); //init \r\n\r\n    enyby_clip.copyText(&#39;some_text&#39;); // place this in CTRL+C handler and return true;\r\n\r\n    enyby_clip.pasteText(function callback(pasted_text) {\r\n            alert(pasted_text);\r\n    }); // place this in CTRL+V handler and return true;\r\n\r\nOn paste it creates textarea and works the same way.\r\n\r\nPS may be this solution can be used for creating fully cross-browser solution without flash. Its works in FF and Chrome."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1372231701,
          "answer_id": 17314024,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1372231701,
          "body_markdown": "If the copied link has to be pasted on the same site, then simple solution is to,\r\n\r\nhighlight the text before pressing the simple html copy button and then on pressing it, the text content is stored in a session. and wherever it is to be pasted, there is a paste button. \r\n\r\n**I know, its not persistent &amp; universal solution but its something :)"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1375791024,
          "answer_id": 18079794,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1375791483,
          "last_edit_date": 1495542393,
          "body_markdown": "@Jimbo, here is the simple ajax/session based clipboard for the same website.\r\n\r\nNote that the session must be enabled &amp; valid and this soln. works for the same site. I tested it on Codeigniter but ran into session/ajax problem but [this][1] solved that problem too. If you dont want to play with sessions, use DB table.\r\n\r\n**js/jquery**\r\n\r\n    \r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n    $(document).ready(function() {\r\n\r\n        $(&quot;#copy_btn_id&quot;).click(function(){\r\n            \r\n          $.post(&quot;&lt;?php echo base_url();?&gt;ajax/foo_copy/&quot;+$(this).val(), null, \r\n    \t\tfunction(data){\r\n                    //copied successfully\r\n                }, &quot;html&quot;\r\n    \t  );\r\n        });\r\n\r\n        $(&quot;#paste_btn_id&quot;).click(function() {\r\n\r\n           $.post(&quot;&lt;?php echo base_url();?&gt;ajax/foo_paste/&quot;, null, \r\n             function(data) {\r\n               $(&#39;#paste_btn_id&#39;).val(data);\r\n             }, &quot;html&quot;\r\n           );\r\n        });\r\n\r\n\r\n      });\r\n    &lt;/script&gt;\r\n\r\n**html** \r\n\r\n    &lt;input type=&#39;text&#39; id=&#39;copy_btn_id&#39; onclick=&#39;this.select();&#39;  value=&#39;myvalue&#39; /&gt;\r\n    &lt;input type=&#39;text&#39; id=&#39;paste_btn_id&#39; value=&#39;&#39; /&gt;\r\n\r\n**php**\r\n\r\n    &lt;?php \r\n    class Ajax extends CI_Controller {\r\n        public function foo_copy($val){\r\n    \t\t$this-&gt;session-&gt;set_userdata(array(&#39;clipboard_val&#39; =&gt; $val));\r\n    \t}\r\n    \tpublic function foo_paste(){\r\n    \t\techo $this-&gt;session-&gt;userdata(&#39;clipboard_val&#39;);\r\n    \t\texit();\r\n    \t}\r\n    }\r\n    ?&gt;\r\n  [1]: https://stackoverflow.com/questions/7980193/codeigniter-session-bugging-out-with-ajax-calls"
        },
        {
          "tags": [],
          "down_vote_count": 5,
          "creation_date": 1379109369,
          "answer_id": 18795890,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1410384654,
          "last_edit_date": 1410384654,
          "body_markdown": "My bad. This only works in IE.\r\n\r\nHere&#39;s yet another way to copy text:\r\n\r\n    &lt;p&gt;\r\n        &lt;a onclick=&quot;window.clipboardData.setData(&#39;text&#39;, document.getElementById(&#39;Test&#39;).innerText);&quot;&gt;Copy&lt;/a&gt;\r\n    &lt;/p&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1382355579,
          "answer_id": 19493536,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1382355579,
          "body_markdown": "In case your are reading text from clipboard in a Chrome extension, with &#39;clipboardRead&#39; permission allowed, you can use below code:\r\n\r\n    function readTextFromClipboardInChromeExtension() {\r\n        var ta = $(&#39;&lt;textarea/&gt;&#39;);\r\n        $(&#39;body&#39;).append(ta);\r\n        ta.focus();\r\n        document.execCommand(&#39;paste&#39;);\r\n        var text = ta.val();\r\n        ta.blur();\r\n        ta.remove();\r\n        return text;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1385066485,
          "answer_id": 20131443,
          "path": "stack.bower.answer",
          "score": 34,
          "up_vote_count": 40,
          "is_accepted": false,
          "last_activity_date": 1398809498,
          "last_edit_date": 1398809498,
          "body_markdown": "ZeroClipboard is the best cross-browser solution I&#39;ve found:\r\n\r\n \r\n    &lt;div id=&quot;copy&quot; data-clipboard-text=&quot;Copy Me!&quot;&gt;Click to copy&lt;/div&gt;    \r\n    &lt;script src=&quot;ZeroClipboard.js&quot;&gt;&lt;/script&gt;\r\n    &lt;script&gt;\r\n      var clip = new ZeroClipboard( document.getElementById(&#39;copy&#39;) );\r\n    &lt;/script&gt;\r\n    \r\n\r\nIf you need non-flash support for iOS you just add a fall-back:\r\n\r\n\r\n    clip.on( &#39;noflash&#39;, function ( client, args ) {\r\n        $(&quot;#copy&quot;).click(function(){            \r\n            var txt = $(this).attr(&#39;data-clipboard-text&#39;);\r\n            prompt (&quot;Copy link, then click OK.&quot;, txt);\r\n        });\r\n    });  \r\n\r\n\r\n\r\n\r\nhttp://zeroclipboard.org/\r\n\r\nhttps://github.com/zeroclipboard/ZeroClipboard"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1404311308,
          "answer_id": 24533791,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1404311308,
          "body_markdown": "In Chrome you can use [`copy(&#39;the text or variable etc&#39;)`](http://anti-code.com/devtools-cheatsheet/#command-line-api).  While this isn&#39;t cross-browser (and [doesn&#39;t work in a snippet?](https://code.google.com/p/chromium/issues/detail?id=260401)), you could add it to the other cross-browser answers."
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1416101289,
          "answer_id": 26952804,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1416101289,
          "body_markdown": "[`ng-clip`](https://github.com/asafdav/ng-clip) was the simplest solution for AngularJS."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1417638666,
          "answer_id": 27281043,
          "path": "stack.bower.answer",
          "score": 61,
          "up_vote_count": 62,
          "is_accepted": false,
          "last_activity_date": 1417638666,
          "body_markdown": "I have recently written a [technical blog post][1] on this very problem (I work at Lucidchart and we recently did an overhaul on our clipboard).\r\n\r\nCopying plain text to the clipboard is relatively simple, assuming you want to do it during a system copy event (user presses ctrl-c or uses the browser&#39;s menu). \r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var isIe = (navigator.userAgent.toLowerCase().indexOf(&quot;msie&quot;) != -1 \r\n               || navigator.userAgent.toLowerCase().indexOf(&quot;trident&quot;) != -1);\r\n\r\n    document.addEventListener(&#39;copy&#39;, function(e) {\r\n        var textToPutOnClipboard = &quot;This is some text&quot;;\r\n        if (isIe) {\r\n            window.clipboardData.setData(&#39;Text&#39;, textToPutOnClipboard);    \r\n        } else {\r\n            e.clipboardData.setData(&#39;text/plain&#39;, textToPutOnClipboard);\r\n        }\r\n        e.preventDefault();\r\n    });\r\n\r\nPutting text on the clipboard not during a system copy event is much more difficult. It looks like some of these other answers reference ways to do it via Flash, which is the only cross-browser way to do it (so far as I understand).\r\n\r\nOther than that, there are some options on a browser-by-browser basis.\r\n\r\nThis is the most simple in IE, where you can access the clipboardData object at anytime from Javascript via:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    window.clipboardData\r\n\r\n(When you attempt to do this outside of a system cut, copy, or paste event, however, IE will prompt the user to grant the web application clipboard permission.)\r\n\r\nIn Chrome, you can create a chrome extension that will give you [clipboard permissions][2] (this is what we do for Lucidchart). Then for users with your extension installed you&#39;ll just need to fire the system event yourself:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    document.execCommand(&#39;copy&#39;);\r\n\r\nIt looks like Firefox has [some options][3] that allow users to grant permissions to certain sites to access the clipboard, but I haven&#39;t tried any of these personally.\r\n\r\n\r\n  [1]: https://www.lucidchart.com/techblog/2014/12/02/definitive-guide-copying-pasting-javascript/\r\n  [2]: https://developer.chrome.com/extensions/declare_permissions\r\n  [3]: http://kb.mozillazine.org/Granting_JavaScript_access_to_the_clipboard"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1431002178,
          "answer_id": 30101268,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1431002178,
          "body_markdown": "For the security reason you cant do that. You must choose flash for copying clipboard.I suggest this one;\r\nhttp://zeroclipboard.org/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1434135378,
          "answer_id": 30810322,
          "path": "stack.bower.answer",
          "score": 1414,
          "up_vote_count": 1415,
          "is_accepted": false,
          "last_activity_date": 1498668699,
          "last_edit_date": 1498668699,
          "body_markdown": "## Browser Support\r\nThe JavaScript [`document.execCommand(&#39;copy&#39;)`][1] support has grown, see the links below for browser updates:\r\n\r\n- IE10+ (although [this document][2] indicates some support was there from IE5.5+).\r\n- [Google Chrome 43+ (~April 2015)][3]\r\n- [Mozilla Firefox 41+ (shipping ~September 2015)][4]\r\n- [Opera 29+ (based on Chromium 42, ~April 2015)][5] \r\n\r\n\r\n## Simple Example\r\n \r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var copyTextareaBtn = document.querySelector(&#39;.js-textareacopybtn&#39;);\r\n\r\n    copyTextareaBtn.addEventListener(&#39;click&#39;, function(event) {\r\n      var copyTextarea = document.querySelector(&#39;.js-copytextarea&#39;);\r\n      copyTextarea.select();\r\n\r\n      try {\r\n        var successful = document.execCommand(&#39;copy&#39;);\r\n        var msg = successful ? &#39;successful&#39; : &#39;unsuccessful&#39;;\r\n        console.log(&#39;Copying text command was &#39; + msg);\r\n      } catch (err) {\r\n        console.log(&#39;Oops, unable to copy&#39;);\r\n      }\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;p&gt;\r\n      &lt;button class=&quot;js-textareacopybtn&quot; style=&quot;vertical-align:top;&quot;&gt;Copy Textarea&lt;/button&gt;\r\n      &lt;textarea class=&quot;js-copytextarea&quot;&gt;Hello I&#39;m some text&lt;/textarea&gt;\r\n    &lt;/p&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n## Complex Example: Copy to clipboard without displaying input\r\nThe above simple example works great if there is a `textarea` or `input` element  visible on screen. \r\n\r\nIn some cases you might wish to copy text to the clipboard without displaying an `input` / `textarea` element. This is one example of a way to work around this (basically insert element, copy to clipboard, remove element):\r\n\r\nTested with Google Chrome 44, Firefox 42.0a1 and IE 11.0.8600.17814.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function copyTextToClipboard(text) {\r\n      var textArea = document.createElement(&quot;textarea&quot;);\r\n\r\n      //\r\n      // *** This styling is an extra step which is likely not required. ***\r\n      //\r\n      // Why is it here? To ensure:\r\n      // 1. the element is able to have focus and selection.\r\n      // 2. if element was to flash render it has minimal visual impact.\r\n      // 3. less flakyness with selection and copying which **might** occur if\r\n      //    the textarea element is not visible.\r\n      //\r\n      // The likelihood is the element won&#39;t even render, not even a flash,\r\n      // so some of these are just precautions. However in IE the element\r\n      // is visible whilst the popup box asking the user for permission for\r\n      // the web page to copy to the clipboard.\r\n      //\r\n\r\n      // Place in top-left corner of screen regardless of scroll position.\r\n      textArea.style.position = &#39;fixed&#39;;\r\n      textArea.style.top = 0;\r\n      textArea.style.left = 0;\r\n\r\n      // Ensure it has a small width and height. Setting to 1px / 1em\r\n      // doesn&#39;t work as this gives a negative w/h on some browsers.\r\n      textArea.style.width = &#39;2em&#39;;\r\n      textArea.style.height = &#39;2em&#39;;\r\n\r\n      // We don&#39;t need padding, reducing the size if it does flash render.\r\n      textArea.style.padding = 0;\r\n\r\n      // Clean up any borders.\r\n      textArea.style.border = &#39;none&#39;;\r\n      textArea.style.outline = &#39;none&#39;;\r\n      textArea.style.boxShadow = &#39;none&#39;;\r\n\r\n      // Avoid flash of white box if rendered for any reason.\r\n      textArea.style.background = &#39;transparent&#39;;\r\n\r\n\r\n      textArea.value = text;\r\n\r\n      document.body.appendChild(textArea);\r\n\r\n      textArea.select();\r\n\r\n      try {\r\n        var successful = document.execCommand(&#39;copy&#39;);\r\n        var msg = successful ? &#39;successful&#39; : &#39;unsuccessful&#39;;\r\n        console.log(&#39;Copying text command was &#39; + msg);\r\n      } catch (err) {\r\n        console.log(&#39;Oops, unable to copy&#39;);\r\n      }\r\n\r\n      document.body.removeChild(textArea);\r\n    }\r\n\r\n\r\n    var copyBobBtn = document.querySelector(&#39;.js-copy-bob-btn&#39;),\r\n      copyJaneBtn = document.querySelector(&#39;.js-copy-jane-btn&#39;);\r\n\r\n    copyBobBtn.addEventListener(&#39;click&#39;, function(event) {\r\n      copyTextToClipboard(&#39;Bob&#39;);\r\n    });\r\n\r\n\r\n    copyJaneBtn.addEventListener(&#39;click&#39;, function(event) {\r\n      copyTextToClipboard(&#39;Jane&#39;);\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;div style=&quot;display:inline-block; vertical-align:top;&quot;&gt;\r\n      &lt;button class=&quot;js-copy-bob-btn&quot;&gt;Set clipboard to BOB&lt;/button&gt;&lt;br /&gt;&lt;br /&gt;\r\n      &lt;button class=&quot;js-copy-jane-btn&quot;&gt;Set clipboard to JANE&lt;/button&gt;\r\n    &lt;/div&gt;\r\n    &lt;div style=&quot;display:inline-block;&quot;&gt;\r\n      &lt;textarea class=&quot;js-test-textarea&quot; cols=&quot;35&quot; rows=&quot;4&quot;&gt;Try pasting into here to see what you have on your clipboard:\r\n      \r\n      &lt;/textarea&gt;\r\n    &lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n## Additional notes\r\n### Only works if the user takes an action\r\nAll `document.execCommand(&#39;copy&#39;)` calls must take place as a direct result of a user action, e.g. click event handler. This is a measure to prevent messing with the users clipboard when they don&#39;t expect it.\r\n\r\nSee the [Google Developers post here][3] for more info.\r\n\r\n### Clipboard API\r\nNote the full Clipboard API draft specification can be found here:\r\nhttps://w3c.github.io/clipboard-apis/\r\n\r\n### Is it supported?\r\n- `document.queryCommandSupported(&#39;copy&#39;)` should return `true` if the command &quot;is supported by the browser&quot;.\r\n- and `document.queryCommandEnabled(&#39;copy&#39;)` return `true` if the `document.execCommand(&#39;copy&#39;)` will succeed if called now. Checking to ensure the command was called from a user-initiated thread and other requirements are met.\r\n\r\nHowever as an example of browser compatibility issues, Google Chrome from ~April to ~October 2015 only returned `true` from `document.queryCommandSupported(&#39;copy&#39;)` if the command was called from a user-initiated thread.\r\n\r\nNote compatibility detail below.\r\n\r\n### Browser Compatibility Detail\r\nWhilst a simple call to `document.execCommand(&#39;copy&#39;)` wrapped in a `try`/`catch` block called as a result of a user click will get you the most compatibility use the following has some provisos:\r\n\r\nAny call to `document.execCommand`, `document.queryCommandSupported` or `document.queryCommandEnabled` should be wrapped in a `try`/`catch` block.\r\n\r\nDifferent browser implementations and browser versions throw differing types of exceptions when called instead of returning `false`.\r\n\r\n\r\n\r\nDifferent browser implementations are still in flux and the [Clipboard API][6] is still in draft, so remember to do your testing.\r\n\r\n\r\n\r\n  [1]: https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\r\n  [2]: https://msdn.microsoft.com/en-us/library/ms537834(v=vs.85).aspx\r\n  [3]: https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en\r\n  [4]: https://developer.mozilla.org/en-US/Firefox/Releases/41#Interfaces.2FAPIs.2FDOM\r\n  [5]: https://dev.opera.com/blog/opera-29/#cut-and-copy-commands\r\n  [6]: https://w3c.github.io/clipboard-apis/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1436451865,
          "answer_id": 31320370,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1502919517,
          "last_edit_date": 1502919517,
          "body_markdown": "I would like to share my solution too, it&#39;s a bit of a combination between the other answers.\r\n\r\n    var copyToClipboard = function(textToCopy){\r\n    \t$(&quot;body&quot;)\r\n    \t\t.append($(&#39;&lt;input type=&quot;text&quot; name=&quot;fname&quot; class=&quot;textToCopyInput&quot;/&gt;&#39; )\r\n    \t\t.val(textToCopy))\r\n    \t\t.find(&quot;.textToCopyInput&quot;)\r\n    \t\t.select();\r\n    \t  try {\r\n    \t    var successful = document.execCommand(&#39;copy&#39;);\r\n    \t    var msg = successful ? &#39;successful&#39; : &#39;unsuccessful&#39;;\r\n    \t    alert(&#39;Text copied to clipboard!&#39;);\r\n    \t  } catch (err) {\r\n    \t  \twindow.prompt(&quot;To copy the text to clipboard: Ctrl+C, Enter&quot;, textToCopy);\r\n    \t  }\r\n    \t $(&quot;.textToCopyInput&quot;).remove();\r\n    }\r\n\r\nIt uses jQuery but it doesn&#39;t have to of course, you can change that if you want. I just had jQuery to my disposal. You can also add some CSS to make sure the input doesn&#39;t show. For instance something like:\r\n\r\n    .textToCopyInput{opacity: 0; position: absolute;}\r\n\r\nOr ofcourse you could also do some inline styling\r\n\r\n    .append($(&#39;&lt;input type=&quot;text&quot; name=&quot;fname&quot; style=&quot;opacity: 0;  position: absolute;&quot; class=&quot;textToCopyInput&quot;/&gt;&#39; )\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1439307217,
          "answer_id": 31946063,
          "path": "stack.bower.answer",
          "score": 40,
          "up_vote_count": 41,
          "is_accepted": false,
          "last_activity_date": 1439307217,
          "body_markdown": "[clipboard.js][1] is a small, non-flash, utility that allows copying of text or html data to the clipboard.  It&#39;s very easy to use, just include the .js and use something like this: \r\n\r\n\r\n\r\n    &lt;button id=&#39;markup-copy&#39;&gt;Copy Button&lt;/button&gt;\r\n    \r\n    &lt;script&gt;\r\n    document.getElementById(&#39;markup-copy&#39;).addEventListener(&#39;click&#39;, function() {\r\n      clipboard.copy({\r\n        &#39;text/plain&#39;: &#39;Markup text. Paste me into a rich text editor.&#39;,\r\n        &#39;text/html&#39;: &#39;&lt;i&gt;here&lt;/i&gt; is some &lt;b&gt;rich text&lt;/b&gt;&#39;\r\n      }).then(\r\n        function(){console.log(&#39;success&#39;); },\r\n        function(err){console.log(&#39;failure&#39;, err);\r\n      });\r\n    \t\r\n    });\r\n    &lt;/script&gt;\r\n\r\nclipboard.js is also on [GitHub][2]\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/clipboard-js\r\n  [2]: https://github.com/lgarron/clipboard.js"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1441713112,
          "answer_id": 32457109,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1443176151,
          "last_edit_date": 1495541444,
          "body_markdown": "In addition to [Dean Taylor updated answer (July 2015)][1], I wrote a jQuery method looking his example.\r\n\r\n[jsFiddle][2]\r\n\r\n    /**\r\n    * Copies the current selected text to the SO clipboard\r\n    * This method must be called from an event to work with `execCommand()`\r\n    * @param {String} text Text to copy\r\n    * @param {Boolean} [fallback] Set to true shows a prompt\r\n    * @return Boolean Returns `true` if the text was copied or the user clicked on accept (in prompt), `false` otherwise\r\n    */\r\n    var CopyToClipboard = function(text, fallback){\r\n    \tvar fb = function () {\r\n    \t\t$t.remove();\r\n    \t\tif (fallback !== undefined &amp;&amp; fallback) {\r\n    \t\t\tvar fs = &#39;Please, copy the following text:&#39;;\r\n    \t\t\tif (window.prompt(fs, text) !== null) return true;\r\n    \t\t}\r\n    \t\treturn false;\r\n    \t};\r\n    \tvar $t = $(&#39;&lt;textarea /&gt;&#39;);\r\n    \t$t.val(text).css({\r\n    \t\twidth: &#39;100px&#39;,\r\n    \t\theight: &#39;40px&#39;\r\n    \t}).appendTo(&#39;body&#39;);\r\n    \t$t.select();\r\n    \ttry {\r\n    \t\tif (document.execCommand(&#39;copy&#39;)) {\r\n    \t\t\t$t.remove();\r\n    \t\t\treturn true;\r\n    \t\t}\r\n    \t\tfb();\r\n    \t}\r\n    \tcatch (e) {\r\n    \t\tfb();\r\n    \t}\r\n    };\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/30810322/1684970\r\n  [2]: http://jsfiddle.net/kmsdev/wf43zq1y/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1444037350,
          "answer_id": 32945220,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1444037350,
          "body_markdown": "Update 2015: currently theres a way to use `document.execCommand` to work with the clipboard.\r\n[clipboard.js][1] provides a cross browser way to work with the clipboard ( [browser support][2] )\r\n\r\n\r\n  [1]: https://github.com/zenorocha/clipboard.js\r\n  [2]: http://caniuse.com/#search=document.execCommand"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444450380,
          "answer_id": 33050199,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1481735314,
          "last_edit_date": 1481735314,
          "body_markdown": "I was going to use clipboard.js, but it doesn&#39;t have any mobile solution in place (yet) ... so I wrote a super small library:\r\n\r\nhttps://github.com/ryanpcmcquen/cheval\r\n\r\nThis will either copy the text (Desktop/Android/Safari 10+), or at the very least, select the text (older versions of iOS). Minified it is just over 1kB. In desktop Safari (&lt;v10) it tells the user to `Press Command + C to copy`. You also don&#39;t need to write any JavaScript to use it."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1446031026,
          "answer_id": 33389604,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1446031026,
          "body_markdown": "I have used clipboard.js\r\n\r\nwe can get it on npm\r\n\r\n    npm install clipboard --save\r\n\r\nand also on bower\r\n\r\n    bower install clipboard --save\r\n\r\nUsage &amp; examples are  at https://zenorocha.github.io/clipboard.js/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1446695433,
          "answer_id": 33536393,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1447898972,
          "last_edit_date": 1495535497,
          "body_markdown": "Since recently Chrome 42+ and Firefox 41+ now support the **document.execCommand(&#39;copy&#39;)** command. So I created a couple of functions for cross browser copy to clipboard ability using a combination of [Tim Down&#39;s old answer][1] and [Google Developer&#39;s answer][2]:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function selectElementContents(el) \r\n    {\r\n        // Copy textarea, pre, div, etc.\r\n    \tif (document.body.createTextRange) {\r\n            // IE \r\n            var textRange = document.body.createTextRange();\r\n            textRange.moveToElementText(el);\r\n            textRange.select();\r\n            textRange.execCommand(&quot;Copy&quot;);     \r\n        }\r\n    \telse if (window.getSelection &amp;&amp; document.createRange) {\r\n            // non-IE\r\n            var range = document.createRange();\r\n            range.selectNodeContents(el);\r\n            var sel = window.getSelection();\r\n            sel.removeAllRanges();\r\n            sel.addRange(range); \r\n            try {  \r\n    \t\t    var successful = document.execCommand(&#39;copy&#39;);  \r\n    \t\t    var msg = successful ? &#39;successful&#39; : &#39;unsuccessful&#39;;  \r\n    \t\t    console.log(&#39;Copy command was &#39; + msg);  \r\n    \t\t} catch(err) {  \r\n    \t\t    console.log(&#39;Oops, unable to copy&#39;);  \r\n    \t\t} \r\n        }\r\n    } // end function selectElementContents(el) \r\n\r\n    function make_copy_button(el)\r\n    {\r\n    \tvar copy_btn = document.createElement(&#39;input&#39;);\r\n    \tcopy_btn.type = &quot;button&quot;;\r\n    \tel.parentNode.insertBefore(copy_btn, el.nextSibling);\r\n    \tcopy_btn.onclick = function() { selectElementContents(el); };\r\n    \t\r\n    \tif (document.queryCommandSupported(&quot;copy&quot;) || parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2]) &gt;= 42)\r\n    \t{\r\n    \t\t// Copy works with IE 4+, Chrome 42+, Firefox 41+, Opera 29+\r\n    \t\tcopy_btn.value = &quot;Copy to Clipboard&quot;;\r\n    \t}\t\r\n    \telse\r\n    \t{\r\n    \t\t// Select only for Safari and older Chrome, Firefox and Opera\r\n    \t\tcopy_btn.value = &quot;Select All (then press CTRL+C to Copy)&quot;;\r\n    \t}\r\n    }\r\n    /* Note: document.queryCommandSupported(&quot;copy&quot;) should return &quot;true&quot; on browsers that support copy\r\n    \tbut there was a bug in Chrome versions 42 to 47 that makes it return &quot;false&quot;.  So in those\r\n    \tversions of Chrome feature detection does not work!\r\n    \tSee https://code.google.com/p/chromium/issues/detail?id=476508\r\n    */\r\n\r\n    make_copy_button(document.getElementById(&quot;markup&quot;));\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;pre id=&quot;markup&quot;&gt;\r\n      Text that can be copied or selected with cross browser support.\r\n    &lt;/pre&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/8024509/4307527\r\n  [2]: https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1448496229,
          "answer_id": 33928558,
          "path": "stack.bower.answer",
          "score": 163,
          "up_vote_count": 164,
          "is_accepted": false,
          "last_activity_date": 1480306972,
          "last_edit_date": 1480306972,
          "body_markdown": "The following approach works in Chrome, Firefox, Internet Explorer and Edge, and in recent versions of Safari (Copy support was added in version 10 which was released Oct 2016).\r\n\r\n - Create a textarea and set its contents to the text you want copied to the clipboard.\r\n - Append the textarea to the DOM.\r\n - Select the text in the textarea.\r\n - Call document.execCommand(&quot;copy&quot;)\r\n - Remove the textarea from the dom.\r\n\r\nNote: you will not see the textarea, as it is added and removed within the same synchronous invocation of Javascript code.\r\n\r\nSome things to watch out for if you are implementing this yourself:\r\n\r\n - For security reasons, this can only called from an event handler such as click (Just as with opening windows).\r\n - IE will show a permission dialog the first time the clipboard is updated.\r\n - IE, and Edge will scroll when the textarea is focused.\r\n - execCommand() may throw in some cases.\r\n - Newlines and tabs can get swallowed unless you use a textarea. (Most articles seem to recommend using a div)\r\n - The textarea will be visible while the IE dialog is shown, you either need to hide it, or use the IE specific clipboardData api.\r\n - In IE system administrators can disable the clipboard API.\r\n\r\n\r\nThe function below should handle all of the following issues as cleanly as possible. Please leave a comment if you find any problems or have any suggestions for improving it.\r\n\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // Copies a string to the clipboard. Must be called from within an \r\n    // event handler such as click. May return false if it failed, but\r\n    // this is not always possible. Browser support for Chrome 43+, \r\n    // Firefox 42+, Safari 10+, Edge and IE 10+.\r\n    // IE: The clipboard feature may be disabled by an administrator. By\r\n    // default a prompt is shown the first time the clipboard is \r\n    // used (per session).\r\n    function copyToClipboard(text) {\r\n        if (window.clipboardData &amp;&amp; window.clipboardData.setData) {\r\n            // IE specific code path to prevent textarea being shown while dialog is visible.\r\n            return clipboardData.setData(&quot;Text&quot;, text); \r\n    \r\n        } else if (document.queryCommandSupported &amp;&amp; document.queryCommandSupported(&quot;copy&quot;)) {\r\n            var textarea = document.createElement(&quot;textarea&quot;);\r\n            textarea.textContent = text;\r\n            textarea.style.position = &quot;fixed&quot;;  // Prevent scrolling to bottom of page in MS Edge.\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            try {\r\n                return document.execCommand(&quot;copy&quot;);  // Security exception may be thrown by some browsers.\r\n            } catch (ex) {\r\n                console.warn(&quot;Copy to clipboard failed.&quot;, ex);\r\n                return false;\r\n            } finally {\r\n                document.body.removeChild(textarea);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\nhttps://jsfiddle.net/fx6a6n6x/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1464188779,
          "answer_id": 37441074,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1464190609,
          "last_edit_date": 1464190609,
          "body_markdown": "After searching a solution that supports Safari and other browsers (IE9 +),\r\n\r\nI use the same as Github : [ZeroClipboard][1]\r\n\r\n**Example :**\r\n-------------\r\nhttp://zeroclipboard.org/index-v1.x.html\r\n\r\n**HTML**\r\n\r\n    &lt;html&gt;\r\n      &lt;body&gt;\r\n        &lt;button id=&quot;copy-button&quot; data-clipboard-text=&quot;Copy Me!&quot; title=&quot;Click to copy me.&quot;&gt;Copy to Clipboard&lt;/button&gt;\r\n        &lt;script src=&quot;ZeroClipboard.js&quot;&gt;&lt;/script&gt;\r\n        &lt;script src=&quot;main.js&quot;&gt;&lt;/script&gt;\r\n      &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n**JS**\r\n\r\n    var client = new ZeroClipboard(document.getElementById(&quot;copy-button&quot;));\r\n    \r\n    client.on(&quot;ready&quot;, function (readyEvent) {\r\n        // alert( &quot;ZeroClipboard SWF is ready!&quot; );\r\n    \r\n        client.on(&quot;aftercopy&quot;, function (event) {\r\n            // `this` === `client`\r\n            // `event.target` === the element that was clicked\r\n            event.target.style.display = &quot;none&quot;;\r\n            alert(&quot;Copied text to clipboard: &quot; + event.data[&quot;text/plain&quot;]);\r\n        });\r\n    });\r\n\r\n  [1]: https://github.com/zeroclipboard/zeroclipboard"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1481559722,
          "answer_id": 41105130,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1481559722,
          "body_markdown": "Many answers already but I like to add one (jQuery). Works like a charm on any browser, also mobile ones (ie prompts about security but when you accept it just works fine).\r\n\r\n    function appCopyToClipBoard( sText )\r\n    {\r\n     var oText = false,\r\n         bResult = false;\r\n     try\r\n     {\r\n      oText = document.createElement(&quot;textarea&quot;);\r\n      $(oText).addClass(&#39;clipboardCopier&#39;).val(sText).insertAfter(&#39;body&#39;).focus();\r\n      oText.select();\r\n      document.execCommand(&quot;Copy&quot;);\r\n      bResult = true;\r\n     } catch(e) {}\r\n     \r\n     $(oText).remove();\r\n     return bResult;\r\n    }\r\n\r\nIn your code:\r\n\r\n    if( !appCopyToClipBoard( &#39;Hai there! This is copied to the clipboard.&#39; ))\r\n     { alert(&#39;Sorry, copy to clipboard failed.&#39;); }\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1483928537,
          "answer_id": 41540122,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1483928537,
          "body_markdown": "I had to copy the non-input boxes text (text within any div/span tag) from the page and came up with following code. Only trick is to have a hidden field but as type TEXT, wont work with type hidden. \r\n\r\n        function copyToClipboard(sID) {\r\n            var aField = document.getElementById(&quot;hiddenField&quot;);\r\n\r\n            aField.hidden   = false;\r\n            aField.value    = document.getElementById(sID).textContent;\r\n            aField.select();\r\n            document.execCommand(&quot;copy&quot;);\r\n            alert(&quot;Following text has been copied to the clipboard.\\n\\n&quot; + aField.value);\r\n            aField.hidden = true;\r\n        }\r\n\r\nAnd in the HTML add the following\r\n    \r\ninput type=&quot;text&quot; id=&quot;hiddenField&quot; style=&quot;width:5px;border:0&quot; /&gt;\r\n...\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1484737022,
          "answer_id": 41717563,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1484747797,
          "last_edit_date": 1484747797,
          "body_markdown": "I found the following solution:\r\n\r\nI have the text in a hidden input. Because `setSelectionRange` doesn&#39;t work on hidden inputs, I changed temporarily the type to text, copy the text and then make it hidden again. If you want to copy the text from an element, you can pass it to the function and save it&#39;s content in the target variable.\r\n\r\n        jQuery(&#39;#copy&#39;).on(&#39;click&#39;, function () {\r\n            copyToClipboard();\r\n        });\r\n    \r\n        function copyToClipboard() {\r\n            var target = jQuery(&#39;#hidden_text&#39;);\r\n    \r\n            // make it visible, so can be focused\r\n            target.attr(&#39;type&#39;, &#39;text&#39;);\r\n            target.focus();\r\n            // select all the text\r\n            target[0].setSelectionRange(0, target.val().length);\r\n    \r\n            // copy the selection\r\n            var succeed;\r\n            try {\r\n                succeed = document.execCommand(&quot;copy&quot;);\r\n            } catch (e) {\r\n                succeed = false;\r\n            }\r\n    \r\n            // hide input again\r\n            target.attr(&#39;type&#39;, &#39;hidden&#39;);\r\n    \r\n            return succeed;\r\n        }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1497376261,
          "answer_id": 44528339,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1508544327,
          "last_edit_date": 1508544327,
          "body_markdown": "&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n      &lt;!DOCTYPE html&gt;\r\n\r\n      &lt;style&gt;\r\n        #t {\r\n          width: 1px\r\n          height: 1px\r\n          border: none\r\n        }\r\n        #t:focus {\r\n          outline: none\r\n        }\r\n      &lt;/style&gt;\r\n\r\n      &lt;script&gt;\r\n        function copy(text) {\r\n          var t = document.getElementById(&#39;t&#39;)\r\n          t.innerHTML = text\r\n          t.select()\r\n          try {\r\n            var successful = document.execCommand(&#39;copy&#39;)\r\n            var msg = successful ? &#39;successfully&#39; : &#39;unsuccessfully&#39;\r\n            console.log(&#39;text coppied &#39; + msg)\r\n          } catch (err) {\r\n            console.log(&#39;Unable to copy text&#39;)\r\n          }\r\n          t.innerHTML = &#39;&#39;\r\n        }\r\n      &lt;/script&gt;\r\n\r\n      &lt;textarea id=t&gt;&lt;/textarea&gt;\r\n\r\n      &lt;button onclick=&quot;copy(&#39;hello world&#39;)&quot;&gt;\r\n        Click me\r\n      &lt;/button&gt;\r\n\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1499944607,
          "answer_id": 45079041,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1499944607,
          "body_markdown": "I compiled few functions in a simple solution to cover all cases, with prompt fallback if needed.\r\n\r\n    window.copyToClipboard = function(text) {\r\n      // IE specific\r\n      if (window.clipboardData &amp;&amp; window.clipboardData.setData) {\r\n        return clipboardData.setData(&quot;Text&quot;, text);\r\n      }\r\n      \r\n      // all other modern\r\n      target = document.createElement(&quot;textarea&quot;);\r\n      target.style.position = &quot;absolute&quot;;\r\n      target.style.left = &quot;-9999px&quot;;\r\n      target.style.top = &quot;0&quot;;\r\n      target.textContent = text;\r\n      document.body.appendChild(target);\r\n      target.focus();\r\n      target.setSelectionRange(0, target.value.length);\r\n    \r\n      // copy the selection of fall back to prompt\r\n      try {\r\n        document.execCommand(&quot;copy&quot;);\r\n        target.remove();\r\n        console.log(&#39;Copied to clipboard: &quot;&#39;+text+&#39;&quot;&#39;);\r\n      } catch(e) {\r\n        console.log(&quot;Can&#39;t copy string on this browser. Try to use Chrome, Firefox or Opera.&quot;)\r\n        window.prompt(&quot;Copy to clipboard: Ctrl+C, Enter&quot;, text);\r\n      }\r\n    }\r\n\r\nTest it here https://jsfiddle.net/jv0avz65/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1500029201,
          "answer_id": 45101066,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1500029201,
          "body_markdown": "I have put together the solution presented by @dean-taylor here along with some other select / unselect code from elsewhere into a jQuery plugin available on NPM:\r\n\r\nhttps://www.npmjs.com/package/jquery.text-select\r\n\r\n### Install: \r\n`npm install --save jquery.text-select`\r\n\r\n### Usage:\r\n\r\n    &lt;script&gt;\r\n        $(document).ready(function(){\r\n            $(&quot;#selectMe&quot;).selectText(); // Hightlight / select the text\r\n            $(&quot;#selectMe&quot;).selectText(false); // Clear the selection\r\n\r\n            $(&quot;#copyMe&quot;).copyText(); // Copy text to clipboard\r\n        });\r\n    &lt;/script&gt;\r\n\r\nFuther info on methods / events can be found at the NPM registry page above.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1500997893,
          "answer_id": 45308151,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1500997893,
          "body_markdown": "None of these answers take into account iOS not allowing execCommand. Here is one for all modern browsers (and IE11+) as well as iOS and Android. Based on the accepted answer. Unlike that answer it also sets readonly to false so a mobile keyboard doesn&#39;t pop up when copying.\r\n\r\n    const copyToClipboard = (function initClipboardText() {\r\n      const id = &#39;copy-to-clipboard-helper&#39;;\r\n      const element = document.getElementById(id);\r\n      const textarea = element || document.createElement(&#39;textarea&#39;);\r\n    \r\n      if (!element) {\r\n        textarea.id = id;\r\n        // Place in top-left corner of screen regardless of scroll position.\r\n        textarea.style.position = &#39;fixed&#39;;\r\n        textarea.style.top = 0;\r\n        textarea.style.left = 0;\r\n    \r\n        // Ensure it has a small width and height. Setting to 1px / 1em\r\n        // doesn&#39;t work as this gives a negative w/h on some browsers.\r\n        textarea.style.width = &#39;1px&#39;;\r\n        textarea.style.height = &#39;1px&#39;;\r\n    \r\n        // We don&#39;t need padding, reducing the size if it does flash render.\r\n        textarea.style.padding = 0;\r\n    \r\n        // Clean up any borders.\r\n        textarea.style.border = &#39;none&#39;;\r\n        textarea.style.outline = &#39;none&#39;;\r\n        textarea.style.boxShadow = &#39;none&#39;;\r\n    \r\n        // Avoid flash of white box if rendered for any reason.\r\n        textarea.style.background = &#39;transparent&#39;;\r\n    \r\n        // Set to readonly to prevent mobile devices opening a keyboard when\r\n        // text is .select()&#39;ed.\r\n        textarea.setAttribute(&#39;readonly&#39;, true);\r\n    \r\n        document.body.appendChild(textarea);\r\n      }\r\n    \r\n      return function setClipboardText(text) {\r\n        textarea.value = text;\r\n    \r\n        // iOS Safari blocks programmtic execCommand copying normally, without this hack.\r\n        // https://stackoverflow.com/questions/34045777/copy-to-clipboard-using-javascript-in-ios\r\n        if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\r\n          const editable = textarea.contentEditable;\r\n          textarea.contentEditable = true;\r\n          const range = document.createRange();\r\n          range.selectNodeContents(textarea);\r\n          const sel = window.getSelection();\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n          textarea.setSelectionRange(0, 999999);\r\n          textarea.contentEditable = editable;\r\n        } else {\r\n          textarea.select();\r\n        }\r\n    \r\n        try {\r\n          return document.execCommand(&#39;copy&#39;);\r\n        } catch (err) {\r\n          return false;\r\n        }\r\n      };\r\n    }());"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1504279230,
          "answer_id": 46003399,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1504279230,
          "body_markdown": "Just adding mine to the answers. \r\n\r\nIt&#39;s the best. So much winning. \r\n\r\n\r\n    var toClipboard = function(text) {\r\n            var doc = document;\r\n    \r\n            // Create temp element\r\n            var textarea = doc.createElement(&#39;textarea&#39;);\r\n            textarea.style.position = &#39;absolute&#39;;\r\n            textarea.style.opacity  = &#39;0&#39;;\r\n            textarea.textContent    = text;\r\n            \r\n            doc.body.appendChild(textarea);\r\n            \r\n            textarea.focus();\r\n            textarea.setSelectionRange(0, textarea.value.length);\r\n    \r\n            // copy the selection\r\n            var success;\r\n            try {\r\n                    success = doc.execCommand(&quot;copy&quot;);\r\n            } catch(e) {\r\n                    success = false;\r\n            }\r\n            \r\n            textarea.remove();\r\n    \r\n            return success;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1505380833,
          "answer_id": 46215202,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1505380833,
          "body_markdown": "Here is my take on that one..\r\n\r\n    function copy(text) {\r\n\t\tvar input = document.createElement(&#39;input&#39;);\r\n\t\tinput.setAttribute(&#39;value&#39;, text);\r\n\t\tdocument.body.appendChild(input);\r\n\t\tinput.select();\r\n\t\tdocument.execCommand(&#39;copy&#39;);\r\n\t\tdocument.body.removeChild(input)\r\n\t}"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1508022910,
          "answer_id": 46750222,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1508022910,
          "body_markdown": "This was the only thing I ever got working, after looking up various ways all around the internet. This is a messy topic. Lots of solutions posted around the world and most of them do NOT work. This worked for me:\r\n\r\nNOTE: This code will only work when executed as direct synchronous code to something like an &#39;onClick&#39; method. If you call in an async response to ajax or in any other async way it will not work\r\n\r\n    copyToClipboard(text) {\r\n        var copyText = document.createElement(&quot;input&quot;);\r\n        copyText.type = &quot;text&quot;;\r\n        document.body.appendChild(copyText);\r\n        copyText.style = &quot;display: inline; width: 1px;&quot;;\r\n        copyText.value = text;\r\n        copyText.focus();\r\n        document.execCommand(&quot;SelectAll&quot;);\r\n        document.execCommand(&quot;Copy&quot;);\r\n        copyText.remove();\r\n    }\r\n\r\n I do realize this code will show a 1px wide component visibly on the screen for a millisecond, but decided not to worry about that, which is something that others can address if a real probelm.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1508380417,
          "answer_id": 46822033,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1516083487,
          "last_edit_date": 1516083487,
          "body_markdown": "To copy a selected text (&#39;Text To Copy&#39;) to your clipboard, create a Bookmarklet (browser bookmark that executes Javsacript) and execute it (click on it).\r\nIt will create a temporary textarea.\r\n\r\nCode from Github:\r\n\r\nhttps://gist.github.com/stefanmaric/2abf96c740191cda3bc7a8b0fc905a7d\r\n\r\n    (function (text) {\r\n      var node = document.createElement(&#39;textarea&#39;);\r\n      var selection = document.getSelection();\r\n    \r\n      node.textContent = text;\r\n      document.body.appendChild(node);\r\n    \r\n      selection.removeAllRanges();\r\n      node.select();\r\n      document.execCommand(&#39;copy&#39;);\r\n    \r\n      selection.removeAllRanges();\r\n      document.body.removeChild(node);\r\n    })(&#39;Text To Copy&#39;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1515704848,
          "answer_id": 48215800,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1515704848,
          "body_markdown": "This was the only thing that worked for me:\r\n\r\n    let textarea = document.createElement(&#39;textarea&#39;);\r\n    textarea.setAttribute(&#39;type&#39;, &#39;hidden&#39;);\r\n    textarea.textContent = &#39;the string you want to copy&#39;;\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    document.execCommand(&#39;copy&#39;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1516379429,
          "answer_id": 48345549,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1519901072,
          "last_edit_date": 1519901072,
          "body_markdown": "Using Javascript feature using try/catch you can even have better error handling in doing so like this.\r\n\r\n     copyToClipboard () {\r\n        let el = document.getElementById(&#39;Test&#39;).innerText\r\n        el.focus(); // el.select();\r\n        try {\r\n          var successful = document.execCommand(&#39;copy&#39;);\r\n          if (successful) {\r\n            console.log(&#39;Copied Successfully! Do whatever you want next&#39;);\r\n          } else {\r\n            throw(&#39;Unable to copy&#39;);\r\n          }\r\n        } catch (err) {\r\n          console.warn(&#39;Oops, Something went wrong &#39;, err);\r\n        }\r\n     }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1516920121,
          "answer_id": 48453096,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1518346462,
          "last_edit_date": 1518346462,
          "body_markdown": "Copy Text from HTML input to Clipboard\r\n\r\n&gt; &lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n \r\n&lt;!-- language: lang-js --&gt;\r\n \r\n     function myFunction() {\r\n      /* Get the text field */\r\n       var copyText = document.getElementById(&quot;myInput&quot;);\r\n \r\n       /* Select the text field */\r\n       copyText.select();\r\n\r\n       /* Copy the text inside the text field */\r\n       document.execCommand(&quot;Copy&quot;);\r\n \r\n       /* Alert the copied text */\r\n       alert(&quot;Copied the text: &quot; + copyText.value);\r\n     }\r\n \r\n&lt;!-- language: lang-html --&gt;\r\n \r\n     &lt;!-- The text field --&gt;\r\n     &lt;input type=&quot;text&quot; value=&quot;Hello Friend&quot; id=&quot;myInput&quot;&gt;\r\n \r\n     &lt;!-- The button used to copy the text --&gt;\r\n    &lt;button onclick=&quot;myFunction()&quot;&gt;Copy text&lt;/button&gt;\r\n \r\n&lt;!-- end snippet --&gt;\r\n \r\n&gt; **Note:** *The `document.execCommand()` method is not supported in IE9 and earlier.*\r\n\r\n**Source**: [W3Schools - *Copy Text to Clipboard*](https://www.w3schools.com/howto/howto_js_copy_clipboard.asp)"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1519647954,
          "answer_id": 48988506,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1519647954,
          "body_markdown": "Here&#39;s an elegant solution for Angular 5.x+:\r\n\r\nComponent:\r\n\r\n    import {\r\n      ChangeDetectionStrategy,\r\n      ChangeDetectorRef,\r\n      Component,\r\n      ElementRef,\r\n      EventEmitter,\r\n      Input,\r\n      OnInit,\r\n      Output,\r\n      Renderer2,\r\n      ViewChild\r\n    } from &#39;@angular/core&#39;;\r\n    \r\n    @Component({\r\n      selector: &#39;copy-to-clipboard&#39;,\r\n      templateUrl: &#39;./copy-to-clipboard.component.html&#39;,\r\n      styleUrls: [&#39;./copy-to-clipboard.component.scss&#39;],\r\n      changeDetection: ChangeDetectionStrategy.OnPush\r\n    })\r\n    \r\n    export class CopyToClipboardComponent implements OnInit {\r\n      @ViewChild(&#39;input&#39;) input: ElementRef;\r\n      @Input() size = &#39;md&#39;;\r\n      @Input() theme = &#39;complement&#39;;\r\n      @Input() content: string;\r\n      @Output() copied: EventEmitter&lt;string&gt; = new EventEmitter&lt;string&gt;();\r\n      @Output() error: EventEmitter&lt;string&gt; = new EventEmitter&lt;string&gt;();\r\n    \r\n      constructor(private renderer: Renderer2) {}\r\n    \r\n      ngOnInit() {}\r\n    \r\n      copyToClipboard() {\r\n    \r\n        const rootElement = this.renderer.selectRootElement(this.input.nativeElement);\r\n    \r\n        // iOS Safari blocks programmtic execCommand copying normally, without this hack.\r\n        // https://stackoverflow.com/questions/34045777/copy-to-clipboard-using-javascript-in-ios\r\n        if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\r\n    \r\n          this.renderer.setAttribute(this.input.nativeElement, &#39;contentEditable&#39;, &#39;true&#39;);\r\n    \r\n          const range = document.createRange();\r\n    \r\n          range.selectNodeContents(this.input.nativeElement);\r\n    \r\n          const sel = window.getSelection();\r\n    \r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n    \r\n          rootElement.setSelectionRange(0, 999999);\r\n        } else {\r\n          rootElement.select();\r\n        }\r\n    \r\n        try {\r\n          document.execCommand(&#39;copy&#39;);\r\n          this.copied.emit();\r\n        } catch (err) {\r\n          this.error.emit(err);\r\n        }\r\n      };\r\n    }\r\n\r\nTemplate:\r\n\r\n    &lt;button class=&quot;btn btn-{{size}} btn-{{theme}}&quot; type=&quot;button&quot; (click)=&quot;copyToClipboard()&quot;&gt;\r\n      &lt;ng-content&gt;&lt;/ng-content&gt;\r\n    &lt;/button&gt;\r\n    \r\n    &lt;input #input class=&quot;hidden-input&quot; [ngModel]=&quot;content&quot;&gt;\r\n\r\nStyles:\r\n\r\n    .hidden-input {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 1px; \r\n      height: 1px;\r\n      padding: 0;\r\n      border: 0;\r\n      box-shadow: none;\r\n      outline: none;\r\n      background: transparent;\r\n    }"
        }
      ],
      "title": "How do I copy to the clipboard in JavaScript?",
      "view_count": 1371960,
      "answer_count": 48,
      "code_snippet": [
        "<code>function copyToClipboard(text) {\n    if (window.clipboardData) { // Internet Explorer\n        window.clipboardData.setData(\"Text\", text);\n    } else {  \n        unsafeWindow.netscape.security.PrivilegeManager.enablePrivilege(\"UniversalXPConnect\");  \n        const clipboardHelper = Components.classes[\"@mozilla.org/widget/clipboardhelper;1\"].getService(Components.interfaces.nsIClipboardHelper);  \n        clipboardHelper.copyString(text);\n    }\n}\n</code>",
        "<code>unsafeWindow is not defined</code>",
        "<code>document.execCommand('copy')</code>",
        "<code>var copyTextareaBtn = document.querySelector('.js-textareacopybtn');\r\n\r\ncopyTextareaBtn.addEventListener('click', function(event) {\r\n  var copyTextarea = document.querySelector('.js-copytextarea');\r\n  copyTextarea.select();\r\n\r\n  try {\r\n    var successful = document.execCommand('copy');\r\n    var msg = successful ? 'successful' : 'unsuccessful';\r\n    console.log('Copying text command was ' + msg);\r\n  } catch (err) {\r\n    console.log('Oops, unable to copy');\r\n  }\r\n});</code>",
        "<code>&lt;p&gt;\r\n  &lt;button class=\"js-textareacopybtn\" style=\"vertical-align:top;\"&gt;Copy Textarea&lt;/button&gt;\r\n  &lt;textarea class=\"js-copytextarea\"&gt;Hello I'm some text&lt;/textarea&gt;\r\n&lt;/p&gt;</code>",
        "<code>textarea</code>",
        "<code>input</code>",
        "<code>input</code>",
        "<code>textarea</code>",
        "<code>function copyTextToClipboard(text) {\r\n  var textArea = document.createElement(\"textarea\");\r\n\r\n  //\r\n  // *** This styling is an extra step which is likely not required. ***\r\n  //\r\n  // Why is it here? To ensure:\r\n  // 1. the element is able to have focus and selection.\r\n  // 2. if element was to flash render it has minimal visual impact.\r\n  // 3. less flakyness with selection and copying which **might** occur if\r\n  //    the textarea element is not visible.\r\n  //\r\n  // The likelihood is the element won't even render, not even a flash,\r\n  // so some of these are just precautions. However in IE the element\r\n  // is visible whilst the popup box asking the user for permission for\r\n  // the web page to copy to the clipboard.\r\n  //\r\n\r\n  // Place in top-left corner of screen regardless of scroll position.\r\n  textArea.style.position = 'fixed';\r\n  textArea.style.top = 0;\r\n  textArea.style.left = 0;\r\n\r\n  // Ensure it has a small width and height. Setting to 1px / 1em\r\n  // doesn't work as this gives a negative w/h on some browsers.\r\n  textArea.style.width = '2em';\r\n  textArea.style.height = '2em';\r\n\r\n  // We don't need padding, reducing the size if it does flash render.\r\n  textArea.style.padding = 0;\r\n\r\n  // Clean up any borders.\r\n  textArea.style.border = 'none';\r\n  textArea.style.outline = 'none';\r\n  textArea.style.boxShadow = 'none';\r\n\r\n  // Avoid flash of white box if rendered for any reason.\r\n  textArea.style.background = 'transparent';\r\n\r\n\r\n  textArea.value = text;\r\n\r\n  document.body.appendChild(textArea);\r\n\r\n  textArea.select();\r\n\r\n  try {\r\n    var successful = document.execCommand('copy');\r\n    var msg = successful ? 'successful' : 'unsuccessful';\r\n    console.log('Copying text command was ' + msg);\r\n  } catch (err) {\r\n    console.log('Oops, unable to copy');\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\n\r\n\r\nvar copyBobBtn = document.querySelector('.js-copy-bob-btn'),\r\n  copyJaneBtn = document.querySelector('.js-copy-jane-btn');\r\n\r\ncopyBobBtn.addEventListener('click', function(event) {\r\n  copyTextToClipboard('Bob');\r\n});\r\n\r\n\r\ncopyJaneBtn.addEventListener('click', function(event) {\r\n  copyTextToClipboard('Jane');\r\n});</code>",
        "<code>&lt;div style=\"display:inline-block; vertical-align:top;\"&gt;\r\n  &lt;button class=\"js-copy-bob-btn\"&gt;Set clipboard to BOB&lt;/button&gt;&lt;br /&gt;&lt;br /&gt;\r\n  &lt;button class=\"js-copy-jane-btn\"&gt;Set clipboard to JANE&lt;/button&gt;\r\n&lt;/div&gt;\r\n&lt;div style=\"display:inline-block;\"&gt;\r\n  &lt;textarea class=\"js-test-textarea\" cols=\"35\" rows=\"4\"&gt;Try pasting into here to see what you have on your clipboard:\r\n  \r\n  &lt;/textarea&gt;\r\n&lt;/div&gt;</code>",
        "<code>document.execCommand('copy')</code>",
        "<code>document.queryCommandSupported('copy')</code>",
        "<code>true</code>",
        "<code>document.queryCommandEnabled('copy')</code>",
        "<code>true</code>",
        "<code>document.execCommand('copy')</code>",
        "<code>true</code>",
        "<code>document.queryCommandSupported('copy')</code>",
        "<code>document.execCommand('copy')</code>",
        "<code>try</code>",
        "<code>catch</code>",
        "<code>document.execCommand</code>",
        "<code>document.queryCommandSupported</code>",
        "<code>document.queryCommandEnabled</code>",
        "<code>try</code>",
        "<code>catch</code>",
        "<code>false</code>",
        "<code>var str = \"word\";</code>",
        "<code>&lt;textarea&gt;</code>",
        "<code>document.body</code>",
        "<code>copyTextarea</code>",
        "<code>function copyToClipboard(text) {\n  window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", text);\n}\n</code>",
        "<code>&lt;button id=\"demo\" onclick=\"copyToClipboard(document.getElementById('demo').innerHTML)\"&gt;This is what I want to copy&lt;/button&gt;\r\n\r\n&lt;script&gt;\r\n  function copyToClipboard(text) {\r\n    window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", text);\r\n  }\r\n&lt;/script&gt;</code>",
        "<code>// Copies a string to the clipboard. Must be called from within an \n// event handler such as click. May return false if it failed, but\n// this is not always possible. Browser support for Chrome 43+, \n// Firefox 42+, Safari 10+, Edge and IE 10+.\n// IE: The clipboard feature may be disabled by an administrator. By\n// default a prompt is shown the first time the clipboard is \n// used (per session).\nfunction copyToClipboard(text) {\n    if (window.clipboardData &amp;&amp; window.clipboardData.setData) {\n        // IE specific code path to prevent textarea being shown while dialog is visible.\n        return clipboardData.setData(\"Text\", text); \n\n    } else if (document.queryCommandSupported &amp;&amp; document.queryCommandSupported(\"copy\")) {\n        var textarea = document.createElement(\"textarea\");\n        textarea.textContent = text;\n        textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in MS Edge.\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n            return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\n        } catch (ex) {\n            console.warn(\"Copy to clipboard failed.\", ex);\n            return false;\n        } finally {\n            document.body.removeChild(textarea);\n        }\n    }\n}\n</code>",
        "<code>&lt;object \n   classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\"\n   width=\"110\"\n   height=\"14\"\n   id=\"clippy\"&gt;\n  &lt;param name=\"movie\" value=\"/flash/clippy.swf\"/&gt;\n  &lt;param name=\"allowScriptAccess\" value=\"always\"/&gt;\n  &lt;param name=\"quality\" value=\"high\"/&gt;\n  &lt;param name=\"scale\" value=\"noscale\"/&gt;\n  &lt;param NAME=\"FlashVars\" value=\"text=#{text}\"/&gt;\n  &lt;param name=\"bgcolor\" value=\"#{bgcolor}\"/&gt;\n  &lt;embed \n     src=\"/flash/clippy.swf\"\n     width=\"110\"\n     height=\"14\"\n     name=\"clippy\"\n     quality=\"high\"\n     allowScriptAccess=\"always\"\n     type=\"application/x-shockwave-flash\"\n     pluginspage=\"http://www.macromedia.com/go/getflashplayer\"\n     FlashVars=\"text=#{text}\"\n     bgcolor=\"#{bgcolor}\"/&gt;\n&lt;/object&gt;\n</code>",
        "<code>#{text}</code>",
        "<code>#{bgcolor}</code>",
        "<code>    &lt;script type=\"text/javascript\"&gt;\r\n        function select_all(obj) {\r\n            var text_val=eval(obj);\r\n            text_val.focus();\r\n            text_val.select();\r\n            if (!r.execCommand) return; // feature detection\r\n            r = text_val.createTextRange();\r\n            r.execCommand('copy');\r\n        }\r\n    &lt;/script&gt;\r\n    &lt;input value=\"http://www.sajithmr.com\"\r\n     onclick=\"select_all(this)\" name=\"url\" type=\"text\" /&gt;</code>",
        "<code>execCommand(\\\\’copy\\\\’);</code>",
        "<code>if(!document.all)</code>",
        "<code>if(!r.execCommand)</code>",
        "<code>var isIe = (navigator.userAgent.toLowerCase().indexOf(\"msie\") != -1 \n           || navigator.userAgent.toLowerCase().indexOf(\"trident\") != -1);\n\ndocument.addEventListener('copy', function(e) {\n    var textToPutOnClipboard = \"This is some text\";\n    if (isIe) {\n        window.clipboardData.setData('Text', textToPutOnClipboard);    \n    } else {\n        e.clipboardData.setData('text/plain', textToPutOnClipboard);\n    }\n    e.preventDefault();\n});\n</code>",
        "<code>window.clipboardData\n</code>",
        "<code>document.execCommand('copy');\n</code>",
        "<code>&lt;button id='markup-copy'&gt;Copy Button&lt;/button&gt;\n\n&lt;script&gt;\ndocument.getElementById('markup-copy').addEventListener('click', function() {\n  clipboard.copy({\n    'text/plain': 'Markup text. Paste me into a rich text editor.',\n    'text/html': '&lt;i&gt;here&lt;/i&gt; is some &lt;b&gt;rich text&lt;/b&gt;'\n  }).then(\n    function(){console.log('success'); },\n    function(err){console.log('failure', err);\n  });\n\n});\n&lt;/script&gt;\n</code>",
        "<code>&lt;div id=\"copy\" data-clipboard-text=\"Copy Me!\"&gt;Click to copy&lt;/div&gt;    \n&lt;script src=\"ZeroClipboard.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var clip = new ZeroClipboard( document.getElementById('copy') );\n&lt;/script&gt;\n</code>",
        "<code>clip.on( 'noflash', function ( client, args ) {\n    $(\"#copy\").click(function(){            \n        var txt = $(this).attr('data-clipboard-text');\n        prompt (\"Copy link, then click OK.\", txt);\n    });\n});  \n</code>",
        "<code>src</code>",
        "<code>text()</code>",
        "<code>innerHTML()</code>",
        "<code>innerHTML</code>",
        "<code>92KB</code>",
        "<code>1 KB/s</code>",
        "<code>   function EnybyClipboard() {\n     this.saveSelection = false;\n     this.callback = false;\n     this.pastedText = false;\n\n     this.restoreSelection = function() {\n       if (this.saveSelection) {\n         window.getSelection().removeAllRanges();\n         for (var i = 0; i &lt; this.saveSelection.length; i++) {\n           window.getSelection().addRange(this.saveSelection[i]);\n         }\n         this.saveSelection = false;\n       }\n     };\n\n     this.copyText = function(text) {\n       var div = $('special_copy');\n       if (!div) {\n         div = new Element('pre', {\n           'id': 'special_copy',\n           'style': 'opacity: 0;position: absolute;top: -10000px;right: 0;'\n         });\n         div.injectInside(document.body);\n       }\n       div.set('text', text);\n       if (document.createRange) {\n         var rng = document.createRange();\n         rng.selectNodeContents(div);\n         this.saveSelection = [];\n         var selection = window.getSelection();\n         for (var i = 0; i &lt; selection.rangeCount; i++) {\n           this.saveSelection[i] = selection.getRangeAt(i);\n         }\n         window.getSelection().removeAllRanges();\n         window.getSelection().addRange(rng);\n         setTimeout(this.restoreSelection.bind(this), 100);\n       } else return alert('Copy not work. :(');\n     };\n\n     this.getPastedText = function() {\n       if (!this.pastedText) alert('Nothing to paste. :(');\n       return this.pastedText;\n     };\n\n     this.pasteText = function(callback) {\n       var div = $('special_paste');\n       if (!div) {\n         div = new Element('textarea', {\n           'id': 'special_paste',\n           'style': 'opacity: 0;position: absolute;top: -10000px;right: 0;'\n         });\n         div.injectInside(document.body);\n         div.addEvent('keyup', function() {\n           if (this.callback) {\n             this.pastedText = $('special_paste').get('value');\n             this.callback.call(null, this.pastedText);\n             this.callback = false;\n             this.pastedText = false;\n             setTimeout(this.restoreSelection.bind(this), 100);\n           }\n         }.bind(this));\n       }\n       div.set('value', '');\n       if (document.createRange) {\n         var rng = document.createRange();\n         rng.selectNodeContents(div);\n         this.saveSelection = [];\n         var selection = window.getSelection();\n         for (var i = 0; i &lt; selection.rangeCount; i++) {\n           this.saveSelection[i] = selection.getRangeAt(i);\n         }\n         window.getSelection().removeAllRanges();\n         window.getSelection().addRange(rng);\n         div.focus();\n         this.callback = callback;\n       } else return alert('Fail to paste. :(');\n     };\n   }\n</code>",
        "<code>enyby_clip = new EnybyClipboard(); //init \n\nenyby_clip.copyText('some_text'); // place this in CTRL+C handler and return true;\n\nenyby_clip.pasteText(function callback(pasted_text) {\n        alert(pasted_text);\n}); // place this in CTRL+V handler and return true;\n</code>",
        "<code>// create an editable DIV and append the HTML content you want copied\nvar editableDiv = document.createElement(\"div\");\nwith (editableDiv) {\n    contentEditable = true;\n}     \neditableDiv.appendChild(someContentElement);          \n\n// select the editable content and copy it to the clipboard\nvar r = document.body.createTextRange();\nr.moveToElementText(editableDiv);\nr.select();  \nr.execCommand(\"Copy\");\n\n// deselect, so the browser doesn't leave the element visibly selected\nr.moveToElementText(someHiddenDiv);\nr.select();   \n</code>",
        "<code>function selectElementContents(el) \r\n{\r\n    // Copy textarea, pre, div, etc.\r\n\tif (document.body.createTextRange) {\r\n        // IE \r\n        var textRange = document.body.createTextRange();\r\n        textRange.moveToElementText(el);\r\n        textRange.select();\r\n        textRange.execCommand(\"Copy\");     \r\n    }\r\n\telse if (window.getSelection &amp;&amp; document.createRange) {\r\n        // non-IE\r\n        var range = document.createRange();\r\n        range.selectNodeContents(el);\r\n        var sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range); \r\n        try {  \r\n\t\t    var successful = document.execCommand('copy');  \r\n\t\t    var msg = successful ? 'successful' : 'unsuccessful';  \r\n\t\t    console.log('Copy command was ' + msg);  \r\n\t\t} catch(err) {  \r\n\t\t    console.log('Oops, unable to copy');  \r\n\t\t} \r\n    }\r\n} // end function selectElementContents(el) \r\n\r\nfunction make_copy_button(el)\r\n{\r\n\tvar copy_btn = document.createElement('input');\r\n\tcopy_btn.type = \"button\";\r\n\tel.parentNode.insertBefore(copy_btn, el.nextSibling);\r\n\tcopy_btn.onclick = function() { selectElementContents(el); };\r\n\t\r\n\tif (document.queryCommandSupported(\"copy\") || parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2]) &gt;= 42)\r\n\t{\r\n\t\t// Copy works with IE 4+, Chrome 42+, Firefox 41+, Opera 29+\r\n\t\tcopy_btn.value = \"Copy to Clipboard\";\r\n\t}\t\r\n\telse\r\n\t{\r\n\t\t// Select only for Safari and older Chrome, Firefox and Opera\r\n\t\tcopy_btn.value = \"Select All (then press CTRL+C to Copy)\";\r\n\t}\r\n}\r\n/* Note: document.queryCommandSupported(\"copy\") should return \"true\" on browsers that support copy\r\n\tbut there was a bug in Chrome versions 42 to 47 that makes it return \"false\".  So in those\r\n\tversions of Chrome feature detection does not work!\r\n\tSee https://code.google.com/p/chromium/issues/detail?id=476508\r\n*/\r\n\r\nmake_copy_button(document.getElementById(\"markup\"));</code>",
        "<code>&lt;pre id=\"markup\"&gt;\r\n  Text that can be copied or selected with cross browser support.\r\n&lt;/pre&gt;</code>",
        "<code>function copy(text) {\n    var input = document.createElement('input');\n    input.setAttribute('value', text);\n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input)\n}\n</code>",
        "<code>  &lt;!DOCTYPE html&gt;\r\n\r\n  &lt;style&gt;\r\n    #t {\r\n      width: 1px\r\n      height: 1px\r\n      border: none\r\n    }\r\n    #t:focus {\r\n      outline: none\r\n    }\r\n  &lt;/style&gt;\r\n\r\n  &lt;script&gt;\r\n    function copy(text) {\r\n      var t = document.getElementById('t')\r\n      t.innerHTML = text\r\n      t.select()\r\n      try {\r\n        var successful = document.execCommand('copy')\r\n        var msg = successful ? 'successfully' : 'unsuccessfully'\r\n        console.log('text coppied ' + msg)\r\n      } catch (err) {\r\n        console.log('Unable to copy text')\r\n      }\r\n      t.innerHTML = ''\r\n    }\r\n  &lt;/script&gt;\r\n\r\n  &lt;textarea id=t&gt;&lt;/textarea&gt;\r\n\r\n  &lt;button onclick=\"copy('hello world')\"&gt;\r\n    Click me\r\n  &lt;/button&gt;</code>",
        "<code>setSelectionRange</code>",
        "<code>    jQuery('#copy').on('click', function () {\n        copyToClipboard();\n    });\n\n    function copyToClipboard() {\n        var target = jQuery('#hidden_text');\n\n        // make it visible, so can be focused\n        target.attr('type', 'text');\n        target.focus();\n        // select all the text\n        target[0].setSelectionRange(0, target.val().length);\n\n        // copy the selection\n        var succeed;\n        try {\n            succeed = document.execCommand(\"copy\");\n        } catch (e) {\n            succeed = false;\n        }\n\n        // hide input again\n        target.attr('type', 'hidden');\n\n        return succeed;\n    }\n</code>",
        "<code>npm install clipboard --save\n</code>",
        "<code>bower install clipboard --save\n</code>",
        "<code>if (document.createRange) {\n    // IE9 and modern browsers\n    var r = document.createRange();\n    r.setStartBefore(to_copy);\n    r.setEndAfter(to_copy);\n    r.selectNode(to_copy);\n    var sel = window.getSelection();\n    sel.addRange(r);\n    document.execCommand('Copy');  // does nothing on FF\n} else {\n    // IE 8 and earlier.  This stuff won't work on IE9.\n    // (unless forced into a backward compatibility mode,\n    // or selecting plain divs, not img or table). \n    var r = document.body.createTextRange();\n    r.moveToElementText(to_copy);\n    r.select()\n    r.execCommand('Copy');\n}\n</code>",
        "<code>ng-clip</code>",
        "<code>function appCopyToClipBoard( sText )\n{\n var oText = false,\n     bResult = false;\n try\n {\n  oText = document.createElement(\"textarea\");\n  $(oText).addClass('clipboardCopier').val(sText).insertAfter('body').focus();\n  oText.select();\n  document.execCommand(\"Copy\");\n  bResult = true;\n } catch(e) {}\n\n $(oText).remove();\n return bResult;\n}\n</code>",
        "<code>if( !appCopyToClipBoard( 'Hai there! This is copied to the clipboard.' ))\n { alert('Sorry, copy to clipboard failed.'); }\n</code>",
        "<code>const copyToClipboard = (function initClipboardText() {\n  const id = 'copy-to-clipboard-helper';\n  const element = document.getElementById(id);\n  const textarea = element || document.createElement('textarea');\n\n  if (!element) {\n    textarea.id = id;\n    // Place in top-left corner of screen regardless of scroll position.\n    textarea.style.position = 'fixed';\n    textarea.style.top = 0;\n    textarea.style.left = 0;\n\n    // Ensure it has a small width and height. Setting to 1px / 1em\n    // doesn't work as this gives a negative w/h on some browsers.\n    textarea.style.width = '1px';\n    textarea.style.height = '1px';\n\n    // We don't need padding, reducing the size if it does flash render.\n    textarea.style.padding = 0;\n\n    // Clean up any borders.\n    textarea.style.border = 'none';\n    textarea.style.outline = 'none';\n    textarea.style.boxShadow = 'none';\n\n    // Avoid flash of white box if rendered for any reason.\n    textarea.style.background = 'transparent';\n\n    // Set to readonly to prevent mobile devices opening a keyboard when\n    // text is .select()'ed.\n    textarea.setAttribute('readonly', true);\n\n    document.body.appendChild(textarea);\n  }\n\n  return function setClipboardText(text) {\n    textarea.value = text;\n\n    // iOS Safari blocks programmtic execCommand copying normally, without this hack.\n    // https://stackoverflow.com/questions/34045777/copy-to-clipboard-using-javascript-in-ios\n    if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\n      const editable = textarea.contentEditable;\n      textarea.contentEditable = true;\n      const range = document.createRange();\n      range.selectNodeContents(textarea);\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n      textarea.setSelectionRange(0, 999999);\n      textarea.contentEditable = editable;\n    } else {\n      textarea.select();\n    }\n\n    try {\n      return document.execCommand('copy');\n    } catch (err) {\n      return false;\n    }\n  };\n}());\n</code>",
        "<code> \r\n function myFunction() {\r\n  /* Get the text field */\r\n   var copyText = document.getElementById(\"myInput\");\r\n \r\n   /* Select the text field */\r\n   copyText.select();\r\n\r\n   /* Copy the text inside the text field */\r\n   document.execCommand(\"Copy\");\r\n \r\n   /* Alert the copied text */\r\n   alert(\"Copied the text: \" + copyText.value);\r\n }\r\n </code>",
        "<code> \r\n &lt;!-- The text field --&gt;\r\n &lt;input type=\"text\" value=\"Hello Friend\" id=\"myInput\"&gt;\r\n \r\n &lt;!-- The button used to copy the text --&gt;\r\n&lt;button onclick=\"myFunction()\"&gt;Copy text&lt;/button&gt;\r\n </code>",
        "<code>document.execCommand()</code>",
        "<code>&lt;p&gt;\n    &lt;a onclick=\"window.clipboardData.setData('text', document.getElementById('Test').innerText);\"&gt;Copy&lt;/a&gt;\n&lt;/p&gt;\n</code>",
        "<code>    function copyToClipboard(sID) {\n        var aField = document.getElementById(\"hiddenField\");\n\n        aField.hidden   = false;\n        aField.value    = document.getElementById(sID).textContent;\n        aField.select();\n        document.execCommand(\"copy\");\n        alert(\"Following text has been copied to the clipboard.\\n\\n\" + aField.value);\n        aField.hidden = true;\n    }\n</code>",
        "<code>var copyToClipboard = function(textToCopy){\n    $(\"body\")\n        .append($('&lt;input type=\"text\" name=\"fname\" class=\"textToCopyInput\"/&gt;' )\n        .val(textToCopy))\n        .find(\".textToCopyInput\")\n        .select();\n      try {\n        var successful = document.execCommand('copy');\n        var msg = successful ? 'successful' : 'unsuccessful';\n        alert('Text copied to clipboard!');\n      } catch (err) {\n        window.prompt(\"To copy the text to clipboard: Ctrl+C, Enter\", textToCopy);\n      }\n     $(\".textToCopyInput\").remove();\n}\n</code>",
        "<code>.textToCopyInput{opacity: 0; position: absolute;}\n</code>",
        "<code>.append($('&lt;input type=\"text\" name=\"fname\" style=\"opacity: 0;  position: absolute;\" class=\"textToCopyInput\"/&gt;' )\n</code>",
        "<code>const</code>",
        "<code>var</code>",
        "<code>function clipBoard(sCommand) {\n  var oRange=contentDocument.createRange();\n  oRange.setStart(startNode, startOffset);\n  oRange.setEnd(endNode, endOffset);\n/* This is where the actual selection happens.\nin the above, startNode and endNode are dom nodes defining the beginning \nand end of the \"selection\" respectively. startOffset and endOffset are \nconstants that are defined as follows:\n\nEND_TO_END: 2\nEND_TO_START: 3\nNODE_AFTER: 1\nNODE_BEFORE: 0\nNODE_BEFORE_AND_AFTER: 2\nNODE_INSIDE: 3\nSTART_TO_END: 1\nSTART_TO_START: 0\n\nand would be used like oRange.START_TO_END */\n      switch(sCommand) {\n    case \"cut\":\n          this.oFragment=oRange.extractContents();\n      oRange.collapse();\n      break;\n    case \"copy\":\n      this.oFragment=oRange.cloneContents();\n      break;\n    case \"paste\":\n      oRange.deleteContents();\n      var cloneFragment=this.oFragment.cloneNode(true)\n      oRange.insertNode(cloneFragment);\n      oRange.collapse();\n      break;\n  }\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "bower"
      ],
      "creation_date": 1374775388,
      "body_markdown": "I run the following commands using bower 1.0.0:\r\n\r\n    mkdir testdir;cd testdir\r\n    bower init #accept defaults\r\n    bower install jquery -s  #the -s is supposed to cause update of bower.json\r\n    less bower.json\r\n\r\nIn bower.json I expect to see dependencies listed, but there are none.  What is going on?\r\n\r\nNOTE: `bower install jquery --save` does work\r\n\r\nNOTE:\r\nThe option I am referring to was documented through `bower help install`\r\n\r\n    **-S**, --save              Save installed packages into the project&#39;s bower.json dependencies\r\n\r\n\r\n",
      "last_edit_date": 1488345236,
      "up_vote_count": 235,
      "link": "https://stackoverflow.com/questions/17865487/bower-automatically-update-bower-json",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1377345213,
          "answer_id": 18418288,
          "path": "stack.bower.answer",
          "score": 367,
          "up_vote_count": 367,
          "is_accepted": true,
          "last_activity_date": 1377345213,
          "body_markdown": "from bower help, save option has a capital S\r\n\r\n    -S, --save  Save installed packages into the project&#39;s bower.json dependencies"
        }
      ],
      "title": "bower automatically update bower.json",
      "view_count": 103368,
      "answer_count": 1,
      "code_snippet": [
        "<code>mkdir testdir;cd testdir\nbower init #accept defaults\nbower install jquery -s  #the -s is supposed to cause update of bower.json\nless bower.json\n</code>",
        "<code>bower install jquery --save</code>",
        "<code>bower help install</code>",
        "<code>**-S**, --save              Save installed packages into the project's bower.json dependencies\n</code>",
        "<code>bower help install</code>",
        "<code>--save</code>",
        "<code>--save-dev</code>",
        "<code>bower help install</code>",
        "<code>-s</code>",
        "<code>--save</code>",
        "<code>-S, --save  Save installed packages into the project's bower.json dependencies\n</code>",
        "<code>bower uninstall &lt;package name&gt;</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "base64"
      ],
      "creation_date": 1273677900,
      "body_markdown": "Are there any methods in JavaScript that could be used to encode and decode a string using base64 encoding?",
      "last_edit_date": 1395761204,
      "up_vote_count": 185,
      "link": "https://stackoverflow.com/questions/2820249/base64-encoding-and-decoding-in-client-side-javascript",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1273678450,
          "answer_id": 2820329,
          "path": "stack.bower.answer",
          "score": 153,
          "up_vote_count": 154,
          "is_accepted": true,
          "last_activity_date": 1392377716,
          "last_edit_date": 1495540037,
          "body_markdown": "Some browsers such as Firefox, Chrome, Safari, Opera and IE10+ can handle Base64 natively. Take a look at this [Stackoverflow question][1]. It&#39;s using [`btoa()` and `atob()` functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding).\r\n\r\nFor server-side JavaScript, there&#39;s a [btoa package for Node.JS](https://npmjs.org/package/btoa).\r\n\r\nIf you are going for a cross-browser solution, there are existing libraries like [CryptoJS](https://code.google.com/p/crypto-js/#Encoders) or code like:\r\n\r\nhttp://ntt.cc/2008/01/19/base64-encoder-decoder-with-javascript.html\r\n\r\nWith the latter, you need to thoroughly test the function for cross browser compatibility. And error [has already been reported](https://stackoverflow.com/a/14596140/1269037).\r\n\r\n\r\n[1]: https://stackoverflow.com/questions/246801/how-can-you-encode-to-base64-using-javascript/247261#247261"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1273712232,
          "answer_id": 2823832,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1273712232,
          "body_markdown": "The [php.js](http://phpjs.org/) project has JavaScript implementations of many of PHP&#39;s functions. `base64_encode` and `base64_decode` are included."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1276750662,
          "answer_id": 3058974,
          "path": "stack.bower.answer",
          "score": 26,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1410715141,
          "last_edit_date": 1410715141,
          "body_markdown": "Short and fast Base64 JavaScript Decode Function without Failsafe:\r\n\r\n    function decode_base64 (s)\r\n    {\r\n        var e = {}, i, k, v = [], r = &#39;&#39;, w = String.fromCharCode;\r\n        var n = [[65, 91], [97, 123], [48, 58], [43, 44], [47, 48]];\r\n    \r\n        for (z in n)\r\n        {\r\n            for (i = n[z][0]; i &lt; n[z][1]; i++)\r\n            {\r\n                v.push(w(i));\r\n            }\r\n        }\r\n        for (i = 0; i &lt; 64; i++)\r\n        {\r\n            e[v[i]] = i;\r\n        }\r\n    \r\n        for (i = 0; i &lt; s.length; i+=72)\r\n        {\r\n            var b = 0, c, x, l = 0, o = s.substring(i, i+72);\r\n        \tfor (x = 0; x &lt; o.length; x++)\r\n            {\r\n        \t    c = e[o.charAt(x)];\r\n                b = (b &lt;&lt; 6) + c;\r\n                l += 6;\r\n        \t    while (l &gt;= 8)\r\n                {\r\n                    r += w((b &gt;&gt;&gt; (l -= 8)) % 256);\r\n                }\r\n        \t }\r\n        }\r\n        return r;\r\n    }\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1295097098,
          "answer_id": 4699739,
          "path": "stack.bower.answer",
          "score": 59,
          "up_vote_count": 60,
          "is_accepted": false,
          "last_activity_date": 1350979853,
          "last_edit_date": 1495541433,
          "body_markdown": "In Gecko/WebKit-based browsers (Firefox, Chrome and Safari) and Opera, you can use [btoa()](https://developer.mozilla.org/En/DOM/Window.btoa) and [atob()](https://developer.mozilla.org/en/DOM/window.atob).\r\n\r\nOriginal answer: https://stackoverflow.com/questions/246801/how-can-you-encode-to-base64-using-javascript/247261#247261"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1301319561,
          "answer_id": 5459811,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 12,
          "is_accepted": false,
          "last_activity_date": 1301319561,
          "body_markdown": "Here is best way to base64_encode and base64_decode using javascript. See below links.\r\n\r\nhttp://phpjs.org/functions/base64_encode:358\r\n\r\nhttp://phpjs.org/functions/base64_decode:357"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1359516150,
          "answer_id": 14596140,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1359516150,
          "body_markdown": "\r\nI have tried the Javascript routines at phpjs.org and they have worked well.\r\n\r\nI first tried the routines suggested in the chosen answer by Ranhiru Cooray -  http://ntt.cc/2008/01/19/base64-encoder-decoder-with-javascript.html\r\n\r\nI found that they did not work in all circumstances.   I wrote up a test case where these routines fail and posted them to GitHub at:\r\n\r\nhttps://github.com/scottcarter/base64_javascript_test_data.git\r\n\r\nI also posted a comment to the blog post at ntt.cc to alert the author (awaiting moderation - the article is old so not sure if comment will get posted).\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1361505672,
          "answer_id": 15016605,
          "path": "stack.bower.answer",
          "score": 33,
          "up_vote_count": 34,
          "is_accepted": false,
          "last_activity_date": 1361676340,
          "last_edit_date": 1361676340,
          "body_markdown": "Here is a tightened up version of Sniper&#39;s post. It presumes well formed base64 string with no carriage returns. This version eliminates a couple of loops, adds the `&amp;0xff` fix from Yaroslav, eliminates trailing nulls, plus a bit of code golf.\r\n\r\n    decodeBase64 = function(s) {\r\n    \tvar e={},i,b=0,c,x,l=0,a,r=&#39;&#39;,w=String.fromCharCode,L=s.length;\r\n\t\tvar A=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;;\r\n\t\tfor(i=0;i&lt;64;i++){e[A.charAt(i)]=i;}\r\n\t\tfor(x=0;x&lt;L;x++){\r\n\t\t\tc=e[s.charAt(x)];b=(b&lt;&lt;6)+c;l+=6;\r\n\t\t\twhile(l&gt;=8){((a=(b&gt;&gt;&gt;(l-=8))&amp;0xff)||(x&lt;(L-2)))&amp;&amp;(r+=w(a));}\r\n\t\t}\r\n\t\treturn r;\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1384671964,
          "answer_id": 20028158,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1384671964,
          "body_markdown": "I&#39;d rather use the bas64 encode/decode methods from [CryptoJS](https://code.google.com/p/crypto-js/#Encoders), the most popular library for standard and secure cryptographic algorithms implemented in JavaScript using best practices and patterns."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1391874597,
          "answer_id": 21648093,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1391874597,
          "body_markdown": "Did someone say code golf? =)\r\n\r\nThe following is my attempt at improving my handicap while catching up with the times. Supplied for your convenience.\r\n\r\n    function decode_base64(s) {\r\n      var b=l=0, r=&#39;&#39;,\r\n      m=&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#39;.split(&#39;&#39;);\r\n      s.split(&#39;&#39;).forEach(function (v) {\r\n        b=(b&lt;&lt;6)+m.indexOf(v); l+=6;\r\n        while (l&gt;=8) r+=String.fromCharCode((b&gt;&gt;&gt;(l-=8))&amp;0xff);\r\n      });\r\n      return r;\r\n    }\r\n\r\nWhat I was actually after was an asynchronous implementation and to my surprise it turns out `forEach` as opposed to JQuery&#39;s `$([]).each` method implementation is very much synchronous.\r\n\r\nIf you also had such crazy notions in mind a 0 delay `window.setTimeout` will run the base64 decode asynchronously and execute the callback function with the result when done.\r\n\r\n    function decode_base64_async(s, cb) {\r\n      setTimeout(function () { cb(decode_base64(s)); }, 0);\r\n    }\r\n \r\n`forEach` is ECMA-262 standard 5th edition and should you care about retarded browsers you may wish to [poly-fill the functionality](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Polyfill) to nudge them along or alternatively you could also emplore something like the [ECMAScript 6 Harmony](https://github.com/monolithed/ECMAScript-6) project which will accomplish the full ES5 to ES6 transition for you.\r\n\r\nIf however you were looking for something a little more traditional perhaps the following is more to your taste.\r\n\r\n    function decode_base64(s) {\r\n      var b=l=0, r=&#39;&#39;, s=s.split(&#39;&#39;), i,\r\n      m=&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#39;.split(&#39;&#39;);\r\n      for (i in s) {\r\n        b=(b&lt;&lt;6)+m.indexOf(s[i]); l+=6;\r\n        while (l&gt;=8) r+=String.fromCharCode((b&gt;&gt;&gt;(l-=8))&amp;0xff);\r\n      }\r\n      return r;\r\n    }\r\n\r\nI didn&#39;t have the trailing null issue so this was removed to remain under par but it should easily be resolved with a `trim()` or a `trimRight()` if you&#39;d prefer, should this pose a problem for you.\r\n\r\nie.\r\n\r\n    return r.trimRight();\r\n\r\nnJoy!\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1410749370,
          "answer_id": 25840184,
          "path": "stack.bower.answer",
          "score": 34,
          "up_vote_count": 34,
          "is_accepted": false,
          "last_activity_date": 1477459013,
          "last_edit_date": 1477459013,
          "body_markdown": "## Internet Explorer 10+\r\n\r\n    // Define the string\r\n    var string = &#39;Hello World!&#39;;\r\n\r\n    // Encode the String\r\n    var encodedString = btoa(string);\r\n    console.log(encodedString); // Outputs: &quot;SGVsbG8gV29ybGQh&quot;\r\n\r\n    // Decode the String\r\n    var decodedString = atob(encodedString);\r\n    console.log(decodedString); // Outputs: &quot;Hello World!&quot;\r\n\r\n---\r\n\r\n## Cross-Browser\r\n\r\n[Re-written and modularized UTF-8 and Base64 Javascript Encoding and Decoding Libraries / Modules for AMD, CommonJS, Nodejs and Browsers. Cross-browser compatible.](https://gist.github.com/Nijikokun/5192472)\r\n\r\n---\r\n\r\n## with Node.js\r\n\r\nHere is how you encode normal text to base64 in Node.js:\r\n\r\n    //Buffer() requires a number, array or string as the first parameter, and an optional encoding type as the second parameter. \r\n    // Default is utf8, possible encoding types are ascii, utf8, ucs2, base64, binary, and hex\r\n    var b = new Buffer(&#39;JavaScript&#39;);\r\n    // If we don&#39;t use toString(), JavaScript assumes we want to convert the object to utf8.\r\n    // We can make it convert to other formats by passing the encoding type to toString().\r\n    var s = b.toString(&#39;base64&#39;);\r\n\r\nAnd here is how you decode base64 encoded strings:\r\n\r\n    var b = new Buffer(&#39;SmF2YVNjcmlwdA==&#39;, &#39;base64&#39;)\r\n    var s = b.toString();\r\n\r\n---\r\n\r\n## with Dojo.js\r\n\r\nTo encode an array of bytes using dojox.encoding.base64:\r\n\r\n    var str = dojox.encoding.base64.encode(myByteArray);\r\n\r\nTo decode a base64-encoded string:\r\n\r\n    var bytes = dojox.encoding.base64.decode(str)\r\n\r\n---\r\n\r\n## bower install angular-base64\r\n\r\n    &lt;script src=&quot;bower_components/angular-base64/angular-base64.js&quot;&gt;&lt;/script&gt;\r\n\r\n    angular\r\n        .module(&#39;myApp&#39;, [&#39;base64&#39;])\r\n        .controller(&#39;myController&#39;, [\r\n    \r\n        &#39;$base64&#39;, &#39;$scope&#39;, \r\n        function($base64, $scope) {\r\n        \r\n            $scope.encoded = $base64.encode(&#39;a string&#39;);\r\n            $scope.decoded = $base64.decode(&#39;YSBzdHJpbmc=&#39;);\r\n    }]);\r\n\r\n---\r\n\r\n### But How?\r\n\r\nIf you would like to learn more about how base64 is encoded in general, and in JavaScript in-particular, I would recommend this article:  [Computer science in JavaScript: Base64 encoding](https://www.nczonline.net/blog/2009/12/08/computer-science-in-javascript-base64-encoding/)\r\n  [1]: http://jsfiddle.net/gabrieleromanato/qAGHT/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1428993845,
          "answer_id": 29620799,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1428993845,
          "body_markdown": "\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function b64_to_utf8( str ) {\r\n      return decodeURIComponent(escape(window.atob( str )));\r\n    }\r\n\r\n     https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1511870066,
          "answer_id": 47530978,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1511870066,
          "body_markdown": "In Node.js we can do it in simple way \r\n\r\n    var base64 = &#39;SGVsbG8gV29ybGQ=&#39;\r\n    var base64_decode = new Buffer(base64, &#39;base64&#39;).toString(&#39;ascii&#39;);\r\n    \r\n    console.log(base64_decode); // &quot;Hello World&quot;\r\n\r\n"
        }
      ],
      "title": "Base64 encoding and decoding in client-side Javascript",
      "view_count": 450702,
      "answer_count": 12,
      "code_snippet": [
        "<code>btoa()</code>",
        "<code>atob()</code>",
        "<code>new Buffer('Hello, world!').toString('base64');</code>",
        "<code>new Buffer('SGVsbG8sIHdvcmxkIQ==', 'base64').toString('ascii');</code>",
        "<code>// Define the string\nvar string = 'Hello World!';\n\n// Encode the String\nvar encodedString = btoa(string);\nconsole.log(encodedString); // Outputs: \"SGVsbG8gV29ybGQh\"\n\n// Decode the String\nvar decodedString = atob(encodedString);\nconsole.log(decodedString); // Outputs: \"Hello World!\"\n</code>",
        "<code>//Buffer() requires a number, array or string as the first parameter, and an optional encoding type as the second parameter. \n// Default is utf8, possible encoding types are ascii, utf8, ucs2, base64, binary, and hex\nvar b = new Buffer('JavaScript');\n// If we don't use toString(), JavaScript assumes we want to convert the object to utf8.\n// We can make it convert to other formats by passing the encoding type to toString().\nvar s = b.toString('base64');\n</code>",
        "<code>var b = new Buffer('SmF2YVNjcmlwdA==', 'base64')\nvar s = b.toString();\n</code>",
        "<code>var str = dojox.encoding.base64.encode(myByteArray);\n</code>",
        "<code>var bytes = dojox.encoding.base64.decode(str)\n</code>",
        "<code>&lt;script src=\"bower_components/angular-base64/angular-base64.js\"&gt;&lt;/script&gt;\n\nangular\n    .module('myApp', ['base64'])\n    .controller('myController', [\n\n    '$base64', '$scope', \n    function($base64, $scope) {\n\n        $scope.encoded = $base64.encode('a string');\n        $scope.decoded = $base64.decode('YSBzdHJpbmc=');\n}]);\n</code>",
        "<code>c2</code>",
        "<code>c1</code>",
        "<code>c3</code>",
        "<code>\"use strict\"</code>",
        "<code>&amp;0xff</code>",
        "<code>decodeBase64 = function(s) {\n    var e={},i,b=0,c,x,l=0,a,r='',w=String.fromCharCode,L=s.length;\n    var A=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    for(i=0;i&lt;64;i++){e[A.charAt(i)]=i;}\n    for(x=0;x&lt;L;x++){\n        c=e[s.charAt(x)];b=(b&lt;&lt;6)+c;l+=6;\n        while(l&gt;=8){((a=(b&gt;&gt;&gt;(l-=8))&amp;0xff)||(x&lt;(L-2)))&amp;&amp;(r+=w(a));}\n    }\n    return r;\n};\n</code>",
        "<code>decodeBase64=function(f){var g={},b=65,d=0,a,c=0,h,e=\"\",k=String.fromCharCode,l=f.length;for(a=\"\";91&gt;b;)a+=k(b++);a+=a.toLowerCase()+\"0123456789+/\";for(b=0;64&gt;b;b++)g[a.charAt(b)]=b;for(a=0;a&lt;l;a++)for(b=g[f.charAt(a)],d=(d&lt;&lt;6)+b,c+=6;8&lt;=c;)((h=d&gt;&gt;&gt;(c-=8)&amp;255)||a&lt;l-2)&amp;&amp;(e+=k(h));return e};</code>",
        "<code>var g={},k=String.fromCharCode,i;for(i=0;i&lt;64;)g[k(i&gt;61?(i&amp;1)*4|43:i+[65,71,-4][i/26&amp;3])]=i++;</code>",
        "<code>function decode_base64 (s)\n{\n    var e = {}, i, k, v = [], r = '', w = String.fromCharCode;\n    var n = [[65, 91], [97, 123], [48, 58], [43, 44], [47, 48]];\n\n    for (z in n)\n    {\n        for (i = n[z][0]; i &lt; n[z][1]; i++)\n        {\n            v.push(w(i));\n        }\n    }\n    for (i = 0; i &lt; 64; i++)\n    {\n        e[v[i]] = i;\n    }\n\n    for (i = 0; i &lt; s.length; i+=72)\n    {\n        var b = 0, c, x, l = 0, o = s.substring(i, i+72);\n        for (x = 0; x &lt; o.length; x++)\n        {\n            c = e[o.charAt(x)];\n            b = (b &lt;&lt; 6) + c;\n            l += 6;\n            while (l &gt;= 8)\n            {\n                r += w((b &gt;&gt;&gt; (l -= 8)) % 256);\n            }\n         }\n    }\n    return r;\n}\n</code>",
        "<code>base64_encode</code>",
        "<code>base64_decode</code>",
        "<code>phpjs</code>",
        "<code>function b64_to_utf8( str ) {\r\n  return decodeURIComponent(escape(window.atob( str )));\r\n}\r\n\r\n https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22</code>",
        "<code>function decode_base64(s) {\n  var b=l=0, r='',\n  m='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n  s.split('').forEach(function (v) {\n    b=(b&lt;&lt;6)+m.indexOf(v); l+=6;\n    while (l&gt;=8) r+=String.fromCharCode((b&gt;&gt;&gt;(l-=8))&amp;0xff);\n  });\n  return r;\n}\n</code>",
        "<code>forEach</code>",
        "<code>$([]).each</code>",
        "<code>window.setTimeout</code>",
        "<code>function decode_base64_async(s, cb) {\n  setTimeout(function () { cb(decode_base64(s)); }, 0);\n}\n</code>",
        "<code>forEach</code>",
        "<code>function decode_base64(s) {\n  var b=l=0, r='', s=s.split(''), i,\n  m='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n  for (i in s) {\n    b=(b&lt;&lt;6)+m.indexOf(s[i]); l+=6;\n    while (l&gt;=8) r+=String.fromCharCode((b&gt;&gt;&gt;(l-=8))&amp;0xff);\n  }\n  return r;\n}\n</code>",
        "<code>trim()</code>",
        "<code>trimRight()</code>",
        "<code>return r.trimRight();\n</code>",
        "<code>split</code>",
        "<code>s.split('').forEach(function ...</code>",
        "<code>[].forEach.call(s, function ...</code>",
        "<code>var base64 = 'SGVsbG8gV29ybGQ='\nvar base64_decode = new Buffer(base64, 'base64').toString('ascii');\n\nconsole.log(base64_decode); // \"Hello World\"\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "c#",
        "anonymous-types"
      ],
      "creation_date": 1223641232,
      "body_markdown": "Is it possible to have an anonymous type implement an interface. I&#39;ve got a piece of code that I would like to work, but don&#39;t know how to do this.\r\n\r\nI&#39;ve had a couple of answers that either say no, or create a class that implements the interface construct new instances of that. This isn&#39;t really ideal, but I&#39;m wondering if there is a mechanism to create a thin dynamic class on top of an interface which would make this simple.\r\n\r\n    public interface DummyInterface\r\n    {\r\n        string A { get; }\r\n        string B { get; }\r\n    }\r\n\r\n    public class DummySource\r\n    {\r\n        public string A { get; set; }\r\n        public string C { get; set; }\r\n        public string D { get; set; }\r\n    }\r\n\r\n    public class Test\r\n    {\r\n        public void WillThisWork()\r\n        {\r\n            var source = new DummySource[0];\r\n            var values = from value in source\r\n                         select new\r\n                         {\r\n                             A = value.A,\r\n                             B = value.C + &quot;_&quot; + value.D\r\n                         };\r\n\r\n            DoSomethingWithDummyInterface(values);\r\n\r\n        }\r\n\r\n        public void DoSomethingWithDummyInterface(IEnumerable&lt;DummyInterface&gt; values)\r\n        {\r\n            foreach (var value in values)\r\n            {\r\n                Console.WriteLine(&quot;A = &#39;{0}&#39;, B = &#39;{1}&#39;&quot;, value.A, value.B);\r\n            }\r\n        }\r\n    }\r\n\r\nI&#39;ve found an article [Dynamic interface wrapping][1] that describes one approach. Is this the best way of doing this?\r\n\r\n\r\n  [1]: http://channel8.msdn.com/Posts/Adding-some-dynamic-to-C-interface-wrapping/",
      "last_edit_date": 1245687368,
      "up_vote_count": 366,
      "link": "https://stackoverflow.com/questions/191013/can-a-c-anonymous-class-implement-an-interface",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1223641522,
          "answer_id": 191028,
          "path": "stack.bower.answer",
          "score": 11,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1223641522,
          "body_markdown": "No; an anonymous type can&#39;t be made to do anything except have a few properties. You will need to create your own type. I didn&#39;t read the linked article in depth, but it looks like it uses Reflection.Emit to create new types on the fly; but if you limit discussion to things *within C# itself* you can&#39;t do what you want.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1223641848,
          "answer_id": 191040,
          "path": "stack.bower.answer",
          "score": 289,
          "up_vote_count": 291,
          "is_accepted": true,
          "last_activity_date": 1405599338,
          "last_edit_date": 1405599338,
          "body_markdown": "No, anonymous types cannot implement an interface. From the [C# programming guide](http://msdn.microsoft.com/en-us/library/bb397696.aspx):\r\n\r\n&gt; Anonymous types are class types that consist of one or more public read-only properties. No other kinds of class members such as methods or events are allowed. An anonymous type cannot be cast to any interface or type except for object.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1223643316,
          "answer_id": 191124,
          "path": "stack.bower.answer",
          "score": 12,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1432631735,
          "last_edit_date": 1432631735,
          "body_markdown": "The best solution is just not to use anonymous classes.\r\n\r\n    public class Test\r\n    {\r\n        class DummyInterfaceImplementor : IDummyInterface\r\n        {\r\n            public string A { get; set; }\r\n            public string B { get; set; }\r\n        }\r\n\r\n        public void WillThisWork()\r\n        {\r\n            var source = new DummySource[0];\r\n            var values = from value in source\r\n                         select new DummyInterfaceImplementor()\r\n                         {\r\n                             A = value.A,\r\n                             B = value.C + &quot;_&quot; + value.D\r\n                         };\r\n\r\n            DoSomethingWithDummyInterface(values.Cast&lt;IDummyInterface&gt;());\r\n\r\n        }\r\n\r\n        public void DoSomethingWithDummyInterface(IEnumerable&lt;IDummyInterface&gt; values)\r\n        {\r\n            foreach (var value in values)\r\n            {\r\n                Console.WriteLine(&quot;A = &#39;{0}&#39;, B = &#39;{1}&#39;&quot;, value.A, value.B);\r\n            }\r\n        }\r\n    }\r\n\r\nNote that you need to cast the result of the query to the type of the interface. There might be a better way to do it, but I couldn&#39;t find it."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1225693927,
          "answer_id": 258032,
          "path": "stack.bower.answer",
          "score": 38,
          "up_vote_count": 38,
          "is_accepted": false,
          "last_activity_date": 1432385176,
          "last_edit_date": 1432385176,
          "body_markdown": "Casting anonymous types to interfaces has been something I&#39;ve wanted for a while but unfortunately the current implementation forces you to have an implementation of that interface.\r\n\r\nThe best solution around it is having some type of dynamic proxy that creates the implementation for you. Using the excellent [LinFu project][1] you can replace\r\n\r\n    select new\r\n    {\r\n      A = value.A,\r\n      B = value.C + &quot;_&quot; + value.D\r\n    };\r\n\r\nwith\r\n\r\n     select new DynamicObject(new\r\n     {\r\n       A = value.A,\r\n       B = value.C + &quot;_&quot; + value.D\r\n     }).CreateDuck&lt;DummyInterface&gt;();\r\n\r\n\r\n  [1]: http://www.codeproject.com/KB/cs/LinFuPart1.aspx"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1284721644,
          "answer_id": 3734761,
          "path": "stack.bower.answer",
          "score": 76,
          "up_vote_count": 77,
          "is_accepted": false,
          "last_activity_date": 1306766517,
          "last_edit_date": 1306766517,
          "body_markdown": "While this might be a two year old question, and while the answers in the thread are all true enough, I cannot resist the urge to tell you that it in fact **is possible** to have an anonymous class implement an interface, even though it takes a bit of creative cheating to get there. \r\n\r\nBack in 2008 I was writing a custom LINQ provider for my then employer, and at one point I needed to be able to tell &quot;my&quot; anonymous classes from other anonymous ones, which meant having them implement an interface that I could use to type check them. The way we solved it was by using aspects (we used [PostSharp][1]), to add the interface implementation directly in the IL. So, in fact, **letting anonymous classes implement interfaces is doable**, you just need to bend the rules slightly to get there. \r\n\r\n\r\n  [1]: http://www.sharpcrafters.com"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1405681116,
          "answer_id": 24823427,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1406824655,
          "last_edit_date": 1406824655,
          "body_markdown": "The answer to the question specifically asked is no. But have you been looking at mocking frameworks? I use MOQ but there&#39;s millions of them out there and they allow you to implement/stub (partially or fully) interfaces in-line. Eg.\r\n\r\n    public void ThisWillWork()\r\n    {\r\n        var source = new DummySource[0];\r\n        var mock = new Mock&lt;DummyInterface&gt;();\r\n\r\n        mock.SetupProperty(m =&gt; m.A, source.Select(s =&gt; s.A));\r\n        mock.SetupProperty(m =&gt; m.B, source.Select(s =&gt; s.C + &quot;_&quot; + s.D));\r\n\r\n        DoSomethingWithDummyInterface(mock.Object);\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1415509702,
          "answer_id": 26825196,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1415509702,
          "body_markdown": "Anonymous types can implement interfaces via a dynamic proxy.\r\n\r\nI wrote an extension method on [GitHub][1] and a blog post http://wblo.gs/feE to support this scenario. \r\n\r\nThe method can be used like this:\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var developer = new { Name = &quot;Jason Bowers&quot; };\r\n\r\n            PrintDeveloperName(developer.DuckCast&lt;IDeveloper&gt;());\r\n\r\n            Console.ReadKey();\r\n        }\r\n\r\n        private static void PrintDeveloperName(IDeveloper developer)\r\n        {\r\n            Console.WriteLine(developer.Name);\r\n        }\r\n    }\r\n\r\n    public interface IDeveloper\r\n    {\r\n        string Name { get; }\r\n    }\r\n\r\n\r\n  [1]: https://github.com/jcbowers/DuckTyping"
        }
      ],
      "title": "Can a C# anonymous class implement an interface?",
      "view_count": 126079,
      "answer_count": 7,
      "code_snippet": [
        "<code>public interface DummyInterface\n{\n    string A { get; }\n    string B { get; }\n}\n\npublic class DummySource\n{\n    public string A { get; set; }\n    public string C { get; set; }\n    public string D { get; set; }\n}\n\npublic class Test\n{\n    public void WillThisWork()\n    {\n        var source = new DummySource[0];\n        var values = from value in source\n                     select new\n                     {\n                         A = value.A,\n                         B = value.C + \"_\" + value.D\n                     };\n\n        DoSomethingWithDummyInterface(values);\n\n    }\n\n    public void DoSomethingWithDummyInterface(IEnumerable&lt;DummyInterface&gt; values)\n    {\n        foreach (var value in values)\n        {\n            Console.WriteLine(\"A = '{0}', B = '{1}'\", value.A, value.B);\n        }\n    }\n}\n</code>",
        "<code>select new\n{\n  A = value.A,\n  B = value.C + \"_\" + value.D\n};\n</code>",
        "<code> select new DynamicObject(new\n {\n   A = value.A,\n   B = value.C + \"_\" + value.D\n }).CreateDuck&lt;DummyInterface&gt;();\n</code>",
        "<code>DynamicObject</code>",
        "<code>System.Dynamic.DynamicObject</code>",
        "<code>DynamicObject</code>",
        "<code>public class Test\n{\n    class DummyInterfaceImplementor : IDummyInterface\n    {\n        public string A { get; set; }\n        public string B { get; set; }\n    }\n\n    public void WillThisWork()\n    {\n        var source = new DummySource[0];\n        var values = from value in source\n                     select new DummyInterfaceImplementor()\n                     {\n                         A = value.A,\n                         B = value.C + \"_\" + value.D\n                     };\n\n        DoSomethingWithDummyInterface(values.Cast&lt;IDummyInterface&gt;());\n\n    }\n\n    public void DoSomethingWithDummyInterface(IEnumerable&lt;IDummyInterface&gt; values)\n    {\n        foreach (var value in values)\n        {\n            Console.WriteLine(\"A = '{0}', B = '{1}'\", value.A, value.B);\n        }\n    }\n}\n</code>",
        "<code>values.OfType&lt;IDummyInterface&gt;()</code>",
        "<code>class Program\n{\n    static void Main(string[] args)\n    {\n        var developer = new { Name = \"Jason Bowers\" };\n\n        PrintDeveloperName(developer.DuckCast&lt;IDeveloper&gt;());\n\n        Console.ReadKey();\n    }\n\n    private static void PrintDeveloperName(IDeveloper developer)\n    {\n        Console.WriteLine(developer.Name);\n    }\n}\n\npublic interface IDeveloper\n{\n    string Name { get; }\n}\n</code>",
        "<code>public void ThisWillWork()\n{\n    var source = new DummySource[0];\n    var mock = new Mock&lt;DummyInterface&gt;();\n\n    mock.SetupProperty(m =&gt; m.A, source.Select(s =&gt; s.A));\n    mock.SetupProperty(m =&gt; m.B, source.Select(s =&gt; s.C + \"_\" + s.D));\n\n    DoSomethingWithDummyInterface(mock.Object);\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "guid",
        "uuid"
      ],
      "creation_date": 1221854460,
      "body_markdown": "I&#39;m trying to create globally-unique identifiers in JavaScript.  I&#39;m not sure what routines are available on all browsers, how &quot;random&quot; and seeded the built-in random number generator is, etc..\r\n\r\nThe GUID / UUID should be at least 32 characters and should stay in the ASCII range to avoid trouble when passing them around.",
      "last_edit_date": 1419636988,
      "up_vote_count": 2990,
      "link": "https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 152,
          "creation_date": 1221854725,
          "answer_id": 105074,
          "path": "stack.bower.answer",
          "score": 1736,
          "up_vote_count": 1888,
          "is_accepted": true,
          "last_activity_date": 1519237815,
          "last_edit_date": 1519237815,
          "body_markdown": "There have been a couple attempts at this. The question is: do you want actual GUIDs, or just random numbers that *look* like GUIDs? It&#39;s easy enough to generate random numbers.\r\n\r\n    function guid() {\r\n      function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n          .toString(16)\r\n          .substring(1);\r\n      }\r\n      return s4() + s4() + &#39;-&#39; + s4() + &#39;-&#39; + s4() + &#39;-&#39; + s4() + &#39;-&#39; + s4() + s4() + s4();\r\n    }\r\n\r\nHowever, note that such values **are not genuine GUIDs**.\r\n\r\n&lt;strike&gt;\r\nThere&#39;s no way to generate real GUIDs in Javascript, because they depend on properties of the local computer that browsers do not expose. You&#39;ll need to use OS-specific services like ActiveX: http://p2p.wrox.com/topicindex/20339.htm\r\n&lt;/strike&gt;\r\n\r\nEdit: not correct - RFC4122 allows random (&quot;version 4&quot;) GUIDs.  See other answers for specifics.\r\n\r\n**Note**: the provided code snippet does not follow RFC4122 which requires that the version (`4`) has to be integrated into the generated output string. **Do not use this answer** if you need compliant GUIDs.\r\n\r\nUse:\r\n\r\n    var uuid = guid();\r\n\r\n# Demo:\r\n\r\n&lt;!-- begin snippet: js hide: true --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function guid() {\r\n      return s4() + s4() + &#39;-&#39; + s4() + &#39;-&#39; + s4() + &#39;-&#39; +\r\n        s4() + &#39;-&#39; + s4() + s4() + s4();\r\n    }\r\n\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n\r\n    document.getElementById(&#39;jsGenId&#39;).addEventListener(&#39;click&#39;, function() {\r\n      document.getElementById(&#39;jsIdResult&#39;).value = guid();\r\n    })\r\n\r\n&lt;!-- language: lang-css --&gt;\r\n\r\n    input { font-family: monospace; }\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;button id=&quot;jsGenId&quot; type=&quot;button&quot;&gt;Generate GUID&lt;/button&gt;\r\n    &lt;br&gt;\r\n    &lt;input id=&quot;jsIdResult&quot; type=&quot;text&quot; placeholder=&quot;Results will be placed here...&quot; readonly size=&quot;40&quot;/&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1221854763,
          "answer_id": 105078,
          "path": "stack.bower.answer",
          "score": 26,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1459202130,
          "last_edit_date": 1459202130,
          "body_markdown": "From [sagi shkedy&#39;s technical blog][1]:\r\n\r\n    function generateGuid() {\r\n      var result, i, j;\r\n      result = &#39;&#39;;\r\n      for(j=0; j&lt;32; j++) {\r\n        if( j == 8 || j == 12|| j == 16|| j == 20) \r\n          result = result + &#39;-&#39;;\r\n        i = Math.floor(Math.random()*16).toString(16).toUpperCase();\r\n        result = result + i;\r\n      }\r\n      return result;\r\n    }\r\n\r\nThere are other methods that involve using an ActiveX control, but stay away from these!\r\n\r\nEDIT:  I thought it was worth pointing out that no GUID generator can guarantee unique keys (check the [wikipedia article][2]).  There is always a chance of collisions.  A GUID simply offers a large enough universe of keys to reduce the change of collisions to almost nil.\r\n\r\n\r\n  [1]: http://blog.shkedy.com/2007/01/createing-guids-with-client-side.html\r\n  [2]: http://en.wikipedia.org/wiki/Globally_Unique_Identifier"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1221855669,
          "answer_id": 105219,
          "path": "stack.bower.answer",
          "score": 25,
          "up_vote_count": 27,
          "is_accepted": false,
          "last_activity_date": 1221856527,
          "last_edit_date": 1221856527,
          "body_markdown": "A web service would be useful.  \r\n\r\nQuick Google found: http://www.hoskinson.net/GuidGenerator/\r\n\r\nCan&#39;t vouch for this implementation, but SOMEONE must publish a bonafide GUID generator.\r\n\r\nWith such a web service, you could develop a REST web interface that consumes the GUID web service, and serves it through AJAX to javascript in a browser."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1221856237,
          "answer_id": 105327,
          "path": "stack.bower.answer",
          "score": 18,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1297884335,
          "last_edit_date": 1297884335,
          "body_markdown": "From [good ol&#39; wikipedia][1] there&#39;s a link to a javascript implementation of UUID.\r\n\r\nIt looks fairly elegant, and could perhaps be improved by salting with a hash of the client&#39;s IP address. This hash could perhaps be inserted into the html document server-side for use by the client-side javascript.\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Universally_Unique_Identifier\r\n  [2]: http://www.af-design.com/services/javascript/uuid/\r\n  [3]: http://af-design.com/blog/2008/09/05/updated-javascript-uuid-generator-v03/\r\n\r\nUPDATE : The original site has had a shuffle, here is the [updated version][3]\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1242531563,
          "answer_id": 873856,
          "path": "stack.bower.answer",
          "score": 126,
          "up_vote_count": 128,
          "is_accepted": false,
          "last_activity_date": 1319582257,
          "last_edit_date": 1319582257,
          "body_markdown": "Here&#39;s some code based on [RFC 4122][1], section 4.4 (Algorithms for Creating a UUID from Truly Random or Pseudo-Random Number).\r\n\r\n    function createUUID() {\r\n        // http://www.ietf.org/rfc/rfc4122.txt\r\n        var s = [];\r\n        var hexDigits = &quot;0123456789abcdef&quot;;\r\n        for (var i = 0; i &lt; 36; i++) {\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        s[14] = &quot;4&quot;;  // bits 12-15 of the time_hi_and_version field to 0010\r\n        s[19] = hexDigits.substr((s[19] &amp; 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n        s[8] = s[13] = s[18] = s[23] = &quot;-&quot;;\r\n\r\n        var uuid = s.join(&quot;&quot;);\r\n        return uuid;\r\n    }\r\n\r\n\r\n  [1]: http://www.ietf.org/rfc/rfc4122.txt"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1251130366,
          "answer_id": 1323308,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1251130366,
          "body_markdown": "This create version 4 UUID (created from pseudo random numbers) :\r\n\r\n    function uuid()\r\n    {\r\n       var chars = &#39;0123456789abcdef&#39;.split(&#39;&#39;);\r\n    \r\n       var uuid = [], rnd = Math.random, r;\r\n       uuid[8] = uuid[13] = uuid[18] = uuid[23] = &#39;-&#39;;\r\n       uuid[14] = &#39;4&#39;; // version 4\r\n    \r\n       for (var i = 0; i &lt; 36; i++)\r\n       {\r\n          if (!uuid[i])\r\n          {\r\n             r = 0 | rnd()*16;\r\n    \r\n             uuid[i] = chars[(i == 19) ? (r &amp; 0x3) | 0x8 : r &amp; 0xf];\r\n          }\r\n       }\r\n    \r\n       return uuid.join(&#39;&#39;);\r\n    }\r\n\r\nHere is a sample of the UUIDs generated :\r\n\r\n    682db637-0f31-4847-9cdf-25ba9613a75c\r\n    97d19478-3ab2-4aa1-b8cc-a1c3540f54aa\r\n    2eed04c9-2692-456d-a0fd-51012f947136"
        },
        {
          "tags": [],
          "down_vote_count": 8,
          "creation_date": 1264167620,
          "answer_id": 2117523,
          "path": "stack.bower.answer",
          "score": 2913,
          "up_vote_count": 2921,
          "is_accepted": false,
          "last_activity_date": 1498704082,
          "last_edit_date": 1498704082,
          "body_markdown": "For an [RFC4122](https://www.ietf.org/rfc/rfc4122.txt) version 4 compliant solution, this one-liner(ish) solution is the most compact I could come up with.:\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function uuidv4() {\r\n      return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0, v = c == &#39;x&#39; ? r : (r &amp; 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n\r\n    console.log(uuidv4())\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n\r\n**Update, 2015-06-02**:  Be aware that UUID uniqueness relies heavily on the underlying random number generator (RNG).  The solution above uses `Math.random()` for brevity, however `Math.random()` is *not* guaranteed to be a high-quality RNG.  See Adam Hyland&#39;s [excellent writeup on Math.random()][1] for details.  For a more robust solution, consider something like [the uuid module][2][Disclaimer: I&#39;m the author], which uses higher quality RNG APIs where available.\r\n\r\n**Update, 2015-08-26**: As a side-note, this [gist][3] describes how to determine how many IDs can be generated before reaching a certain probability of collision.  For example, with 3.26x10&lt;sup&gt;15&lt;/sup&gt; version 4 RFC4122 UUIDs you have a 1-in-a-million chance of collision.\r\n\r\n**Update, 2017-06-28**: A [good article from Chrome developers][4] discussing the state of Math.random PRNG quality in Chrome, Firefox, and Safari.  tl;dr - As of late-2015 it&#39;s &quot;pretty good&quot;, but not cryptographic quality.  To address that issue, here&#39;s an updated version of the above solution that uses ES6, the `crypto` API, and [a bit of JS wizardy I can&#39;t take credit for][5]:\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function uuidv4() {\r\n      return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =&gt;\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] &amp; 15 &gt;&gt; c / 4).toString(16)\r\n      )\r\n    }\r\n\r\n    console.log(uuidv4());\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n\r\n  [1]: http://bocoup.com/weblog/random-numbers/\r\n  [2]: https://github.com/kelektiv/node-uuid\r\n  [3]: https://gist.githubusercontent.com/aristus/f0c311df98d92e367df0\r\n  [4]: https://v8project.blogspot.com/2015/12/theres-mathrandom-and-then-theres.html\r\n  [5]: https://gist.github.com/jed/982883"
        },
        {
          "tags": [],
          "down_vote_count": 7,
          "creation_date": 1265340226,
          "answer_id": 2204834,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 15,
          "is_accepted": false,
          "last_activity_date": 1265340226,
          "body_markdown": "It&#39;s just a simple AJAX call...\r\n\r\nIf anyone is still interested, here&#39;s my solution.\r\n\r\n\r\nOn the server side:\r\n\r\n    [WebMethod()]\r\n    public static string GenerateGuid()\r\n    {\r\n    \treturn Guid.NewGuid().ToString();\r\n    }\r\n\r\nOn the client side:\r\n\r\n    var myNewGuid = null;\r\n    PageMethods.GenerateGuid(\r\n    \tfunction(result, userContext, methodName)\r\n    \t{\r\n    \t\tmyNewGuid = result;\r\n    \t},\r\n    \tfunction()\r\n    \t{\r\n    \t\talert(&quot;WebService call failed.&quot;);\r\n    \t}\r\n    );\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1279150252,
          "answer_id": 3251361,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1279150252,
          "body_markdown": "      // RFC 4122\r\n      //\r\n      // A UUID is 128 bits long\r\n      //\r\n      // String representation is five fields of 4, 2, 2, 2, and 6 bytes.\r\n      // Fields represented as lowercase, zero-filled, hexadecimal strings, and\r\n      // are separated by dash characters\r\n      //\r\n      // A version 4 UUID is generated by setting all but six bits to randomly\r\n      // chosen values\r\n      var uuid = [\r\n        Math.random().toString(16).slice(2, 10),\r\n        Math.random().toString(16).slice(2, 6),\r\n\r\n        // Set the four most significant bits (bits 12 through 15) of the\r\n        // time_hi_and_version field to the 4-bit version number from Section\r\n        // 4.1.3\r\n        (Math.random() * .0625 /* 0x.1 */ + .25 /* 0x.4 */).toString(16).slice(2, 6),\r\n\r\n        // Set the two most significant bits (bits 6 and 7) of the\r\n        // clock_seq_hi_and_reserved to zero and one, respectively\r\n        (Math.random() * .25 /* 0x.4 */ + .5 /* 0x.8 */).toString(16).slice(2, 6),\r\n\r\n        Math.random().toString(16).slice(2, 14)].join(&#39;-&#39;);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 13,
          "creation_date": 1296775268,
          "answer_id": 4892910,
          "path": "stack.bower.answer",
          "score": -9,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1296775268,
          "body_markdown": "I know this topic is old but if you really wanted to create a GUID you could obvioulsy do it without straight javascript.  You could cause a page expiration every load and create a GUID on the server side then populate that into a javascript variable at page run time.  Just an idea."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1313375255,
          "answer_id": 7061193,
          "path": "stack.bower.answer",
          "score": 46,
          "up_vote_count": 47,
          "is_accepted": false,
          "last_activity_date": 1319039400,
          "last_edit_date": 1495535497,
          "body_markdown": "Here&#39;s a solution dated Oct. 9, 2011 from a comment by user *jed* at https://gist.github.com/982883:\r\n\r\n    UUIDv4 = function b(a){return a?(a^Math.random()*16&gt;&gt;a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)}\r\n\r\nThis accomplishes the same goal as the [current highest-rated answer][1], but in 50+ fewer bytes by exploiting coercion, recursion, and exponential notation. For those curious how it works, here&#39;s the annotated form of an older version of the function:\r\n\r\n    UUIDv4 =\r\n\r\n\tfunction b(\r\n\t  a // placeholder\r\n\t){\r\n\t  return a // if the placeholder was passed, return\r\n\t\t? ( // a random number from 0 to 15\r\n\t\t  a ^ // unless b is 8,\r\n\t\t  Math.random() // in which case\r\n\t\t  * 16 // a random number from\r\n\t\t  &gt;&gt; a/4 // 8 to 11\r\n\t\t  ).toString(16) // in hexadecimal\r\n\t\t: ( // or otherwise a concatenated string:\r\n\t\t  [1e7] + // 10000000 +\r\n\t\t  -1e3 + // -1000 +\r\n\t\t  -4e3 + // -4000 +\r\n\t\t  -8e3 + // -80000000 +\r\n\t\t  -1e11 // -100000000000,\r\n\t\t  ).replace( // replacing\r\n\t\t\t/[018]/g, // zeroes, ones, and eights with\r\n\t\t\tb // random hex digits\r\n\t\t  )\r\n\t}\r\n\r\n  [1]: https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1314544644,
          "answer_id": 7221797,
          "path": "stack.bower.answer",
          "score": 24,
          "up_vote_count": 24,
          "is_accepted": false,
          "last_activity_date": 1442010723,
          "last_edit_date": 1442010723,
          "body_markdown": "    var uuid = function() {\r\n    \tvar buf = new Uint32Array(4);\r\n    \twindow.crypto.getRandomValues(buf);\r\n    \tvar idx = -1;\r\n    \treturn &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c) {\r\n    \t\tidx++;\r\n    \t\tvar r = (buf[idx&gt;&gt;3] &gt;&gt; ((idx%8)*4))&amp;15;\r\n    \t\tvar v = c == &#39;x&#39; ? r : (r&amp;0x3|0x8);\r\n    \t\treturn v.toString(16);\r\n    \t});\r\n    };\r\n\r\nEDIT:\r\n\r\nRevisited my project that was using this function and disliked the verbosity. - But needed proper randomness.\r\n\r\nA version based on Briguy37&#39;s answer and some bitwise operators to extract nibble sized windows from the buffer.\r\n\r\nShould adhere to the RFC Type 4 (random) schema, since I had Problems last time parsing non-compliant uuids with Java&#39;s UUID."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1319560050,
          "answer_id": 7892504,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1381294475,
          "last_edit_date": 1381294475,
          "body_markdown": "There is a jQuery plugin that handles Guid&#39;s nicely @ http://plugins.jquery.com/project/GUID_Helper\r\n\r\n    jQuery.Guid.Value()\r\n\r\nReturns value of internal Guid. If no guid has been specified, returns a new one (value is then stored internally).\r\n\r\n---\r\n    jQuery.Guid.New()\r\n\r\nReturns a new Guid and sets it&#39;s value internally.\r\n\r\n---\r\n    jQuery.Guid.Empty()\r\n\r\nReturns an empty Guid 00000000-0000-0000-0000-000000000000.\r\n\r\n---\r\n    jQuery.Guid.IsEmpty()\r\n\r\nReturns boolean. True if empty/undefined/blank/null.\r\n\r\n---\r\n    jQuery.Guid.IsValid()\r\n\r\nReturns boolean. True valid guid, false if not.\r\n\r\n---\r\n    jQuery.Guid.Set()\r\n\r\nRetrns Guid. Sets Guid to user specified Guid, if invalid, returns an empty guid."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1323684804,
          "answer_id": 8472700,
          "path": "stack.bower.answer",
          "score": 54,
          "up_vote_count": 54,
          "is_accepted": false,
          "last_activity_date": 1343204501,
          "last_edit_date": 1495540056,
          "body_markdown": "Here is a combination of the [top voted answer][1], with a workaround for [Chrome&#39;s collisions][2]:\r\n\r\n\r\n    generateGUID = (typeof(window.crypto) != &#39;undefined&#39; &amp;&amp; \r\n                    typeof(window.crypto.getRandomValues) != &#39;undefined&#39;) ?\r\n        function() {\r\n            // If we have a cryptographically secure PRNG, use that\r\n            // https://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\r\n            var buf = new Uint16Array(8);\r\n            window.crypto.getRandomValues(buf);\r\n            var S4 = function(num) {\r\n                var ret = num.toString(16);\r\n                while(ret.length &lt; 4){\r\n                    ret = &quot;0&quot;+ret;\r\n                }\r\n                return ret;\r\n            };\r\n            return (S4(buf[0])+S4(buf[1])+&quot;-&quot;+S4(buf[2])+&quot;-&quot;+S4(buf[3])+&quot;-&quot;+S4(buf[4])+&quot;-&quot;+S4(buf[5])+S4(buf[6])+S4(buf[7]));\r\n        }\r\n    \r\n        :\r\n    \r\n        function() {\r\n            // Otherwise, just use Math.random\r\n            // https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\r\n            return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c) {\r\n                var r = Math.random()*16|0, v = c == &#39;x&#39; ? r : (r&amp;0x3|0x8);\r\n                return v.toString(16);\r\n            });\r\n        };\r\n\r\n[On jsbin][3] if you want to test it.\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/2117523/11236\r\n  [2]: https://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\r\n  [3]: http://jsbin.com/uqives/3"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1326224334,
          "answer_id": 8809472,
          "path": "stack.bower.answer",
          "score": 621,
          "up_vote_count": 622,
          "is_accepted": false,
          "last_activity_date": 1519887635,
          "last_edit_date": 1519887635,
          "body_markdown": "I really like how clean [Broofa&#39;s answer][1] is, but it&#39;s unfortunate that poor implementations of `Math.random` leave the chance for collision.  \r\n\r\nHere&#39;s a similar [RFC4122][2] version 4 compliant solution that solves that issue by offsetting the first 13 hex numbers by a hex portion of the timestamp.  That way, even if `Math.random` is on the same seed, both clients would have to generate the UUID at the exact same millisecond (or 10,000+ years later) to get the same UUID:   \r\n\r\n    function generateUUID() { // Public Domain/MIT\r\n        var d = new Date().getTime();\r\n        if (typeof performance !== &#39;undefined&#39; &amp;&amp; typeof performance.now === &#39;function&#39;){\r\n            d += performance.now(); //use high-precision timer if available\r\n        }\r\n        return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === &#39;x&#39; ? r : (r &amp; 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n&lt;br/&gt;\r\n[Here&#39;s a fiddle to test.][3]\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/2117523/508537\r\n  [2]: http://www.ietf.org/rfc/rfc4122.txt\r\n  [3]: https://jsfiddle.net/xg7tek9j/7/"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1326491975,
          "answer_id": 8857806,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 11,
          "is_accepted": false,
          "last_activity_date": 1326491975,
          "body_markdown": "Adjusted my own UUID/GUID generator with some extras &lt;a href=&quot;http://frugalcoder.us/post/2012/01/13/javascript-guid-uuid-generator.aspx&quot;&gt;here&lt;/a&gt;.\r\n\r\nI&#39;m using &lt;a href=&quot;http://baagoe.com/en/RandomMusings/javascript/&quot;&gt;the following Kybos&lt;/a&gt; random number generator to be a bit more cryptographically sound.\r\n\r\nBelow is my script with the Mash and Kybos methods from baagoe.com excluded.\r\n\r\n&lt;pre&gt;&lt;code&gt;//UUID/Guid Generator\r\n// use: UUID.create() or UUID.createSequential()\r\n// convenience:  UUID.empty, UUID.tryParse(string)\r\n(function(w){\r\n  // From http://baagoe.com/en/RandomMusings/javascript/\r\n  // Johannes Baag&#195;&#184;e &amp;lt;baagoe@baagoe.com&amp;gt;, 2010\r\n  //function Mash() {...};\r\n\r\n  // From http://baagoe.com/en/RandomMusings/javascript/\r\n  //function Kybos() {...};\r\n\r\n  var rnd = Kybos();\r\n\r\n  //UUID/GUID Implementation from http://frugalcoder.us/post/2012/01/13/javascript-guid-uuid-generator.aspx\r\n  var UUID = {\r\n    &quot;empty&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;\r\n    ,&quot;parse&quot;: function(input) {\r\n      var ret = input.toString().trim().toLowerCase().replace(/^[\\s\\r\\n]+|[\\{\\}]|[\\s\\r\\n]+$/g, &quot;&quot;);\r\n      if ((/[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}/).test(ret))\r\n        return ret;\r\n      else\r\n        throw new Error(&quot;Unable to parse UUID&quot;);\r\n    }\r\n    ,&quot;createSequential&quot;: function() {\r\n      var ret = new Date().valueOf().toString(16).replace(&quot;-&quot;,&quot;&quot;)\r\n      for (;ret.length &amp;lt; 12; ret = &quot;0&quot; + ret);\r\n      ret = ret.substr(ret.length-12,12); //only least significant part\r\n      for (;ret.length &amp;lt; 32;ret += Math.floor(rnd() * 0xffffffff).toString(16));\r\n      return [ret.substr(0,8), ret.substr(8,4), &quot;4&quot; + ret.substr(12,3), &quot;89AB&quot;[Math.floor(Math.random()*4)] + ret.substr(16,3),  ret.substr(20,12)].join(&quot;-&quot;);\r\n    }\r\n    ,&quot;create&quot;: function() {\r\n      var ret = &quot;&quot;;\r\n      for (;ret.length &amp;lt; 32;ret += Math.floor(rnd() * 0xffffffff).toString(16));\r\n      return [ret.substr(0,8), ret.substr(8,4), &quot;4&quot; + ret.substr(12,3), &quot;89AB&quot;[Math.floor(Math.random()*4)] + ret.substr(16,3),  ret.substr(20,12)].join(&quot;-&quot;);\r\n    }\r\n    ,&quot;random&quot;: function() {\r\n      return rnd();\r\n    }\r\n    ,&quot;tryParse&quot;: function(input) {\r\n      try {\r\n        return UUID.parse(input);\r\n      } catch(ex) {\r\n        return UUID.empty;\r\n      }\r\n    }\r\n  };\r\n  UUID[&quot;new&quot;] = UUID.create;\r\n\r\n  w.UUID = w.Guid = UUID;\r\n}(window || this));&lt;/code&gt;&lt;/pre&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1337798555,
          "answer_id": 10725965,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1337798555,
          "body_markdown": "The better way:\r\n\r\n    function(\r\n      a,b                // placeholders\r\n    ){\r\n      for(               // loop :)\r\n          b=a=&#39;&#39;;        // b - result , a - numeric variable\r\n          a++&lt;36;        // \r\n          b+=a*51&amp;52  // if &quot;a&quot; is not 9 or 14 or 19 or 24\r\n                      ?  //  return a random number or 4\r\n             (\r\n               a^15      // if &quot;a&quot; is not 15\r\n                  ?      // genetate a random number from 0 to 15\r\n               8^Math.random()*\r\n               (a^20?16:4)  // unless &quot;a&quot; is 20, in which case a random number from 8 to 11\r\n                  :\r\n               4            //  otherwise 4\r\n               ).toString(16)\r\n                      :\r\n             &#39;-&#39;            //  in other cases (if &quot;a&quot; is 9,14,19,24) insert &quot;-&quot;\r\n          );\r\n      return b\r\n     }\r\n\r\nMinimized:\r\n\r\n    function(a,b){for(b=a=&#39;&#39;;a++&lt;36;b+=a*51&amp;52?(a^15?8^Math.random()*(a^20?16:4):4).toString(16):&#39;-&#39;);return b}"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1341262832,
          "answer_id": 11301105,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1341262832,
          "body_markdown": "JavaScript project on GitHub - https://github.com/LiosK/UUID.js\r\n\r\n&gt; **UUID.js The RFC-compliant UUID generator for JavaScript.**\r\n&gt; \r\n&gt; See RFC 4122 http://www.ietf.org/rfc/rfc4122.txt.\r\n&gt; \r\n&gt; **Features Generates RFC 4122 compliant UUIDs.**\r\n&gt; \r\n&gt; Version 4 UUIDs (UUIDs from random numbers) and version 1 UUIDs\r\n&gt; (time-based UUIDs) are available.\r\n&gt; \r\n&gt; UUID object allows a variety of access to the UUID including access to\r\n&gt; the UUID fields.\r\n&gt; \r\n&gt; Low timestamp resolution of JavaScript is compensated by random\r\n&gt; numbers."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1353002697,
          "answer_id": 13403498,
          "path": "stack.bower.answer",
          "score": 45,
          "up_vote_count": 46,
          "is_accepted": false,
          "last_activity_date": 1358805177,
          "last_edit_date": 1358805177,
          "body_markdown": "Here is a totally non-compliant but very performant implementation to generate an ASCII-safe GUID-like unique identifier.\r\n\r\n    function generateQuickGuid() {\r\n        return Math.random().toString(36).substring(2, 15) +\r\n            Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\nGenerates 26 [a-z0-9] characters, yielding a UID that is both shorter and more unique than RFC compliant GUIDs. Dashes can be trivially added if human-readability matters.\r\n\r\nHere are usage examples and timings for this function and several of this question&#39;s other answers. The timing was performed under Chrome m25, 10 million iterations each.\r\n\r\n    &gt;&gt;&gt; generateQuickGuid()\r\n    &quot;nvcjf1hs7tf8yyk4lmlijqkuo9&quot;\r\n    &quot;yq6gipxqta4kui8z05tgh9qeel&quot;\r\n    &quot;36dh5sec7zdj90sk2rx7pjswi2&quot;\r\n    runtime: 32.5s\r\n\r\n    &gt;&gt;&gt; GUID() // John Millikin\r\n    &quot;7a342ca2-e79f-528e-6302-8f901b0b6888&quot;\r\n    runtime: 57.8s\r\n\r\n    &gt;&gt;&gt; regexGuid() // broofa\r\n    &quot;396e0c46-09e4-4b19-97db-bd423774a4b3&quot;\r\n    runtime: 91.2s\r\n\r\n    &gt;&gt;&gt; createUUID() // Kevin Hakanson\r\n    &quot;403aa1ab-9f70-44ec-bc08-5d5ac56bd8a5&quot;\r\n    runtime: 65.9s\r\n\r\n    &gt;&gt;&gt; UUIDv4() // Jed Schmidt\r\n    &quot;f4d7d31f-fa83-431a-b30c-3e6cc37cc6ee&quot;\r\n    runtime: 282.4s\r\n    \r\n    &gt;&gt;&gt; Math.uuid() // broofa\r\n    &quot;5BD52F55-E68F-40FC-93C2-90EE069CE545&quot;\r\n    runtime: 225.8s\r\n\r\n    &gt;&gt;&gt; Math.uuidFast() // broofa\r\n    &quot;6CB97A68-23A2-473E-B75B-11263781BBE6&quot;\r\n    runtime: 92.0s\r\n\r\n    &gt;&gt;&gt; Math.uuidCompact() // broofa\r\n    &quot;3d7b7a06-0a67-4b67-825c-e5c43ff8c1e8&quot;\r\n    runtime: 229.0s\r\n\r\n    &gt;&gt;&gt; bitwiseGUID() // jablko\r\n    &quot;baeaa2f-7587-4ff1-af23-eeab3e92&quot;\r\n    runtime: 79.6s\r\n\r\n    &gt;&gt;&gt;&gt; betterWayGUID() // Andrea Turri\r\n    &quot;383585b0-9753-498d-99c3-416582e9662c&quot;\r\n    runtime: 60.0s\r\n\r\n    &gt;&gt;&gt;&gt; UUID() // John Fowler\r\n    &quot;855f997b-4369-4cdb-b7c9-7142ceaf39e8&quot;\r\n    runtime: 62.2s\r\n\r\nHere is the timing code.\r\n\r\n    var r;\r\n    console.time(&#39;t&#39;); \r\n    for (var i = 0; i &lt; 10000000; i++) { \r\n        r = FuncToTest(); \r\n    };\r\n    console.timeEnd(&#39;t&#39;);"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1353094909,
          "answer_id": 13423320,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1353094909,
          "body_markdown": "For those wanting an rfc4122 version 4 compliant solution with speed considerations (few calls to Math.random()):\r\n\r\n    function UUID() {\r\n    \tvar nbr, randStr = &quot;&quot;;\r\n    \tdo {\r\n    \t\trandStr += (nbr = Math.random()).toString(16).substr(2);\r\n    \t} while (randStr.length &lt; 30);\r\n    \treturn [\r\n    \t\trandStr.substr(0, 8), &quot;-&quot;,\r\n    \t\trandStr.substr(8, 4), &quot;-4&quot;,\r\n    \t\trandStr.substr(12, 3), &quot;-&quot;,\r\n    \t\t((nbr*4|0)+8).toString(16), // [89ab]\r\n    \t\trandStr.substr(15, 3), &quot;-&quot;,\r\n    \t\trandStr.substr(18, 12)\r\n    \t\t].join(&quot;&quot;);\r\n    }\r\n\r\nThe above function should have a decent balance between speed and randomness.\r\n\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1359818826,
          "answer_id": 14663381,
          "path": "stack.bower.answer",
          "score": 25,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1498742946,
          "last_edit_date": 1498742946,
          "body_markdown": "Simple JavaScript module as a combination of best answers in this thread.\r\n\r\n\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    var crypto = window.crypto || window.msCrypto || null; // IE11 fix\r\n\r\n    var Guid = Guid || (function() {\r\n\r\n      var EMPTY = &#39;00000000-0000-0000-0000-000000000000&#39;;\r\n\r\n      var _padLeft = function(paddingString, width, replacementChar) {\r\n        return paddingString.length &gt;= width ? paddingString : _padLeft(replacementChar + paddingString, width, replacementChar || &#39; &#39;);\r\n      };\r\n\r\n      var _s4 = function(number) {\r\n        var hexadecimalResult = number.toString(16);\r\n        return _padLeft(hexadecimalResult, 4, &#39;0&#39;);\r\n      };\r\n\r\n      var _cryptoGuid = function() {\r\n        var buffer = new window.Uint16Array(8);\r\n        window.crypto.getRandomValues(buffer);\r\n        return [_s4(buffer[0]) + _s4(buffer[1]), _s4(buffer[2]), _s4(buffer[3]), _s4(buffer[4]), _s4(buffer[5]) + _s4(buffer[6]) + _s4(buffer[7])].join(&#39;-&#39;);\r\n      };\r\n\r\n      var _guid = function() {\r\n        var currentDateMilliseconds = new Date().getTime();\r\n        return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(currentChar) {\r\n          var randomChar = (currentDateMilliseconds + Math.random() * 16) % 16 | 0;\r\n          currentDateMilliseconds = Math.floor(currentDateMilliseconds / 16);\r\n          return (currentChar === &#39;x&#39; ? randomChar : (randomChar &amp; 0x7 | 0x8)).toString(16);\r\n        });\r\n      };\r\n\r\n      var create = function() {\r\n        var hasCrypto = crypto != &#39;undefined&#39; &amp;&amp; crypto !== null,\r\n          hasRandomValues = typeof(window.crypto.getRandomValues) != &#39;undefined&#39;;\r\n        return (hasCrypto &amp;&amp; hasRandomValues) ? _cryptoGuid() : _guid();\r\n      };\r\n\r\n      return {\r\n        newGuid: create,\r\n        empty: EMPTY\r\n      };\r\n    })();\r\n\r\n    // DEMO: Create and show GUID\r\n    console.log(Guid.newGuid());\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nUsage: \r\n&gt;&gt; **Guid.newGuid()**\r\n\r\n&gt;&gt; &quot;c6c2d12f-d76b-5739-e551-07e6de5b0807&quot;\r\n\r\n&gt;&gt; **Guid.empty**\r\n\r\n&gt;&gt; &quot;00000000-0000-0000-0000-000000000000&quot;\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 6,
          "creation_date": 1369230643,
          "answer_id": 16693578,
          "path": "stack.bower.answer",
          "score": 75,
          "up_vote_count": 81,
          "is_accepted": false,
          "last_activity_date": 1426505727,
          "last_edit_date": 1426505727,
          "body_markdown": "Fastest GUID like string generator method in the format `XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX`. This does not generated standard-compliant GUID.\r\n\r\nTen million executions of this implementation takes just 32.5 seconds, which is the fastest i&#39;ve ever seen in a browser (the only solution without loops/iterations).\r\n\r\nThe function is as simple as:\r\n\r\n    /**\r\n     * Generates a GUID string.\r\n     * @returns {String} The generated GUID.\r\n     * @example af8a8416-6e18-a307-bd9c-f2c947bbb3aa\r\n     * @author Slavik Meltser (slavik@meltser.info).\r\n     * @link http://slavik.meltser.info/?p=142\r\n     */\r\n    function guid() {\r\n        function _p8(s) {\r\n            var p = (Math.random().toString(16)+&quot;000000000&quot;).substr(2,8);\r\n            return s ? &quot;-&quot; + p.substr(0,4) + &quot;-&quot; + p.substr(4,4) : p ;\r\n        }\r\n        return _p8() + _p8(true) + _p8(true) + _p8();\r\n    }\r\n\r\nTo test the performance, you can run this code:\r\n    \r\n    console.time(&#39;t&#39;); \r\n    for (var i = 0; i &lt; 10000000; i++) { \r\n        guid(); \r\n    };\r\n    console.timeEnd(&#39;t&#39;);\r\n\r\nI&#39;m sure most of you will understand what I did there, but maybe there is at least one person that will need an explanation:\r\n\r\n**The algorithm:**\r\n\r\n - The `Math.random()` function returns a decimal number between 0 and 1 with 16 digits after the decimal fraction point (for\r\n   example `0.4363923368509859`).\r\n - Then we take this number and convert\r\n   it to a string with base 16 (from the example above we&#39;ll get\r\n   `0.6fb7687f`).  \r\n   `Math.random().toString(16)`.\r\n - Then we cut off the `0.` prefix (`0.6fb7687f` =&gt;\r\n   `6fb7687f`) and get a string with eight hexadecimal\r\n   characters long.  \r\n   `(Math.random().toString(16).substr(2,8)`.\r\n - Sometimes the `Math.random()` function will return\r\n   shorter number (for example `0.4363`), due to zeros at the end (from the example above, actually the number is `0.4363000000000000`). That&#39;s why i&#39;m appending to this string `&quot;000000000&quot;` (a string with nine zeros) and then cutting it off with `substr()` function to make it nine characters exactly (filling zeros to the right).\r\n - The reason of adding exactly nine zeros is because of the worse case scenario, which is when the `Math.random()` function will return exactly 0 or 1 (probability of 1/10^16 for each one of them). That&#39;s why we needed to add nine zeros to it (`&quot;0&quot;+&quot;000000000&quot;` or `&quot;1&quot;+&quot;000000000&quot;`), and then cutting it off from the second index (3rd character) with a length of eight characters. For the rest of the cases, the addition of zeros will not harm the result because it is cutting it off anyway.  \r\n   `Math.random().toString(16)+&quot;000000000&quot;).substr(2,8)`.\r\n\r\n**The assembly:**\r\n\r\n - The GUID is in the following format `XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX`.\r\n - I divided the GUID into 4 pieces, each piece divided into 2 types (or formats): `XXXXXXXX` and `-XXXX-XXXX`.\r\n - Now I&#39;m building the GUID using these 2 types to assemble the GUID with call 4 pieces, as follows: `XXXXXXXX` `-XXXX-XXXX` `-XXXX-XXXX` `XXXXXXXX`.\r\n - To differ between these two types, I added a flag parameter to a pair creator function `_p8(s)`, the `s` parameter tells the function whether to add dashes or not.\r\n - Eventually we build the GUID with the following chaining: `_p8() + _p8(true) + _p8(true) + _p8()`, and return it.\r\n\r\n[Link to this post on my blog](http://slavik.meltser.info/the-efficient-way-to-create-guid-uuid-in-javascript/)\r\n\r\n**Enjoy! :-)**"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1371052803,
          "answer_id": 17070116,
          "path": "stack.bower.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1371052803,
          "body_markdown": "I know, it is an old question. Just for completeness, if your environment is SharePoint, there is a utility function called `SP.Guid.newGuid` ([msdn link](http://msdn.microsoft.com/en-us/library/ee659495(v=office.14).aspx)) which creates a new guid. This function is inside the sp.init.js file. If you rewrite this function (to remove some other dependencies from other private functions), it looks like this:\r\n\r\n    var newGuid = function () {\r\n        var result = &#39;&#39;;\r\n        var hexcodes = &quot;0123456789abcdef&quot;.split(&quot;&quot;);\r\n    \r\n        for (var index = 0; index &lt; 32; index++) {\r\n            var value = Math.floor(Math.random() * 16);\r\n    \r\n            switch (index) {\r\n            case 8:\r\n                result += &#39;-&#39;;\r\n                break;\r\n            case 12:\r\n                value = 4;\r\n                result += &#39;-&#39;;\r\n                break;\r\n            case 16:\r\n                value = value &amp; 3 | 8;\r\n                result += &#39;-&#39;;\r\n                break;\r\n            case 20:\r\n                result += &#39;-&#39;;\r\n                break;\r\n            }\r\n            result += hexcodes[value];\r\n        }\r\n        return result;\r\n    };\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1385940396,
          "answer_id": 20318571,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1385940396,
          "body_markdown": "It is important that to use well tested code that is maintained by more than 1 contributors instead of whipping your own stuff for this. This is one of the places where you probably want to prefer most stable code than shortest possible clever version that works in X browser but doesn&#39;t take in to account idiosyncrasies of Y which would often lead to very hard to investigate bugs than manifests only randomly for some users. Personally I use uuid-js at https://github.com/aurigadl/uuid-js which bower enabled so I can take updates easily."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1391442856,
          "answer_id": 21531802,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1391442856,
          "body_markdown": "Weird that no one has mentioned this yet but for completeness, there&#39;s a plethora of [guid generators on npm](https://npmjs.org/search?q=guid) I&#39;m willing to bet most of them work in browser too."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1393120016,
          "answer_id": 21963136,
          "path": "stack.bower.answer",
          "score": 279,
          "up_vote_count": 280,
          "is_accepted": false,
          "last_activity_date": 1393370169,
          "last_edit_date": 1393370169,
          "body_markdown": "broofa&#39;s answer is pretty slick, indeed - impressively clever, really...  rfc4122 compliant, somewhat readable, and compact.  Awesome!\r\n\r\nBut if you&#39;re looking at that regular expression, those many `replace()` callbacks, `toString()`&#39;s and `Math.random()` function calls (where he&#39;s only using 4 bits of the result and wasting the rest), you may start to wonder about performance.  Indeed, joelpt even decided to toss out rfc for generic GUID speed with `generateQuickGUID`.\r\n\r\n**But, can we get speed *and* rfc compliance?  I say, YES!**  Can we maintain readability?  Well...  Not really, but it&#39;s easy if you follow along.\r\n\r\nBut first, my results, compared to broofa, `guid` (the accepted answer), and the non-rfc-compliant `generateQuickGuid`:\r\n\r\n                      Desktop   Android\r\n               broofa: 1617ms   12869ms\r\n                   e1:  636ms    5778ms\r\n                   e2:  606ms    4754ms\r\n                   e3:  364ms    3003ms\r\n                   e4:  329ms    2015ms\r\n                   e5:  147ms    1156ms\r\n                   e6:  146ms    1035ms\r\n                   e7:  105ms     726ms\r\n                 guid:  962ms   10762ms\r\n    generateQuickGuid:  292ms    2961ms\r\n      - Note that results will vary by browser/cpu.\r\n\r\nSo by my 6th iteration of optimizations, I beat the most popular answer by over **12X**, the accepted answer by over **9X**, and the fast-non-compliant answer by **2-3X**.  And I&#39;m still rfc4122 compliant.\r\n\r\nInterested in how?  I&#39;ve put the full source on http://jsfiddle.net/jcward/7hyaC/3/ and on http://jsperf.com/uuid-generator-opt/4\r\n\r\nFor an explanation, let&#39;s start with broofa&#39;s code:\r\n\r\n    &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c) {\r\n      var r = Math.random()*16|0, v = c == &#39;x&#39; ? r : (r&amp;0x3|0x8);\r\n      return v.toString(16);\r\n    });\r\n\r\nSo it replaces `x` with any random hex digit, `y` with random data (except forcing the top 2 bits to `10` per the rfc spec), and the regex doesn&#39;t match the `-` or `4` characters, so he doesn&#39;t have to deal with them.  Very, very slick.\r\n\r\nThe first thing to know is that function calls are expensive, as are regular expressions (though he only uses 1, but it has 32 callbacks, one for each match, and in each of the 32 callbacks it calls Math.random() and v.toString(16)).\r\n\r\nThe first step toward performance is to eliminate the RegEx and its callback functions, and use a simple loop instead.  This means we have to deal with the `-` and `4` characters whereas broofa did not.  Also note that we can use String Array indexing to keep his slick String template architecture:\r\n\r\n    function e1() {\r\n      var u=&#39;&#39;,i=0;\r\n      while(i++&lt;36) {\r\n        var c=&#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;[i-1],r=Math.random()*16|0,v=c==&#39;x&#39;?r:(r&amp;0x3|0x8);\r\n        u+=(c==&#39;-&#39;||c==&#39;4&#39;)?c:v.toString(16)\r\n      }\r\n      return u;\r\n    }\r\n\r\nBasically the same inner logic, except we check for `-` or `4`, and the loop structure (instead of replace callbacks) gets us an almost 3X improvement!\r\n\r\nThe next step is a small one on desktop, but makes a decent difference on mobile.  Lets make fewer Math.random() calls and utilize all those random bits instead of throwing 87% of them away with a random buffer that gets shifted out each iteration.  Let&#39;s also move that template definition out of the loop, just in case it helps:\r\n\r\n    function e2() {\r\n      var u=&#39;&#39;,m=&#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;,i=0,rb=Math.random()*0xffffffff|0;\r\n      while(i++&lt;36) {\r\n        var c=m[i-1],r=rb&amp;0xf,v=c==&#39;x&#39;?r:(r&amp;0x3|0x8);\r\n        u+=(c==&#39;-&#39;||c==&#39;4&#39;)?c:v.toString(16);rb=i%8==0?Math.random()*0xffffffff|0:rb&gt;&gt;4\r\n      }\r\n      return u\r\n    }\r\n\r\nThis saves us 10-30% depending on platform.  Not bad.  But the next big step gets rid of the toString function calls altogether with an optimization classic - the look-up table.  A simple 16-element lookup table will perform the job of toString(16) in much less time:\r\n\r\n    function e3() {\r\n      var h=&#39;0123456789abcdef&#39;;\r\n      var k=&#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;;\r\n      /* same as e4() below */\r\n    }\r\n    function e4() {\r\n      var h=[&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;];\r\n      var k=[&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;-&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;-&#39;,&#39;4&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;-&#39;,&#39;y&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;-&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;];\r\n      var u=&#39;&#39;,i=0,rb=Math.random()*0xffffffff|0;\r\n      while(i++&lt;36) {\r\n        var c=k[i-1],r=rb&amp;0xf,v=c==&#39;x&#39;?r:(r&amp;0x3|0x8);\r\n        u+=(c==&#39;-&#39;||c==&#39;4&#39;)?c:h[v];rb=i%8==0?Math.random()*0xffffffff|0:rb&gt;&gt;4\r\n      }\r\n      return u\r\n    }\r\n\r\nThe next optimization is another classic.  Since we&#39;re only handling 4-bits of output in each loop iteration, let&#39;s cut the number of loops in half and process 8-bits each iteration.  This is tricky since we still have to handle the rfc compliant bit positions, but it&#39;s not too hard.  We then have to make a larger lookup table (16x16, or 256) to store 0x00 - 0xff, and we build it only once, outside the e5() function.\r\n\r\n    var lut = []; for (var i=0; i&lt;256; i++) { lut[i] = (i&lt;16?&#39;0&#39;:&#39;&#39;)+(i).toString(16); }\r\n    function e5() {\r\n      var k=[&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;-&#39;,&#39;x&#39;,&#39;x&#39;,&#39;-&#39;,&#39;4&#39;,&#39;x&#39;,&#39;-&#39;,&#39;y&#39;,&#39;x&#39;,&#39;-&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;,&#39;x&#39;];\r\n      var u=&#39;&#39;,i=0,rb=Math.random()*0xffffffff|0;\r\n      while(i++&lt;20) {\r\n        var c=k[i-1],r=rb&amp;0xff,v=c==&#39;x&#39;?r:(c==&#39;y&#39;?(r&amp;0x3f|0x80):(r&amp;0xf|0x40));\r\n        u+=(c==&#39;-&#39;)?c:lut[v];rb=i%4==0?Math.random()*0xffffffff|0:rb&gt;&gt;8\r\n      }\r\n      return u\r\n    }\r\n\r\nI tried an e6() that processes 16-bits at a time, still using the 256-element LUT, and it showed the diminishing returns of optimization.  Though it had fewer iterations, the inner logic was complicated by the increased processing, and it performed the same on desktop, and only ~10% faster on mobile.\r\n\r\nThe final optimization technique to apply - unroll the loop.  Since we&#39;re looping a fixed number of times, we can technically write this all out by hand.  I tried this once with a single random variable r that I kept re-assigning, and performance tanked.  But with four variables assigned random data up front, then using the lookup table, and applying the proper rfc bits, this version smokes them all:\r\n\r\n    var lut = []; for (var i=0; i&lt;256; i++) { lut[i] = (i&lt;16?&#39;0&#39;:&#39;&#39;)+(i).toString(16); }\r\n    function e7()\r\n    {\r\n      var d0 = Math.random()*0xffffffff|0;\r\n      var d1 = Math.random()*0xffffffff|0;\r\n      var d2 = Math.random()*0xffffffff|0;\r\n      var d3 = Math.random()*0xffffffff|0;\r\n      return lut[d0&amp;0xff]+lut[d0&gt;&gt;8&amp;0xff]+lut[d0&gt;&gt;16&amp;0xff]+lut[d0&gt;&gt;24&amp;0xff]+&#39;-&#39;+\r\n        lut[d1&amp;0xff]+lut[d1&gt;&gt;8&amp;0xff]+&#39;-&#39;+lut[d1&gt;&gt;16&amp;0x0f|0x40]+lut[d1&gt;&gt;24&amp;0xff]+&#39;-&#39;+\r\n        lut[d2&amp;0x3f|0x80]+lut[d2&gt;&gt;8&amp;0xff]+&#39;-&#39;+lut[d2&gt;&gt;16&amp;0xff]+lut[d2&gt;&gt;24&amp;0xff]+\r\n        lut[d3&amp;0xff]+lut[d3&gt;&gt;8&amp;0xff]+lut[d3&gt;&gt;16&amp;0xff]+lut[d3&gt;&gt;24&amp;0xff];\r\n    }\r\n\r\nModualized:  http://jcward.com/UUID.js - `UUID.generate()`\r\n\r\nThe funny thing is, generating 16 bytes of random data is the easy part.  The whole trick is expressing it in String format with RFC compliance, and it&#39;s most tightly accomplished with 16 bytes of random data, an unrolled loop and lookup table.\r\n\r\nI hope my logic is correct -- it&#39;s very easy to make a mistake in this kind of tedious bit-work.  But the outputs look good to me.  I hope you enjoyed this mad ride through code optimization!\r\n\r\n**Be advised:** my primary goal was to show and teach potential optimization strategies.  Other answers cover important topics such as collisions and truly random numbers, which are important for generating good UUIDs."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1394105694,
          "answer_id": 22223296,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1394105694,
          "body_markdown": "This one is based on date, and add a random suffix to &quot;ensure&quot; uniqueness.\r\nWorks well for css identifiers.\r\nIt always returns something like and is easy to hack:\r\n\r\nuid-139410573297741\r\n\r\n\r\n    var getUniqueId = function (prefix) {\r\n                var d = new Date().getTime();\r\n                d += (parseInt(Math.random() * 100)).toString();\r\n                if (undefined === prefix) {\r\n                    prefix = &#39;uid-&#39;;\r\n                }\r\n                d = prefix + d;\r\n                return d;\r\n            };"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1396595614,
          "answer_id": 22856022,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1396840994,
          "last_edit_date": 1396840994,
          "body_markdown": "I&#39;m using this below function, hope it may be useful.\r\n    \r\n        \r\n        function NewGuid()\r\n             {\r\n               var sGuid=&quot;&quot;;\r\n               for (var i=0; i&lt;32; i++)\r\n                {\r\n                  sGuid+=Math.floor(Math.random()*0xF).toString(0xF);\r\n                }\r\n               return sGuid;\r\n             }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1402234208,
          "answer_id": 24106634,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1402234208,
          "body_markdown": "For my use-case, I required id generation that was guaranteed to be unique globally; without exception. I struggled with the problem for a while, and came up with a solution called tuid (Truly Unique ID). It generates an id with the first 32 characters being system-generated and the remaining digits representing milliseconds since epoch. In situations where I need to generate id&#39;s on client-side javascript, it works well. Have a look:\r\n\r\nhttps://github.com/mongoh/tuid"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1406043103,
          "answer_id": 24891600,
          "path": "stack.bower.answer",
          "score": 20,
          "up_vote_count": 20,
          "is_accepted": false,
          "last_activity_date": 1460382671,
          "last_edit_date": 1460382671,
          "body_markdown": "Well, this has a bunch of answers already, but unfortunately there&#39;s not a &quot;true&quot; random in the bunch. The version below is an adaptation of broofa&#39;s answer, but updated to include a &quot;true&quot; random function that uses crypto libraries where available, and the Alea() function as a fallback.\r\n\r\n      Math.log2 = Math.log2 || function(n){ return Math.log(n) / Math.log(2); }\r\n      Math.trueRandom = (function() {\r\n      var crypt = window.crypto || window.msCrypto;\r\n\r\n      if (crypt &amp;&amp; crypt.getRandomValues) {\r\n          // if we have a crypto library, use it\r\n          var random = function(min, max) {\r\n              var rval = 0;\r\n              var range = max - min;\r\n              if (range &lt; 2) {\r\n                  return min;\r\n              }\r\n\r\n              var bits_needed = Math.ceil(Math.log2(range));\r\n              if (bits_needed &gt; 53) {\r\n                throw new Exception(&quot;We cannot generate numbers larger than 53 bits.&quot;);\r\n              }\r\n              var bytes_needed = Math.ceil(bits_needed / 8);\r\n              var mask = Math.pow(2, bits_needed) - 1;\r\n              // 7776 -&gt; (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\r\n\r\n              // Create byte array and fill with N random numbers\r\n              var byteArray = new Uint8Array(bytes_needed);\r\n              crypt.getRandomValues(byteArray);\r\n\r\n              var p = (bytes_needed - 1) * 8;\r\n              for(var i = 0; i &lt; bytes_needed; i++ ) {\r\n                  rval += byteArray[i] * Math.pow(2, p);\r\n                  p -= 8;\r\n              }\r\n\r\n              // Use &amp; to apply the mask and reduce the number of recursive lookups\r\n              rval = rval &amp; mask;\r\n\r\n              if (rval &gt;= range) {\r\n                  // Integer out of acceptable range\r\n                  return random(min, max);\r\n              }\r\n              // Return an integer that falls within the range\r\n              return min + rval;\r\n          }\r\n          return function() {\r\n              var r = random(0, 1000000000) / 1000000000;\r\n              return r;\r\n          };\r\n      } else {\r\n          // From http://baagoe.com/en/RandomMusings/javascript/\r\n          // Johannes Baag&#195;&#184;e &lt;baagoe@baagoe.com&gt;, 2010\r\n          function Mash() {\r\n              var n = 0xefc8249d;\r\n\r\n              var mash = function(data) {\r\n                  data = data.toString();\r\n                  for (var i = 0; i &lt; data.length; i++) {\r\n                      n += data.charCodeAt(i);\r\n                      var h = 0.02519603282416938 * n;\r\n                      n = h &gt;&gt;&gt; 0;\r\n                      h -= n;\r\n                      h *= n;\r\n                      n = h &gt;&gt;&gt; 0;\r\n                      h -= n;\r\n                      n += h * 0x100000000; // 2^32\r\n                  }\r\n                  return (n &gt;&gt;&gt; 0) * 2.3283064365386963e-10; // 2^-32\r\n              };\r\n\r\n              mash.version = &#39;Mash 0.9&#39;;\r\n              return mash;\r\n          }\r\n\r\n          // From http://baagoe.com/en/RandomMusings/javascript/\r\n          function Alea() {\r\n              return (function(args) {\r\n                  // Johannes Baag&#195;&#184;e &lt;baagoe@baagoe.com&gt;, 2010\r\n                  var s0 = 0;\r\n                  var s1 = 0;\r\n                  var s2 = 0;\r\n                  var c = 1;\r\n\r\n                  if (args.length == 0) {\r\n                      args = [+new Date()];\r\n                  }\r\n                  var mash = Mash();\r\n                  s0 = mash(&#39; &#39;);\r\n                  s1 = mash(&#39; &#39;);\r\n                  s2 = mash(&#39; &#39;);\r\n\r\n                  for (var i = 0; i &lt; args.length; i++) {\r\n                      s0 -= mash(args[i]);\r\n                      if (s0 &lt; 0) {\r\n                          s0 += 1;\r\n                      }\r\n                      s1 -= mash(args[i]);\r\n                      if (s1 &lt; 0) {\r\n                          s1 += 1;\r\n                      }\r\n                      s2 -= mash(args[i]);\r\n                      if (s2 &lt; 0) {\r\n                          s2 += 1;\r\n                      }\r\n                  }\r\n                  mash = null;\r\n\r\n                  var random = function() {\r\n                      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\r\n                      s0 = s1;\r\n                      s1 = s2;\r\n                      return s2 = t - (c = t | 0);\r\n                  };\r\n                  random.uint32 = function() {\r\n                      return random() * 0x100000000; // 2^32\r\n                  };\r\n                  random.fract53 = function() {\r\n                      return random() +\r\n                          (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\r\n                  };\r\n                  random.version = &#39;Alea 0.9&#39;;\r\n                  random.args = args;\r\n                  return random;\r\n\r\n              }(Array.prototype.slice.call(arguments)));\r\n          };\r\n          return Alea();\r\n      }\r\n    }());\r\n\r\n    Math.guid = function() {\r\n        return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c)    {\r\n          var r = Math.trueRandom() * 16 | 0,\r\n              v = c == &#39;x&#39; ? r : (r &amp; 0x3 | 0x8);\r\n          return v.toString(16);\r\n      });\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1425775171,
          "answer_id": 28921801,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1487601981,
          "last_edit_date": 1487601981,
          "body_markdown": "I wanted to understand broofa&#39;s answer, so I expanded it and added comments:\r\n\r\n    var uuid = function () {\r\n        return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(\r\n            /[xy]/g,\r\n            function (match) {\r\n                /*\r\n                * Create a random nibble. The two clever bits of this code:\r\n                *\r\n                * - Bitwise operations will truncate floating point numbers\r\n                * - For a bitwise OR of any x, x | 0 = x\r\n                *\r\n                * So:\r\n                *\r\n                * Math.random * 16\r\n                *\r\n                * creates a random floating point number\r\n                * between 0 (inclusive) and 16 (exclusive) and\r\n                *\r\n                * | 0\r\n                *\r\n                * truncates the floating point number into an integer.\r\n                */\r\n                var randomNibble = Math.random() * 16 | 0;\r\n                \r\n                /*\r\n                * Resolves the variant field. If the variant field (delineated\r\n                * as y in the initial string) is matched, the nibble must\r\n                * match the mask (where x is a do-not-care bit):\r\n                *\r\n                * 10xx\r\n                *\r\n                * This is achieved by performing the following operations in\r\n                * sequence (where x is an intermediate result):\r\n                *\r\n                * - x &amp; 0x3, which is equivalent to x % 3\r\n                * - x | 0x8, which is equivalent to x + 8\r\n                *\r\n                * This results in a nibble between 8 inclusive and 11 exclusive,\r\n                * (or 1000 and 1011 in binary), all of which satisfy the variant\r\n                * field mask above.\r\n                */\r\n                var nibble = (match == &#39;y&#39;) ?\r\n                    (randomNibble &amp; 0x3 | 0x8) :\r\n                    randomNibble;\r\n\r\n                /*\r\n                * Ensure the nibble integer is encoded as base 16 (hexadecimal).\r\n                */\r\n                return nibble.toString(16);\r\n            }\r\n        );\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1432706457,
          "answer_id": 30474286,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1432706457,
          "body_markdown": "A simple solution to generate unique identification is to use time token and add random number to it. I prefer to prefix it with &quot;uuid-&quot;.&lt;br /&gt;&lt;br /&gt;\r\nBelow function will generate random string of type: &lt;strong&gt;uuid-14d93eb1b9b4533e6&lt;/strong&gt;. One doesn&#39;t need to generate 32 chars random string. 16 char random string is more than sufficient in this case to provide the unique UUIDs in javascript.\r\n&lt;pre&gt;\r\nvar createUUID = function() {\r\n  return&quot;uuid-&quot;+((new Date).getTime().toString(16)+Math.floor(1E7*Math.random()).toString(16));\r\n}\r\n&lt;/pre&gt;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1433293125,
          "answer_id": 30609091,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1433293125,
          "last_edit_date": 1495540056,
          "body_markdown": "Simple code that uses `crypto.getRandomValues(a)` on [supported browsers][1] (IE11+, iOS7+, FF21+, Chrome, Android Chrome). Avoids using `Math.random()` because that can cause collisions (for example 20 collisions for 4000 generated uuids in a real situation by [Muxa][2]).\r\n\r\n    function uuid() {\r\n    \tfunction randomDigit() {\r\n    \t\tif (crypto &amp;&amp; crypto.getRandomValues) {\r\n    \t\t\tvar rands = new Uint8Array(1);\r\n    \t\t\tcrypto.getRandomValues(rands);\r\n    \t\t\treturn (rands[0] % 16).toString(16);\r\n    \t\t} else {\r\n    \t\t\treturn ((Math.random() * 16) | 0).toString(16);\r\n    \t\t}\r\n    \t}\r\n    \tvar crypto = window.crypto || window.msCrypto;\r\n    \treturn &#39;xxxxxxxx-xxxx-4xxx-8xxx-xxxxxxxxxxxx&#39;.replace(/x/g, randomDigit);\r\n    }\r\n\r\nNotes:\r\n\r\n - Optimised for code readability not speed, so suitable for say a few hundred uuid&#39;s per second. Generates about 10000 uuid() per second in Chromium on my laptop using http://jsbin.com/fuwigo/1 to measure performance.\r\n - Only uses 8 for &quot;y&quot; because that simplifies code readability (y is allowed to be 8, 9, A or B).\r\n\r\n  [1]: http://caniuse.com/#search=getRandomValues\r\n  [2]: https://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1439540562,
          "answer_id": 32005477,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1439540562,
          "body_markdown": "Just thought I&#39;d post yet another way of doing the same thing.\r\n\r\n    function guid() {\r\n      var chars = [&quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;];\r\n      var str = &quot;&quot;;\r\n      for(var i=0;i&lt;36;i++) {\r\n        var str = str + ((i == 8 || i == 13 || i == 18 || i == 23) ? &quot;-&quot; : chars[Math.floor(Math.random()*chars.length)]);\r\n      };\r\n      return str;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1444701019,
          "answer_id": 33092860,
          "path": "stack.bower.answer",
          "score": 18,
          "up_vote_count": 18,
          "is_accepted": false,
          "last_activity_date": 1495697940,
          "last_edit_date": 1495697940,
          "body_markdown": "You can use node-uuid (https://github.com/kelektiv/node-uuid)\r\n\r\nSimple, fast generation of [RFC4122][1] UUIDS.\r\n\r\nFeatures:\r\n\r\n - Generate RFC4122 version 1 or version 4 UUIDs\r\n - Runs in node.js and browsers.\r\n - Cryptographically strong random # generation on supporting platforms.\r\n - Small footprint (Want something smaller? [Check this out!][2])\r\n\r\n---\r\n\r\n**Install Using NPM:**\r\n\r\n    npm install uuid\r\n\r\n---\r\n\r\n**Or Using uuid via browser:**\r\n\r\nDownload Raw File (uuid v1): https://raw.githubusercontent.com/kelektiv/node-uuid/master/v1.js\r\nDownload Raw File (uuid v4): https://raw.githubusercontent.com/kelektiv/node-uuid/master/v4.js\r\n\r\n---\r\n\r\nWant even smaller? Check this out: https://gist.github.com/jed/982883\r\n\r\n---\r\n\r\n**Usage:**\r\n\r\n    // Generate a v1 UUID (time-based)\r\n    const uuidV1 = require(&#39;uuid/v1&#39;);\r\n    uuidV1(); // -&gt; &#39;6c84fb90-12c4-11e1-840d-7b25c5ee775a&#39;\r\n\r\n    // Generate a v4 UUID (random)\r\n    const uuidV4 = require(&#39;uuid/v4&#39;);\r\n    uuidV4(); // -&gt; &#39;110ec58a-a0f2-4ac4-8393-c866d813b8d1&#39;\r\n\r\n    // Generate a v5 UUID (namespace)\r\n    const uuidV5 = require(&#39;uuid/v5&#39;);\r\n    \r\n    // ... using predefined DNS namespace (for domain names)\r\n    uuidV5(&#39;hello.example.com&#39;, v5.DNS)); // -&gt; &#39;fdda765f-fc57-5604-a269-52a7df8164ec&#39;\r\n    \r\n    // ... using predefined URL namespace (for, well, URLs)\r\n    uuidV5(&#39;http://example.com/hello&#39;, v5.URL); // -&gt; &#39;3bbcee75-cecc-5b56-8031-b6641c1ed1f1&#39;\r\n    \r\n    // ... using a custom namespace\r\n    const MY_NAMESPACE = &#39;(previously generated unique uuid string)&#39;;\r\n    uuidV5(&#39;hello&#39;, MY_NAMESPACE); // -&gt; &#39;90123e1c-7512-523e-bb28-76fab9f2f73d&#39;\r\n\r\n\r\n  [1]: http://www.ietf.org/rfc/rfc4122.txt\r\n  [2]: https://gist.github.com/982883"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1445934781,
          "answer_id": 33363081,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1445983366,
          "last_edit_date": 1445983366,
          "body_markdown": "You could use the npm package *guid*, a guid generator and validator.\r\n\r\nhttps://www.npmjs.com/package/guid\r\n\r\n\r\nExample:\r\n\r\n    Guid.raw();\r\n    // -&gt; &#39;6fdf6ffc-ed77-94fa-407e-a7b86ed9e59d&#39;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1454343968,
          "answer_id": 35135400,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1454343968,
          "body_markdown": "Just in case anyone dropping by google is seeking a small utility library, ShortId (https://www.npmjs.com/package/shortid) meets all the requirements of this question. It allows specifying allowed characters and length, and guarantees non-sequential, non-repeating strings.\r\n\r\nTo make this more of a real answer, the core of that library uses the following logic to produce its short ids:\r\n\r\n    function encode(lookup, number) {\r\n        var loopCounter = 0;\r\n        var done;\r\n    \r\n        var str = &#39;&#39;;\r\n    \r\n        while (!done) {\r\n            str = str + lookup( ( (number &gt;&gt; (4 * loopCounter)) &amp; 0x0f ) | randomByte() );\r\n            done = number &lt; (Math.pow(16, loopCounter + 1 ) );\r\n            loopCounter++;\r\n        }\r\n        return str;\r\n    }\r\n    \r\n    /** Generates the short id */\r\n    function generate() {\r\n    \r\n        var str = &#39;&#39;;\r\n    \r\n        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\r\n    \r\n        if (seconds === previousSeconds) {\r\n            counter++;\r\n        } else {\r\n            counter = 0;\r\n            previousSeconds = seconds;\r\n        }\r\n    \r\n        str = str + encode(alphabet.lookup, version);\r\n        str = str + encode(alphabet.lookup, clusterWorkerId);\r\n        if (counter &gt; 0) {\r\n            str = str + encode(alphabet.lookup, counter);\r\n        }\r\n        str = str + encode(alphabet.lookup, seconds);\r\n    \r\n        return str;\r\n    }\r\n\r\nI have not edited this to reflect _only_ the most basic parts of this approach, so the above code includes some additional logic from the library. If you are curious about everything it is doing, take a look at the source: https://github.com/dylang/shortid/tree/master/lib"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458628657,
          "answer_id": 36147692,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1458628657,
          "body_markdown": "Hi here is an working example it generates 32-digit Unique UUID.   \r\n\r\n    function generateUUID() {\r\n          var d = new Date();\r\n          var k = d.getTime();\r\n         var str = k.toString(16).slice(1)\r\n        var UUID= &#39;xxxx-xxxx-4xxx-yxxx-xzx&#39;.replace(/[xy]/g, function (c)\r\n          {\r\n            var r = Math.random() * 16 | 0;\r\n            v = c == &#39;x&#39; ? r : (r &amp; 3 | 8);\r\n            return v.toString(16);\r\n          });\r\n          var newString = UUID.replace(/[z]/, str)\r\n          return newString;\r\n        }\r\n        var x = generateUUID()\r\n        console.log(x,x.length)\r\n\r\n  [1]: https://jsfiddle.net/ashish0019/b81z5y16/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1470939336,
          "answer_id": 38903464,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1470939336,
          "body_markdown": "I found this script useful for creating GUIDs in JavaScript\r\n\r\nhttps://github.com/addui/GUIDJS\r\n\r\n    var myGuid = GUID();"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1472659067,
          "answer_id": 39254139,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1472659067,
          "body_markdown": "This may be of use to someone...\r\n\r\n    var d = new Date().valueOf();\r\n    var n = d.toString();\r\n    var result = &#39;&#39;;\r\n    var length = 32;\r\n    var p = 0;\r\n    var chars = &#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;;\r\n    \r\n    for (var i = length; i &gt; 0; --i){\r\n    \tresult += ((i &amp; 1) &amp;&amp; n.charAt(p) ? &#39;&lt;b&gt;&#39; + n.charAt(p) + &#39;&lt;/b&gt;&#39; : chars[Math.floor(Math.random() * chars.length)]);\r\n    \tif(i &amp; 1) p++;\r\n    };\r\n\r\nhttps://jsfiddle.net/j0evrdf1/1/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1473238055,
          "answer_id": 39365250,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1473238055,
          "body_markdown": "    function randomHex(length) {\r\n        var random_string = &#39;&#39;;\r\n        if(!length){\r\n            length = 1;\r\n        }\r\n        for(var i=0; i&lt;length; i+=1){\r\n            random_string += Math.floor(Math.random() * 15).toString(16);\r\n        }\r\n        return random_string;\r\n    }\r\n\r\n    function guid() {\r\n        return randomHex(8);\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1476593040,
          "answer_id": 40066925,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1476593040,
          "body_markdown": "Here you can find a very small function that generates uuids https://gist.github.com/jed/982883\r\n\r\nOne of the final versions is:\r\n\r\n    function b(\r\n      a                  // placeholder\r\n    ){\r\n      var cryptoObj = window.crypto || window.msCrypto; // for IE 11\r\n      return a           // if the placeholder was passed, return\r\n        ? (              // a random number from 0 to 15\r\n          a ^            // unless b is 8,\r\n          cryptoObj.getRandomValues(new Uint8Array(1))[0]  // in which case\r\n          % 16           // a random number from\r\n          &gt;&gt; a/4         // 8 to 11\r\n          ).toString(16) // in hexadecimal\r\n        : (              // or otherwise a concatenated string:\r\n          [1e7] +        // 10000000 +\r\n          -1e3 +         // -1000 +\r\n          -4e3 +         // -4000 +\r\n          -8e3 +         // -80000000 +\r\n          -1e11          // -100000000000,\r\n          ).replace(     // replacing\r\n            /[018]/g,    // zeroes, ones, and eights with\r\n            b            // random hex digits\r\n          )\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 11,
          "creation_date": 1477492610,
          "answer_id": 40265174,
          "path": "stack.bower.answer",
          "score": -10,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1477492610,
          "body_markdown": "it has dependency on mongodb of course, but I personally have it somewhere around anyways, so generating new id is simple as this:\r\n\r\n    const ObjectID = require(&#39;mongodb&#39;).ObjectID;\r\n    let id = new ObjectID().toString();\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1487423595,
          "answer_id": 42315603,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1487423595,
          "body_markdown": "The one I&#39;ve been using lately:\r\n\r\n    const uuid = function b(a) {\r\n      return a ? (a ^ Math.random() * 16 &gt;&gt; a / 4).toString(16) :\r\n          ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\r\n    };"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1488323267,
          "answer_id": 42520442,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1488323267,
          "body_markdown": "You can use some of the npm packages (directly if node.js, browserify if on UI side)\r\n\r\n[uuid][1]\r\n\r\n[node-uuid][2]\r\n\r\n\r\n  [1]: https://www.npmjs.com/package/uuid &quot;uuid&quot;\r\n  [2]: https://www.npmjs.com/package/node-uuid &quot;node-uuid&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1494447226,
          "answer_id": 43901924,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1494447226,
          "body_markdown": "If you just need a random 128 bit string in no particular format you can use:\r\n\r\n    function uuid() {\r\n        return crypto.getRandomValues(new Uint32Array(4)).join(&#39;-&#39;);\r\n    }\r\n\r\nWhich will return something like `2350143528-4164020887-938913176-2513998651`."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1495227022,
          "answer_id": 44078785,
          "path": "stack.bower.answer",
          "score": 44,
          "up_vote_count": 45,
          "is_accepted": false,
          "last_activity_date": 1519908070,
          "last_edit_date": 1519908070,
          "body_markdown": "    var uniqueId = Math.random().toString(36).substring(2) \r\n                   + (new Date()).getTime().toString(36);\r\n\r\nIf ID&#39;s are generated more than 1 millisecond apart, they are 100% unique.\r\n\r\nIf two ID&#39;s are generated at shorter intervals, and assuming that the random method is truly random, this would generate ID&#39;s that are 99.99999999999999% likely to be globally unique (collision in 1 of 10^15)\r\n\r\nYou can increase this number by adding more digits, but to generate 100% unique ID&#39;s you will need to use a global counter.\r\n\r\n\r\n\r\n&lt;!-- begin snippet: js hide: true console: false babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    document.getElementById(&quot;unique&quot;).innerHTML =\r\n      Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;div id=&quot;unique&quot;&gt;\r\n    &lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1499605313,
          "answer_id": 44996682,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1499605313,
          "body_markdown": "ES6 sample\r\n\r\n    const guid=()=&gt; {\r\n      const s4=()=&gt; Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);     \r\n      return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4() + s4() + s4()}`;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1511532851,
          "answer_id": 47475081,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1511532851,
          "body_markdown": "Just another more readable variant with just two mutations.\r\n\r\n    function uuid4()\r\n    {\r\n      function hex (s, b)\r\n      {\r\n        return s +\r\n          (b &gt;&gt;&gt; 4   ).toString (16) +  // high nibble\r\n          (b &amp; 0b1111).toString (16);   // low nibble\r\n      }\r\n    \r\n      let r = crypto.getRandomValues (new Uint8Array (16));\r\n    \r\n      r[6] = r[6] &gt;&gt;&gt; 4 | 0b01000000; // Set type 4: 0100\r\n      r[8] = r[8] &gt;&gt;&gt; 3 | 0b10000000; // Set variant: 100\r\n    \r\n      return\r\n        r.slice ( 0,  4).reduce (hex, &#39;&#39; ) +\r\n        r.slice ( 4,  6).reduce (hex, &#39;-&#39;) +\r\n        r.slice ( 6,  8).reduce (hex, &#39;-&#39;) +\r\n        r.slice ( 8, 10).reduce (hex, &#39;-&#39;) +\r\n        r.slice (10, 16).reduce (hex, &#39;-&#39;);\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1514810998,
          "answer_id": 48049791,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1514810998,
          "body_markdown": "For those who are using Javascript on Windows (e.g. WScript / CScript / MSHTA). One can use `ActiveX`. Specifically, the `Scriptlet.Typelib` object:\r\n\r\n    WScript.Echo((new ActiveXObject(&quot;Scriptlet.TypeLib&quot;)).Guid)\r\n\r\nNote that this answer only works on the technologies I listed, it will not work any browser, not even Microsoft Edge! So, your mileage will vary with this answer."
        }
      ],
      "title": "Create GUID / UUID in JavaScript?",
      "view_count": 1133295,
      "answer_count": 50,
      "code_snippet": [
        "<code>function guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n</code>",
        "<code>4</code>",
        "<code>var uuid = guid();\n</code>",
        "<code>function guid() {\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n    s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\nfunction s4() {\r\n  return Math.floor((1 + Math.random()) * 0x10000)\r\n    .toString(16)\r\n    .substring(1);\r\n}\r\n\r\ndocument.getElementById('jsGenId').addEventListener('click', function() {\r\n  document.getElementById('jsIdResult').value = guid();\r\n})</code>",
        "<code>input { font-family: monospace; }</code>",
        "<code>&lt;button id=\"jsGenId\" type=\"button\"&gt;Generate GUID&lt;/button&gt;\r\n&lt;br&gt;\r\n&lt;input id=\"jsIdResult\" type=\"text\" placeholder=\"Results will be placed here...\" readonly size=\"40\"/&gt;</code>",
        "<code>function uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r &amp; 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nconsole.log(uuidv4())</code>",
        "<code>Math.random()</code>",
        "<code>Math.random()</code>",
        "<code>crypto</code>",
        "<code>function uuidv4() {\r\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =&gt;\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] &amp; 15 &gt;&gt; c / 4).toString(16)\r\n  )\r\n}\r\n\r\nconsole.log(uuidv4());</code>",
        "<code>Math.random</code>",
        "<code>Math.random</code>",
        "<code>function generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();\n    if (typeof performance !== 'undefined' &amp;&amp; typeof performance.now === 'function'){\n        d += performance.now(); //use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r &amp; 0x3 | 0x8)).toString(16);\n    });\n}\n</code>",
        "<code>new Date().getTime()</code>",
        "<code>Date.now()</code>",
        "<code>new Date().getTime()</code>",
        "<code>performance.now()</code>",
        "<code>replace()</code>",
        "<code>toString()</code>",
        "<code>Math.random()</code>",
        "<code>generateQuickGUID</code>",
        "<code>guid</code>",
        "<code>generateQuickGuid</code>",
        "<code>                  Desktop   Android\n           broofa: 1617ms   12869ms\n               e1:  636ms    5778ms\n               e2:  606ms    4754ms\n               e3:  364ms    3003ms\n               e4:  329ms    2015ms\n               e5:  147ms    1156ms\n               e6:  146ms    1035ms\n               e7:  105ms     726ms\n             guid:  962ms   10762ms\ngenerateQuickGuid:  292ms    2961ms\n  - Note that results will vary by browser/cpu.\n</code>",
        "<code>'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n  var r = Math.random()*16|0, v = c == 'x' ? r : (r&amp;0x3|0x8);\n  return v.toString(16);\n});\n</code>",
        "<code>x</code>",
        "<code>y</code>",
        "<code>10</code>",
        "<code>-</code>",
        "<code>4</code>",
        "<code>-</code>",
        "<code>4</code>",
        "<code>function e1() {\n  var u='',i=0;\n  while(i++&lt;36) {\n    var c='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'[i-1],r=Math.random()*16|0,v=c=='x'?r:(r&amp;0x3|0x8);\n    u+=(c=='-'||c=='4')?c:v.toString(16)\n  }\n  return u;\n}\n</code>",
        "<code>-</code>",
        "<code>4</code>",
        "<code>function e2() {\n  var u='',m='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx',i=0,rb=Math.random()*0xffffffff|0;\n  while(i++&lt;36) {\n    var c=m[i-1],r=rb&amp;0xf,v=c=='x'?r:(r&amp;0x3|0x8);\n    u+=(c=='-'||c=='4')?c:v.toString(16);rb=i%8==0?Math.random()*0xffffffff|0:rb&gt;&gt;4\n  }\n  return u\n}\n</code>",
        "<code>function e3() {\n  var h='0123456789abcdef';\n  var k='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n  /* same as e4() below */\n}\nfunction e4() {\n  var h=['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'];\n  var k=['x','x','x','x','x','x','x','x','-','x','x','x','x','-','4','x','x','x','-','y','x','x','x','-','x','x','x','x','x','x','x','x','x','x','x','x'];\n  var u='',i=0,rb=Math.random()*0xffffffff|0;\n  while(i++&lt;36) {\n    var c=k[i-1],r=rb&amp;0xf,v=c=='x'?r:(r&amp;0x3|0x8);\n    u+=(c=='-'||c=='4')?c:h[v];rb=i%8==0?Math.random()*0xffffffff|0:rb&gt;&gt;4\n  }\n  return u\n}\n</code>",
        "<code>var lut = []; for (var i=0; i&lt;256; i++) { lut[i] = (i&lt;16?'0':'')+(i).toString(16); }\nfunction e5() {\n  var k=['x','x','x','x','-','x','x','-','4','x','-','y','x','-','x','x','x','x','x','x'];\n  var u='',i=0,rb=Math.random()*0xffffffff|0;\n  while(i++&lt;20) {\n    var c=k[i-1],r=rb&amp;0xff,v=c=='x'?r:(c=='y'?(r&amp;0x3f|0x80):(r&amp;0xf|0x40));\n    u+=(c=='-')?c:lut[v];rb=i%4==0?Math.random()*0xffffffff|0:rb&gt;&gt;8\n  }\n  return u\n}\n</code>",
        "<code>var lut = []; for (var i=0; i&lt;256; i++) { lut[i] = (i&lt;16?'0':'')+(i).toString(16); }\nfunction e7()\n{\n  var d0 = Math.random()*0xffffffff|0;\n  var d1 = Math.random()*0xffffffff|0;\n  var d2 = Math.random()*0xffffffff|0;\n  var d3 = Math.random()*0xffffffff|0;\n  return lut[d0&amp;0xff]+lut[d0&gt;&gt;8&amp;0xff]+lut[d0&gt;&gt;16&amp;0xff]+lut[d0&gt;&gt;24&amp;0xff]+'-'+\n    lut[d1&amp;0xff]+lut[d1&gt;&gt;8&amp;0xff]+'-'+lut[d1&gt;&gt;16&amp;0x0f|0x40]+lut[d1&gt;&gt;24&amp;0xff]+'-'+\n    lut[d2&amp;0x3f|0x80]+lut[d2&gt;&gt;8&amp;0xff]+'-'+lut[d2&gt;&gt;16&amp;0xff]+lut[d2&gt;&gt;24&amp;0xff]+\n    lut[d3&amp;0xff]+lut[d3&gt;&gt;8&amp;0xff]+lut[d3&gt;&gt;16&amp;0xff]+lut[d3&gt;&gt;24&amp;0xff];\n}\n</code>",
        "<code>UUID.generate()</code>",
        "<code>Math.random()*0xFFFFFFFF</code>",
        "<code>Math.random()*0x100000000</code>",
        "<code>&gt;&gt;&gt;0</code>",
        "<code>|0</code>",
        "<code>window.crypto.getRandomValues</code>",
        "<code>function createUUID() {\n    // http://www.ietf.org/rfc/rfc4122.txt\n    var s = [];\n    var hexDigits = \"0123456789abcdef\";\n    for (var i = 0; i &lt; 36; i++) {\n        s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n    s[19] = hexDigits.substr((s[19] &amp; 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n    s[8] = s[13] = s[18] = s[23] = \"-\";\n\n    var uuid = s.join(\"\");\n    return uuid;\n}\n</code>",
        "<code>var s = new Array(36);</code>",
        "<code>Guid.Parse()</code>",
        "<code>B42A153F1D9A4F92990392C11DD684D2</code>",
        "<code>XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX</code>",
        "<code>/**\n * Generates a GUID string.\n * @returns {String} The generated GUID.\n * @example af8a8416-6e18-a307-bd9c-f2c947bbb3aa\n * @author Slavik Meltser (slavik@meltser.info).\n * @link http://slavik.meltser.info/?p=142\n */\nfunction guid() {\n    function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n</code>",
        "<code>console.time('t'); \nfor (var i = 0; i &lt; 10000000; i++) { \n    guid(); \n};\nconsole.timeEnd('t');\n</code>",
        "<code>Math.random()</code>",
        "<code>0.4363923368509859</code>",
        "<code>0.6fb7687f</code>",
        "<code>Math.random().toString(16)</code>",
        "<code>0.</code>",
        "<code>0.6fb7687f</code>",
        "<code>6fb7687f</code>",
        "<code>(Math.random().toString(16).substr(2,8)</code>",
        "<code>Math.random()</code>",
        "<code>0.4363</code>",
        "<code>0.4363000000000000</code>",
        "<code>\"000000000\"</code>",
        "<code>substr()</code>",
        "<code>Math.random()</code>",
        "<code>\"0\"+\"000000000\"</code>",
        "<code>\"1\"+\"000000000\"</code>",
        "<code>Math.random().toString(16)+\"000000000\").substr(2,8)</code>",
        "<code>XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX</code>",
        "<code>XXXXXXXX</code>",
        "<code>-XXXX-XXXX</code>",
        "<code>XXXXXXXX</code>",
        "<code>-XXXX-XXXX</code>",
        "<code>-XXXX-XXXX</code>",
        "<code>XXXXXXXX</code>",
        "<code>_p8(s)</code>",
        "<code>s</code>",
        "<code>_p8() + _p8(true) + _p8(true) + _p8()</code>",
        "<code>generateGUID = (typeof(window.crypto) != 'undefined' &amp;&amp; \n                typeof(window.crypto.getRandomValues) != 'undefined') ?\n    function() {\n        // If we have a cryptographically secure PRNG, use that\n        // https://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n        var buf = new Uint16Array(8);\n        window.crypto.getRandomValues(buf);\n        var S4 = function(num) {\n            var ret = num.toString(16);\n            while(ret.length &lt; 4){\n                ret = \"0\"+ret;\n            }\n            return ret;\n        };\n        return (S4(buf[0])+S4(buf[1])+\"-\"+S4(buf[2])+\"-\"+S4(buf[3])+\"-\"+S4(buf[4])+\"-\"+S4(buf[5])+S4(buf[6])+S4(buf[7]));\n    }\n\n    :\n\n    function() {\n        // Otherwise, just use Math.random\n        // https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&amp;0x3|0x8);\n            return v.toString(16);\n        });\n    };\n</code>",
        "<code>, does not keep the Version 4 UUIDs format defined by RFC 4122. That is instead of </code>",
        "<code>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>",
        "<code>UUIDv4 = function b(a){return a?(a^Math.random()*16&gt;&gt;a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)}\n</code>",
        "<code>UUIDv4 =\n\nfunction b(\n  a // placeholder\n){\n  return a // if the placeholder was passed, return\n    ? ( // a random number from 0 to 15\n      a ^ // unless b is 8,\n      Math.random() // in which case\n      * 16 // a random number from\n      &gt;&gt; a/4 // 8 to 11\n      ).toString(16) // in hexadecimal\n    : ( // or otherwise a concatenated string:\n      [1e7] + // 10000000 +\n      -1e3 + // -1000 +\n      -4e3 + // -4000 +\n      -8e3 + // -80000000 +\n      -1e11 // -100000000000,\n      ).replace( // replacing\n        /[018]/g, // zeroes, ones, and eights with\n        b // random hex digits\n      )\n}\n</code>",
        "<code>function generateQuickGuid() {\n    return Math.random().toString(36).substring(2, 15) +\n        Math.random().toString(36).substring(2, 15);\n}\n</code>",
        "<code>&gt;&gt;&gt; generateQuickGuid()\n\"nvcjf1hs7tf8yyk4lmlijqkuo9\"\n\"yq6gipxqta4kui8z05tgh9qeel\"\n\"36dh5sec7zdj90sk2rx7pjswi2\"\nruntime: 32.5s\n\n&gt;&gt;&gt; GUID() // John Millikin\n\"7a342ca2-e79f-528e-6302-8f901b0b6888\"\nruntime: 57.8s\n\n&gt;&gt;&gt; regexGuid() // broofa\n\"396e0c46-09e4-4b19-97db-bd423774a4b3\"\nruntime: 91.2s\n\n&gt;&gt;&gt; createUUID() // Kevin Hakanson\n\"403aa1ab-9f70-44ec-bc08-5d5ac56bd8a5\"\nruntime: 65.9s\n\n&gt;&gt;&gt; UUIDv4() // Jed Schmidt\n\"f4d7d31f-fa83-431a-b30c-3e6cc37cc6ee\"\nruntime: 282.4s\n\n&gt;&gt;&gt; Math.uuid() // broofa\n\"5BD52F55-E68F-40FC-93C2-90EE069CE545\"\nruntime: 225.8s\n\n&gt;&gt;&gt; Math.uuidFast() // broofa\n\"6CB97A68-23A2-473E-B75B-11263781BBE6\"\nruntime: 92.0s\n\n&gt;&gt;&gt; Math.uuidCompact() // broofa\n\"3d7b7a06-0a67-4b67-825c-e5c43ff8c1e8\"\nruntime: 229.0s\n\n&gt;&gt;&gt; bitwiseGUID() // jablko\n\"baeaa2f-7587-4ff1-af23-eeab3e92\"\nruntime: 79.6s\n\n&gt;&gt;&gt;&gt; betterWayGUID() // Andrea Turri\n\"383585b0-9753-498d-99c3-416582e9662c\"\nruntime: 60.0s\n\n&gt;&gt;&gt;&gt; UUID() // John Fowler\n\"855f997b-4369-4cdb-b7c9-7142ceaf39e8\"\nruntime: 62.2s\n</code>",
        "<code>var r;\nconsole.time('t'); \nfor (var i = 0; i &lt; 10000000; i++) { \n    r = FuncToTest(); \n};\nconsole.timeEnd('t');\n</code>",
        "<code>var uniqueId = Math.random().toString(36).substring(2) \n               + (new Date()).getTime().toString(36);\n</code>",
        "<code>document.getElementById(\"unique\").innerHTML =\r\n  Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);</code>",
        "<code>&lt;div id=\"unique\"&gt;\r\n&lt;/div&gt;</code>",
        "<code>function generateGuid() {\n  var result, i, j;\n  result = '';\n  for(j=0; j&lt;32; j++) {\n    if( j == 8 || j == 12|| j == 16|| j == 20) \n      result = result + '-';\n    i = Math.floor(Math.random()*16).toString(16).toUpperCase();\n    result = result + i;\n  }\n  return result;\n}\n</code>",
        "<code>var crypto = window.crypto || window.msCrypto || null; // IE11 fix\r\n\r\nvar Guid = Guid || (function() {\r\n\r\n  var EMPTY = '00000000-0000-0000-0000-000000000000';\r\n\r\n  var _padLeft = function(paddingString, width, replacementChar) {\r\n    return paddingString.length &gt;= width ? paddingString : _padLeft(replacementChar + paddingString, width, replacementChar || ' ');\r\n  };\r\n\r\n  var _s4 = function(number) {\r\n    var hexadecimalResult = number.toString(16);\r\n    return _padLeft(hexadecimalResult, 4, '0');\r\n  };\r\n\r\n  var _cryptoGuid = function() {\r\n    var buffer = new window.Uint16Array(8);\r\n    window.crypto.getRandomValues(buffer);\r\n    return [_s4(buffer[0]) + _s4(buffer[1]), _s4(buffer[2]), _s4(buffer[3]), _s4(buffer[4]), _s4(buffer[5]) + _s4(buffer[6]) + _s4(buffer[7])].join('-');\r\n  };\r\n\r\n  var _guid = function() {\r\n    var currentDateMilliseconds = new Date().getTime();\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(currentChar) {\r\n      var randomChar = (currentDateMilliseconds + Math.random() * 16) % 16 | 0;\r\n      currentDateMilliseconds = Math.floor(currentDateMilliseconds / 16);\r\n      return (currentChar === 'x' ? randomChar : (randomChar &amp; 0x7 | 0x8)).toString(16);\r\n    });\r\n  };\r\n\r\n  var create = function() {\r\n    var hasCrypto = crypto != 'undefined' &amp;&amp; crypto !== null,\r\n      hasRandomValues = typeof(window.crypto.getRandomValues) != 'undefined';\r\n    return (hasCrypto &amp;&amp; hasRandomValues) ? _cryptoGuid() : _guid();\r\n  };\r\n\r\n  return {\r\n    newGuid: create,\r\n    empty: EMPTY\r\n  };\r\n})();\r\n\r\n// DEMO: Create and show GUID\r\nconsole.log(Guid.newGuid());</code>",
        "<code>GUID</code>",
        "<code>string</code>",
        "<code>Uint16Array</code>",
        "<code>toString</code>",
        "<code>object</code>",
        "<code>_cryptoGuid</code>",
        "<code>_guid</code>",
        "<code>var uuid = function() {\n    var buf = new Uint32Array(4);\n    window.crypto.getRandomValues(buf);\n    var idx = -1;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        idx++;\n        var r = (buf[idx&gt;&gt;3] &gt;&gt; ((idx%8)*4))&amp;15;\n        var v = c == 'x' ? r : (r&amp;0x3|0x8);\n        return v.toString(16);\n    });\n};\n</code>",
        "<code>  Math.log2 = Math.log2 || function(n){ return Math.log(n) / Math.log(2); }\n  Math.trueRandom = (function() {\n  var crypt = window.crypto || window.msCrypto;\n\n  if (crypt &amp;&amp; crypt.getRandomValues) {\n      // if we have a crypto library, use it\n      var random = function(min, max) {\n          var rval = 0;\n          var range = max - min;\n          if (range &lt; 2) {\n              return min;\n          }\n\n          var bits_needed = Math.ceil(Math.log2(range));\n          if (bits_needed &gt; 53) {\n            throw new Exception(\"We cannot generate numbers larger than 53 bits.\");\n          }\n          var bytes_needed = Math.ceil(bits_needed / 8);\n          var mask = Math.pow(2, bits_needed) - 1;\n          // 7776 -&gt; (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n          // Create byte array and fill with N random numbers\n          var byteArray = new Uint8Array(bytes_needed);\n          crypt.getRandomValues(byteArray);\n\n          var p = (bytes_needed - 1) * 8;\n          for(var i = 0; i &lt; bytes_needed; i++ ) {\n              rval += byteArray[i] * Math.pow(2, p);\n              p -= 8;\n          }\n\n          // Use &amp; to apply the mask and reduce the number of recursive lookups\n          rval = rval &amp; mask;\n\n          if (rval &gt;= range) {\n              // Integer out of acceptable range\n              return random(min, max);\n          }\n          // Return an integer that falls within the range\n          return min + rval;\n      }\n      return function() {\n          var r = random(0, 1000000000) / 1000000000;\n          return r;\n      };\n  } else {\n      // From http://baagoe.com/en/RandomMusings/javascript/\n      // Johannes BaagÃ¸e &lt;baagoe@baagoe.com&gt;, 2010\n      function Mash() {\n          var n = 0xefc8249d;\n\n          var mash = function(data) {\n              data = data.toString();\n              for (var i = 0; i &lt; data.length; i++) {\n                  n += data.charCodeAt(i);\n                  var h = 0.02519603282416938 * n;\n                  n = h &gt;&gt;&gt; 0;\n                  h -= n;\n                  h *= n;\n                  n = h &gt;&gt;&gt; 0;\n                  h -= n;\n                  n += h * 0x100000000; // 2^32\n              }\n              return (n &gt;&gt;&gt; 0) * 2.3283064365386963e-10; // 2^-32\n          };\n\n          mash.version = 'Mash 0.9';\n          return mash;\n      }\n\n      // From http://baagoe.com/en/RandomMusings/javascript/\n      function Alea() {\n          return (function(args) {\n              // Johannes BaagÃ¸e &lt;baagoe@baagoe.com&gt;, 2010\n              var s0 = 0;\n              var s1 = 0;\n              var s2 = 0;\n              var c = 1;\n\n              if (args.length == 0) {\n                  args = [+new Date()];\n              }\n              var mash = Mash();\n              s0 = mash(' ');\n              s1 = mash(' ');\n              s2 = mash(' ');\n\n              for (var i = 0; i &lt; args.length; i++) {\n                  s0 -= mash(args[i]);\n                  if (s0 &lt; 0) {\n                      s0 += 1;\n                  }\n                  s1 -= mash(args[i]);\n                  if (s1 &lt; 0) {\n                      s1 += 1;\n                  }\n                  s2 -= mash(args[i]);\n                  if (s2 &lt; 0) {\n                      s2 += 1;\n                  }\n              }\n              mash = null;\n\n              var random = function() {\n                  var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n                  s0 = s1;\n                  s1 = s2;\n                  return s2 = t - (c = t | 0);\n              };\n              random.uint32 = function() {\n                  return random() * 0x100000000; // 2^32\n              };\n              random.fract53 = function() {\n                  return random() +\n                      (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n              };\n              random.version = 'Alea 0.9';\n              random.args = args;\n              return random;\n\n          }(Array.prototype.slice.call(arguments)));\n      };\n      return Alea();\n  }\n}());\n\nMath.guid = function() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c)    {\n      var r = Math.trueRandom() * 16 | 0,\n          v = c == 'x' ? r : (r &amp; 0x3 | 0x8);\n      return v.toString(16);\n  });\n};\n</code>",
        "<code>rval = rval &amp; mask</code>",
        "<code>npm install uuid\n</code>",
        "<code>// Generate a v1 UUID (time-based)\nconst uuidV1 = require('uuid/v1');\nuuidV1(); // -&gt; '6c84fb90-12c4-11e1-840d-7b25c5ee775a'\n\n// Generate a v4 UUID (random)\nconst uuidV4 = require('uuid/v4');\nuuidV4(); // -&gt; '110ec58a-a0f2-4ac4-8393-c866d813b8d1'\n\n// Generate a v5 UUID (namespace)\nconst uuidV5 = require('uuid/v5');\n\n// ... using predefined DNS namespace (for domain names)\nuuidV5('hello.example.com', v5.DNS)); // -&gt; 'fdda765f-fc57-5604-a269-52a7df8164ec'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidV5('http://example.com/hello', v5.URL); // -&gt; '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\n\n// ... using a custom namespace\nconst MY_NAMESPACE = '(previously generated unique uuid string)';\nuuidV5('hello', MY_NAMESPACE); // -&gt; '90123e1c-7512-523e-bb28-76fab9f2f73d'\n</code>",
        "<code>import uuid from 'uuid/v4'; let id = uuid();</code>",
        "<code>function uuid()\n{\n   var chars = '0123456789abcdef'.split('');\n\n   var uuid = [], rnd = Math.random, r;\n   uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n   uuid[14] = '4'; // version 4\n\n   for (var i = 0; i &lt; 36; i++)\n   {\n      if (!uuid[i])\n      {\n         r = 0 | rnd()*16;\n\n         uuid[i] = chars[(i == 19) ? (r &amp; 0x3) | 0x8 : r &amp; 0xf];\n      }\n   }\n\n   return uuid.join('');\n}\n</code>",
        "<code>682db637-0f31-4847-9cdf-25ba9613a75c\n97d19478-3ab2-4aa1-b8cc-a1c3540f54aa\n2eed04c9-2692-456d-a0fd-51012f947136\n</code>",
        "<code>  // RFC 4122\n  //\n  // A UUID is 128 bits long\n  //\n  // String representation is five fields of 4, 2, 2, 2, and 6 bytes.\n  // Fields represented as lowercase, zero-filled, hexadecimal strings, and\n  // are separated by dash characters\n  //\n  // A version 4 UUID is generated by setting all but six bits to randomly\n  // chosen values\n  var uuid = [\n    Math.random().toString(16).slice(2, 10),\n    Math.random().toString(16).slice(2, 6),\n\n    // Set the four most significant bits (bits 12 through 15) of the\n    // time_hi_and_version field to the 4-bit version number from Section\n    // 4.1.3\n    (Math.random() * .0625 /* 0x.1 */ + .25 /* 0x.4 */).toString(16).slice(2, 6),\n\n    // Set the two most significant bits (bits 6 and 7) of the\n    // clock_seq_hi_and_reserved to zero and one, respectively\n    (Math.random() * .25 /* 0x.4 */ + .5 /* 0x.8 */).toString(16).slice(2, 6),\n\n    Math.random().toString(16).slice(2, 14)].join('-');\n</code>",
        "<code>//UUID/Guid Generator\n// use: UUID.create() or UUID.createSequential()\n// convenience:  UUID.empty, UUID.tryParse(string)\n(function(w){\n  // From http://baagoe.com/en/RandomMusings/javascript/\n  // Johannes BaagÃ¸e &lt;baagoe@baagoe.com&gt;, 2010\n  //function Mash() {...};\n\n  // From http://baagoe.com/en/RandomMusings/javascript/\n  //function Kybos() {...};\n\n  var rnd = Kybos();\n\n  //UUID/GUID Implementation from http://frugalcoder.us/post/2012/01/13/javascript-guid-uuid-generator.aspx\n  var UUID = {\n    \"empty\": \"00000000-0000-0000-0000-000000000000\"\n    ,\"parse\": function(input) {\n      var ret = input.toString().trim().toLowerCase().replace(/^[\\s\\r\\n]+|[\\{\\}]|[\\s\\r\\n]+$/g, \"\");\n      if ((/[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}/).test(ret))\n        return ret;\n      else\n        throw new Error(\"Unable to parse UUID\");\n    }\n    ,\"createSequential\": function() {\n      var ret = new Date().valueOf().toString(16).replace(\"-\",\"\")\n      for (;ret.length &lt; 12; ret = \"0\" + ret);\n      ret = ret.substr(ret.length-12,12); //only least significant part\n      for (;ret.length &lt; 32;ret += Math.floor(rnd() * 0xffffffff).toString(16));\n      return [ret.substr(0,8), ret.substr(8,4), \"4\" + ret.substr(12,3), \"89AB\"[Math.floor(Math.random()*4)] + ret.substr(16,3),  ret.substr(20,12)].join(\"-\");\n    }\n    ,\"create\": function() {\n      var ret = \"\";\n      for (;ret.length &lt; 32;ret += Math.floor(rnd() * 0xffffffff).toString(16));\n      return [ret.substr(0,8), ret.substr(8,4), \"4\" + ret.substr(12,3), \"89AB\"[Math.floor(Math.random()*4)] + ret.substr(16,3),  ret.substr(20,12)].join(\"-\");\n    }\n    ,\"random\": function() {\n      return rnd();\n    }\n    ,\"tryParse\": function(input) {\n      try {\n        return UUID.parse(input);\n      } catch(ex) {\n        return UUID.empty;\n      }\n    }\n  };\n  UUID[\"new\"] = UUID.create;\n\n  w.UUID = w.Guid = UUID;\n}(window || this));</code>",
        "<code>function(\n  a,b                // placeholders\n){\n  for(               // loop :)\n      b=a='';        // b - result , a - numeric variable\n      a++&lt;36;        // \n      b+=a*51&amp;52  // if \"a\" is not 9 or 14 or 19 or 24\n                  ?  //  return a random number or 4\n         (\n           a^15      // if \"a\" is not 15\n              ?      // genetate a random number from 0 to 15\n           8^Math.random()*\n           (a^20?16:4)  // unless \"a\" is 20, in which case a random number from 8 to 11\n              :\n           4            //  otherwise 4\n           ).toString(16)\n                  :\n         '-'            //  in other cases (if \"a\" is 9,14,19,24) insert \"-\"\n      );\n  return b\n }\n</code>",
        "<code>function(a,b){for(b=a='';a++&lt;36;b+=a*51&amp;52?(a^15?8^Math.random()*(a^20?16:4):4).toString(16):'-');return b}\n</code>",
        "<code>function UUID() {\n    var nbr, randStr = \"\";\n    do {\n        randStr += (nbr = Math.random()).toString(16).substr(2);\n    } while (randStr.length &lt; 30);\n    return [\n        randStr.substr(0, 8), \"-\",\n        randStr.substr(8, 4), \"-4\",\n        randStr.substr(12, 3), \"-\",\n        ((nbr*4|0)+8).toString(16), // [89ab]\n        randStr.substr(15, 3), \"-\",\n        randStr.substr(18, 12)\n        ].join(\"\");\n}\n</code>",
        "<code>SP.Guid.newGuid</code>",
        "<code>var newGuid = function () {\n    var result = '';\n    var hexcodes = \"0123456789abcdef\".split(\"\");\n\n    for (var index = 0; index &lt; 32; index++) {\n        var value = Math.floor(Math.random() * 16);\n\n        switch (index) {\n        case 8:\n            result += '-';\n            break;\n        case 12:\n            value = 4;\n            result += '-';\n            break;\n        case 16:\n            value = value &amp; 3 | 8;\n            result += '-';\n            break;\n        case 20:\n            result += '-';\n            break;\n        }\n        result += hexcodes[value];\n    }\n    return result;\n};\n</code>",
        "<code>[WebMethod()]\npublic static string GenerateGuid()\n{\n    return Guid.NewGuid().ToString();\n}\n</code>",
        "<code>var myNewGuid = null;\nPageMethods.GenerateGuid(\n    function(result, userContext, methodName)\n    {\n        myNewGuid = result;\n    },\n    function()\n    {\n        alert(\"WebService call failed.\");\n    }\n);\n</code>",
        "<code>jQuery.Guid.Value()\n</code>",
        "<code>jQuery.Guid.New()\n</code>",
        "<code>jQuery.Guid.Empty()\n</code>",
        "<code>jQuery.Guid.IsEmpty()\n</code>",
        "<code>jQuery.Guid.IsValid()\n</code>",
        "<code>jQuery.Guid.Set()\n</code>",
        "<code>var uuid = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n        /[xy]/g,\n        function (match) {\n            /*\n            * Create a random nibble. The two clever bits of this code:\n            *\n            * - Bitwise operations will truncate floating point numbers\n            * - For a bitwise OR of any x, x | 0 = x\n            *\n            * So:\n            *\n            * Math.random * 16\n            *\n            * creates a random floating point number\n            * between 0 (inclusive) and 16 (exclusive) and\n            *\n            * | 0\n            *\n            * truncates the floating point number into an integer.\n            */\n            var randomNibble = Math.random() * 16 | 0;\n\n            /*\n            * Resolves the variant field. If the variant field (delineated\n            * as y in the initial string) is matched, the nibble must\n            * match the mask (where x is a do-not-care bit):\n            *\n            * 10xx\n            *\n            * This is achieved by performing the following operations in\n            * sequence (where x is an intermediate result):\n            *\n            * - x &amp; 0x3, which is equivalent to x % 3\n            * - x | 0x8, which is equivalent to x + 8\n            *\n            * This results in a nibble between 8 inclusive and 11 exclusive,\n            * (or 1000 and 1011 in binary), all of which satisfy the variant\n            * field mask above.\n            */\n            var nibble = (match == 'y') ?\n                (randomNibble &amp; 0x3 | 0x8) :\n                randomNibble;\n\n            /*\n            * Ensure the nibble integer is encoded as base 16 (hexadecimal).\n            */\n            return nibble.toString(16);\n        }\n    );\n};\n</code>",
        "<code>var getUniqueId = function (prefix) {\n            var d = new Date().getTime();\n            d += (parseInt(Math.random() * 100)).toString();\n            if (undefined === prefix) {\n                prefix = 'uid-';\n            }\n            d = prefix + d;\n            return d;\n        };\n</code>",
        "<code>const guid=()=&gt; {\n  const s4=()=&gt; Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);     \n  return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4() + s4() + s4()}`;\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "javascript",
        "node.js",
        "babeljs"
      ],
      "creation_date": 1446656308,
      "body_markdown": "I&#39;m trying to use async, await from scratch on Babel 6, but I&#39;m getting regeneratorRuntime is not defined.\r\n\r\n.babelrc file\r\n\r\n    {\r\n        &quot;presets&quot;: [ &quot;es2015&quot;, &quot;stage-0&quot; ]\r\n    }\r\n\r\npackage.json file\r\n\r\n    &quot;devDependencies&quot;: {\r\n        &quot;babel-core&quot;: &quot;^6.0.20&quot;,\r\n        &quot;babel-preset-es2015&quot;: &quot;^6.0.15&quot;,\r\n        &quot;babel-preset-stage-0&quot;: &quot;^6.0.15&quot;\r\n    }\r\n\r\n.js file\r\n\r\n    &quot;use strict&quot;;\r\n    async function foo() {\r\n      await bar();\r\n    }\r\n    function bar() { }\r\n    exports.default = foo;\r\n\r\nUsing it normally without the async/await works just fine. Any ideas what I&#39;m doing wrong?\r\n",
      "last_edit_date": 1500414319,
      "up_vote_count": 299,
      "link": "https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1446657005,
          "answer_id": 33527883,
          "path": "stack.gulp.answer",
          "score": 396,
          "up_vote_count": 397,
          "is_accepted": true,
          "last_activity_date": 1453080628,
          "last_edit_date": 1453080628,
          "body_markdown": "`babel-polyfill` is required. You must also install it in order to get async/await working.\r\n\r\n    npm i -D babel-core babel-polyfill babel-preset-es2015 babel-preset-stage-0 babel-loader\r\n\r\npackage.json\r\n\r\n    &quot;devDependencies&quot;: {\r\n      &quot;babel-core&quot;: &quot;^6.0.20&quot;,\r\n      &quot;babel-polyfill&quot;: &quot;^6.0.16&quot;,\r\n      &quot;babel-preset-es2015&quot;: &quot;^6.0.15&quot;,\r\n      &quot;babel-preset-stage-0&quot;: &quot;^6.0.15&quot;\r\n    }\r\n\r\n.babelrc\r\n\r\n    {\r\n      &quot;presets&quot;: [ &quot;es2015&quot;, &quot;stage-0&quot; ]\r\n    }\r\n\r\n.js with async/await (sample code)\r\n\r\n    &quot;use strict&quot;;\r\n    \r\n    export default async function foo() {\r\n      var s = await bar();\r\n      console.log(s);\r\n    }\r\n    \r\n    function bar() {\r\n      return &quot;bar&quot;;\r\n    }\r\n\r\nIn the startup file\r\n\r\n    require(&quot;babel-core/register&quot;);\r\n    require(&quot;babel-polyfill&quot;);\r\n\r\nIf you are using **webpack** you need to put it as the first entry as per @Cemen comment:\r\n\r\n    module.exports = {\r\n      entry: [&#39;babel-polyfill&#39;, &#39;./test.js&#39;],\r\n    \r\n      output: {\r\n        filename: &#39;bundle.js&#39;       \r\n      },\r\n    \r\n      module: {\r\n        loaders: [\r\n          { test: /\\.jsx?$/, loader: &#39;babel&#39;, }\r\n        ]\r\n      }\r\n    };\r\n\r\nIf you want to run tests with babel then use:\r\n\r\n    mocha --compilers js:babel-core/register --require babel-polyfill\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1460530890,
          "answer_id": 36590887,
          "path": "stack.gulp.answer",
          "score": 33,
          "up_vote_count": 33,
          "is_accepted": false,
          "last_activity_date": 1460530890,
          "body_markdown": "Alternatively, if you don&#39;t need all the modules `babel-polyfill` provides, you can just specify `babel-regenerator-runtime` in your webpack config:\r\n\r\n\r\n    module.exports = {\r\n      entry: [&#39;babel-regenerator-runtime&#39;, &#39;./test.js&#39;],\r\n      \r\n      // ...\r\n    };\r\n\r\nWhen using webpack-dev-server with HMR, doing this reduced the number of files it has to compile on every build by quite a lot. This module is installed as part of `babel-polyfill` so if you already have that you&#39;re fine, otherwise you can install it separately with `npm i -D babel-regenerator-runtime`."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1461494069,
          "answer_id": 36821986,
          "path": "stack.gulp.answer",
          "score": 167,
          "up_vote_count": 168,
          "is_accepted": false,
          "last_activity_date": 1467923247,
          "last_edit_date": 1467923247,
          "body_markdown": "Besides polyfill, I use [babel-plugin-transform-runtime](http://babeljs.io/docs/plugins/transform-runtime/). The plugin is described as:\r\n\r\n&gt; Externalize references to helpers and builtins, automatically polyfilling your code without polluting globals. What does this actually mean though? Basically, you can use built-ins such as Promise, Set, Symbol etc as well use all the Babel features that require a polyfill seamlessly, without global pollution, making it extremely suitable for libraries.\r\n\r\nIt also includes support for async/await along with other built-ins of ES 6. \r\n\r\n    $ npm install --save-dev babel-plugin-transform-runtime\r\n    $ npm install --save babel-runtime\r\n\r\nIn `.babelrc`, add the runtime plugin\r\n\r\n    {\r\n      &quot;plugins&quot;: [\r\n        [&quot;transform-runtime&quot;, {\r\n          &quot;polyfill&quot;: false,\r\n          &quot;regenerator&quot;: true\r\n        }]\r\n      ]\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1468285949,
          "answer_id": 38318521,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1468285949,
          "body_markdown": "I have async await working with webpack/babel build:\r\n\r\n    &quot;devDependencies&quot;: {\r\n        &quot;babel-preset-stage-3&quot;: &quot;^6.11.0&quot;\r\n    }\r\n.babelrc:\r\n\r\n    &quot;presets&quot;: [&quot;es2015&quot;, &quot;stage-3&quot;]\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1471600111,
          "answer_id": 39035949,
          "path": "stack.gulp.answer",
          "score": 9,
          "up_vote_count": 9,
          "is_accepted": false,
          "last_activity_date": 1471600111,
          "body_markdown": "If using `babel-preset-stage-2` then just have to start the script with `--require babel-polyfill`.\r\n\r\nIn my case this error was thrown by `Mocha` tests.\r\n\r\nFollowing fixed the issue\r\n\r\n`mocha \\&quot;server/tests/**/*.test.js\\&quot; --compilers js:babel-register --require babel-polyfill`\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1473280828,
          "answer_id": 39378644,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1473280828,
          "body_markdown": "I had a setup   \r\nwith **webpack** using `presets: [&#39;es2015&#39;, &#39;stage-0&#39;]`  \r\nand **mocha** that was running tests compiled by webpack.\r\n\r\nTo make my `async/await` in tests work all I had to do is add `mocha --require babel-polyfill` option."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1479636823,
          "answer_id": 40702833,
          "path": "stack.gulp.answer",
          "score": 2,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1479636823,
          "body_markdown": "I get this error using gulp with rollup when I tried to use ES6 generators:\r\n\r\n    gulp.task(&#39;scripts&#39;, () =&gt; {\r\n      return rollup({\r\n        entry: &#39;./app/scripts/main.js&#39;,\r\n        format: &quot;iife&quot;,\r\n        sourceMap: true,\r\n        plugins: [babel({\r\n          exclude: &#39;node_modules/**&#39;,\r\n          &quot;presets&quot;: [\r\n            [\r\n              &quot;es2015-rollup&quot;\r\n            ]\r\n          ],\r\n          &quot;plugins&quot;: [\r\n            &quot;external-helpers&quot;\r\n          ]\r\n        }),\r\n        includePaths({\r\n          include: {},\r\n          paths: [&#39;./app/scripts&#39;],\r\n          external: [],\r\n          extensions: [&#39;.js&#39;]\r\n        })]\r\n      })\r\n    \r\n      .pipe(source(&#39;app.js&#39;))\r\n      .pipe(buffer())\r\n      .pipe(sourcemaps.init({\r\n        loadMaps: true\r\n      }))\r\n      .pipe(sourcemaps.write(&#39;.&#39;))\r\n      .pipe(gulp.dest(&#39;.tmp/scripts&#39;))\r\n      .pipe(reload({ stream: true }));\r\n    });\r\n\r\nI may case the solution was to include `babel-polyfill` as bower component:\r\n\r\n    bower install babel-polyfill --save\r\n\r\nand add it as dependency in index.html:\r\n\r\n    &lt;script src=&quot;/bower_components/babel-polyfill/browser-polyfill.js&quot;&gt;&lt;/script&gt;\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1482755252,
          "answer_id": 41331284,
          "path": "stack.gulp.answer",
          "score": 55,
          "up_vote_count": 57,
          "is_accepted": false,
          "last_activity_date": 1514353592,
          "last_edit_date": 1514353592,
          "body_markdown": "# Update\r\n\r\nIt works if you set the target to Chrome. But it might not work for other targets, please refer to: https://github.com/babel/babel-preset-env/issues/112\r\n\r\nSo this answer is **NOT** quite proper for the original question. I will keep it here as a reference to `babel-preset-env`.\r\n\r\nA simple solution is to add `import &#39;babel-polyfill&#39;` at the beginning of your code.\r\n\r\nIf you use webpack, a quick solution is to add `babel-polyfill` as shown below:\r\n\r\n    entry: {\r\n        index: [&#39;babel-polyfill&#39;, &#39;./index.js&#39;]\r\n    }\r\n\r\n\r\n# I believe I&#39;ve found the latest best practice. \r\n\r\nCheck this project: https://github.com/babel/babel-preset-env\r\n\r\n    yarn add --dev babel-preset-env\r\n\r\nUse the following as your babel configuration:\r\n\r\n    {\r\n      &quot;presets&quot;: [\r\n        [&quot;env&quot;, {\r\n          &quot;targets&quot;: {\r\n            &quot;browsers&quot;: [&quot;last 2 Chrome versions&quot;]\r\n          }\r\n        }]\r\n      ]\r\n    }\r\n\r\nThen your app should be good to go in the last 2 versions of Chrome browser.\r\n\r\nYou can also set **Node** as the targets or fine-tune the browsers list according to https://github.com/ai/browserslist\r\n\r\n# Tell me what, don&#39;t tell me how.\r\n\r\nI really like `babel-preset-env`&#39;s philosophy: tell me which environment you want to support, do NOT tell me how to support them. It&#39;s the beauty of declarative programming.\r\n\r\nI&#39;ve tested `async` `await` and they DO work. I don&#39;t know how they work and I really don&#39;t want to know. I want to spend my time on my own code and my business logic instead. Thanks to `babel-preset-env`, it liberates me from the Babel configuration hell."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1483791044,
          "answer_id": 41521308,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1483791044,
          "body_markdown": "1 - Install babel-plugin-transform-async-to-module-method, \r\nbabel-polyfil, bluebird , babel-preset-es2015, babel-core :\r\n\r\n    npm install babel-plugin-transform-async-to-module-method babel-polyfill bluebird babel-preset-es2015 babel-core\r\n\r\n2 -  Add in your js babel polyfill:\r\n\r\n`import &#39;babel-polyfill&#39;;`\r\n\r\n3 - Add plugin in your .babelrc:\r\n\r\n\r\n\r\n    {\r\n        &quot;presets&quot;: [&quot;es2015&quot;],\r\n        &quot;plugins&quot;: [\r\n          [&quot;transform-async-to-module-method&quot;, {\r\n            &quot;module&quot;: &quot;bluebird&quot;,\r\n            &quot;method&quot;: &quot;coroutine&quot;\r\n          }]\r\n        ]\r\n    }\r\n\r\nSource : http://babeljs.io/docs/plugins/transform-async-to-module-method/ "
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1488228851,
          "answer_id": 42495576,
          "path": "stack.gulp.answer",
          "score": 6,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1488229190,
          "last_edit_date": 1495540052,
          "body_markdown": "You&#39;re getting an error because async/await use generators, which are an ES2016 feature, not ES2015. One way to fix this is to install the babel preset for ES2016 (`npm install --save babel-preset-es2016`) and compile to ES2016 instead of ES2015:\r\n\r\n    &quot;presets&quot;: [\r\n      &quot;es2016&quot;,\r\n      // etc...\r\n    ]\r\n\r\nAs the other answers mention, you can also use [polyfills](https://stackoverflow.com/a/33527883/6157047) (though make sure you [load the polyfill first](https://stackoverflow.com/a/36628148/6157047) before any other code runs). Alternatively, if you don&#39;t want to include all of the polyfill dependencies, you can use the [babel-regenerator-runtime](https://stackoverflow.com/a/36590887/6157047) or the [babel-plugin-transform-runtime](https://stackoverflow.com/a/36821986/6157047).\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1492149056,
          "answer_id": 43405922,
          "path": "stack.gulp.answer",
          "score": 4,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1492151826,
          "last_edit_date": 1492151826,
          "body_markdown": "New Answer Why you follow my answer ?\r\n\r\n**Ans:** Because I am going to give you a answer with latest Update version npm project . \r\n\r\n**04/14/2017**\r\n\r\n    &quot;name&quot;: &quot;es6&quot;,\r\n     &quot;version&quot;: &quot;1.0.0&quot;,\r\n       &quot;babel-core&quot;: &quot;^6.24.1&quot;,\r\n        &quot;babel-loader&quot;: &quot;^6.4.1&quot;,\r\n        &quot;babel-polyfill&quot;: &quot;^6.23.0&quot;,\r\n        &quot;babel-preset-es2015&quot;: &quot;^6.24.1&quot;,\r\n        &quot;webpack&quot;: &quot;^2.3.3&quot;,\r\n        &quot;webpack-dev-server&quot;: &quot;^2.4.2&quot;\r\n\r\n\r\n**If your Use this version or more UP version of Npm and all other ...**\r\nSO just need to change : \r\n\r\n\r\n**webpack.config.js**\r\n\r\n    module.exports = {\r\n      entry: [&quot;babel-polyfill&quot;, &quot;./app/js&quot;]\r\n    };\r\n\r\nAfter change `webpack.config.js` files Just add this line to top of your code .\r\n\r\n    import &quot;babel-polyfill&quot;;\r\n\r\nNow check everything is ok. [Reference LINK][1] \r\n\r\nAlso Thanks @BrunoLM for his nice Answer.\r\n\r\n\r\n  [1]: https://babeljs.io/docs/usage/polyfill/"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1497884998,
          "answer_id": 44634124,
          "path": "stack.gulp.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1502669747,
          "last_edit_date": 1502669747,
          "body_markdown": "My simple solution:\r\n\r\n    npm install --save-dev babel-plugin-transform-runtime\r\n    npm install babel-plugin-transform-async-to-generator --save-dev\r\n\r\n**.babelrc**\r\n\r\n    {\r\n      &quot;presets&quot;: [\r\n        [&quot;latest&quot;, {\r\n          &quot;es2015&quot;: {\r\n            &quot;loose&quot;: true\r\n          }\r\n        }],\r\n        &quot;react&quot;,\r\n        &quot;stage-0&quot;\r\n      ],\r\n      &quot;plugins&quot;: [\r\n        &quot;transform-runtime&quot;\r\n      ]\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1513086093,
          "answer_id": 47774110,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1513086093,
          "body_markdown": "I fixed this error by installing babel-polyfill\r\n\r\n    npm install babel-polyfill --save\r\n\r\nthen I imported it my app entry point\r\n\r\n    import http from &#39;http&#39;;\r\n    import config from &#39;dotenv&#39;;\r\n    import &#39;babel-polyfill&#39;;\r\n    import { register } from &#39;babel-core&#39;;\r\n    import app from &#39;../app&#39;;\r\n\r\nfor testing I included --require babel-polyfill in my test script\r\n\r\n    &quot;test&quot;: &quot;export NODE_ENV=test|| SET NODE_ENV=test&amp;&amp; mocha --compilers \r\n      js:babel-core/register --require babel-polyfill server/test/**.js --exit&quot;"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1513688932,
          "answer_id": 47887763,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1513688932,
          "body_markdown": "If you using Gulp + Babel for a frontend you need to use babel-polyfill\r\n\r\n`npm install babel-polyfill` \r\n\r\nand then add a script tag to index.html above all other script tags and reference babel-polyfill from node_modules"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1514098560,
          "answer_id": 47958663,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1514098560,
          "body_markdown": "Most of these answers recommend solutions for dealing with this error using WebPack. But in case anyone is using RollUp (like I am), here is what finally worked for me (just a heads-up and bundling this polyfill ads about 10k tot he output size):\r\n\r\n.babelrc\r\n\r\n    {\r\n        &quot;presets&quot;: [\r\n            [\r\n                &quot;env&quot;,\r\n                {\r\n                    &quot;modules&quot;: false,\r\n                    &quot;targets&quot;: {\r\n                        &quot;browsers&quot;: [&quot;last 2 versions&quot;]\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        &quot;plugins&quot;: [&quot;external-helpers&quot;,\r\n            [\r\n                &quot;transform-runtime&quot;,\r\n                {\r\n                    &quot;polyfill&quot;: false,\r\n                    &quot;regenerator&quot;: true\r\n                }\r\n            ]]\r\n    }\r\n\r\n\r\nrollup.config.js\r\n\r\n    import resolve from &#39;rollup-plugin-node-resolve&#39;;\r\n    import babel from &#39;rollup-plugin-babel&#39;;\r\n    import uglify from &#39;rollup-plugin-uglify&#39;;\r\n    import commonjs from &#39;rollup-plugin-commonjs&#39;;\r\n    \r\n    \r\n    export default {\r\n        input: &#39;src/entry.js&#39;,\r\n        output: {\r\n            file: &#39;dist/bundle.js&#39;,\r\n            format: &#39;umd&#39;,\r\n            name: &#39;MyCoolLib&#39;,\r\n            exports: &#39;named&#39;\r\n        },\r\n        sourcemap: true,\r\n        plugins: [\r\n            commonjs({\r\n                // polyfill async/await\r\n                &#39;node_modules/babel-runtime/helpers/asyncToGenerator.js&#39;: [&#39;default&#39;]\r\n            }),\r\n            resolve(),\r\n            babel({\r\n                runtimeHelpers: true,\r\n                exclude: &#39;node_modules/**&#39;, // only transpile our source code\r\n            }),\r\n            uglify()\r\n    \r\n        ]\r\n    };\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1514987632,
          "answer_id": 48078796,
          "path": "stack.gulp.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1514987632,
          "body_markdown": "`babel-regenerator-runtime` is now [deprecated][1], instead one should use `regenerator-runtime`.\r\n\r\nTo use the runtime generator with `webpack` and `babel` v7:\r\n\r\ninstall `regenerator-runtime`: \r\n\r\n    npm i -D regenerator-runtime\r\n\r\nAnd then add within webpack configuration : \r\n\r\n    entry: [\r\n      &#39;regenerator-runtime/runtime&#39;,\r\n      YOUR_APP_ENTRY\r\n    ]\r\n\r\n\r\n  [1]: https://github.com/babel/babel/blob/3b540e3f5a635272ff32523d1d406cef052b06ba/CHANGELOG.md"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1516187681,
          "answer_id": 48299797,
          "path": "stack.gulp.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1516187681,
          "body_markdown": "For people looking to use the `babel-polyfill` version 7^ do this with `webpack` ver3^.\r\n\r\nNpm install the module `npm i -D @babel/polyfill`\r\n\r\nThen in your `webpack` file in your `entry` point do this\r\n\r\n    entry: [&#39;@babel/polyfill&#39;, path.resolve(APP_DIR, &#39;App.js&#39;)],"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1517376073,
          "answer_id": 48534963,
          "path": "stack.gulp.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1517376073,
          "body_markdown": "I started getting this error after converting my project into a typescript project. From what I understand, the problem stems from async/await not being recognized.\r\n\r\nFor me the error was fixed by adding two things to my setup:\r\n\r\n1. As mentioned above many times, I needed to add babel-polyfill into my webpack entry array:\r\n\r\n    &lt;pre&gt;...\r\n    \r\n    entry: [&#39;babel-polyfill&#39;, &#39;./index.js&#39;],\r\n    \r\n    ...&lt;/pre&gt;\r\n\r\n2. I needed to update my .babelrc to allow the complilation of async/await into generators:\r\n\r\n    &lt;pre&gt;{\r\n      &quot;presets&quot;: [&quot;es2015&quot;],\r\n      &quot;plugins&quot;: [&quot;transform-async-to-generator&quot;]\r\n    }&lt;/pre&gt;\r\n\r\n###DevDependencies:\r\nI had to install a few things into my devDependencies in my package.json file as well. Namely, I was missing the babel-plugin-transform-async-to-generator, babel-polyfill and the babel-preset-es2015:\r\n    \r\n     &quot;devDependencies&quot;: {\r\n        &quot;babel-loader&quot;: &quot;^6.2.2&quot;,\r\n        &quot;babel-plugin-transform-async-to-generator&quot;: &quot;^6.5.0&quot;,\r\n        &quot;babel-polyfill&quot;: &quot;^6.5.0&quot;,\r\n        &quot;babel-preset-es2015&quot;: &quot;^6.5.0&quot;,\r\n        &quot;webpack&quot;: &quot;^1.12.13&quot;\r\n     }\r\n\r\n###Full Code Gist:\r\n\r\nI got the code from a really helpful and concise GitHub gist you can find [here][1].\r\n\r\n\r\n  [1]: https://gist.github.com/thejmazz/067295d9fb8b22c77be0\r\n\r\n\r\n\r\n"
        }
      ],
      "title": "Babel 6 regeneratorRuntime is not defined",
      "view_count": 154250,
      "answer_count": 18,
      "code_snippet": [
        "<code>{\n    \"presets\": [ \"es2015\", \"stage-0\" ]\n}\n</code>",
        "<code>\"devDependencies\": {\n    \"babel-core\": \"^6.0.20\",\n    \"babel-preset-es2015\": \"^6.0.15\",\n    \"babel-preset-stage-0\": \"^6.0.15\"\n}\n</code>",
        "<code>\"use strict\";\nasync function foo() {\n  await bar();\n}\nfunction bar() { }\nexports.default = foo;\n</code>",
        "<code>babel-polyfill</code>",
        "<code>npm i -D babel-core babel-polyfill babel-preset-es2015 babel-preset-stage-0 babel-loader\n</code>",
        "<code>\"devDependencies\": {\n  \"babel-core\": \"^6.0.20\",\n  \"babel-polyfill\": \"^6.0.16\",\n  \"babel-preset-es2015\": \"^6.0.15\",\n  \"babel-preset-stage-0\": \"^6.0.15\"\n}\n</code>",
        "<code>{\n  \"presets\": [ \"es2015\", \"stage-0\" ]\n}\n</code>",
        "<code>\"use strict\";\n\nexport default async function foo() {\n  var s = await bar();\n  console.log(s);\n}\n\nfunction bar() {\n  return \"bar\";\n}\n</code>",
        "<code>require(\"babel-core/register\");\nrequire(\"babel-polyfill\");\n</code>",
        "<code>module.exports = {\n  entry: ['babel-polyfill', './test.js'],\n\n  output: {\n    filename: 'bundle.js'       \n  },\n\n  module: {\n    loaders: [\n      { test: /\\.jsx?$/, loader: 'babel', }\n    ]\n  }\n};\n</code>",
        "<code>mocha --compilers js:babel-core/register --require babel-polyfill\n</code>",
        "<code>require(\"babel-polyfill\")</code>",
        "<code>\"babel-polyfill\"</code>",
        "<code>entry</code>",
        "<code>entry: [\"babel-polyfill\", \"src/main.js\"]</code>",
        "<code>devDependency</code>",
        "<code>dependency</code>",
        "<code>$ npm install --save-dev babel-plugin-transform-runtime\n$ npm install --save babel-runtime\n</code>",
        "<code>.babelrc</code>",
        "<code>{\n  \"plugins\": [\n    [\"transform-runtime\", {\n      \"polyfill\": false,\n      \"regenerator\": true\n    }]\n  ]\n}\n</code>",
        "<code>babel-runtime</code>",
        "<code>babel-plugin-transform-runtime</code>",
        "<code>babel-runtime</code>",
        "<code>babel-plugin-transform-runtime</code>",
        "<code>require</code>",
        "<code>transform-runtime</code>",
        "<code>babel-preset-env</code>",
        "<code>import 'babel-polyfill'</code>",
        "<code>babel-polyfill</code>",
        "<code>entry: {\n    index: ['babel-polyfill', './index.js']\n}\n</code>",
        "<code>yarn add --dev babel-preset-env\n</code>",
        "<code>{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"browsers\": [\"last 2 Chrome versions\"]\n      }\n    }]\n  ]\n}\n</code>",
        "<code>babel-preset-env</code>",
        "<code>async</code>",
        "<code>await</code>",
        "<code>babel-preset-env</code>",
        "<code>babel-preset-env</code>",
        "<code>yarn install</code>",
        "<code>yarn add</code>",
        "<code>yarn install</code>",
        "<code>yarn add</code>",
        "<code>presets</code>",
        "<code>babel-polyfill</code>",
        "<code>babel-regenerator-runtime</code>",
        "<code>module.exports = {\n  entry: ['babel-regenerator-runtime', './test.js'],\n\n  // ...\n};\n</code>",
        "<code>babel-polyfill</code>",
        "<code>npm i -D babel-regenerator-runtime</code>",
        "<code>npm install --save-dev babel-plugin-transform-runtime\nnpm install babel-plugin-transform-async-to-generator --save-dev\n</code>",
        "<code>{\n  \"presets\": [\n    [\"latest\", {\n      \"es2015\": {\n        \"loose\": true\n      }\n    }],\n    \"react\",\n    \"stage-0\"\n  ],\n  \"plugins\": [\n    \"transform-runtime\"\n  ]\n}\n</code>",
        "<code>babel-preset-stage-2</code>",
        "<code>--require babel-polyfill</code>",
        "<code>Mocha</code>",
        "<code>mocha \\\"server/tests/**/*.test.js\\\" --compilers js:babel-register --require babel-polyfill</code>",
        "<code>npm install --save babel-preset-es2016</code>",
        "<code>\"presets\": [\n  \"es2016\",\n  // etc...\n]\n</code>",
        "<code>\"name\": \"es6\",\n \"version\": \"1.0.0\",\n   \"babel-core\": \"^6.24.1\",\n    \"babel-loader\": \"^6.4.1\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"webpack\": \"^2.3.3\",\n    \"webpack-dev-server\": \"^2.4.2\"\n</code>",
        "<code>module.exports = {\n  entry: [\"babel-polyfill\", \"./app/js\"]\n};\n</code>",
        "<code>webpack.config.js</code>",
        "<code>import \"babel-polyfill\";\n</code>",
        "<code>npm install babel-plugin-transform-async-to-module-method babel-polyfill bluebird babel-preset-es2015 babel-core\n</code>",
        "<code>import 'babel-polyfill';</code>",
        "<code>{\n    \"presets\": [\"es2015\"],\n    \"plugins\": [\n      [\"transform-async-to-module-method\", {\n        \"module\": \"bluebird\",\n        \"method\": \"coroutine\"\n      }]\n    ]\n}\n</code>",
        "<code> \"devDependencies\": {\n    \"babel-loader\": \"^6.2.2\",\n    \"babel-plugin-transform-async-to-generator\": \"^6.5.0\",\n    \"babel-polyfill\": \"^6.5.0\",\n    \"babel-preset-es2015\": \"^6.5.0\",\n    \"webpack\": \"^1.12.13\"\n }\n</code>",
        "<code>presets: ['es2015', 'stage-0']</code>",
        "<code>async/await</code>",
        "<code>mocha --require babel-polyfill</code>",
        "<code>gulp.task('scripts', () =&gt; {\n  return rollup({\n    entry: './app/scripts/main.js',\n    format: \"iife\",\n    sourceMap: true,\n    plugins: [babel({\n      exclude: 'node_modules/**',\n      \"presets\": [\n        [\n          \"es2015-rollup\"\n        ]\n      ],\n      \"plugins\": [\n        \"external-helpers\"\n      ]\n    }),\n    includePaths({\n      include: {},\n      paths: ['./app/scripts'],\n      external: [],\n      extensions: ['.js']\n    })]\n  })\n\n  .pipe(source('app.js'))\n  .pipe(buffer())\n  .pipe(sourcemaps.init({\n    loadMaps: true\n  }))\n  .pipe(sourcemaps.write('.'))\n  .pipe(gulp.dest('.tmp/scripts'))\n  .pipe(reload({ stream: true }));\n});\n</code>",
        "<code>babel-polyfill</code>",
        "<code>bower install babel-polyfill --save\n</code>",
        "<code>&lt;script src=\"/bower_components/babel-polyfill/browser-polyfill.js\"&gt;&lt;/script&gt;\n</code>",
        "<code>npm install babel-polyfill --save\n</code>",
        "<code>import http from 'http';\nimport config from 'dotenv';\nimport 'babel-polyfill';\nimport { register } from 'babel-core';\nimport app from '../app';\n</code>",
        "<code>\"test\": \"export NODE_ENV=test|| SET NODE_ENV=test&amp;&amp; mocha --compilers \n  js:babel-core/register --require babel-polyfill server/test/**.js --exit\"\n</code>",
        "<code>{\n    \"presets\": [\n        [\n            \"env\",\n            {\n                \"modules\": false,\n                \"targets\": {\n                    \"browsers\": [\"last 2 versions\"]\n                }\n            }\n        ]\n    ],\n    \"plugins\": [\"external-helpers\",\n        [\n            \"transform-runtime\",\n            {\n                \"polyfill\": false,\n                \"regenerator\": true\n            }\n        ]]\n}\n</code>",
        "<code>import resolve from 'rollup-plugin-node-resolve';\nimport babel from 'rollup-plugin-babel';\nimport uglify from 'rollup-plugin-uglify';\nimport commonjs from 'rollup-plugin-commonjs';\n\n\nexport default {\n    input: 'src/entry.js',\n    output: {\n        file: 'dist/bundle.js',\n        format: 'umd',\n        name: 'MyCoolLib',\n        exports: 'named'\n    },\n    sourcemap: true,\n    plugins: [\n        commonjs({\n            // polyfill async/await\n            'node_modules/babel-runtime/helpers/asyncToGenerator.js': ['default']\n        }),\n        resolve(),\n        babel({\n            runtimeHelpers: true,\n            exclude: 'node_modules/**', // only transpile our source code\n        }),\n        uglify()\n\n    ]\n};\n</code>",
        "<code>babel-polyfill</code>",
        "<code>babel-regenerator-runtime</code>",
        "<code>regenerator-runtime</code>",
        "<code>webpack</code>",
        "<code>babel</code>",
        "<code>regenerator-runtime</code>",
        "<code>npm i -D regenerator-runtime\n</code>",
        "<code>entry: [\n  'regenerator-runtime/runtime',\n  YOUR_APP_ENTRY\n]\n</code>",
        "<code>\"devDependencies\": {\n    \"babel-preset-stage-3\": \"^6.11.0\"\n}\n</code>",
        "<code>\"presets\": [\"es2015\", \"stage-3\"]\n</code>",
        "<code>npm install babel-polyfill</code>",
        "<code>babel-polyfill</code>",
        "<code>webpack</code>",
        "<code>npm i -D @babel/polyfill</code>",
        "<code>webpack</code>",
        "<code>entry</code>",
        "<code>entry: ['@babel/polyfill', path.resolve(APP_DIR, 'App.js')],\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "jquery",
        "json",
        "serialization"
      ],
      "creation_date": 1248615594,
      "body_markdown": "How do I convert all elements of my form to a JavaScript object? \r\n\r\nI&#39;d like to have some way of automatically building a JavaScript object from my form, without having to loop over each element. I do not want a string, as returned by `$(&#39;#formid&#39;).serialize();`, nor do I want the map returned by `$(&#39;#formid&#39;).serializeArray();`\r\n",
      "last_edit_date": 1429902828,
      "up_vote_count": 1393,
      "link": "https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1248616860,
          "answer_id": 1184667,
          "path": "stack.bower.answer",
          "score": 21,
          "up_vote_count": 22,
          "is_accepted": false,
          "last_activity_date": 1248619902,
          "last_edit_date": 1248619902,
          "body_markdown": "There really is no way to do this without examining each of the elements.  What you really want to know is &quot;has someone else already written a method that converts a form to a JSON object?&quot;   Something like the following should work -- note that it will only give you the form elements that would be returned via a POST (must have a name).  This is **not tested**.\r\n\r\n\r\n    function formToJSON( selector )\r\n    {\r\n         var form = {};\r\n         $(selector).find(&#39;:input[name]:enabled&#39;).each( function() {\r\n             var self = $(this);\r\n             var name = self.attr(&#39;name&#39;);\r\n             if (form[name]) {\r\n                form[name] = form[name] + &#39;,&#39; + self.val();\r\n             }\r\n             else {\r\n                form[name] = self.val();\r\n             }\r\n         });\r\n\r\n         return form;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1248627710,
          "answer_id": 1185019,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1429902984,
          "last_edit_date": 1429902984,
          "body_markdown": "If you are trying to convert all form fields to JSON in order to submit this form through Ajax here is [a jQuery form plugin][1] that does that.\r\n\r\n  [1]: http://malsup.com/jquery/form/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1248663863,
          "answer_id": 1186245,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1248663863,
          "body_markdown": "I wouldn&#39;t use this on a live site due to XSS attacks and probably plenty of other issues, but here&#39;s a quick example of what you could do:\r\n\r\n    $(&quot;#myform&quot;).submit(function(){\r\n    \tvar arr = $(this).serializeArray();\r\n    \tvar json = &quot;&quot;;\r\n    \tjQuery.each(arr, function(){\r\n    \t\tjQuery.each(this, function(i, val){\r\n    \t\t\tif (i==&quot;name&quot;) {\r\n    \t\t\t\tjson += &#39;&quot;&#39; + val + &#39;&quot;:&#39;;\r\n    \t\t\t} else if (i==&quot;value&quot;) {\r\n    \t\t\t\tjson += &#39;&quot;&#39; + val.replace(/&quot;/g, &#39;\\\\&quot;&#39;) + &#39;&quot;,&#39;;\r\n    \t\t\t}\r\n    \t\t});\r\n    \t});\r\n    \tjson = &quot;{&quot; + json.substring(0, json.length - 1) + &quot;}&quot;;\r\n    \t// do something with json\r\n    \treturn false;\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 11,
          "creation_date": 1248665921,
          "answer_id": 1186309,
          "path": "stack.bower.answer",
          "score": 1514,
          "up_vote_count": 1525,
          "is_accepted": true,
          "last_activity_date": 1492580519,
          "last_edit_date": 1492580519,
          "body_markdown": "[`serializeArray`][1] already does exactly that. You just need to massage the data into your required format:\r\n\r\n    function objectifyForm(formArray) {//serialize data function\r\n\r\n\t  var returnArray = {};\r\n\t  for (var i = 0; i &lt; formArray.length; i++){\r\n        returnArray[formArray[i][&#39;name&#39;]] = formArray[i][&#39;value&#39;];\r\n      }\r\n\t  return returnArray;\r\n    }\r\n\r\nWatch out for hidden fields which have the same name as real inputs as they will get overwritten.\r\n  [1]: http://api.jquery.com/serializeArray/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1276901250,
          "answer_id": 3073532,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1276901250,
          "body_markdown": "I prefer this approach because: you don&#39;t have to iterate over 2 collections, you can get at things other than &quot;name&quot; and &quot;value&quot; if you need to, and you can sanitize your values before you store them in the object (if you have default values that you don&#39;t wish to store, for example).\r\n\r\n\r\n    $.formObject = function($o) {\r\n        var o = {},\r\n            real_value = function($field) {\r\n                var val = $field.val() || &quot;&quot;;\r\n               \r\n                // additional cleaning here, if needed\r\n\t                \r\n                return val;\r\n            };\r\n\r\n        if (typeof o != &quot;object&quot;) {\r\n            $o = $(o);\r\n        }\r\n\t        \r\n        $(&quot;:input[name]&quot;, $o).each(function(i, field) {\r\n            var $field = $(field),\r\n                name = $field.attr(&quot;name&quot;),\r\n                value = real_value($field);\r\n                \r\n            if (o[name]) {\r\n                if (!$.isArray(o[name])) {\r\n                    o[name] = [o[name]];\r\n                }\r\n                    \r\n                o[name].push(value);\r\n            }\r\n                \r\n            else {\r\n                o[name] = value;\r\n            }\r\n        });\r\n            \r\n        return o;\r\n    }\r\n\r\nUse like so:\r\n\r\n    var obj = $.formObject($(&quot;#someForm&quot;));\r\n\r\nOnly tested in Firefox."
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1279497475,
          "answer_id": 3277725,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1279497475,
          "last_edit_date": 1495540513,
          "body_markdown": "Ok, I know this already has a highly upvoted answer, but another [similar question was asked][1] recently, and I was directed to this question as well.  I&#39;d like to offer my solution as well, because it offers an advantage over the accepted solution:  You can include disabled form elements (which is sometimes important, depending on how your UI functions)\r\n\r\nHere is my answer from the [other SO question][2]:\r\n\r\nInitially, we were using jQuery&#39;s `serializeArray()` method, but that does not include form elements that are disabled.  We will often disable form elements that are &quot;sync&#39;d&quot; to other sources on the page, but we still need to include the data in our serialized object.  So `serializeArray()` is out.  We used the `:input` selector to get all input elements (both enabled and disabled) in a given container, and then `$.map()` to create our object.\r\n\r\n    var inputs = $(&quot;#container :input&quot;);\r\n    var obj = $.map(inputs, function(n, i)\r\n    {\r\n    \tvar o = {};\r\n    \to[n.name] = $(n).val();\r\n    \treturn o;\r\n    });\r\n    console.log(obj);\r\n\r\nNote that for this to work, each of your inputs will need a `name` attribute, which will be the name of the property of the resulting object.\r\n\r\nThat is actually slightly modified from what we used.  We needed to create an object that was structured as a .NET IDictionary&lt;K,V&gt;, so we used this: (I provide it here in case it&#39;s useful)\r\n\r\n    var obj = $.map(inputs, function(n, i)\r\n    {\r\n    \treturn { Key: n.name, Value: $(n).val() };\r\n    });\r\n    console.log(obj);\r\n\r\nI like both of these solutions, because they are simple uses of the `$.map()` function, and you have complete control over your selector (so, which elements you end up including in your resulting object).  Also, no extra plugin required.  Plain old jQuery.\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710\r\n  [2]: https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1299157226,
          "answer_id": 5181003,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1299157226,
          "body_markdown": "I found a problem with Tobias Cohen&#39;s code (I don&#39;t have enough points to comment on it directly), which otherwise works for me. If you have two select options with the same name, both with value=&quot;&quot;, the original code will produce &quot;name&quot;:&quot;&quot; instead of &quot;name&quot;:[&quot;&quot;,&quot;&quot;]\r\n\r\nI think this can fixed by adding &quot; || o[this.name] == &#39;&#39;&quot; to the first if condition:\r\n\r\n\t$.fn.serializeObject = function()\r\n\t{\r\n\t    var o = {};\r\n\t    var a = this.serializeArray();\r\n\t    $.each(a, function() {\r\n\t        if (o[this.name] || o[this.name] == &#39;&#39;) {\r\n\t            if (!o[this.name].push) {\r\n\t                o[this.name] = [o[this.name]];\r\n\t            }\r\n\t            o[this.name].push(this.value || &#39;&#39;);\r\n\t        } else {\r\n\t            o[this.name] = this.value || &#39;&#39;;\r\n\t        }\r\n\t    });\r\n\t    return o;\r\n\t};\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1299277683,
          "answer_id": 5199982,
          "path": "stack.bower.answer",
          "score": 96,
          "up_vote_count": 96,
          "is_accepted": false,
          "last_activity_date": 1325360044,
          "last_edit_date": 1325360044,
          "body_markdown": "A fixed version of Tobias Cohen&#39;s solution. This one correctly handles falsy values like `0` and `&#39;&#39;`. \r\n\r\n    jQuery.fn.serializeObject = function() {\r\n      var arrayData, objectData;\r\n      arrayData = this.serializeArray();\r\n      objectData = {};\r\n\r\n      $.each(arrayData, function() {\r\n        var value;\r\n\r\n        if (this.value != null) {\r\n          value = this.value;\r\n        } else {\r\n          value = &#39;&#39;;\r\n        }\r\n\r\n        if (objectData[this.name] != null) {\r\n          if (!objectData[this.name].push) {\r\n            objectData[this.name] = [objectData[this.name]];\r\n          }\r\n\r\n          objectData[this.name].push(value);\r\n        } else {\r\n          objectData[this.name] = value;\r\n        }\r\n      });\r\n\r\n      return objectData;\r\n    };\r\n\r\n\r\nAnd a CoffeeScript version for your coding convenience:\r\n\r\n\r\n    jQuery.fn.serializeObject = -&gt;\r\n      arrayData = @serializeArray()\r\n      objectData = {}\r\n\r\n      $.each arrayData, -&gt;\r\n        if @value?\r\n          value = @value\r\n        else\r\n          value = &#39;&#39;\r\n\r\n        if objectData[@name]?\r\n          unless objectData[@name].push\r\n            objectData[@name] = [objectData[@name]]\r\n\r\n          objectData[@name].push value\r\n        else\r\n          objectData[@name] = value\r\n\r\n      return objectData\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1301607950,
          "answer_id": 5506718,
          "path": "stack.bower.answer",
          "score": 28,
          "up_vote_count": 28,
          "is_accepted": false,
          "last_activity_date": 1301607950,
          "body_markdown": "All of these answers seemed so over the top to me. There&#39;s something to be said for simplicity. As long as all your form inputs have the name attribute set this should work just jim dandy.\r\n\r\n&gt;     $(&#39;form.myform&#39;).submit(function () {\r\n&gt;       var $this = $(this)\r\n&gt;         , viewArr = $this.serializeArray()\r\n&gt;         , view = {};\r\n&gt;\r\n&gt;       for (var i in viewArr) {\r\n&gt;         view[viewArr[i].name] = viewArr[i].value;\r\n&gt;       }\r\n&gt;\r\n&gt;       //Do stuff with view object here (e.g. JSON.stringify?)\r\n&gt;     });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1302011105,
          "answer_id": 5552852,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1302011105,
          "last_edit_date": 1495541907,
          "body_markdown": "I like samuels version, but I believe it has a small error. Normally JSON is sent as\r\n\r\n&gt; {&quot;coreSKU&quot;:&quot;PCGUYJS&quot;,&quot;name_de&quot;:&quot;whatever&quot;,...\r\n\r\nNOT as\r\n\r\n&gt; [{&quot;coreSKU&quot;:&quot;PCGUYJS&quot;},{&quot;name_de&quot;:&quot;whatever&quot;},...\r\n\r\nso the function IMO should read:\r\n\r\n    App.toJson = function( selector ) {\r\n    \tvar o = {};\r\n    \t$.map( $( selector ), function( n,i )\r\n    \t{\r\n    \t\to[n.name] = $(n).val();\r\n    \t});\t\t\r\n    \treturn o;\r\n    }\r\n\r\nand to wrap it in data array (as commonly expected, too), and finally send it as astring\r\nApp.stringify( {data:App.toJson( &#39;#cropform :input&#39; )} )\r\n\r\nFor the stringify look at [Question 3593046][3] for the lean version, at [json2.js][4] for the every-eventuality-covered version. That should cover it all :)\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710\r\n  [2]: https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710\r\n  [3]: https://stackoverflow.com/questions/3593046\r\n  [4]: https://github.com/douglascrockford/JSON-js/blob/master/json2.js\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1308563188,
          "answer_id": 6409415,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1429903084,
          "last_edit_date": 1429903084,
          "body_markdown": "I found a problem with the selected solution.\r\n\r\nWhen using forms that have array based names the jQuery serializeArray() function actually dies.\r\n\r\nI have a PHP framework that uses array-based field names to allow for the same form to be put onto the same page multiple times in multiple views. This can be handy to put both add, edit and delete on the same page without conflicting form models.\r\n\r\nSince I wanted to seralize the forms without having to take this absolute base functionality out I decided to write my own seralizeArray():\r\n\r\n\t\t\tvar $vals = {};\r\n\r\n\t\t\t$(&quot;#video_edit_form input&quot;).each(function(i){\r\n\t\t\t\tvar name = $(this).attr(&quot;name&quot;).replace(/editSingleForm\\[/i, &#39;&#39;);\r\n\r\n\t\t\t\tname = name.replace(/\\]/i, &#39;&#39;);\r\n\r\n\t\t\t\tswitch($(this).attr(&quot;type&quot;)){\r\n\t\t\t\t\tcase &quot;text&quot;:\r\n\t\t\t\t\t\t$vals[name] = $(this).val();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase &quot;checkbox&quot;:\r\n\t\t\t\t\t\tif($(this).attr(&quot;checked&quot;)){\r\n\t\t\t\t\t\t\t$vals[name] = $(this).val();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase &quot;radio&quot;:\r\n\t\t\t\t\t\tif($(this).attr(&quot;checked&quot;)){\r\n\t\t\t\t\t\t\t$vals[name] = $(this).val();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\nPlease note: This also works outside of form submit() so if an error occurs in the rest of your code the form won&#39;t submit if you place on a link button saying &quot;save changes&quot;.\r\n\r\nAlso note that this function should never be used to validate the form only to gather the data to send to the server-side for validation. Using such weak and mass-assigned code WILL cause [XSS][1], etc.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Cross-site_scripting\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1318793419,
          "answer_id": 7786725,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1318793419,
          "body_markdown": "   The serialize function take JSON object as a parameter and return serialize String.\r\n \r\n\r\n    function serialize(object) {\r\n        \t\tvar _SPECIAL_CHARS = /[\\\\\\&quot;\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g, _CHARS = {\r\n        \t\t\t&#39;\\b&#39; : &#39;\\\\b&#39;,\r\n        \t\t\t&#39;\\t&#39; : &#39;\\\\t&#39;,\r\n        \t\t\t&#39;\\n&#39; : &#39;\\\\n&#39;,\r\n        \t\t\t&#39;\\f&#39; : &#39;\\\\f&#39;,\r\n        \t\t\t&#39;\\r&#39; : &#39;\\\\r&#39;,\r\n        \t\t\t&#39;&quot;&#39; : &#39;\\\\&quot;&#39;,\r\n        \t\t\t&#39;\\\\&#39; : &#39;\\\\\\\\&#39;\r\n        \t\t}, EMPTY = &#39;&#39;, OPEN_O = &#39;{&#39;, CLOSE_O = &#39;}&#39;, OPEN_A = &#39;[&#39;, CLOSE_A = &#39;]&#39;, COMMA = &#39;,&#39;, COMMA_CR = &quot;,\\n&quot;, CR = &quot;\\n&quot;, COLON = &#39;:&#39;, space = &quot;&quot;, COLON_SP = &#39;: &#39;, stack = [], QUOTE = &#39;&quot;&#39;;\r\n        \t\tfunction _char(c) {\r\n        \t\t\tif (!_CHARS[c]) {\r\n        \t\t\t\t_CHARS[c] = &#39;\\\\u&#39; + (&#39;0000&#39; + (+(c.charCodeAt(0))).toString(16))\r\n        \t\t\t\t\t.slice(-4);\r\n        \t\t\t}\r\n        \t\t\treturn _CHARS[c];\r\n        \t\t}\r\n        \t\tfunction _string(s) {\r\n        \t\t\treturn QUOTE + s.replace(_SPECIAL_CHARS, _char) + QUOTE;\r\n        \t\t\t// return str.replace(&#39;\\&quot;&#39;,&#39;&#39;).replace(&#39;\\&quot;&#39;,&#39;&#39;);\r\n        \t\t}\r\n        \r\n        \t\tfunction serialize(h, key) {\r\n        \t\t\tvar value = h[key], a = [], colon = &quot;:&quot;, arr, i, keys, t, k, v;\r\n        \t\t\tarr = value instanceof Array;\r\n        \t\t\tstack.push(value);\r\n        \t\t\tkeys = value;\r\n        \t\t\ti = 0;\r\n        \t\t\tt = typeof value;\r\n        \t\t\tswitch (t) {\r\n        \t\t\t\tcase &quot;object&quot; :\r\n        \t\t\t\t\tif(value==null){\r\n        \t\t\t\t\t\treturn null;\r\n        \t\t\t\t\t}\r\n        \t\t\t\t\tbreak;\r\n        \t\t\t\tcase &quot;string&quot; :\r\n        \t\t\t\t\treturn _string(value);\r\n        \t\t\t\tcase &quot;number&quot; :\r\n        \t\t\t\t\treturn isFinite(value) ? value + EMPTY : NULL;\r\n        \t\t\t\tcase &quot;boolean&quot; :\r\n        \t\t\t\t\treturn value + EMPTY;\r\n        \t\t\t\tcase &quot;null&quot; :\r\n        \t\t\t\t\treturn null;\r\n        \t\t\t\tdefault :\r\n        \t\t\t\t\treturn undefined;\r\n        \t\t\t}\r\n        \t\t\tarr = value.length === undefined ? false : true;\r\n        \r\n        \t\t\tif (arr) { // Array\r\n        \t\t\t\tfor (i = value.length - 1; i &gt;= 0; --i) {\r\n        \t\t\t\t\ta[i] = serialize(value, i) || NULL;\r\n        \t\t\t\t}\r\n        \t\t\t}\r\n        \t\t\telse { // Object\r\n        \t\t\t\ti = 0;\r\n        \t\t\t\tfor (k in keys) {\r\n        \t\t\t\t\tif (keys.hasOwnProperty(k)) {\r\n        \t\t\t\t\t\tv = serialize(value, k);\r\n        \t\t\t\t\t\tif (v) {\r\n        \t\t\t\t\t\t\ta[i++] = _string(k) + colon + v;\r\n        \t\t\t\t\t\t}\r\n        \t\t\t\t\t}\r\n        \t\t\t\t}\r\n        \t\t\t}\r\n        \r\n        \t\t\tstack.pop();\r\n        \t\t\tif (space &amp;&amp; a.length) {\r\n        \r\n        \t\t\t\treturn arr\r\n        \t\t\t\t\t? &quot;[&quot; + _indent(a.join(COMMA_CR), space) + &quot;\\n]&quot;\r\n        \t\t\t\t\t: &quot;{\\n&quot; + _indent(a.join(COMMA_CR), space) + &quot;\\n}&quot;;\r\n        \t\t\t}\r\n        \t\t\telse {\r\n        \t\t\t\treturn arr ? &quot;[&quot; + a.join(COMMA) + &quot;]&quot; : &quot;{&quot; + a.join(COMMA)\r\n        \t\t\t\t\t+ &quot;}&quot;;\r\n        \t\t\t}\r\n        \t\t}\r\n        \t\treturn serialize({\r\n        \t\t\t&quot;&quot; : object\r\n        \t\t}, &quot;&quot;);\r\n        \t}\r\n        \t"
        },
        {
          "tags": [],
          "down_vote_count": 4,
          "creation_date": 1323210315,
          "answer_id": 8407771,
          "path": "stack.bower.answer",
          "score": 393,
          "up_vote_count": 397,
          "is_accepted": false,
          "last_activity_date": 1468271002,
          "last_edit_date": 1468271002,
          "body_markdown": "# Convert forms to JSON LIKE A BOSS\r\n\r\n\r\n----------\r\n\r\nCurrent source is on [GitHub](https://github.com/macek/jquery-serialize-object) and bower.\r\n\r\n&gt; $ bower install jquery-serialize-object\r\n\r\n  \r\n\r\n\r\n----------\r\n\r\n### The following code is now **deprecated**. \r\n\r\nThe following code can take work with all sorts of input names; and handle them just as you&#39;d expect.\r\n\r\nFor example:\r\n\r\n    &lt;!-- all of these will work! --&gt;\r\n    &lt;input name=&quot;honey[badger]&quot; value=&quot;a&quot;&gt;\r\n    &lt;input name=&quot;wombat[]&quot; value=&quot;b&quot;&gt;\r\n    &lt;input name=&quot;hello[panda][]&quot; value=&quot;c&quot;&gt;\r\n    &lt;input name=&quot;animals[0][name]&quot; value=&quot;d&quot;&gt;\r\n    &lt;input name=&quot;animals[0][breed]&quot; value=&quot;e&quot;&gt;\r\n    &lt;input name=&quot;crazy[1][][wonky]&quot; value=&quot;f&quot;&gt;\r\n    &lt;input name=&quot;dream[as][vividly][as][you][can]&quot; value=&quot;g&quot;&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    // output\r\n    {\r\n      &quot;honey&quot;:{\r\n        &quot;badger&quot;:&quot;a&quot;\r\n      },\r\n      &quot;wombat&quot;:[&quot;b&quot;],\r\n      &quot;hello&quot;:{\r\n        &quot;panda&quot;:[&quot;c&quot;]\r\n      },\r\n      &quot;animals&quot;:[\r\n        {\r\n          &quot;name&quot;:&quot;d&quot;,\r\n          &quot;breed&quot;:&quot;e&quot;\r\n        }\r\n      ],\r\n      &quot;crazy&quot;:[\r\n        null,\r\n        [\r\n          {&quot;wonky&quot;:&quot;f&quot;}\r\n        ]\r\n      ],\r\n      &quot;dream&quot;:{\r\n        &quot;as&quot;:{\r\n          &quot;vividly&quot;:{\r\n            &quot;as&quot;:{\r\n              &quot;you&quot;:{\r\n                &quot;can&quot;:&quot;g&quot;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n## Usage\r\n\r\n    $(&#39;#my-form&#39;).serializeObject();\r\n\r\n## The Sorcery (JavaScript)\r\n\r\n    (function($){\r\n        $.fn.serializeObject = function(){\r\n            \r\n            var self = this,\r\n                json = {},\r\n                push_counters = {},\r\n                patterns = {\r\n                    &quot;validate&quot;: /^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/,\r\n                    &quot;key&quot;:      /[a-zA-Z0-9_]+|(?=\\[\\])/g,\r\n                    &quot;push&quot;:     /^$/,\r\n                    &quot;fixed&quot;:    /^\\d+$/,\r\n                    &quot;named&quot;:    /^[a-zA-Z0-9_]+$/\r\n                };\r\n            \r\n            \r\n            this.build = function(base, key, value){\r\n                base[key] = value;\r\n                return base;\r\n            };\r\n            \r\n            this.push_counter = function(key){\r\n                if(push_counters[key] === undefined){\r\n                    push_counters[key] = 0;\r\n                }\r\n                return push_counters[key]++;\r\n            };\r\n            \r\n            $.each($(this).serializeArray(), function(){\r\n                \r\n                // skip invalid keys\r\n                if(!patterns.validate.test(this.name)){\r\n                    return;\r\n                }\r\n                \r\n                var k,\r\n                    keys = this.name.match(patterns.key),\r\n                    merge = this.value,\r\n                    reverse_key = this.name;\r\n                \r\n                while((k = keys.pop()) !== undefined){\r\n                    \r\n                    // adjust reverse_key\r\n                    reverse_key = reverse_key.replace(new RegExp(&quot;\\\\[&quot; + k + &quot;\\\\]$&quot;), &#39;&#39;);\r\n                    \r\n                    // push\r\n                    if(k.match(patterns.push)){\r\n                        merge = self.build([], self.push_counter(reverse_key), merge);\r\n                    }\r\n                    \r\n                    // fixed\r\n                    else if(k.match(patterns.fixed)){\r\n                        merge = self.build([], k, merge);\r\n                    }\r\n                    \r\n                    // named\r\n                    else if(k.match(patterns.named)){\r\n                        merge = self.build({}, k, merge);\r\n                    }\r\n                }\r\n                \r\n                json = $.extend(true, json, merge);\r\n            });\r\n            \r\n            return json;\r\n        };\r\n    })(jQuery);\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1326217300,
          "answer_id": 8807824,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1441053737,
          "last_edit_date": 1441053737,
          "body_markdown": "I don&#39;t know why, but I found only one really working solution for form with inputs with names like `name=&quot;some[sub][sub][sub][name]&quot;`.\r\n\r\nThere is it: [LINK][1]\r\n\r\n\r\n  [1]: http://jupiterjs.com/news/convert-form-elements-to-javascript-object-literals-with-jquery-formparams-plugin"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1330016370,
          "answer_id": 9417546,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1334840875,
          "last_edit_date": 1334840875,
          "body_markdown": "**Turn anything into an object (not unit tested)**\r\n\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n    string = {};\r\n\r\n    string.repeat = function(string, count)\r\n    {\r\n        return new Array(count+1).join(string);\r\n    }\r\n\r\n    string.count = function(string)\r\n    {\r\n        var count = 0;\r\n        \r\n        for (var i=1; i&lt;arguments.length; i++)\r\n        {\r\n            var results = string.match(new RegExp(arguments[i], &#39;g&#39;));\r\n            count += results ? results.length : 0;\r\n        }\r\n            \r\n        return count;\r\n    }\r\n    \r\n    array = {};\r\n    \r\n    array.merge = function(arr1, arr2)\r\n    {\r\n        for (var i in arr2)\r\n        {\r\n            if (arr1[i] &amp;&amp; typeof arr1[i] == &#39;object&#39; &amp;&amp; typeof arr2[i] == &#39;object&#39;)\r\n                arr1[i] = array.merge(arr1[i], arr2[i]);\r\n            else\r\n                arr1[i] = arr2[i]\r\n        }\r\n        \r\n        return arr1;\r\n    }\r\n    \r\n    array.print = function(obj)\r\n    {\r\n        var arr = [];\r\n        $.each(obj, function(key, val) {\r\n            var next = key + &quot;: &quot;;\r\n            next += $.isPlainObject(val) ? array.print(val) : val;\r\n            arr.push( next );\r\n          });\r\n        \r\n        return &quot;{ &quot; +  arr.join(&quot;, &quot;) + &quot; }&quot;;\r\n    }\r\n\r\n    node = {};\r\n    \r\n    node.objectify = function(node, params)\r\n    {\r\n        if (!params)\r\n            params = {};\r\n        \r\n        if (!params.selector)\r\n            params.selector = &quot;*&quot;;\r\n            \r\n        if (!params.key)\r\n            params.key = &quot;name&quot;;\r\n            \r\n        if (!params.value)\r\n            params.value = &quot;value&quot;;\r\n        \r\n        var o = {};\r\n        var indexes = {};\r\n\r\n        $(node).find(params.selector+&quot;[&quot;+params.key+&quot;]&quot;).each(function()\r\n        {\r\n            var name = $(this).attr(params.key),\r\n                value = $(this).attr(params.value);\r\n            \r\n            var obj = $.parseJSON(&quot;{&quot;+name.replace(/([^\\[]*)/, function()\r\n            {\r\n                return &#39;&quot;&#39;+arguments[1]+&#39;&quot;&#39;;\r\n            }).replace(/\\[(.*?)\\]/gi, function()\r\n            {\r\n                if (arguments[1].length == 0)\r\n                {\r\n                    var index = arguments[3].substring(0, arguments[2]);\r\n                    indexes[index] = indexes[index] !== undefined ? indexes[index]+1 : 0;\r\n                    \r\n                    return &#39;:{&quot;&#39;+indexes[index]+&#39;&quot;&#39;;\r\n                }\r\n                else\r\n                    return &#39;:{&quot;&#39;+escape(arguments[1])+&#39;&quot;&#39;;\r\n            })+&#39;:&quot;&#39;+value.replace(/[\\\\&quot;]/gi, function()\r\n            {\r\n                return &quot;\\\\&quot;+arguments[0]; \r\n            })+&#39;&quot;&#39;+string.repeat(&#39;}&#39;, string.count(name, &#39;]&#39;))+&quot;}&quot;);\r\n\r\n            o = array.merge(o, obj);\r\n        });\r\n        \r\n        return o;\r\n    }\r\n    &lt;/script&gt;\r\n    \r\nThe output of test:\r\n\r\n    $(document).ready(function()\r\n    {\r\n        console.log(array.print(node.objectify($(&quot;form&quot;), {})));\r\n        console.log(array.print(node.objectify($(&quot;form&quot;), {selector: &quot;select&quot;})));\r\n    });\r\n\r\non\r\n\r\n    &lt;form&gt;\r\n        &lt;input name=&#39;input[a]&#39; type=&#39;text&#39; value=&#39;text&#39;/&gt;\r\n        &lt;select name=&#39;input[b]&#39;&gt;\r\n            &lt;option&gt;select&lt;/option&gt;\r\n        &lt;/select&gt;\r\n        \r\n        &lt;input name=&#39;otherinput[c][a]&#39; value=&#39;a&#39;/&gt;\r\n        &lt;input name=&#39;otherinput[c][]&#39; value=&#39;b&#39;/&gt;\r\n        &lt;input name=&#39;otherinput[d][b]&#39; value=&#39;c&#39;/&gt;\r\n        &lt;input name=&#39;otherinput[c][]&#39; value=&#39;d&#39;/&gt;\r\n        \r\n        &lt;input type=&#39;hidden&#39; name=&#39;anotherinput&#39; value=&#39;hidden&#39;/&gt;\r\n        &lt;input type=&#39;hidden&#39; name=&#39;anotherinput&#39; value=&#39;1&#39;/&gt;\r\n        \r\n        &lt;input type=&#39;submit&#39; value=&#39;submit&#39;/&gt;\r\n    &lt;/form&gt;\r\n\r\n\r\nwill yield:\r\n\r\n    { input: { a: text, b: select }, otherinput: { c: { a: a, 0: b, 1: d }, d: { b: c } }, anotherinput: 1 }\r\n    { input: { b: select } }"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1333173841,
          "answer_id": 9953455,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1333173841,
          "body_markdown": "Has anyone mentioned this [link](http://jupiterjs.com/news/convert-form-elements-to-javascript-object-literals-with-jquery-formparams-plugin)? pretty cool and as easy as $(&#39;#myform&#39;).formParams();"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1337409061,
          "answer_id": 10662923,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1430032670,
          "last_edit_date": 1430032670,
          "body_markdown": "Tobias&#39;s solution above is the correct one, however, as commenter @macek pointed out, it does not handle inputs of type foo[bar] and split them into sub-objects.\r\n\r\nThis is a PHP-only feature, but I still find it very useful to be able to generate the same structure in JavaScript.\r\n\r\nI simply modified Tobias&#39;s code above, so all credit goes to him. This can probably be made cleaner, but I just whipped it up in five minutes and thought it might be useful.\r\n\r\nIt does not handle multidimensional arrays or numerically indexed arrays at this time. That is, it will only work with names foo[bar] and not foo[].\r\n\r\n    jQuery.fn.serializeObjectPHP = function()\r\n    {\r\n        var o = {};\r\n        var re = /^(.+)\\[(.*)\\]$/;\r\n        var a = this.serializeArray();\r\n        var n;\r\n        jQuery.each(a, function() {\r\n            var name = this.name;\r\n            if ((n = re.exec(this.name)) &amp;&amp; n[2]) {\r\n                if (o[n[1]] === undefined) {\r\n                    o[n[1]] = {};\r\n                    o[n[1]][n[2]] = this.value || &#39;&#39;;\r\n                } else if (o[n[1]][n[2]] === undefined) {\r\n                    o[n[1]][n[2]] = this.value || &#39;&#39;;\r\n                } else {\r\n                    if(!o[n[1]][n[2]].push) {\r\n                        o[n[1]][n[2]] = [ o[n[1]][n[2]] ];\r\n                    }\r\n                    o[n[1]][n[2]].push(this.value || &#39;&#39;);\r\n                }\r\n            } else {\r\n                if (n &amp;&amp; !n[2]) {\r\n                    name = n[1];\r\n                }\r\n                if (o[name] !== undefined) {\r\n                    if (!o[name].push) {\r\n                        o[name] = [o[name]];\r\n                    }\r\n                    o[name].push(this.value || &#39;&#39;);\r\n                } else {\r\n                    o[name] = this.value || &#39;&#39;;\r\n                }\r\n            }\r\n        });\r\n        return o;\r\n    };\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1347369445,
          "answer_id": 12370626,
          "path": "stack.bower.answer",
          "score": 16,
          "up_vote_count": 16,
          "is_accepted": false,
          "last_activity_date": 1348514293,
          "last_edit_date": 1348514293,
          "body_markdown": "This function should handle multidimensional arrays along with multiple elements with the same name. \r\n\r\nI&#39;ve been using it for a couple years so far:\r\n\r\n    jQuery.fn.serializeJSON=function() {\r\n      var json = {};\r\n      jQuery.map(jQuery(this).serializeArray(), function(n, i) {\r\n        var _ = n.name.indexOf(&#39;[&#39;);\r\n        if (_ &gt; -1) {\r\n          var o = json;\r\n          _name = n.name.replace(/\\]/gi, &#39;&#39;).split(&#39;[&#39;);\r\n          for (var i=0, len=_name.length; i&lt;len; i++) {\r\n            if (i == len-1) {\r\n              if (o[_name[i]]) {\r\n                if (typeof o[_name[i]] == &#39;string&#39;) {\r\n                  o[_name[i]] = [o[_name[i]]];\r\n                }\r\n                o[_name[i]].push(n.value);\r\n              }\r\n              else o[_name[i]] = n.value || &#39;&#39;;\r\n            }\r\n            else o = o[_name[i]] = o[_name[i]] || {};\r\n          }\r\n        }\r\n        else {\r\n          if (json[n.name] !== undefined) {\r\n            if (!json[n.name].push) {\r\n              json[n.name] = [json[n.name]];\r\n            }\r\n            json[n.name].push(n.value || &#39;&#39;);\r\n          }\r\n          else json[n.name] = n.value || &#39;&#39;;      \r\n        }\r\n      });\r\n      return json;\r\n    };\r\n\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1347981993,
          "answer_id": 12480133,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1430032969,
          "last_edit_date": 1430032969,
          "body_markdown": "This is an improvement for Tobias Cohen&#39;s function, which works well with multidimensional arrays:\r\n\r\nhttp://jsfiddle.net/BNnwF/2/\r\n\r\nHowever, this is not a jQuery plugin, but it will only take a few seconds to make it into one if you wish to use it that way: simply replace the function declaration wrapper:\r\n\r\n    function serializeFormObject(form)\r\n    {\r\n        ...\r\n    }\r\n\r\nwith:\r\n\r\n    $.fn.serializeFormObject = function()\r\n    {\r\n        var form = this;\r\n        ...\r\n    };\r\n\r\n\r\nI guess it is similar to macek&#39;s solution in that it does the same thing, but i think this is a bit cleaner and simpler. I also included macek&#39;s test case inputs into the fiddle and added some additional ones. So far this works well for me.\r\n\r\n    function serializeFormObject(form)\r\n    {\r\n        function trim(str)\r\n        {\r\n            return str.replace(/^\\s+|\\s+$/g,&quot;&quot;);\r\n        }\r\n\r\n        var o = {};\r\n        var a = $(form).serializeArray();\r\n        $.each(a, function() {\r\n            var nameParts = this.name.split(&#39;[&#39;);\r\n            if (nameParts.length == 1) {\r\n                // New value is not an array - so we simply add the new\r\n                // value to the result object\r\n                if (o[this.name] !== undefined) {\r\n                    if (!o[this.name].push) {\r\n                        o[this.name] = [o[this.name]];\r\n                    }\r\n                    o[this.name].push(this.value || &#39;&#39;);\r\n                } else {\r\n                    o[this.name] = this.value || &#39;&#39;;\r\n                }\r\n            }\r\n            else {\r\n                // New value is an array - we need to merge it into the\r\n                // existing result object\r\n                $.each(nameParts, function (index) {\r\n                    nameParts[index] = this.replace(/\\]$/, &#39;&#39;);\r\n                });\r\n\r\n                // This $.each merges the new value in, part by part\r\n                var arrItem = this;\r\n                var temp = o;\r\n                $.each(nameParts, function (index) {\r\n                    var next;\r\n                    var nextNamePart;\r\n                    if (index &gt;= nameParts.length - 1)\r\n                        next = arrItem.value || &#39;&#39;;\r\n                    else {\r\n                        nextNamePart = nameParts[index + 1];\r\n                        if (trim(this) != &#39;&#39; &amp;&amp; temp[this] !== undefined)\r\n                            next = temp[this];\r\n                        else {\r\n                            if (trim(nextNamePart) == &#39;&#39;)\r\n                                next = [];\r\n                            else\r\n                                next = {};\r\n                        }\r\n                    }\r\n\r\n                    if (trim(this) == &#39;&#39;) {\r\n                        temp.push(next);\r\n                    } else\r\n                        temp[this] = next;\r\n\r\n                    temp = next;\r\n                });\r\n            }\r\n        });\r\n        return o;\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1352830730,
          "answer_id": 13366386,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1430033231,
          "last_edit_date": 1492087237,
          "body_markdown": "I had the same problem lately and came out with [this .toJSON jQuery plugin][1] which converts a form into a JSON object with the same structure. This is also expecially useful for dynamically generated forms where you want to let your user add more fields in specific places.\r\n\r\nThe point is you may actually want to build a form so that it has a structure itself, so let&#39;s say you want to make a form where the user inserts his favourite places in town: you can imagine this form to represent a `&lt;places&gt;...&lt;/places&gt;` XML element containing a list of places the user likes thus a list of `&lt;place&gt;...&lt;/place&gt;` elements each one containing for example a `&lt;name&gt;...&lt;/name&gt;` element, a `&lt;type&gt;...&lt;/type&gt;` element and then a list of `&lt;activity&gt;...&lt;/activity&gt;` elements to represent the activities you can perform in such a place. So your XML structure would be like this:\r\n\r\n    &lt;places&gt;\r\n\r\n        &lt;place&gt;\r\n\r\n            &lt;name&gt;Home&lt;/name&gt;\r\n            &lt;type&gt;dwelling&lt;/type&gt;\r\n\r\n            &lt;activity&gt;sleep&lt;/activity&gt;\r\n            &lt;activity&gt;eat&lt;/activity&gt;\r\n            &lt;activity&gt;watch TV&lt;/activity&gt;\r\n\r\n        &lt;/place&gt;\r\n\r\n        &lt;place&gt;...&lt;/place&gt;\r\n\r\n        &lt;place&gt;...&lt;/place&gt;\r\n\r\n    &lt;/places&gt;\r\n\r\nHow cool would it be to have a JSON object out of this which would represent this exact structure so you&#39;ll be able to either:\r\n\r\n - Store this object as it is in any [CouchDB][2]-like database\r\n - Read it from your $_POST[] server side and retrive a correctly nested array you can then semantically manipulate\r\n - Use some server-side script to convert it into a well-formed XML file (even if you don&#39;t know its exact structure a-priori)\r\n - Just somehow use it as it is in any [Node.js][3]-like server script\r\n\r\nOK, so now we need to think how a form can represent an XML file.\r\n\r\nOf course the `&lt;form&gt;` tag is the `root`, but then we have that `&lt;place&gt;` element which is a container and not a data element itself, so we cannot use an input tag for it.\r\n\r\nHere&#39;s where the `&lt;fieldset&gt;` tag comes in handy! We&#39;ll use `&lt;fieldset&gt;` tags to represent all container elements in our form/XML representation and so getting to a result like this:\r\n\r\n    &lt;form name=&quot;places&quot;&gt;\r\n\r\n        &lt;fieldset name=&quot;place&quot;&gt;\r\n\r\n            &lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;\r\n            &lt;select name=&quot;type&quot;&gt;\r\n                &lt;option value=&quot;dwelling&quot;&gt;Dwelling&lt;/option&gt;\r\n                &lt;option value=&quot;restoration&quot;&gt;Restoration&lt;/option&gt;\r\n                &lt;option value=&quot;sport&quot;&gt;Sport&lt;/option&gt;\r\n                &lt;option value=&quot;administrative&quot;&gt;Administrative&lt;/option&gt;\r\n            &lt;/select&gt;\r\n\r\n            &lt;input type=&quot;text&quot; name=&quot;activity&quot;/&gt;\r\n            &lt;input type=&quot;text&quot; name=&quot;activity&quot;/&gt;\r\n            &lt;input type=&quot;text&quot; name=&quot;activity&quot;/&gt;\r\n\r\n        &lt;/fieldset&gt;\r\n\r\n    &lt;/form&gt;\r\n\r\nAs you can see in this form, we&#39;re breaking the rule of unique names, but this is OK because they&#39;ll be converted into an array of element thus they&#39;ll be referenced only by their index inside the array.\r\n\r\nAt this point you can see how there&#39;s no `name=&quot;array[]&quot;` like name inside the form and everything is pretty, simple and semantic.\r\n\r\nNow we want this form to be converted into a JSON object which will look like this:\r\n\r\n    {&#39;places&#39;:{\r\n\r\n        &#39;place&#39;:[\r\n\r\n            {\r\n\r\n                &#39;name&#39;: &#39;Home&#39;,\r\n                &#39;type&#39;: &#39;dwelling&#39;,\r\n\r\n                &#39;activity&#39;:[\r\n\r\n                     &#39;sleep&#39;,\r\n                     &#39;eat&#39;,\r\n                     &#39;watch TV&#39;\r\n\r\n                ]\r\n\r\n            },\r\n\r\n            {...},\r\n\r\n            {...}\r\n\r\n        ]\r\n\r\n    }}\r\n\r\nTo do this I have developed [this jQuery plugin here][4] which someone helped optimizing in [this *Code Review* thread][5] and looks like this:\r\n\r\n    $.fn.toJSO = function () {\r\n        var obj = {},\r\n            $kids = $(this).children(&#39;[name]&#39;);\r\n        if (!$kids.length) {\r\n            return $(this).val();\r\n        }\r\n        $kids.each(function () {\r\n            var $el = $(this),\r\n                name = $el.attr(&#39;name&#39;);\r\n            if ($el.siblings(&quot;[name=&quot; + name + &quot;]&quot;).length) {\r\n                if (!/radio|checkbox/i.test($el.attr(&#39;type&#39;)) || $el.prop(&#39;checked&#39;)) {\r\n                    obj[name] = obj[name] || [];\r\n                    obj[name].push($el.toJSO());\r\n                }\r\n            } else {\r\n                obj[name] = $el.toJSO();\r\n            }\r\n        });\r\n        return obj;\r\n    };\r\n\r\nI also made [this one blog post][6] to explain this more.\r\n\r\nThis converts everything in a form to JSON (even radio and check boxes) and all you&#39;ll have left to do is call\r\n\r\n    $.post(&#39;script.php&#39;,(&#39;form&#39;).toJSO(), ...);\r\n\r\nI know there&#39;s plenty of ways to convert forms into JSON objects and sure `.serialize()` and `.serializeArray()` work great in most cases and are mostly intended to be used, but I think this whole idea of *writing a form as an XML structure with meaningful names and converting it into a well-formed JSON object* is worth the try, also the fact you can add same-name input tags without worrying is very useful if you need to retrive dynamically generated forms data.\r\n\r\nI hope this helps someone!\r\n\r\n  [1]: https://gist.github.com/4055352\r\n  [2]: http://couchdb.apache.org/\r\n  [3]: http://nodejs.org/\r\n  [4]: https://gist.github.com/4055352\r\n  [5]: https://codereview.stackexchange.com/questions/13443/jquery-plugin-node-tojson-convert-html-form-to-js-object\r\n  [6]: http://poliradiolabs.altervista.org/?p=39&amp;preview=true&amp;preview_id=39&amp;preview_nonce=576b7546ef\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1354806557,
          "answer_id": 13746539,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1430033458,
          "last_edit_date": 1430033458,
          "body_markdown": "My code from my library *phery* got a serialization routine that can deal with really complex forms (like in the demo https://github.com/pocesar/phery/blob/master/demo.php#L1664 ), and it&#39;s not a one-size-fits-all. It actually checks what the type of each field is. For example, a radio box isn&#39;t the same as a range, that isn&#39;t the same as keygen, that isn&#39;t the same as select multiple. My function covers it all, and you can see\r\nit at https://github.com/pocesar/phery/blob/master/phery.js#L1851.\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    serializeForm:function (opt) {\r\n        opt = $.extend({}, opt);\r\n\r\n        if (typeof opt[&#39;disabled&#39;] === &#39;undefined&#39; || opt[&#39;disabled&#39;] === null) {\r\n            opt[&#39;disabled&#39;] = false;\r\n        }\r\n        if (typeof opt[&#39;all&#39;] === &#39;undefined&#39; || opt[&#39;all&#39;] === null) {\r\n            opt[&#39;all&#39;] = false;\r\n        }\r\n        if (typeof opt[&#39;empty&#39;] === &#39;undefined&#39; || opt[&#39;empty&#39;] === null) {\r\n            opt[&#39;empty&#39;] = true;\r\n        }\r\n\r\n        var\r\n            $form = $(this),\r\n            result = {},\r\n            formValues =\r\n                $form\r\n                    .find(&#39;input,textarea,select,keygen&#39;)\r\n                    .filter(function () {\r\n                        var ret = true;\r\n                        if (!opt[&#39;disabled&#39;]) {\r\n                            ret = !this.disabled;\r\n                        }\r\n                        return ret &amp;&amp; $.trim(this.name);\r\n                    })\r\n                    .map(function () {\r\n                        var\r\n                            $this = $(this),\r\n                            radios,\r\n                            options,\r\n                            value = null;\r\n\r\n                        if ($this.is(&#39;[type=&quot;radio&quot;]&#39;) || $this.is(&#39;[type=&quot;checkbox&quot;]&#39;)) {\r\n                            if ($this.is(&#39;[type=&quot;radio&quot;]&#39;)) {\r\n                                radios = $form.find(&#39;[type=&quot;radio&quot;][name=&quot;&#39; + this.name + &#39;&quot;]&#39;);\r\n                                if (radios.filter(&#39;[checked]&#39;).size()) {\r\n                                    value = radios.filter(&#39;[checked]&#39;).val();\r\n                                }\r\n                            } else if ($this.prop(&#39;checked&#39;)) {\r\n                                value = $this.is(&#39;[value]&#39;) ? $this.val() : 1;\r\n                            }\r\n                        } else if ($this.is(&#39;select&#39;)) {\r\n                            options = $this.find(&#39;option&#39;).filter(&#39;:selected&#39;);\r\n                            if ($this.prop(&#39;multiple&#39;)) {\r\n                                value = options.map(function () {\r\n                                    return this.value || this.innerHTML;\r\n                                }).get();\r\n                            } else {\r\n                                value = options.val();\r\n                            }\r\n                        } else {\r\n                            value = $this.val();\r\n                        }\r\n\r\n                        return {\r\n                            &#39;name&#39;:this.name || null,\r\n                            &#39;value&#39;:value\r\n                        };\r\n                    }).get();\r\n\r\n        if (formValues) {\r\n            var\r\n                i,\r\n                value,\r\n                name,\r\n                $matches,\r\n                len,\r\n                offset,\r\n                j,\r\n                fields;\r\n\r\n            for (i = 0; i &lt; formValues.length; i++) {\r\n                name = formValues[i].name;\r\n                value = formValues[i].value;\r\n\r\n                if (!opt[&#39;all&#39;]) {\r\n                    if (value === null) {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    if (value === null) {\r\n                        value = &#39;&#39;;\r\n                    }\r\n                }\r\n\r\n                if (value === &#39;&#39; &amp;&amp; !opt[&#39;empty&#39;]) {\r\n                    continue;\r\n                }\r\n\r\n                if (!name) {\r\n                    continue;\r\n                }\r\n\r\n                $matches = name.split(/\\[/);\r\n\r\n                len = $matches.length;\r\n\r\n                for (j = 1; j &lt; len; j++) {\r\n                    $matches[j] = $matches[j].replace(/\\]/g, &#39;&#39;);\r\n                }\r\n\r\n                fields = [];\r\n\r\n                for (j = 0; j &lt; len; j++) {\r\n                    if ($matches[j] || j &lt; len - 1) {\r\n                        fields.push($matches[j].replace(&quot;&#39;&quot;, &#39;&#39;));\r\n                    }\r\n                }\r\n\r\n                if ($matches[len - 1] === &#39;&#39;) {\r\n                    offset = assign_object(result, fields, [], true, false, false);\r\n\r\n                    if (value.constructor === Array) {\r\n                        offset[0][offset[1]].concat(value);\r\n                    } else {\r\n                        offset[0][offset[1]].push(value);\r\n                    }\r\n                } else {\r\n                    assign_object(result, fields, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\nIt&#39;s part of my library *phery*, but it can be ported to your own project. It creates arrays where there should be arrays, it gets the correct selected options from the select, normalize checkbox options, etc. If you want to convert it to JSON (a real JSON string), just do `JSON.stringify($(&#39;form&#39;).serializeForm());`\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1355078871,
          "answer_id": 13790540,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1355078871,
          "body_markdown": "This solution is better. Some of the more popular options on here don&#39;t correct handle checkboxes when the checkbox is not checked.\r\n\r\n           getData: function(element){\r\n          //@todo may need additional logic for radio buttons\r\n          var select = $(element).find(&#39;select&#39;);\r\n          var input = $(element).find(&#39;input&#39;);\r\n          var inputs = $.merge(select,input);\r\n          var data = {};\r\n          //console.log(input,&#39;input&#39;);\r\n          $.each(inputs,function(){\r\n            if($(this).attr(&#39;type&#39;) != undefined){\r\n              switch($(this).attr(&#39;type&#39;)){\r\n                case &#39;checkbox&#39;:\r\n                  data[$(this).attr(&#39;name&#39;)] = ( ($(this).attr(&#39;checked&#39;) == &#39;checked&#39;) ? $(this).val():0 );\r\n                  break;\r\n                default:\r\n                  data[$(this).attr(&#39;name&#39;)] = $(this).val();\r\n                  break;\r\n              }\r\n            }\r\n            else{\r\n              data[$(this).attr(&#39;name&#39;)] = $(this).val();\r\n            }\r\n          })\r\n          return data;\r\n       }"
        },
        {
          "tags": [],
          "down_vote_count": 9,
          "creation_date": 1356350800,
          "answer_id": 14021186,
          "path": "stack.bower.answer",
          "score": -8,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1430033546,
          "last_edit_date": 1430033546,
          "body_markdown": "Use this:\r\n\r\n    var sf = $(&#39;#mainForm&#39;).serialize(); // URL encoded string\r\n    sf = sf.replace(/&quot;/g, &#39;\\&quot;&#39;);         // Be sure all &quot;s are escaped\r\n    sf = &#39;{&quot;&#39; + sf.replace(/&amp;/g, &#39;&quot;,&quot;&#39;); // Start &quot;object&quot;, replace tupel delimiter &amp;\r\n    sf = sf.replace(/=/g, &#39;&quot;:&quot;&#39;) + &#39;&quot;}&#39;; // Replace equal sign, add closing &quot;object&quot;\r\n\r\n    // Test the &quot;object&quot;\r\n    var formdata = eval(&quot;(&quot; + sf + &quot;)&quot;); \r\n    console.log(formdata);\r\n\r\nIt works like a charm, even on very complex forms.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1365281000,
          "answer_id": 15855819,
          "path": "stack.bower.answer",
          "score": 7,
          "up_vote_count": 7,
          "is_accepted": false,
          "last_activity_date": 1430033600,
          "last_edit_date": 1430033600,
          "body_markdown": "Simplicity is best here. I&#39;ve used a simple string replace with a regular expression, and they worked like a charm thus far. I am not a regular expression expert, but I bet you can even populate very complex objects.\r\n\r\n    var values = $(this).serialize(),\r\n    attributes = {};\r\n\t\t\t\r\n    values.replace(/([^&amp;]+)=([^&amp;]*)/g, function (match, name, value) {\r\n        attributes[name] = value;\r\n    });\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1374487141,
          "answer_id": 17784656,
          "path": "stack.bower.answer",
          "score": 240,
          "up_vote_count": 243,
          "is_accepted": false,
          "last_activity_date": 1374487141,
          "body_markdown": "What&#39;s wrong with: \r\n\r\n    var data = {};\r\n    $(&quot;.form-selector&quot;).serializeArray().map(function(x){data[x.name] = x.value;}); "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1378492681,
          "answer_id": 18664424,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1378492681,
          "body_markdown": "For a quick, modern solution, use the [JSONify](https://github.com/kushalpandya/JSONify) jQuery plugin. The example below is taken verbatim from the GitHub README. All credit to Kushal Pandya, author of the plugin.\r\n\r\nGiven:\r\n\r\n    &lt;form id=&quot;myform&quot;&gt;\r\n        &lt;label&gt;Name:&lt;/label&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;\r\n        &lt;label&gt;Email&lt;/label&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;email&quot;/&gt;\r\n        &lt;label&gt;Password&lt;/label&gt;\r\n        &lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;\r\n    &lt;/form&gt;\r\n\r\nRunning:\r\n\r\n    $(&#39;#myform&#39;).jsonify();\r\n\r\nProduces:\r\n\r\n    {&quot;name&quot;:&quot;Joe User&quot;,&quot;email&quot;:&quot;joe@example.com&quot;,&quot;password&quot;:&quot;mypass&quot;}\r\n\r\nIf you want to do a jQuery POST with this JSON object:\r\n\r\n    $(&#39;#mybutton&#39;).click(function() {\r\n        $.post(&#39;/api/user&#39;, JSON.stringify($(&#39;#myform&#39;).jsonify()));\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1380808551,
          "answer_id": 19161145,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1430033708,
          "last_edit_date": 1430033708,
          "body_markdown": "I coded a form to a multidimensional JavaScript object myself to use it in production. The result is https://github.com/serbanghita/formToObject.js.\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1381046018,
          "answer_id": 19206646,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1430033877,
          "last_edit_date": 1430033877,
          "body_markdown": "I wrote a jQuery module, [jsForm][1], that can do this bidirectional even for quite complicated forms (allows collections and other more complex structures as well).\r\n\r\nIt uses the name of the fields (plus a few special classes for collections) and matches a JSON object. It allows automatic replication of DOM-elements for collections and data handling:\r\n\r\n    &lt;html&gt;\r\n        &lt;head&gt;\r\n            &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n            &lt;script src=&quot;https://raw.github.com/corinis/jsForm/master/src/jquery.jsForm.js&quot;&gt;&lt;/script&gt;\r\n            &lt;script&gt;\r\n            $(function(){\r\n                // Some JSON data\r\n                var jsonData = {\r\n                    name: &quot;TestName&quot;,   // Standard inputs\r\n                    description: &quot;long Description\\nMultiline&quot;, // Textarea\r\n                    links: [{href:&#39;http://stackoverflow.com&#39;,description:&#39;StackOverflow&#39;}, {href:&#39;http://www.github.com&#39;, description:&#39;GitHub&#39;}],   // Lists\r\n                    active: true,   // Checkbox\r\n                    state: &quot;VISIBLE&quot;    // Selects (enums)\r\n                };\r\n\r\n                // Initialize the form, prefix is optional and defaults to data\r\n                $(&quot;#details&quot;).jsForm({\r\n                    data:jsonData\r\n                });\r\n\r\n                $(&quot;#show&quot;).click(function() {\r\n                    // Show the JSON data\r\n                    alert(JSON.stringify($(&quot;#details&quot;).jsForm(&quot;get&quot;), null, &quot; &quot;));\r\n                });\r\n            });\r\n            &lt;/script&gt;\r\n        &lt;/head&gt;\r\n        &lt;body&gt;\r\n            &lt;h1&gt;Simpel Form Test&lt;/h1&gt;\r\n            &lt;div id=&quot;details&quot;&gt;\r\n                Name: &lt;input name=&quot;data.name&quot;/&gt;&lt;br/&gt;\r\n                &lt;input type=&quot;checkbox&quot; name=&quot;data.active&quot;/&gt; active&lt;br/&gt;\r\n                &lt;textarea name=&quot;data.description&quot;&gt;&lt;/textarea&gt;&lt;br/&gt;\r\n                &lt;select name=&quot;data.state&quot;&gt;\r\n                    &lt;option value=&quot;VISIBLE&quot;&gt;visible&lt;/option&gt;\r\n                    &lt;option value=&quot;IMPORTANT&quot;&gt;important&lt;/option&gt;\r\n                    &lt;option value=&quot;HIDDEN&quot;&gt;hidden&lt;/option&gt;\r\n                &lt;/select&gt;\r\n                &lt;fieldset&gt;\r\n                    &lt;legend&gt;Links&lt;/legend&gt;\r\n                    &lt;ul class=&quot;collection&quot; data-field=&quot;data.links&quot;&gt;\r\n                        &lt;li&gt;&lt;span class=&quot;field&quot;&gt;links.description&lt;/span&gt; Link: &lt;input name=&quot;links.href&quot;/&gt; &lt;button class=&quot;delete&quot;&gt;x&lt;/button&gt;&lt;/li&gt;\r\n                    &lt;/ul&gt;\r\n                &lt;/fieldset&gt;\r\n                &lt;button class=&quot;add&quot; data-field=&quot;data.links&quot;&gt;add a link&lt;/button&gt;&lt;br/&gt;\r\n                Additional field: &lt;input name=&quot;data.addedField&quot;/&gt;\r\n            &lt;/div&gt;\r\n            &lt;button id=&quot;show&quot;&gt;Show Object&lt;/button&gt;\r\n        &lt;/body&gt;\r\n    &lt;/html&gt;\r\n\r\n  [1]: https://github.com/corinis/jsForm\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1381072611,
          "answer_id": 19210359,
          "path": "stack.bower.answer",
          "score": 13,
          "up_vote_count": 13,
          "is_accepted": false,
          "last_activity_date": 1430033897,
          "last_edit_date": 1430033897,
          "body_markdown": "Use:\r\n\r\n    function form_to_json (selector) {\r\n      var ary = $(selector).serializeArray();\r\n      var obj = {};\r\n      for (var a = 0; a &lt; ary.length; a++) obj[ary[a].name] = ary[a].value;\r\n      return obj;\r\n    }\r\n\r\nOutput:\r\n\r\n    {&quot;myfield&quot;: &quot;myfield value&quot;, &quot;passwordfield&quot;: &quot;mypasswordvalue&quot;}\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1381500298,
          "answer_id": 19320174,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1430033984,
          "last_edit_date": 1495535499,
          "body_markdown": "Using [maček&#39;s solution][1], I modified it to work with the way ASP.NET MVC handles their nested/complex objects on the same form. All you have to do is modify the validate piece to this:\r\n\r\n    &quot;validate&quot;: /^[a-zA-Z][a-zA-Z0-9_]*((?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*(?:\\.)[a-zA-Z][a-zA-Z0-9_]*)*$/,\r\n\r\nThis will match and then correctly map elements with names like:\r\n\r\n    &lt;input type=&quot;text&quot; name=&quot;zooName&quot; /&gt;\r\n\r\nAnd\r\n\r\n    &lt;input type=&quot;text&quot; name=&quot;zooAnimals[0].name&quot; /&gt;\r\n\r\n  [1]: https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery/8407771#8407771\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 2,
          "creation_date": 1384286885,
          "answer_id": 19938888,
          "path": "stack.bower.answer",
          "score": 24,
          "up_vote_count": 26,
          "is_accepted": false,
          "last_activity_date": 1430034119,
          "last_edit_date": 1430034119,
          "body_markdown": "If you are using [Underscore.js][1] you can use the relatively concise:\r\n\r\n    _.object(_.map($(&#39;#myform&#39;).serializeArray(), _.values))\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Underscore.js\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1388708650,
          "answer_id": 20894424,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1430034189,
          "last_edit_date": 1430034189,
          "body_markdown": "There is a plugin to do just that for jQuery, *[jquery.serializeJSON][1]*. I have used it successfully on a few projects now. It works like a charm. \r\n\r\n  [1]: https://github.com/marioizquierdo/jquery.serializeJSON\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1395259000,
          "answer_id": 22516772,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1395259000,
          "body_markdown": "Use $(&#39;#formName&#39;).serializeObject()"
        },
        {
          "tags": [],
          "down_vote_count": 3,
          "creation_date": 1396867206,
          "answer_id": 22910035,
          "path": "stack.bower.answer",
          "score": 14,
          "up_vote_count": 17,
          "is_accepted": false,
          "last_activity_date": 1487261957,
          "last_edit_date": 1487261957,
          "body_markdown": "You can do this:\r\n \r\n    var frm = $(document.myform);\r\n    var data = JSON.stringify(frm.serializeArray());\r\n\r\nSee *[JSON][1]*.\r\n\r\n  [1]: http://www.json.org/\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1396867488,
          "answer_id": 22910149,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1430034497,
          "last_edit_date": 1430034497,
          "body_markdown": "If you are sending a form with JSON you must remove [] in sending the string. You can do that with the jQuery function serializeObject():\r\n\r\n    var frm = $(document.myform);\r\n    var data = JSON.stringify(frm.serializeObject());\r\n\r\n    $.fn.serializeObject = function() {\r\n        var o = {};\r\n        //var a = this.serializeArray();\r\n        $(this).find(&#39;input[type=&quot;hidden&quot;], input[type=&quot;text&quot;], input[type=&quot;password&quot;], input[type=&quot;checkbox&quot;]:checked, input[type=&quot;radio&quot;]:checked, select&#39;).each(function() {\r\n            if ($(this).attr(&#39;type&#39;) == &#39;hidden&#39;) { //If checkbox is checked do not take the hidden field\r\n                var $parent = $(this).parent();\r\n                var $chb = $parent.find(&#39;input[type=&quot;checkbox&quot;][name=&quot;&#39; + this.name.replace(/\\[/g, &#39;\\[&#39;).replace(/\\]/g, &#39;\\]&#39;) + &#39;&quot;]&#39;);\r\n                if ($chb != null) {\r\n                    if ($chb.prop(&#39;checked&#39;)) return;\r\n                }\r\n            }\r\n            if (this.name === null || this.name === undefined || this.name === &#39;&#39;)\r\n                return;\r\n            var elemValue = null;\r\n            if ($(this).is(&#39;select&#39;))\r\n                elemValue = $(this).find(&#39;option:selected&#39;).val();\r\n            else\r\n                elemValue = this.value;\r\n            if (o[this.name] !== undefined) {\r\n                if (!o[this.name].push) {\r\n                    o[this.name] = [o[this.name]];\r\n                }\r\n                o[this.name].push(elemValue || &#39;&#39;);\r\n            }\r\n            else {\r\n                o[this.name] = elemValue || &#39;&#39;;\r\n            }\r\n        });\r\n        return o;\r\n    }\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1414146073,
          "answer_id": 26546069,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1430131364,
          "last_edit_date": 1430131364,
          "body_markdown": "I recently had the same problem so I developed a function that allows parsing a form&#39;s controls to obtain control id/value and convert that to JSON.\r\n\r\nIt is flexible enough to allow adding more controls. You just need to specify the control type and the attribute that you want to interpreted as value.\r\n\r\nYou can find [the full script here][1].\r\n\r\nThe advantage is that it only takes the data you actually need, without dragging the whole object.\r\n\r\nThe dissadvantage is that if you have nested options, you need to prefix the IDs accordingly so you can use a duplicate option to its specific group.\r\n\r\nI hope this helps!\r\n\r\n  [1]: http://pasteit.catevaclickuri.ro/read/b3wKjobjA.html\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1426123382,
          "answer_id": 29000408,
          "path": "stack.bower.answer",
          "score": 44,
          "up_vote_count": 44,
          "is_accepted": false,
          "last_activity_date": 1430037277,
          "last_edit_date": 1430037277,
          "body_markdown": "I like using `Array.prototype.reduce` because it&#39;s a one-liner, and it doesn&#39;t rely on [Underscore.js][1] or the like:\r\n\r\n    $(&#39;#formid&#39;).serializeArray()\r\n        .reduce(function(a, x) { a[x.name] = x.value; return a; }, {});\r\n\r\nThis is similar to the answer using `Array.prototype.map`, but you don&#39;t need to clutter up your scope with an additional object variable. One-stop shopping.\r\n\r\n**IMPORTANT NOTE**: Forms with inputs that have duplicate `name` attributes are valid HTML, and is actually a common approach. Using any of the answers in this thread will be inappropriate in that case (since object keys must be unique).\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Underscore.js\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1429282422,
          "answer_id": 29702632,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1429282422,
          "body_markdown": "I had to shameless self-promote my form library.\r\n\r\n[transForm.js](https://github.com/A1rPun/transForm.js)\r\n--\r\nIt does things like: serialize, deserialize, clear &amp; submit forms.\r\n\r\nThe reason why I made this is form2js/js2form is not maintained and is not as flexible &amp; fast as I would like. We use it in production because this is form2js/js2form compatible."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1433056433,
          "answer_id": 30554832,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1433058169,
          "last_edit_date": 1433058169,
          "body_markdown": "If you want to convert a form to a javascript object, then the easiest solution (at this time) is to use jQuery&#39;s `each` and `serializeArray` function-methods.\r\n\r\n    $.fn.serializeObject = function() {\r\n\r\n      var form = {};\r\n      $.each($(this).serializeArray(), function (i, field) {\r\n        form[field.name] = field.value || &quot;&quot;;\r\n      });\r\n\r\n      return form;\r\n    };\r\n\r\n**Plugin hosted on GitHub:**  \r\nhttps://github.com/tfmontague/form-object/blob/master/README.md\r\n\r\n**Can be installed with Bower:**  \r\n`bower install git://github.com/tfmontague/form-object.git`"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1434231083,
          "answer_id": 30823733,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1434231083,
          "last_edit_date": 1495542389,
          "body_markdown": "From some [older][1] answer:\r\n\r\n    $(&#39;form input,select&#39;).toArray().reduce(function(m,e){m[e.name] = $(e).val(); return m;},{})\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/17784656/1197775"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1438049914,
          "answer_id": 31666355,
          "path": "stack.bower.answer",
          "score": 0,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1438049914,
          "body_markdown": "Here&#39;s a non-jQuery way:\r\n\r\n        var getFormData = function(form) {\r\n            //Ignore the submit button\r\n            var elements = Array.prototype.filter.call(form.elements, function(element) {\r\n                var type = element.getAttribute(&#39;type&#39;);\r\n                return !type || type.toLowerCase() !== &#39;submit&#39;;\r\n            });\r\n\r\nYou can use it like this:\r\n\r\n\r\n    function() {\r\n    \r\n        var getFormData = function(form) {\r\n            //Ignore the submit button\r\n            var elements = Array.prototype.filter.call(form.elements, function(element) {\r\n                var type = element.getAttribute(&#39;type&#39;);\r\n                return !type || type.toLowerCase() !== &#39;submit&#39;;\r\n            });\r\n    \r\n            //Make an object out of the form data: {name: value}\r\n            var data = elements.reduce(function(data, element) {\r\n                data[element.name] = element.value;\r\n                return data;\r\n            }, {});\r\n    \r\n            return data;\r\n        };\r\n    \r\n        var post = function(action, data, callback) {\r\n            var request = new XMLHttpRequest();\r\n            request.onload = callback;\r\n            request.open(&#39;post&#39;, action);\r\n            request.setRequestHeader(&quot;Content-Type&quot;, &quot;application/json;charset=UTF-8&quot;);\r\n            request.send(JSON.stringify(data), true);\r\n            request.send();\r\n        };\r\n    \r\n        var submit = function(e) {\r\n            e.preventDefault();\r\n            var form = e.target;\r\n            var action = form.action;\r\n            var data = getFormData(form);\r\n            //change the third argument in order to do something\r\n            //more intersting with the response than just print it\r\n            post(action, data, console.log.bind(console));\r\n        }\r\n    \r\n        //change formName below\r\n        document.formName.onsubmit = submit;\r\n    \r\n    })();"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1449568225,
          "answer_id": 34152725,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1449568225,
          "body_markdown": "the simplest and most accurate way i found for this problem was to use [bbq plugin][1] or this [one][2] (which is about 0.5K bytes size).\r\n\r\n**it also works with multi dimensional arrays.**\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $.fn.serializeObject = function()\r\n    {\r\n    \treturn $.deparam(this.serialize());\r\n    };\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n\r\n  [1]: http://benalman.com/projects/jquery-bbq-plugin/\r\n  [2]: https://github.com/chrissrogers/jquery-deparam"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1451673788,
          "answer_id": 34558944,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1451673788,
          "body_markdown": "This function returns all values converted to the right type;\r\n\r\nbool/string/(integer/floats) possible\r\n\r\n\r\nTho you kinda need jQuery for this, but since serializeArray is jQuery too, so no big deal imho.\r\n\r\n\r\n    /**\r\n     * serialized a form to a json object\r\n     *\r\n     * @usage: $(&quot;#myform&quot;).jsonSerialize();\r\n     *\r\n     */\r\n    \r\n    (function($) {\r\n        &quot;use strict&quot;;\r\n        $.fn.jsonSerialize = function() {\r\n            var json = {};\r\n            var array = $(this).serializeArray();\r\n            $.each(array, function(key, obj) {\r\n                var value = (obj.value == &quot;&quot;) ? false : obj.value;\r\n                if(value) {\r\n                    // check if we have a number\r\n                    var isNum = /^\\d+$/.test(value);\r\n                    if(isNum) value = parseFloat(value);\r\n                    // check if we have a boolean\r\n                    var isBool = /^(false|true)+$/.test(value);\r\n                    if(isBool) value = (value!==&quot;false&quot;);\r\n                }\r\n                json[obj.name] = value;\r\n            });\r\n            return json;\r\n        }\r\n    })(jQuery);"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1464345062,
          "answer_id": 37481147,
          "path": "stack.bower.answer",
          "score": -1,
          "up_vote_count": 0,
          "is_accepted": false,
          "last_activity_date": 1464383200,
          "last_edit_date": 1464383200,
          "body_markdown": "Create a map and cycle all fields, saving their values.\r\n\r\n    var params = {};\r\n    $(&quot;#form&quot;).find(&quot;*[name]&quot;).each(function(){\r\n    \tparams[this.getAttribute(&quot;name&quot;)] = this.value;\r\n    });"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1465549409,
          "answer_id": 37744161,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1465549409,
          "body_markdown": "using [lodash#set][1]\r\n\r\n\r\n  [1]: https://lodash.com/docs#set\r\n\r\n    let serialized = [\r\n      { key: &#39;data[model][id]&#39;, value: 1 },\r\n      { key: &#39;data[model][name]&#39;, value: &#39;product&#39; },\r\n      { key: &#39;sid&#39;, value: &#39;dh0un1hr4d&#39; }\r\n    ];\r\n    \r\n    serialized.reduce(function(res, item) {\r\n      _.set(res, item.key, item.value);\r\n      return res;\r\n    }, {});\r\n\r\n    // returns\r\n    {\r\n      &quot;data&quot;: {\r\n        &quot;model&quot;: {\r\n          &quot;id&quot;: 1,\r\n          &quot;name&quot;: &quot;product&quot;\r\n        }\r\n      },\r\n      &quot;sid&quot;: &quot;dh0un1hr4d&quot;\r\n    }"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1472643336,
          "answer_id": 39248551,
          "path": "stack.bower.answer",
          "score": 10,
          "up_vote_count": 10,
          "is_accepted": false,
          "last_activity_date": 1519759785,
          "last_edit_date": 1519759785,
          "body_markdown": "&gt; Width all Given Answer there some problem which is...\r\n\r\nIf input name as array like `name[key]`, but it will generate like this \r\n&lt;!-- language: lang-js --&gt;\r\n\r\n     name:{\r\n       key : value\r\n     }\r\n\r\n----\r\n&lt;b&gt;For Example : &lt;/b&gt;\r\nIf i have form like this.\r\n\r\n    \t&lt;form&gt;\r\n\t\t    &lt;input name=&quot;name&quot; value=&quot;value&quot; &gt;\r\n\t\t    &lt;input name=&quot;name1[key1]&quot; value=&quot;value1&quot; &gt;\r\n\t\t    &lt;input name=&quot;name2[key2]&quot; value=&quot;value2&quot; &gt;\r\n\t\t    &lt;input name=&quot;name3[key3]&quot; value=&quot;value3&quot; &gt;\r\n\t    &lt;/form&gt;\r\nThen It will Generate Object like this with all given Answer.\r\n\r\n    Object {\r\n\t\tname : &#39;value&#39;,\r\n\t\tname1[key1] : &#39;value1&#39;,\r\n\t\tname2[key2] : &#39;value2&#39;,\r\n\t\tname3[key3] : &#39;value3&#39;,\t\r\n\t}\r\n\r\n But it have to Generate like below,anyone want to get like this as below. \r\n\r\n    Object {\r\n\t\tname : &#39;value&#39;,\r\n\t\tname1 : {\r\n\t\t\tkey1 : &#39;value1&#39;\r\n\t\t},\r\n\t\tname2 : {\r\n\t\t\tkey2 : &#39;value2&#39;\r\n\t\t},\r\n\t\tname3 : {\r\n\t\t\tkey2 : &#39;value2&#39;\r\n\t\t}\r\n\t}\r\n\r\n&gt; Then Try this below js code.\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function getFormData2Object(d){\r\n            var e=d.serializeArray(),f={};\r\n            $.map(e,function(n){\r\n                if(n.name.indexOf(&#39;[&#39;)&gt;-1){\r\n                    $key=n.name.split(&#39;[&#39;)[0];\r\n                    if(typeof f[$key]==&#39;undefined&#39;)f[$key]={};\r\n                    var b=n.name.match(/\\[(.*?)\\]/g),c=&quot;[&#39;&quot;+$key+&quot;&#39;]&quot;,le=Object.keys(b).length;\r\n                    $.map(b,function(k,i){\r\n                        var a=k.replace(&#39;[&#39;,&quot;&quot;).replace(&#39;]&#39;,&quot;&quot;).trim();\r\n                        if(a==&#39;&#39;){\r\n                            tmptmp=&quot;f&quot;+c;\r\n                            eval(&quot;check = typeof &quot;+tmptmp+&quot;;&quot;);\r\n                            if(check==&#39;undefined&#39;)eval(tmptmp+&quot; = []; &quot;);\r\n                            else{\r\n                                eval(&quot;ale = Object.keys(&quot;+tmptmp+&quot;).length;&quot;);\r\n                                if(!ale)eval(tmptmp+&quot; = []; &quot;)\r\n                            }\r\n                            eval(tmptmp+&quot;.push(&#39;&quot;+n[&#39;value&#39;]+&quot;&#39;); &quot;)\r\n                        }else{\r\n                            c+=&quot;[&#39;&quot;+a+&quot;&#39;]&quot;;\r\n                            tmptmp=&quot;f&quot;+c;\r\n                            eval(&quot;check = typeof &quot;+tmptmp+&quot;;&quot;);\r\n                            if(check==&#39;undefined&#39;)eval(tmptmp+&quot; = {}; &quot;);\r\n                            if(le==(i+1))eval(tmptmp+&quot; = &#39;&quot;+n[&#39;value&#39;]+&quot;&#39;; &quot;)\r\n                        }\r\n                    })\r\n                }else f[n[&#39;name&#39;]]=n[&#39;value&#39;]\r\n            });\r\n            return f\r\n        }\r\n        console.log(getFormData2Object($(&#39;form&#39;)));\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1507471187,
          "answer_id": 46631905,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1507471187,
          "body_markdown": "So I used the accepted answer and found a major flaw.  \r\nIt doesn&#39;t support input arrays like:  \r\n\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;array[]&quot; value=&quot;1&quot;/&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;array[]&quot; value=&quot;2&quot;/&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;array[]&quot; value=&quot;3&quot;/&gt;\r\n\r\n\r\nThis minor change should fix that:  \r\n\r\n    function objectifyForm(inp){\r\n    \tvar rObject = {};\r\n    \tfor (var i = 0; i &lt; inp.length; i++){\r\n    \t\tif(inp[i][&#39;name&#39;].substr(inp[i][&#39;name&#39;].length - 2) == &quot;[]&quot;){\r\n    \t\t\tvar tmp = inp[i][&#39;name&#39;].substr(0, inp[i][&#39;name&#39;].length-2);\r\n    \t\t\tif(Array.isArray(rObject[tmp])){\r\n    \t\t\t\trObject[tmp].push(inp[i][&#39;value&#39;]);\r\n    \t\t\t} else{\r\n    \t\t\t\trObject[tmp] = [];\r\n    \t\t\t\trObject[tmp].push(inp[i][&#39;value&#39;]);\r\n    \t\t\t}\r\n    \t\t} else{\r\n    \t\t\trObject[inp[i][&#39;name&#39;]] = inp[i][&#39;value&#39;];\r\n    \t\t}\r\n    \t}\r\n    \treturn rObject;\r\n    }\r\n\r\nRemember to pass it the output from `$(this).serializeArray();` otherwise it wont work."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1508153757,
          "answer_id": 46769395,
          "path": "stack.bower.answer",
          "score": 6,
          "up_vote_count": 6,
          "is_accepted": false,
          "last_activity_date": 1508153757,
          "body_markdown": "One-liner (no dependencies other than jQuery), uses fixed object binding for function passsed to `map` method. \r\n\r\n    $(&#39;form&#39;).serializeArray().map(function(x){this[x.name] = x.value; return this;}.bind({}))[0]\r\n\r\nWhat it does?\r\n\r\n    &quot;id=2&amp;value=1&amp;comment=ok&quot; =&gt; Object { id: &quot;2&quot;, value: &quot;1&quot;, comment: &quot;ok&quot; }\r\n\r\nsuitable for progressive web apps (one can easily support both regular form submit action as well as ajax requests)"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1508515728,
          "answer_id": 46853102,
          "path": "stack.bower.answer",
          "score": 2,
          "up_vote_count": 2,
          "is_accepted": false,
          "last_activity_date": 1508515728,
          "body_markdown": "Another answer\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    document.addEventListener(&quot;DOMContentLoaded&quot;, function() {\r\n      setInterval(function() {\r\n        var form = document.getElementById(&#39;form&#39;) || document.querySelector(&#39;form[name=&quot;userprofile&quot;]&#39;);\r\n        var json = Array.from(new FormData(form)).map(function(e,i) {this[e[0]]=e[1]; return this;}.bind({}))[0];\r\n        \r\n        console.log(json)\r\n        document.querySelector(&#39;#asJSON&#39;).value = JSON.stringify(json);\r\n      }, 1000);\r\n    })\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;form name=&quot;userprofile&quot; id=&quot;form&quot;&gt;\r\n      &lt;p&gt;Name &lt;input type=&quot;text&quot; name=&quot;firstname&quot; value=&quot;John&quot;/&gt;&lt;/p&gt;\r\n      &lt;p&gt;Family name &lt;input name=&quot;lastname&quot; value=&quot;Smith&quot;/&gt;&lt;/p&gt;\r\n      &lt;p&gt;Work &lt;input name=&quot;employment[name]&quot; value=&quot;inc, Inc.&quot;/&gt;&lt;/p&gt;\r\n      &lt;p&gt;Works since &lt;input name=&quot;employment[since]&quot; value=&quot;2017&quot; /&gt;&lt;/p&gt;\r\n      &lt;p&gt;Photo &lt;input type=&quot;file&quot; /&gt;&lt;/p&gt;\r\n      &lt;p&gt;Send &lt;input type=&quot;submit&quot; /&gt;&lt;/p&gt;\r\n    &lt;/form&gt;\r\n\r\n    JSON: &lt;textarea id=&quot;asJSON&quot;&gt;&lt;/textarea&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n    more: https://developer.mozilla.org/en-US/docs/Web/API/FormData \r\n"
        }
      ],
      "title": "Convert form data to JavaScript object with jQuery",
      "view_count": 840378,
      "answer_count": 49,
      "code_snippet": [
        "<code>$('#formid').serialize();</code>",
        "<code>$('#formid').serializeArray();</code>",
        "<code>serializeArray</code>",
        "<code>function objectifyForm(formArray) {//serialize data function\n\n  var returnArray = {};\n  for (var i = 0; i &lt; formArray.length; i++){\n    returnArray[formArray[i]['name']] = formArray[i]['value'];\n  }\n  return returnArray;\n}\n</code>",
        "<code>$.map( $(\"#container :input\"), function(n, i) { /* n.name and $(n).val() */ } );</code>",
        "<code>foo[bar]</code>",
        "<code>&lt;!-- all of these will work! --&gt;\n&lt;input name=\"honey[badger]\" value=\"a\"&gt;\n&lt;input name=\"wombat[]\" value=\"b\"&gt;\n&lt;input name=\"hello[panda][]\" value=\"c\"&gt;\n&lt;input name=\"animals[0][name]\" value=\"d\"&gt;\n&lt;input name=\"animals[0][breed]\" value=\"e\"&gt;\n&lt;input name=\"crazy[1][][wonky]\" value=\"f\"&gt;\n&lt;input name=\"dream[as][vividly][as][you][can]\" value=\"g\"&gt;\n</code>",
        "<code>// output\n{\n  \"honey\":{\n    \"badger\":\"a\"\n  },\n  \"wombat\":[\"b\"],\n  \"hello\":{\n    \"panda\":[\"c\"]\n  },\n  \"animals\":[\n    {\n      \"name\":\"d\",\n      \"breed\":\"e\"\n    }\n  ],\n  \"crazy\":[\n    null,\n    [\n      {\"wonky\":\"f\"}\n    ]\n  ],\n  \"dream\":{\n    \"as\":{\n      \"vividly\":{\n        \"as\":{\n          \"you\":{\n            \"can\":\"g\"\n          }\n        }\n      }\n    }\n  }\n}\n</code>",
        "<code>$('#my-form').serializeObject();\n</code>",
        "<code>(function($){\n    $.fn.serializeObject = function(){\n\n        var self = this,\n            json = {},\n            push_counters = {},\n            patterns = {\n                \"validate\": /^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/,\n                \"key\":      /[a-zA-Z0-9_]+|(?=\\[\\])/g,\n                \"push\":     /^$/,\n                \"fixed\":    /^\\d+$/,\n                \"named\":    /^[a-zA-Z0-9_]+$/\n            };\n\n\n        this.build = function(base, key, value){\n            base[key] = value;\n            return base;\n        };\n\n        this.push_counter = function(key){\n            if(push_counters[key] === undefined){\n                push_counters[key] = 0;\n            }\n            return push_counters[key]++;\n        };\n\n        $.each($(this).serializeArray(), function(){\n\n            // skip invalid keys\n            if(!patterns.validate.test(this.name)){\n                return;\n            }\n\n            var k,\n                keys = this.name.match(patterns.key),\n                merge = this.value,\n                reverse_key = this.name;\n\n            while((k = keys.pop()) !== undefined){\n\n                // adjust reverse_key\n                reverse_key = reverse_key.replace(new RegExp(\"\\\\[\" + k + \"\\\\]$\"), '');\n\n                // push\n                if(k.match(patterns.push)){\n                    merge = self.build([], self.push_counter(reverse_key), merge);\n                }\n\n                // fixed\n                else if(k.match(patterns.fixed)){\n                    merge = self.build([], k, merge);\n                }\n\n                // named\n                else if(k.match(patterns.named)){\n                    merge = self.build({}, k, merge);\n                }\n            }\n\n            json = $.extend(true, json, merge);\n        });\n\n        return json;\n    };\n})(jQuery);\n</code>",
        "<code>&lt;select name=\"foo\" multiple=\"multiple\"&gt;</code>",
        "<code>[]</code>",
        "<code>&lt;select name=\"bar[]\" multiple=\"multiple\"&gt;</code>",
        "<code>var data = {};\n$(\".form-selector\").serializeArray().map(function(x){data[x.name] = x.value;}); \n</code>",
        "<code>.each</code>",
        "<code>.map</code>",
        "<code>var form = {}; $.each($(this).serializeArray(), function (i, field) { form[field.name] = field.value || \"\"; });</code>",
        "<code>$(this).serializeArray().reduce(function(m,o){  m[o.name] = o.value; return m;}, {})</code>",
        "<code>0</code>",
        "<code>''</code>",
        "<code>jQuery.fn.serializeObject = function() {\n  var arrayData, objectData;\n  arrayData = this.serializeArray();\n  objectData = {};\n\n  $.each(arrayData, function() {\n    var value;\n\n    if (this.value != null) {\n      value = this.value;\n    } else {\n      value = '';\n    }\n\n    if (objectData[this.name] != null) {\n      if (!objectData[this.name].push) {\n        objectData[this.name] = [objectData[this.name]];\n      }\n\n      objectData[this.name].push(value);\n    } else {\n      objectData[this.name] = value;\n    }\n  });\n\n  return objectData;\n};\n</code>",
        "<code>jQuery.fn.serializeObject = -&gt;\n  arrayData = @serializeArray()\n  objectData = {}\n\n  $.each arrayData, -&gt;\n    if @value?\n      value = @value\n    else\n      value = ''\n\n    if objectData[@name]?\n      unless objectData[@name].push\n        objectData[@name] = [objectData[@name]]\n\n      objectData[@name].push value\n    else\n      objectData[@name] = value\n\n  return objectData\n</code>",
        "<code>value = @value ? ''</code>",
        "<code>keyMap</code>",
        "<code>key = if keyMap? then keyMap(@name) else @name</code>",
        "<code>(name) -&gt; name.match(/\\[([^\\]]+)]/)[1]</code>",
        "<code>@name</code>",
        "<code>key</code>",
        "<code>post</code>",
        "<code>$('form').serializeObject().post</code>",
        "<code>if (!objectData[this.name].push)</code>",
        "<code>objectData[this.name]</code>",
        "<code>Array.prototype.reduce</code>",
        "<code>$('#formid').serializeArray()\n    .reduce(function(a, x) { a[x.name] = x.value; return a; }, {});\n</code>",
        "<code>Array.prototype.map</code>",
        "<code>name</code>",
        "<code>array.prototype.reduce()</code>",
        "<code>$('form.myform').submit(function () {\n  var $this = $(this)\n    , viewArr = $this.serializeArray()\n    , view = {};\n\n  for (var i in viewArr) {\n    view[viewArr[i].name] = viewArr[i].value;\n  }\n\n  //Do stuff with view object here (e.g. JSON.stringify?)\n});\n</code>",
        "<code>_.object(_.map($('#myform').serializeArray(), _.values))\n</code>",
        "<code>function formToJSON( selector )\n{\n     var form = {};\n     $(selector).find(':input[name]:enabled').each( function() {\n         var self = $(this);\n         var name = self.attr('name');\n         if (form[name]) {\n            form[name] = form[name] + ',' + self.val();\n         }\n         else {\n            form[name] = self.val();\n         }\n     });\n\n     return form;\n}\n</code>",
        "<code>serializeArray()</code>",
        "<code>serializeArray()</code>",
        "<code>:input</code>",
        "<code>$.map()</code>",
        "<code>var inputs = $(\"#container :input\");\nvar obj = $.map(inputs, function(n, i)\n{\n    var o = {};\n    o[n.name] = $(n).val();\n    return o;\n});\nconsole.log(obj);\n</code>",
        "<code>name</code>",
        "<code>var obj = $.map(inputs, function(n, i)\n{\n    return { Key: n.name, Value: $(n).val() };\n});\nconsole.log(obj);\n</code>",
        "<code>$.map()</code>",
        "<code>map</code>",
        "<code>jQuery.fn.serializeJSON=function() {\n  var json = {};\n  jQuery.map(jQuery(this).serializeArray(), function(n, i) {\n    var _ = n.name.indexOf('[');\n    if (_ &gt; -1) {\n      var o = json;\n      _name = n.name.replace(/\\]/gi, '').split('[');\n      for (var i=0, len=_name.length; i&lt;len; i++) {\n        if (i == len-1) {\n          if (o[_name[i]]) {\n            if (typeof o[_name[i]] == 'string') {\n              o[_name[i]] = [o[_name[i]]];\n            }\n            o[_name[i]].push(n.value);\n          }\n          else o[_name[i]] = n.value || '';\n        }\n        else o = o[_name[i]] = o[_name[i]] || {};\n      }\n    }\n    else {\n      if (json[n.name] !== undefined) {\n        if (!json[n.name].push) {\n          json[n.name] = [json[n.name]];\n        }\n        json[n.name].push(n.value || '');\n      }\n      else json[n.name] = n.value || '';      \n    }\n  });\n  return json;\n};\n</code>",
        "<code>var frm = $(document.myform);\nvar data = JSON.stringify(frm.serializeArray());\n</code>",
        "<code>function form_to_json (selector) {\n  var ary = $(selector).serializeArray();\n  var obj = {};\n  for (var a = 0; a &lt; ary.length; a++) obj[ary[a].name] = ary[a].value;\n  return obj;\n}\n</code>",
        "<code>{\"myfield\": \"myfield value\", \"passwordfield\": \"mypasswordvalue\"}\n</code>",
        "<code>name[key]</code>",
        "<code> name:{\n   key : value\n }\n</code>",
        "<code>    &lt;form&gt;\n        &lt;input name=\"name\" value=\"value\" &gt;\n        &lt;input name=\"name1[key1]\" value=\"value1\" &gt;\n        &lt;input name=\"name2[key2]\" value=\"value2\" &gt;\n        &lt;input name=\"name3[key3]\" value=\"value3\" &gt;\n    &lt;/form&gt;\n</code>",
        "<code>Object {\n    name : 'value',\n    name1[key1] : 'value1',\n    name2[key2] : 'value2',\n    name3[key3] : 'value3', \n}\n</code>",
        "<code>Object {\n    name : 'value',\n    name1 : {\n        key1 : 'value1'\n    },\n    name2 : {\n        key2 : 'value2'\n    },\n    name3 : {\n        key2 : 'value2'\n    }\n}\n</code>",
        "<code>function getFormData2Object(d){\n        var e=d.serializeArray(),f={};\n        $.map(e,function(n){\n            if(n.name.indexOf('[')&gt;-1){\n                $key=n.name.split('[')[0];\n                if(typeof f[$key]=='undefined')f[$key]={};\n                var b=n.name.match(/\\[(.*?)\\]/g),c=\"['\"+$key+\"']\",le=Object.keys(b).length;\n                $.map(b,function(k,i){\n                    var a=k.replace('[',\"\").replace(']',\"\").trim();\n                    if(a==''){\n                        tmptmp=\"f\"+c;\n                        eval(\"check = typeof \"+tmptmp+\";\");\n                        if(check=='undefined')eval(tmptmp+\" = []; \");\n                        else{\n                            eval(\"ale = Object.keys(\"+tmptmp+\").length;\");\n                            if(!ale)eval(tmptmp+\" = []; \")\n                        }\n                        eval(tmptmp+\".push('\"+n['value']+\"'); \")\n                    }else{\n                        c+=\"['\"+a+\"']\";\n                        tmptmp=\"f\"+c;\n                        eval(\"check = typeof \"+tmptmp+\";\");\n                        if(check=='undefined')eval(tmptmp+\" = {}; \");\n                        if(le==(i+1))eval(tmptmp+\" = '\"+n['value']+\"'; \")\n                    }\n                })\n            }else f[n['name']]=n['value']\n        });\n        return f\n    }\n    console.log(getFormData2Object($('form')));\n</code>",
        "<code>var values = $(this).serialize(),\nattributes = {};\n\nvalues.replace(/([^&amp;]+)=([^&amp;]*)/g, function (match, name, value) {\n    attributes[name] = value;\n});\n</code>",
        "<code>\"validate\": /^[a-zA-Z][a-zA-Z0-9_]*((?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*(?:\\.)[a-zA-Z][a-zA-Z0-9_]*)*$/,\n</code>",
        "<code>&lt;input type=\"text\" name=\"zooName\" /&gt;\n</code>",
        "<code>&lt;input type=\"text\" name=\"zooAnimals[0].name\" /&gt;\n</code>",
        "<code>map</code>",
        "<code>$('form').serializeArray().map(function(x){this[x.name] = x.value; return this;}.bind({}))[0]\n</code>",
        "<code>\"id=2&amp;value=1&amp;comment=ok\" =&gt; Object { id: \"2\", value: \"1\", comment: \"ok\" }\n</code>",
        "<code>$('form input,select').toArray().reduce(function(m,e){m[e.name] = $(e).val(); return m;},{})\n</code>",
        "<code>serializeArray</code>",
        "<code>reduce</code>",
        "<code>toArray</code>",
        "<code>$.fn.serializeObject = function()\r\n{\r\n\treturn $.deparam(this.serialize());\r\n};</code>",
        "<code>$.fn.serializeObject = function()\n{\n    var o = {};\n    var a = this.serializeArray();\n    $.each(a, function() {\n        if (o[this.name] || o[this.name] == '') {\n            if (!o[this.name].push) {\n                o[this.name] = [o[this.name]];\n            }\n            o[this.name].push(this.value || '');\n        } else {\n            o[this.name] = this.value || '';\n        }\n    });\n    return o;\n};\n</code>",
        "<code>&lt;script type=\"text/javascript\"&gt;\nstring = {};\n\nstring.repeat = function(string, count)\n{\n    return new Array(count+1).join(string);\n}\n\nstring.count = function(string)\n{\n    var count = 0;\n\n    for (var i=1; i&lt;arguments.length; i++)\n    {\n        var results = string.match(new RegExp(arguments[i], 'g'));\n        count += results ? results.length : 0;\n    }\n\n    return count;\n}\n\narray = {};\n\narray.merge = function(arr1, arr2)\n{\n    for (var i in arr2)\n    {\n        if (arr1[i] &amp;&amp; typeof arr1[i] == 'object' &amp;&amp; typeof arr2[i] == 'object')\n            arr1[i] = array.merge(arr1[i], arr2[i]);\n        else\n            arr1[i] = arr2[i]\n    }\n\n    return arr1;\n}\n\narray.print = function(obj)\n{\n    var arr = [];\n    $.each(obj, function(key, val) {\n        var next = key + \": \";\n        next += $.isPlainObject(val) ? array.print(val) : val;\n        arr.push( next );\n      });\n\n    return \"{ \" +  arr.join(\", \") + \" }\";\n}\n\nnode = {};\n\nnode.objectify = function(node, params)\n{\n    if (!params)\n        params = {};\n\n    if (!params.selector)\n        params.selector = \"*\";\n\n    if (!params.key)\n        params.key = \"name\";\n\n    if (!params.value)\n        params.value = \"value\";\n\n    var o = {};\n    var indexes = {};\n\n    $(node).find(params.selector+\"[\"+params.key+\"]\").each(function()\n    {\n        var name = $(this).attr(params.key),\n            value = $(this).attr(params.value);\n\n        var obj = $.parseJSON(\"{\"+name.replace(/([^\\[]*)/, function()\n        {\n            return '\"'+arguments[1]+'\"';\n        }).replace(/\\[(.*?)\\]/gi, function()\n        {\n            if (arguments[1].length == 0)\n            {\n                var index = arguments[3].substring(0, arguments[2]);\n                indexes[index] = indexes[index] !== undefined ? indexes[index]+1 : 0;\n\n                return ':{\"'+indexes[index]+'\"';\n            }\n            else\n                return ':{\"'+escape(arguments[1])+'\"';\n        })+':\"'+value.replace(/[\\\\\"]/gi, function()\n        {\n            return \"\\\\\"+arguments[0]; \n        })+'\"'+string.repeat('}', string.count(name, ']'))+\"}\");\n\n        o = array.merge(o, obj);\n    });\n\n    return o;\n}\n&lt;/script&gt;\n</code>",
        "<code>$(document).ready(function()\n{\n    console.log(array.print(node.objectify($(\"form\"), {})));\n    console.log(array.print(node.objectify($(\"form\"), {selector: \"select\"})));\n});\n</code>",
        "<code>&lt;form&gt;\n    &lt;input name='input[a]' type='text' value='text'/&gt;\n    &lt;select name='input[b]'&gt;\n        &lt;option&gt;select&lt;/option&gt;\n    &lt;/select&gt;\n\n    &lt;input name='otherinput[c][a]' value='a'/&gt;\n    &lt;input name='otherinput[c][]' value='b'/&gt;\n    &lt;input name='otherinput[d][b]' value='c'/&gt;\n    &lt;input name='otherinput[c][]' value='d'/&gt;\n\n    &lt;input type='hidden' name='anotherinput' value='hidden'/&gt;\n    &lt;input type='hidden' name='anotherinput' value='1'/&gt;\n\n    &lt;input type='submit' value='submit'/&gt;\n&lt;/form&gt;\n</code>",
        "<code>{ input: { a: text, b: select }, otherinput: { c: { a: a, 0: b, 1: d }, d: { b: c } }, anotherinput: 1 }\n{ input: { b: select } }\n</code>",
        "<code>        var $vals = {};\n\n        $(\"#video_edit_form input\").each(function(i){\n            var name = $(this).attr(\"name\").replace(/editSingleForm\\[/i, '');\n\n            name = name.replace(/\\]/i, '');\n\n            switch($(this).attr(\"type\")){\n                case \"text\":\n                    $vals[name] = $(this).val();\n                    break;\n                case \"checkbox\":\n                    if($(this).attr(\"checked\")){\n                        $vals[name] = $(this).val();\n                    }\n                    break;\n                case \"radio\":\n                    if($(this).attr(\"checked\")){\n                        $vals[name] = $(this).val();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n</code>",
        "<code>&lt;places&gt;...&lt;/places&gt;</code>",
        "<code>&lt;place&gt;...&lt;/place&gt;</code>",
        "<code>&lt;name&gt;...&lt;/name&gt;</code>",
        "<code>&lt;type&gt;...&lt;/type&gt;</code>",
        "<code>&lt;activity&gt;...&lt;/activity&gt;</code>",
        "<code>&lt;places&gt;\n\n    &lt;place&gt;\n\n        &lt;name&gt;Home&lt;/name&gt;\n        &lt;type&gt;dwelling&lt;/type&gt;\n\n        &lt;activity&gt;sleep&lt;/activity&gt;\n        &lt;activity&gt;eat&lt;/activity&gt;\n        &lt;activity&gt;watch TV&lt;/activity&gt;\n\n    &lt;/place&gt;\n\n    &lt;place&gt;...&lt;/place&gt;\n\n    &lt;place&gt;...&lt;/place&gt;\n\n&lt;/places&gt;\n</code>",
        "<code>&lt;form&gt;</code>",
        "<code>root</code>",
        "<code>&lt;place&gt;</code>",
        "<code>&lt;fieldset&gt;</code>",
        "<code>&lt;fieldset&gt;</code>",
        "<code>&lt;form name=\"places\"&gt;\n\n    &lt;fieldset name=\"place\"&gt;\n\n        &lt;input type=\"text\" name=\"name\"/&gt;\n        &lt;select name=\"type\"&gt;\n            &lt;option value=\"dwelling\"&gt;Dwelling&lt;/option&gt;\n            &lt;option value=\"restoration\"&gt;Restoration&lt;/option&gt;\n            &lt;option value=\"sport\"&gt;Sport&lt;/option&gt;\n            &lt;option value=\"administrative\"&gt;Administrative&lt;/option&gt;\n        &lt;/select&gt;\n\n        &lt;input type=\"text\" name=\"activity\"/&gt;\n        &lt;input type=\"text\" name=\"activity\"/&gt;\n        &lt;input type=\"text\" name=\"activity\"/&gt;\n\n    &lt;/fieldset&gt;\n\n&lt;/form&gt;\n</code>",
        "<code>name=\"array[]\"</code>",
        "<code>{'places':{\n\n    'place':[\n\n        {\n\n            'name': 'Home',\n            'type': 'dwelling',\n\n            'activity':[\n\n                 'sleep',\n                 'eat',\n                 'watch TV'\n\n            ]\n\n        },\n\n        {...},\n\n        {...}\n\n    ]\n\n}}\n</code>",
        "<code>$.fn.toJSO = function () {\n    var obj = {},\n        $kids = $(this).children('[name]');\n    if (!$kids.length) {\n        return $(this).val();\n    }\n    $kids.each(function () {\n        var $el = $(this),\n            name = $el.attr('name');\n        if ($el.siblings(\"[name=\" + name + \"]\").length) {\n            if (!/radio|checkbox/i.test($el.attr('type')) || $el.prop('checked')) {\n                obj[name] = obj[name] || [];\n                obj[name].push($el.toJSO());\n            }\n        } else {\n            obj[name] = $el.toJSO();\n        }\n    });\n    return obj;\n};\n</code>",
        "<code>$.post('script.php',('form').toJSO(), ...);\n</code>",
        "<code>.serialize()</code>",
        "<code>.serializeArray()</code>",
        "<code>$.formObject = function($o) {\n    var o = {},\n        real_value = function($field) {\n            var val = $field.val() || \"\";\n\n            // additional cleaning here, if needed\n\n            return val;\n        };\n\n    if (typeof o != \"object\") {\n        $o = $(o);\n    }\n\n    $(\":input[name]\", $o).each(function(i, field) {\n        var $field = $(field),\n            name = $field.attr(\"name\"),\n            value = real_value($field);\n\n        if (o[name]) {\n            if (!$.isArray(o[name])) {\n                o[name] = [o[name]];\n            }\n\n            o[name].push(value);\n        }\n\n        else {\n            o[name] = value;\n        }\n    });\n\n    return o;\n}\n</code>",
        "<code>var obj = $.formObject($(\"#someForm\"));\n</code>",
        "<code>&lt;form id=\"myform\"&gt;\n    &lt;label&gt;Name:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"name\"/&gt;\n    &lt;label&gt;Email&lt;/label&gt;\n    &lt;input type=\"text\" name=\"email\"/&gt;\n    &lt;label&gt;Password&lt;/label&gt;\n    &lt;input type=\"password\" name=\"password\"/&gt;\n&lt;/form&gt;\n</code>",
        "<code>$('#myform').jsonify();\n</code>",
        "<code>{\"name\":\"Joe User\",\"email\":\"joe@example.com\",\"password\":\"mypass\"}\n</code>",
        "<code>$('#mybutton').click(function() {\n    $.post('/api/user', JSON.stringify($('#myform').jsonify()));\n}\n</code>",
        "<code>document.addEventListener(\"DOMContentLoaded\", function() {\r\n  setInterval(function() {\r\n    var form = document.getElementById('form') || document.querySelector('form[name=\"userprofile\"]');\r\n    var json = Array.from(new FormData(form)).map(function(e,i) {this[e[0]]=e[1]; return this;}.bind({}))[0];\r\n    \r\n    console.log(json)\r\n    document.querySelector('#asJSON').value = JSON.stringify(json);\r\n  }, 1000);\r\n})</code>",
        "<code>&lt;form name=\"userprofile\" id=\"form\"&gt;\r\n  &lt;p&gt;Name &lt;input type=\"text\" name=\"firstname\" value=\"John\"/&gt;&lt;/p&gt;\r\n  &lt;p&gt;Family name &lt;input name=\"lastname\" value=\"Smith\"/&gt;&lt;/p&gt;\r\n  &lt;p&gt;Work &lt;input name=\"employment[name]\" value=\"inc, Inc.\"/&gt;&lt;/p&gt;\r\n  &lt;p&gt;Works since &lt;input name=\"employment[since]\" value=\"2017\" /&gt;&lt;/p&gt;\r\n  &lt;p&gt;Photo &lt;input type=\"file\" /&gt;&lt;/p&gt;\r\n  &lt;p&gt;Send &lt;input type=\"submit\" /&gt;&lt;/p&gt;\r\n&lt;/form&gt;\r\n\r\nJSON: &lt;textarea id=\"asJSON\"&gt;&lt;/textarea&gt;</code>",
        "<code>more: https://developer.mozilla.org/en-US/docs/Web/API/FormData \n</code>",
        "<code>$(\"#myform\").submit(function(){\n    var arr = $(this).serializeArray();\n    var json = \"\";\n    jQuery.each(arr, function(){\n        jQuery.each(this, function(i, val){\n            if (i==\"name\") {\n                json += '\"' + val + '\":';\n            } else if (i==\"value\") {\n                json += '\"' + val.replace(/\"/g, '\\\\\"') + '\",';\n            }\n        });\n    });\n    json = \"{\" + json.substring(0, json.length - 1) + \"}\";\n    // do something with json\n    return false;\n});\n</code>",
        "<code>App.toJson = function( selector ) {\n    var o = {};\n    $.map( $( selector ), function( n,i )\n    {\n        o[n.name] = $(n).val();\n    });     \n    return o;\n}\n</code>"
      ],
      "path": "stack.bower"
    },
    {
      "tags": [
        "npm",
        "bower"
      ],
      "creation_date": 1391211067,
      "body_markdown": "I&#39;m trying to install Bower on XUbuntu 13.10, following the instructions on the Bower home page, after doing `sudo apt-get install npm` and `sudo npm install -g bower` I get the following after issuing `bower` on the command line:\r\n\r\n    /usr/bin/env: node: No such file or directory\r\n\r\nI then install Node (even though I assume that would not be unnecessary since Bower&#39;s only dependency would be NPM, correct?). Anyhow, after I install node with `sudo apt-get install node` any of the Bower commands, such as `bower help`, simply don&#39;t do anything, i.e. output nothing.\r\n\r\nHow to install Bower on Ubuntu (preferably without manually downloading various versions of things)?\r\n",
      "last_edit_date": 1399358451,
      "up_vote_count": 192,
      "link": "https://stackoverflow.com/questions/21491996/installing-bower-on-ubuntu",
      "_childDocuments_": [
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1391265326,
          "answer_id": 21499336,
          "path": "stack.bower.answer",
          "score": 23,
          "up_vote_count": 23,
          "is_accepted": false,
          "last_activity_date": 1391265326,
          "body_markdown": "At Least from Ubuntu 12.04, an old version (0.6.x) of Node is in the standard repository. To install, just run:\r\n\r\n    sudo apt-get install nodejs\r\n\r\nNPM comes with latest version of nodejs. Once you have that, then run\r\n\r\n    sudo npm install bower -g\r\n\r\nShould be good to go after that. You may need to run some updates, but it should be fairly straight forward."
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1396368882,
          "answer_id": 22791301,
          "path": "stack.bower.answer",
          "score": 361,
          "up_vote_count": 361,
          "is_accepted": true,
          "last_activity_date": 1418594393,
          "last_edit_date": 1418594393,
          "body_markdown": "    sudo ln -s /usr/bin/nodejs /usr/bin/node\r\n\r\nor install legacy nodejs:\r\n\r\n    sudo apt-get install nodejs-legacy\r\n\r\nAs seen in [this GitHub issue][1].\r\n\r\n\r\n  [1]: https://github.com/joyent/node/issues/3911"
        },
        {
          "tags": [],
          "down_vote_count": 1,
          "creation_date": 1408939517,
          "answer_id": 25478903,
          "path": "stack.bower.answer",
          "score": 111,
          "up_vote_count": 112,
          "is_accepted": false,
          "last_activity_date": 1408939517,
          "body_markdown": "    sudo apt-get install nodejs\r\ninstalls nodejs\r\n\r\n    sudo apt-get install npm\r\ninstalls npm\r\n\r\n    sudo npm install bower -g\r\ninstalls bower via npm"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1456907758,
          "answer_id": 35742068,
          "path": "stack.bower.answer",
          "score": 8,
          "up_vote_count": 8,
          "is_accepted": false,
          "last_activity_date": 1469085421,
          "last_edit_date": 1469085421,
          "body_markdown": "First of all install nodejs:\r\n\r\n    sudo apt-get install nodejs\r\n\r\nThen install npm:\r\n\r\n    sudo apt-get install npm\r\n\r\nThen install bower:\r\n    \r\n    npm install -g bower\r\n\r\nFor any of the npm package tutorial visit : https://www.npmjs.com/\r\n\r\nHere just search the package and you can find how to install, documentation and tutorials as well.\r\n\r\nP.S. This is just a very common solution. If your problem still exists you can try th advanced one.\r\n    "
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1458209816,
          "answer_id": 36057532,
          "path": "stack.bower.answer",
          "score": 5,
          "up_vote_count": 5,
          "is_accepted": false,
          "last_activity_date": 1458209816,
          "body_markdown": "Hi another solution to this problem is to simply add the node nodejs binary folder to your PATH using the following command:\r\n\r\n`ln -s /usr/bin/nodejs /usr/bin/node`\r\n\r\nSee [NPM GitHub][1] for better explanation\r\n\r\n\r\n  [1]: https://github.com/nodejs/node-v0.x-archive/issues/3911#issuecomment-8956154"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1465032574,
          "answer_id": 37628618,
          "path": "stack.bower.answer",
          "score": 4,
          "up_vote_count": 4,
          "is_accepted": false,
          "last_activity_date": 1465032574,
          "body_markdown": " on Ubuntu 12.04 and the packaged version of NodeJs is too old to install Bower\r\nusing the PPA \r\n\r\n    sudo add-apt-repository ppa:chris-lea/node.js \r\n    sudo apt-get update\r\n    sudo apt-get -y install nodejs\r\n\r\nWhen this has installed, check the version:\r\n\r\n    npm --version\r\n    1.4.3\r\n\r\nNow install Bower:\r\n\r\n    sudo npm install -g bower\r\n\r\nThis will fetch and install Bower globally.\r\n\r\n"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1489649597,
          "answer_id": 42827848,
          "path": "stack.bower.answer",
          "score": 1,
          "up_vote_count": 1,
          "is_accepted": false,
          "last_activity_date": 1502300333,
          "last_edit_date": 1502300333,
          "body_markdown": "##Ubuntu 16.04 and later\r\n\r\nBower is a package manager primarily for (but not limited to) front-end web development. In Ubuntu 16.04 and later Bower package manager can be quickly and easily installed from the Ubuntu Software app. Open Ubuntu Software, search for &quot;bower&quot; and click the *Install* button to install it. Or open the terminal and type:\r\n\r\n    sudo snap install --classic bower\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/gzJPI.png"
        },
        {
          "tags": [],
          "down_vote_count": 0,
          "creation_date": 1495569676,
          "answer_id": 44144024,
          "path": "stack.bower.answer",
          "score": 3,
          "up_vote_count": 3,
          "is_accepted": false,
          "last_activity_date": 1495569676,
          "body_markdown": "The published responses are correct but incomplete.\r\n\r\nGit to install the packages we first need to make sure git is installed.\r\n\r\n    $ sudo apt install git-core\r\n\r\nBower uses Node.js and npm to manage the programs so lets install these.\r\n\r\n    $ sudo apt install nodejs\r\n\r\nNode will now be installed with the executable located in `/etc/usr/nodejs`.\r\n\r\nYou should be able to execute Node.js by using the command below, but as ours are location in nodejs we will get an error No such file or directory.\r\n\r\n    $ /usr/bin/env node\r\n\r\nWe can manually fix this by creating a symlink.\r\n\r\n    $ sudo ln -s /usr/bin/nodejs /usr/bin/node\r\n\r\nNow check Node.js is installed correctly by using.\r\n\r\n    $ /usr/bin/env node\r\n    &gt;\r\n\r\nSome users suggest installing legacy nodejs, this package just creates a symbolic link to binary nodejs.\r\n\r\n    $ sudo apt install nodejs-legacy\r\n\r\nNow, you can install npm and bower\r\n\r\n**Install npm**\r\n\r\n    $ sudo apt install npm\r\n\r\n**Install Bower**\r\n\r\n    $ sudo npm install -g bower\r\n\r\nCheck bower is installed and what version you&#39;re running.\r\n\r\n    $ bower -v\r\n    1.8.0\r\n\r\nReference:\r\n\r\n[Install Bower Ubutu 14][1]\r\n\r\n[Install Bower in Ubuntu][2]\r\n\r\n[Install Bower][3]\r\n\r\n\r\n  [1]: http://Installing%20Bower%20on%20Ubuntu%2014.04%20LTS\r\n  [2]: https://paulund.co.uk/install-bower-ubuntu\r\n  [3]: https://bower.io/#install-bower"
        }
      ],
      "title": "Installing Bower on Ubuntu",
      "view_count": 160831,
      "answer_count": 8,
      "code_snippet": [
        "<code>sudo apt-get install npm</code>",
        "<code>sudo npm install -g bower</code>",
        "<code>bower</code>",
        "<code>/usr/bin/env: node: No such file or directory\n</code>",
        "<code>sudo apt-get install node</code>",
        "<code>bower help</code>",
        "<code>sudo ln -s /usr/bin/nodejs /usr/bin/node\n</code>",
        "<code>sudo apt-get install nodejs-legacy\n</code>",
        "<code>sudo apt-get install nodejs\n</code>",
        "<code>sudo apt-get install npm\n</code>",
        "<code>sudo npm install bower -g\n</code>",
        "<code>nodejs</code>",
        "<code>nodejs</code>",
        "<code>sudo ln -s /usr/bin/nodejs /usr/bin/node</code>",
        "<code>sudo</code>",
        "<code>nvm</code>",
        "<code>sudo apt-get install nodejs\n</code>",
        "<code>sudo npm install bower -g\n</code>",
        "<code>sudo apt-get install nodejs</code>",
        "<code>sudo npm install bower -g</code>",
        "<code>sudo: npm: command not found</code>",
        "<code>apt install npm</code>",
        "<code>sudo apt-get install nodejs\n</code>",
        "<code>sudo apt-get install npm\n</code>",
        "<code>npm install -g bower\n</code>",
        "<code>ln -s /usr/bin/nodejs /usr/bin/node</code>",
        "<code>sudo apt-get install npm</code>",
        "<code>sudo add-apt-repository ppa:chris-lea/node.js \nsudo apt-get update\nsudo apt-get -y install nodejs\n</code>",
        "<code>npm --version\n1.4.3\n</code>",
        "<code>sudo npm install -g bower\n</code>",
        "<code>$ sudo apt install git-core\n</code>",
        "<code>$ sudo apt install nodejs\n</code>",
        "<code>/etc/usr/nodejs</code>",
        "<code>$ /usr/bin/env node\n</code>",
        "<code>$ sudo ln -s /usr/bin/nodejs /usr/bin/node\n</code>",
        "<code>$ /usr/bin/env node\n&gt;\n</code>",
        "<code>$ sudo apt install nodejs-legacy\n</code>",
        "<code>$ sudo apt install npm\n</code>",
        "<code>$ sudo npm install -g bower\n</code>",
        "<code>$ bower -v\n1.8.0\n</code>",
        "<code>sudo snap install --classic bower\n</code>"
      ],
      "path": "stack.bower"
    }
  ],
  "name": "bower"
}