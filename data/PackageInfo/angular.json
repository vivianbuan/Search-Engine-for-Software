{
  "_childDocuments_": [
    {
      "tags": [
        "git",
        "git-branch",
        "git-remote"
      ],
      "title": "How do I delete a Git branch both locally and remotely?",
      "last_edit_date": 1514124699,
      "answer_count": 40,
      "body_markdown": "I want to delete a branch both locally and on my remote project fork on [GitHub][1].\r\n\r\n### Failed Attempts to Delete Remote Branch\r\n\r\n    $ git branch -d remotes/origin/bugfix\r\n    error: branch &#39;remotes/origin/bugfix&#39; not found.\r\n\r\n    $ git branch -d origin/bugfix\r\n    error: branch &#39;origin/bugfix&#39; not found.\r\n\r\n    $ git branch -rd origin/bugfix\r\n    Deleted remote branch origin/bugfix (was 2a14ef7).\r\n\r\n    $ git push\r\n    Everything up-to-date\r\n\r\n    $ git pull\r\n    From github.com:gituser/gitproject\r\n    * [new branch] bugfix -&gt; origin/bugfix\r\n    Already up-to-date.\r\n\r\nWhat do I need to do differently to successfully delete the\r\n`remotes/origin/bugfix` branch both locally and on GitHub?\r\n\r\n  [1]: http://en.wikipedia.org/wiki/GitHub\r\n",
      "link": "https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-remotely",
      "_childDocuments_": [
        {
          "down_vote_count": 11,
          "is_accepted": true,
          "body_markdown": "# Executive Summary\r\n\r\n    $ git push -d &lt;remote_name&gt; &lt;branch_name&gt;\r\n    $ git branch -d &lt;branch_name&gt;\r\n\r\nNote that in most cases the remote name is `origin`.\r\n\r\n# Delete Local Branch\r\n\r\nTo delete the *local* branch use one of the following:\r\n\r\n    $ git branch -d branch_name\r\n    $ git branch -D branch_name\r\n\r\n**Note:** The `-d` option is an alias for `--delete`, which only deletes the branch if it has already been fully merged in its upstream branch. You could also use `-D`, which is an alias for `--delete --force`, which deletes the branch &quot;irrespective of its merged status.&quot; [Source: `man git-branch`] \r\n\r\n# Delete Remote Branch [Updated on 8-Sep-2017]\r\n\r\nAs of [Git v1.7.0][git-1.7.0], you can delete a ***remote*** branch using\r\n\r\n    $ git push &lt;remote_name&gt; --delete &lt;branch_name&gt;\r\n\r\nwhich might be easier to remember than\r\n\r\n    $ git push &lt;remote_name&gt; :&lt;branch_name&gt;\r\n\r\nwhich was added in [Git v1.5.0][git-1.5.0] &quot;to delete a remote branch or a tag.&quot;\r\n\r\nStarting on [Git v2.8.0][git-2.8.0] you can also use `git push` with the `-d` option as an alias for `--delete`.\r\n\r\nTherefore, the version of Git you have installed will dictate whether you need to use the easier or harder syntax.\r\n\r\n## Delete Remote Branch [Original Answer from 5-Jan-2010]\r\n\r\nFrom Chapter 3 of [*Pro Git*][#progit] by Scott Chacon:\r\n\r\n&gt; ### Deleting Remote Branches ###\r\n&gt; \r\n&gt; Suppose you’re done with a remote branch — say, you and your collaborators are finished with a feature and have merged it into your remote’s master branch (or whatever branch your stable codeline is in). You can delete a remote branch using the rather obtuse syntax `git push [remotename] :[branch]`. If you want to delete your serverfix branch from the server, you run the following:\r\n&gt; \r\n    $ git push origin :serverfix\r\n    To git@github.com:schacon/simplegit.git\r\n     - [deleted]         serverfix\r\n\r\n&gt; Boom. No more branch on your server. You may want to dog-ear this page, because you’ll need that command, and you’ll likely forget the syntax. A way to remember this command is by recalling the `git push [remotename] [localbranch]:[remotebranch]` syntax that we went over a bit earlier. If you leave off the `[localbranch]` portion, then you’re basically saying, “Take nothing on my side and make it be `[remotebranch]`.”\r\n\r\nI issued `git push origin :bugfix` and it worked beautifully. Scott Chacon was right—I will want to [dog ear][1] that page (or virtually dog ear by answering this on Stack&amp;nbsp;Overflow).\r\n\r\n[#progit]: http://git-scm.com/book/en/Git-Branching-Remote-Branches\r\n\r\n[git-2.8.0]:\r\nhttps://github.com/git/git/blob/master/Documentation/RelNotes/2.8.0.txt\r\n\r\n[git-1.7.0]: https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.7.0.txt\r\n\r\n[git-1.5.0]: https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.5.0.txt\r\n\r\n  [1]: http://en.wiktionary.org/wiki/dogear#Verb\r\n\r\nThen you should execute this on other machines\r\n\r\n    git fetch --all --prune\r\n\r\nto propagate changes.\r\n",
          "up_vote_count": 15737,
          "answer_id": 2003515,
          "last_edit_date": 1514124225,
          "tags": [],
          "last_activity_date": 1514124225,
          "score": 15726,
          "creation_date": 1262654035,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "You can also use the following to delete the remote branch.\r\n\r\n    git push --delete origin serverfix\r\n\r\nWhich does the same thing as\r\n\r\n    git push origin :serverfix\r\n\r\nbut it may be easier to remember.\r\n",
          "up_vote_count": 651,
          "answer_id": 7923161,
          "last_edit_date": 1422557823,
          "tags": [],
          "last_activity_date": 1422557823,
          "score": 649,
          "creation_date": 1319754173,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 5,
          "is_accepted": false,
          "body_markdown": "In addition to the other answers, I often use the [git_remote_branch][1] tool. It&#39;s an extra install, but it gets you a convenient way to interact with remote branches. In this case, to delete:\r\n\r\n    grb delete branch\r\n\r\nI find that I also use the `publish` and `track` commands quite often.\r\n\r\n  [1]: https://github.com/webmat/git_remote_branch",
          "up_vote_count": 91,
          "answer_id": 9848609,
          "last_edit_date": 1375533186,
          "tags": [],
          "last_activity_date": 1375533186,
          "score": 86,
          "creation_date": 1332555708,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 5,
          "is_accepted": false,
          "body_markdown": "Matthew&#39;s answer is great for removing *remote* branches and I also appreciate the explanation, but to make a simple distinction between the two commands:\r\n\r\nTo remove a ***local branch*** from your machine:\r\n\r\n`git branch -d {the_local_branch}` (use `-D` instead to force deleting the branch without checking merged status)\r\n\r\nTo remove a ***remote branch*** from the server:\r\n\r\n`git push origin --delete {the_remote_branch}`\r\n\r\nReference: https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote",
          "up_vote_count": 2690,
          "answer_id": 10999165,
          "last_edit_date": 1513600393,
          "tags": [],
          "last_activity_date": 1513600393,
          "score": 2685,
          "creation_date": 1339512703,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 5,
          "is_accepted": false,
          "body_markdown": "Tip: When you delete branches using\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git branch -d &lt;branchname&gt;    # deletes local branch\r\n\r\nor\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git push origin :&lt;branchname&gt; # deletes remote branch\r\n\r\nonly the references are deleted. Even though the branch is actually removed on the remote the references to it still exists in the local repositories of your team members. This means that for other team members the deleted branches are still visible when they do a `git branch -a`.\r\n\r\nTo solve this your team members can prune the deleted branches with\r\n\r\n    git remote prune &lt;repository&gt;\r\n\r\nThis is typically `git remote prune origin`.\r\n",
          "up_vote_count": 319,
          "answer_id": 13270340,
          "last_edit_date": 1422557886,
          "tags": [],
          "last_activity_date": 1422557886,
          "score": 314,
          "creation_date": 1352293334,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 7,
          "is_accepted": false,
          "body_markdown": "Another approach is\r\n\r\n    git push --prune origin\r\n\r\n***WARNING:*** *This will delete all remote branches that do not exist locally.* Or more comprehensively,\r\n\r\n    git push --mirror\r\n\r\nwill effectively make the remote repository look like the local copy of the repository (local heads, remotes and tags are mirrored on remote).\r\n",
          "up_vote_count": 176,
          "answer_id": 13437928,
          "last_edit_date": 1420852271,
          "tags": [],
          "last_activity_date": 1420852271,
          "score": 169,
          "creation_date": 1353219094,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "If you want to complete both these steps with a single command, you can make an alias for it by adding the below to your `~/.gitconfig`:\r\n\r\n    [alias]\r\n    \trmbranch = &quot;!f(){ git branch -d ${1} &amp;&amp; git push origin --delete ${1}; };f&quot;\r\n\r\nAlternatively, you can add this to your global config from the command line using\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git config --global alias.rmbranch \\\r\n    &#39;!f(){ git branch -d ${1} &amp;&amp; git push origin --delete ${1}; };f&#39;\r\n\r\n**NOTE**: If using `-d` (lowercase d), the branch will only be deleted if it has been merged. To force the delete to happen, you will need to use `-D` (uppercase D).",
          "up_vote_count": 103,
          "answer_id": 14345010,
          "last_edit_date": 1402503977,
          "tags": [],
          "last_activity_date": 1402503977,
          "score": 102,
          "creation_date": 1358276713,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "You can also do this using `git remote prune origin`:\r\n\r\n    $ git remote prune origin\r\n    Pruning origin\r\n    URL: git@example.com/yourrepo.git\r\n     * [pruned] origin/some-branchs\r\n\r\nIt prunes and deletes remote-tracking branches from a `git branch -r` listing.\r\n",
          "up_vote_count": 89,
          "answer_id": 15364667,
          "last_edit_date": 1417242386,
          "tags": [],
          "last_activity_date": 1417242386,
          "score": 88,
          "creation_date": 1363100268,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 3,
          "is_accepted": false,
          "body_markdown": "I use the following in my [Bash][1] settings:\r\n\r\n    alias git-shoot=&quot;git push origin --delete&quot;\r\n\r\nThen you can call:\r\n\r\n    git-shoot branchname\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29\r\n",
          "up_vote_count": 144,
          "answer_id": 15775364,
          "last_edit_date": 1417242422,
          "tags": [],
          "last_activity_date": 1417242422,
          "score": 141,
          "creation_date": 1364940684,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 5,
          "is_accepted": false,
          "body_markdown": "Since January 2013, GitHub included a &lt;kbd&gt;Delete branch&lt;/kbd&gt; button next to each branch in your &quot;Branches&quot; page.\r\n\r\nRelevant blog post: [Create and delete branches][1]\r\n\r\n\r\n  [1]: https://github.com/blog/1377-create-and-delete-branches",
          "up_vote_count": 114,
          "answer_id": 16276586,
          "last_edit_date": 1401158586,
          "tags": [],
          "last_activity_date": 1401158586,
          "score": 109,
          "creation_date": 1367231975,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 3,
          "is_accepted": false,
          "body_markdown": "    git branch -D &lt;name-of-branch&gt;\r\n    git branch -D -r origin/&lt;name-of-branch&gt;\r\n    git push origin :&lt;name-of-branch&gt;\r\n\r\n",
          "up_vote_count": 240,
          "answer_id": 19572740,
          "last_edit_date": 1407528243,
          "tags": [],
          "last_activity_date": 1407528243,
          "score": 237,
          "creation_date": 1382636183,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "Mashup of all the other answers. Requires Ruby 1.9.3+, tested **only** on OS X.\r\n\r\nCall this file `git-remove`, make it executable, and put it in your path. Then use, for example, `git remove temp`. \r\n\r\n&lt;!-- language: lang-ruby --&gt;\r\n\r\n    #!/usr/bin/env ruby\r\n    require &#39;io/console&#39;\r\n    \r\n    if __FILE__ == $0\r\n    \t  branch_name = ARGV[0] if (ARGV[0])\r\n    \t  print &quot;Press Y to force delete local and remote branch #{branch_name}...&quot;\r\n        response = STDIN.getch\r\n        if [&#39;Y&#39;, &#39;y&#39;, &#39;yes&#39;].include?(response)\r\n          puts &quot;\\nContinuing.&quot;\r\n          `git branch -D #{branch_name}`\r\n          `git branch -D -r origin/#{branch_name}`\r\n          `git push origin --delete #{branch_name}`\t\r\n        else\r\n          puts &quot;\\nQuitting.&quot;\r\n        end\r\n    end",
          "up_vote_count": 35,
          "answer_id": 20081966,
          "last_edit_date": 1401474841,
          "tags": [],
          "last_activity_date": 1401474841,
          "score": 35,
          "creation_date": 1384894951,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "Many of the other answers will lead to errors/warnings. This approach is relatively fool proof although you may still need `git branch -D branch_to_delete` if it&#39;s not fully merged into `some_other_branch`, for example.\r\n\r\n    git checkout some_other_branch\r\n    git push origin :branch_to_delete\r\n    git branch -d branch_to_delete\r\n    \r\nRemote pruning isn&#39;t needed if you deleted the remote branch. It&#39;s only used to get the most up to date remotes available on a repo you&#39;re tracking. I&#39;ve observed `git fetch` will add remotes, not remove them. Here&#39;s an example of when `git remote prune origin` will actually do something:\r\n\r\nUser A does the steps above. User B would run the following commands to see the most up to date remote branches\r\n\r\n    git fetch\r\n    git remote prune origin\r\n    git branch -r\r\n",
          "up_vote_count": 41,
          "answer_id": 20233127,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1385521495,
          "score": 40,
          "creation_date": 1385521495
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "# The Short Answers\r\n\r\nIf you want more detailed explanations of the following commands, then see the long answers in the next section.\r\n\r\nDeleting a remote branch:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git push origin --delete &lt;branch&gt;  # Git version 1.7.0 or newer\r\n    git push origin :&lt;branch&gt;          # Git versions older than 1.7.0\r\n\r\nDeleting a local branch:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git branch --delete &lt;branch&gt;\r\n    git branch -d &lt;branch&gt; # Shorter version\r\n    git branch -D &lt;branch&gt; # Force delete un-merged branches\r\n\r\nDeleting a local remote-tracking branch:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git branch --delete --remotes &lt;remote&gt;/&lt;branch&gt;\r\n    git branch -dr &lt;remote&gt;/&lt;branch&gt; # Shorter\r\n\r\n    git fetch &lt;remote&gt; --prune # Delete multiple obsolete tracking branches\r\n    git fetch &lt;remote&gt; -p      # Shorter\r\n\r\n# The Long Answer: there are 3 different branches to delete!\r\n\r\nWhen you&#39;re dealing with deleting branches both locally and remotely, keep in mind that **there are 3 different branches involved**:\r\n\r\n1. The local branch `X`.\r\n2. The remote origin branch `X`.\r\n2. The local remote-tracking branch `origin/X` that tracks the remote branch `X`.\r\n\r\n![Visualization of 3 branches][1]\r\n\r\nThe original poster used\r\n\r\n    git branch -rd origin/bugfix\r\n\r\nwhich only deleted his **local remote-tracking branch** `origin/bugfix`, and not the actual remote branch `bugfix` on `origin`.\r\n\r\n![Diagram 2][2]\r\n\r\n**To delete that actual remote branch**, you need\r\n\r\n    git push origin --delete bugfix\r\n\r\n![Diagram 3][3]\r\n\r\n# Additional Details\r\n\r\nThe following sections describe additional details to consider when deleting your remote and remote-tracking branches.\r\n\r\n## Pushing to delete remote branches also deletes remote-tracking branches\r\n\r\nNote that deleting the remote branch `X` from the command line using a `git push` **will also delete the local remote-tracking branch** `origin/X`, so it is not necessary to prune the obsolete remote-tracking branch with `git fetch --prune` or `git fetch -p`, though it wouldn&#39;t hurt if you did it anyway.\r\n\r\nYou can verify that the remote-tracking branch `origin/X` was also deleted by running the following:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    # View just remote-tracking branches\r\n    git branch --remotes\r\n    git branch -r\r\n\r\n    # View both strictly local as well as remote-tracking branches\r\n    git branch --all\r\n    git branch -a\r\n\r\n## Pruning the obsolete local remote-tracking branch origin/X\r\n\r\nIf you didn&#39;t delete your remote branch `X` from the command line (like above), then your local repo will still contain (a now obsolete) remote-tracking branch `origin/X`. This can happen if you deleted a remote branch directly through GitHub&#39;s web interface, for example.\r\n\r\nA typical way to remove these obsolete remote-tracking branches (since Git version 1.6.6) is to simply run `git fetch` with the `--prune` or shorter `-p`. **Note that this removes all obsolete local remote-tracking branches for any remote branches that no longer exist on the remote**:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git fetch origin --prune\r\n    git fetch origin -p # Shorter\r\n\r\nHere is the relevant quote from the [1.6.6 release notes][notes] (emphasis mine):\r\n\r\n&gt; **&quot;git fetch&quot; learned** `--all` and `--multiple `options, to run fetch from\r\n&gt; many repositories, and **`--prune` option to remove remote tracking\r\n&gt; branches that went stale.**  These make &quot;git remote update&quot; and &quot;git\r\n&gt; remote prune&quot; less necessary (there is no plan to remove &quot;remote\r\n&gt; update&quot; nor &quot;remote prune&quot;, though).\r\n\r\n### Alternative to above automatic pruning for obsolete remote-tracking branches\r\n\r\nAlternatively, instead of pruning your obsolete local remote-tracking branches through `git fetch -p`, *you can avoid making the extra network operation* by just manually removing the branch(es) with the `--remote` or `-r` flags:\r\n\r\n&lt;!-- language: lang-bash --&gt;\r\n\r\n    git branch --delete --remotes origin/X\r\n    git branch -dr origin/X # Shorter\r\n\r\n## See Also\r\n\r\n* [git-branch(1) Manual Page][branch].\r\n* [git-fetch(1) Manual Page][fetch].\r\n* [Pro Git &amp;sect; 3.5 Git Branching - Remote Branches][pro].\r\n\r\n[matt]: https://stackoverflow.com/a/2003515/456814\r\n[notes]: https://github.com/git/git/blob/v2.0.0/Documentation/RelNotes/1.6.6.txt#L162-L166\r\n[branch]: https://jk.gs/git-branch.html\r\n[fetch]: https://jk.gs/git-fetch.html\r\n[pro]: https://git-scm.com/book/en/Git-Branching-Remote-Branches\r\n[push-prune]: http://stackoverflow.com/a/13437928/456814\r\n[push]: https://www.kernel.org/pub/software/scm/git/docs/git-push.html\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/NLAqw.png\r\n  [2]: https://i.stack.imgur.com/iCOnz.png\r\n  [3]: https://i.stack.imgur.com/6Z3GY.png",
          "up_vote_count": 1527,
          "answer_id": 23961231,
          "last_edit_date": 1457612426,
          "tags": [],
          "last_activity_date": 1457612426,
          "score": 1527,
          "creation_date": 1401474755,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "This won&#39;t work if you have a tag with the same name as the branch on the remote:\r\n\r\n    $ git push origin :branch-or-tag-name\r\n    error: dst refspec branch-or-tag-name matches more than one.\r\n    error: failed to push some refs to &#39;git@github.com:SomeName/some-repo.git&#39;\r\n\r\nIn that case you need to specify that you want to delete the branch, not the tag:\r\n\r\n    git push origin :refs/heads/branch-or-tag-name\r\n\r\nSimilarly, to delete the tag instead of the branch you would use:\r\n\r\n    git push origin :refs/tags/branch-or-tag-name\r\n",
          "up_vote_count": 54,
          "answer_id": 25011664,
          "last_edit_date": 1413804652,
          "tags": [],
          "last_activity_date": 1413804652,
          "score": 54,
          "creation_date": 1406624568,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "If you want to delete a branch, first checkout to the branch other than the branch to be deleted.\r\n\r\n    git checkout other_than_branch_to_be_deleted\r\n\r\nDeleting the local branch:\r\n\r\n    git branch -D branch_to_be_deleted\r\n\r\nDeleting the remote branch:\r\n\r\n    git push origin --delete branch_to_be_deleted\r\n\r\n",
          "up_vote_count": 332,
          "answer_id": 26237660,
          "last_edit_date": 1433815442,
          "tags": [],
          "last_activity_date": 1433815442,
          "score": 330,
          "creation_date": 1412689929,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "This is simple: Just run the following command:\r\n\r\nTo delete a Git branch both locally and remotely, first delete the local branch using command:\r\n\r\n    git branch -d example\r\n\r\n(here `example` is the branch name)\r\n\r\nAnd after that delete remote branch using command:\r\n\r\n    git push origin :example",
          "up_vote_count": 202,
          "answer_id": 28527604,
          "last_edit_date": 1433815394,
          "tags": [],
          "last_activity_date": 1433815394,
          "score": 200,
          "creation_date": 1424013632,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "Simply say:\r\n\r\n    git branch -d &lt;branch-name&gt;\r\n    git push origin :&lt;branch-name&gt;\r\n",
          "up_vote_count": 72,
          "answer_id": 29831148,
          "last_edit_date": 1466859121,
          "tags": [],
          "last_activity_date": 1466859121,
          "score": 72,
          "creation_date": 1429812393,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "    git push origin --delete branchName\r\n\r\nis easier to remember than\r\n\r\n    git push origin branchName\r\n\r\n",
          "up_vote_count": 62,
          "answer_id": 30001477,
          "last_edit_date": 1432029926,
          "tags": [],
          "last_activity_date": 1432029926,
          "score": 62,
          "creation_date": 1430564380,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "**Delete locally:**\r\n\r\nTo delete a local branch, you can use:\r\n\r\n    git branch -d branch_name \r\n\r\nTo delete a branch forcibly, use `-D` instead of `-d`. \r\n   \r\n\r\n    git branch -D branch_name\r\n\r\n          \r\n\r\n     \r\n**Delete remotely:**\r\n\r\nThere are two options:\r\n\r\n    git push origin :branchname  \r\n\r\n    git push origin --delete branchname \r\n\r\n  \r\n \r\nI would suggest you use the 2nd way as it is more intuitive.\r\n\r\n",
          "up_vote_count": 95,
          "answer_id": 30410815,
          "last_edit_date": 1433673413,
          "tags": [],
          "last_activity_date": 1433673413,
          "score": 95,
          "creation_date": 1432371370,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 12,
          "is_accepted": false,
          "body_markdown": "Now you can do it with the [GitHub Desktop](https://desktop.github.com/) app.\r\n\r\nAfter launching the app\r\n\r\n1. Click on the project containing the branch\r\n2. Switch to the branch you would like to delete [![switching branch][1]][1]\r\n3. From the &quot;Branch&quot; menu, select, &quot;Unpublish...&quot;, to have the branch deleted from the GitHub servers. [![unpublish branch][2]][2]\r\n4. From the &quot;Branch&quot; menu, select, &#39;Delete &quot;*branch_name*&quot;...&#39;, to have the branch deleted off of your local machine (aka the machine you are currently working on) [![delete local branch][3]][3]\r\n\r\n  [1]: https://i.stack.imgur.com/c0ged.png\r\n  [2]: https://i.stack.imgur.com/1u8oS.png\r\n  [3]: https://i.stack.imgur.com/TTuLO.png",
          "up_vote_count": 80,
          "answer_id": 33275647,
          "last_edit_date": 1481860730,
          "tags": [],
          "last_activity_date": 1481860730,
          "score": 68,
          "creation_date": 1445499528,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "[Deleting Branches][1]\r\n\r\n&gt; Let&#39;s assume our work on branch &quot;contact-form&quot; is done and we&#39;ve already integrated it into &quot;master&quot;. Since we don&#39;t need it anymore, we can delete it (locally):\r\n\r\n&gt;     $ git branch -d contact-form\r\n\r\n\r\nAnd for deleting the remote branch:\r\n\r\n    git push origin --delete contact-form\r\n\r\n  [1]: http://www.git-tower.com/learn/git/ebook/command-line/remote-repositories/deleting-branches",
          "up_vote_count": 82,
          "answer_id": 33436213,
          "last_edit_date": 1447876273,
          "tags": [],
          "last_activity_date": 1447876273,
          "score": 80,
          "creation_date": 1446208784,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "Delete remote branch\r\n\r\n`git push origin :&lt;branchname&gt;`\r\n\r\nDelete local branch\r\n\r\n`git branch -D &lt;branchname&gt;`\r\n\r\nDelete local branch steps:\r\n\r\n1. checkout to another branch\r\n2. delete local branch",
          "up_vote_count": 78,
          "answer_id": 34544089,
          "last_edit_date": 1455905146,
          "tags": [],
          "last_activity_date": 1455905146,
          "score": 76,
          "creation_date": 1451553772,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "To delete your branch locally and remotely \r\n\r\n - Checkout to master branch -  `git checkout master`\r\n\r\n - Delete your remote branch - `git push origin --delete &lt;branch-name&gt;`\r\n\r\n - Delete your local branch - `git branch --delete &lt;branch-name&gt;`\r\n\r\n\r\n",
          "up_vote_count": 93,
          "answer_id": 34581636,
          "last_edit_date": 1513203051,
          "tags": [],
          "last_activity_date": 1513203051,
          "score": 92,
          "creation_date": 1451855323,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 3,
          "is_accepted": false,
          "body_markdown": "An alternative option to the command line for deleting remote branches is the **GitHub branches page**.\r\n\r\nSee for example: [https://github.com/angular/angular.js/branches](https://github.com/angular/angular.js/branches)\r\n\r\nFound in the `Code` -&gt; `Branches` page of a GitHub repository.\r\n\r\nI generally prefer command line myself but this **GitHub page shows you lots more information** about the branches, such as **last updated date and user**, and **number of commits ahead and behind**. It is useful when dealing with a large number of branches.\r\n",
          "up_vote_count": 30,
          "answer_id": 35213755,
          "last_edit_date": 1466859200,
          "tags": [],
          "last_activity_date": 1466859200,
          "score": 27,
          "creation_date": 1454628880,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 4,
          "is_accepted": false,
          "body_markdown": "I got sick of googling for this answer, so I took a similar approach\r\nto [the answer that crizCraig posted][1] earlier.\r\n\r\nAdded the following to my Bash profile:\r\n\r\n    function gitdelete(){\r\n        git push origin --delete $1\r\n        git branch -D $1\r\n    }\r\n\r\nThen every time I&#39;m done with a branch (merged into `master`, for example) I run the following in my terminal:\r\n\r\n    gitdelete my-branch-name\r\n\r\n...which then deletes `my-branch-name` from `origin` as as well as locally.\r\n\r\n  [1]: https://stackoverflow.com/a/15775364/551436\r\n",
          "up_vote_count": 45,
          "answer_id": 35324551,
          "last_edit_date": 1495542898,
          "tags": [],
          "last_activity_date": 1466859337,
          "score": 41,
          "creation_date": 1455133656,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "    git push origin :bugfix  # Deletes remote branch\r\n    git branch -d bugfix     # Must delete local branch manually\r\n    \r\nIf you are sure you want to delete it, run \r\n   \r\n\r\n    git branch -D bugfix\r\nNow to clean up deleted remote branches run\r\n\r\n    git remote prune origin\r\n\r\n",
          "up_vote_count": 38,
          "answer_id": 36775924,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1461257376,
          "score": 38,
          "creation_date": 1461257376
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "I also had similar issues, and this seems to work:\r\nThis deletes local branch.\r\n`git branch -d the_local_branch`\r\n\r\nThis removes remote branch\r\n`git push origin :the_remote_branch`\r\n\r\n[Source: Makandra Cards][1]\r\n\r\n\r\n  [1]: http://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote",
          "up_vote_count": 27,
          "answer_id": 36980415,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1462185431,
          "score": 26,
          "creation_date": 1462185431
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "Before executing\r\n\r\n    git branch --delete &lt;branch&gt;\r\n\r\nmake sure you determine first what the EXACT name of the remote branch is by executing:\r\n\r\n    git ls-remote\r\n\r\nThis will tell you what to enter EXACTLY for `&lt;branch&gt;` value. (`branch` is case sensitive!)\r\n",
          "up_vote_count": 38,
          "answer_id": 37356297,
          "last_edit_date": 1466859369,
          "tags": [],
          "last_activity_date": 1466859369,
          "score": 36,
          "creation_date": 1463780577,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "There are good answer, but, in case that you have a ton of branches, deleting them one by one locally and remotly, would be a tedious tasks. You can use this script to automate this tasks. \r\n\r\n    branch_not_delete=( &quot;master&quot; &quot;develop&quot; &quot;our-branch-1&quot; &quot;our-branch-2&quot;)\r\n    \r\n    \r\n    for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master`; do\r\n    \r\n    \t# delete prefix remotes/origin/ from branch name\r\n    \tbranch_name=&quot;$(awk &#39;{gsub(&quot;remotes/origin/&quot;, &quot;&quot;);print}&#39; &lt;&lt;&lt; $branch)&quot;\r\n    \t\r\n    \tif ! [[ &quot; ${branch_not_delete[*]} &quot; == *&quot; $branch_name &quot;* ]]; then\r\n    \t\t# delete branch remotly and locally\r\n        \tgit push origin :$branch_name\r\n    \tfi\r\n    done \r\n\r\n- List the branches that you don&#39;t want to delete\r\n- Iterate over remotes branch and if they aren&#39;t in our &quot;preserve list&quot;, we deleted. \r\n\r\n\r\nSource: [removing-git-branches-at-once](http://levipy.com/removing-git-branches-at-once/)\r\n",
          "up_vote_count": 21,
          "answer_id": 38776671,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1470341722,
          "score": 21,
          "creation_date": 1470341722
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "**One liner** command delete *both local, and remote*:\r\n\r\n`D=branch-name; git branch -D $D; git push origin :$D`\r\n\r\nor add the alias below to your *~/.gitconfig*; usage: `git kill branch-name`\r\n\r\n    [alias]\r\n        kill = &quot;!f(){ git branch -D \\&quot;$1\\&quot;;  git push origin --delete \\&quot;$1\\&quot;; };f&quot;",
          "up_vote_count": 75,
          "answer_id": 40645071,
          "last_edit_date": 1484469043,
          "tags": [],
          "last_activity_date": 1484469043,
          "score": 75,
          "creation_date": 1479344636,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 4,
          "is_accepted": false,
          "body_markdown": "Using **GitBash** you can execute the following:\r\n\r\n    git branch --delete &lt;branch&gt;\r\n\r\nOR \r\n-\r\nFrom the GitHub desktop app, when you have the branch checked out, you can delete the **Local** branch via the *Branch* menu strip:\r\n\r\n[![enter image description here][1]][1]\r\n\r\nIf you **ARE NOT** using the GitHub desktop app, and are using an IDE like Visual Studio for your local source control, all you have to do is a couple quick steps: \r\n\r\n 1. Check out a branch other than the one you wish to delete.\r\n 2. Right-click the branch you wish to delete.\r\n 3. Select the **Delete** option from the context menu.\r\n\r\nThen, once logged in to your GitHub account online, go to the repository and click the ***All Branches*** tab.  From there, just click the little trash can icon on the right on the name of the brach you wish to delete.  \r\n\r\n[![enter image description here][2]][2]\r\n\r\n*Keep in mind - if the branch isn&#39;t published, there&#39;s no need to try to delete it from your online repository.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/b6dQg.png\r\n  [2]: https://i.stack.imgur.com/hbXpP.png",
          "up_vote_count": 21,
          "answer_id": 42193447,
          "last_edit_date": 1487114295,
          "tags": [],
          "last_activity_date": 1487114295,
          "score": 17,
          "creation_date": 1486934712,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "I added the following aliases to my `.gitconfig` file.  This allows me to delete branches with or without specifying the branch name.  Branch name is defaulted to the current branch if no argument is passed in.\r\n\r\n\r\n    [alias]\r\n        branch-name = rev-parse --abbrev-ref HEAD     \r\n    \r\n        rm-remote-branch = !&quot;f() { branch=${1-$(git branch-name)}; git push origin :$branch; }; f&quot;\r\n        rm-local-branch = !&quot;f() { branch=${1-$(git branch-name)}; git checkout master; git branch -d $branch; }; f&quot;\r\n        rm-branch-fully = !&quot;f() { branch=${1-$(git branch-name)}; git rm-local-branch $branch; git rm-remote-branch $branch; }; f&quot;",
          "up_vote_count": 35,
          "answer_id": 42398224,
          "last_edit_date": 1493845321,
          "tags": [],
          "last_activity_date": 1493845321,
          "score": 35,
          "creation_date": 1487784038,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 18,
          "is_accepted": false,
          "body_markdown": "This commands works best for me:\r\n\r\n    git branch -D &lt;branch name&gt;\r\n\r\n",
          "up_vote_count": 5,
          "answer_id": 44074506,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1495210034,
          "score": -13,
          "creation_date": 1495210034
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "**To delete Locally - (Normal),** \r\n\r\n    git branch -d my_branch\r\n\r\nIf your branch in rebasing/merging progress and that was not done properly means, you will get an error `Rebase/Merge in progress` so in that case, you won&#39;t be able to delete your branch.\r\n\r\nSo either your need to solve rebasing/merging otherwise you can do force Delete by using,\r\n\r\n    git branch -D my_branch\r\n\r\n\r\n**To delete in Remote:**\r\n  \r\n\r\n    git push --delete origin my_branch\r\n \r\n**can do the same using ,**\r\n\r\n    git push origin :my_branch   # easy to remember both will do the same.\r\n\r\n**Graphical Representation,**\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/Y7NmS.png",
          "up_vote_count": 61,
          "answer_id": 44714712,
          "last_edit_date": 1511087043,
          "tags": [],
          "last_activity_date": 1511087043,
          "score": 60,
          "creation_date": 1498200168,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "&lt;h3&gt;Steps for deleting a branch:&lt;/h3&gt;\r\nfor deleting the **remote branch:**\r\n  \r\n    git push origin --delete &lt;your_branch&gt; \r\n\r\nfor deleting the **local branch:**\r\n\r\n    git branch -D &lt;branch_name&gt; \r\n\r\n**Explain:** OK, just explain what&#39;s going on here!\r\n\r\nSimply do `git push origin --delete` to delete your remote branch, add the name of the branch at the end and this will delete and push it to remote at the same time...\r\n\r\nAlso, `git branch -D`, which simply delete the local branch **Only**!...\r\n\r\n`-D` stands for `--delete --force` which will delete the branch even it&#39;s not merged(force delete), but you can also use `-d` which stands for `--delete` which throw an error respective of the branch merge status...\r\n\r\nI also create the image below to show the steps:\r\n\r\n\r\n[![delete a remote and local branch in git][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/AKWYx.jpg",
          "up_vote_count": 564,
          "answer_id": 44781228,
          "last_edit_date": 1516018666,
          "tags": [],
          "last_activity_date": 1516018666,
          "score": 563,
          "creation_date": 1498569195,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 1,
          "is_accepted": false,
          "body_markdown": "I use the following in my Bash settings:\r\n\r\n    alias git-shoot=&quot;git push origin --delete&quot;\r\n\r\nThen you can call:\r\n\r\n    git-shoot branchname",
          "up_vote_count": 6,
          "answer_id": 45793291,
          "last_edit_date": 1504880835,
          "tags": [],
          "last_activity_date": 1504880835,
          "score": 5,
          "creation_date": 1503306650,
          "path": "stack.angular.answer"
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "I created the following function:\r\n\r\n    git-delete-branch() \r\n    { \r\n        if [[ -n $1 ]]; then\r\n            git checkout master &gt; /dev/null;\r\n            branch_name=&quot;$1&quot;;\r\n            echo &quot;Deleting local $branch_name branch...&quot;;\r\n            git branch -D &quot;$branch_name&quot;;\r\n            echo &quot;Deleting remote $branch_name branch...&quot;;\r\n            git push origin --delete &quot;$branch_name&quot;;\r\n            git remote prune origin;\r\n            echo &quot;Your current branches are:&quot;;\r\n            git branch -a;\r\n        else\r\n            echo &quot;Usage: git-delete-branch &lt;branch_name&gt;&quot;;\r\n        fi\r\n    }\r\n\r\n\r\n",
          "up_vote_count": 6,
          "answer_id": 46412667,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1506367200,
          "score": 6,
          "creation_date": 1506367200
        },
        {
          "down_vote_count": 0,
          "is_accepted": false,
          "body_markdown": "According to latest document using terminal we can delete following way.\r\n\r\n**delete in local:**\r\n\r\n    git branch -D usermanagement\r\n\r\n**delete in remote location:**\r\n\r\n    git push --delete origin usermanagement\r\n\r\n",
          "up_vote_count": 11,
          "answer_id": 46888156,
          "path": "stack.angular.answer",
          "tags": [],
          "last_activity_date": 1508757797,
          "score": 11,
          "creation_date": 1508757797
        },
        {
          "down_vote_count": 2,
          "is_accepted": false,
          "body_markdown": "&gt; Its very simple\r\n\r\n\r\n**To delete remote branch**\r\n\r\n    git push -d origin &lt;branch-name&gt;\r\nOR\r\n\r\n    git push origin :&lt;branch-name&gt;\r\n\r\n**To delete local branch**\r\n\r\n    git branch -D &lt;branch-name&gt;",
          "up_vote_count": 8,
          "answer_id": 47696235,
          "last_edit_date": 1513590638,
          "tags": [],
          "last_activity_date": 1513590638,
          "score": 6,
          "creation_date": 1512653383,
          "path": "stack.angular.answer"
        }
      ],
      "view_count": 5293815,
      "up_vote_count": 12726,
      "code_snippet": [
        "<code>$ git branch -d remotes/origin/bugfix\nerror: branch 'remotes/origin/bugfix' not found.\n\n$ git branch -d origin/bugfix\nerror: branch 'origin/bugfix' not found.\n\n$ git branch -rd origin/bugfix\nDeleted remote branch origin/bugfix (was 2a14ef7).\n\n$ git push\nEverything up-to-date\n\n$ git pull\nFrom github.com:gituser/gitproject\n* [new branch] bugfix -&gt; origin/bugfix\nAlready up-to-date.\n</code>",
        "<code>remotes/origin/bugfix</code>",
        "<code>deleted remote-tracking branch</code>",
        "<code>$ git push -d &lt;remote_name&gt; &lt;branch_name&gt;\n$ git branch -d &lt;branch_name&gt;\n</code>",
        "<code>origin</code>",
        "<code>$ git branch -d branch_name\n$ git branch -D branch_name\n</code>",
        "<code>-d</code>",
        "<code>--delete</code>",
        "<code>-D</code>",
        "<code>--delete --force</code>",
        "<code>man git-branch</code>",
        "<code>$ git push &lt;remote_name&gt; --delete &lt;branch_name&gt;\n</code>",
        "<code>$ git push &lt;remote_name&gt; :&lt;branch_name&gt;\n</code>",
        "<code>git push</code>",
        "<code>-d</code>",
        "<code>--delete</code>",
        "<code>git push [remotename] :[branch]</code>",
        "<code>$ git push origin :serverfix\nTo git@github.com:schacon/simplegit.git\n - [deleted]         serverfix\n</code>",
        "<code>git push [remotename] [localbranch]:[remotebranch]</code>",
        "<code>[localbranch]</code>",
        "<code>[remotebranch]</code>",
        "<code>git push origin :bugfix</code>",
        "<code>git fetch --all --prune\n</code>",
        "<code>git push origin local_branch:remote_branch</code>",
        "<code>git push origin :remote_branch</code>",
        "<code>:</code>",
        "<code>git fetch --all --prune</code>",
        "<code>git branch -d</code>",
        "<code>git push origin --delete</code>",
        "<code>git branch -a</code>",
        "<code>git fetch --all --prune</code>",
        "<code>git branch -a</code>",
        "<code>git branch -r</code>",
        "<code>git remote show origin</code>",
        "<code>git branch -D Branch_Name</code>",
        "<code>git branch -d {the_local_branch}</code>",
        "<code>-D</code>",
        "<code>git push origin --delete {the_remote_branch}</code>",
        "<code>-D</code>",
        "<code>-d</code>",
        "<code>'git branch -d your_branch</code>",
        "<code>error: The branch 'your_branch' is not fully merged. If you are sure you want to delete it, run 'git branch -D your_branch'.</code>",
        "<code>git remote prune &lt;name&gt;</code>",
        "<code>git remote prune origin</code>",
        "<code>git push origin --delete &lt;branch&gt;  # Git version 1.7.0 or newer\ngit push origin :&lt;branch&gt;          # Git versions older than 1.7.0\n</code>",
        "<code>git branch --delete &lt;branch&gt;\ngit branch -d &lt;branch&gt; # Shorter version\ngit branch -D &lt;branch&gt; # Force delete un-merged branches\n</code>",
        "<code>git branch --delete --remotes &lt;remote&gt;/&lt;branch&gt;\ngit branch -dr &lt;remote&gt;/&lt;branch&gt; # Shorter\n\ngit fetch &lt;remote&gt; --prune # Delete multiple obsolete tracking branches\ngit fetch &lt;remote&gt; -p      # Shorter\n</code>",
        "<code>X</code>",
        "<code>X</code>",
        "<code>origin/X</code>",
        "<code>X</code>",
        "<code>git branch -rd origin/bugfix\n</code>",
        "<code>origin/bugfix</code>",
        "<code>bugfix</code>",
        "<code>origin</code>",
        "<code>git push origin --delete bugfix\n</code>",
        "<code>X</code>",
        "<code>git push</code>",
        "<code>origin/X</code>",
        "<code>git fetch --prune</code>",
        "<code>git fetch -p</code>",
        "<code>origin/X</code>",
        "<code># View just remote-tracking branches\ngit branch --remotes\ngit branch -r\n\n# View both strictly local as well as remote-tracking branches\ngit branch --all\ngit branch -a\n</code>",
        "<code>X</code>",
        "<code>origin/X</code>",
        "<code>git fetch</code>",
        "<code>--prune</code>",
        "<code>-p</code>",
        "<code>git fetch origin --prune\ngit fetch origin -p # Shorter\n</code>",
        "<code>--all</code>",
        "<code>--multiple</code>",
        "<code>--prune</code>",
        "<code>git fetch -p</code>",
        "<code>--remote</code>",
        "<code>-r</code>",
        "<code>git branch --delete --remotes origin/X\ngit branch -dr origin/X # Shorter\n</code>",
        "<code>X</code>",
        "<code>origin/X</code>",
        "<code>X</code>",
        "<code>git push --delete origin serverfix\n</code>",
        "<code>git push origin :serverfix\n</code>",
        "<code>git branch -d &lt;local_branch&gt;</code>",
        "<code>git branch -D &lt;local_branch&gt;</code>",
        "<code>git push origin --delete &lt;your_branch&gt; \n</code>",
        "<code>git branch -D &lt;branch_name&gt; \n</code>",
        "<code>git push origin --delete</code>",
        "<code>git branch -D</code>",
        "<code>-D</code>",
        "<code>--delete --force</code>",
        "<code>-d</code>",
        "<code>--delete</code>",
        "<code>git branch -a</code>",
        "<code>git checkout other_than_branch_to_be_deleted\n</code>",
        "<code>git branch -D branch_to_be_deleted\n</code>",
        "<code>git push origin --delete branch_to_be_deleted\n</code>",
        "<code>git branch -d &lt;branchname&gt;    # deletes local branch\n</code>",
        "<code>git push origin :&lt;branchname&gt; # deletes remote branch\n</code>",
        "<code>git branch -a</code>",
        "<code>git remote prune &lt;repository&gt;\n</code>",
        "<code>git remote prune origin</code>",
        "<code>git push</code>",
        "<code>git remote prune</code>",
        "<code>git fetch --prune</code>",
        "<code>git fetch -p</code>",
        "<code>git branch -D &lt;name-of-branch&gt;\ngit branch -D -r origin/&lt;name-of-branch&gt;\ngit push origin :&lt;name-of-branch&gt;\n</code>",
        "<code>-D</code>",
        "<code>-d</code>",
        "<code>git branch -d example\n</code>",
        "<code>example</code>",
        "<code>git push origin :example\n</code>",
        "<code>git push --prune origin\n</code>",
        "<code>git push --mirror\n</code>",
        "<code>git push --prune origin</code>",
        "<code>alias git-shoot=\"git push origin --delete\"\n</code>",
        "<code>git-shoot branchname\n</code>",
        "<code>git push origin --delete $1</code>",
        "<code>git-shoot</code>",
        "<code>git shoot branchname</code>",
        "<code>~/.gitconfig</code>",
        "<code>[alias]\n    rmbranch = \"!f(){ git branch -d ${1} &amp;&amp; git push origin --delete ${1}; };f\"\n</code>",
        "<code>git config --global alias.rmbranch \\\n'!f(){ git branch -d ${1} &amp;&amp; git push origin --delete ${1}; };f'\n</code>",
        "<code>-d</code>",
        "<code>-D</code>",
        "<code>&amp;&amp;</code>",
        "<code>;</code>",
        "<code>git branch -d branch_name \n</code>",
        "<code>-D</code>",
        "<code>-d</code>",
        "<code>git branch -D branch_name\n</code>",
        "<code>git push origin :branchname  \n\ngit push origin --delete branchname \n</code>",
        "<code>git checkout master</code>",
        "<code>git push origin --delete &lt;branch-name&gt;</code>",
        "<code>git branch --delete &lt;branch-name&gt;</code>",
        "<code>git remote prune origin</code>",
        "<code>$ git remote prune origin\nPruning origin\nURL: git@example.com/yourrepo.git\n * [pruned] origin/some-branchs\n</code>",
        "<code>git branch -r</code>",
        "<code>grb delete branch\n</code>",
        "<code>publish</code>",
        "<code>track</code>",
        "<code>$ git branch -d contact-form\n</code>",
        "<code>git push origin --delete contact-form\n</code>",
        "<code>git push origin :&lt;branchname&gt;</code>",
        "<code>git branch -D &lt;branchname&gt;</code>",
        "<code>git push origin :&lt;branchname&gt;</code>",
        "<code>D=branch-name; git branch -D $D; git push origin :$D</code>",
        "<code>git kill branch-name</code>",
        "<code>[alias]\n    kill = \"!f(){ git branch -D \\\"$1\\\";  git push origin --delete \\\"$1\\\"; };f\"\n</code>",
        "<code>git branch -D</code>",
        "<code>-d</code>",
        "<code>git branch -d &lt;branch-name&gt;\ngit push origin :&lt;branch-name&gt;\n</code>",
        "<code>git push origin --delete branchName\n</code>",
        "<code>git push origin :branchName\n</code>",
        "<code>git branch -d my_branch\n</code>",
        "<code>Rebase/Merge in progress</code>",
        "<code>git branch -D my_branch\n</code>",
        "<code>git push --delete origin my_branch\n</code>",
        "<code>git push origin :my_branch   # easy to remember both will do the same.\n</code>",
        "<code>$ git push origin :branch-or-tag-name\nerror: dst refspec branch-or-tag-name matches more than one.\nerror: failed to push some refs to 'git@github.com:SomeName/some-repo.git'\n</code>",
        "<code>git push origin :refs/heads/branch-or-tag-name\n</code>",
        "<code>git push origin :refs/tags/branch-or-tag-name\n</code>",
        "<code>function gitdelete(){\n    git push origin --delete $1\n    git branch -D $1\n}\n</code>",
        "<code>master</code>",
        "<code>gitdelete my-branch-name\n</code>",
        "<code>my-branch-name</code>",
        "<code>origin</code>",
        "<code>--delete \"$@\"</code>",
        "<code>-D \"$@\"</code>",
        "<code>$1</code>",
        "<code>git branch -d</code>",
        "<code>&amp;&amp;</code>",
        "<code>git branch -D branch_to_delete</code>",
        "<code>some_other_branch</code>",
        "<code>git checkout some_other_branch\ngit push origin :branch_to_delete\ngit branch -d branch_to_delete\n</code>",
        "<code>git fetch</code>",
        "<code>git remote prune origin</code>",
        "<code>git fetch\ngit remote prune origin\ngit branch -r\n</code>",
        "<code>git push origin :bugfix  # Deletes remote branch\ngit branch -d bugfix     # Must delete local branch manually\n</code>",
        "<code>git branch -D bugfix\n</code>",
        "<code>git remote prune origin\n</code>",
        "<code>git branch --delete &lt;branch&gt;\n</code>",
        "<code>git ls-remote\n</code>",
        "<code>&lt;branch&gt;</code>",
        "<code>branch</code>",
        "<code>git-remove</code>",
        "<code>git remove temp</code>",
        "<code>#!/usr/bin/env ruby\nrequire 'io/console'\n\nif __FILE__ == $0\n      branch_name = ARGV[0] if (ARGV[0])\n      print \"Press Y to force delete local and remote branch #{branch_name}...\"\n    response = STDIN.getch\n    if ['Y', 'y', 'yes'].include?(response)\n      puts \"\\nContinuing.\"\n      `git branch -D #{branch_name}`\n      `git branch -D -r origin/#{branch_name}`\n      `git push origin --delete #{branch_name}` \n    else\n      puts \"\\nQuitting.\"\n    end\nend\n</code>"
      ],
      "path": "stack.angular",
      "creation_date": 1262653935
    }
  ],
  "name": "angular"
}